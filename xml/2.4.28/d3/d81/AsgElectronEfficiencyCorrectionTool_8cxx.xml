<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d3/d81/AsgElectronEfficiencyCorrectionTool_8cxx" kind="file">
    <compoundname>AsgElectronEfficiencyCorrectionTool.cxx</compoundname>
    <includes refid="d9/da9/AsgElectronEfficiencyCorrectionTool_8h" local="yes">ElectronEfficiencyCorrection/AsgElectronEfficiencyCorrectionTool.h</includes>
    <includes refid="d3/d32/PathResolver_8h" local="yes">PathResolver/PathResolver.h</includes>
    <includes local="no">string</includes>
    <includes local="no">cfloat</includes>
    <includes local="no">iostream</includes>
    <includes local="no">iomanip</includes>
    <includes local="no">limits.h</includes>
    <includes local="no">fstream</includes>
    <includes local="no">sys/types.h</includes>
    <includes local="no">dirent.h</includes>
    <includes local="no">errno.h</includes>
    <includes refid="d0/dcb/PATCoreEnums_8h" local="yes">PATCore/PATCoreEnums.h</includes>
    <includes refid="dc/db4/Electron_8h" local="yes">xAODEgamma/Electron.h</includes>
    <includes refid="d9/d60/EventInfo_8h" local="yes">xAODEventInfo/EventInfo.h</includes>
    <includes local="no">boost/algorithm/string.hpp</includes>
    <includes local="yes">AthAnalysisBaseComps/AthAnalysisHelper.h</includes>
    <includes refid="d4/d00/FileMetaData_8h" local="yes">xAODMetaData/FileMetaData.h</includes>
    <includes refid="d4/d4c/TElectronEfficiencyCorrectionTool_8h" local="yes">ElectronEfficiencyCorrection/TElectronEfficiencyCorrectionTool.h</includes>
    <includes local="yes">TSystem.h</includes>
    <incdepgraph>
      <node id="117712">
        <label>list</label>
      </node>
      <node id="117720">
        <label>AthContainers/tools/DVL_algorithms.icc</label>
        <link refid="df/daa/DVL__algorithms_8icc"/>
        <childnode refid="117706" relation="include">
        </childnode>
        <childnode refid="117713" relation="include">
        </childnode>
        <childnode refid="117569" relation="include">
        </childnode>
        <childnode refid="117702" relation="include">
        </childnode>
        <childnode refid="117576" relation="include">
        </childnode>
      </node>
      <node id="117706">
        <label>AthContainers/tools/DVLNoBase.h</label>
        <link refid="d7/d92/DVLNoBase_8h"/>
      </node>
      <node id="117616">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="117663">
        <label>ElectronEfficiencyCorrection/IAsgElectronEfficiencyCorrectionTool.h</label>
        <link refid="dc/d25/IAsgElectronEfficiencyCorrectionTool_8h_source"/>
        <childnode refid="117633" relation="include">
        </childnode>
        <childnode refid="117664" relation="include">
        </childnode>
        <childnode refid="117648" relation="include">
        </childnode>
        <childnode refid="117640" relation="include">
        </childnode>
      </node>
      <node id="117726">
        <label>AthContainers/tools/DVLDataBucket.h</label>
        <link refid="d4/d16/DVLDataBucket_8h"/>
        <childnode refid="117727" relation="include">
        </childnode>
        <childnode refid="117707" relation="include">
        </childnode>
        <childnode refid="117582" relation="include">
        </childnode>
        <childnode refid="117728" relation="include">
        </childnode>
      </node>
      <node id="117618">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="117575" relation="include">
        </childnode>
        <childnode refid="117577" relation="include">
        </childnode>
        <childnode refid="117582" relation="include">
        </childnode>
        <childnode refid="117583" relation="include">
        </childnode>
      </node>
      <node id="117633">
        <label>AsgTools/IAsgTool.h</label>
        <link refid="df/dd4/IAsgTool_8h_source"/>
        <childnode refid="117563" relation="include">
        </childnode>
        <childnode refid="117632" relation="include">
        </childnode>
        <childnode refid="117634" relation="include">
        </childnode>
        <childnode refid="117635" relation="include">
        </childnode>
      </node>
      <node id="117754">
        <label>xAODEventInfo/EventInfo.h</label>
        <link refid="d9/d60/EventInfo_8h_source"/>
        <childnode refid="117755" relation="include">
        </childnode>
        <childnode refid="117694" relation="include">
        </childnode>
      </node>
      <node id="117619">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="117585">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="117571" relation="include">
        </childnode>
        <childnode refid="117573" relation="include">
        </childnode>
        <childnode refid="117586" relation="include">
        </childnode>
        <childnode refid="117584" relation="include">
        </childnode>
      </node>
      <node id="117757">
        <label>boost/algorithm/string.hpp</label>
      </node>
      <node id="117738">
        <label>EventPrimitives/EventPrimitives.h</label>
        <link refid="d1/d54/EventPrimitives_8h_source"/>
        <childnode refid="117739" relation="include">
        </childnode>
        <childnode refid="117740" relation="include">
        </childnode>
        <childnode refid="117741" relation="include">
        </childnode>
      </node>
      <node id="117581">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="117668">
        <label>iomanip</label>
      </node>
      <node id="117583">
        <label>functional</label>
      </node>
      <node id="117640">
        <label>PATInterfaces/ISystematicsTool.h</label>
        <link refid="d6/db3/ISystematicsTool_8h_source"/>
        <childnode refid="117633" relation="include">
        </childnode>
        <childnode refid="117641" relation="include">
        </childnode>
        <childnode refid="117642" relation="include">
        </childnode>
        <childnode refid="117646" relation="include">
        </childnode>
      </node>
      <node id="117703">
        <label>boost/version.hpp</label>
      </node>
      <node id="117580">
        <label>limits</label>
      </node>
      <node id="117586">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="117614">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="117635">
        <label>GaudiKernel/IAlgTool.h</label>
      </node>
      <node id="117564">
        <label>iterator</label>
      </node>
      <node id="117691">
        <label>xAODCaloEvent/versions/CaloClusterBadChannelData_v1.h</label>
        <link refid="d5/d3a/CaloClusterBadChannelData__v1_8h_source"/>
        <childnode refid="117688" relation="include">
        </childnode>
        <childnode refid="117562" relation="include">
        </childnode>
      </node>
      <node id="117759">
        <label>xAODMetaData/FileMetaData.h</label>
        <link refid="d4/d00/FileMetaData_8h_source"/>
        <childnode refid="117760" relation="include">
        </childnode>
        <childnode refid="117694" relation="include">
        </childnode>
      </node>
      <node id="117602">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="117563" relation="include">
        </childnode>
        <childnode refid="117603" relation="include">
        </childnode>
      </node>
      <node id="117693">
        <label>CaloEvent/CaloRecoStatus.h</label>
      </node>
      <node id="117652">
        <label>TObjArray.h</label>
      </node>
      <node id="117742">
        <label>CxxUtils/final.h</label>
        <link refid="da/d9b/final_8h"/>
      </node>
      <node id="117725">
        <label>SGTools/ClassName.h</label>
      </node>
      <node id="117731">
        <label>AthContainers/DataVector.icc</label>
        <link refid="da/de6/DataVector_8icc"/>
        <childnode refid="117732" relation="include">
        </childnode>
        <childnode refid="117701" relation="include">
        </childnode>
        <childnode refid="117580" relation="include">
        </childnode>
        <childnode refid="117583" relation="include">
        </childnode>
        <childnode refid="117733" relation="include">
        </childnode>
      </node>
      <node id="117626">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="117572" relation="include">
        </childnode>
        <childnode refid="117627" relation="include">
        </childnode>
        <childnode refid="117628" relation="include">
        </childnode>
        <childnode refid="117595" relation="include">
        </childnode>
        <childnode refid="117563" relation="include">
        </childnode>
      </node>
      <node id="117599">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="117562" relation="include">
        </childnode>
        <childnode refid="117578" relation="include">
        </childnode>
      </node>
      <node id="117588">
        <label>stdint.h</label>
      </node>
      <node id="117713">
        <label>AthContainers/tools/DVLCast.h</label>
        <link refid="df/d5c/DVLCast_8h"/>
        <childnode refid="117580" relation="include">
        </childnode>
        <childnode refid="117669" relation="include">
        </childnode>
        <childnode refid="117595" relation="include">
        </childnode>
        <childnode refid="117578" relation="include">
        </childnode>
        <childnode refid="117573" relation="include">
        </childnode>
      </node>
      <node id="117699">
        <label>AthContainers/IndexTrackingPolicy.h</label>
        <link refid="d0/da5/IndexTrackingPolicy_8h"/>
      </node>
      <node id="117596">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="117573" relation="include">
        </childnode>
        <childnode refid="117595" relation="include">
        </childnode>
      </node>
      <node id="117591">
        <label>RVersion.h</label>
      </node>
      <node id="117574">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="117575" relation="include">
        </childnode>
        <childnode refid="117582" relation="include">
        </childnode>
        <childnode refid="117583" relation="include">
        </childnode>
      </node>
      <node id="117662">
        <label>AthenaBaseComps/AthMsgStreamMacros.h</label>
      </node>
      <node id="117696">
        <label>xAODCaloEvent/versions/CaloClusterContainer_v1.h</label>
        <link refid="d8/dda/CaloClusterContainer__v1_8h_source"/>
        <childnode refid="117697" relation="include">
        </childnode>
        <childnode refid="117734" relation="include">
        </childnode>
        <childnode refid="117686" relation="include">
        </childnode>
      </node>
      <node id="117579">
        <label>cmath</label>
      </node>
      <node id="117673">
        <label>errno.h</label>
      </node>
      <node id="117630">
        <label>cassert</label>
      </node>
      <node id="117704">
        <label>boost/mpl/if.hpp</label>
      </node>
      <node id="117722">
        <label>boost/static_assert.hpp</label>
      </node>
      <node id="117628">
        <label>stdexcept</label>
      </node>
      <node id="117636">
        <label>AsgTools/MsgLevel.h</label>
        <link refid="de/d80/MsgLevel_8h"/>
        <childnode refid="117563" relation="include">
        </childnode>
        <childnode refid="117632" relation="include">
        </childnode>
        <childnode refid="117637" relation="include">
        </childnode>
      </node>
      <node id="117617">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="117740">
        <label>Eigen/Core</label>
      </node>
      <node id="117710">
        <label>boost/type_traits/is_pointer.hpp</label>
      </node>
      <node id="117746">
        <label>xAODTracking/VertexContainerFwd.h</label>
        <link refid="d0/dc4/VertexContainerFwd_8h_source"/>
        <childnode refid="117697" relation="include">
        </childnode>
        <childnode refid="117747" relation="include">
        </childnode>
      </node>
      <node id="117752">
        <label>xAODTracking/TrackParticleContainerFwd.h</label>
        <link refid="de/dea/TrackParticleContainerFwd_8h_source"/>
        <childnode refid="117697" relation="include">
        </childnode>
        <childnode refid="117734" relation="include">
        </childnode>
        <childnode refid="117753" relation="include">
        </childnode>
      </node>
      <node id="117717">
        <label>boost/iterator/iterator_adaptor.hpp</label>
      </node>
      <node id="117681">
        <label>TLorentzVector.h</label>
      </node>
      <node id="117632">
        <label>AsgTools/AsgToolsConf.h</label>
        <link refid="df/db7/AsgToolsConf_8h_source"/>
      </node>
      <node id="117688">
        <label>CaloGeoHelpers/CaloSampling.h</label>
        <link refid="d7/d85/CaloSampling_8h_source"/>
        <childnode refid="117563" relation="include">
        </childnode>
        <childnode refid="117689" relation="include">
        </childnode>
      </node>
      <node id="117563">
        <label>string</label>
      </node>
      <node id="117620">
        <label>AthContainers/AuxVectorData.h</label>
        <link refid="d9/df2/AuxVectorData_8h"/>
        <childnode refid="117572" relation="include">
        </childnode>
        <childnode refid="117571" relation="include">
        </childnode>
        <childnode refid="117602" relation="include">
        </childnode>
        <childnode refid="117599" relation="include">
        </childnode>
        <childnode refid="117587" relation="include">
        </childnode>
        <childnode refid="117621" relation="include">
        </childnode>
        <childnode refid="117622" relation="include">
        </childnode>
        <childnode refid="117605" relation="include">
        </childnode>
        <childnode refid="117562" relation="include">
        </childnode>
        <childnode refid="117577" relation="include">
        </childnode>
        <childnode refid="117578" relation="include">
        </childnode>
        <childnode refid="117623" relation="include">
        </childnode>
        <childnode refid="117624" relation="include">
        </childnode>
        <childnode refid="117612" relation="include">
        </childnode>
        <childnode refid="117625" relation="include">
        </childnode>
      </node>
      <node id="117594">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="117573" relation="include">
        </childnode>
        <childnode refid="117595" relation="include">
        </childnode>
      </node>
      <node id="117745">
        <label>versions/TrackParticle_v1.h</label>
        <link refid="d2/d7f/TrackParticle__v1_8h_source"/>
        <childnode refid="117687" relation="include">
        </childnode>
        <childnode refid="117588" relation="include">
        </childnode>
        <childnode refid="117676" relation="include">
        </childnode>
        <childnode refid="117697" relation="include">
        </childnode>
        <childnode refid="117680" relation="include">
        </childnode>
        <childnode refid="117743" relation="include">
        </childnode>
        <childnode refid="117746" relation="include">
        </childnode>
        <childnode refid="117748" relation="include">
        </childnode>
        <childnode refid="117749" relation="include">
        </childnode>
      </node>
      <node id="117623">
        <label>AthContainers/tools/likely.h</label>
        <link refid="d6/dd6/likely_8h"/>
      </node>
      <node id="117714">
        <label>AthContainers/tools/DVLIterator.h</label>
        <link refid="d3/dc7/DVLIterator_8h_source"/>
        <childnode refid="117698" relation="include">
        </childnode>
        <childnode refid="117713" relation="include">
        </childnode>
        <childnode refid="117715" relation="include">
        </childnode>
        <childnode refid="117717" relation="include">
        </childnode>
        <childnode refid="117703" relation="include">
        </childnode>
        <childnode refid="117564" relation="include">
        </childnode>
        <childnode refid="117578" relation="include">
        </childnode>
      </node>
      <node id="117674">
        <label>xAODEgamma/Electron.h</label>
        <link refid="dc/db4/Electron_8h_source"/>
        <childnode refid="117675" relation="include">
        </childnode>
      </node>
      <node id="117727">
        <label>SGTools/DataBucket.h</label>
      </node>
      <node id="117736">
        <label>xAODPrimitives/IsolationType.h</label>
        <link refid="d2/d36/IsolationType_8h_source"/>
      </node>
      <node id="117565">
        <label>map</label>
      </node>
      <node id="117728">
        <label>AthContainers/tools/DVLDataBucket.icc</label>
        <link refid="d3/d21/DVLDataBucket_8icc"/>
        <childnode refid="117729" relation="include">
        </childnode>
      </node>
      <node id="117735">
        <label>xAODPrimitives/IsolationCorrection.h</label>
        <link refid="d3/de5/xAODPrimitives_2xAODPrimitives_2IsolationCorrection_8h_source"/>
        <childnode refid="117687" relation="include">
        </childnode>
        <childnode refid="117562" relation="include">
        </childnode>
      </node>
      <node id="117729">
        <label>SGTools/IRegisterTransient.h</label>
      </node>
      <node id="117592">
        <label>RootMetaSelection.h</label>
      </node>
      <node id="117609">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="117719">
        <label>AthContainers/tools/DVL_algorithms.h</label>
        <link refid="d0/d7a/DVL__algorithms_8h"/>
        <childnode refid="117714" relation="include">
        </childnode>
        <childnode refid="117564" relation="include">
        </childnode>
        <childnode refid="117576" relation="include">
        </childnode>
        <childnode refid="117720" relation="include">
        </childnode>
      </node>
      <node id="117666">
        <label>cfloat</label>
      </node>
      <node id="117670">
        <label>fstream</label>
      </node>
      <node id="117624">
        <label>AthContainers/tools/assume.h</label>
        <link refid="d2/d20/assume_8h"/>
      </node>
      <node id="117606">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="117715">
        <label>AthContainers/tools/ElementProxy.h</label>
        <link refid="db/d26/ElementProxy_8h"/>
        <childnode refid="117698" relation="include">
        </childnode>
        <childnode refid="117590" relation="include">
        </childnode>
        <childnode refid="117582" relation="include">
        </childnode>
        <childnode refid="117716" relation="include">
        </childnode>
      </node>
      <node id="117637">
        <label>GaudiKernel/IMessageSvc.h</label>
      </node>
      <node id="117570">
        <label>AthContainersInterfaces/IAuxElement.h</label>
        <link refid="dd/d7a/IAuxElement_8h"/>
      </node>
      <node id="117590">
        <label>AthLinks/tools/selection_ns.h</label>
        <link refid="d3/dec/selection__ns_8h"/>
        <childnode refid="117591" relation="include">
        </childnode>
        <childnode refid="117592" relation="include">
        </childnode>
      </node>
      <node id="117622">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="117615">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="117753">
        <label>xAODTracking/TrackParticleFwd.h</label>
        <link refid="d1/dc4/TrackParticleFwd_8h_source"/>
      </node>
      <node id="117669">
        <label>limits.h</label>
      </node>
      <node id="117639">
        <label>AsgTools/AsgMetadataTool.h</label>
        <link refid="dc/dde/AsgMetadataTool_8h_source"/>
        <childnode refid="117631" relation="include">
        </childnode>
      </node>
      <node id="117708">
        <label>AthContainers/tools/ClassID.h</label>
        <link refid="de/de2/ClassID_8h"/>
        <childnode refid="117709" relation="include">
        </childnode>
      </node>
      <node id="117653">
        <label>TH1.h</label>
      </node>
      <node id="117601">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="117602" relation="include">
        </childnode>
        <childnode refid="117580" relation="include">
        </childnode>
        <childnode refid="117588" relation="include">
        </childnode>
        <childnode refid="117604" relation="include">
        </childnode>
      </node>
      <node id="117646">
        <label>PATInterfaces/SystematicSet.h</label>
        <link refid="d4/db8/SystematicSet_8h_source"/>
        <childnode refid="117643" relation="include">
        </childnode>
        <childnode refid="117645" relation="include">
        </childnode>
        <childnode refid="117562" relation="include">
        </childnode>
        <childnode refid="117563" relation="include">
        </childnode>
        <childnode refid="117583" relation="include">
        </childnode>
        <childnode refid="117641" relation="include">
        </childnode>
        <childnode refid="117642" relation="include">
        </childnode>
      </node>
      <node id="117656">
        <label>PATCore/TCalculatorToolBase.h</label>
        <link refid="de/d54/TCalculatorToolBase_8h_source"/>
        <childnode refid="117568" relation="include">
        </childnode>
        <childnode refid="117567" relation="include">
        </childnode>
      </node>
      <node id="117572">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="117573" relation="include">
        </childnode>
        <childnode refid="117574" relation="include">
        </childnode>
      </node>
      <node id="117677">
        <label>AthLinks/ElementLinkBase.h</label>
        <link refid="d0/d16/ElementLinkBase_8h_source"/>
        <childnode refid="117588" relation="include">
        </childnode>
      </node>
      <node id="117741">
        <label>Eigen/Dense</label>
      </node>
      <node id="117642">
        <label>PATInterfaces/SystematicVariation.h</label>
        <link refid="d1/def/SystematicVariation_8h_source"/>
        <childnode refid="117643" relation="include">
        </childnode>
        <childnode refid="117644" relation="include">
        </childnode>
        <childnode refid="117645" relation="include">
        </childnode>
        <childnode refid="117563" relation="include">
        </childnode>
      </node>
      <node id="117575">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="117576" relation="include">
        </childnode>
        <childnode refid="117577" relation="include">
        </childnode>
        <childnode refid="117564" relation="include">
        </childnode>
        <childnode refid="117573" relation="include">
        </childnode>
        <childnode refid="117578" relation="include">
        </childnode>
        <childnode refid="117579" relation="include">
        </childnode>
        <childnode refid="117580" relation="include">
        </childnode>
        <childnode refid="117563" relation="include">
        </childnode>
        <childnode refid="117581" relation="include">
        </childnode>
      </node>
      <node id="117701">
        <label>AthContainers/tools/ATHCONTAINERS_ASSERT.h</label>
        <link refid="de/d6b/ATHCONTAINERS__ASSERT_8h"/>
        <childnode refid="117630" relation="include">
        </childnode>
      </node>
      <node id="117680">
        <label>xAODBase/IParticle.h</label>
        <link refid="d5/dac/IParticle_8h_source"/>
        <childnode refid="117681" relation="include">
        </childnode>
        <childnode refid="117569" relation="include">
        </childnode>
        <childnode refid="117682" relation="include">
        </childnode>
        <childnode refid="117586" relation="include">
        </childnode>
      </node>
      <node id="117682">
        <label>ObjectType.h</label>
        <link refid="d8/d04/ObjectType_8h_source"/>
        <childnode refid="117644" relation="include">
        </childnode>
      </node>
      <node id="117657">
        <label>PATCore/PATCoreEnums.h</label>
        <link refid="d0/dcb/PATCoreEnums_8h_source"/>
      </node>
      <node id="117671">
        <label>sys/types.h</label>
      </node>
      <node id="117760">
        <label>xAODMetaData/versions/FileMetaData_v1.h</label>
        <link refid="dd/d79/FileMetaData__v1_8h_source"/>
        <childnode refid="117644" relation="include">
        </childnode>
        <childnode refid="117569" relation="include">
        </childnode>
        <childnode refid="117756" relation="include">
        </childnode>
      </node>
      <node id="117755">
        <label>xAODEventInfo/versions/EventInfo_v1.h</label>
        <link refid="d4/da0/EventInfo__v1_8h_source"/>
        <childnode refid="117588" relation="include">
        </childnode>
        <childnode refid="117645" relation="include">
        </childnode>
        <childnode refid="117562" relation="include">
        </childnode>
        <childnode refid="117563" relation="include">
        </childnode>
        <childnode refid="117644" relation="include">
        </childnode>
        <childnode refid="117569" relation="include">
        </childnode>
        <childnode refid="117697" relation="include">
        </childnode>
        <childnode refid="117676" relation="include">
        </childnode>
        <childnode refid="117756" relation="include">
        </childnode>
      </node>
      <node id="117686">
        <label>xAODCaloEvent/versions/CaloCluster_v1.h</label>
        <link refid="dc/d4b/CaloCluster__v1_8h_source"/>
        <childnode refid="117588" relation="include">
        </childnode>
        <childnode refid="117687" relation="include">
        </childnode>
        <childnode refid="117680" relation="include">
        </childnode>
        <childnode refid="117688" relation="include">
        </childnode>
        <childnode refid="117690" relation="include">
        </childnode>
        <childnode refid="117676" relation="include">
        </childnode>
        <childnode refid="117692" relation="include">
        </childnode>
        <childnode refid="117693" relation="include">
        </childnode>
      </node>
      <node id="117649">
        <label>ElectronEfficiencyCorrection/TElectronEfficiencyCorrectionTool.h</label>
        <link refid="d4/d4c/TElectronEfficiencyCorrectionTool_8h_source"/>
        <childnode refid="117650" relation="include">
        </childnode>
        <childnode refid="117562" relation="include">
        </childnode>
        <childnode refid="117563" relation="include">
        </childnode>
        <childnode refid="117568" relation="include">
        </childnode>
        <childnode refid="117651" relation="include">
        </childnode>
        <childnode refid="117652" relation="include">
        </childnode>
        <childnode refid="117653" relation="include">
        </childnode>
        <childnode refid="117654" relation="include">
        </childnode>
        <childnode refid="117655" relation="include">
        </childnode>
        <childnode refid="117567" relation="include">
        </childnode>
        <childnode refid="117656" relation="include">
        </childnode>
        <childnode refid="117657" relation="include">
        </childnode>
        <childnode refid="117658" relation="include">
        </childnode>
      </node>
      <node id="117648">
        <label>PATInterfaces/CorrectionCode.h</label>
        <link refid="d8/dab/CorrectionCode_8h_source"/>
      </node>
      <node id="117716">
        <label>AthContainers/tools/ElementProxy.icc</label>
        <link refid="d6/d70/ElementProxy_8icc"/>
        <childnode refid="117713" relation="include">
        </childnode>
        <childnode refid="117701" relation="include">
        </childnode>
      </node>
      <node id="117675">
        <label>xAODEgamma/versions/Electron_v1.h</label>
        <link refid="df/d27/Electron__v1_8h_source"/>
        <childnode refid="117676" relation="include">
        </childnode>
        <childnode refid="117679" relation="include">
        </childnode>
        <childnode refid="117684" relation="include">
        </childnode>
        <childnode refid="117743" relation="include">
        </childnode>
        <childnode refid="117744" relation="include">
        </childnode>
        <childnode refid="117750" relation="include">
        </childnode>
        <childnode refid="117742" relation="include">
        </childnode>
        <childnode refid="117605" relation="include">
        </childnode>
      </node>
      <node id="117595">
        <label>typeinfo</label>
      </node>
      <node id="117743">
        <label>xAODTracking/TrackingPrimitives.h</label>
        <link refid="d2/d4c/TrackingPrimitives_8h_source"/>
        <childnode refid="117738" relation="include">
        </childnode>
      </node>
      <node id="117629">
        <label>AthContainers/AuxElement.icc</label>
        <link refid="d2/d37/AuxElement_8icc"/>
        <childnode refid="117623" relation="include">
        </childnode>
        <childnode refid="117630" relation="include">
        </childnode>
      </node>
      <node id="117685">
        <label>xAODCaloEvent/CaloCluster.h</label>
        <link refid="db/d88/CaloCluster_8h_source"/>
        <childnode refid="117686" relation="include">
        </childnode>
        <childnode refid="117694" relation="include">
        </childnode>
      </node>
      <node id="117697">
        <label>AthContainers/DataVector.h</label>
        <link refid="d7/dd6/DataVector_8h"/>
        <childnode refid="117626" relation="include">
        </childnode>
        <childnode refid="117698" relation="include">
        </childnode>
        <childnode refid="117699" relation="include">
        </childnode>
        <childnode refid="117700" relation="include">
        </childnode>
        <childnode refid="117706" relation="include">
        </childnode>
        <childnode refid="117707" relation="include">
        </childnode>
        <childnode refid="117713" relation="include">
        </childnode>
        <childnode refid="117714" relation="include">
        </childnode>
        <childnode refid="117718" relation="include">
        </childnode>
        <childnode refid="117719" relation="include">
        </childnode>
        <childnode refid="117715" relation="include">
        </childnode>
        <childnode refid="117721" relation="include">
        </childnode>
        <childnode refid="117590" relation="include">
        </childnode>
        <childnode refid="117722" relation="include">
        </childnode>
        <childnode refid="117723" relation="include">
        </childnode>
        <childnode refid="117717" relation="include">
        </childnode>
        <childnode refid="117562" relation="include">
        </childnode>
        <childnode refid="117595" relation="include">
        </childnode>
        <childnode refid="117583" relation="include">
        </childnode>
        <childnode refid="117667" relation="include">
        </childnode>
        <childnode refid="117576" relation="include">
        </childnode>
        <childnode refid="117628" relation="include">
        </childnode>
        <childnode refid="117564" relation="include">
        </childnode>
        <childnode refid="117586" relation="include">
        </childnode>
        <childnode refid="117724" relation="include">
        </childnode>
        <childnode refid="117726" relation="include">
        </childnode>
        <childnode refid="117730" relation="include">
        </childnode>
        <childnode refid="117731" relation="include">
        </childnode>
      </node>
      <node id="117643">
        <label>PATInterfaces/Global.h</label>
        <link refid="dd/d0c/PATInterfaces_2PATInterfaces_2Global_8h_source"/>
      </node>
      <node id="117687">
        <label>bitset</label>
      </node>
      <node id="117604">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="117678">
        <label>AthLinks/tools/TypeTools.h</label>
        <link refid="dd/db1/TypeTools_8h_source"/>
      </node>
      <node id="117621">
        <label>AthenaKernel/ILockable.h</label>
      </node>
      <node id="117661">
        <label>AsgTools/MsgStreamMacros.h</label>
        <link refid="d3/ded/AsgTools_2AsgTools_2MsgStreamMacros_8h_source"/>
        <childnode refid="117632" relation="include">
        </childnode>
        <childnode refid="117636" relation="include">
        </childnode>
        <childnode refid="117662" relation="include">
        </childnode>
      </node>
      <node id="117589">
        <label>AthLinks/DataLinkBase.h</label>
        <link refid="db/da8/DataLinkBase_8h_source"/>
        <childnode refid="117588" relation="include">
        </childnode>
      </node>
      <node id="117603">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="117608">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="117566">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="117707">
        <label>AthContainers/tools/DVLInfo.h</label>
        <link refid="d3/d2e/DVLInfo_8h"/>
        <childnode refid="117708" relation="include">
        </childnode>
        <childnode refid="117700" relation="include">
        </childnode>
        <childnode refid="117595" relation="include">
        </childnode>
        <childnode refid="117573" relation="include">
        </childnode>
        <childnode refid="117581" relation="include">
        </childnode>
        <childnode refid="117710" relation="include">
        </childnode>
        <childnode refid="117607" relation="include">
        </childnode>
        <childnode refid="117711" relation="include">
        </childnode>
      </node>
      <node id="117584">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="117739">
        <label>unistd.h</label>
      </node>
      <node id="117724">
        <label>AthContainers/ClassName.h</label>
        <link refid="dd/d6b/AthContainers_2AthContainers_2ClassName_8h_source"/>
        <childnode refid="117725" relation="include">
        </childnode>
      </node>
      <node id="117593">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="117572" relation="include">
        </childnode>
        <childnode refid="117594" relation="include">
        </childnode>
        <childnode refid="117596" relation="include">
        </childnode>
        <childnode refid="117597" relation="include">
        </childnode>
        <childnode refid="117610" relation="include">
        </childnode>
        <childnode refid="117612" relation="include">
        </childnode>
        <childnode refid="117573" relation="include">
        </childnode>
        <childnode refid="117595" relation="include">
        </childnode>
        <childnode refid="117562" relation="include">
        </childnode>
        <childnode refid="117618" relation="include">
        </childnode>
        <childnode refid="117619" relation="include">
        </childnode>
      </node>
      <node id="117761">
        <label>TSystem.h</label>
      </node>
      <node id="117562">
        <label>vector</label>
      </node>
      <node id="117734">
        <label>xAODBase/IParticleContainer.h</label>
        <link refid="dd/d2d/IParticleContainer_8h_source"/>
        <childnode refid="117697" relation="include">
        </childnode>
        <childnode refid="117680" relation="include">
        </childnode>
        <childnode refid="117584" relation="include">
        </childnode>
      </node>
      <node id="117732">
        <label>AthContainers/tools/CompareAndPrint.h</label>
        <link refid="d5/da8/CompareAndPrint_8h_source"/>
        <childnode refid="117576" relation="include">
        </childnode>
        <childnode refid="117595" relation="include">
        </childnode>
      </node>
      <node id="117647">
        <label>PATInterfaces/SystematicRegistry.h</label>
        <link refid="de/d22/SystematicRegistry_8h_source"/>
        <childnode refid="117643" relation="include">
        </childnode>
        <childnode refid="117646" relation="include">
        </childnode>
      </node>
      <node id="117651">
        <label>TKey.h</label>
      </node>
      <node id="117733">
        <label>AthContainers/tools/DVLEltBaseInfo.icc</label>
        <link refid="dd/d5e/DVLEltBaseInfo_8icc"/>
      </node>
      <node id="117690">
        <label>xAODCaloEvent/CaloClusterBadChannelData.h</label>
        <link refid="d1/d93/CaloClusterBadChannelData_8h_source"/>
        <childnode refid="117691" relation="include">
        </childnode>
      </node>
      <node id="117577">
        <label>utility</label>
      </node>
      <node id="117730">
        <label>SGTools/DataBucketTraitFwd.h</label>
      </node>
      <node id="117605">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="117679">
        <label>xAODEgamma/versions/Egamma_v1.h</label>
        <link refid="d9/d42/Egamma__v1_8h_source"/>
        <childnode refid="117676" relation="include">
        </childnode>
        <childnode refid="117680" relation="include">
        </childnode>
        <childnode refid="117683" relation="include">
        </childnode>
        <childnode refid="117684" relation="include">
        </childnode>
        <childnode refid="117685" relation="include">
        </childnode>
        <childnode refid="117695" relation="include">
        </childnode>
        <childnode refid="117735" relation="include">
        </childnode>
        <childnode refid="117736" relation="include">
        </childnode>
        <childnode refid="117737" relation="include">
        </childnode>
        <childnode refid="117738" relation="include">
        </childnode>
        <childnode refid="117742" relation="include">
        </childnode>
        <childnode refid="117605" relation="include">
        </childnode>
        <childnode refid="117588" relation="include">
        </childnode>
      </node>
      <node id="117650">
        <label>sstream</label>
      </node>
      <node id="117695">
        <label>xAODCaloEvent/CaloClusterContainer.h</label>
        <link refid="da/dc3/CaloClusterContainer_8h_source"/>
        <childnode refid="117685" relation="include">
        </childnode>
        <childnode refid="117696" relation="include">
        </childnode>
        <childnode refid="117694" relation="include">
        </childnode>
      </node>
      <node id="117747">
        <label>xAODTracking/VertexFwd.h</label>
        <link refid="d9/ddd/VertexFwd_8h_source"/>
      </node>
      <node id="117561">
        <label>ElectronEfficiencyCorrection/AsgElectronEfficiencyCorrectionTool.h</label>
        <link refid="d9/da9/AsgElectronEfficiencyCorrectionTool_8h_source"/>
        <childnode refid="117562" relation="include">
        </childnode>
        <childnode refid="117563" relation="include">
        </childnode>
        <childnode refid="117564" relation="include">
        </childnode>
        <childnode refid="117565" relation="include">
        </childnode>
        <childnode refid="117566" relation="include">
        </childnode>
        <childnode refid="117567" relation="include">
        </childnode>
        <childnode refid="117569" relation="include">
        </childnode>
        <childnode refid="117631" relation="include">
        </childnode>
        <childnode refid="117639" relation="include">
        </childnode>
        <childnode refid="117640" relation="include">
        </childnode>
        <childnode refid="117647" relation="include">
        </childnode>
        <childnode refid="117648" relation="include">
        </childnode>
        <childnode refid="117649" relation="include">
        </childnode>
        <childnode refid="117663" relation="include">
        </childnode>
        <childnode refid="117664" relation="include">
        </childnode>
      </node>
      <node id="117705">
        <label>AthContainers/AuxVectorBase.icc</label>
        <link refid="d4/d50/AuxVectorBase_8icc"/>
      </node>
      <node id="117613">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="117598">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="117567">
        <label>PATCore/TResult.h</label>
        <link refid="de/d64/TResult_8h_source"/>
        <childnode refid="117568" relation="include">
        </childnode>
        <childnode refid="117565" relation="include">
        </childnode>
        <childnode refid="117562" relation="include">
        </childnode>
      </node>
      <node id="117612">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="117613" relation="include">
        </childnode>
        <childnode refid="117614" relation="include">
        </childnode>
        <childnode refid="117615" relation="include">
        </childnode>
        <childnode refid="117616" relation="include">
        </childnode>
        <childnode refid="117617" relation="include">
        </childnode>
      </node>
      <node id="117654">
        <label>TH2.h</label>
      </node>
      <node id="117689">
        <label>CaloGeoHelpers/CaloSampling.def</label>
      </node>
      <node id="117644">
        <label>iosfwd</label>
      </node>
      <node id="117578">
        <label>cstdlib</label>
      </node>
      <node id="117744">
        <label>xAODTracking/TrackParticle.h</label>
        <link refid="d2/d15/TrackParticle_8h_source"/>
        <childnode refid="117745" relation="include">
        </childnode>
        <childnode refid="117694" relation="include">
        </childnode>
      </node>
      <node id="117560">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/ElectronEfficiencyCorrection/Root/AsgElectronEfficiencyCorrectionTool.cxx</label>
        <link refid="AsgElectronEfficiencyCorrectionTool.cxx"/>
        <childnode refid="117561" relation="include">
        </childnode>
        <childnode refid="117665" relation="include">
        </childnode>
        <childnode refid="117563" relation="include">
        </childnode>
        <childnode refid="117666" relation="include">
        </childnode>
        <childnode refid="117667" relation="include">
        </childnode>
        <childnode refid="117668" relation="include">
        </childnode>
        <childnode refid="117669" relation="include">
        </childnode>
        <childnode refid="117670" relation="include">
        </childnode>
        <childnode refid="117671" relation="include">
        </childnode>
        <childnode refid="117672" relation="include">
        </childnode>
        <childnode refid="117673" relation="include">
        </childnode>
        <childnode refid="117657" relation="include">
        </childnode>
        <childnode refid="117674" relation="include">
        </childnode>
        <childnode refid="117754" relation="include">
        </childnode>
        <childnode refid="117757" relation="include">
        </childnode>
        <childnode refid="117758" relation="include">
        </childnode>
        <childnode refid="117759" relation="include">
        </childnode>
        <childnode refid="117649" relation="include">
        </childnode>
        <childnode refid="117761" relation="include">
        </childnode>
      </node>
      <node id="117667">
        <label>iostream</label>
      </node>
      <node id="117627">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="117751">
        <label>xAODTracking/versions/TrackParticleContainer_v1.h</label>
        <link refid="d7/d3b/TrackParticleContainer__v1_8h_source"/>
        <childnode refid="117588" relation="include">
        </childnode>
        <childnode refid="117697" relation="include">
        </childnode>
        <childnode refid="117745" relation="include">
        </childnode>
        <childnode refid="117752" relation="include">
        </childnode>
      </node>
      <node id="117758">
        <label>AthAnalysisBaseComps/AthAnalysisHelper.h</label>
      </node>
      <node id="117571">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="117572" relation="include">
        </childnode>
        <childnode refid="117573" relation="include">
        </childnode>
        <childnode refid="117584" relation="include">
        </childnode>
      </node>
      <node id="117573">
        <label>cstddef</label>
      </node>
      <node id="117660">
        <label>GaudiKernel/MsgStream.h</label>
      </node>
      <node id="117659">
        <label>AsgTools/MsgStream.h</label>
        <link refid="d3/d95/AsgTools_2AsgTools_2MsgStream_8h_source"/>
        <childnode refid="117563" relation="include">
        </childnode>
        <childnode refid="117650" relation="include">
        </childnode>
        <childnode refid="117632" relation="include">
        </childnode>
        <childnode refid="117636" relation="include">
        </childnode>
        <childnode refid="117633" relation="include">
        </childnode>
        <childnode refid="117660" relation="include">
        </childnode>
      </node>
      <node id="117625">
        <label>AthContainers/AuxVectorData.icc</label>
        <link refid="da/de7/AuxVectorData_8icc"/>
        <childnode refid="117593" relation="include">
        </childnode>
        <childnode refid="117585" relation="include">
        </childnode>
        <childnode refid="117571" relation="include">
        </childnode>
        <childnode refid="117623" relation="include">
        </childnode>
        <childnode refid="117624" relation="include">
        </childnode>
      </node>
      <node id="117634">
        <label>AsgTools/AsgToolMacros.h</label>
        <link refid="d1/d68/AsgToolMacros_8h_source"/>
      </node>
      <node id="117756">
        <label>xAODCore/BaseInfo.h</label>
        <link refid="d3/d17/BaseInfo_8h_source"/>
        <childnode refid="117586" relation="include">
        </childnode>
      </node>
      <node id="117684">
        <label>xAODEgamma/EgammaEnums.h</label>
        <link refid="d4/d8f/EgammaEnums_8h_source"/>
      </node>
      <node id="117568">
        <label>TString.h</label>
      </node>
      <node id="117711">
        <label>AthContainers/tools/DVLInfo.icc</label>
        <link refid="da/d83/DVLInfo_8icc"/>
        <childnode refid="117698" relation="include">
        </childnode>
        <childnode refid="117562" relation="include">
        </childnode>
        <childnode refid="117712" relation="include">
        </childnode>
        <childnode refid="117630" relation="include">
        </childnode>
        <childnode refid="117578" relation="include">
        </childnode>
        <childnode refid="117586" relation="include">
        </childnode>
      </node>
      <node id="117597">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="117594" relation="include">
        </childnode>
        <childnode refid="117598" relation="include">
        </childnode>
        <childnode refid="117599" relation="include">
        </childnode>
        <childnode refid="117600" relation="include">
        </childnode>
        <childnode refid="117605" relation="include">
        </childnode>
        <childnode refid="117595" relation="include">
        </childnode>
        <childnode refid="117562" relation="include">
        </childnode>
        <childnode refid="117576" relation="include">
        </childnode>
        <childnode refid="117588" relation="include">
        </childnode>
        <childnode refid="117607" relation="include">
        </childnode>
        <childnode refid="117608" relation="include">
        </childnode>
        <childnode refid="117609" relation="include">
        </childnode>
      </node>
      <node id="117748">
        <label>TrkParameters/TrackParameters.h</label>
      </node>
      <node id="117665">
        <label>PathResolver/PathResolver.h</label>
        <link refid="d3/d32/PathResolver_8h_source"/>
        <childnode refid="117658" relation="include">
        </childnode>
        <childnode refid="117563" relation="include">
        </childnode>
      </node>
      <node id="117683">
        <label>xAODEgamma/EgammaDefs.h</label>
        <link refid="dd/d34/EgammaDefs_8h_source"/>
        <childnode refid="117588" relation="include">
        </childnode>
      </node>
      <node id="117658">
        <label>AsgTools/AsgMessaging.h</label>
        <link refid="d3/d61/AsgMessaging_8h_source"/>
        <childnode refid="117563" relation="include">
        </childnode>
        <childnode refid="117632" relation="include">
        </childnode>
        <childnode refid="117659" relation="include">
        </childnode>
        <childnode refid="117661" relation="include">
        </childnode>
      </node>
      <node id="117664">
        <label>xAODEgamma/ElectronFwd.h</label>
        <link refid="db/d18/ElectronFwd_8h_source"/>
      </node>
      <node id="117607">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="117700">
        <label>AthContainers/AuxVectorBase.h</label>
        <link refid="d7/d18/AuxVectorBase_8h"/>
        <childnode refid="117620" relation="include">
        </childnode>
        <childnode refid="117698" relation="include">
        </childnode>
        <childnode refid="117699" relation="include">
        </childnode>
        <childnode refid="117569" relation="include">
        </childnode>
        <childnode refid="117593" relation="include">
        </childnode>
        <childnode refid="117626" relation="include">
        </childnode>
        <childnode refid="117701" relation="include">
        </childnode>
        <childnode refid="117585" relation="include">
        </childnode>
        <childnode refid="117702" relation="include">
        </childnode>
        <childnode refid="117562" relation="include">
        </childnode>
        <childnode refid="117705" relation="include">
        </childnode>
      </node>
      <node id="117737">
        <label>xAODPrimitives/IsolationFlavour.h</label>
        <link refid="da/d23/IsolationFlavour_8h_source"/>
      </node>
      <node id="117645">
        <label>set</label>
      </node>
      <node id="117694">
        <label>xAODCore/CLASS_DEF.h</label>
        <link refid="d6/d20/xAODCore_2xAODCore_2CLASS__DEF_8h"/>
        <childnode refid="117584" relation="include">
        </childnode>
      </node>
      <node id="117611">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="117600">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="117598" relation="include">
        </childnode>
        <childnode refid="117601" relation="include">
        </childnode>
        <childnode refid="117605" relation="include">
        </childnode>
        <childnode refid="117562" relation="include">
        </childnode>
        <childnode refid="117606" relation="include">
        </childnode>
      </node>
      <node id="117576">
        <label>algorithm</label>
      </node>
      <node id="117692">
        <label>CaloEvent/CaloClusterCellLinkContainer.h</label>
      </node>
      <node id="117721">
        <label>AthContainers/tools/IsMostDerivedFlag.h</label>
        <link refid="d5/dfa/IsMostDerivedFlag_8h"/>
      </node>
      <node id="117749">
        <label>TrkTrack/TrackCollection.h</label>
      </node>
      <node id="117569">
        <label>AthContainers/AuxElement.h</label>
        <link refid="d1/d6f/AuxElement_8h"/>
        <childnode refid="117570" relation="include">
        </childnode>
        <childnode refid="117571" relation="include">
        </childnode>
        <childnode refid="117585" relation="include">
        </childnode>
        <childnode refid="117587" relation="include">
        </childnode>
        <childnode refid="117593" relation="include">
        </childnode>
        <childnode refid="117620" relation="include">
        </childnode>
        <childnode refid="117599" relation="include">
        </childnode>
        <childnode refid="117626" relation="include">
        </childnode>
        <childnode refid="117623" relation="include">
        </childnode>
        <childnode refid="117573" relation="include">
        </childnode>
        <childnode refid="117629" relation="include">
        </childnode>
      </node>
      <node id="117631">
        <label>AsgTools/AsgTool.h</label>
        <link refid="d4/d29/AsgTool_8h_source"/>
        <childnode refid="117632" relation="include">
        </childnode>
        <childnode refid="117633" relation="include">
        </childnode>
        <childnode refid="117636" relation="include">
        </childnode>
        <childnode refid="117638" relation="include">
        </childnode>
      </node>
      <node id="117587">
        <label>AthLinks/DataLink.h</label>
        <link refid="da/de8/DataLink_8h_source"/>
        <childnode refid="117588" relation="include">
        </childnode>
        <childnode refid="117563" relation="include">
        </childnode>
        <childnode refid="117589" relation="include">
        </childnode>
        <childnode refid="117590" relation="include">
        </childnode>
      </node>
      <node id="117718">
        <label>AthContainers/tools/DVL_iter_swap.h</label>
        <link refid="d6/ddb/DVL__iter__swap_8h"/>
        <childnode refid="117714" relation="include">
        </childnode>
        <childnode refid="117701" relation="include">
        </childnode>
        <childnode refid="117564" relation="include">
        </childnode>
      </node>
      <node id="117698">
        <label>AthContainers/OwnershipPolicy.h</label>
        <link refid="d3/da4/OwnershipPolicy_8h_source"/>
      </node>
      <node id="117676">
        <label>AthLinks/ElementLink.h</label>
        <link refid="dc/d24/ElementLink_8h_source"/>
        <childnode refid="117588" relation="include">
        </childnode>
        <childnode refid="117563" relation="include">
        </childnode>
        <childnode refid="117677" relation="include">
        </childnode>
        <childnode refid="117590" relation="include">
        </childnode>
        <childnode refid="117678" relation="include">
        </childnode>
      </node>
      <node id="117638">
        <label>AsgTools/SetProperty.h</label>
        <link refid="df/db0/SetProperty_8h_source"/>
      </node>
      <node id="117655">
        <label>TRandom3.h</label>
      </node>
      <node id="117750">
        <label>xAODTracking/TrackParticleContainer.h</label>
        <link refid="da/d31/TrackParticleContainer_8h_source"/>
        <childnode refid="117744" relation="include">
        </childnode>
        <childnode refid="117751" relation="include">
        </childnode>
        <childnode refid="117694" relation="include">
        </childnode>
      </node>
      <node id="117641">
        <label>PATInterfaces/SystematicCode.h</label>
        <link refid="df/df5/SystematicCode_8h_source"/>
      </node>
      <node id="117709">
        <label>GaudiKernel/ClassID.h</label>
      </node>
      <node id="117723">
        <label>boost/type_traits.hpp</label>
      </node>
      <node id="117582">
        <label>memory</label>
      </node>
      <node id="117610">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="117596" relation="include">
        </childnode>
        <childnode refid="117597" relation="include">
        </childnode>
        <childnode refid="117611" relation="include">
        </childnode>
      </node>
      <node id="117702">
        <label>AthContainersInterfaces/AuxStore_traits.h</label>
        <link refid="dd/d70/AuxStore__traits_8h"/>
        <childnode refid="117570" relation="include">
        </childnode>
        <childnode refid="117585" relation="include">
        </childnode>
        <childnode refid="117571" relation="include">
        </childnode>
        <childnode refid="117607" relation="include">
        </childnode>
        <childnode refid="117703" relation="include">
        </childnode>
        <childnode refid="117704" relation="include">
        </childnode>
        <childnode refid="117563" relation="include">
        </childnode>
      </node>
      <node id="117672">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="d4/def/namespacecorrelationModel">correlationModel</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="9"><highlight class="comment">//<sp/>Include<sp/>this<sp/>class&apos;s<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ElectronEfficiencyCorrection/AsgElectronEfficiencyCorrectionTool.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;PathResolver/PathResolver.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>STL<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cfloat&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dirent.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>the<sp/>return<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;PATCore/PATCoreEnums.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>xAOD<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODEgamma/Electron.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODEventInfo/EventInfo.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ROOTCORE</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/algorithm/string.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;AthAnalysisBaseComps/AthAnalysisHelper.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODMetaData/FileMetaData.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;PathResolver/PathResolver.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ElectronEfficiencyCorrection/TElectronEfficiencyCorrectionTool.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ROOT<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TSystem.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">correlationModel{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>model<sp/>{<sp/>COMBMCTOYS<sp/>=0,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MCTOYS=1,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FULL=2,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SIMPLIFIED=3,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TOTAL=4,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SYST=5</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Standard<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><ref refid="de/d7f/classAsgElectronEfficiencyCorrectionTool_1a0581b3b220731e43b358db4814f70f38" kindref="member" tooltip="Standard constructor.">AsgElectronEfficiencyCorrectionTool::AsgElectronEfficiencyCorrectionTool</ref>(std::string<sp/>myname)<sp/>:</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>asg::AsgMetadataTool(myname),</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>m_rootTool(0),</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>m_affectedSys(),</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>m_appliedSystematics(0),</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>m_correlation_model(correlationModel::SIMPLIFIED),</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>m_sysSubstring(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>m_dataType(PATCore::ParticleDataType::Full),</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>m_nCorrSyst(0),</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>m_nUncorrSyst(0),</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>m_UncorrRegions(0),</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>m_nSimpleUncorrSyst(0)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>instance<sp/>of<sp/>the<sp/>underlying<sp/>ROOT<sp/>tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>m_rootTool<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dd/d65/classRoot_1_1TElectronEfficiencyCorrectionTool_1ab0bd240c4e227aa88b407ea072790877" kindref="member">Root::TElectronEfficiencyCorrectionTool</ref>((</highlight><highlight class="stringliteral">&quot;T&quot;</highlight><highlight class="normal"><sp/>+<sp/>(this-&gt;name())).c_str());</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Declare<sp/>the<sp/>needed<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>declareProperty(</highlight><highlight class="stringliteral">&quot;CorrectionFileNameList&quot;</highlight><highlight class="normal">,<sp/>m_corrFileNameList,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;List<sp/>of<sp/>file<sp/>names<sp/>that<sp/>store<sp/>the<sp/>correction<sp/>factors<sp/>for<sp/>simulation.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>declareProperty(</highlight><highlight class="stringliteral">&quot;MapFilePath&quot;</highlight><highlight class="normal">,<sp/>m_mapFile<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ElectronEfficiencyCorrection/2015_2016/rel20.7/Moriond_February2017_v1/map0.txt&quot;</highlight><highlight class="normal"><sp/>,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Full<sp/>path<sp/>to<sp/>the<sp/>map<sp/>file&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>declareProperty(</highlight><highlight class="stringliteral">&quot;RecoKey&quot;</highlight><highlight class="normal">,<sp/>m_recoKey<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Key<sp/>associated<sp/>with<sp/>reconstruction&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>declareProperty(</highlight><highlight class="stringliteral">&quot;IdKey&quot;</highlight><highlight class="normal">,<sp/>m_idKey<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Key<sp/>associated<sp/>with<sp/>identification<sp/>working<sp/>point&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>declareProperty(</highlight><highlight class="stringliteral">&quot;IsoKey&quot;</highlight><highlight class="normal">,<sp/>m_isoKey<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Key<sp/>associated<sp/>with<sp/>isolation<sp/>working<sp/>point&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>declareProperty(</highlight><highlight class="stringliteral">&quot;TriggerKey&quot;</highlight><highlight class="normal">,<sp/>m_trigKey<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Key<sp/>associated<sp/>with<sp/>trigger<sp/>working<sp/>point&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>declareProperty(</highlight><highlight class="stringliteral">&quot;ForceDataType&quot;</highlight><highlight class="normal">,<sp/>m_dataTypeOverwrite<sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Force<sp/>the<sp/>DataType<sp/>of<sp/>the<sp/>electron<sp/>to<sp/>specified<sp/>value<sp/>(to<sp/>circumvent<sp/>problem<sp/>of<sp/>incorrect<sp/>DataType<sp/>for<sp/>forward<sp/>electrons<sp/>in<sp/>some<sp/>old<sp/>releases)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>declareProperty(</highlight><highlight class="stringliteral">&quot;ResultPrefix&quot;</highlight><highlight class="normal">,<sp/>m_resultPrefix<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>prefix<sp/>string<sp/>for<sp/>the<sp/>result&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>declareProperty(</highlight><highlight class="stringliteral">&quot;ResultName&quot;</highlight><highlight class="normal">,<sp/>m_resultName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>string<sp/>for<sp/>the<sp/>result&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>declareProperty(</highlight><highlight class="stringliteral">&quot;CorrelationModel&quot;</highlight><highlight class="normal">,<sp/>m_correlation_model_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SIMPLIFIED&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Uncertainty<sp/>correlation<sp/>model.<sp/>At<sp/>the<sp/>moment<sp/>TOTAL,<sp/>FULL,<sp/>SIMPLIFIED,<sp/>SYST,<sp/>MCTOYS<sp/>and<sp/>COMBMCTOYS<sp/>are<sp/>implemented.<sp/>SIMPLIFIED<sp/>is<sp/>the<sp/>default<sp/>option.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>declareProperty(</highlight><highlight class="stringliteral">&quot;NumberOfToys&quot;</highlight><highlight class="normal">,<sp/>m_number_of_toys<sp/>=<sp/>100,</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>ToyMC<sp/>replica,<sp/>affecting<sp/>MCTOYS<sp/>and<sp/>COMBMCTOYS<sp/>correlation<sp/>models<sp/>only.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>declareProperty(</highlight><highlight class="stringliteral">&quot;MCToySeed&quot;</highlight><highlight class="normal">,<sp/>m_seed_toys<sp/>=<sp/>0,</highlight><highlight class="stringliteral">&quot;Seed<sp/>for<sp/>ToyMC<sp/>replica,<sp/>affecting<sp/>MCTOYS<sp/>and<sp/>COMBMCTOYS<sp/>correlation<sp/>models<sp/>only.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>declareProperty(</highlight><highlight class="stringliteral">&quot;MCToyScale&quot;</highlight><highlight class="normal">,<sp/>m_scale_toys<sp/>=<sp/>1,</highlight><highlight class="stringliteral">&quot;Scales<sp/>Toy<sp/>systematics<sp/>up<sp/>by<sp/>this<sp/>factor,<sp/>affecting<sp/>MCTOYS<sp/>and<sp/>COMBMCTOYS<sp/>correlation<sp/>models<sp/>only.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>declareProperty(</highlight><highlight class="stringliteral">&quot;EventInfoCollectionName&quot;</highlight><highlight class="normal">,<sp/><sp/>m_eventInfoCollectionName=<sp/></highlight><highlight class="stringliteral">&quot;EventInfo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>EventInfo<sp/>Collection<sp/>Name&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>declareProperty(</highlight><highlight class="stringliteral">&quot;UseRandomRunNumber&quot;</highlight><highlight class="normal">,<sp/><sp/>m_useRandomRunNumber<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>declareProperty(</highlight><highlight class="stringliteral">&quot;DefaultRandomRunNumber&quot;</highlight><highlight class="normal">,<sp/><sp/>m_defaultRandomRunNumber<sp/>=<sp/>999999);</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Standard<sp/>destructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><ref refid="de/d7f/classAsgElectronEfficiencyCorrectionTool_1a151869969a61a8c5b8e3b46bdc3ed154" kindref="member" tooltip="Standard destructor.">AsgElectronEfficiencyCorrectionTool::~AsgElectronEfficiencyCorrectionTool</ref>()<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_UncorrRegions)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_UncorrRegions;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dd/d65/classRoot_1_1TElectronEfficiencyCorrectionTool_1a7ace15539c3f6db8e0dd02073a200a15" kindref="member">finalize</ref>().isFailure())<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;Failure<sp/>in<sp/>AsgElectronEfficiencyCorrectionTool<sp/>finalize()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_rootTool;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Athena<sp/>initialize<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal">StatusCode</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><ref refid="de/d7f/classAsgElectronEfficiencyCorrectionTool_1ad005ac9e14d417777a472810c83c80ea" kindref="member" tooltip="Gaudi Service Interface method implementations.">AsgElectronEfficiencyCorrectionTool::initialize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Forward<sp/>the<sp/>message<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>m_rootTool-&gt;msg().setLevel(this-&gt;<ref refid="d1/d97/classasg_1_1AsgMessaging_1ade3c4b8227d4dd544df9b5aee53363c3" kindref="member">msg</ref>().level());</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_corrFileNameList.empty()<sp/>&amp;&amp;<sp/><sp/>m_recoKey<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/><sp/>&amp;&amp;<sp/><sp/>m_idKey<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>m_trigKey<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>m_isoKey==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;CorrectionFileNameList<sp/>as<sp/>well<sp/>as<sp/>SFKeys<sp/>are<sp/>empty!<sp/>Please<sp/>configure<sp/>it<sp/>properly...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>user<sp/>wants<sp/>to<sp/>overwrite<sp/>the<sp/>m_dataType</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise<sp/>it<sp/>will<sp/>be<sp/>full</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>we<sp/>will<sp/>use<sp/>metadata<sp/><sp/>m_dataType<sp/>will<sp/>be<sp/>whatever<sp/>the<sp/>metadata<sp/>says<sp/>i.e<sp/>Full<sp/>or<sp/>Fast</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>will<sp/>need<sp/>to<sp/>check<sp/>for<sp/>the<sp/>existence<sp/>of<sp/>overwrite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>if<sp/>overwrite<sp/>is<sp/>not<sp/>set<sp/>we<sp/>will<sp/>set<sp/>the<sp/>m_dataType<sp/>based<sp/>on<sp/>metadata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_dataTypeOverwrite<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_dataTypeOverwrite<sp/>!=<sp/>static_cast&lt;int&gt;<sp/>(PATCore::ParticleDataType::Full)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>m_dataTypeOverwrite<sp/>!=<sp/>static_cast&lt;int&gt;<sp/>(PATCore::ParticleDataType::Fast))<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;Unsupported<sp/>Particle<sp/>Data<sp/>Type<sp/>Overwrite&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_dataTypeOverwrite);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>m_dataType<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">PATCore::ParticleDataType::DataType</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(m_dataTypeOverwrite);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Find<sp/>the<sp/>relevant<sp/>input<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Fill<sp/>the<sp/>vector<sp/>with<sp/>filename<sp/>using<sp/>keys<sp/>if<sp/>the<sp/>user</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//has<sp/>not<sp/>passed<sp/>the<sp/>full<sp/>filename<sp/>as<sp/>a<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_corrFileNameList.size()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(getFile(m_recoKey,<sp/>m_idKey,<sp/>m_isoKey,<sp/>m_trigKey).isFailure()){</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;No<sp/>Root<sp/>file<sp/>input<sp/>specified,<sp/>and<sp/>not<sp/>available<sp/>map<sp/>file&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Resolve<sp/>the<sp/>paths<sp/>to<sp/>the<sp/>input<sp/>files<sp/>for<sp/>the<sp/>full<sp/>Geant4<sp/>simualtion<sp/>corrections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m_corrFileNameList.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>filename<sp/>=<sp/>PathResolverFindCalibFile(m_corrFileNameList.at(i));</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filename.empty())<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;Could<sp/>NOT<sp/>resolve<sp/>file<sp/>name<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_corrFileNameList.at(i));</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_INFO(</highlight><highlight class="stringliteral">&quot;<sp/>Path<sp/>found<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>filename);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>m_rootTool-&gt;addFileName(filename);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>the<sp/>systematics<sp/>substring<sp/>according<sp/>to<sp/>the<sp/>name<sp/>of<sp/>the<sp/>input<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_corrFileNameList.at(i).find(</highlight><highlight class="stringliteral">&quot;efficiencySF.&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_sysSubstring<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Trigger_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_corrFileNameList.at(i).find(</highlight><highlight class="stringliteral">&quot;efficiencySF.offline&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_sysSubstring<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ID_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_corrFileNameList.at(i).find(</highlight><highlight class="stringliteral">&quot;efficiencySF.offline.RecoTrk&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_sysSubstring<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Reco_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_corrFileNameList.at(i).find(</highlight><highlight class="stringliteral">&quot;efficiencySF.Isolation&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_sysSubstring<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Iso_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_corrFileNameList.at(i).find(</highlight><highlight class="stringliteral">&quot;efficiency.&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_sysSubstring<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TriggerEff_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_corrFileNameList.at(i).find(</highlight><highlight class="stringliteral">&quot;efficiencySF.ChargeID&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_sysSubstring<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ChargeIDSel_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_sysSubstring<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;Could<sp/>NOT<sp/>find<sp/>systematics<sp/>Substring<sp/>file<sp/>name<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_sysSubstring);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>m_rootTool-&gt;setResultPrefix(m_resultPrefix);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>m_rootTool-&gt;setResultName(m_resultName);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Find<sp/>the<sp/>proper<sp/>correlation<sp/>Model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_correlation_model_name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;COMBMCTOYS&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>m_correlation_model=<sp/>correlationModel::COMBMCTOYS;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_correlation_model_name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;MCTOYS&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>m_correlation_model=<sp/>correlationModel::MCTOYS;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_correlation_model_name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;FULL&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>m_correlation_model=<sp/>correlationModel::FULL;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_correlation_model_name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;SIMPLIFIED&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>m_correlation_model=<sp/>correlationModel::SIMPLIFIED;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_correlation_model_name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;TOTAL&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>m_correlation_model=<sp/>correlationModel::TOTAL;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_correlation_model_name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;SYST&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>m_correlation_model=<sp/>correlationModel::SYST;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>correlation<sp/>model<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_correlation_model_name);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>ATH_MSG_INFO(</highlight><highlight class="stringliteral">&quot;Correlation<sp/>model:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_correlation_model_name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Enum<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_correlation_model);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Finish<sp/>the<sp/>preaparation<sp/>of<sp/>the<sp/>underlying<sp/>tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_correlation_model<sp/>==<sp/>correlationModel::SIMPLIFIED)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cretate<sp/>uncorrelated<sp/>eta/pt<sp/>bins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;float&gt;<sp/>eta;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>eta.push_back(0);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>eta.push_back(1.37);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eta.push_back(2.01);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>eta.push_back(2.47);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;float&gt;<sp/>pt;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>pt.push_back(4500);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>pt.push_back(7000);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>pt.push_back(10000);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>pt.push_back(15000);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>pt.push_back(20000);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>pt.push_back(25000);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>pt.push_back(30000);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>pt.push_back(60000);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>pt.push_back(80000);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>pt.push_back(13000000);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>m_UncorrRegions<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH2F(</highlight><highlight class="stringliteral">&quot;UncorrRegions&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;UncorrRegions&quot;</highlight><highlight class="normal">,<sp/>pt.size()<sp/>-<sp/>1,<sp/>&amp;(pt[0]),<sp/>eta.size()<sp/>-<sp/>1,<sp/>&amp;(eta[0]));</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>m_UncorrRegions-&gt;SetDirectory(0);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bins<sp/>not<sp/>entries<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nSimpleUncorrSyst<sp/>=<sp/>(eta.size()<sp/>-<sp/>1)<sp/>*<sp/>(pt.size()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_seed_toys<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>m_rootTool-&gt;setSeed(m_seed_toys);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_correlation_model<sp/>==<sp/>correlationModel::COMBMCTOYS)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>m_rootTool-&gt;bookCombToyMCScaleFactors(m_number_of_toys);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_correlation_model<sp/>==<sp/>correlationModel::MCTOYS)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>m_rootTool-&gt;bookToyMCScaleFactors(m_number_of_toys);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>initialize<sp/>the<sp/>underlying<sp/>ROOT<sp/>TSelectorTool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>m_rootTool-&gt;initialize())<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>initialize<sp/>the<sp/>TElectronEfficiencyCorrectionTool!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>now<sp/>filled<sp/>TResult<sp/>to<sp/>the<sp/>dummy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>m_resultDummy<sp/>=<sp/>m_rootTool-&gt;getTResult();</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>Nsyst</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>m_nCorrSyst<sp/>=<sp/>m_rootTool-&gt;getNSyst();</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_correlation_model<sp/>==<sp/>correlationModel::FULL)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nUncorrSyst<sp/>=<sp/>m_rootTool-&gt;getNbins(m_pteta_bins);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Initialize<sp/>the<sp/>systematics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(InitSystematics()<sp/>!=<sp/><ref refid="d1/d38/classCP_1_1SystematicCode_1a07da906f4dfdca0598ec3a4ac9bfb686ae0356fe67c0b21740893766ab2f334aa" kindref="member" tooltip="The requested systematic will be applied.">CP::SystematicCode::Ok</ref>)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;(InitSystematics()<sp/>!=<sp/>CP::SystematicCode::Ok)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>recommended<sp/>systematics<sp/>to<sp/>the<sp/>registry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(registerSystematics()<sp/>!=<sp/><ref refid="d1/d38/classCP_1_1SystematicCode_1a07da906f4dfdca0598ec3a4ac9bfb686ae0356fe67c0b21740893766ab2f334aa" kindref="member" tooltip="The requested systematic will be applied.">CP::SystematicCode::Ok</ref>)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;(registerSystematics()<sp/>!=<sp/>CP::SystematicCode::Ok)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>for<sp/>nominal<sp/>systematics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(applySystematicVariation(<ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">CP::SystematicSet</ref>())<sp/>!=<sp/><ref refid="d1/d38/classCP_1_1SystematicCode_1a07da906f4dfdca0598ec3a4ac9bfb686ae0356fe67c0b21740893766ab2f334aa" kindref="member" tooltip="The requested systematic will be applied.">CP::SystematicCode::Ok</ref>)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>configure<sp/>for<sp/>nominal<sp/>settings&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="comment">//<sp/>Athena<sp/>finalize<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal">StatusCode</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><ref refid="de/d7f/classAsgElectronEfficiencyCorrectionTool_1ac298720b1a2fc67fbdb1c1c192f30cfa" kindref="member" tooltip="Gaudi Service Interface method implementations.">AsgElectronEfficiencyCorrectionTool::finalize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(m_rootTool-&gt;finalize()))<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;Something<sp/>went<sp/>wrong<sp/>at<sp/>finalize!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><ref refid="db/d8a/classCP_1_1CorrectionCode" kindref="compound">CP::CorrectionCode</ref></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><ref refid="de/d7f/classAsgElectronEfficiencyCorrectionTool_1a6508d836ea29a68896405c17f5e85a14" kindref="member" tooltip="The interface for Scale Factors.">AsgElectronEfficiencyCorrectionTool::getEfficiencyScaleFactor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/da6/classxAOD_1_1Electron" kindref="compound" tooltip="Class describing an electron.">xAOD::Electron</ref><sp/>&amp;inputObject,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;efficiencyScaleFactor)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currentUncorrSystRegion<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currentSimplifiedUncorrSystRegion<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Retrieve<sp/>the<sp/>proper<sp/>random<sp/>Run<sp/>Number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>runnumber<sp/>=<sp/>m_defaultRandomRunNumber;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_useRandomRunNumber)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="df/df8/classxAOD_1_1EventInfo__v1" kindref="compound">xAOD::EventInfo</ref><sp/>*eventInfo<sp/>=<sp/>evtStore()-&gt;retrieve&lt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="df/df8/classxAOD_1_1EventInfo__v1" kindref="compound">xAOD::EventInfo</ref>&gt;<sp/>(m_eventInfoCollectionName);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!eventInfo)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>retrieve<sp/>EventInfo<sp/>object!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>efficiencyScaleFactor<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db/d8a/classCP_1_1CorrectionCode_1a0a040c70626c77bad65a0fbf757d7b83a9faf702fadfcc1135b182dd78ec9d718" kindref="member" tooltip="Some error happened during the object correction.">CP::CorrectionCode::Error</ref>;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Accessor&lt;unsigned int&gt;</ref><sp/>randomrunnumber(</highlight><highlight class="stringliteral">&quot;RandomRunNumber&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!randomrunnumber.isAvailable(*eventInfo))<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>efficiencyScaleFactor<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Pileup<sp/>tool<sp/>not<sp/>run<sp/>before<sp/>using<sp/>ElectronEfficiencyTool!<sp/>SFs<sp/>do<sp/>not<sp/>reflect<sp/>PU<sp/>distribution<sp/>in<sp/>data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db/d8a/classCP_1_1CorrectionCode_1a0a040c70626c77bad65a0fbf757d7b83a9faf702fadfcc1135b182dd78ec9d718" kindref="member" tooltip="Some error happened during the object correction.">CP::CorrectionCode::Error</ref>;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>runnumber<sp/>=<sp/>randomrunnumber(*(eventInfo));</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/d94/classRoot_1_1TResult" kindref="compound">Root::TResult</ref>&amp;<sp/>result<sp/>=<sp/><ref refid="dd/d65/classRoot_1_1TElectronEfficiencyCorrectionTool_1af9a2a6b6f1f00e4fec1407d02dbbe858" kindref="member">calculate</ref>(inputObject,<sp/>runnumber,<sp/>currentSimplifiedUncorrSystRegion,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentUncorrSystRegion);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>efficiencyScaleFactor<sp/>=<sp/>result.<ref refid="d1/d94/classRoot_1_1TResult_1a2f7e1cb2f25af6921f3be7affa0f48ef" kindref="member">getScaleFactor</ref>();</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>default<sp/>of<sp/>the<sp/>underlying<sp/>tool<sp/>is<sp/>-999<sp/>,<sp/>if<sp/>we<sp/>are<sp/>in<sp/>a<sp/>valid<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>it<sp/>to<sp/>1<sp/>fow<sp/>now<sp/>to<sp/>keep<sp/>old<sp/>behaviour</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(efficiencyScaleFactor<sp/>&lt;=<sp/>-999.0)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>efficiencyScaleFactor<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db/d8a/classCP_1_1CorrectionCode_1a0a040c70626c77bad65a0fbf757d7b83aa38a4fce39a52cf6f99b407b8db24d45" kindref="member" tooltip="Input object is out of validity range.">CP::CorrectionCode::OutOfValidityRange</ref>;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(appliedSystematics().empty())<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db/d8a/classCP_1_1CorrectionCode_1a0a040c70626c77bad65a0fbf757d7b83aea8e3d31915633d7faef8f6a6c0bbd9f" kindref="member" tooltip="The correction was done successfully.">CP::CorrectionCode::Ok</ref>;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>==============================================================================//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Systematic<sp/>Variations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//We<sp/>pass<sp/>only<sp/>one<sp/>variation<sp/>per<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>applied<sp/>systemetic<sp/>is<sp/>always<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Either<sp/>is<sp/>relevant<sp/>and<sp/>acquires<sp/>a<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>stays<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sys(0);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>the<sp/>Toys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_correlation_model<sp/>==<sp/>correlationModel::MCTOYS<sp/>||<sp/>m_correlation_model<sp/>==<sp/>correlationModel::COMBMCTOYS)<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_correlation_model<sp/>==<sp/>correlationModel::MCTOYS)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>toy<sp/>=<sp/>appliedSystematics().getToyVariationByBaseName(</highlight><highlight class="stringliteral">&quot;EL_EFF_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_sysSubstring<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;MCTOY&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>toy.second<sp/>=<sp/>m_scale_toys;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sys<sp/>=<sp/>result.<ref refid="d1/d94/classRoot_1_1TResult_1a3cae3493713d62f1ad05026c661826c0" kindref="member">getResult</ref>((m_rootTool-&gt;getFirstToyMCPosition()<sp/>-<sp/>1<sp/>+<sp/>toy.first)<sp/>*<sp/>m_scale_toys);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_correlation_model<sp/>==<sp/>correlationModel::COMBMCTOYS)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>toy<sp/>=<sp/>appliedSystematics().getToyVariationByBaseName(</highlight><highlight class="stringliteral">&quot;EL_EFF_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_sysSubstring<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;COMBMCTOY&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>toy.second<sp/>=<sp/>m_scale_toys;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sys<sp/>=<sp/>result.<ref refid="d1/d94/classRoot_1_1TResult_1a3cae3493713d62f1ad05026c661826c0" kindref="member">getResult</ref>((m_rootTool-&gt;getFirstToyMCPosition()<sp/>-<sp/>1<sp/>+<sp/>toy.first)<sp/>*<sp/>m_scale_toys);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>here<sp/>for<sp/>Toy<sp/>variations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>efficiencyScaleFactor<sp/>=<sp/>sys;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db/d8a/classCP_1_1CorrectionCode_1a0a040c70626c77bad65a0fbf757d7b83aea8e3d31915633d7faef8f6a6c0bbd9f" kindref="member" tooltip="The correction was done successfully.">CP::CorrectionCode::Ok</ref>;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//The<sp/>rest<sp/>of<sp/>the<sp/>models</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Helper<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Calculate<sp/>and<sp/>return<sp/>at<sp/>the<sp/>spot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>func<sp/>=<sp/>[](</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;sf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>input)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>sf<sp/>=<sp/>sf<sp/>+<sp/>input;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db/d8a/classCP_1_1CorrectionCode_1a0a040c70626c77bad65a0fbf757d7b83aea8e3d31915633d7faef8f6a6c0bbd9f" kindref="member" tooltip="The correction was done successfully.">CP::CorrectionCode::Ok</ref>;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//If<sp/>there<sp/>are<sp/>not<sp/>correlated<sp/>systematic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nCorrSyst<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(appliedSystematics().matchSystematic(<ref refid="dd/d2d/classCP_1_1SystematicVariation" kindref="compound">CP::SystematicVariation</ref>(</highlight><highlight class="stringliteral">&quot;EL_EFF_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_sysSubstring<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;CorrUncertainty&quot;</highlight><highlight class="normal">,1)))<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sys<sp/>=<sp/>sqrt(result.<ref refid="d1/d94/classRoot_1_1TResult_1a763a807d40e3583674810ca12514c298" kindref="member">getTotalUncertainty</ref>()<sp/>*<sp/>result.<ref refid="d1/d94/classRoot_1_1TResult_1a763a807d40e3583674810ca12514c298" kindref="member">getTotalUncertainty</ref>()</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>result.<ref refid="d1/d94/classRoot_1_1TResult_1a3cae3493713d62f1ad05026c661826c0" kindref="member">getResult</ref>(4)<sp/>*<sp/>result.<ref refid="d1/d94/classRoot_1_1TResult_1a3cae3493713d62f1ad05026c661826c0" kindref="member">getResult</ref>(4));<sp/></highlight><highlight class="comment">//<sp/>total<sp/>-stat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>func(efficiencyScaleFactor,<sp/>sys);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(appliedSystematics().matchSystematic(<ref refid="dd/d2d/classCP_1_1SystematicVariation" kindref="compound">CP::SystematicVariation</ref>(</highlight><highlight class="stringliteral">&quot;EL_EFF_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_sysSubstring<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;CorrUncertainty&quot;</highlight><highlight class="normal"><sp/>,-1)))<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sys<sp/>=<sp/>-1*<sp/>sqrt(result.<ref refid="d1/d94/classRoot_1_1TResult_1a763a807d40e3583674810ca12514c298" kindref="member">getTotalUncertainty</ref>()<sp/>*<sp/>result.<ref refid="d1/d94/classRoot_1_1TResult_1a763a807d40e3583674810ca12514c298" kindref="member">getTotalUncertainty</ref>()</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>result.<ref refid="d1/d94/classRoot_1_1TResult_1a3cae3493713d62f1ad05026c661826c0" kindref="member">getResult</ref>(4)<sp/>*<sp/>result.<ref refid="d1/d94/classRoot_1_1TResult_1a3cae3493713d62f1ad05026c661826c0" kindref="member">getResult</ref>(4));<sp/></highlight><highlight class="comment">//<sp/>total<sp/>-stat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>func(efficiencyScaleFactor,<sp/>sys);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_correlation_model<sp/>==<sp/>correlationModel::TOTAL)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>one<sp/>&quot;TOTAL&quot;<sp/>uncertainty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(appliedSystematics().matchSystematic(<ref refid="dd/d2d/classCP_1_1SystematicVariation" kindref="compound">CP::SystematicVariation</ref>(</highlight><highlight class="stringliteral">&quot;EL_EFF_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_sysSubstring<sp/>+</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_correlation_model_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;1NPCOR_PLUS_UNCOR&quot;</highlight><highlight class="normal"><sp/>,1)))<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sys<sp/>=<sp/>result.<ref refid="d1/d94/classRoot_1_1TResult_1a763a807d40e3583674810ca12514c298" kindref="member">getTotalUncertainty</ref>();</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>func(efficiencyScaleFactor,<sp/>sys);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(appliedSystematics().matchSystematic(<ref refid="dd/d2d/classCP_1_1SystematicVariation" kindref="compound">CP::SystematicVariation</ref>(</highlight><highlight class="stringliteral">&quot;EL_EFF_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_sysSubstring<sp/>+</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_correlation_model_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;1NPCOR_PLUS_UNCOR&quot;</highlight><highlight class="normal"><sp/>,-1)))<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sys<sp/>=<sp/><sp/>-1*result.<ref refid="d1/d94/classRoot_1_1TResult_1a763a807d40e3583674810ca12514c298" kindref="member">getTotalUncertainty</ref>();</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>func(efficiencyScaleFactor,<sp/>sys);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>=======================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>the<sp/>uncorrelated,<sp/>we<sp/>just<sp/>need<sp/>to<sp/>see<sp/>if<sp/>the<sp/>applied<sp/>matches<sp/>the<sp/>current<sp/>electron<sp/>pt<sp/>and<sp/>eta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_correlation_model<sp/>==<sp/>correlationModel::FULL)<sp/>{</highlight><highlight class="comment">//<sp/>The<sp/>Full<sp/>Model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(appliedSystematics().matchSystematic(<ref refid="dd/d2d/classCP_1_1SystematicVariation" kindref="compound">CP::SystematicVariation</ref>(</highlight><highlight class="stringliteral">&quot;EL_EFF_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_sysSubstring<sp/>+</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_correlation_model_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Form(</highlight><highlight class="stringliteral">&quot;UncorrUncertaintyNP%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentUncorrSystRegion),1)))<sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sys<sp/>=<sp/>result.<ref refid="d1/d94/classRoot_1_1TResult_1a3cae3493713d62f1ad05026c661826c0" kindref="member">getResult</ref>(4);</highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>func(efficiencyScaleFactor,<sp/>sys);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(appliedSystematics().matchSystematic(<ref refid="dd/d2d/classCP_1_1SystematicVariation" kindref="compound">CP::SystematicVariation</ref>(</highlight><highlight class="stringliteral">&quot;EL_EFF_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_sysSubstring<sp/>+</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_correlation_model_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Form(</highlight><highlight class="stringliteral">&quot;UncorrUncertaintyNP%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentUncorrSystRegion),-1)))<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sys<sp/>=<sp/>-1*result.<ref refid="d1/d94/classRoot_1_1TResult_1a3cae3493713d62f1ad05026c661826c0" kindref="member">getResult</ref>(4);</highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>func(efficiencyScaleFactor,<sp/>sys);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_correlation_model<sp/>==<sp/>correlationModel::SIMPLIFIED)<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(appliedSystematics().matchSystematic(<ref refid="dd/d2d/classCP_1_1SystematicVariation" kindref="compound">CP::SystematicVariation</ref>(</highlight><highlight class="stringliteral">&quot;EL_EFF_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_sysSubstring<sp/>+</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_correlation_model_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Form(</highlight><highlight class="stringliteral">&quot;UncorrUncertaintyNP%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentSimplifiedUncorrSystRegion),1)))<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sys<sp/>=<sp/>result.<ref refid="d1/d94/classRoot_1_1TResult_1a3cae3493713d62f1ad05026c661826c0" kindref="member">getResult</ref>(4);</highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>func(efficiencyScaleFactor,<sp/>sys);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(appliedSystematics().matchSystematic(<ref refid="dd/d2d/classCP_1_1SystematicVariation" kindref="compound">CP::SystematicVariation</ref>(</highlight><highlight class="stringliteral">&quot;EL_EFF_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_sysSubstring<sp/>+</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_correlation_model_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Form(</highlight><highlight class="stringliteral">&quot;UncorrUncertaintyNP%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentSimplifiedUncorrSystRegion),-1)))<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sys<sp/>=<sp/>-1*result.<ref refid="d1/d94/classRoot_1_1TResult_1a3cae3493713d62f1ad05026c661826c0" kindref="member">getResult</ref>(4);</highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>func(efficiencyScaleFactor,<sp/>sys);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//If<sp/>it<sp/>has<sp/>not<sp/>returned<sp/>so<sp/>far<sp/>,<sp/>it<sp/>means<sp/>we<sp/>wants<sp/>to<sp/>do<sp/>the<sp/>correlated<sp/>for<sp/>the<sp/>full<sp/>models</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m_nCorrSyst;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(appliedSystematics().matchSystematic(<ref refid="dd/d2d/classCP_1_1SystematicVariation" kindref="compound">CP::SystematicVariation</ref>(</highlight><highlight class="stringliteral">&quot;EL_EFF_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_sysSubstring<sp/>+</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Form(</highlight><highlight class="stringliteral">&quot;CorrUncertaintyNP%d&quot;</highlight><highlight class="normal">,<sp/>i),1)))<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sys<sp/>=<sp/>result.<ref refid="d1/d94/classRoot_1_1TResult_1a3cae3493713d62f1ad05026c661826c0" kindref="member">getResult</ref>(5<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>func(efficiencyScaleFactor,<sp/>sys);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(appliedSystematics().matchSystematic(<ref refid="dd/d2d/classCP_1_1SystematicVariation" kindref="compound">CP::SystematicVariation</ref>(</highlight><highlight class="stringliteral">&quot;EL_EFF_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_sysSubstring<sp/>+</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Form(</highlight><highlight class="stringliteral">&quot;CorrUncertaintyNP%d&quot;</highlight><highlight class="normal">,<sp/>i),-1)))<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sys<sp/>=<sp/>-1*<sp/>result.<ref refid="d1/d94/classRoot_1_1TResult_1a3cae3493713d62f1ad05026c661826c0" kindref="member">getResult</ref>(5<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>func(efficiencyScaleFactor,<sp/>sys);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db/d8a/classCP_1_1CorrectionCode_1a0a040c70626c77bad65a0fbf757d7b83aea8e3d31915633d7faef8f6a6c0bbd9f" kindref="member" tooltip="The correction was done successfully.">CP::CorrectionCode::Ok</ref>;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal">}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><ref refid="db/d8a/classCP_1_1CorrectionCode" kindref="compound">CP::CorrectionCode</ref></highlight></codeline>
<codeline lineno="460"><highlight class="normal">AsgElectronEfficiencyCorrectionTool::applyEfficiencyScaleFactor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/da6/classxAOD_1_1Electron" kindref="compound" tooltip="Class describing an electron.">xAOD::Electron</ref><sp/>&amp;inputObject)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>efficiencyScaleFactor<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><ref refid="db/d8a/classCP_1_1CorrectionCode" kindref="compound">CP::CorrectionCode</ref><sp/>result<sp/>=<sp/>getEfficiencyScaleFactor(inputObject,<sp/>efficiencyScaleFactor);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound">SG::AuxElement::Decorator&lt;float&gt;</ref><sp/>dec(m_resultPrefix<sp/>+<sp/>m_resultName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;SF&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>dec(inputObject)<sp/>=<sp/>efficiencyScaleFactor;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="467"><highlight class="normal">}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=======================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Systematics<sp/>Interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=======================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><ref refid="de/d7f/classAsgElectronEfficiencyCorrectionTool_1a3b0019499a66c0c87f493a885a41a6d6" kindref="member" tooltip="returns: whether this tool is affected by the given systematis">AsgElectronEfficiencyCorrectionTool::isAffectedBySystematic</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d2d/classCP_1_1SystematicVariation" kindref="compound">CP::SystematicVariation</ref><sp/>&amp;systematic)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(systematic.<ref refid="dd/d2d/classCP_1_1SystematicVariation_1a921c7b5020877056d9399560d696b6e8" kindref="member">empty</ref>())<sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">CP::SystematicSet</ref><sp/>sys<sp/>=<sp/>affectingSystematics();</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_correlation_model<sp/>==<sp/>correlationModel::MCTOYS</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>||<sp/>m_correlation_model<sp/>==<sp/>correlationModel::COMBMCTOYS<sp/>){</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(sys.<ref refid="d4/d52/classCP_1_1SystematicSet_1a2bb1825a4d51bbced328ff42ffda8316" kindref="member" tooltip="description: const iterator to the beginning of the set">begin</ref>()-&gt;ensembleContains(systematic))<sp/>;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(sys.<ref refid="d4/d52/classCP_1_1SystematicSet_1ad2ade5846d7bf837c2679fa2e7628895" kindref="member" tooltip="description: find an element in the set">find</ref>(systematic)<sp/>!=<sp/>sys.<ref refid="d4/d52/classCP_1_1SystematicSet_1aa89eea0473b865d52295c272c7b5b944" kindref="member" tooltip="description: const iterator to the end of the set">end</ref>());</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">CP::SystematicSet</ref></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><ref refid="de/d7f/classAsgElectronEfficiencyCorrectionTool_1a7870f98ee25f0ae18b36e83e20f5603b" kindref="member" tooltip="returns: the list of all systematics this tool can be affected by">AsgElectronEfficiencyCorrectionTool::affectingSystematics</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_affectedSys;</highlight></codeline>
<codeline lineno="494"><highlight class="normal">}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Register<sp/>the<sp/>systematics<sp/>with<sp/>the<sp/>registry<sp/>and<sp/>add<sp/>them<sp/>to<sp/>the<sp/>recommended<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><ref refid="d1/d38/classCP_1_1SystematicCode" kindref="compound">CP::SystematicCode</ref></highlight></codeline>
<codeline lineno="498"><highlight class="normal">AsgElectronEfficiencyCorrectionTool::registerSystematics()<sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><ref refid="d4/d6e/classCP_1_1SystematicRegistry" kindref="compound">CP::SystematicRegistry</ref><sp/>&amp;registry<sp/>=<sp/><ref refid="d4/d6e/classCP_1_1SystematicRegistry_1a6bfc41e5ad75c56240e635dba9423ad1" kindref="member" tooltip="Get the singleton instance of the registry.">CP::SystematicRegistry::getInstance</ref>();</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(registry.<ref refid="d4/d6e/classCP_1_1SystematicRegistry_1adafd09d699d5cfb10943d4926ec340af" kindref="member" tooltip="effects: register all the systematics from the tool">registerSystematics</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>!=<sp/><ref refid="d1/d38/classCP_1_1SystematicCode_1a07da906f4dfdca0598ec3a4ac9bfb686ae0356fe67c0b21740893766ab2f334aa" kindref="member" tooltip="The requested systematic will be applied.">CP::SystematicCode::Ok</ref>)<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>add<sp/>systematic<sp/>to<sp/>list<sp/>of<sp/>recommended<sp/>systematics.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/d38/classCP_1_1SystematicCode_1a07da906f4dfdca0598ec3a4ac9bfb686a3bf0b760b0d2dc3b22292c97a3f16a03" kindref="member" tooltip="The requested systematic is not supported.">CP::SystematicCode::Unsupported</ref>;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/d38/classCP_1_1SystematicCode_1a07da906f4dfdca0598ec3a4ac9bfb686ae0356fe67c0b21740893766ab2f334aa" kindref="member" tooltip="The requested systematic will be applied.">CP::SystematicCode::Ok</ref>;</highlight></codeline>
<codeline lineno="506"><highlight class="normal">}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">CP::SystematicSet</ref></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><ref refid="de/d7f/classAsgElectronEfficiencyCorrectionTool_1affbd6cfd7e01b7a6c569dc225cf2f03e" kindref="member" tooltip="returns: the list of all systematics this tool recommends to use">AsgElectronEfficiencyCorrectionTool::recommendedSystematics</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>affectingSystematics();</highlight></codeline>
<codeline lineno="512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><ref refid="d1/d38/classCP_1_1SystematicCode" kindref="compound">CP::SystematicCode</ref></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><ref refid="de/d7f/classAsgElectronEfficiencyCorrectionTool_1a391da44fa71442913fc84f8d1e1a59b9" kindref="member" tooltip="Configure this tool for the given systematics.">AsgElectronEfficiencyCorrectionTool::applySystematicVariation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">CP::SystematicSet</ref><sp/>&amp;systConfig)<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>First,<sp/>check<sp/>if<sp/>this<sp/>configuration<sp/>exists<sp/>in<sp/>the<sp/>filtered<sp/>map/registy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>itr<sp/>=<sp/>m_systFilter.find(systConfig);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itr<sp/>!=<sp/>m_systFilter.end())<sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">CP::SystematicSet</ref><sp/>&amp;mySysConf<sp/>=<sp/>itr-&gt;second;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>m_appliedSystematics<sp/>=<sp/>&amp;mySysConf;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>not<sp/>,<sp/>we<sp/>should<sp/>register<sp/>it,<sp/>after<sp/>it<sp/>passes<sp/>sanity<sp/>checks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>it&apos;s<sp/>a<sp/>new<sp/>input<sp/>set,<sp/>we<sp/>need<sp/>to<sp/>filter<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">CP::SystematicSet</ref><sp/>affectingSys<sp/>=<sp/>affectingSystematics();</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">CP::SystematicSet</ref><sp/>filteredSys;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d4/d52/classCP_1_1SystematicSet_1aab3705cd204c44632901b94ab958d412" kindref="member">CP::SystematicSet::filterForAffectingSystematics</ref>(systConfig,<sp/>affectingSys,<sp/>filteredSys))<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;Unsupported<sp/>combination<sp/>of<sp/>systematic<sp/>variations<sp/>passed<sp/>to<sp/>the<sp/>tool!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/d38/classCP_1_1SystematicCode_1a07da906f4dfdca0598ec3a4ac9bfb686a3bf0b760b0d2dc3b22292c97a3f16a03" kindref="member" tooltip="The requested systematic is not supported.">CP::SystematicCode::Unsupported</ref>;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>filtered<sp/>make<sp/>sense<sp/>,<sp/><sp/>only<sp/>one<sp/>per<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filteredSys.<ref refid="d4/d52/classCP_1_1SystematicSet_1af9b23731f388242287c0102a00fb4456" kindref="member" tooltip="returns: size of the set">size</ref>()<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;More<sp/>than<sp/>one<sp/>systematic<sp/>variation<sp/>passed<sp/>at<sp/>the<sp/>same<sp/>time&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/d38/classCP_1_1SystematicCode_1a07da906f4dfdca0598ec3a4ac9bfb686a3bf0b760b0d2dc3b22292c97a3f16a03" kindref="member" tooltip="The requested systematic is not supported.">CP::SystematicCode::Unsupported</ref>;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filteredSys.<ref refid="d4/d52/classCP_1_1SystematicSet_1af9b23731f388242287c0102a00fb4456" kindref="member" tooltip="returns: size of the set">size</ref>()<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>systConfig.<ref refid="d4/d52/classCP_1_1SystematicSet_1af9b23731f388242287c0102a00fb4456" kindref="member" tooltip="returns: size of the set">size</ref>()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;systematics<sp/>:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;syst<sp/>:<sp/>systConfig)<sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(syst.name());</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;<sp/>Not<sp/>supported<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>insert<sp/>to<sp/>the<sp/>registy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>itr<sp/>=<sp/>m_systFilter.insert(std::make_pair(systConfig,<sp/>filteredSys)).first;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>return<sp/>directly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">CP::SystematicSet</ref><sp/>&amp;mySysConf<sp/>=<sp/>itr-&gt;second;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>m_appliedSystematics<sp/>=<sp/>&amp;mySysConf;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/d38/classCP_1_1SystematicCode_1a07da906f4dfdca0598ec3a4ac9bfb686ae0356fe67c0b21740893766ab2f334aa" kindref="member" tooltip="The requested systematic will be applied.">CP::SystematicCode::Ok</ref>;</highlight></codeline>
<codeline lineno="554"><highlight class="normal">}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="comment">//<sp/>private<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>main<sp/>Result<sp/><sp/>method:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TRANSFER<sp/>RESULT<sp/>OF<sp/>UNDERLYING<sp/>TOOL<sp/>TO<sp/>xAOD<sp/>TOOL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/d94/classRoot_1_1TResult" kindref="compound">Root::TResult</ref>&amp;<sp/>AsgElectronEfficiencyCorrectionTool::calculate(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/da6/classxAOD_1_1Electron" kindref="compound" tooltip="Class describing an electron.">xAOD::Electron</ref><sp/>&amp;egam,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>runnumber,</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;currentSimplifiedUncorrSystRegion,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;currentUncorrSystRegion</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cluster_eta(-9999.9);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>et(0.0);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/>et<sp/>=<sp/>egam.pt();</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d91/classxAOD_1_1CaloCluster__v1" kindref="compound">xAOD::CaloCluster</ref><sp/>*cluster<sp/>=<sp/>egam.caloCluster();</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cluster)<sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>cluster_eta<sp/>=<sp/>cluster-&gt;<ref refid="dd/d91/classxAOD_1_1CaloCluster__v1_1ab4ac5c364b9d7da754464b61eef9779b" kindref="member" tooltip="Get the eta in one layer of the EM Calo.">etaBE</ref>(2);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>std::cout&lt;&lt;<sp/>cluster_eta<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>now<sp/>the<sp/>dataType<sp/>must<sp/>be<sp/>set<sp/>by<sp/>the<sp/>user.<sp/>May<sp/>be<sp/>added<sp/>to<sp/>the<sp/>IParticle<sp/>class<sp/>later.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_correlation_model<sp/>==<sp/>correlationModel::SIMPLIFIED)<sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ptbin<sp/>=<sp/>m_UncorrRegions-&gt;GetXaxis()-&gt;FindBin(et)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>etabin<sp/>=<sp/>m_UncorrRegions-&gt;GetYaxis()-&gt;FindBin(fabs(cluster_eta))<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reg<sp/>=<sp/>((etabin)<sp/>*<sp/>m_UncorrRegions-&gt;GetNbinsX()<sp/>+<sp/>ptbin);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>currentSimplifiedUncorrSystRegion<sp/>=<sp/>reg;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_correlation_model<sp/>==<sp/>correlationModel::FULL)<sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>etabin<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reg<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cluster_eta_electron<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;float,<sp/>std::vector&lt;float&gt;<sp/>&gt;::const_iterator<sp/>itr_ptBEGIN<sp/>=<sp/>m_pteta_bins.begin();</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;float,<sp/>std::vector&lt;float&gt;<sp/>&gt;::const_iterator<sp/>itr_ptEND<sp/>=<sp/>m_pteta_bins.end();</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Consider<sp/>using<sp/>std::map::lower_bound,<sp/>returns<sp/>the<sp/>iterator<sp/>to<sp/>the<sp/>first<sp/>element<sp/>that<sp/>is<sp/>greater-or-equal<sp/>to<sp/>a<sp/>pt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>itr_ptBEGIN<sp/>!=<sp/>itr_ptEND;<sp/>itr_ptBEGIN++)<sp/>{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;float,<sp/>std::vector&lt;float&gt;<sp/>&gt;::const_iterator<sp/>itr_ptBEGINplusOne<sp/>=<sp/>itr_ptBEGIN;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itr_ptBEGINplusOne++;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((et<sp/>&gt;<sp/>itr_ptBEGIN-&gt;first<sp/>&amp;&amp;<sp/>itr_ptBEGINplusOne<sp/>==<sp/>itr_ptEND)<sp/>||</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(et<sp/>&gt;<sp/>itr_ptBEGIN-&gt;first<sp/>&amp;&amp;<sp/>et<sp/>&lt;<sp/>itr_ptBEGINplusOne-&gt;first))<sp/>{</highlight><highlight class="comment">//<sp/>find<sp/>the<sp/>pt<sp/>bin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>etabin++;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>it<sp/>is<sp/>ordered<sp/>in<sp/>eta<sp/>from<sp/>smaller<sp/>to<sp/>larger<sp/>ascending<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>consider<sp/>using<sp/>std::lower_bound(begin,end)<sp/>to<sp/>find<sp/>the<sp/>position?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((itr_ptBEGIN-&gt;second).at(0)<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cluster_eta_electron<sp/>=<sp/>fabs(cluster_eta);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cluster_eta_electron<sp/>=<sp/>(cluster_eta);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>etab<sp/>=<sp/>0;<sp/>etab<sp/>&lt;<sp/>((itr_ptBEGIN-&gt;second).size()<sp/>-<sp/>1);<sp/>++etab)<sp/>{</highlight><highlight class="comment">//<sp/>find<sp/>the<sp/>eta<sp/>bin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((cluster_eta_electron)<sp/>&gt;<sp/>(itr_ptBEGIN-&gt;second).at(etab)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(cluster_eta_electron)<sp/>&lt;<sp/>(itr_ptBEGIN-&gt;second).at(etab<sp/>+<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>if<sp/>(<sp/>(cluster_eta_electron)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>for<sp/>(unsigned<sp/>int<sp/>etab=0;etab&lt;((itr_ptBEGIN-&gt;second).size()-1)<sp/>;<sp/>++etab)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(found)<sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reg<sp/>=<sp/>reg<sp/>+<sp/>(itr_ptBEGIN-&gt;second).size();</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>reg<sp/>=<sp/>reg<sp/>+<sp/>etabin;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>currentUncorrSystRegion<sp/>=<sp/>reg;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>the<sp/>ROOT<sp/>tool<sp/>to<sp/>get<sp/>an<sp/>answer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_rootTool-&gt;calculate(m_dataType,</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runnumber,</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cluster_eta,</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>et<sp/></highlight><highlight class="comment">/*<sp/>in<sp/>MeV<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="629"><highlight class="normal">}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><ref refid="d1/d38/classCP_1_1SystematicCode" kindref="compound">CP::SystematicCode</ref></highlight></codeline>
<codeline lineno="633"><highlight class="normal">AsgElectronEfficiencyCorrectionTool::InitSystematics()<sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Correlated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_correlation_model<sp/>==<sp/>correlationModel::COMBMCTOYS)<sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>m_affectedSys.insert((<ref refid="dd/d2d/classCP_1_1SystematicVariation_1adc08c40c1964cb8da7d6ac9b4eb61964" kindref="member" tooltip="constructor for toy systematics ensemble">CP::SystematicVariation::makeToyEnsemble</ref>(</highlight><highlight class="stringliteral">&quot;EL_EFF_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_sysSubstring<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;COMBMCTOY&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_correlation_model<sp/>==<sp/>correlationModel::MCTOYS)<sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>m_affectedSys.insert((<ref refid="dd/d2d/classCP_1_1SystematicVariation_1adc08c40c1964cb8da7d6ac9b4eb61964" kindref="member" tooltip="constructor for toy systematics ensemble">CP::SystematicVariation::makeToyEnsemble</ref>(</highlight><highlight class="stringliteral">&quot;EL_EFF_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_sysSubstring<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;MCTOY&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nCorrSyst<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>m_affectedSys.insert(<ref refid="dd/d2d/classCP_1_1SystematicVariation" kindref="compound">CP::SystematicVariation</ref>(</highlight><highlight class="stringliteral">&quot;EL_EFF_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_sysSubstring<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;CorrUncertainty&quot;</highlight><highlight class="normal">,<sp/>1));</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>m_affectedSys.insert(<ref refid="dd/d2d/classCP_1_1SystematicVariation" kindref="compound">CP::SystematicVariation</ref>(</highlight><highlight class="stringliteral">&quot;EL_EFF_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_sysSubstring<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;CorrUncertainty&quot;</highlight><highlight class="normal">,<sp/>-1));</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_correlation_model<sp/>!=<sp/>correlationModel::TOTAL)<sp/>{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m_nCorrSyst;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_affectedSys.insert(<ref refid="dd/d2d/classCP_1_1SystematicVariation" kindref="compound">CP::SystematicVariation</ref>(</highlight><highlight class="stringliteral">&quot;EL_EFF_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_sysSubstring<sp/>+<sp/>Form(</highlight><highlight class="stringliteral">&quot;CorrUncertaintyNP%d&quot;</highlight><highlight class="normal">,<sp/>i),<sp/>1));</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_affectedSys.insert(<ref refid="dd/d2d/classCP_1_1SystematicVariation" kindref="compound">CP::SystematicVariation</ref>(</highlight><highlight class="stringliteral">&quot;EL_EFF_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_sysSubstring<sp/>+<sp/>Form(</highlight><highlight class="stringliteral">&quot;CorrUncertaintyNP%d&quot;</highlight><highlight class="normal">,<sp/>i),<sp/>-1));</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Different<sp/>tratement<sp/>for<sp/>the<sp/>uncorrelated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_correlation_model<sp/>==<sp/>correlationModel::TOTAL)<sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>m_affectedSys.insert(<ref refid="dd/d2d/classCP_1_1SystematicVariation" kindref="compound">CP::SystematicVariation</ref>(</highlight><highlight class="stringliteral">&quot;EL_EFF_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_sysSubstring<sp/>+<sp/>m_correlation_model_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;1NPCOR_PLUS_UNCOR&quot;</highlight><highlight class="normal">,<sp/>1));</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>m_affectedSys.insert(<ref refid="dd/d2d/classCP_1_1SystematicVariation" kindref="compound">CP::SystematicVariation</ref>(</highlight><highlight class="stringliteral">&quot;EL_EFF_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_sysSubstring<sp/>+<sp/>m_correlation_model_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;1NPCOR_PLUS_UNCOR&quot;</highlight><highlight class="normal">,<sp/>-1));</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_correlation_model<sp/>==<sp/>correlationModel::FULL)<sp/>{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m_nUncorrSyst;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_affectedSys.insert(<ref refid="dd/d2d/classCP_1_1SystematicVariation" kindref="compound">CP::SystematicVariation</ref>(</highlight><highlight class="stringliteral">&quot;EL_EFF_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_sysSubstring<sp/>+<sp/>m_correlation_model_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Form(</highlight><highlight class="stringliteral">&quot;UncorrUncertaintyNP%d&quot;</highlight><highlight class="normal">,<sp/>i),<sp/>1));</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_affectedSys.insert(<ref refid="dd/d2d/classCP_1_1SystematicVariation" kindref="compound">CP::SystematicVariation</ref>(</highlight><highlight class="stringliteral">&quot;EL_EFF_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_sysSubstring<sp/>+<sp/>m_correlation_model_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Form(</highlight><highlight class="stringliteral">&quot;UncorrUncertaintyNP%d&quot;</highlight><highlight class="normal">,<sp/>i),<sp/>-1));</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_correlation_model<sp/>==<sp/>correlationModel::SIMPLIFIED)<sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m_nSimpleUncorrSyst;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_affectedSys.insert(<ref refid="dd/d2d/classCP_1_1SystematicVariation" kindref="compound">CP::SystematicVariation</ref>(</highlight><highlight class="stringliteral">&quot;EL_EFF_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_sysSubstring<sp/>+<sp/>m_correlation_model_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Form(</highlight><highlight class="stringliteral">&quot;UncorrUncertaintyNP%d&quot;</highlight><highlight class="normal">,<sp/>i),<sp/>1));</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_affectedSys.insert(<ref refid="dd/d2d/classCP_1_1SystematicVariation" kindref="compound">CP::SystematicVariation</ref>(</highlight><highlight class="stringliteral">&quot;EL_EFF_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_sysSubstring<sp/>+<sp/>m_correlation_model_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Form(</highlight><highlight class="stringliteral">&quot;UncorrUncertaintyNP%d&quot;</highlight><highlight class="normal">,<sp/>i),<sp/>-1));</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/d38/classCP_1_1SystematicCode_1a07da906f4dfdca0598ec3a4ac9bfb686ae0356fe67c0b21740893766ab2f334aa" kindref="member" tooltip="The requested systematic will be applied.">CP::SystematicCode::Ok</ref>;</highlight></codeline>
<codeline lineno="673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="comment">//===============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="comment">//<sp/>begin<sp/>input<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="comment">//===============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal">StatusCode<sp/><ref refid="de/d7f/classAsgElectronEfficiencyCorrectionTool_1a22ec9dd572bb7916999dc176006d8df5" kindref="member" tooltip="Function called when a new input file is opened.">AsgElectronEfficiencyCorrectionTool::beginInputFile</ref>(){</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>User<sp/>preference<sp/>of<sp/>dataType,<sp/>already<sp/>done<sp/>in<sp/>initialize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_dataTypeOverwrite<sp/>!=<sp/>-1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/>PATCore::ParticleDataType::DataType<sp/>dataType_metadata;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>StatusCode<sp/>status<sp/>=<sp/>get_simType_from_metadata(dataType_metadata);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>StatusCode::SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//m_metadata_retrieved<sp/>isn&apos;t<sp/>useful<sp/>(might<sp/>remove<sp/>it<sp/>later)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>m_metadata_retrieved<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;metadata<sp/>from<sp/>new<sp/>file:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(dataType_metadata<sp/>==<sp/>PATCore::ParticleDataType::Data<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;data&quot;</highlight><highlight class="normal"><sp/>:<sp/>(dataType_metadata<sp/>==<sp/>PATCore::ParticleDataType::Full<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;full<sp/>simulation&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;fast<sp/>simulation&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataType_metadata<sp/>!=<sp/>PATCore::ParticleDataType::Data)<sp/>{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_dataTypeOverwrite<sp/>==<sp/>-1)<sp/>{<sp/>m_dataType<sp/>=<sp/>dataType_metadata;<sp/>}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;Use<sp/>should<sp/>set<sp/>the<sp/>dataType,<sp/>otherwise<sp/>it<sp/>will<sp/>take<sp/>FullSim<sp/>Type&quot;</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>not<sp/>able<sp/>to<sp/>retrieve<sp/>metadata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>m_metadata_retrieved<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;not<sp/>able<sp/>to<sp/>retrieve<sp/>metadata,<sp/>please<sp/>set<sp/>the<sp/>dataType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="704"><highlight class="normal">}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="comment">//===============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight><highlight class="comment">//<sp/>end<sp/>input<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="comment">//===============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal">StatusCode<sp/><ref refid="de/d7f/classAsgElectronEfficiencyCorrectionTool_1a8daa7dd7986a2686da08a7fbebdd4701" kindref="member">AsgElectronEfficiencyCorrectionTool::endInputFile</ref>(){</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/>m_metadata_retrieved<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal">}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight><highlight class="comment">//===============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="comment">//<sp/>end<sp/>input<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight><highlight class="comment">//===============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal">StatusCode<sp/><ref refid="de/d7f/classAsgElectronEfficiencyCorrectionTool_1a6bd28d45c87cbfdeb94e870a7c04b621" kindref="member" tooltip="Function called when a new events is loaded.">AsgElectronEfficiencyCorrectionTool::beginEvent</ref>(){</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="719"><highlight class="normal">}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="comment">//===============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>Simulation<sp/>flavor<sp/>(FastSim<sp/>or<sp/>FullSim)<sp/>from<sp/>METADATA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="comment">//===============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal">StatusCode</highlight></codeline>
<codeline lineno="725"><highlight class="normal">AsgElectronEfficiencyCorrectionTool::get_simType_from_metadata(PATCore::ParticleDataType::DataType&amp;<sp/>result)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="726"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>adapted<sp/>from<sp/>https://svnweb.cern.ch/trac/atlasoff/browser/PhysicsAnalysis/AnalysisCommon/CPAnalysisExamples/trunk/Root/MetadataToolExample.cxx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ROOTCORE</highlight></codeline>
<codeline lineno="729"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Determine<sp/>MC/Data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/>std::string<sp/>dataType(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(AthAnalysisHelper::retrieveMetadata(</highlight><highlight class="stringliteral">&quot;/TagInfo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;project_name&quot;</highlight><highlight class="normal">,<sp/>dataType,<sp/>inputMetaStore())).isFailure()<sp/>){</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;Failure<sp/>to<sp/>retrieve<sp/>the<sp/>project_name,<sp/>Either<sp/>running<sp/>on<sp/>data<sp/>or<sp/>something<sp/>is<sp/>wrong?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(dataType<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;IS_SIMULATION&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>PATCore::ParticleDataType::Data;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;Running<sp/>on<sp/>simulation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>Fast/FullSim</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataType<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;IS_SIMULATION&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>simType(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_CHECK(AthAnalysisHelper::retrieveMetadata(</highlight><highlight class="stringliteral">&quot;/Simulation/Parameters&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SimulationFlavour&quot;</highlight><highlight class="normal">,<sp/>simType,<sp/>inputMetaStore()));</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::to_upper(simType);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>(simType.find(</highlight><highlight class="stringliteral">&quot;ATLFASTII&quot;</highlight><highlight class="normal">)==std::string::npos)<sp/>?<sp/><sp/>PATCore::ParticleDataType::Full<sp/>:<sp/>PATCore::ParticleDataType::Fast;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="749"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//here&apos;s<sp/>how<sp/>things<sp/>will<sp/>work<sp/>dual<sp/>use,<sp/>when<sp/>file<sp/>metadata<sp/>is<sp/>available<sp/>in<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputMetaStore()-&gt;contains&lt;<ref refid="d1/dca/classxAOD_1_1FileMetaData__v1" kindref="compound">xAOD::FileMetaData</ref>&gt;(</highlight><highlight class="stringliteral">&quot;FileMetaData&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/dca/classxAOD_1_1FileMetaData__v1" kindref="compound">xAOD::FileMetaData</ref>*<sp/>fmd<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_CHECK(inputMetaStore()-&gt;retrieve(fmd,<sp/></highlight><highlight class="stringliteral">&quot;FileMetaData&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>simType(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>fmd-&gt;<ref refid="d1/dca/classxAOD_1_1FileMetaData__v1_1af034b4b7aa0222b98ab68436840732a5" kindref="member" tooltip="Get a pre-defined string value out of the object.">value</ref>(<ref refid="d1/dca/classxAOD_1_1FileMetaData__v1_1a0dfec35abc1871d9c3b82ff52818757caada8ba13f7a7c5b58c6aad98df24830b" kindref="member" tooltip="Fast or Full sim [string].">xAOD::FileMetaData::simFlavour</ref>,<sp/>simType);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s)<sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;no<sp/>sim<sp/>flavour<sp/>from<sp/>metadata:<sp/>must<sp/>be<sp/>data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>PATCore::ParticleDataType::Data;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;sim<sp/>type<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>simType);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>simType<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;FullSim&quot;</highlight><highlight class="normal"><sp/>?<sp/>PATCore::ParticleDataType::Full<sp/>:<sp/>PATCore::ParticleDataType::Fast;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>metadata<sp/>in<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;no<sp/>metadata<sp/>found<sp/>in<sp/>the<sp/>file&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="773"><highlight class="normal">}</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight><highlight class="comment">//===============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Map<sp/>Key<sp/>Feature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight><highlight class="comment">//===============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>correction<sp/>filename<sp/>from<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal">StatusCode</highlight></codeline>
<codeline lineno="780"><highlight class="normal">AsgElectronEfficiencyCorrectionTool::getFile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>recokey,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>idkey,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>isokey,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>trigkey)<sp/>{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/>std::string<sp/>key<sp/>=<sp/>convertToOneKey(recokey,<sp/>idkey,<sp/>isokey,<sp/>trigkey);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/>std::string<sp/>mapFileName<sp/>=<sp/>PathResolverFindCalibFile(m_mapFile);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/>std::string<sp/>value<sp/>=<sp/>getValueByKey(mapFileName,<sp/>key);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>m_corrFileNameList.push_back(value);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mapFileName<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;Map<sp/>file<sp/>does<sp/>not<sp/>exist,<sp/>Please<sp/>set<sp/>the<sp/>path<sp/>and<sp/>version<sp/>properly..&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;Key<sp/>does<sp/>not<sp/>exist<sp/>in<sp/>the<sp/>map<sp/>file,<sp/>Please<sp/>configure<sp/>it<sp/>properly..&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;Full<sp/>File<sp/>Name<sp/>is<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>value);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="800"><highlight class="normal">}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convert<sp/>reco,<sp/>ID,<sp/>iso<sp/>and<sp/>trigger<sp/>key<sp/>values<sp/>into<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight><highlight class="comment">//<sp/>single<sp/>key<sp/>according<sp/>to<sp/>the<sp/>map<sp/>file<sp/>key<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal">std::string</highlight></codeline>
<codeline lineno="805"><highlight class="normal">AsgElectronEfficiencyCorrectionTool::convertToOneKey(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>recokey,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>idkey,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>isokey,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>trigkey)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/>std::string<sp/>key;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reconstruction<sp/>Key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(recokey<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">){<sp/>key<sp/>=<sp/>recokey;<sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Identification<sp/>Key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idkey<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>(recokey<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>isokey<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>trigkey<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)){<sp/>key<sp/>=<sp/>idkey;<sp/>}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Isolation<sp/>Key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((idkey<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>isokey<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>recokey<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>trigkey<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">){<sp/>key<sp/>=<sp/>std::string(idkey<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>isokey);<sp/>}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Trigger<sp/>Key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trigkey<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>idkey<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Trigger<sp/>SF<sp/>file<sp/>with<sp/>isolation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isokey<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>=<sp/>std::string<sp/>(trigkey<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>idkey<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>isokey);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Trigger<sp/>SF<sp/>file<sp/>without<sp/>isolation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/>key<sp/>=<sp/>std::string(trigkey<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>idkey);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;Full<sp/>Key<sp/>is<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>key);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>key;</highlight></codeline>
<codeline lineno="831"><highlight class="normal">}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Retrieves<sp/>the<sp/>value<sp/>from<sp/>the<sp/>provided<sp/>map<sp/>file<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight><highlight class="comment">//<sp/>associated<sp/>with<sp/>the<sp/>provided<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal">std::string</highlight></codeline>
<codeline lineno="836"><highlight class="normal">AsgElectronEfficiencyCorrectionTool::getValueByKey(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>mapFile,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/>std::string<sp/>value;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(read(mapFile).isFailure())<sp/>{</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>read<sp/>Map<sp/>File&quot;</highlight><highlight class="normal"><sp/>+<sp/>mapFile);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getValue(key,<sp/>value)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;Error(&quot;</highlight><highlight class="normal"><sp/>+<sp/>key<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>not<sp/>found<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;Full<sp/>Path<sp/>of<sp/>the<sp/>correction<sp/>file<sp/>is<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>value);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="850"><highlight class="normal">}</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Reads<sp/>the<sp/>provided<sp/>map<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>construct<sp/>the<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal">StatusCode</highlight></codeline>
<codeline lineno="854"><highlight class="normal">AsgElectronEfficiencyCorrectionTool::read(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>strFile)<sp/>{</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/>std::ifstream<sp/>is(strFile.c_str());</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is.is_open()){</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>read<sp/>Map<sp/>File&quot;</highlight><highlight class="normal"><sp/>+<sp/>strFile);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!is.eof())<sp/>{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>strLine;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getline(is,strLine);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPos<sp/>=<sp/>strLine.find(</highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)std::string::npos<sp/>==<sp/>nPos)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>no<sp/>&apos;=&apos;,<sp/>invalid<sp/>line;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>strKey<sp/>=<sp/>strLine.substr(0,nPos);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>strVal<sp/>=<sp/>strLine.substr(nPos<sp/>+<sp/>1,<sp/>strLine.length()<sp/>-<sp/>nPos<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_map.insert(std::map&lt;std::string,std::string&gt;::value_type(strKey,strVal));</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="873"><highlight class="normal">}</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Retrieves<sp/>the<sp/>value<sp/>from<sp/>the<sp/>map<sp/>file<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>provided<sp/>key<sp/>is<sp/>found.<sp/>If<sp/>the<sp/>key<sp/>has<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight><highlight class="comment">//<sp/>association<sp/>then,<sp/>the<sp/>actual<sp/>retrieved<sp/>value<sp/>would</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight><highlight class="comment">//<sp/>be<sp/>assigned<sp/>to<sp/>the<sp/>2nd<sp/>argument<sp/>of<sp/>this<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal">std::string</highlight></codeline>
<codeline lineno="879"><highlight class="normal">AsgElectronEfficiencyCorrectionTool::getValue(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>strKey,<sp/>std::string&amp;<sp/>strValue)<sp/>{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,std::string&gt;::const_iterator<sp/>i;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>m_map.find(strKey);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>m_map.end())<sp/>{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strValue<sp/>=<sp/>i-&gt;second;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strValue;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="889"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/ElectronEfficiencyCorrection/Root/AsgElectronEfficiencyCorrectionTool.cxx"/>
  </compounddef>
</doxygen>
