<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d3/d2b/classHLT_1_1TypedHolder" kind="class" prot="public">
    <compoundname>HLT::TypedHolder</compoundname>
    <basecompoundref refid="d1/de7/classHLT_1_1TypelessHolder" prot="public" virt="non-virtual">HLT::TypelessHolder</basecompoundref>
    <basecompoundref refid="d1/d97/classasg_1_1AsgMessaging" prot="public" virt="non-virtual">asg::AsgMessaging</basecompoundref>
    <includes refid="de/de2/TypedHolder_8h" local="no">TypedHolder.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>FEATURE</declname>
        <defname>FEATURE</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>CONTAINER</declname>
        <defname>CONTAINER</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d3/d2b/classHLT_1_1TypedHolder_1aa004ca016ffa2788e5688fdc00f5e449" prot="private" static="no" mutable="no">
        <type><ref refid="dd/d95/classStoreGateSvc" kindref="compound">EventPtr</ref></type>
        <definition>EventPtr HLT::TypedHolder&lt; FEATURE, CONTAINER &gt;::m_store</definition>
        <argsstring></argsstring>
        <name>m_store</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/TypedHolder.h" line="178" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/TypedHolder.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d2b/classHLT_1_1TypedHolder_1ade992ad8c6f2c3562cda124c8f8cd29d" prot="private" static="no" mutable="no">
        <type>const CONTAINER *</type>
        <definition>const CONTAINER* HLT::TypedHolder&lt; FEATURE, CONTAINER &gt;::m_cont</definition>
        <argsstring></argsstring>
        <name>m_cont</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/TypedHolder.h" line="179" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/TypedHolder.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d2b/classHLT_1_1TypedHolder_1aa56ee8d5f79c59a3474b35fb1924f686" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string HLT::TypedHolder&lt; FEATURE, CONTAINER &gt;::m_key</definition>
        <argsstring></argsstring>
        <name>m_key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/TypedHolder.h" line="180" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/TypedHolder.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d3/d2b/classHLT_1_1TypedHolder_1aaf7ecd9c31fb51caf55086e51d237930" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>HLT::TypedHolder&lt; FEATURE, CONTAINER &gt;::TypedHolder</definition>
        <argsstring>(const BaseHolder &amp;baseholder, EventPtr store, const std::string &amp;container_name=ClassID_traits&lt; CONTAINER &gt;::typeName())</argsstring>
        <name>TypedHolder</name>
        <param>
          <type>const <ref refid="d8/d7d/classHLT_1_1BaseHolder" kindref="compound">BaseHolder</ref> &amp;</type>
          <declname>baseholder</declname>
        </param>
        <param>
          <type><ref refid="dd/d95/classStoreGateSvc" kindref="compound">EventPtr</ref></type>
          <declname>store</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>container_name</declname>
          <defval><ref refid="d0/dbd/structClassID__traits" kindref="compound">ClassID_traits</ref>&lt; CONTAINER &gt;::typeName()</defval>
        </param>
        <briefdescription>
<para>constructor from <ref refid="d8/d7d/classHLT_1_1BaseHolder" kindref="compound">BaseHolder</ref>. Throws runtime exception if clids of <ref refid="d8/d7d/classHLT_1_1BaseHolder" kindref="compound">BaseHolder</ref> and FEATURE type don&apos;t match </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/TypedHolder.h" line="76" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/TypedHolder.h" bodystart="72" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="d3/d2b/classHLT_1_1TypedHolder_1a788d73d3e9d01aee04f0fd049630bc3c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>HLT::TypedHolder&lt; FEATURE, CONTAINER &gt;::TypedHolder</definition>
        <argsstring>(const TypelessHolder &amp;typeless, EventPtr store, const std::string &amp;container_name=ClassID_traits&lt; CONTAINER &gt;::typeName())</argsstring>
        <name>TypedHolder</name>
        <param>
          <type>const <ref refid="d1/de7/classHLT_1_1TypelessHolder" kindref="compound">TypelessHolder</ref> &amp;</type>
          <declname>typeless</declname>
        </param>
        <param>
          <type><ref refid="dd/d95/classStoreGateSvc" kindref="compound">EventPtr</ref></type>
          <declname>store</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>container_name</declname>
          <defval><ref refid="d0/dbd/structClassID__traits" kindref="compound">ClassID_traits</ref>&lt; CONTAINER &gt;::typeName()</defval>
        </param>
        <briefdescription>
<para>constructor from <ref refid="d8/d7d/classHLT_1_1BaseHolder" kindref="compound">BaseHolder</ref>. Throws runtime exception if clids of <ref refid="d8/d7d/classHLT_1_1BaseHolder" kindref="compound">BaseHolder</ref> and FEATURE type don&apos;t match </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/TypedHolder.h" line="89" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/TypedHolder.h" bodystart="85" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="d3/d2b/classHLT_1_1TypedHolder_1a8209d7e5d3c460d5a1f2859dff00d35d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string HLT::TypedHolder&lt; FEATURE, CONTAINER &gt;::key</definition>
        <argsstring>()</argsstring>
        <name>key</name>
        <briefdescription>
<para>key used to access EventStore </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/TypedHolder.h" line="98" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/TypedHolder.h" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="d3/d2b/classHLT_1_1TypedHolder_1a0bbd99124600d06ac7da51f89066599b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
        </templateparamlist>
        <type>StatusCode_if&lt; <ref refid="d1/def/classT" kindref="compound">T</ref>, true &gt;</type>
        <definition>StatusCode_if&lt;T,true&gt; HLT::TypedHolder&lt; FEATURE, CONTAINER &gt;::get</definition>
        <argsstring>(const T *&amp;destination, HLT::TriggerElement::ObjectIndex idx)</argsstring>
        <name>get</name>
        <param>
          <type>const <ref refid="d1/def/classT" kindref="compound">T</ref> *&amp;</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="dc/d50/classHLT_1_1TriggerElement_1_1ObjectIndex" kindref="compound">HLT::TriggerElement::ObjectIndex</ref></type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>method creates a new VIEW container containing pointers to the elements pointed to by the ObjectIndex. Caller owns the VIEW container. Only enabled for CONTAINER holders </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/TypedHolder.h" line="105" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/TypedHolder.h" bodystart="105" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="d3/d2b/classHLT_1_1TypedHolder_1a70dd41fb17ebd07f572d8a95fc401c0c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
        </templateparamlist>
        <type>StatusCode_if&lt; <ref refid="d1/def/classT" kindref="compound">T</ref>, false &gt;</type>
        <definition>StatusCode_if&lt;T,false&gt; HLT::TypedHolder&lt; FEATURE, CONTAINER &gt;::get</definition>
        <argsstring>(const T *&amp;destination, HLT::TriggerElement::ObjectIndex idx)</argsstring>
        <name>get</name>
        <param>
          <type>const <ref refid="d1/def/classT" kindref="compound">T</ref> *&amp;</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="dc/d50/classHLT_1_1TriggerElement_1_1ObjectIndex" kindref="compound">HLT::TriggerElement::ObjectIndex</ref></type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>method retrieves container from storegated and returns pointer at passed ObjectIndex Only enabled for ELEMENT holders (i.e. non CONTAINER) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/TypedHolder.h" line="141" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/TypedHolder.h" bodystart="141" bodyend="158"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d3/d2b/classHLT_1_1TypedHolder_1a617edf10a75c3cf1256285a2f0d81c43" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>StatusCode</type>
        <definition>StatusCode HLT::TypedHolder&lt; FEATURE, CONTAINER &gt;::syncWithStore</definition>
        <argsstring>()</argsstring>
        <name>syncWithStore</name>
        <briefdescription>
<para>cache container retrieved from StoreGate </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/TypedHolder.h" line="165" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/TypedHolder.h" bodystart="165" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="d3/d2b/classHLT_1_1TypedHolder_1a5674af31e254569f83fd1bc78680d0fa" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>HLT::TypedHolder&lt; FEATURE, CONTAINER &gt;::TypedHolder</definition>
        <argsstring>()</argsstring>
        <name>TypedHolder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/TypedHolder.h" line="177" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/TypedHolder.h" bodystart="177" bodyend="177"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>doubly templated class interfacing access to feature containers in StoreGate. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="22511">
        <label>asg::AsgMessaging</label>
        <link refid="d1/d97/classasg_1_1AsgMessaging"/>
      </node>
      <node id="22508">
        <label>HLT::TypedHolder&lt; FEATURE, CONTAINER &gt;</label>
        <link refid="d3/d2b/classHLT_1_1TypedHolder"/>
        <childnode refid="22509" relation="public-inheritance">
        </childnode>
        <childnode refid="22511" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22509">
        <label>HLT::TypelessHolder</label>
        <link refid="d1/de7/classHLT_1_1TypelessHolder"/>
        <childnode refid="22510" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22510">
        <label>HLT::BaseHolder</label>
        <link refid="d8/d7d/classHLT_1_1BaseHolder"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="22516">
        <label>asg::AsgMessaging</label>
        <link refid="d1/d97/classasg_1_1AsgMessaging"/>
      </node>
      <node id="22517">
        <label>StoreGateSvc</label>
        <link refid="dd/d95/classStoreGateSvc"/>
      </node>
      <node id="22515">
        <label>string</label>
      </node>
      <node id="22512">
        <label>HLT::TypedHolder&lt; FEATURE, CONTAINER &gt;</label>
        <link refid="d3/d2b/classHLT_1_1TypedHolder"/>
        <childnode refid="22513" relation="public-inheritance">
        </childnode>
        <childnode refid="22516" relation="public-inheritance">
        </childnode>
        <childnode refid="22515" relation="usage">
          <edgelabel>m_key</edgelabel>
        </childnode>
        <childnode refid="22517" relation="usage">
          <edgelabel>m_store</edgelabel>
        </childnode>
      </node>
      <node id="22513">
        <label>HLT::TypelessHolder</label>
        <link refid="d1/de7/classHLT_1_1TypelessHolder"/>
        <childnode refid="22514" relation="public-inheritance">
        </childnode>
        <childnode refid="22515" relation="usage">
          <edgelabel>m_label</edgelabel>
        </childnode>
      </node>
      <node id="22514">
        <label>HLT::BaseHolder</label>
        <link refid="d8/d7d/classHLT_1_1BaseHolder"/>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/TypedHolder.h" line="61" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/TypedHolder.h" bodystart="61" bodyend="181"/>
    <listofallmembers>
      <member refid="d1/d97/classasg_1_1AsgMessaging_1aa6e565de0931b6458b932cbb6a8ec55f" prot="public" virt="non-virtual"><scope>HLT::TypedHolder</scope><name>AsgMessaging</name></member>
      <member refid="d1/d97/classasg_1_1AsgMessaging_1ab1e1c2857d74fd5d60ba77d85cdaa26c" prot="public" virt="non-virtual"><scope>HLT::TypedHolder</scope><name>AsgMessaging</name></member>
      <member refid="d8/d7d/classHLT_1_1BaseHolder_1aaec8625ab7d87719d7883db79aa4f8f1" prot="public" virt="non-virtual"><scope>HLT::TypedHolder</scope><name>enquireSerialized</name></member>
      <member refid="d3/d2b/classHLT_1_1TypedHolder_1a0bbd99124600d06ac7da51f89066599b" prot="public" virt="non-virtual"><scope>HLT::TypedHolder</scope><name>get</name></member>
      <member refid="d3/d2b/classHLT_1_1TypedHolder_1a70dd41fb17ebd07f572d8a95fc401c0c" prot="public" virt="non-virtual"><scope>HLT::TypedHolder</scope><name>get</name></member>
      <member refid="d3/d2b/classHLT_1_1TypedHolder_1a8209d7e5d3c460d5a1f2859dff00d35d" prot="public" virt="non-virtual"><scope>HLT::TypedHolder</scope><name>key</name></member>
      <member refid="d1/de7/classHLT_1_1TypelessHolder_1a9ca9768bbb9eec631c66cf6f3b4be106" prot="public" virt="virtual"><scope>HLT::TypedHolder</scope><name>label</name></member>
      <member refid="d1/de7/classHLT_1_1TypelessHolder_1a0dba830469948303873c126b1c237e1f" prot="protected" virt="non-virtual"><scope>HLT::TypedHolder</scope><name>m_clid</name></member>
      <member refid="d3/d2b/classHLT_1_1TypedHolder_1ade992ad8c6f2c3562cda124c8f8cd29d" prot="private" virt="non-virtual"><scope>HLT::TypedHolder</scope><name>m_cont</name></member>
      <member refid="d3/d2b/classHLT_1_1TypedHolder_1aa56ee8d5f79c59a3474b35fb1924f686" prot="private" virt="non-virtual"><scope>HLT::TypedHolder</scope><name>m_key</name></member>
      <member refid="d1/de7/classHLT_1_1TypelessHolder_1a8f20cdca2ad6a8b48447737a9253e890" prot="protected" virt="non-virtual"><scope>HLT::TypedHolder</scope><name>m_label</name></member>
      <member refid="d3/d2b/classHLT_1_1TypedHolder_1aa004ca016ffa2788e5688fdc00f5e449" prot="private" virt="non-virtual"><scope>HLT::TypedHolder</scope><name>m_store</name></member>
      <member refid="d1/de7/classHLT_1_1TypelessHolder_1a0479bf137d11e4585b07832bb3ae4b30" prot="protected" virt="non-virtual"><scope>HLT::TypedHolder</scope><name>m_sub</name></member>
      <member refid="d1/d97/classasg_1_1AsgMessaging_1ade3c4b8227d4dd544df9b5aee53363c3" prot="public" virt="non-virtual"><scope>HLT::TypedHolder</scope><name>msg</name></member>
      <member refid="d1/d97/classasg_1_1AsgMessaging_1a7dd4e350bc2d52f0200257bd22eae53b" prot="public" virt="non-virtual"><scope>HLT::TypedHolder</scope><name>msg</name></member>
      <member refid="d1/d97/classasg_1_1AsgMessaging_1af52f582970fc09501ead498c285ebb32" prot="public" virt="non-virtual"><scope>HLT::TypedHolder</scope><name>msgLvl</name></member>
      <member refid="d8/d7d/classHLT_1_1BaseHolder_1a57f4b30ffb06dda0de3bc74ee666e3e9" prot="public" virt="virtual"><scope>HLT::TypedHolder</scope><name>serialize</name></member>
      <member refid="d1/de7/classHLT_1_1TypelessHolder_1a9581e9232dafbcd83b4f1051f8a6cb9f" prot="public" virt="virtual"><scope>HLT::TypedHolder</scope><name>subTypeIndex</name></member>
      <member refid="d3/d2b/classHLT_1_1TypedHolder_1a617edf10a75c3cf1256285a2f0d81c43" prot="private" virt="non-virtual"><scope>HLT::TypedHolder</scope><name>syncWithStore</name></member>
      <member refid="d1/de7/classHLT_1_1TypelessHolder_1a4f48ab81788f6b68f28c137c38ff2b60" prot="public" virt="virtual"><scope>HLT::TypedHolder</scope><name>typeClid</name></member>
      <member refid="d3/d2b/classHLT_1_1TypedHolder_1aaf7ecd9c31fb51caf55086e51d237930" prot="public" virt="non-virtual"><scope>HLT::TypedHolder</scope><name>TypedHolder</name></member>
      <member refid="d3/d2b/classHLT_1_1TypedHolder_1a788d73d3e9d01aee04f0fd049630bc3c" prot="public" virt="non-virtual"><scope>HLT::TypedHolder</scope><name>TypedHolder</name></member>
      <member refid="d3/d2b/classHLT_1_1TypedHolder_1a5674af31e254569f83fd1bc78680d0fa" prot="private" virt="non-virtual"><scope>HLT::TypedHolder</scope><name>TypedHolder</name></member>
      <member refid="d1/de7/classHLT_1_1TypelessHolder_1ad5252c3dea002440a887aeec6a288f56" prot="public" virt="non-virtual"><scope>HLT::TypedHolder</scope><name>TypelessHolder</name></member>
      <member refid="d8/d7d/classHLT_1_1BaseHolder_1ac3ab152ae6c466f7d3b2632a64db3876" prot="public" virt="virtual"><scope>HLT::TypedHolder</scope><name>~BaseHolder</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
