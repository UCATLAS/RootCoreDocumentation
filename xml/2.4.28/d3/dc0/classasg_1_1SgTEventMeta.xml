<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d3/dc0/classasg_1_1SgTEventMeta" kind="class" prot="public">
    <compoundname>asg::SgTEventMeta</compoundname>
    <includes refid="d8/d3b/SgTEventMeta_8h" local="no">SgTEventMeta.h</includes>
      <sectiondef kind="user-defined">
      <header>Functions providing access to the metadata payload</header>
      <description><para><anchor id="_1amgrp6fdaac6cd34c2b3897fb06dcc6f64a54"/> </para></description>
      <memberdef kind="function" id="d3/dc0/classasg_1_1SgTEventMeta_1a60bbe7b083ab17077b0da075ef88084d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool asg::SgTEventMeta::contains</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>contains</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Check if an object is available for constant access. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/SgTEventMeta.h" line="57" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/SgTEventMeta.icc" bodystart="20" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="d3/dc0/classasg_1_1SgTEventMeta_1a35c467748f01952455e2fadd09659a8b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool asg::SgTEventMeta::transientContains</definition>
        <argsstring>(const std::string &amp;name) const </argsstring>
        <name>transientContains</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Check if an object is available for non-constant access. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/SgTEventMeta.h" line="60" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/SgTEventMeta.icc" bodystart="42" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="d3/dc0/classasg_1_1SgTEventMeta_1aedb363b59edb339a68969a44717f5c6d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
        </templateparamlist>
        <type>StatusCode</type>
        <definition>StatusCode asg::SgTEventMeta::retrieve</definition>
        <argsstring>(T *&amp;obj, const std::string &amp;name)</argsstring>
        <name>retrieve</name>
        <param>
          <type><ref refid="d1/def/classT" kindref="compound">T</ref> *&amp;</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Retrieve a non-constant pointer to an object in the store. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/SgTEventMeta.h" line="64" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/SgTEventMeta.icc" bodystart="56" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="d3/dc0/classasg_1_1SgTEventMeta_1a8677f333362b1e105a38b333f7b85f79" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
        </templateparamlist>
        <type>StatusCode</type>
        <definition>StatusCode asg::SgTEventMeta::retrieve</definition>
        <argsstring>(const T *&amp;obj, const std::string &amp;name)</argsstring>
        <name>retrieve</name>
        <param>
          <type>const <ref refid="d1/def/classT" kindref="compound">T</ref> *&amp;</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Retrieve a constant pointer to an object in the store. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/SgTEventMeta.h" line="67" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/SgTEventMeta.icc" bodystart="85" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="d3/dc0/classasg_1_1SgTEventMeta_1aaba88aa82b0223d4c21d0a6b459442b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
        </templateparamlist>
        <type>StatusCode</type>
        <definition>StatusCode asg::SgTEventMeta::record</definition>
        <argsstring>(T *obj, const std::string &amp;name)</argsstring>
        <name>record</name>
        <param>
          <type><ref refid="d1/def/classT" kindref="compound">T</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Record an object into the store. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/SgTEventMeta.h" line="71" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/SgTEventMeta.icc" bodystart="120" bodyend="145"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="d3/dc0/classasg_1_1SgTEventMeta_1a1be8f5f42dbeb92eccd2ad7d4b94bd74" prot="public" static="no">
        <name>StoreType</name>
        <enumvalue id="d3/dc0/classasg_1_1SgTEventMeta_1a1be8f5f42dbeb92eccd2ad7d4b94bd74ab766c2e7b714a48e9a18f711be1884ec" prot="public">
          <name>InputStore</name>
          <initializer> 0</initializer>
          <briefdescription>
<para>This store is used to access the input metadata. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d3/dc0/classasg_1_1SgTEventMeta_1a1be8f5f42dbeb92eccd2ad7d4b94bd74aa10aa2e5e79374720ae411e38d508e91" prot="public">
          <name>OutputStore</name>
          <initializer> 1</initializer>
          <briefdescription>
<para>This store is used to access the output metadata. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Type of the store that this object implements. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/SgTEventMeta.h" line="44" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/SgTEventMeta.h" bodystart="44" bodyend="47"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d3/dc0/classasg_1_1SgTEventMeta_1a8df5b8609cfc50459021c6a94300721c" prot="private" static="no" mutable="no">
        <type><ref refid="d3/dc0/classasg_1_1SgTEventMeta_1a1be8f5f42dbeb92eccd2ad7d4b94bd74" kindref="member">StoreType</ref></type>
        <definition>StoreType asg::SgTEventMeta::m_type</definition>
        <argsstring></argsstring>
        <name>m_type</name>
        <briefdescription>
<para>Type of this store. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/SgTEventMeta.h" line="80" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/SgTEventMeta.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/dc0/classasg_1_1SgTEventMeta_1a945fe0e1e03279cd792f677161b2f03f" prot="private" static="no" mutable="yes">
        <type><ref refid="de/d95/classxAOD_1_1TEvent" kindref="compound">xAOD::TEvent</ref> *</type>
        <definition>xAOD::TEvent* asg::SgTEventMeta::m_event</definition>
        <argsstring></argsstring>
        <name>m_event</name>
        <briefdescription>
<para>Pointer to the <ref refid="de/d95/classxAOD_1_1TEvent" kindref="compound">xAOD::TEvent</ref> object in use. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/SgTEventMeta.h" line="82" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/SgTEventMeta.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d3/dc0/classasg_1_1SgTEventMeta_1aafaeb68052d30deab1b508b1a026765a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>asg::SgTEventMeta::SgTEventMeta</definition>
        <argsstring>(StoreType type, xAOD::TEvent *event=0)</argsstring>
        <name>SgTEventMeta</name>
        <param>
          <type><ref refid="d3/dc0/classasg_1_1SgTEventMeta_1a1be8f5f42dbeb92eccd2ad7d4b94bd74" kindref="member">StoreType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="de/d95/classxAOD_1_1TEvent" kindref="compound">xAOD::TEvent</ref> *</type>
          <declname>event</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Constructor with a type and an optional TEvent pointer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/SgTEventMeta.h" line="50" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/Root/SgTEventMeta.cxx" bodystart="14" bodyend="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d3/dc0/classasg_1_1SgTEventMeta_1abb25b8568ffa1a171c5a57ebd8640800" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>StatusCode</type>
        <definition>StatusCode asg::SgTEventMeta::initialize</definition>
        <argsstring>() const </argsstring>
        <name>initialize</name>
        <briefdescription>
<para>Function initialising the object. </para>        </briefdescription>
        <detaileddescription>
<para>This function is used by the template functions to try to retrieve a valid pointer to the active TEvent object, if one is not available yet.</para><para><simplesect kind="return"><para><computeroutput>StatusCode::FAILURE</computeroutput> if TEvent can&apos;t be found, <computeroutput>StatusCode::SUCCESS</computeroutput> otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/SgTEventMeta.h" line="77" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/Root/SgTEventMeta.cxx" bodystart="26" bodyend="51"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Wrapper class providing StoreGate-like access to metadata in ROOT</para><para>In <ref refid="d5/dc5/namespaceAthena" kindref="compound">Athena</ref> we access the input and output metadata stores with two separate <ref refid="dd/d95/classStoreGateSvc" kindref="compound">StoreGateSvc</ref> instances. In ROOT the access to the metadata content of the input/output files is provided using the same <ref refid="de/d95/classxAOD_1_1TEvent" kindref="compound">xAOD::TEvent</ref> object that we use to access the event content of these files as well. To emulate the same pattern for the dual-use tools that <ref refid="d5/dc5/namespaceAthena" kindref="compound">Athena</ref> provides, this wrapper is used.</para><para>It behaves pretty much like <ref refid="d2/dd3/classasg_1_1SgTEvent" kindref="compound">SgTEvent</ref>, but I didn&apos;t want to make that class even more complicated. Instead decided to implement the metadata access using this independent class.</para><para><simplesect kind="author"><para>Attila Krasznahorkay &lt;<ulink url="mailto:Attila.Krasznahorkay@cern.ch">Attila.Krasznahorkay@cern.ch</ulink>&gt;</para></simplesect>
<simplesect kind="rcs"><title>Revision</title><para>611829 </para></simplesect>
<simplesect kind="rcs"><title>Date</title><para>2014-08-14 15:53:41 +0200 (Thu, 14 Aug 2014) </para></simplesect>
</para>    </detaileddescription>
    <collaborationgraph>
      <node id="17499">
        <label>xAOD::TVirtualEvent</label>
        <link refid="de/daf/classxAOD_1_1TVirtualEvent"/>
      </node>
      <node id="17497">
        <label>asg::SgTEventMeta</label>
        <link refid="d3/dc0/classasg_1_1SgTEventMeta"/>
        <childnode refid="17498" relation="usage">
          <edgelabel>m_event</edgelabel>
        </childnode>
      </node>
      <node id="17498">
        <label>xAOD::TEvent</label>
        <link refid="de/d95/classxAOD_1_1TEvent"/>
        <childnode refid="17499" relation="public-inheritance">
        </childnode>
        <childnode refid="17500" relation="usage">
          <edgelabel>m_inChainTracker</edgelabel>
        </childnode>
        <childnode refid="17501" relation="usage">
          <edgelabel>m_outputEventFormat</edgelabel>
          <edgelabel>m_inputEventFormat</edgelabel>
        </childnode>
      </node>
      <node id="17501">
        <label>xAOD::EventFormat_v1</label>
        <link refid="d8/d1f/classxAOD_1_1EventFormat__v1"/>
      </node>
      <node id="17500">
        <label>xAOD::TChainStateTracker</label>
        <link refid="d1/d3a/classxAOD_1_1TChainStateTracker"/>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/SgTEventMeta.h" line="40" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/SgTEventMeta.h" bodystart="40" bodyend="84"/>
    <listofallmembers>
      <member refid="d3/dc0/classasg_1_1SgTEventMeta_1a60bbe7b083ab17077b0da075ef88084d" prot="public" virt="non-virtual"><scope>asg::SgTEventMeta</scope><name>contains</name></member>
      <member refid="d3/dc0/classasg_1_1SgTEventMeta_1abb25b8568ffa1a171c5a57ebd8640800" prot="private" virt="non-virtual"><scope>asg::SgTEventMeta</scope><name>initialize</name></member>
      <member refid="d3/dc0/classasg_1_1SgTEventMeta_1a1be8f5f42dbeb92eccd2ad7d4b94bd74ab766c2e7b714a48e9a18f711be1884ec" prot="public" virt="non-virtual"><scope>asg::SgTEventMeta</scope><name>InputStore</name></member>
      <member refid="d3/dc0/classasg_1_1SgTEventMeta_1a945fe0e1e03279cd792f677161b2f03f" prot="private" virt="non-virtual"><scope>asg::SgTEventMeta</scope><name>m_event</name></member>
      <member refid="d3/dc0/classasg_1_1SgTEventMeta_1a8df5b8609cfc50459021c6a94300721c" prot="private" virt="non-virtual"><scope>asg::SgTEventMeta</scope><name>m_type</name></member>
      <member refid="d3/dc0/classasg_1_1SgTEventMeta_1a1be8f5f42dbeb92eccd2ad7d4b94bd74aa10aa2e5e79374720ae411e38d508e91" prot="public" virt="non-virtual"><scope>asg::SgTEventMeta</scope><name>OutputStore</name></member>
      <member refid="d3/dc0/classasg_1_1SgTEventMeta_1aaba88aa82b0223d4c21d0a6b459442b2" prot="public" virt="non-virtual"><scope>asg::SgTEventMeta</scope><name>record</name></member>
      <member refid="d3/dc0/classasg_1_1SgTEventMeta_1aedb363b59edb339a68969a44717f5c6d" prot="public" virt="non-virtual"><scope>asg::SgTEventMeta</scope><name>retrieve</name></member>
      <member refid="d3/dc0/classasg_1_1SgTEventMeta_1a8677f333362b1e105a38b333f7b85f79" prot="public" virt="non-virtual"><scope>asg::SgTEventMeta</scope><name>retrieve</name></member>
      <member refid="d3/dc0/classasg_1_1SgTEventMeta_1aafaeb68052d30deab1b508b1a026765a" prot="public" virt="non-virtual"><scope>asg::SgTEventMeta</scope><name>SgTEventMeta</name></member>
      <member refid="d3/dc0/classasg_1_1SgTEventMeta_1a1be8f5f42dbeb92eccd2ad7d4b94bd74" prot="public" virt="non-virtual"><scope>asg::SgTEventMeta</scope><name>StoreType</name></member>
      <member refid="d3/dc0/classasg_1_1SgTEventMeta_1a35c467748f01952455e2fadd09659a8b" prot="public" virt="non-virtual"><scope>asg::SgTEventMeta</scope><name>transientContains</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
