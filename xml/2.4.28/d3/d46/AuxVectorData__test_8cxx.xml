<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d3/d46/AuxVectorData__test_8cxx" kind="file">
    <compoundname>AuxVectorData_test.cxx</compoundname>
    <includes refid="d9/df2/AuxVectorData_8h" local="yes">AthContainers/AuxVectorData.h</includes>
    <includes refid="db/d7f/AuxTypeRegistry_8h" local="yes">AthContainers/AuxTypeRegistry.h</includes>
    <includes refid="d3/d0f/AuxStoreInternal_8h" local="yes">AthContainers/AuxStoreInternal.h</includes>
    <includes refid="d4/d03/exceptions_8h" local="yes">AthContainers/exceptions.h</includes>
    <includes refid="da/d8e/foreach_8h" local="yes">AthContainers/tools/foreach.h</includes>
    <includes refid="d2/d67/expect__exception_8h" local="yes">TestTools/expect_exception.h</includes>
    <includes local="yes">boost/thread/shared_mutex.hpp</includes>
    <includes local="yes">boost/thread/shared_lock_guard.hpp</includes>
    <includes local="no">iostream</includes>
    <includes local="no">sstream</includes>
    <includes local="no">cassert</includes>
    <includes refid="dd/d46/auxid__set__equal_8icc" local="yes">auxid_set_equal.icc</includes>
    <incdepgraph>
      <node id="72370">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="72388">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="72338" relation="include">
        </childnode>
        <childnode refid="72340" relation="include">
        </childnode>
        <childnode refid="72347" relation="include">
        </childnode>
        <childnode refid="72348" relation="include">
        </childnode>
      </node>
      <node id="72390">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="72349" relation="include">
        </childnode>
        <childnode refid="72336" relation="include">
        </childnode>
        <childnode refid="72391" relation="include">
        </childnode>
        <childnode refid="72350" relation="include">
        </childnode>
      </node>
      <node id="72389">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="72346">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="72348">
        <label>functional</label>
      </node>
      <node id="72344">
        <label>limits</label>
      </node>
      <node id="72391">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="72368">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="72341">
        <label>iterator</label>
      </node>
      <node id="72351">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="72345" relation="include">
        </childnode>
        <childnode refid="72352" relation="include">
        </childnode>
      </node>
      <node id="72395">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="72335" relation="include">
        </childnode>
        <childnode refid="72396" relation="include">
        </childnode>
        <childnode refid="72397" relation="include">
        </childnode>
        <childnode refid="72375" relation="include">
        </childnode>
        <childnode refid="72345" relation="include">
        </childnode>
      </node>
      <node id="72353">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="72354" relation="include">
        </childnode>
        <childnode refid="72342" relation="include">
        </childnode>
      </node>
      <node id="72356">
        <label>stdint.h</label>
      </node>
      <node id="72376">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="72336" relation="include">
        </childnode>
        <childnode refid="72375" relation="include">
        </childnode>
      </node>
      <node id="72399">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="72393">
        <label>AthContainersInterfaces/IAuxStoreIO.h</label>
        <link refid="d9/db5/IAuxStoreIO_8h"/>
        <childnode refid="72335" relation="include">
        </childnode>
        <childnode refid="72375" relation="include">
        </childnode>
        <childnode refid="72394" relation="include">
        </childnode>
        <childnode refid="72350" relation="include">
        </childnode>
      </node>
      <node id="72359">
        <label>RVersion.h</label>
      </node>
      <node id="72337">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="72338" relation="include">
        </childnode>
        <childnode refid="72347" relation="include">
        </childnode>
        <childnode refid="72348" relation="include">
        </childnode>
      </node>
      <node id="72343">
        <label>cmath</label>
      </node>
      <node id="72401">
        <label>cassert</label>
      </node>
      <node id="72397">
        <label>stdexcept</label>
      </node>
      <node id="72371">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="72345">
        <label>string</label>
      </node>
      <node id="72334">
        <label>AthContainers/AuxVectorData.h</label>
        <link refid="d9/df2/AuxVectorData_8h"/>
        <childnode refid="72335" relation="include">
        </childnode>
        <childnode refid="72349" relation="include">
        </childnode>
        <childnode refid="72351" relation="include">
        </childnode>
        <childnode refid="72353" relation="include">
        </childnode>
        <childnode refid="72355" relation="include">
        </childnode>
        <childnode refid="72361" relation="include">
        </childnode>
        <childnode refid="72362" relation="include">
        </childnode>
        <childnode refid="72363" relation="include">
        </childnode>
        <childnode refid="72354" relation="include">
        </childnode>
        <childnode refid="72340" relation="include">
        </childnode>
        <childnode refid="72342" relation="include">
        </childnode>
        <childnode refid="72364" relation="include">
        </childnode>
        <childnode refid="72365" relation="include">
        </childnode>
        <childnode refid="72366" relation="include">
        </childnode>
        <childnode refid="72372" relation="include">
        </childnode>
      </node>
      <node id="72374">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="72336" relation="include">
        </childnode>
        <childnode refid="72375" relation="include">
        </childnode>
      </node>
      <node id="72364">
        <label>AthContainers/tools/likely.h</label>
        <link refid="d6/dd6/likely_8h"/>
      </node>
      <node id="72360">
        <label>RootMetaSelection.h</label>
      </node>
      <node id="72385">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="72365">
        <label>AthContainers/tools/assume.h</label>
        <link refid="d2/d20/assume_8h"/>
      </node>
      <node id="72382">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="72358">
        <label>AthLinks/tools/selection_ns.h</label>
        <link refid="d3/dec/selection__ns_8h"/>
        <childnode refid="72359" relation="include">
        </childnode>
        <childnode refid="72360" relation="include">
        </childnode>
      </node>
      <node id="72362">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="72398">
        <label>AthContainers/tools/foreach.h</label>
        <link refid="da/d8e/foreach_8h"/>
        <childnode refid="72399" relation="include">
        </childnode>
      </node>
      <node id="72369">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="72380">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="72351" relation="include">
        </childnode>
        <childnode refid="72344" relation="include">
        </childnode>
        <childnode refid="72356" relation="include">
        </childnode>
        <childnode refid="72381" relation="include">
        </childnode>
      </node>
      <node id="72335">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="72336" relation="include">
        </childnode>
        <childnode refid="72337" relation="include">
        </childnode>
      </node>
      <node id="72338">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="72339" relation="include">
        </childnode>
        <childnode refid="72340" relation="include">
        </childnode>
        <childnode refid="72341" relation="include">
        </childnode>
        <childnode refid="72336" relation="include">
        </childnode>
        <childnode refid="72342" relation="include">
        </childnode>
        <childnode refid="72343" relation="include">
        </childnode>
        <childnode refid="72344" relation="include">
        </childnode>
        <childnode refid="72345" relation="include">
        </childnode>
        <childnode refid="72346" relation="include">
        </childnode>
      </node>
      <node id="72375">
        <label>typeinfo</label>
      </node>
      <node id="72381">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="72361">
        <label>AthenaKernel/ILockable.h</label>
      </node>
      <node id="72357">
        <label>AthLinks/DataLinkBase.h</label>
        <link refid="db/da8/DataLinkBase_8h_source"/>
        <childnode refid="72356" relation="include">
        </childnode>
      </node>
      <node id="72352">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="72384">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="72350">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="72373">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="72335" relation="include">
        </childnode>
        <childnode refid="72374" relation="include">
        </childnode>
        <childnode refid="72376" relation="include">
        </childnode>
        <childnode refid="72377" relation="include">
        </childnode>
        <childnode refid="72386" relation="include">
        </childnode>
        <childnode refid="72366" relation="include">
        </childnode>
        <childnode refid="72336" relation="include">
        </childnode>
        <childnode refid="72375" relation="include">
        </childnode>
        <childnode refid="72354" relation="include">
        </childnode>
        <childnode refid="72388" relation="include">
        </childnode>
        <childnode refid="72389" relation="include">
        </childnode>
      </node>
      <node id="72354">
        <label>vector</label>
      </node>
      <node id="72340">
        <label>utility</label>
      </node>
      <node id="72402">
        <label>boost/thread/shared_lock_guard.hpp</label>
      </node>
      <node id="72363">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="72404">
        <label>sstream</label>
      </node>
      <node id="72367">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="72378">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="72366">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="72367" relation="include">
        </childnode>
        <childnode refid="72368" relation="include">
        </childnode>
        <childnode refid="72369" relation="include">
        </childnode>
        <childnode refid="72370" relation="include">
        </childnode>
        <childnode refid="72371" relation="include">
        </childnode>
      </node>
      <node id="72342">
        <label>cstdlib</label>
      </node>
      <node id="72403">
        <label>iostream</label>
      </node>
      <node id="72396">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="72349">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="72335" relation="include">
        </childnode>
        <childnode refid="72336" relation="include">
        </childnode>
        <childnode refid="72350" relation="include">
        </childnode>
      </node>
      <node id="72336">
        <label>cstddef</label>
      </node>
      <node id="72372">
        <label>AthContainers/AuxVectorData.icc</label>
        <link refid="da/de7/AuxVectorData_8icc"/>
        <childnode refid="72373" relation="include">
        </childnode>
        <childnode refid="72390" relation="include">
        </childnode>
        <childnode refid="72349" relation="include">
        </childnode>
        <childnode refid="72364" relation="include">
        </childnode>
        <childnode refid="72365" relation="include">
        </childnode>
      </node>
      <node id="72377">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="72374" relation="include">
        </childnode>
        <childnode refid="72378" relation="include">
        </childnode>
        <childnode refid="72353" relation="include">
        </childnode>
        <childnode refid="72379" relation="include">
        </childnode>
        <childnode refid="72363" relation="include">
        </childnode>
        <childnode refid="72375" relation="include">
        </childnode>
        <childnode refid="72354" relation="include">
        </childnode>
        <childnode refid="72339" relation="include">
        </childnode>
        <childnode refid="72356" relation="include">
        </childnode>
        <childnode refid="72383" relation="include">
        </childnode>
        <childnode refid="72384" relation="include">
        </childnode>
        <childnode refid="72385" relation="include">
        </childnode>
      </node>
      <node id="72383">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="72394">
        <label>set</label>
      </node>
      <node id="72387">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="72379">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="72378" relation="include">
        </childnode>
        <childnode refid="72380" relation="include">
        </childnode>
        <childnode refid="72363" relation="include">
        </childnode>
        <childnode refid="72354" relation="include">
        </childnode>
        <childnode refid="72382" relation="include">
        </childnode>
      </node>
      <node id="72339">
        <label>algorithm</label>
      </node>
      <node id="72400">
        <label>TestTools/expect_exception.h</label>
        <link refid="d2/d67/expect__exception_8h"/>
        <childnode refid="72401" relation="include">
        </childnode>
      </node>
      <node id="72392">
        <label>AthContainers/AuxStoreInternal.h</label>
        <link refid="d3/d0f/AuxStoreInternal_8h"/>
        <childnode refid="72390" relation="include">
        </childnode>
        <childnode refid="72393" relation="include">
        </childnode>
        <childnode refid="72366" relation="include">
        </childnode>
        <childnode refid="72363" relation="include">
        </childnode>
        <childnode refid="72354" relation="include">
        </childnode>
        <childnode refid="72391" relation="include">
        </childnode>
        <childnode refid="72350" relation="include">
        </childnode>
      </node>
      <node id="72355">
        <label>AthLinks/DataLink.h</label>
        <link refid="da/de8/DataLink_8h_source"/>
        <childnode refid="72356" relation="include">
        </childnode>
        <childnode refid="72345" relation="include">
        </childnode>
        <childnode refid="72357" relation="include">
        </childnode>
        <childnode refid="72358" relation="include">
        </childnode>
      </node>
      <node id="72347">
        <label>memory</label>
      </node>
      <node id="72386">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="72376" relation="include">
        </childnode>
        <childnode refid="72377" relation="include">
        </childnode>
        <childnode refid="72387" relation="include">
        </childnode>
      </node>
      <node id="72333">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxVectorData_test.cxx</label>
        <link refid="AuxVectorData_test.cxx"/>
        <childnode refid="72334" relation="include">
        </childnode>
        <childnode refid="72373" relation="include">
        </childnode>
        <childnode refid="72392" relation="include">
        </childnode>
        <childnode refid="72395" relation="include">
        </childnode>
        <childnode refid="72398" relation="include">
        </childnode>
        <childnode refid="72400" relation="include">
        </childnode>
        <childnode refid="72367" relation="include">
        </childnode>
        <childnode refid="72402" relation="include">
        </childnode>
        <childnode refid="72403" relation="include">
        </childnode>
        <childnode refid="72404" relation="include">
        </childnode>
        <childnode refid="72401" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="d6/d8d/classSG_1_1AuxVectorData__test" prot="public">SG::AuxVectorData_test</innerclass>
    <innerclass refid="df/de7/classThreadingTest" prot="public">ThreadingTest</innerclass>
    <innerclass refid="dc/de4/structThreadingTest_1_1testThread" prot="public">ThreadingTest::testThread</innerclass>
    <innerclass refid="dd/db9/classTestStore" prot="public">TestStore</innerclass>
    <innernamespace refid="dd/d59/namespaceSG">SG</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="d3/d46/AuxVectorData__test_8cxx_1a5ff9dc97670eb99a0cf3501111cf3e1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_get_data</definition>
        <argsstring>()</argsstring>
        <name>test_get_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxVectorData_test.cxx" line="52" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxVectorData_test.cxx" bodystart="51" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="d3/d46/AuxVectorData__test_8cxx_1aa9645d2d1912efd27e83867429e862d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_swap</definition>
        <argsstring>()</argsstring>
        <name>test_swap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxVectorData_test.cxx" line="131" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxVectorData_test.cxx" bodystart="130" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="d3/d46/AuxVectorData__test_8cxx_1a02b4d6539176fba3c3b837d8e7f4b4fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_get_types</definition>
        <argsstring>()</argsstring>
        <name>test_get_types</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxVectorData_test.cxx" line="155" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxVectorData_test.cxx" bodystart="154" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="d3/d46/AuxVectorData__test_8cxx_1abcf824815ccf8be2cc5a5fe6a19a0ddf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_decoration</definition>
        <argsstring>()</argsstring>
        <name>test_decoration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxVectorData_test.cxx" line="178" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxVectorData_test.cxx" bodystart="177" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="d3/d46/AuxVectorData__test_8cxx_1a4faa2b1253ebee4809759cae2fd23855" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_move</definition>
        <argsstring>()</argsstring>
        <name>test_move</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxVectorData_test.cxx" line="223" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxVectorData_test.cxx" bodystart="222" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="d3/d46/AuxVectorData__test_8cxx_1afc297d495a51b9d1aa45fe67546edf88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_setoption</definition>
        <argsstring>()</argsstring>
        <name>test_setoption</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxVectorData_test.cxx" line="395" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxVectorData_test.cxx" bodystart="394" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="d3/d46/AuxVectorData__test_8cxx_1afaabeb97802c1dd67322deebd4ff7f2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_threading</definition>
        <argsstring>()</argsstring>
        <name>test_threading</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxVectorData_test.cxx" line="437" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxVectorData_test.cxx" bodystart="436" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="d3/d46/AuxVectorData__test_8cxx_1a907755b7cb5fee015f3efd981de1b44f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double test_code</definition>
        <argsstring>(SG::auxid_t auxid, AuxVectorData_test &amp;b)</argsstring>
        <name>test_code</name>
        <param>
          <type><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member">SG::auxid_t</ref></type>
          <declname>auxid</declname>
        </param>
        <param>
          <type><ref refid="d6/d8d/classSG_1_1AuxVectorData__test" kindref="compound">AuxVectorData_test</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxVectorData_test.cxx" line="449" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxVectorData_test.cxx" bodystart="448" bodyend="451"/>
      </memberdef>
      <memberdef kind="function" id="d3/d46/AuxVectorData__test_8cxx_1aea9cbc9cacfd9bf382d5e20758f7075c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double test_code</definition>
        <argsstring>(SG::auxid_t auxid, const AuxVectorData_test &amp;b)</argsstring>
        <name>test_code</name>
        <param>
          <type><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member">SG::auxid_t</ref></type>
          <declname>auxid</declname>
        </param>
        <param>
          <type>const <ref refid="d6/d8d/classSG_1_1AuxVectorData__test" kindref="compound">AuxVectorData_test</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxVectorData_test.cxx" line="453" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxVectorData_test.cxx" bodystart="452" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="d3/d46/AuxVectorData__test_8cxx_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxVectorData_test.cxx" line="459" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxVectorData_test.cxx" bodystart="458" bodyend="470"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>$Id$</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight><highlight class="preprocessor">#undef<sp/>NDEBUG</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d9/df2/AuxVectorData_8h" kindref="compound" tooltip="Manage lookup of vectors of auxiliary data.">AthContainers/AuxVectorData.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="db/d7f/AuxTypeRegistry_8h" kindref="compound" tooltip="Handle mappings between names and auxid_t.">AthContainers/AuxTypeRegistry.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d3/d0f/AuxStoreInternal_8h" kindref="compound" tooltip="An auxiliary data store that holds data internally.">AthContainers/AuxStoreInternal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d4/d03/exceptions_8h" kindref="compound" tooltip="Exceptions that can be thrown from AthContainers.">AthContainers/exceptions.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="da/d8e/foreach_8h" kindref="compound" tooltip="foreach helper for standalone build.">AthContainers/tools/foreach.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d2/d67/expect__exception_8h" kindref="compound" tooltip="Helper to check that an exception is thrown.">TestTools/expect_exception.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ATHCONTAINERS_NO_THREADS</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;boost/thread/shared_mutex.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;boost/thread/shared_lock_guard.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;auxid_set_equal.icc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">SG<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="d6/d8d/classSG_1_1AuxVectorData__test" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d6/d8d/classSG_1_1AuxVectorData__test" kindref="compound">AuxVectorData_test</ref></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="db/dd6/classSG_1_1AuxVectorData" kindref="compound" tooltip="Manage lookup of vectors of auxiliary data.">AuxVectorData</ref></highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="db/dd6/classSG_1_1AuxVectorData_1af6e2da3c14ea74935120cd1b5a37f021" kindref="member" tooltip="Set the store associated with this object.">AuxVectorData::setStore</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="db/dd6/classSG_1_1AuxVectorData_1a95f42871b1d206674b8f49a8cd73ae55" kindref="member" tooltip="Minimum length to use for the cache vector.">AuxVectorData::s_minCacheLen</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="d6/d8d/classSG_1_1AuxVectorData__test_1ae4c6a90d1ad764572d6d15a69ec03368" kindref="member" tooltip="Return the size of the container.">size_v</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>10;<sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="d6/d8d/classSG_1_1AuxVectorData__test_1a29972d73e174308991213df92daa44cd" kindref="member" tooltip="Return the capacity of the container.">capacity_v</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>20;<sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal">};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>SG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="db/dd6/classSG_1_1AuxVectorData" kindref="compound" tooltip="Manage lookup of vectors of auxiliary data.">SG::AuxVectorData</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="d6/d8d/classSG_1_1AuxVectorData__test" kindref="compound">SG::AuxVectorData_test</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_get_data()</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;test_get_data\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><ref refid="d6/d8d/classSG_1_1AuxVectorData__test" kindref="compound">AuxVectorData_test</ref><sp/>b1;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd6/classSG_1_1AuxVectorData" kindref="compound" tooltip="Manage lookup of vectors of auxiliary data.">AuxVectorData</ref>&amp;<sp/>cb1<sp/>=<sp/>b1;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/>ityp<sp/>=<sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry_1ab22c247525e0883b46012f14b6f5a048" kindref="member" tooltip="Return the singleton registry instance.">SG::AuxTypeRegistry::instance</ref>().getAuxID&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;anInt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><ref refid="d2/d67/expect__exception_8h_1a15ab402fd517d4bddede832507ed6439" kindref="member" tooltip="Helper to check that an exception is thrown.">EXPECT_EXCEPTION</ref><sp/>(<ref refid="d0/d45/classSG_1_1ExcNoAuxStore" kindref="compound" tooltip="Exception --- Aux data requested from object with no store.">SG::ExcNoAuxStore</ref>,<sp/>b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp,<sp/>0));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><ref refid="d2/d67/expect__exception_8h_1a15ab402fd517d4bddede832507ed6439" kindref="member" tooltip="Helper to check that an exception is thrown.">EXPECT_EXCEPTION</ref><sp/>(<ref refid="d0/d45/classSG_1_1ExcNoAuxStore" kindref="compound" tooltip="Exception --- Aux data requested from object with no store.">SG::ExcNoAuxStore</ref>,<sp/>cb1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1ac60d418d024c0970f058e147b2e0ee6c" kindref="member" tooltip="Return a const pointer to the start of an aux data vector.">getDataArray</ref><sp/>(ityp));</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><ref refid="d2/d67/expect__exception_8h_1a15ab402fd517d4bddede832507ed6439" kindref="member" tooltip="Helper to check that an exception is thrown.">EXPECT_EXCEPTION</ref><sp/>(<ref refid="d0/d45/classSG_1_1ExcNoAuxStore" kindref="compound" tooltip="Exception --- Aux data requested from object with no store.">SG::ExcNoAuxStore</ref>,<sp/>cb1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1ae5ef17864033f73d8b7d4a516241a138" kindref="member" tooltip="Return a const pointer to the start of an aux data vector.">getDataArrayAllowMissing</ref><sp/>(ityp));</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="d1/d1c/classSG_1_1AuxStoreInternal" kindref="compound" tooltip="An auxiliary data store that holds data internally.">SG::AuxStoreInternal</ref><sp/>store;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><ref refid="d3/dd5/classSG_1_1IConstAuxStore" kindref="compound" tooltip="Interface for const operations on an auxiliary store.">SG::IConstAuxStore</ref>*<sp/>cstore<sp/>=<sp/>&amp;store;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>assert<sp/>(!b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a97b5279b30e60d9b099cb6496404c1aa" kindref="member" tooltip="Return true if this object has an associated non-const store.">hasNonConstStore</ref>());</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>assert<sp/>(!b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a7ae11026ce063feb9b55456698ef2a4f" kindref="member" tooltip="Return true if this object has an associated store.">hasStore</ref>());</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>assert<sp/>(!b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1aff7bce34ddc38433ed057fab2b0e9280" kindref="member" tooltip="Test to see if a variable exists in the store.">isAvailable</ref><sp/>(ityp));</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>assert<sp/>(!b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a02bd683426600b15e16ae9d7ba88b589" kindref="member" tooltip="Test to see if a variable is available for writing.">isAvailableWritable</ref><sp/>(ityp));</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>assert<sp/>(!b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a3f2136a2be890f5cf9e12b01342d50de" kindref="member" tooltip="Test to see if a variable is available for writing as a decoration.">isAvailableWritableAsDecoration</ref><sp/>(ityp));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>assert<sp/>(!b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1aff7bce34ddc38433ed057fab2b0e9280" kindref="member" tooltip="Test to see if a variable exists in the store.">isAvailable</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;anInt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>assert<sp/>(!b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a02bd683426600b15e16ae9d7ba88b589" kindref="member" tooltip="Test to see if a variable is available for writing.">isAvailableWritable</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;anInt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>assert<sp/>(!b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a3f2136a2be890f5cf9e12b01342d50de" kindref="member" tooltip="Test to see if a variable is available for writing as a decoration.">isAvailableWritableAsDecoration</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;anInt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>assert<sp/>(b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a239b57ce5e7833bb83c8f0bf3b390814" kindref="member" tooltip="Return the current store, as a const interface.">getConstStore</ref>()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>assert<sp/>(b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1af1d8f5f0dd148fbf2041560f77ab0113" kindref="member" tooltip="Return the current store, as a non-const interface.">getStore</ref>()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1af6e2da3c14ea74935120cd1b5a37f021" kindref="member" tooltip="Set the store associated with this object.">setStore</ref><sp/>(cstore);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>assert<sp/>(b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a239b57ce5e7833bb83c8f0bf3b390814" kindref="member" tooltip="Return the current store, as a const interface.">getConstStore</ref>()<sp/>==<sp/>cstore);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>assert<sp/>(b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1af1d8f5f0dd148fbf2041560f77ab0113" kindref="member" tooltip="Return the current store, as a non-const interface.">getStore</ref>()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>assert<sp/>(!b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a97b5279b30e60d9b099cb6496404c1aa" kindref="member" tooltip="Return true if this object has an associated non-const store.">hasNonConstStore</ref>());</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>assert<sp/>(b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a7ae11026ce063feb9b55456698ef2a4f" kindref="member" tooltip="Return true if this object has an associated store.">hasStore</ref>());</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>assert<sp/>(!b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1aff7bce34ddc38433ed057fab2b0e9280" kindref="member" tooltip="Test to see if a variable exists in the store.">isAvailable</ref><sp/>(ityp));</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>assert<sp/>(!b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a02bd683426600b15e16ae9d7ba88b589" kindref="member" tooltip="Test to see if a variable is available for writing.">isAvailableWritable</ref><sp/>(ityp));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>assert<sp/>(!b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a3f2136a2be890f5cf9e12b01342d50de" kindref="member" tooltip="Test to see if a variable is available for writing as a decoration.">isAvailableWritableAsDecoration</ref><sp/>(ityp));</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>assert<sp/>(!b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1aff7bce34ddc38433ed057fab2b0e9280" kindref="member" tooltip="Test to see if a variable exists in the store.">isAvailable</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;anInt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>assert<sp/>(!b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a02bd683426600b15e16ae9d7ba88b589" kindref="member" tooltip="Test to see if a variable is available for writing.">isAvailableWritable</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;anInt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>assert<sp/>(!b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a3f2136a2be890f5cf9e12b01342d50de" kindref="member" tooltip="Test to see if a variable is available for writing as a decoration.">isAvailableWritableAsDecoration</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;anInt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="d2/d67/expect__exception_8h_1a15ab402fd517d4bddede832507ed6439" kindref="member" tooltip="Helper to check that an exception is thrown.">EXPECT_EXCEPTION</ref><sp/>(<ref refid="da/ddd/classSG_1_1ExcConstAuxData" kindref="compound" tooltip="Exception --- Non-const operation performed on const aux data.">SG::ExcConstAuxData</ref>,<sp/>b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp,<sp/>0));</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><ref refid="d2/d67/expect__exception_8h_1a15ab402fd517d4bddede832507ed6439" kindref="member" tooltip="Helper to check that an exception is thrown.">EXPECT_EXCEPTION</ref><sp/>(<ref refid="d8/da7/classSG_1_1ExcBadAuxVar" kindref="compound" tooltip="Exception --- Attempt to retrieve nonexistent aux data item.">SG::ExcBadAuxVar</ref>,<sp/>cb1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp,<sp/>0));<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><ref refid="d2/d67/expect__exception_8h_1a15ab402fd517d4bddede832507ed6439" kindref="member" tooltip="Helper to check that an exception is thrown.">EXPECT_EXCEPTION</ref><sp/>(<ref refid="d8/da7/classSG_1_1ExcBadAuxVar" kindref="compound" tooltip="Exception --- Attempt to retrieve nonexistent aux data item.">SG::ExcBadAuxVar</ref>,<sp/>cb1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1ac60d418d024c0970f058e147b2e0ee6c" kindref="member" tooltip="Return a const pointer to the start of an aux data vector.">getDataArray</ref><sp/>(ityp));</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>assert<sp/>(cb1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1ae5ef17864033f73d8b7d4a516241a138" kindref="member" tooltip="Return a const pointer to the start of an aux data vector.">getDataArrayAllowMissing</ref><sp/>(ityp)<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1af6e2da3c14ea74935120cd1b5a37f021" kindref="member" tooltip="Set the store associated with this object.">setStore</ref><sp/>(&amp;store);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>assert<sp/>(b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a239b57ce5e7833bb83c8f0bf3b390814" kindref="member" tooltip="Return the current store, as a const interface.">getConstStore</ref>()<sp/>==<sp/>&amp;store);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>assert<sp/>(b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1af1d8f5f0dd148fbf2041560f77ab0113" kindref="member" tooltip="Return the current store, as a non-const interface.">getStore</ref>()<sp/>==<sp/>&amp;store);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>assert<sp/>(b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a97b5279b30e60d9b099cb6496404c1aa" kindref="member" tooltip="Return true if this object has an associated non-const store.">hasNonConstStore</ref>());</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>assert<sp/>(b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a7ae11026ce063feb9b55456698ef2a4f" kindref="member" tooltip="Return true if this object has an associated store.">hasStore</ref>());</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>assert<sp/>(b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp,<sp/>0)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>assert<sp/>(b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp,<sp/>1)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp,<sp/>0)<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp,<sp/>1)<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>assert<sp/>(b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp,<sp/>0)<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>assert<sp/>(b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp,<sp/>1)<sp/>==<sp/>2);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>assert<sp/>(b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1aff7bce34ddc38433ed057fab2b0e9280" kindref="member" tooltip="Test to see if a variable exists in the store.">isAvailable</ref><sp/>(ityp));</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>assert<sp/>(b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a02bd683426600b15e16ae9d7ba88b589" kindref="member" tooltip="Test to see if a variable is available for writing.">isAvailableWritable</ref><sp/>(ityp));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>assert<sp/>(b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a3f2136a2be890f5cf9e12b01342d50de" kindref="member" tooltip="Test to see if a variable is available for writing as a decoration.">isAvailableWritableAsDecoration</ref><sp/>(ityp));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>assert<sp/>(b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1aff7bce34ddc38433ed057fab2b0e9280" kindref="member" tooltip="Test to see if a variable exists in the store.">isAvailable</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;anInt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>assert<sp/>(b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a02bd683426600b15e16ae9d7ba88b589" kindref="member" tooltip="Test to see if a variable is available for writing.">isAvailableWritable</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;anInt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>assert<sp/>(b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a3f2136a2be890f5cf9e12b01342d50de" kindref="member" tooltip="Test to see if a variable is available for writing as a decoration.">isAvailableWritableAsDecoration</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;anInt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>assert<sp/>(reinterpret_cast&lt;const<sp/>int*&gt;(cb1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1ac60d418d024c0970f058e147b2e0ee6c" kindref="member" tooltip="Return a const pointer to the start of an aux data vector.">getDataArray</ref><sp/>(ityp))[1]<sp/>==<sp/>2);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>assert<sp/>(reinterpret_cast&lt;const<sp/>int*&gt;(cb1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1ae5ef17864033f73d8b7d4a516241a138" kindref="member" tooltip="Return a const pointer to the start of an aux data vector.">getDataArrayAllowMissing</ref><sp/>(ityp))[1]<sp/>==<sp/>2);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1af6e2da3c14ea74935120cd1b5a37f021" kindref="member" tooltip="Set the store associated with this object.">setStore</ref><sp/>(cstore);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>assert<sp/>(!b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a97b5279b30e60d9b099cb6496404c1aa" kindref="member" tooltip="Return true if this object has an associated non-const store.">hasNonConstStore</ref>());</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>assert<sp/>(cb1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp,<sp/>0)<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>assert<sp/>(cb1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp,<sp/>1)<sp/>==<sp/>2);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>assert<sp/>(b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1aff7bce34ddc38433ed057fab2b0e9280" kindref="member" tooltip="Test to see if a variable exists in the store.">isAvailable</ref><sp/>(ityp));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>assert<sp/>(!b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a02bd683426600b15e16ae9d7ba88b589" kindref="member" tooltip="Test to see if a variable is available for writing.">isAvailableWritable</ref><sp/>(ityp));</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>assert<sp/>(b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a3f2136a2be890f5cf9e12b01342d50de" kindref="member" tooltip="Test to see if a variable is available for writing as a decoration.">isAvailableWritableAsDecoration</ref><sp/>(ityp));</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>assert<sp/>(b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1aff7bce34ddc38433ed057fab2b0e9280" kindref="member" tooltip="Test to see if a variable exists in the store.">isAvailable</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;anInt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>assert<sp/>(!b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a02bd683426600b15e16ae9d7ba88b589" kindref="member" tooltip="Test to see if a variable is available for writing.">isAvailableWritable</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;anInt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>assert<sp/>(b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a3f2136a2be890f5cf9e12b01342d50de" kindref="member" tooltip="Test to see if a variable is available for writing as a decoration.">isAvailableWritableAsDecoration</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;anInt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/>ftyp<sp/>=<sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry_1ab22c247525e0883b46012f14b6f5a048" kindref="member" tooltip="Return the singleton registry instance.">SG::AuxTypeRegistry::instance</ref>().getAuxID&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;aFloat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>ff<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/>(store.getData<sp/>(ftyp,<sp/>10,<sp/>20));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>ff[0]<sp/>=<sp/>1.5;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>ff[1]<sp/>=<sp/>2.5;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>assert<sp/>(cb1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;<sp/>(ftyp,<sp/>0)<sp/>==<sp/>1.5);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>assert<sp/>(cb1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;<sp/>(ftyp,<sp/>1)<sp/>==<sp/>2.5);</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_swap()</highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;test_swap\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/>ityp<sp/>=<sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry_1ab22c247525e0883b46012f14b6f5a048" kindref="member" tooltip="Return the singleton registry instance.">SG::AuxTypeRegistry::instance</ref>().getAuxID&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;anInt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><ref refid="d6/d8d/classSG_1_1AuxVectorData__test" kindref="compound">AuxVectorData_test</ref><sp/>b1;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><ref refid="d1/d1c/classSG_1_1AuxStoreInternal" kindref="compound" tooltip="An auxiliary data store that holds data internally.">SG::AuxStoreInternal</ref><sp/>store1;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1af6e2da3c14ea74935120cd1b5a37f021" kindref="member" tooltip="Set the store associated with this object.">setStore</ref><sp/>(&amp;store1);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><ref refid="d6/d8d/classSG_1_1AuxVectorData__test" kindref="compound">AuxVectorData_test</ref><sp/>b2;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><ref refid="d1/d1c/classSG_1_1AuxStoreInternal" kindref="compound" tooltip="An auxiliary data store that holds data internally.">SG::AuxStoreInternal</ref><sp/>store2;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>b2.<ref refid="db/dd6/classSG_1_1AuxVectorData_1af6e2da3c14ea74935120cd1b5a37f021" kindref="member" tooltip="Set the store associated with this object.">setStore</ref><sp/>(&amp;store2);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>b1.getData&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp,<sp/>0)<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>b2.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp,<sp/>0)<sp/>=<sp/>11;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>b2.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp,<sp/>1)<sp/>=<sp/>12;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>b1.swap<sp/>(b2);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>assert<sp/>(b1.getData&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp,<sp/>0)<sp/>==<sp/>11);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>assert<sp/>(b1.getData&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp,<sp/>1)<sp/>==<sp/>12);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>assert<sp/>(b2.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp,<sp/>0)<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_get_types()</highlight></codeline>
<codeline lineno="155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;test_get_types\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><ref refid="d6/d8d/classSG_1_1AuxVectorData__test" kindref="compound">AuxVectorData_test</ref><sp/>b1;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>assert<sp/>(b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1abe342233ecc5416805b44a47db63815a" kindref="member" tooltip="Return a set of identifiers for existing data items in store associated with this...">getAuxIDs</ref>().size()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><ref refid="d1/d1c/classSG_1_1AuxStoreInternal" kindref="compound" tooltip="An auxiliary data store that holds data internally.">SG::AuxStoreInternal</ref><sp/>store;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1af6e2da3c14ea74935120cd1b5a37f021" kindref="member" tooltip="Set the store associated with this object.">setStore</ref><sp/>(&amp;store);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/>ityp1<sp/>=<sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry_1ab22c247525e0883b46012f14b6f5a048" kindref="member" tooltip="Return the singleton registry instance.">SG::AuxTypeRegistry::instance</ref>().getAuxID&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;anInt1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/>ityp2<sp/>=<sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry_1ab22c247525e0883b46012f14b6f5a048" kindref="member" tooltip="Return the singleton registry instance.">SG::AuxTypeRegistry::instance</ref>().getAuxID&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;anInt2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp1,<sp/>1)<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp2,<sp/>1)<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>assert<sp/>(b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1abe342233ecc5416805b44a47db63815a" kindref="member" tooltip="Return a set of identifiers for existing data items in store associated with this...">getAuxIDs</ref>().size()<sp/>==<sp/>2);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>assert<sp/>(b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1abe342233ecc5416805b44a47db63815a" kindref="member" tooltip="Return a set of identifiers for existing data items in store associated with this...">getAuxIDs</ref>().find(ityp1)<sp/>!=<sp/>b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1abe342233ecc5416805b44a47db63815a" kindref="member" tooltip="Return a set of identifiers for existing data items in store associated with this...">getAuxIDs</ref>().end());</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>assert<sp/>(b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1abe342233ecc5416805b44a47db63815a" kindref="member" tooltip="Return a set of identifiers for existing data items in store associated with this...">getAuxIDs</ref>().find(ityp2)<sp/>!=<sp/>b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1abe342233ecc5416805b44a47db63815a" kindref="member" tooltip="Return a set of identifiers for existing data items in store associated with this...">getAuxIDs</ref>().end());</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>assert<sp/>(b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a52d2ca97c7546abb52972902ff47a275" kindref="member" tooltip="Return a set of identifiers for writable data items in this store.">getWritableAuxIDs</ref>()<sp/>==<sp/>b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1abe342233ecc5416805b44a47db63815a" kindref="member" tooltip="Return a set of identifiers for existing data items in store associated with this...">getAuxIDs</ref>());</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_decoration()</highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;test_decoration\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><ref refid="d6/d8d/classSG_1_1AuxVectorData__test" kindref="compound">AuxVectorData_test</ref><sp/>b1;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd6/classSG_1_1AuxVectorData" kindref="compound" tooltip="Manage lookup of vectors of auxiliary data.">AuxVectorData</ref>&amp;<sp/>cb1<sp/>=<sp/>b1;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><ref refid="d1/d1c/classSG_1_1AuxStoreInternal" kindref="compound" tooltip="An auxiliary data store that holds data internally.">SG::AuxStoreInternal</ref><sp/>store;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><ref refid="d3/dd5/classSG_1_1IConstAuxStore" kindref="compound" tooltip="Interface for const operations on an auxiliary store.">SG::IConstAuxStore</ref>*<sp/>cstore<sp/>=<sp/>&amp;store;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/>ityp1<sp/>=<sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry_1ab22c247525e0883b46012f14b6f5a048" kindref="member" tooltip="Return the singleton registry instance.">SG::AuxTypeRegistry::instance</ref>().getAuxID&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;anInt1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/>ityp2<sp/>=<sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry_1ab22c247525e0883b46012f14b6f5a048" kindref="member" tooltip="Return the singleton registry instance.">SG::AuxTypeRegistry::instance</ref>().getAuxID&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;anInt2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/>ityp3<sp/>=<sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry_1ab22c247525e0883b46012f14b6f5a048" kindref="member" tooltip="Return the singleton registry instance.">SG::AuxTypeRegistry::instance</ref>().getAuxID&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;anInt3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><ref refid="d2/d67/expect__exception_8h_1a15ab402fd517d4bddede832507ed6439" kindref="member" tooltip="Helper to check that an exception is thrown.">EXPECT_EXCEPTION</ref><sp/>(<ref refid="d0/d45/classSG_1_1ExcNoAuxStore" kindref="compound" tooltip="Exception --- Aux data requested from object with no store.">SG::ExcNoAuxStore</ref>,<sp/>b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1ac135f8f7454737b3640aaa05cc1d4a95" kindref="member" tooltip="Return reference to an aux decoration item.">getDecoration</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp1,<sp/>0));</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1af6e2da3c14ea74935120cd1b5a37f021" kindref="member" tooltip="Set the store associated with this object.">setStore</ref><sp/>(cstore);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//EXPECT_EXCEPTION<sp/>(SG::ExcConstAuxData,<sp/>b1.getDecoration&lt;int&gt;<sp/>(ityp1,<sp/>0));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1ac135f8f7454737b3640aaa05cc1d4a95" kindref="member" tooltip="Return reference to an aux decoration item.">getDecoration</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp1,<sp/>0)<sp/>=<sp/>9;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>assert<sp/>(cb1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp1,<sp/>0)<sp/>==<sp/>9);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1af6e2da3c14ea74935120cd1b5a37f021" kindref="member" tooltip="Set the store associated with this object.">setStore</ref><sp/>(&amp;store);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp1,<sp/>0)<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>cb1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1ac135f8f7454737b3640aaa05cc1d4a95" kindref="member" tooltip="Return reference to an aux decoration item.">getDecoration</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp2,<sp/>0)<sp/>=<sp/>11;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>assert<sp/>(cb1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp1,<sp/>0)<sp/>==<sp/>10);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>assert<sp/>(cb1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp2,<sp/>0)<sp/>==<sp/>11);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a4379058b2eb0522291c4c20076ef7967" kindref="member" tooltip="Lock the container.">lock</ref>();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>assert<sp/>(cb1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp1,<sp/>0)<sp/>==<sp/>10);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//EXPECT_EXCEPTION<sp/>(SG::ExcStoreLocked,<sp/>b1.getData&lt;int&gt;<sp/>(ityp1,<sp/>0));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><ref refid="d2/d67/expect__exception_8h_1a15ab402fd517d4bddede832507ed6439" kindref="member" tooltip="Helper to check that an exception is thrown.">EXPECT_EXCEPTION</ref><sp/>(<ref refid="d5/d41/classSG_1_1ExcStoreLocked" kindref="compound" tooltip="Exception --- Attempted to modify auxiliary data in a locked store.">SG::ExcStoreLocked</ref>,<sp/>b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1ac135f8f7454737b3640aaa05cc1d4a95" kindref="member" tooltip="Return reference to an aux decoration item.">getDecoration</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp1,<sp/>0));</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>cb1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1ac135f8f7454737b3640aaa05cc1d4a95" kindref="member" tooltip="Return reference to an aux decoration item.">getDecoration</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp3,<sp/>0)<sp/>=<sp/>14;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>assert<sp/>(cb1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp1,<sp/>0)<sp/>==<sp/>10);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>assert<sp/>(cb1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp2,<sp/>0)<sp/>==<sp/>11);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>assert<sp/>(cb1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp3,<sp/>0)<sp/>==<sp/>14);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>assert<sp/>(cb1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1ac135f8f7454737b3640aaa05cc1d4a95" kindref="member" tooltip="Return reference to an aux decoration item.">getDecoration</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp3,<sp/>0)<sp/>==<sp/>14);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a35c86d28fd74648ddae868dc5fa005d2" kindref="member" tooltip="Clear all decorations.">clearDecorations</ref>();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>assert<sp/>(cb1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp1,<sp/>0)<sp/>==<sp/>10);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>assert<sp/>(cb1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp2,<sp/>0)<sp/>==<sp/>11);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><ref refid="d2/d67/expect__exception_8h_1a15ab402fd517d4bddede832507ed6439" kindref="member" tooltip="Helper to check that an exception is thrown.">EXPECT_EXCEPTION</ref><sp/>(<ref refid="d8/da7/classSG_1_1ExcBadAuxVar" kindref="compound" tooltip="Exception --- Attempt to retrieve nonexistent aux data item.">SG::ExcBadAuxVar</ref>,<sp/>cb1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp3,<sp/>0));</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>cb1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1ac135f8f7454737b3640aaa05cc1d4a95" kindref="member" tooltip="Return reference to an aux decoration item.">getDecoration</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp3,<sp/>0)<sp/>=<sp/>15;</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_move()</highlight></codeline>
<codeline lineno="223"><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;test_move\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201100</highlight></codeline>
<codeline lineno="227"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><ref refid="d6/d8d/classSG_1_1AuxVectorData__test" kindref="compound">AuxVectorData_test</ref><sp/>b1;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><ref refid="d1/d1c/classSG_1_1AuxStoreInternal" kindref="compound" tooltip="An auxiliary data store that holds data internally.">SG::AuxStoreInternal</ref><sp/>store;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1af6e2da3c14ea74935120cd1b5a37f021" kindref="member" tooltip="Set the store associated with this object.">setStore</ref><sp/>(&amp;store);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/>ityp<sp/>=<sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry_1ab22c247525e0883b46012f14b6f5a048" kindref="member" tooltip="Return the singleton registry instance.">SG::AuxTypeRegistry::instance</ref>().getAuxID&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;anInt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp,<sp/>0)<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp,<sp/>1)<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>assert<sp/>(b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp,<sp/>0)<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>assert<sp/>(b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp,<sp/>1)<sp/>==<sp/>2);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><ref refid="d6/d8d/classSG_1_1AuxVectorData__test" kindref="compound">AuxVectorData_test</ref><sp/>b2<sp/>(std::move<sp/>(b1));</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>assert<sp/>(b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a239b57ce5e7833bb83c8f0bf3b390814" kindref="member" tooltip="Return the current store, as a const interface.">getConstStore</ref>()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>assert<sp/>(b1.<ref refid="db/dd6/classSG_1_1AuxVectorData_1af1d8f5f0dd148fbf2041560f77ab0113" kindref="member" tooltip="Return the current store, as a non-const interface.">getStore</ref>()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>assert<sp/>(b2.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a239b57ce5e7833bb83c8f0bf3b390814" kindref="member" tooltip="Return the current store, as a const interface.">getConstStore</ref>()<sp/>==<sp/>&amp;store);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>assert<sp/>(b2.<ref refid="db/dd6/classSG_1_1AuxVectorData_1af1d8f5f0dd148fbf2041560f77ab0113" kindref="member" tooltip="Return the current store, as a non-const interface.">getStore</ref>()<sp/>==<sp/>&amp;store);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>assert<sp/>(b2.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp,<sp/>0)<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>assert<sp/>(b2.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp,<sp/>1)<sp/>==<sp/>2);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><ref refid="d6/d8d/classSG_1_1AuxVectorData__test" kindref="compound">AuxVectorData_test</ref><sp/>b3;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>b3<sp/>=<sp/>std::move<sp/>(b2);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>assert<sp/>(b2.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a239b57ce5e7833bb83c8f0bf3b390814" kindref="member" tooltip="Return the current store, as a const interface.">getConstStore</ref>()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>assert<sp/>(b2.<ref refid="db/dd6/classSG_1_1AuxVectorData_1af1d8f5f0dd148fbf2041560f77ab0113" kindref="member" tooltip="Return the current store, as a non-const interface.">getStore</ref>()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>assert<sp/>(b3.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a239b57ce5e7833bb83c8f0bf3b390814" kindref="member" tooltip="Return the current store, as a const interface.">getConstStore</ref>()<sp/>==<sp/>&amp;store);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>assert<sp/>(b3.<ref refid="db/dd6/classSG_1_1AuxVectorData_1af1d8f5f0dd148fbf2041560f77ab0113" kindref="member" tooltip="Return the current store, as a non-const interface.">getStore</ref>()<sp/>==<sp/>&amp;store);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>assert<sp/>(b3.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp,<sp/>0)<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>assert<sp/>(b3.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ityp,<sp/>1)<sp/>==<sp/>2);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="254"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="df/de7/classThreadingTest" kindref="compound">ThreadingTest</ref></highlight></codeline>
<codeline lineno="258"><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><ref refid="df/de7/classThreadingTest" kindref="compound">ThreadingTest</ref>();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>worker<sp/>(<ref refid="db/dd6/classSG_1_1AuxVectorData" kindref="compound" tooltip="Manage lookup of vectors of auxiliary data.">AuxVectorData</ref>&amp;<sp/>b,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>istart);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>worker_c<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd6/classSG_1_1AuxVectorData" kindref="compound" tooltip="Manage lookup of vectors of auxiliary data.">AuxVectorData</ref>&amp;<sp/>b,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>istart);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>nonThreadedTest();</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>threadedTest();</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">testThread</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>testThread<sp/>(<ref refid="df/de7/classThreadingTest" kindref="compound">ThreadingTest</ref>&amp;<sp/>test,<sp/><ref refid="db/dd6/classSG_1_1AuxVectorData" kindref="compound" tooltip="Manage lookup of vectors of auxiliary data.">AuxVectorData</ref>&amp;<sp/>b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iworker)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_test(test),<sp/>m_b<sp/>(b),<sp/>m_iworker(iworker)<sp/>{}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator()()</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ATHCONTAINERS_NO_THREADS</highlight></codeline>
<codeline lineno="274"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::shared_lock_guard&lt;boost::shared_mutex&gt;<sp/>guard<sp/>(m_test.m_sm);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>not<sp/>ATHCONTAINERS_NO_THREADS</highlight></codeline>
<codeline lineno="276"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>istart<sp/>=<sp/>(m_iworker<sp/>*<sp/>10)<sp/>%<sp/>m_test.m_nelt;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(m_iworker&amp;1)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_test.worker<sp/>(m_b,<sp/>istart);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_test.worker_c<sp/>(m_b,<sp/>istart);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/de7/classThreadingTest" kindref="compound">ThreadingTest</ref>&amp;<sp/>m_test;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/dd6/classSG_1_1AuxVectorData" kindref="compound" tooltip="Manage lookup of vectors of auxiliary data.">AuxVectorData</ref>&amp;<sp/>m_b;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_iworker;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>m_nelt;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><ref refid="d1/d1c/classSG_1_1AuxStoreInternal" kindref="compound" tooltip="An auxiliary data store that holds data internally.">SG::AuxStoreInternal</ref><sp/>m_store;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>std::vector&lt;SG::auxid_t&gt;<sp/>m_ids;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ATHCONTAINERS_NO_THREADS</highlight></codeline>
<codeline lineno="292"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>boost::shared_mutex<sp/>m_sm;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>not<sp/>ATHCONTAINERS_NO_THREADS</highlight></codeline>
<codeline lineno="294"><highlight class="preprocessor"></highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal">ThreadingTest::ThreadingTest()</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>:<sp/>m_nelt<sp/>(1000)</highlight></codeline>
<codeline lineno="299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry" kindref="compound" tooltip="Handle mappings between names and auxid_t.">SG::AuxTypeRegistry</ref>&amp;<sp/>r<sp/>=<sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry_1ab22c247525e0883b46012f14b6f5a048" kindref="member" tooltip="Return the singleton registry instance.">SG::AuxTypeRegistry::instance</ref>();</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>10000;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>ss;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;xint&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>r.<ref refid="db/d33/classSG_1_1AuxTypeRegistry_1a5b1f2839e2695b9f56494d2b9dbc5057" kindref="member" tooltip="Look up a name -&amp;gt; auxid_t mapping.">getAuxID</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(ss.str());</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>m_ids.push_back<sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>data<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/>(m_store.getData<sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>m_nelt,<sp/>m_nelt));</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>m_nelt;<sp/>j++)</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data[j]<sp/>=<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">*1234<sp/>+<sp/>j;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThreadingTest::worker<sp/>(<ref refid="db/dd6/classSG_1_1AuxVectorData" kindref="compound" tooltip="Manage lookup of vectors of auxiliary data.">AuxVectorData</ref>&amp;<sp/>b,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>istart)</highlight></codeline>
<codeline lineno="314"><highlight class="normal">{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>ATHCONTAINERS_FOREACH<sp/>(<ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>m_ids)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>assert<sp/>(b.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>istart)<sp/>==<sp/>static_cast&lt;int&gt;(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">*1234<sp/>+<sp/>istart));</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>++istart;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(istart<sp/>&gt;=<sp/>m_nelt)<sp/>istart<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThreadingTest::worker_c<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd6/classSG_1_1AuxVectorData" kindref="compound" tooltip="Manage lookup of vectors of auxiliary data.">AuxVectorData</ref>&amp;<sp/>b,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>istart)</highlight></codeline>
<codeline lineno="324"><highlight class="normal">{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>ATHCONTAINERS_FOREACH<sp/>(<ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>m_ids)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>assert<sp/>(b.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>istart)<sp/>==<sp/>static_cast&lt;int&gt;(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">*1234<sp/>+<sp/>istart));</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>++istart;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(istart<sp/>&gt;=<sp/>m_nelt)<sp/>istart<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThreadingTest::nonThreadedTest()</highlight></codeline>
<codeline lineno="334"><highlight class="normal">{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><ref refid="d6/d8d/classSG_1_1AuxVectorData__test" kindref="compound">AuxVectorData_test</ref><sp/>b;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>b.<ref refid="db/dd6/classSG_1_1AuxVectorData_1af6e2da3c14ea74935120cd1b5a37f021" kindref="member" tooltip="Set the store associated with this object.">setStore</ref><sp/>(&amp;m_store);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>worker<sp/>(b,<sp/>0);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>worker_c<sp/>(b,<sp/>10);</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThreadingTest::threadedTest()</highlight></codeline>
<codeline lineno="343"><highlight class="normal">{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ATHCONTAINERS_NO_THREADS</highlight></codeline>
<codeline lineno="345"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><ref refid="d6/d8d/classSG_1_1AuxVectorData__test" kindref="compound">AuxVectorData_test</ref><sp/>b;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>b.<ref refid="db/dd6/classSG_1_1AuxVectorData_1af6e2da3c14ea74935120cd1b5a37f021" kindref="member" tooltip="Set the store associated with this object.">setStore</ref><sp/>(&amp;m_store);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nthread<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>AthContainers_detail::thread<sp/>threads[10];</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>m_sm.lock();</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>nthread;<sp/>i++)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>threads[i]<sp/>=<sp/>AthContainers_detail::thread<sp/>(testThread<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>b,<sp/>i));</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>get<sp/>the<sp/>threads<sp/>starting<sp/>as<sp/>much<sp/>at<sp/>the<sp/>same<sp/>time<sp/>as<sp/>possible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>m_sm.unlock();</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>nthread;<sp/>i++)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>threads[i].join();</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="358"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361" refid="dd/db9/classTestStore" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="dd/db9/classTestStore" kindref="compound">TestStore</ref></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>SG::IAuxStore</highlight></codeline>
<codeline lineno="363"><highlight class="normal">{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><ref refid="dd/db9/classTestStore" kindref="compound">TestStore</ref>()<sp/><sp/>{}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>getData<sp/>(<ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/>std::abort();<sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>getDecoration<sp/>(<ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>{<sp/>std::abort();<sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">SG::auxid_set_t</ref>&amp;<sp/>getAuxIDs()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/>std::abort();<sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lock()<sp/>{<sp/>std::abort();<sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clearDecorations()<sp/>{<sp/>std::abort();<sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/>std::abort();<sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>getData<sp/>(<ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>{<sp/>std::abort();<sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">SG::auxid_set_t</ref>&amp;<sp/>getWritableAuxIDs()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/>std::abort();<sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resize<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>{<sp/>std::abort();<sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reserve<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>{<sp/>std::abort();<sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>shift<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/>ptrdiff_t)<sp/>{<sp/>std::abort();<sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setOption<sp/>(<ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/>auxid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/d31/classSG_1_1AuxDataOption" kindref="compound" tooltip="Hold information about an option setting request.">SG::AuxDataOption</ref>&amp;<sp/><sp/>option)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>lastid<sp/>=<sp/>auxid;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>lastopt<sp/>=<sp/>option;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/>lastid;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d7/d31/classSG_1_1AuxDataOption" kindref="compound" tooltip="Hold information about an option setting request.">SG::AuxDataOption</ref><sp/>lastopt;</highlight></codeline>
<codeline lineno="387"><highlight class="normal">};</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/>TestStore::lastid<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><ref refid="d7/d31/classSG_1_1AuxDataOption" kindref="compound" tooltip="Hold information about an option setting request.">SG::AuxDataOption</ref><sp/>TestStore::lastopt<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_setoption()</highlight></codeline>
<codeline lineno="395"><highlight class="normal">{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;test_setoption\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><ref refid="d6/d8d/classSG_1_1AuxVectorData__test" kindref="compound">AuxVectorData_test</ref><sp/>b;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>assert<sp/>(!b.<ref refid="db/dd6/classSG_1_1AuxVectorData_1adad5487f0cdf6cd0d7de68dd84570324" kindref="member" tooltip="Set an option for an auxiliary data variable.">setOption</ref><sp/>(SG::null_auxid,<sp/><ref refid="d7/d31/classSG_1_1AuxDataOption" kindref="compound" tooltip="Hold information about an option setting request.">SG::AuxDataOption</ref><sp/>(</highlight><highlight class="stringliteral">&quot;opt&quot;</highlight><highlight class="normal">,<sp/>1)));</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>b.<ref refid="db/dd6/classSG_1_1AuxVectorData_1af6e2da3c14ea74935120cd1b5a37f021" kindref="member" tooltip="Set the store associated with this object.">setStore</ref><sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dd/db9/classTestStore" kindref="compound">TestStore</ref>);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>assert<sp/>(!b.<ref refid="db/dd6/classSG_1_1AuxVectorData_1adad5487f0cdf6cd0d7de68dd84570324" kindref="member" tooltip="Set an option for an auxiliary data variable.">setOption</ref><sp/>(SG::null_auxid,<sp/><ref refid="d7/d31/classSG_1_1AuxDataOption" kindref="compound" tooltip="Hold information about an option setting request.">SG::AuxDataOption</ref><sp/>(</highlight><highlight class="stringliteral">&quot;opt&quot;</highlight><highlight class="normal">,<sp/>1)));</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>assert<sp/>(b.<ref refid="db/dd6/classSG_1_1AuxVectorData_1adad5487f0cdf6cd0d7de68dd84570324" kindref="member" tooltip="Set an option for an auxiliary data variable.">setOption</ref><sp/>(1,<sp/><ref refid="d7/d31/classSG_1_1AuxDataOption" kindref="compound" tooltip="Hold information about an option setting request.">SG::AuxDataOption</ref><sp/>(</highlight><highlight class="stringliteral">&quot;opt&quot;</highlight><highlight class="normal">,<sp/>1)));</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>assert<sp/>(TestStore::lastid<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>assert<sp/>(TestStore::lastopt.name()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;opt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>assert<sp/>(TestStore::lastopt.intVal()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/>xtyp<sp/>=<sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry_1ab22c247525e0883b46012f14b6f5a048" kindref="member" tooltip="Return the singleton registry instance.">SG::AuxTypeRegistry::instance</ref>().<ref refid="db/d33/classSG_1_1AuxTypeRegistry_1a5b1f2839e2695b9f56494d2b9dbc5057" kindref="member" tooltip="Look up a name -&amp;gt; auxid_t mapping.">getAuxID</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;xint&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>assert<sp/>(b.<ref refid="db/dd6/classSG_1_1AuxVectorData_1adad5487f0cdf6cd0d7de68dd84570324" kindref="member" tooltip="Set an option for an auxiliary data variable.">setOption</ref><sp/>(</highlight><highlight class="stringliteral">&quot;xint&quot;</highlight><highlight class="normal">,<sp/><ref refid="d7/d31/classSG_1_1AuxDataOption" kindref="compound" tooltip="Hold information about an option setting request.">SG::AuxDataOption</ref><sp/>(</highlight><highlight class="stringliteral">&quot;opt2&quot;</highlight><highlight class="normal">,<sp/>2)));</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>assert<sp/>(TestStore::lastid<sp/>==<sp/>xtyp);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>assert<sp/>(TestStore::lastopt.name()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;opt2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>assert<sp/>(TestStore::lastopt.intVal()<sp/>==<sp/>2);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/>xtyp2<sp/>=<sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry_1ab22c247525e0883b46012f14b6f5a048" kindref="member" tooltip="Return the singleton registry instance.">SG::AuxTypeRegistry::instance</ref>().<ref refid="db/d33/classSG_1_1AuxTypeRegistry_1a5b1f2839e2695b9f56494d2b9dbc5057" kindref="member" tooltip="Look up a name -&amp;gt; auxid_t mapping.">getAuxID</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;xint2&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;xcls&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>assert<sp/>(b.<ref refid="db/dd6/classSG_1_1AuxVectorData_1adad5487f0cdf6cd0d7de68dd84570324" kindref="member" tooltip="Set an option for an auxiliary data variable.">setOption</ref><sp/>(</highlight><highlight class="stringliteral">&quot;xint2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;xcls&quot;</highlight><highlight class="normal">,<sp/><ref refid="d7/d31/classSG_1_1AuxDataOption" kindref="compound" tooltip="Hold information about an option setting request.">SG::AuxDataOption</ref><sp/>(</highlight><highlight class="stringliteral">&quot;opt3&quot;</highlight><highlight class="normal">,<sp/>2.5)));</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>assert<sp/>(TestStore::lastid<sp/>==<sp/>xtyp2);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>assert<sp/>(TestStore::lastopt.name()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;opt3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>assert<sp/>(TestStore::lastopt.floatVal()<sp/>==<sp/>2.5);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>assert<sp/>(b.<ref refid="db/dd6/classSG_1_1AuxVectorData_1adad5487f0cdf6cd0d7de68dd84570324" kindref="member" tooltip="Set an option for an auxiliary data variable.">setOption</ref><sp/>(1,<sp/></highlight><highlight class="stringliteral">&quot;opt&quot;</highlight><highlight class="normal">,<sp/>1));</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>assert<sp/>(TestStore::lastid<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>assert<sp/>(TestStore::lastopt.name()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;opt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>assert<sp/>(TestStore::lastopt.intVal()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>assert<sp/>(b.<ref refid="db/dd6/classSG_1_1AuxVectorData_1adad5487f0cdf6cd0d7de68dd84570324" kindref="member" tooltip="Set an option for an auxiliary data variable.">setOption</ref><sp/>(</highlight><highlight class="stringliteral">&quot;xint&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;opt2&quot;</highlight><highlight class="normal">,<sp/>2));</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>assert<sp/>(TestStore::lastid<sp/>==<sp/>xtyp);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>assert<sp/>(TestStore::lastopt.name()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;opt2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>assert<sp/>(TestStore::lastopt.intVal()<sp/>==<sp/>2);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>assert<sp/>(b.<ref refid="db/dd6/classSG_1_1AuxVectorData_1adad5487f0cdf6cd0d7de68dd84570324" kindref="member" tooltip="Set an option for an auxiliary data variable.">setOption</ref><sp/>(</highlight><highlight class="stringliteral">&quot;xint2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;xcls&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;opt3&quot;</highlight><highlight class="normal">,<sp/>2.5));</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>assert<sp/>(TestStore::lastid<sp/>==<sp/>xtyp2);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>assert<sp/>(TestStore::lastopt.name()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;opt3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>assert<sp/>(TestStore::lastopt.floatVal()<sp/>==<sp/>2.5);</highlight></codeline>
<codeline lineno="433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_threading()</highlight></codeline>
<codeline lineno="437"><highlight class="normal">{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;test_threading\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><ref refid="df/de7/classThreadingTest" kindref="compound">ThreadingTest</ref><sp/>test;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>test.nonThreadedTest();</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>1000;<sp/>i++)</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>test.threadedTest();</highlight></codeline>
<codeline lineno="444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>aren&apos;t<sp/>called;<sp/>present<sp/>just<sp/>to<sp/>check<sp/>generation<sp/>of<sp/>optimized<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>test_code<sp/>(<ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/>auxid,<sp/><ref refid="d6/d8d/classSG_1_1AuxVectorData__test" kindref="compound">AuxVectorData_test</ref>&amp;<sp/>b)</highlight></codeline>
<codeline lineno="449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>b.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;<sp/>(auxid,<sp/>0)<sp/>+<sp/>b.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;<sp/>(auxid,<sp/>1);</highlight></codeline>
<codeline lineno="451"><highlight class="normal">}<sp/><sp/></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>test_code<sp/>(<ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/>auxid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d8d/classSG_1_1AuxVectorData__test" kindref="compound">AuxVectorData_test</ref>&amp;<sp/>b)</highlight></codeline>
<codeline lineno="453"><highlight class="normal">{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>b.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;<sp/>(auxid,<sp/>0)<sp/>+<sp/>b.<ref refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" kindref="member" tooltip="Return reference to an aux data item.">getData</ref>&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;<sp/>(auxid,<sp/>1);</highlight></codeline>
<codeline lineno="455"><highlight class="normal">}<sp/><sp/></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()</highlight></codeline>
<codeline lineno="459"><highlight class="normal">{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>reallocations<sp/>more<sp/>frequent<sp/>(the<sp/>better<sp/>to<sp/>exercise<sp/>them).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><ref refid="db/dd6/classSG_1_1AuxVectorData_1a95f42871b1d206674b8f49a8cd73ae55" kindref="member" tooltip="Minimum length to use for the cache vector.">AuxVectorData_test::s_minCacheLen</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>test_get_data();</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>test_swap();</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>test_get_types();</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>test_decoration();</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>test_move();</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>test_setoption();</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>test_threading();</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="470"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxVectorData_test.cxx"/>
  </compounddef>
</doxygen>
