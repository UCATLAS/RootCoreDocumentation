<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d3/ddf/LArTemperatureCorrectionTool_8cxx" kind="file">
    <compoundname>LArTemperatureCorrectionTool.cxx</compoundname>
    <includes local="no">TParameter.h</includes>
    <includes refid="d4/d2e/LArTemperatureCorrectionTool_8h" local="no">ElectronPhotonFourMomentumCorrection/LArTemperatureCorrectionTool.h</includes>
    <incdepgraph>
      <node id="120982">
        <label>AsgTools/IAsgTool.h</label>
        <link refid="df/dd4/IAsgTool_8h_source"/>
        <childnode refid="120973" relation="include">
        </childnode>
        <childnode refid="120977" relation="include">
        </childnode>
        <childnode refid="120983" relation="include">
        </childnode>
        <childnode refid="120984" relation="include">
        </childnode>
      </node>
      <node id="120972">
        <label>ElectronPhotonFourMomentumCorrection/LArTemperatureCorrectionTool.h</label>
        <link refid="d4/d2e/LArTemperatureCorrectionTool_8h_source"/>
        <childnode refid="120973" relation="include">
        </childnode>
        <childnode refid="120974" relation="include">
        </childnode>
        <childnode refid="120975" relation="include">
        </childnode>
        <childnode refid="120976" relation="include">
        </childnode>
        <childnode refid="120988" relation="include">
        </childnode>
        <childnode refid="120989" relation="include">
        </childnode>
      </node>
      <node id="120984">
        <label>GaudiKernel/IAlgTool.h</label>
      </node>
      <node id="120970">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/ElectronPhotonFourMomentumCorrection/Root/LArTemperatureCorrectionTool.cxx</label>
        <link refid="LArTemperatureCorrectionTool.cxx"/>
        <childnode refid="120971" relation="include">
        </childnode>
        <childnode refid="120972" relation="include">
        </childnode>
      </node>
      <node id="120987">
        <label>AthenaBaseComps/AthMsgStreamMacros.h</label>
      </node>
      <node id="120980">
        <label>AsgTools/MsgLevel.h</label>
        <link refid="de/d80/MsgLevel_8h"/>
        <childnode refid="120973" relation="include">
        </childnode>
        <childnode refid="120977" relation="include">
        </childnode>
        <childnode refid="120981" relation="include">
        </childnode>
      </node>
      <node id="120977">
        <label>AsgTools/AsgToolsConf.h</label>
        <link refid="df/db7/AsgToolsConf_8h_source"/>
      </node>
      <node id="120973">
        <label>string</label>
      </node>
      <node id="120974">
        <label>map</label>
      </node>
      <node id="120981">
        <label>GaudiKernel/IMessageSvc.h</label>
      </node>
      <node id="120986">
        <label>AsgTools/MsgStreamMacros.h</label>
        <link refid="d3/ded/AsgTools_2AsgTools_2MsgStreamMacros_8h_source"/>
        <childnode refid="120977" relation="include">
        </childnode>
        <childnode refid="120980" relation="include">
        </childnode>
        <childnode refid="120987" relation="include">
        </childnode>
      </node>
      <node id="120988">
        <label>TFile.h</label>
      </node>
      <node id="120979">
        <label>sstream</label>
      </node>
      <node id="120971">
        <label>TParameter.h</label>
      </node>
      <node id="120985">
        <label>GaudiKernel/MsgStream.h</label>
      </node>
      <node id="120978">
        <label>AsgTools/MsgStream.h</label>
        <link refid="d3/d95/AsgTools_2AsgTools_2MsgStream_8h_source"/>
        <childnode refid="120973" relation="include">
        </childnode>
        <childnode refid="120979" relation="include">
        </childnode>
        <childnode refid="120977" relation="include">
        </childnode>
        <childnode refid="120980" relation="include">
        </childnode>
        <childnode refid="120982" relation="include">
        </childnode>
        <childnode refid="120985" relation="include">
        </childnode>
      </node>
      <node id="120983">
        <label>AsgTools/AsgToolMacros.h</label>
        <link refid="d1/d68/AsgToolMacros_8h_source"/>
      </node>
      <node id="120976">
        <label>AsgTools/AsgMessaging.h</label>
        <link refid="d3/d61/AsgMessaging_8h_source"/>
        <childnode refid="120973" relation="include">
        </childnode>
        <childnode refid="120977" relation="include">
        </childnode>
        <childnode refid="120978" relation="include">
        </childnode>
        <childnode refid="120986" relation="include">
        </childnode>
      </node>
      <node id="120989">
        <label>TTree.h</label>
      </node>
      <node id="120975">
        <label>memory</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="d3/ddf/LArTemperatureCorrectionTool_8cxx_1a5fd21b12ac85ee52404de07cdbb9915c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="d1/def/classT" kindref="compound">T</ref></type>
        <definition>T get_value_parameter</definition>
        <argsstring>(TFile &amp;f, const std::string &amp;name)</argsstring>
        <name>get_value_parameter</name>
        <param>
          <type>TFile &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/ElectronPhotonFourMomentumCorrection/Root/LArTemperatureCorrectionTool.cxx" line="7" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/ElectronPhotonFourMomentumCorrection/Root/LArTemperatureCorrectionTool.cxx" bodystart="6" bodyend="11"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;TParameter.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ElectronPhotonFourMomentumCorrection/LArTemperatureCorrectionTool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><ref refid="d1/def/classT" kindref="compound">T</ref><sp/>get_value_parameter(TFile&amp;<sp/>f,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)</highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/>TParameter&lt;T&gt;*<sp/>p<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">TParameter&lt;T&gt;*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(f.Get(name.c_str()));</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>p)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p-&gt;GetVal();</highlight></codeline>
<codeline lineno="11"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal">LArTemperatureCorrectionTool::LArTemperatureCorrectionTool(std::string<sp/>filename)</highlight></codeline>
<codeline lineno="14"><highlight class="normal">:<sp/>asg::AsgMessaging(</highlight><highlight class="stringliteral">&quot;LArTemperatureCorrectionTool&quot;</highlight><highlight class="normal">),<sp/>m_file(TFile::Open(filename.c_str()))</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_file<sp/>or<sp/>m_file-&gt;IsZombie())<sp/>{<sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;cannot<sp/>open<sp/>file&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>m_tree<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">TTree*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(m_file-&gt;Get(</highlight><highlight class="stringliteral">&quot;temperature&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_tree)<sp/>{<sp/>ATH_MSG_FATAL(</highlight><highlight class="stringliteral">&quot;cannot<sp/>find<sp/>tree&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>Int_t<sp/>t_run<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>m_tree-&gt;SetBranchAddress(</highlight><highlight class="stringliteral">&quot;run&quot;</highlight><highlight class="normal">,<sp/>&amp;t_run);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>m_tree-&gt;GetEntry(0);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>m_first_run<sp/>=<sp/>t_run;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>m_tree-&gt;GetEntry(m_tree-&gt;GetEntries()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>m_last_run<sp/>=<sp/>t_run;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>m_file-&gt;Get(</highlight><highlight class="stringliteral">&quot;base_temperature_barrel&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>TParameter&lt;double&gt;*<sp/>p<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">TParameter&lt;double&gt;*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(m_file-&gt;Get(</highlight><highlight class="stringliteral">&quot;base_temperature_barrel&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>p-&gt;GetVal();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>base_temperature.barrel<sp/>=<sp/>get_value_parameter&lt;double&gt;(*m_file,<sp/></highlight><highlight class="stringliteral">&quot;base_temperature_barrel&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>base_temperature.endcapA<sp/>=<sp/>get_value_parameter&lt;double&gt;(*m_file,<sp/></highlight><highlight class="stringliteral">&quot;base_temperature_endcapA&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>base_temperature.endcapC<sp/>=<sp/>get_value_parameter&lt;double&gt;(*m_file,<sp/></highlight><highlight class="stringliteral">&quot;base_temperature_endcapC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>sensitivity_temperature.barrel<sp/>=<sp/>get_value_parameter&lt;double&gt;(*m_file,<sp/></highlight><highlight class="stringliteral">&quot;sensitivity_temperature_barrel&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>sensitivity_temperature.endcapA<sp/>=<sp/>get_value_parameter&lt;double&gt;(*m_file,<sp/></highlight><highlight class="stringliteral">&quot;sensitivity_temperature_endcapA&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>sensitivity_temperature.endcapC<sp/>=<sp/>get_value_parameter&lt;double&gt;(*m_file,<sp/></highlight><highlight class="stringliteral">&quot;sensitivity_temperature_endcapC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>ATH_MSG_INFO(</highlight><highlight class="stringliteral">&quot;LArTemperatureCorrectionTool<sp/>initialized<sp/>for<sp/>runs<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_first_run<sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;..&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_last_run);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>ATH_MSG_INFO(</highlight><highlight class="stringliteral">&quot;base<sp/>temperatures<sp/>(barrel/endcapA/endcapC)<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>base_temperature.barrel<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>base_temperature.endcapA<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>base_temperature.endcapC);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>ATH_MSG_INFO(</highlight><highlight class="stringliteral">&quot;sensitivity<sp/>relE/K<sp/>(barrel/endcapA/endcapC)<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sensitivity_temperature.barrel<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sensitivity_temperature.endcapA<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sensitivity_temperature.endcapC);</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><ref refid="d7/d43/structLArTemperatureCorrectionTool_1_1AllValues" kindref="compound">LArTemperatureCorrectionTool::AllValues</ref><sp/>LArTemperatureCorrectionTool::search_correction(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>run)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="46"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>AllValues<sp/>temp<sp/>=<sp/>search_temperature(run);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>temp.barrel<sp/>=<sp/>1.<sp/>-<sp/>(temp.barrel<sp/>-<sp/>base_temperature.barrel)<sp/>*<sp/>sensitivity_temperature.barrel;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>temp.endcapA<sp/>=<sp/>1.<sp/>-<sp/>(temp.endcapA<sp/>-<sp/>base_temperature.endcapA)<sp/>*<sp/>sensitivity_temperature.endcapA;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>temp.endcapC<sp/>=<sp/>1.<sp/>-<sp/>(temp.endcapC<sp/>-<sp/>base_temperature.endcapC)<sp/>*<sp/>sensitivity_temperature.endcapC;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><ref refid="d7/d43/structLArTemperatureCorrectionTool_1_1AllValues" kindref="compound">LArTemperatureCorrectionTool::AllValues</ref><sp/>LArTemperatureCorrectionTool::search_temperature(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>run)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="55"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>Float_t<sp/>t_barrel<sp/>=<sp/>base_temperature.barrel;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>Float_t<sp/>t_endcapA<sp/>=<sp/>base_temperature.endcapA;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>Float_t<sp/>t_endcapC<sp/>=<sp/>base_temperature.endcapC;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>Int_t<sp/>t_run<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>m_tree-&gt;SetBranchAddress(</highlight><highlight class="stringliteral">&quot;run&quot;</highlight><highlight class="normal">,<sp/>&amp;t_run);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>m_tree-&gt;SetBranchAddress(</highlight><highlight class="stringliteral">&quot;average_temperature_barrel&quot;</highlight><highlight class="normal">,<sp/>&amp;t_barrel);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>m_tree-&gt;SetBranchAddress(</highlight><highlight class="stringliteral">&quot;average_temperature_endcapA&quot;</highlight><highlight class="normal">,<sp/>&amp;t_endcapA);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>m_tree-&gt;SetBranchAddress(</highlight><highlight class="stringliteral">&quot;average_temperature_endcapC&quot;</highlight><highlight class="normal">,<sp/>&amp;t_endcapC);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>bisection,<sp/>tree<sp/>is<sp/>ordered<sp/>by<sp/>run<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>low<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>high<sp/>=<sp/>m_tree-&gt;GetEntries()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mid<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(low<sp/>&lt;=<sp/>high)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(high<sp/>-<sp/>low<sp/>&lt;<sp/>50)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>prefer<sp/>sequential<sp/>scan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>low;<sp/>i<sp/>&lt;=<sp/>high;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_tree-&gt;GetEntry(i);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(run<sp/>==<sp/>t_run)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AllValues<sp/>{<sp/>t_barrel,<sp/>t_endcapA,<sp/>t_endcapC<sp/>};<sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>mid<sp/>=<sp/>low<sp/>+<sp/>(high<sp/>-<sp/>low)<sp/>/<sp/>2;<sp/><sp/></highlight><highlight class="comment">//<sp/>scared<sp/>of<sp/>overflow?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>m_tree-&gt;GetEntry(mid);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(run<sp/>==<sp/>t_run)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AllValues<sp/>{<sp/>t_barrel,<sp/>t_endcapA,<sp/>t_endcapC<sp/>};<sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(run<sp/>&lt;<sp/>t_run)<sp/>{<sp/>high<sp/>=<sp/>mid<sp/>-<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/>low<sp/>=<sp/>mid<sp/>+<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>ATH_MSG_WARNING(</highlight><highlight class="stringliteral">&quot;run<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>run<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>not<sp/>found<sp/>-<sp/>no<sp/>temperature<sp/>correction&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base_temperature;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><ref refid="d7/d43/structLArTemperatureCorrectionTool_1_1AllValues" kindref="compound">LArTemperatureCorrectionTool::AllValues</ref><sp/><ref refid="d9/d5d/classLArTemperatureCorrectionTool_1a139044dc6d42fb0c9b152a1f98ed8e67" kindref="member">LArTemperatureCorrectionTool::get_corrections</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>run)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="91"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>m_cache.find(run);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>m_cache.end())<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it-&gt;second;<sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>AllValues<sp/>corrections;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(run<sp/>&lt;<sp/>m_first_run)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(</highlight><highlight class="stringliteral">&quot;run<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>run<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>before<sp/>the<sp/>first<sp/>run<sp/>-<sp/>using<sp/>the<sp/>first<sp/>run&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>corrections<sp/>=<sp/>search_correction(m_first_run);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(run<sp/>&gt;<sp/>m_last_run)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(</highlight><highlight class="stringliteral">&quot;run<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>run<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>after<sp/>the<sp/>last<sp/>run<sp/>-<sp/>using<sp/>the<sp/>last<sp/>run&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>corrections<sp/>=<sp/>search_correction(m_last_run);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>corrections<sp/>=<sp/>search_correction(run);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cache[run]<sp/>=<sp/>corrections;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>corrections;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/ElectronPhotonFourMomentumCorrection/Root/LArTemperatureCorrectionTool.cxx"/>
  </compounddef>
</doxygen>
