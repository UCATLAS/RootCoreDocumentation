<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d3/d5c/classBTaggingEfficiencyTool" kind="class" prot="public">
    <compoundname>BTaggingEfficiencyTool</compoundname>
    <basecompoundref refid="d5/dbb/classasg_1_1AsgTool" prot="public" virt="non-virtual">asg::AsgTool</basecompoundref>
    <basecompoundref refid="d4/dfb/classIBTaggingEfficiencyTool" prot="public" virt="virtual">IBTaggingEfficiencyTool</basecompoundref>
    <basecompoundref refid="d4/d5c/classCP_1_1ISystematicsTool" prot="public" virt="virtual">CP::ISystematicsTool</basecompoundref>
    <innerclass refid="da/d3c/structBTaggingEfficiencyTool_1_1SystInfo" prot="private">BTaggingEfficiencyTool::SystInfo</innerclass>
      <sectiondef kind="user-defined">
      <header>core configuration properties (set at initalization time and not modified afterwards)</header>
      <description><para><anchor id="_1amgrp2222539158292ab24864638946b37691"/> </para></description>
      <memberdef kind="variable" id="d3/d5c/classBTaggingEfficiencyTool_1aec1cfb366cc8d612e0f10c8c782d6d3c" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string BTaggingEfficiencyTool::m_SFFile</definition>
        <argsstring></argsstring>
        <name>m_SFFile</name>
        <briefdescription>
<para>name of the data/MC efficiency scale factor calibration file (may be changed by the <computeroutput><ref refid="d1/d31/classPathResolver" kindref="compound">PathResolver</ref></computeroutput>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="258" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d5c/classBTaggingEfficiencyTool_1a1459e1be3d304f5d64a7f6a4765aba5a" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string BTaggingEfficiencyTool::m_EffFile</definition>
        <argsstring></argsstring>
        <name>m_EffFile</name>
        <briefdescription>
<para>name of the optional MC efficiency file (may be changed by the <computeroutput><ref refid="d1/d31/classPathResolver" kindref="compound">PathResolver</ref></computeroutput>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="260" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d5c/classBTaggingEfficiencyTool_1a1061c82b8d4a927b251be342e5de55d7" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string BTaggingEfficiencyTool::m_SFBName</definition>
        <argsstring></argsstring>
        <name>m_SFBName</name>
        <briefdescription>
<para>name of the data/MC scale factor calibration for b jets </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="262" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d5c/classBTaggingEfficiencyTool_1ad8fb7db55c46d9531edf77e9541e90b7" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string BTaggingEfficiencyTool::m_SFCName</definition>
        <argsstring></argsstring>
        <name>m_SFCName</name>
        <briefdescription>
<para>name of the data/MC scale factor calibration for charm jets </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="264" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d5c/classBTaggingEfficiencyTool_1ab140c53973071ae7ad13c57a93b20795" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string BTaggingEfficiencyTool::m_SFTName</definition>
        <argsstring></argsstring>
        <name>m_SFTName</name>
        <briefdescription>
<para>name of the data/MC scale factor calibration for tau jets </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="266" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d5c/classBTaggingEfficiencyTool_1a1caee04910ed669120aa55aba6cd4366" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string BTaggingEfficiencyTool::m_SFLightName</definition>
        <argsstring></argsstring>
        <name>m_SFLightName</name>
        <briefdescription>
<para>name of the data/MC scale factor calibration for light-flavour jets </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="268" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d5c/classBTaggingEfficiencyTool_1a7d730245ec1ee22a31beb4c8c6eda686" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string BTaggingEfficiencyTool::m_EVReductionB</definition>
        <argsstring></argsstring>
        <name>m_EVReductionB</name>
        <briefdescription>
<para>specification of the eigenvector reduction strategy for b jets (if eigenvectors are used) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="270" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d5c/classBTaggingEfficiencyTool_1a842910ba8fdefa32f09c325cb66160f2" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string BTaggingEfficiencyTool::m_EVReductionC</definition>
        <argsstring></argsstring>
        <name>m_EVReductionC</name>
        <briefdescription>
<para>specification of the eigenvector reduction strategy for c jets (if eigenvectors are used) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="272" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d5c/classBTaggingEfficiencyTool_1aa166dd7e1cbdc0da635f587ba76947c7" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string BTaggingEfficiencyTool::m_EVReductionLight</definition>
        <argsstring></argsstring>
        <name>m_EVReductionLight</name>
        <briefdescription>
<para>specification of the eigenvector reduction strategy for light-flavour jets (if eigenvectors are used) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="274" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d5c/classBTaggingEfficiencyTool_1a4b1ff15dd8d603343c4f50d88b8ab1a6" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string BTaggingEfficiencyTool::m_EffBName</definition>
        <argsstring></argsstring>
        <name>m_EffBName</name>
        <briefdescription>
<para>semicolon-separated list of MC efficiency parametrisation names for b jets </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="276" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d5c/classBTaggingEfficiencyTool_1a7f0223eeb242fb4f06d564aebe3826ff" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string BTaggingEfficiencyTool::m_EffCName</definition>
        <argsstring></argsstring>
        <name>m_EffCName</name>
        <briefdescription>
<para>semicolon-separated list of MC efficiency parametrisation names for charm jets </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="278" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" bodystart="278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d5c/classBTaggingEfficiencyTool_1a5f34f192ffc05e2adfd25efd7cae8107" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string BTaggingEfficiencyTool::m_EffTName</definition>
        <argsstring></argsstring>
        <name>m_EffTName</name>
        <briefdescription>
<para>semicolon-separated list of MC efficiency parametrisation names for tau jets </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="280" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d5c/classBTaggingEfficiencyTool_1a2b3f9088c649b8ea35cf61f4aa5c3ab7" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string BTaggingEfficiencyTool::m_EffLightName</definition>
        <argsstring></argsstring>
        <name>m_EffLightName</name>
        <briefdescription>
<para>semicolon-separated list of MC efficiency parametrisation names for light-flavour jets </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="282" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d5c/classBTaggingEfficiencyTool_1aa0a45f03474ea6da9b8c08e64a3ba747" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string BTaggingEfficiencyTool::m_excludeFromEV</definition>
        <argsstring></argsstring>
        <name>m_excludeFromEV</name>
        <briefdescription>
<para>semicolon-separated list of uncertainties to be excluded from the eigenvector variation procedure </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="284" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d5c/classBTaggingEfficiencyTool_1adbc9f0ec99cb8989cbf3f3cfe5db26b0" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string BTaggingEfficiencyTool::m_taggerName</definition>
        <argsstring></argsstring>
        <name>m_taggerName</name>
        <briefdescription>
<para>tagger name </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="286" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d5c/classBTaggingEfficiencyTool_1a51795b1cf0d23b0246f09d42308e18a2" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string BTaggingEfficiencyTool::m_OP</definition>
        <argsstring></argsstring>
        <name>m_OP</name>
        <briefdescription>
<para>operating point </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="288" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d5c/classBTaggingEfficiencyTool_1aaf6b81af35ff46c1f89b1992d52080d1" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string BTaggingEfficiencyTool::m_jetAuthor</definition>
        <argsstring></argsstring>
        <name>m_jetAuthor</name>
        <briefdescription>
<para>jet collection name </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="290" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d5c/classBTaggingEfficiencyTool_1aabaa358a7c290f215a863de72b46c3de" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string BTaggingEfficiencyTool::m_systStrategy</definition>
        <argsstring></argsstring>
        <name>m_systStrategy</name>
        <briefdescription>
<para>systematics model to be used (current choices are &quot;SFEigen&quot; and &quot;Envelope&quot;) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="292" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d5c/classBTaggingEfficiencyTool_1a1f42b6975f0e063b3903b42976c9bc56" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BTaggingEfficiencyTool::m_useDevFile</definition>
        <argsstring></argsstring>
        <name>m_useDevFile</name>
        <briefdescription>
<para>if true, attempt to retrieve the data/MC efficiency scale factor calibration files from the  development area </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="294" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d5c/classBTaggingEfficiencyTool_1a96c1f5ca4a20814b5a6efe217dfae6dc" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BTaggingEfficiencyTool::m_coneFlavourLabel</definition>
        <argsstring></argsstring>
        <name>m_coneFlavourLabel</name>
        <briefdescription>
<para>if true, use cone-based labelling (as opposed to ghost association) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="296" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d5c/classBTaggingEfficiencyTool_1a03e771f8dfe7722095fad402eb51c3bf" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BTaggingEfficiencyTool::m_oldConeFlavourLabel</definition>
        <argsstring></argsstring>
        <name>m_oldConeFlavourLabel</name>
        <briefdescription>
<para>when using cone-based labelling (see above), if true, use the &quot;traditional&quot; (parton-based) labelling instead of the current default (hadron-based, exclusive) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="298" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Cached variables</header>
      <description><para><anchor id="_1amgrp0bd25362c8134cb443b0d28f9e25b1fc"/> </para></description>
      <memberdef kind="variable" id="d3/d5c/classBTaggingEfficiencyTool_1aa7b8c372aaf55e646af9ff5a0a5a14c7" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BTaggingEfficiencyTool::m_initialised</definition>
        <argsstring></argsstring>
        <name>m_initialised</name>
        <briefdescription>
<para>flag to indicate tool is initialized correctly when set </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="306" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d5c/classBTaggingEfficiencyTool_1aa9b8cee476c0c305cec576d0b5f23337" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BTaggingEfficiencyTool::m_applySyst</definition>
        <argsstring></argsstring>
        <name>m_applySyst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="309" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d5c/classBTaggingEfficiencyTool_1ad60c52c4b65b48979dac2c088f38abb6" prot="private" static="no" mutable="no">
        <type>SystInfo</type>
        <definition>SystInfo BTaggingEfficiencyTool::m_applyThisSyst</definition>
        <argsstring></argsstring>
        <name>m_applyThisSyst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="310" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" bodystart="310" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d5c/classBTaggingEfficiencyTool_1a7c8c0989a17866a15c25acbe7617f2f7" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="dd/d2d/classCP_1_1SystematicVariation" kindref="compound">CP::SystematicVariation</ref>, SystInfo &gt;</type>
        <definition>std::map&lt;CP::SystematicVariation,SystInfo&gt; BTaggingEfficiencyTool::m_systematicsInfo</definition>
        <argsstring></argsstring>
        <name>m_systematicsInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="312" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" bodystart="312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d5c/classBTaggingEfficiencyTool_1a8a57561235b7137d97a4e75c1aab941f" prot="private" static="no" mutable="no">
        <type><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound">CP::SystematicSet</ref></type>
        <definition>CP::SystematicSet BTaggingEfficiencyTool::m_systematics</definition>
        <argsstring></argsstring>
        <name>m_systematics</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="314" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d5c/classBTaggingEfficiencyTool_1ab82621356fb312d36f968617519e457d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BTaggingEfficiencyTool::m_isContinuous</definition>
        <argsstring></argsstring>
        <name>m_isContinuous</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="316" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" bodystart="316" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d5c/classBTaggingEfficiencyTool_1ab6e57a57b96dfa5b8360e5081d54ecf1" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, unsigned int &gt;</type>
        <definition>std::map&lt;std::string, unsigned int&gt; BTaggingEfficiencyTool::m_mapIndices</definition>
        <argsstring></argsstring>
        <name>m_mapIndices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="321" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" bodystart="321" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d5c/classBTaggingEfficiencyTool_1a63bfab7b32f7c0b732f7be2f9754e02a" prot="private" static="no" mutable="no">
        <type>std::map&lt; unsigned int, unsigned int &gt;</type>
        <definition>std::map&lt;unsigned int, unsigned int&gt; BTaggingEfficiencyTool::m_SFIndices</definition>
        <argsstring></argsstring>
        <name>m_SFIndices</name>
        <briefdescription>
<para>actual information identifying scale factor calibration objects </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="324" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" bodystart="324" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d5c/classBTaggingEfficiencyTool_1ace2f93b44ef7c57aa6fd48168a1a0e4e" prot="private" static="no" mutable="no">
        <type>std::map&lt; unsigned int, unsigned int &gt;</type>
        <definition>std::map&lt;unsigned int, unsigned int&gt; BTaggingEfficiencyTool::m_EffIndices</definition>
        <argsstring></argsstring>
        <name>m_EffIndices</name>
        <briefdescription>
<para>actual information identifying efficiency calibration objects </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="326" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" bodystart="326" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Methods implementing the main jet-by-jet access in the xAOD context</header>
      <description><para><anchor id="_1amgrp77d3fac578db2101628fb3b2114e0186"/> </para></description>
      <memberdef kind="function" id="d3/d5c/classBTaggingEfficiencyTool_1a4abb53a5ebce7b616f8d5d29dd1e3994" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="db/d8a/classCP_1_1CorrectionCode" kindref="compound">CP::CorrectionCode</ref></type>
        <definition>CorrectionCode BTaggingEfficiencyTool::getScaleFactor</definition>
        <argsstring>(const xAOD::Jet &amp;jet, float &amp;sf) const </argsstring>
        <name>getScaleFactor</name>
        <reimplements refid="d4/dfb/classIBTaggingEfficiencyTool_1a8e0d9c1d01b685ad098f739da7989962">getScaleFactor</reimplements>
        <param>
          <type>const <ref refid="db/d9c/classxAOD_1_1Jet__v1" kindref="compound">xAOD::Jet</ref> &amp;</type>
          <declname>jet</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>sf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Computes the data/MC efficiency scale factor for the given jet. The tagger and operating point under consideration are part of the configuration and hence aren&apos;t function arguments. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="54" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/Root/BTaggingEfficiencyTool.cxx" bodystart="405" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="d3/d5c/classBTaggingEfficiencyTool_1ace00b9947ed285983a259b736f730676" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="db/d8a/classCP_1_1CorrectionCode" kindref="compound">CP::CorrectionCode</ref></type>
        <definition>CorrectionCode BTaggingEfficiencyTool::getEfficiency</definition>
        <argsstring>(const xAOD::Jet &amp;jet, float &amp;eff) const </argsstring>
        <name>getEfficiency</name>
        <reimplements refid="d4/dfb/classIBTaggingEfficiencyTool_1a4e4e672a13039799e4aad4f44b4ed863">getEfficiency</reimplements>
        <param>
          <type>const <ref refid="db/d9c/classxAOD_1_1Jet__v1" kindref="compound">xAOD::Jet</ref> &amp;</type>
          <declname>jet</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>eff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Computes the data efficiency for the given jet. The tagger and operating point under consideration are part of the configuration and hence aren&apos;t function arguments. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="60" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/Root/BTaggingEfficiencyTool.cxx" bodystart="488" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="d3/d5c/classBTaggingEfficiencyTool_1a49c4d7a9d2111955fde95cf45d9c02f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="db/d8a/classCP_1_1CorrectionCode" kindref="compound">CP::CorrectionCode</ref></type>
        <definition>CorrectionCode BTaggingEfficiencyTool::getInefficiency</definition>
        <argsstring>(const xAOD::Jet &amp;jet, float &amp;eff) const </argsstring>
        <name>getInefficiency</name>
        <reimplements refid="d4/dfb/classIBTaggingEfficiencyTool_1a62cd76fad8748f4528905d6fd9734686">getInefficiency</reimplements>
        <param>
          <type>const <ref refid="db/d9c/classxAOD_1_1Jet__v1" kindref="compound">xAOD::Jet</ref> &amp;</type>
          <declname>jet</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>eff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Computes the data inefficiency for the given jet. The tagger and operating point under consideration are part of the configuration and hence aren&apos;t function arguments. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="66" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/Root/BTaggingEfficiencyTool.cxx" bodystart="564" bodyend="578"/>
      </memberdef>
      <memberdef kind="function" id="d3/d5c/classBTaggingEfficiencyTool_1af51fddafb9d9e114c90eeafe8d3b63fa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="db/d8a/classCP_1_1CorrectionCode" kindref="compound">CP::CorrectionCode</ref></type>
        <definition>CorrectionCode BTaggingEfficiencyTool::getInefficiencyScaleFactor</definition>
        <argsstring>(const xAOD::Jet &amp;jet, float &amp;sf) const </argsstring>
        <name>getInefficiencyScaleFactor</name>
        <reimplements refid="d4/dfb/classIBTaggingEfficiencyTool_1ad745a7b25d6212767501a9569c269a2b">getInefficiencyScaleFactor</reimplements>
        <param>
          <type>const <ref refid="db/d9c/classxAOD_1_1Jet__v1" kindref="compound">xAOD::Jet</ref> &amp;</type>
          <declname>jet</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>sf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Computes the data/MC inefficiency scale factor for the given jet. The tagger and operating point under consideration are part of the configuration and hence aren&apos;t function arguments. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="72" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/Root/BTaggingEfficiencyTool.cxx" bodystart="640" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="d3/d5c/classBTaggingEfficiencyTool_1a3c5855d370cce77950cc7e2053cd58cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="db/d8a/classCP_1_1CorrectionCode" kindref="compound">CP::CorrectionCode</ref></type>
        <definition>CorrectionCode BTaggingEfficiencyTool::getMCEfficiency</definition>
        <argsstring>(const xAOD::Jet &amp;jet, float &amp;eff) const </argsstring>
        <name>getMCEfficiency</name>
        <reimplements refid="d4/dfb/classIBTaggingEfficiencyTool_1aeb0f8472c03f2f6beb61a7de6afd7af3">getMCEfficiency</reimplements>
        <param>
          <type>const <ref refid="db/d9c/classxAOD_1_1Jet__v1" kindref="compound">xAOD::Jet</ref> &amp;</type>
          <declname>jet</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>eff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Computes the MC efficiency for the given jet. The tagger and operating point under consideration are part of the configuration and hence aren&apos;t function arguments. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="78" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/Root/BTaggingEfficiencyTool.cxx" bodystart="718" bodyend="734"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Methods equivalent to those above but not relying on the xAOD format</header>
      <description><para><anchor id="_1amgrp4fc04a4fb3271c11897d53d6359f0b03"/> </para></description>
      <memberdef kind="function" id="d3/d5c/classBTaggingEfficiencyTool_1a94755b6f596af9738c6be7286333c971" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/d8a/classCP_1_1CorrectionCode" kindref="compound">CP::CorrectionCode</ref></type>
        <definition>CorrectionCode BTaggingEfficiencyTool::getScaleFactor</definition>
        <argsstring>(int flavour, const Analysis::CalibrationDataVariables &amp;v, float &amp;sf) const </argsstring>
        <name>getScaleFactor</name>
        <param>
          <type>int</type>
          <declname>flavour</declname>
        </param>
        <param>
          <type>const <ref refid="d4/db4/structAnalysis_1_1CalibrationDataVariables" kindref="compound">Analysis::CalibrationDataVariables</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>sf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Computes the data/MC efficiency scale factor for the jet, given its kinematics, (possibly) tagger weight and truth flavour. The tagger and operating point under consideration are part of the configuration and hence aren&apos;t function arguments. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="87" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/Root/BTaggingEfficiencyTool.cxx" bodystart="425" bodyend="485"/>
      </memberdef>
      <memberdef kind="function" id="d3/d5c/classBTaggingEfficiencyTool_1ad2557aac5352681a0f7b47dfa716e7ed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/d8a/classCP_1_1CorrectionCode" kindref="compound">CP::CorrectionCode</ref></type>
        <definition>CorrectionCode BTaggingEfficiencyTool::getEfficiency</definition>
        <argsstring>(int flavour, const Analysis::CalibrationDataVariables &amp;v, float &amp;eff) const </argsstring>
        <name>getEfficiency</name>
        <param>
          <type>int</type>
          <declname>flavour</declname>
        </param>
        <param>
          <type>const <ref refid="d4/db4/structAnalysis_1_1CalibrationDataVariables" kindref="compound">Analysis::CalibrationDataVariables</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>eff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Computes the data efficiency for the jet, given its kinematics, (possibly) tagger weight and truth flavour. The tagger and operating point under consideration are part of the configuration and hence aren&apos;t function arguments. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="93" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/Root/BTaggingEfficiencyTool.cxx" bodystart="505" bodyend="561"/>
      </memberdef>
      <memberdef kind="function" id="d3/d5c/classBTaggingEfficiencyTool_1ab873f9853ed5baa08ae2e50a02e1e155" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/d8a/classCP_1_1CorrectionCode" kindref="compound">CP::CorrectionCode</ref></type>
        <definition>CorrectionCode BTaggingEfficiencyTool::getInefficiency</definition>
        <argsstring>(int flavour, const Analysis::CalibrationDataVariables &amp;v, float &amp;eff) const </argsstring>
        <name>getInefficiency</name>
        <param>
          <type>int</type>
          <declname>flavour</declname>
        </param>
        <param>
          <type>const <ref refid="d4/db4/structAnalysis_1_1CalibrationDataVariables" kindref="compound">Analysis::CalibrationDataVariables</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>eff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Computes the data inefficiency for the jet, given its kinematics, (possibly) tagger weight and truth flavour. The tagger and operating point under consideration are part of the configuration and hence aren&apos;t function arguments. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="99" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/Root/BTaggingEfficiencyTool.cxx" bodystart="581" bodyend="637"/>
      </memberdef>
      <memberdef kind="function" id="d3/d5c/classBTaggingEfficiencyTool_1add3f2160e6b57354bc33fa723ba0dfbc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/d8a/classCP_1_1CorrectionCode" kindref="compound">CP::CorrectionCode</ref></type>
        <definition>CorrectionCode BTaggingEfficiencyTool::getInefficiencyScaleFactor</definition>
        <argsstring>(int flavour, const Analysis::CalibrationDataVariables &amp;v, float &amp;sf) const </argsstring>
        <name>getInefficiencyScaleFactor</name>
        <param>
          <type>int</type>
          <declname>flavour</declname>
        </param>
        <param>
          <type>const <ref refid="d4/db4/structAnalysis_1_1CalibrationDataVariables" kindref="compound">Analysis::CalibrationDataVariables</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>sf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Computes the data/MC inefficiency scale factor for the jet, given its kinematics, (possibly) tagger weight and truth flavour. The tagger and operating point under consideration are part of the configuration and hence aren&apos;t function arguments. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="105" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/Root/BTaggingEfficiencyTool.cxx" bodystart="659" bodyend="715"/>
      </memberdef>
      <memberdef kind="function" id="d3/d5c/classBTaggingEfficiencyTool_1a44c3595284b9c02806905d7df1f65c41" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/d8a/classCP_1_1CorrectionCode" kindref="compound">CP::CorrectionCode</ref></type>
        <definition>CorrectionCode BTaggingEfficiencyTool::getMCEfficiency</definition>
        <argsstring>(int flavour, const Analysis::CalibrationDataVariables &amp;v, float &amp;eff) const </argsstring>
        <name>getMCEfficiency</name>
        <param>
          <type>int</type>
          <declname>flavour</declname>
        </param>
        <param>
          <type>const <ref refid="d4/db4/structAnalysis_1_1CalibrationDataVariables" kindref="compound">Analysis::CalibrationDataVariables</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>eff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Computes the MC efficiency for the jet, given its kinematics, (possibly) tagger weight and truth flavour. The tagger and operating point under consideration are part of the configuration and hence aren&apos;t function arguments. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="111" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/Root/BTaggingEfficiencyTool.cxx" bodystart="737" bodyend="771"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Other methods implementing the IBTagEfficiencyTool interface</header>
      <description><para><anchor id="_1amgrp66d44e1877c4f3d83122449ee8b93c36"/> </para></description>
      <memberdef kind="function" id="d3/d5c/classBTaggingEfficiencyTool_1a25b1fda32dd3c26d3caf8ee643684920" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>StatusCode</type>
        <definition>StatusCode BTaggingEfficiencyTool::initialize</definition>
        <argsstring>()</argsstring>
        <name>initialize</name>
        <reimplements refid="d5/dbb/classasg_1_1AsgTool_1a55b3c013a3e54ae4c1d0d76de8e1e726">initialize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialise the tool.</para><para>This is the stage at which all of the configuration is done and the underlying <computeroutput>CalibrationDataInferfaceROOT</computeroutput> object is instantiated. The properties that can be set are documented in the <ulink url="https://twiki.cern.ch/twiki/bin/view/AtlasProtected/BTaggingCalibrationDataInterface#xAOD_interface">xAOD interface</ulink> section of the CalibrationDataInterface Twiki page. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="125" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/Root/BTaggingEfficiencyTool.cxx" bodystart="148" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="d3/d5c/classBTaggingEfficiencyTool_1ab6efc93b0e2bd997893af097d0617268" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d1/d38/classCP_1_1SystematicCode" kindref="compound">CP::SystematicCode</ref></type>
        <definition>SystematicCode BTaggingEfficiencyTool::applySystematicVariation</definition>
        <argsstring>(const CP::SystematicSet &amp;set)</argsstring>
        <name>applySystematicVariation</name>
        <reimplements refid="d4/d5c/classCP_1_1ISystematicsTool_1a73f35f85955411a7e14cb208721a242d">applySystematicVariation</reimplements>
        <param>
          <type>const <ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound">CP::SystematicSet</ref> &amp;</type>
          <declname>set</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the tool to return &quot;shifted&quot; values. Note that only single-parameter variations or empty sets (the latter are to revert to nominal results) are supported at present; <computeroutput>SystematicCode::Unsupported</computeroutput> will be returned for variations of multiple parameters or variations that aren&apos;t recognised. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="132" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/Root/BTaggingEfficiencyTool.cxx" bodystart="820" bodyend="850"/>
      </memberdef>
      <memberdef kind="function" id="d3/d5c/classBTaggingEfficiencyTool_1a3176c95d904b8cdf0646110bd18e8421" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound">CP::SystematicSet</ref></type>
        <definition>SystematicSet BTaggingEfficiencyTool::affectingSystematics</definition>
        <argsstring>() const </argsstring>
        <name>affectingSystematics</name>
        <reimplements refid="d4/d5c/classCP_1_1ISystematicsTool_1abc7cfc4bece0b5aaf372e75c33ba2122">affectingSystematics</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a list of all systematic variations supported by this tool. Note that this list depends on the uncertainty model used, and on the (dynamic) configuration of the eigenvector variations (if this uncertainty model is used). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="138" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/Root/BTaggingEfficiencyTool.cxx" bodystart="782" bodyend="784"/>
      </memberdef>
      <memberdef kind="function" id="d3/d5c/classBTaggingEfficiencyTool_1a03b90e8614cd9ab4838020f7d59dfd87" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound">CP::SystematicSet</ref></type>
        <definition>SystematicSet BTaggingEfficiencyTool::recommendedSystematics</definition>
        <argsstring>() const </argsstring>
        <name>recommendedSystematics</name>
        <reimplements refid="d4/d5c/classCP_1_1ISystematicsTool_1a6d2b283af1c21f9d40588ef87eb6c4b3">recommendedSystematics</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a list of &quot;recommended&quot; systematic variations supported by this tool. At present, multiple views of the same uncertainties (beyond the uncertainty model etc., see above) are not implemented, so this method simply calls <computeroutput><ref refid="d3/d5c/classBTaggingEfficiencyTool_1a3176c95d904b8cdf0646110bd18e8421" kindref="member">affectingSystematics()</ref></computeroutput> . </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="144" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/Root/BTaggingEfficiencyTool.cxx" bodystart="787" bodyend="789"/>
      </memberdef>
      <memberdef kind="function" id="d3/d5c/classBTaggingEfficiencyTool_1aed28685cdb8d254afdb2a0c92515999f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BTaggingEfficiencyTool::isAffectedBySystematic</definition>
        <argsstring>(const CP::SystematicVariation &amp;systematic) const </argsstring>
        <name>isAffectedBySystematic</name>
        <reimplements refid="d4/d5c/classCP_1_1ISystematicsTool_1a04aa5fb3e693dc6536b27354c7b2c71e">isAffectedBySystematic</reimplements>
        <param>
          <type>const <ref refid="dd/d2d/classCP_1_1SystematicVariation" kindref="compound">CP::SystematicVariation</ref> &amp;</type>
          <declname>systematic</declname>
        </param>
        <briefdescription>
<para>Returns whether or not the given systematic variation is supported by this tool. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="147" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/Root/BTaggingEfficiencyTool.cxx" bodystart="775" bodyend="779"/>
      </memberdef>
      <memberdef kind="function" id="d3/d5c/classBTaggingEfficiencyTool_1a541dfc3ece4820a6fa5f5893de364872" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BTaggingEfficiencyTool::setMapIndex</definition>
        <argsstring>(const std::string &amp;flavour, unsigned int index)</argsstring>
        <name>setMapIndex</name>
        <reimplements refid="d4/dfb/classIBTaggingEfficiencyTool_1adb1ed51792ba259170f06913be79a96a">setMapIndex</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>flavour</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Specify the &quot;map index&quot; to be used for the given jet flavour (at initialisation time it will be set to 0). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>false if the requested index is invalid (in which case no setting will be changed)</para></simplesect>
See the <ulink url="https://twiki.cern.ch/twiki/bin/view/AtlasProtected/BTaggingCalibrationDataInterface#MultipleMC">CalibrationDataInterface</ulink> documentation for more <ref refid="dd/d39/namespacedetail" kindref="compound">detail</ref> on the meaning of the map index </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="157" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/Root/BTaggingEfficiencyTool.cxx" bodystart="885" bodyend="909"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>query methods</header>
      <description><para><anchor id="_1amgrp3a19e1d600ab93c611e60f51f5538e36"/> Utility method returning a detailed list of systematics (including the flavours to which they apply) </para></description>
      <memberdef kind="function" id="d3/d5c/classBTaggingEfficiencyTool_1ab1ee09934d6c57a12fc788615a08d1d7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const std::map&lt; <ref refid="dd/d2d/classCP_1_1SystematicVariation" kindref="compound">CP::SystematicVariation</ref>, std::vector&lt; std::string &gt; &gt;</type>
        <definition>const std::map&lt; SystematicVariation, std::vector&lt; std::string &gt; &gt; BTaggingEfficiencyTool::listSystematics</definition>
        <argsstring>() const </argsstring>
        <name>listSystematics</name>
        <reimplements refid="d4/dfb/classIBTaggingEfficiencyTool_1a2b6be7991766594669da0deabb7c793d">listSystematics</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="164" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/Root/BTaggingEfficiencyTool.cxx" bodystart="792" bodyend="816"/>
      </memberdef>
      <memberdef kind="function" id="d3/d5c/classBTaggingEfficiencyTool_1ac5bf35cfe959be35e2794ff1c45ac285" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string BTaggingEfficiencyTool::getTaggerName</definition>
        <argsstring>() const </argsstring>
        <name>getTaggerName</name>
        <reimplements refid="d4/dfb/classIBTaggingEfficiencyTool_1a9c83d1e2f57126b9271574c0273033f2">getTaggerName</reimplements>
        <briefdescription>
<para>Retrieve the name of the tagger (as specified in the calibration file). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="167" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" bodystart="167" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="d3/d5c/classBTaggingEfficiencyTool_1a2ead33f7a95f268f6ca3ff2e1321f869" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string BTaggingEfficiencyTool::getOperatingPoint</definition>
        <argsstring>() const </argsstring>
        <name>getOperatingPoint</name>
        <reimplements refid="d4/dfb/classIBTaggingEfficiencyTool_1a3bb08f8a8aff463e0270c2e4598fb667">getOperatingPoint</reimplements>
        <briefdescription>
<para>Retrieve the operating point (as specified in the calibration file). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="170" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" bodystart="170" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="d3/d5c/classBTaggingEfficiencyTool_1a16bfaf0da63ca07af60b34ab1cc34156" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string BTaggingEfficiencyTool::getJetAuthor</definition>
        <argsstring>() const </argsstring>
        <name>getJetAuthor</name>
        <reimplements refid="d4/dfb/classIBTaggingEfficiencyTool_1ade635f0ad24b41b297c148f2f227626e">getJetAuthor</reimplements>
        <briefdescription>
<para>Retrieve the jet collection name (as specified in the calibration file) for which this tool was setup. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="173" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" bodystart="173" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="d3/d5c/classBTaggingEfficiencyTool_1aa4057461145501f4cc63d889789488fd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool BTaggingEfficiencyTool::applySystematics</definition>
        <argsstring>() const </argsstring>
        <name>applySystematics</name>
        <briefdescription>
<para>Specify whether any systematic variation is being used at present. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="179" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" bodystart="179" bodyend="179"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d3/d5c/classBTaggingEfficiencyTool_1a190c91d6582406c528ff351945b61a27" prot="private" static="no" mutable="no">
        <type><ref refid="dd/da8/classAnalysis_1_1CalibrationDataInterfaceROOT" kindref="compound">Analysis::CalibrationDataInterfaceROOT</ref> *</type>
        <definition>Analysis::CalibrationDataInterfaceROOT* BTaggingEfficiencyTool::m_CDI</definition>
        <argsstring></argsstring>
        <name>m_CDI</name>
        <initializer> nullptr</initializer>
        <briefdescription>
<para>pointer to the object doing the actual work </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="252" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d3/d5c/classBTaggingEfficiencyTool_1a1b8b8bc455a94c530d2afa834157ffa0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BTaggingEfficiencyTool::BTaggingEfficiencyTool</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>BTaggingEfficiencyTool</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Create a proper constructor for <ref refid="d5/dc5/namespaceAthena" kindref="compound">Athena</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Create a constructor for standalone usage </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="36" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/Root/BTaggingEfficiencyTool.cxx" bodystart="95" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="d3/d5c/classBTaggingEfficiencyTool_1ae7d29df6c4ca377fec3d7b7872b119a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>BTaggingEfficiencyTool::~BTaggingEfficiencyTool</definition>
        <argsstring>()</argsstring>
        <name>~BTaggingEfficiencyTool</name>
        <briefdescription>
<para>Create a constructor for standalone usage. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="39" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/Root/BTaggingEfficiencyTool.cxx" bodystart="127" bodyend="129"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d3/d5c/classBTaggingEfficiencyTool_1acd12d3be03dfab0b5813a7752ca4f979" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BTaggingEfficiencyTool::addSystematics</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;systematicNames, unsigned int flavourID, Analysis::Uncertainty uncType)</argsstring>
        <name>addSystematics</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>systematicNames</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>flavourID</declname>
        </param>
        <param>
          <type>Analysis::Uncertainty</type>
          <declname>uncType</declname>
        </param>
        <briefdescription>
<para>add entries to the systematics registry </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="194"/>
      </memberdef>
      <memberdef kind="function" id="d3/d5c/classBTaggingEfficiencyTool_1a09628ee43efc1055196ce0c517603837" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; BTaggingEfficiencyTool::makeEigenSyst</definition>
        <argsstring>(const std::string &amp;flav, int number)</argsstring>
        <name>makeEigenSyst</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>flav</declname>
        </param>
        <param>
          <type>int</type>
          <declname>number</declname>
        </param>
        <briefdescription>
<para>generate names for the eigenvector variations for the given jet flavour </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="197" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/Root/BTaggingEfficiencyTool.cxx" bodystart="914" bodyend="923"/>
      </memberdef>
      <memberdef kind="function" id="d3/d5c/classBTaggingEfficiencyTool_1a4bb6d9400547e9b7f573899e445cfbcc" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BTaggingEfficiencyTool::getIndices</definition>
        <argsstring>(unsigned int flavour, unsigned int &amp;sf, unsigned int &amp;ef) const </argsstring>
        <name>getIndices</name>
        <param>
          <type>unsigned int</type>
          <declname>flavour</declname>
        </param>
        <param>
          <type>unsigned int &amp;</type>
          <declname>sf</declname>
        </param>
        <param>
          <type>unsigned int &amp;</type>
          <declname>ef</declname>
        </param>
        <briefdescription>
<para>helper function for retrieving object indices </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="200" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/Root/BTaggingEfficiencyTool.cxx" bodystart="926" bodyend="942"/>
      </memberdef>
      <memberdef kind="function" id="d3/d5c/classBTaggingEfficiencyTool_1aa8e2c03004877b49fd420f6637d5ca9e" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string BTaggingEfficiencyTool::getLabel</definition>
        <argsstring>(int flavourID) const </argsstring>
        <name>getLabel</name>
        <param>
          <type>int</type>
          <declname>flavourID</declname>
        </param>
        <briefdescription>
<para>convert integer flavour index to its string equivalent </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="203" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" bodystart="203" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="d3/d5c/classBTaggingEfficiencyTool_1a0c6196179ee483289c88281bc8d0c9da" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int BTaggingEfficiencyTool::getFlavourID</definition>
        <argsstring>(const std::string &amp;label) const </argsstring>
        <name>getFlavourID</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>label</declname>
        </param>
        <briefdescription>
<para>convert string flavour to its integer index equivalent </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="223" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" bodystart="223" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="d3/d5c/classBTaggingEfficiencyTool_1ab7f624240812808f5c3313752f21b61a" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BTaggingEfficiencyTool::fillVariables</definition>
        <argsstring>(const xAOD::Jet &amp;jet, Analysis::CalibrationDataVariables &amp;x) const </argsstring>
        <name>fillVariables</name>
        <param>
          <type>const <ref refid="db/d9c/classxAOD_1_1Jet__v1" kindref="compound">xAOD::Jet</ref> &amp;</type>
          <declname>jet</declname>
        </param>
        <param>
          <type><ref refid="d4/db4/structAnalysis_1_1CalibrationDataVariables" kindref="compound">Analysis::CalibrationDataVariables</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fill the <computeroutput><ref refid="d4/db4/structAnalysis_1_1CalibrationDataVariables" kindref="compound">Analysis::CalibrationDataVariables</ref></computeroutput> struct with relevant information pertaining to the jet considered</para><para><simplesect kind="return"><para>false if the requested information cannot be retrieved (this should never happen except if &quot;continuous tagging&quot; is used and the no b-tagging was applied to the jet) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="245" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/Root/BTaggingEfficiencyTool.cxx" bodystart="854" bodyend="868"/>
      </memberdef>
      <memberdef kind="function" id="d3/d5c/classBTaggingEfficiencyTool_1a2948c74bd48b88b3e58b8368b48dd968" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BTaggingEfficiencyTool::fillVariables</definition>
        <argsstring>(const double jetPt, const double jetEta, const double jetTagWeight, Analysis::CalibrationDataVariables &amp;x) const </argsstring>
        <name>fillVariables</name>
        <param>
          <type>const double</type>
          <declname>jetPt</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>jetEta</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>jetTagWeight</declname>
        </param>
        <param>
          <type><ref refid="d4/db4/structAnalysis_1_1CalibrationDataVariables" kindref="compound">Analysis::CalibrationDataVariables</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fill the <computeroutput><ref refid="d4/db4/structAnalysis_1_1CalibrationDataVariables" kindref="compound">Analysis::CalibrationDataVariables</ref></computeroutput> struct with relevant information pertaining to the jet considered </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="249" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/Root/BTaggingEfficiencyTool.cxx" bodystart="871" bodyend="879"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2583">
        <label>IBTaggingEfficiencyTool</label>
        <link refid="d4/dfb/classIBTaggingEfficiencyTool"/>
        <childnode refid="2582" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2581">
        <label>asg::AsgTool</label>
        <link refid="d5/dbb/classasg_1_1AsgTool"/>
        <childnode refid="2582" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2582">
        <label>asg::IAsgTool</label>
        <link refid="d4/d20/classasg_1_1IAsgTool"/>
      </node>
      <node id="2580">
        <label>BTaggingEfficiencyTool</label>
        <link refid="d3/d5c/classBTaggingEfficiencyTool"/>
        <childnode refid="2581" relation="public-inheritance">
        </childnode>
        <childnode refid="2583" relation="public-inheritance">
        </childnode>
        <childnode refid="2584" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2584">
        <label>CP::ISystematicsTool</label>
        <link refid="d4/d5c/classCP_1_1ISystematicsTool"/>
        <childnode refid="2582" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2593">
        <label>string</label>
      </node>
      <node id="2595">
        <label>Analysis::CalibrationDataInterfaceBase</label>
        <link refid="d7/d79/classAnalysis_1_1CalibrationDataInterfaceBase"/>
        <childnode refid="2593" relation="usage">
          <edgelabel>m_taggerName</edgelabel>
        </childnode>
      </node>
      <node id="2588">
        <label>IBTaggingEfficiencyTool</label>
        <link refid="d4/dfb/classIBTaggingEfficiencyTool"/>
        <childnode refid="2587" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2590">
        <label>BTaggingEfficiencyTool::SystInfo</label>
        <childnode refid="2591" relation="usage">
          <edgelabel>uncType</edgelabel>
        </childnode>
      </node>
      <node id="2586">
        <label>asg::AsgTool</label>
        <link refid="d5/dbb/classasg_1_1AsgTool"/>
        <childnode refid="2587" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2587">
        <label>asg::IAsgTool</label>
        <link refid="d4/d20/classasg_1_1IAsgTool"/>
      </node>
      <node id="2591">
        <label>Uncertainty</label>
      </node>
      <node id="2592">
        <label>CP::SystematicSet</label>
        <link refid="d4/d52/classCP_1_1SystematicSet"/>
        <childnode refid="2593" relation="usage">
          <edgelabel>m_joinedName</edgelabel>
        </childnode>
      </node>
      <node id="2594">
        <label>Analysis::CalibrationDataInterfaceROOT</label>
        <link refid="dd/da8/classAnalysis_1_1CalibrationDataInterfaceROOT"/>
        <childnode refid="2595" relation="public-inheritance">
        </childnode>
        <childnode refid="2593" relation="usage">
          <edgelabel>m_filenameEff</edgelabel>
          <edgelabel>m_filenameSF</edgelabel>
        </childnode>
      </node>
      <node id="2585">
        <label>BTaggingEfficiencyTool</label>
        <link refid="d3/d5c/classBTaggingEfficiencyTool"/>
        <childnode refid="2586" relation="public-inheritance">
        </childnode>
        <childnode refid="2588" relation="public-inheritance">
        </childnode>
        <childnode refid="2589" relation="public-inheritance">
        </childnode>
        <childnode refid="2590" relation="usage">
          <edgelabel>m_applyThisSyst</edgelabel>
        </childnode>
        <childnode refid="2592" relation="usage">
          <edgelabel>m_systematics</edgelabel>
        </childnode>
        <childnode refid="2593" relation="usage">
          <edgelabel>m_jetAuthor</edgelabel>
          <edgelabel>m_EVReductionLight</edgelabel>
          <edgelabel>m_EVReductionB</edgelabel>
          <edgelabel>m_OP</edgelabel>
          <edgelabel>m_EVReductionC</edgelabel>
          <edgelabel>m_SFLightName</edgelabel>
          <edgelabel>m_SFBName</edgelabel>
          <edgelabel>m_SFTName</edgelabel>
          <edgelabel>m_SFCName</edgelabel>
          <edgelabel>m_systStrategy</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="2594" relation="usage">
          <edgelabel>m_CDI</edgelabel>
        </childnode>
      </node>
      <node id="2589">
        <label>CP::ISystematicsTool</label>
        <link refid="d4/d5c/classCP_1_1ISystematicsTool"/>
        <childnode refid="2587" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" line="26" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTaggingEfficiency/xAODBTaggingEfficiency/BTaggingEfficiencyTool.h" bodystart="24" bodyend="330"/>
    <listofallmembers>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1acd12d3be03dfab0b5813a7752ca4f979" prot="private" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>addSystematics</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1a3176c95d904b8cdf0646110bd18e8421" prot="public" virt="virtual"><scope>BTaggingEfficiencyTool</scope><name>affectingSystematics</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1aa4057461145501f4cc63d889789488fd" prot="public" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>applySystematics</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1ab6efc93b0e2bd997893af097d0617268" prot="public" virt="virtual"><scope>BTaggingEfficiencyTool</scope><name>applySystematicVariation</name></member>
      <member refid="d5/dbb/classasg_1_1AsgTool_1a47f02c756c6d6026d03e0d4d68d82a94" prot="public" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>AsgTool</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1a1b8b8bc455a94c530d2afa834157ffa0" prot="public" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>BTaggingEfficiencyTool</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1ab7f624240812808f5c3313752f21b61a" prot="private" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>fillVariables</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1a2948c74bd48b88b3e58b8368b48dd968" prot="private" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>fillVariables</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1ace00b9947ed285983a259b736f730676" prot="public" virt="virtual"><scope>BTaggingEfficiencyTool</scope><name>getEfficiency</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1ad2557aac5352681a0f7b47dfa716e7ed" prot="public" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>getEfficiency</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1a0c6196179ee483289c88281bc8d0c9da" prot="private" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>getFlavourID</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1a4bb6d9400547e9b7f573899e445cfbcc" prot="private" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>getIndices</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1a49c4d7a9d2111955fde95cf45d9c02f3" prot="public" virt="virtual"><scope>BTaggingEfficiencyTool</scope><name>getInefficiency</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1ab873f9853ed5baa08ae2e50a02e1e155" prot="public" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>getInefficiency</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1af51fddafb9d9e114c90eeafe8d3b63fa" prot="public" virt="virtual"><scope>BTaggingEfficiencyTool</scope><name>getInefficiencyScaleFactor</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1add3f2160e6b57354bc33fa723ba0dfbc" prot="public" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>getInefficiencyScaleFactor</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1a16bfaf0da63ca07af60b34ab1cc34156" prot="public" virt="virtual"><scope>BTaggingEfficiencyTool</scope><name>getJetAuthor</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1aa8e2c03004877b49fd420f6637d5ca9e" prot="private" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>getLabel</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1a3c5855d370cce77950cc7e2053cd58cf" prot="public" virt="virtual"><scope>BTaggingEfficiencyTool</scope><name>getMCEfficiency</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1a44c3595284b9c02806905d7df1f65c41" prot="public" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>getMCEfficiency</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1a2ead33f7a95f268f6ca3ff2e1321f869" prot="public" virt="virtual"><scope>BTaggingEfficiencyTool</scope><name>getOperatingPoint</name></member>
      <member refid="d5/dbb/classasg_1_1AsgTool_1a5d9d9eae0988784fb6c257e0a2440ca6" prot="public" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>getProperty</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1a4abb53a5ebce7b616f8d5d29dd1e3994" prot="public" virt="virtual"><scope>BTaggingEfficiencyTool</scope><name>getScaleFactor</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1a94755b6f596af9738c6be7286333c971" prot="public" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>getScaleFactor</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1ac5bf35cfe959be35e2794ff1c45ac285" prot="public" virt="virtual"><scope>BTaggingEfficiencyTool</scope><name>getTaggerName</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1a25b1fda32dd3c26d3caf8ee643684920" prot="public" virt="virtual"><scope>BTaggingEfficiencyTool</scope><name>initialize</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1aed28685cdb8d254afdb2a0c92515999f" prot="public" virt="virtual"><scope>BTaggingEfficiencyTool</scope><name>isAffectedBySystematic</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1ab1ee09934d6c57a12fc788615a08d1d7" prot="public" virt="virtual"><scope>BTaggingEfficiencyTool</scope><name>listSystematics</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1aa9b8cee476c0c305cec576d0b5f23337" prot="private" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>m_applySyst</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1ad60c52c4b65b48979dac2c088f38abb6" prot="private" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>m_applyThisSyst</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1a190c91d6582406c528ff351945b61a27" prot="private" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>m_CDI</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1a96c1f5ca4a20814b5a6efe217dfae6dc" prot="private" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>m_coneFlavourLabel</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1a4b1ff15dd8d603343c4f50d88b8ab1a6" prot="private" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>m_EffBName</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1a7f0223eeb242fb4f06d564aebe3826ff" prot="private" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>m_EffCName</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1a1459e1be3d304f5d64a7f6a4765aba5a" prot="private" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>m_EffFile</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1ace2f93b44ef7c57aa6fd48168a1a0e4e" prot="private" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>m_EffIndices</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1a2b3f9088c649b8ea35cf61f4aa5c3ab7" prot="private" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>m_EffLightName</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1a5f34f192ffc05e2adfd25efd7cae8107" prot="private" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>m_EffTName</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1a7d730245ec1ee22a31beb4c8c6eda686" prot="private" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>m_EVReductionB</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1a842910ba8fdefa32f09c325cb66160f2" prot="private" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>m_EVReductionC</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1aa166dd7e1cbdc0da635f587ba76947c7" prot="private" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>m_EVReductionLight</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1aa0a45f03474ea6da9b8c08e64a3ba747" prot="private" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>m_excludeFromEV</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1aa7b8c372aaf55e646af9ff5a0a5a14c7" prot="private" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>m_initialised</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1ab82621356fb312d36f968617519e457d" prot="private" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>m_isContinuous</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1aaf6b81af35ff46c1f89b1992d52080d1" prot="private" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>m_jetAuthor</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1ab6e57a57b96dfa5b8360e5081d54ecf1" prot="private" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>m_mapIndices</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1a03e771f8dfe7722095fad402eb51c3bf" prot="private" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>m_oldConeFlavourLabel</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1a51795b1cf0d23b0246f09d42308e18a2" prot="private" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>m_OP</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1a1061c82b8d4a927b251be342e5de55d7" prot="private" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>m_SFBName</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1ad8fb7db55c46d9531edf77e9541e90b7" prot="private" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>m_SFCName</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1aec1cfb366cc8d612e0f10c8c782d6d3c" prot="private" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>m_SFFile</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1a63bfab7b32f7c0b732f7be2f9754e02a" prot="private" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>m_SFIndices</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1a1caee04910ed669120aa55aba6cd4366" prot="private" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>m_SFLightName</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1ab140c53973071ae7ad13c57a93b20795" prot="private" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>m_SFTName</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1a8a57561235b7137d97a4e75c1aab941f" prot="private" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>m_systematics</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1a7c8c0989a17866a15c25acbe7617f2f7" prot="private" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>m_systematicsInfo</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1aabaa358a7c290f215a863de72b46c3de" prot="private" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>m_systStrategy</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1adbc9f0ec99cb8989cbf3f3cfe5db26b0" prot="private" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>m_taggerName</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1a1f42b6975f0e063b3903b42976c9bc56" prot="private" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>m_useDevFile</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1a09628ee43efc1055196ce0c517603837" prot="private" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>makeEigenSyst</name></member>
      <member refid="d5/dbb/classasg_1_1AsgTool_1a3aeba8f7ad5ade0197f5848fe9e4480e" prot="public" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>msg_level_name</name></member>
      <member refid="d5/dbb/classasg_1_1AsgTool_1af4cc6ba53b6505045c2866d4e30e821d" prot="public" virt="virtual"><scope>BTaggingEfficiencyTool</scope><name>print</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1a03b90e8614cd9ab4838020f7d59dfd87" prot="public" virt="virtual"><scope>BTaggingEfficiencyTool</scope><name>recommendedSystematics</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1a541dfc3ece4820a6fa5f5893de364872" prot="public" virt="virtual"><scope>BTaggingEfficiencyTool</scope><name>setMapIndex</name></member>
      <member refid="d5/dbb/classasg_1_1AsgTool_1abf22f7aa60258c67b79cf67bf70a3a5b" prot="public" virt="non-virtual"><scope>BTaggingEfficiencyTool</scope><name>~AsgTool</name></member>
      <member refid="d3/d5c/classBTaggingEfficiencyTool_1ae7d29df6c4ca377fec3d7b7872b119a8" prot="public" virt="virtual"><scope>BTaggingEfficiencyTool</scope><name>~BTaggingEfficiencyTool</name></member>
      <member refid="d4/d20/classasg_1_1IAsgTool_1a77b49d52f1f8c272cb665b8309d6082d" prot="public" virt="virtual"><scope>BTaggingEfficiencyTool</scope><name>~IAsgTool</name></member>
      <member refid="d4/d5c/classCP_1_1ISystematicsTool_1a18391a9c9b1789aa9045082bcd65c6ee" prot="public" virt="virtual"><scope>BTaggingEfficiencyTool</scope><name>~ISystematicsTool</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
