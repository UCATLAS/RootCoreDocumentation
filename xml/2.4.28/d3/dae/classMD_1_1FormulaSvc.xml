<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d3/dae/classMD_1_1FormulaSvc" kind="class" prot="public">
    <compoundname>MD::FormulaSvc</compoundname>
    <basecompoundref refid="de/ddb/classEL_1_1Algorithm" prot="public" virt="non-virtual">EL::Algorithm</basecompoundref>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="d3/dae/classMD_1_1FormulaSvc_1adc5d926889c78825cadf6825bdac199f" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string MD::FormulaSvc::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
<para>description: the name of the service </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/FormulaSvc.h" line="57" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/FormulaSvc.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d3/dae/classMD_1_1FormulaSvc_1abb6e6db704d2c19d03b1334b7cf6c476" prot="private" static="no" mutable="no">
        <type>TTree *</type>
        <definition>TTree* MD::FormulaSvc::m_tree</definition>
        <argsstring></argsstring>
        <name>m_tree</name>
        <briefdescription>
<para>description: the tree we are connected to </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/FormulaSvc.h" line="123" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/FormulaSvc.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/dae/classMD_1_1FormulaSvc_1a2536f50b264fa10537b4cf5c4af65171" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="d8/d4e/classMD_1_1Formula" kindref="compound">Formula</ref> * &gt;</type>
        <definition>std::vector&lt;Formula*&gt; MD::FormulaSvc::m_vars</definition>
        <argsstring></argsstring>
        <name>m_vars</name>
        <briefdescription>
<para>description: the list of variables used </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/FormulaSvc.h" line="127" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/FormulaSvc.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d3/dae/classMD_1_1FormulaSvc_1aa66461bb4b0b8822bd7a15b81fdc0c75" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MD::FormulaSvc::testInvariant</definition>
        <argsstring>() const </argsstring>
        <name>testInvariant</name>
        <reimplements refid="de/ddb/classEL_1_1Algorithm_1afa8999f46656a42d53df3731216f1296">testInvariant</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: test the invariant of this object guarantee: no-fail </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/FormulaSvc.h" line="63"/>
      </memberdef>
      <memberdef kind="function" id="d3/dae/classMD_1_1FormulaSvc_1a2f423d037aa6f89635eb93f920771177" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MD::FormulaSvc::FormulaSvc</definition>
        <argsstring>()</argsstring>
        <name>FormulaSvc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: standard default constructor guarantee: no-fail </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/FormulaSvc.h" line="69"/>
      </memberdef>
      <memberdef kind="function" id="d3/dae/classMD_1_1FormulaSvc_1a3f712f95f7fb1e42e90f13b91de23473" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MD::FormulaSvc::~FormulaSvc</definition>
        <argsstring>()</argsstring>
        <name>~FormulaSvc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: standard destructor guarantee: no-fail </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/FormulaSvc.h" line="75"/>
      </memberdef>
      <memberdef kind="function" id="d3/dae/classMD_1_1FormulaSvc_1ad126354549319787033ae2666a30044d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d8/d4e/classMD_1_1Formula" kindref="compound">Formula</ref> *</type>
        <definition>const Formula* MD::FormulaSvc::addForm</definition>
        <argsstring>(const std::string &amp;formula)</argsstring>
        <name>addForm</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>formula</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: add another formula returns: the formula guarantee: strong failures: out of memory II failures: not in initialization stage requires: !formula.empty() </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/FormulaSvc.h" line="85"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d3/dae/classMD_1_1FormulaSvc_1a404ad8ae72f8b8238ecf67682f563bad" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const char *</type>
        <definition>virtual const char* MD::FormulaSvc::GetName</definition>
        <argsstring>() const </argsstring>
        <name>GetName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: return the name of this algorithm guarantee: no-fail </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/FormulaSvc.h" line="96"/>
      </memberdef>
      <memberdef kind="function" id="d3/dae/classMD_1_1FormulaSvc_1a4e87e2c4768b04a786b825e2d2802444" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d9/daa/classEL_1_1StatusCode" kindref="compound">EL::StatusCode</ref></type>
        <definition>virtual EL::StatusCode MD::FormulaSvc::changeInput</definition>
        <argsstring>(bool firstFile)</argsstring>
        <name>changeInput</name>
        <reimplements refid="de/ddb/classEL_1_1Algorithm_1a555bf98d9d040bd8cca3cb55473fac0a">changeInput</reimplements>
        <param>
          <type>bool</type>
          <declname>firstFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: do all changes to work with a new input file, e.g. set new branch addresses. if firstFile is set, this method is called just before init() is called guarantee: basic failures: algorithm dependent </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/FormulaSvc.h" line="105"/>
      </memberdef>
      <memberdef kind="function" id="d3/dae/classMD_1_1FormulaSvc_1abc41713a8237a446d6d709849c3f83f0" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d9/daa/classEL_1_1StatusCode" kindref="compound">EL::StatusCode</ref></type>
        <definition>virtual EL::StatusCode MD::FormulaSvc::execute</definition>
        <argsstring>()</argsstring>
        <name>execute</name>
        <reimplements refid="de/ddb/classEL_1_1Algorithm_1a2ca11106132eab43a10bba3be427ead8">execute</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: process the next event guarantee: basic failures: algorithm dependent rationale: the virtual part of Algorithm::process </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/FormulaSvc.h" line="113"/>
      </memberdef>
      <memberdef kind="function" id="d3/dae/classMD_1_1FormulaSvc_1adfa84927536d5982cdffad7793406be0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MD::FormulaSvc::ClassDef</definition>
        <argsstring>(FormulaSvc, 1)</argsstring>
        <name>ClassDef</name>
        <reimplements refid="de/ddb/classEL_1_1Algorithm_1aaaf7e4b47c721a094449edc60a2ffe88">ClassDef</reimplements>
        <param>
          <type><ref refid="d3/dae/classMD_1_1FormulaSvc" kindref="compound">FormulaSvc</ref></type>
        </param>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/FormulaSvc.h" line="129"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="6974">
        <label>EL::Algorithm</label>
        <link refid="de/ddb/classEL_1_1Algorithm"/>
      </node>
      <node id="6973">
        <label>MD::FormulaSvc</label>
        <link refid="d3/dae/classMD_1_1FormulaSvc"/>
        <childnode refid="6974" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6976">
        <label>EL::Algorithm</label>
        <link refid="de/ddb/classEL_1_1Algorithm"/>
        <childnode refid="6977" relation="usage">
          <edgelabel>m_wk</edgelabel>
        </childnode>
      </node>
      <node id="6977">
        <label>EL::Worker</label>
        <link refid="da/d12/classEL_1_1Worker"/>
        <childnode refid="6978" relation="usage">
          <edgelabel>m_metaData</edgelabel>
        </childnode>
      </node>
      <node id="6978">
        <label>SH::MetaObject</label>
        <link refid="db/d3a/classSH_1_1MetaObject"/>
      </node>
      <node id="6975">
        <label>MD::FormulaSvc</label>
        <link refid="d3/dae/classMD_1_1FormulaSvc"/>
        <childnode refid="6976" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/FormulaSvc.h" line="50" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MultiDraw/MultiDraw/FormulaSvc.h" bodystart="49" bodyend="130"/>
    <listofallmembers>
      <member refid="d3/dae/classMD_1_1FormulaSvc_1ad126354549319787033ae2666a30044d" prot="public" virt="non-virtual"><scope>MD::FormulaSvc</scope><name>addForm</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1abb182dee6741786ce59ddbd8a8fc4cc0" prot="public" virt="non-virtual"><scope>MD::FormulaSvc</scope><name>Algorithm</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1a9e2072bd4fdda18ebc86f847b691d9b9" prot="public" virt="non-virtual"><scope>MD::FormulaSvc</scope><name>book</name></member>
      <member refid="d3/dae/classMD_1_1FormulaSvc_1a4e87e2c4768b04a786b825e2d2802444" prot="private" virt="virtual"><scope>MD::FormulaSvc</scope><name>changeInput</name></member>
      <member refid="d3/dae/classMD_1_1FormulaSvc_1adfa84927536d5982cdffad7793406be0" prot="private" virt="non-virtual"><scope>MD::FormulaSvc</scope><name>ClassDef</name></member>
      <member refid="d3/dae/classMD_1_1FormulaSvc_1abc41713a8237a446d6d709849c3f83f0" prot="private" virt="virtual"><scope>MD::FormulaSvc</scope><name>execute</name></member>
      <member refid="d3/dae/classMD_1_1FormulaSvc_1a2f423d037aa6f89635eb93f920771177" prot="public" virt="non-virtual"><scope>MD::FormulaSvc</scope><name>FormulaSvc</name></member>
      <member refid="d3/dae/classMD_1_1FormulaSvc_1a404ad8ae72f8b8238ecf67682f563bad" prot="private" virt="virtual"><scope>MD::FormulaSvc</scope><name>GetName</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1a03872c24f8a637ba069b61d847ad557e" prot="public" virt="non-virtual"><scope>MD::FormulaSvc</scope><name>hist</name></member>
      <member refid="d3/dae/classMD_1_1FormulaSvc_1abb6e6db704d2c19d03b1334b7cf6c476" prot="private" virt="non-virtual"><scope>MD::FormulaSvc</scope><name>m_tree</name></member>
      <member refid="d3/dae/classMD_1_1FormulaSvc_1a2536f50b264fa10537b4cf5c4af65171" prot="private" virt="non-virtual"><scope>MD::FormulaSvc</scope><name>m_vars</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1a468b0314089506f2c36445cfc84f673b" prot="public" virt="non-virtual"><scope>MD::FormulaSvc</scope><name>msg</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1a6d3345f2effc1ea5b8add736df764ca7" prot="public" virt="non-virtual"><scope>MD::FormulaSvc</scope><name>msg</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1ad89c787f00a88c7b51a23a4a397f5c05" prot="public" virt="non-virtual"><scope>MD::FormulaSvc</scope><name>msgLvl</name></member>
      <member refid="d3/dae/classMD_1_1FormulaSvc_1adc5d926889c78825cadf6825bdac199f" prot="public" virt="non-virtual"><scope>MD::FormulaSvc</scope><name>name</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1a767c1725616f14d347b79002d755bf55" prot="public" virt="non-virtual"><scope>MD::FormulaSvc</scope><name>setMsgLevel</name></member>
      <member refid="d3/dae/classMD_1_1FormulaSvc_1aa66461bb4b0b8822bd7a15b81fdc0c75" prot="public" virt="non-virtual"><scope>MD::FormulaSvc</scope><name>testInvariant</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1a36e05186cb50cc0e5929121d3f6b6053" prot="public" virt="non-virtual"><scope>MD::FormulaSvc</scope><name>wk</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1a6d787a867dbe55af8241032c7b4aabf4" prot="public" virt="non-virtual"><scope>MD::FormulaSvc</scope><name>~Algorithm</name></member>
      <member refid="d3/dae/classMD_1_1FormulaSvc_1a3f712f95f7fb1e42e90f13b91de23473" prot="public" virt="non-virtual"><scope>MD::FormulaSvc</scope><name>~FormulaSvc</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
