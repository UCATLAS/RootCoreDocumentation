<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d3/d5a/UnitTestTool2_8cxx" kind="file">
    <compoundname>UnitTestTool2.cxx</compoundname>
    <includes refid="da/d62/UnitTestTool2_8h" local="no">AsgExampleTools/UnitTestTool2.h</includes>
    <includes refid="d6/d84/UnitTestTool1_8h" local="no">AsgExampleTools/UnitTestTool1.h</includes>
    <incdepgraph>
      <node id="3613">
        <label>list</label>
      </node>
      <node id="3612">
        <label>atomic</label>
      </node>
      <node id="3602">
        <label>AsgTools/IAsgTool.h</label>
        <link refid="df/dd4/IAsgTool_8h_source"/>
        <childnode refid="3603" relation="include">
        </childnode>
        <childnode refid="3601" relation="include">
        </childnode>
        <childnode refid="3604" relation="include">
        </childnode>
        <childnode refid="3605" relation="include">
        </childnode>
      </node>
      <node id="3605">
        <label>GaudiKernel/IAlgTool.h</label>
      </node>
      <node id="3609">
        <label>AsgTools/Deprecated.h</label>
        <link refid="d4/d77/AsgTools_2AsgTools_2Deprecated_8h_source"/>
      </node>
      <node id="3617">
        <label>AsgExampleTools/UnitTestTool1.h</label>
        <link refid="d6/d84/UnitTestTool1_8h_source"/>
        <childnode refid="3600" relation="include">
        </childnode>
        <childnode refid="3618" relation="include">
        </childnode>
      </node>
      <node id="3606">
        <label>AsgTools/MsgLevel.h</label>
        <link refid="de/d80/MsgLevel_8h"/>
        <childnode refid="3603" relation="include">
        </childnode>
        <childnode refid="3601" relation="include">
        </childnode>
        <childnode refid="3607" relation="include">
        </childnode>
      </node>
      <node id="3601">
        <label>AsgTools/AsgToolsConf.h</label>
        <link refid="df/db7/AsgToolsConf_8h_source"/>
      </node>
      <node id="3603">
        <label>string</label>
      </node>
      <node id="3616">
        <label>AsgExampleTools/IUnitTestTool2.h</label>
        <link refid="dc/d17/IUnitTestTool2_8h_source"/>
        <childnode refid="3602" relation="include">
        </childnode>
      </node>
      <node id="3614">
        <label>map</label>
      </node>
      <node id="3599">
        <label>AsgTools/AnaToolHandle.h</label>
        <link refid="de/dc4/AnaToolHandle_8h_source"/>
        <childnode refid="3600" relation="include">
        </childnode>
        <childnode refid="3609" relation="include">
        </childnode>
        <childnode refid="3610" relation="include">
        </childnode>
        <childnode refid="3612" relation="include">
        </childnode>
        <childnode refid="3613" relation="include">
        </childnode>
        <childnode refid="3614" relation="include">
        </childnode>
        <childnode refid="3615" relation="include">
        </childnode>
      </node>
      <node id="3598">
        <label>AsgExampleTools/UnitTestTool2.h</label>
        <link refid="da/d62/UnitTestTool2_8h_source"/>
        <childnode refid="3599" relation="include">
        </childnode>
        <childnode refid="3600" relation="include">
        </childnode>
        <childnode refid="3616" relation="include">
        </childnode>
      </node>
      <node id="3607">
        <label>GaudiKernel/IMessageSvc.h</label>
      </node>
      <node id="3597">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgExampleTools/Root/UnitTestTool2.cxx</label>
        <link refid="UnitTestTool2.cxx"/>
        <childnode refid="3598" relation="include">
        </childnode>
        <childnode refid="3617" relation="include">
        </childnode>
      </node>
      <node id="3611">
        <label>GaudiKernel/ToolHandle.h</label>
      </node>
      <node id="3618">
        <label>AsgExampleTools/IUnitTestTool1.h</label>
        <link refid="d1/d21/IUnitTestTool1_8h_source"/>
        <childnode refid="3602" relation="include">
        </childnode>
      </node>
      <node id="3610">
        <label>AsgTools/ToolHandle.h</label>
        <link refid="de/d2d/ToolHandle_8h_source"/>
        <childnode refid="3601" relation="include">
        </childnode>
        <childnode refid="3611" relation="include">
        </childnode>
      </node>
      <node id="3604">
        <label>AsgTools/AsgToolMacros.h</label>
        <link refid="d1/d68/AsgToolMacros_8h_source"/>
      </node>
      <node id="3615">
        <label>mutex</label>
      </node>
      <node id="3600">
        <label>AsgTools/AsgTool.h</label>
        <link refid="d4/d29/AsgTool_8h_source"/>
        <childnode refid="3601" relation="include">
        </childnode>
        <childnode refid="3602" relation="include">
        </childnode>
        <childnode refid="3606" relation="include">
        </childnode>
        <childnode refid="3608" relation="include">
        </childnode>
      </node>
      <node id="3608">
        <label>AsgTools/SetProperty.h</label>
        <link refid="df/db0/SetProperty_8h_source"/>
      </node>
    </incdepgraph>
    <innernamespace refid="d1/d56/namespaceasg">asg</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>Iowa<sp/>State<sp/>University<sp/>2016.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>Nils<sp/>Krumnack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>(See<sp/>accompanying<sp/>file<sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Please<sp/>feel<sp/>free<sp/>to<sp/>contact<sp/>me<sp/>(nils.erik.krumnack@cern.ch)<sp/>for<sp/>bug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>reports,<sp/>feature<sp/>suggestions,<sp/>praise<sp/>and<sp/>complaints.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AsgExampleTools/UnitTestTool2.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AsgExampleTools/UnitTestTool1.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>method<sp/>implementations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">asg</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><ref refid="d1/d19/structasg_1_1UnitTestTool2_1a4cf63d859d5e576c4a7c83490baea1eb" kindref="member" tooltip="standard constructor">UnitTestTool2 ::</ref></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><ref refid="d1/d19/structasg_1_1UnitTestTool2_1a4cf63d859d5e576c4a7c83490baea1eb" kindref="member" tooltip="standard constructor">  UnitTestTool2</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>val_name)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>AsgTool<sp/>(val_name),</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_regPublicHandle<sp/>(</highlight><highlight class="stringliteral">&quot;regPublicHandle&quot;</highlight><highlight class="normal">,<sp/>nullptr),</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_regPrivateHandle<sp/>(</highlight><highlight class="stringliteral">&quot;regPrivateHandle&quot;</highlight><highlight class="normal">,<sp/>this),</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_anaPublicHandle<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1/anaPublicHandle&quot;</highlight><highlight class="normal">,<sp/>nullptr),</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_anaPrivateHandle<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1/anaPrivateHandle&quot;</highlight><highlight class="normal">,<sp/>this)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>declareProperty<sp/>(</highlight><highlight class="stringliteral">&quot;allowEmpty&quot;</highlight><highlight class="normal">,<sp/>m_allowEmpty);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>declareProperty<sp/>(</highlight><highlight class="stringliteral">&quot;regPublicHandle&quot;</highlight><highlight class="normal">,<sp/>m_regPublicHandle);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>declareProperty<sp/>(</highlight><highlight class="stringliteral">&quot;regPrivateHandle&quot;</highlight><highlight class="normal">,<sp/>m_regPrivateHandle);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>m_anaPublicHandle.declarePropertyFor<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;anaPublicHandle&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>m_anaPrivateHandle.declarePropertyFor<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;anaPrivateHandle&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>StatusCode<sp/><ref refid="d1/d19/structasg_1_1UnitTestTool2_1ae114c998925a1c758bae28da613c23e6" kindref="member">UnitTestTool2 ::</ref></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><ref refid="d1/d19/structasg_1_1UnitTestTool2_1ae114c998925a1c758bae28da613c23e6" kindref="member">  initialize</ref><sp/>()</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>m_anaPublicHandle.setAllowEmpty<sp/>(m_allowEmpty);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>m_anaPrivateHandle.setAllowEmpty<sp/>(m_allowEmpty);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>m_wasUserConfiguredPublic<sp/>=<sp/>m_anaPublicHandle.isUserConfigured();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK<sp/>(m_anaPublicHandle.setProperty<sp/>(</highlight><highlight class="stringliteral">&quot;propertyInt&quot;</highlight><highlight class="normal">,<sp/>111));</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK<sp/>(m_anaPublicHandle.initialize<sp/>());</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>m_wasUserConfiguredPrivate<sp/>=<sp/>m_anaPrivateHandle.isUserConfigured();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK<sp/>(m_anaPrivateHandle.setProperty<sp/>(</highlight><highlight class="stringliteral">&quot;propertyInt&quot;</highlight><highlight class="normal">,<sp/>222));</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK<sp/>(m_anaPrivateHandle.initialize<sp/>());</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d1/d19/structasg_1_1UnitTestTool2_1a24f6baf3133d29fcafc6db4cff64fb67" kindref="member" tooltip="whether the given ToolHandle is empty">UnitTestTool2 ::</ref></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><ref refid="d1/d19/structasg_1_1UnitTestTool2_1a24f6baf3133d29fcafc6db4cff64fb67" kindref="member" tooltip="whether the given ToolHandle is empty">  toolHandleEmpty</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>handleName)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="64"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(handleName<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;regPublicHandle&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_regPublicHandle.empty();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(handleName<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;regPrivateHandle&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_regPrivateHandle.empty();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(handleName<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;anaPublicHandle&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_anaPublicHandle.empty();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(handleName<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;anaPrivateHandle&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_anaPrivateHandle.empty();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error<sp/>(</highlight><highlight class="stringliteral">&quot;unknown<sp/>handle:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>handleName);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IUnitTestTool1<sp/>*<ref refid="d1/d19/structasg_1_1UnitTestTool2_1aa1fc73e093de282ba5c097f597f7312e" kindref="member" tooltip="get the tool from the regular ToolHandle">UnitTestTool2 ::</ref></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><ref refid="d1/d19/structasg_1_1UnitTestTool2_1aa1fc73e093de282ba5c097f597f7312e" kindref="member" tooltip="get the tool from the regular ToolHandle">  getToolHandle</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>handleName)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="80"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(handleName<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;regPublicHandle&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;*m_regPublicHandle;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(handleName<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;regPrivateHandle&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;*m_regPrivateHandle;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(handleName<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;anaPublicHandle&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;*m_anaPublicHandle;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(handleName<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;anaPrivateHandle&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;*m_anaPrivateHandle;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error<sp/>(</highlight><highlight class="stringliteral">&quot;unknown<sp/>handle:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>handleName);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>StatusCode<sp/><ref refid="d1/d19/structasg_1_1UnitTestTool2_1a06ce2cbcd2c5ce4eaea8d16dd6243d1d" kindref="member" tooltip="call retrieve on the regular ToolHandle">UnitTestTool2 ::</ref></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><ref refid="d1/d19/structasg_1_1UnitTestTool2_1a06ce2cbcd2c5ce4eaea8d16dd6243d1d" kindref="member" tooltip="call retrieve on the regular ToolHandle">  retrieveToolHandle</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>handleName)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="96"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(handleName<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;regPublicHandle&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_regPublicHandle.retrieve<sp/>();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(handleName<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;regPrivateHandle&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_regPrivateHandle.retrieve<sp/>();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error<sp/>(</highlight><highlight class="stringliteral">&quot;unknown<sp/>handle:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>handleName);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d1/d19/structasg_1_1UnitTestTool2_1a8a19e9aa34708e06cf0ca61bdd219594" kindref="member" tooltip="whether the AnaToolHandle was user configured">UnitTestTool2 ::</ref></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><ref refid="d1/d19/structasg_1_1UnitTestTool2_1a8a19e9aa34708e06cf0ca61bdd219594" kindref="member" tooltip="whether the AnaToolHandle was user configured">  wasUserConfigured</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>handleName)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="108"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(handleName<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;anaPublicHandle&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_wasUserConfiguredPublic;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(handleName<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;anaPrivateHandle&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_wasUserConfiguredPrivate;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error<sp/>(</highlight><highlight class="stringliteral">&quot;unknown<sp/>handle:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>handleName);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgExampleTools/Root/UnitTestTool2.cxx"/>
  </compounddef>
</doxygen>
