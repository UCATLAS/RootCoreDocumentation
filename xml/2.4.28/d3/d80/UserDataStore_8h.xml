<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d3/d80/UserDataStore_8h" kind="file">
    <compoundname>UserDataStore.h</compoundname>
    <includes local="yes">GaudiKernel/StatusCode.h</includes>
    <includes local="yes">AthenaKernel/IAthenaBarCode.h</includes>
    <includes local="yes">GaudiKernel/MsgStream.h</includes>
    <includes local="no">string</includes>
    <includes local="no">map</includes>
    <includes refid="d7/d98/UDSLabelHashTable_8h" local="yes">AthContainers/tools/UDSLabelHashTable.h</includes>
    <includes local="yes">SGTools/CLASS_DEF.h</includes>
    <includes local="yes">boost/any.hpp</includes>
    <includedby refid="db/de9/AthContainersDict_8h" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h</includedby>
    <includedby refid="dd/d21/UserDataStore_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/UserDataStore.cxx</includedby>
    <incdepgraph>
      <node id="71143">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/UserDataStore.h</label>
        <link refid="UserDataStore.h"/>
        <childnode refid="71144" relation="include">
        </childnode>
        <childnode refid="71145" relation="include">
        </childnode>
        <childnode refid="71146" relation="include">
        </childnode>
        <childnode refid="71147" relation="include">
        </childnode>
        <childnode refid="71148" relation="include">
        </childnode>
        <childnode refid="71149" relation="include">
        </childnode>
        <childnode refid="71152" relation="include">
        </childnode>
        <childnode refid="71153" relation="include">
        </childnode>
      </node>
      <node id="71151">
        <label>stdint.h</label>
      </node>
      <node id="71147">
        <label>string</label>
      </node>
      <node id="71148">
        <label>map</label>
      </node>
      <node id="71150">
        <label>SGTools/crc64.h</label>
      </node>
      <node id="71153">
        <label>boost/any.hpp</label>
      </node>
      <node id="71145">
        <label>AthenaKernel/IAthenaBarCode.h</label>
      </node>
      <node id="71152">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="71146">
        <label>GaudiKernel/MsgStream.h</label>
      </node>
      <node id="71149">
        <label>AthContainers/tools/UDSLabelHashTable.h</label>
        <link refid="d7/d98/UDSLabelHashTable_8h_source"/>
        <childnode refid="71150" relation="include">
        </childnode>
        <childnode refid="71148" relation="include">
        </childnode>
        <childnode refid="71147" relation="include">
        </childnode>
        <childnode refid="71146" relation="include">
        </childnode>
        <childnode refid="71151" relation="include">
        </childnode>
      </node>
      <node id="71144">
        <label>GaudiKernel/StatusCode.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="71154">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/UserDataStore.h</label>
        <link refid="UserDataStore.h"/>
        <childnode refid="71155" relation="include">
        </childnode>
      </node>
      <node id="71155">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AthContainersDict.h</label>
        <link refid="db/de9/AthContainersDict_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="de/d35/classUserDataStore" prot="public">UserDataStore</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//Dear<sp/>emacs,<sp/>this<sp/>is<sp/>-*-c++-*-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ATHCONTAINERS_USERDATASTORE_H</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ATHCONTAINERS_USERDATASTORE_H</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>XAOD_STANDALONE</highlight></codeline>
<codeline lineno="6"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="20"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="de/d35/classUserDataStore" kindref="compound">UserDataStore</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><ref refid="de/d35/classUserDataStore_1aa50dc180026a5c5cdcc11000b144501b" kindref="member" tooltip="Default constructor.">UserDataStore</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>UserDataStore;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GaudiKernel/StatusCode.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;AthenaKernel/IAthenaBarCode.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GaudiKernel/MsgStream.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&lt;ext/hash_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&lt;boost/unordered_map.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;AthContainers/tools/UDSLabelHashTable.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SGTools/CLASS_DEF.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;boost/any.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="de/d35/classUserDataStore" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="de/d35/classUserDataStore" kindref="compound">UserDataStore</ref><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">UserDataStoreCnv_p1;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><ref refid="de/d35/classUserDataStore_1aa50dc180026a5c5cdcc11000b144501b" kindref="member" tooltip="Default constructor.">UserDataStore</ref>();<sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>StatusCode<sp/><ref refid="de/d35/classUserDataStore_1a9c5195dbb8d90f148b822952c79a86cf" kindref="member" tooltip="Record method with template payload.">record</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IAthenaBarCode&amp;<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/def/classT" kindref="compound">T</ref>&amp;<sp/>value);<sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>StatusCode<sp/><ref refid="de/d35/classUserDataStore_1a65de4910a6004813c83bdc0f861cd5ef" kindref="member" tooltip="Retrieve method with template payload.">retrieve</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IAthenaBarCode&amp;<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label,<sp/><ref refid="d1/def/classT" kindref="compound">T</ref>&amp;<sp/>value)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d35/classUserDataStore_1ae91cf430ed8cae06915136ad11dbbee6" kindref="member" tooltip="Contains method for element decorations.">contains</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IAthenaBarCode&amp;<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>std::vector&lt;const<sp/>std::string*&gt;<sp/><ref refid="de/d35/classUserDataStore_1a2af72eeeff767a32f740a0989ec9044e" kindref="member" tooltip="Table-of-contents method.">getLabels</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AthenaBarCode_t&amp;<sp/>barcode)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>StatusCode<sp/><ref refid="de/d35/classUserDataStore_1ae0d27103504b5cd13b98caac644ce284" kindref="member" tooltip="Record method with boost::any as payload.">recordAny</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IAthenaBarCode&amp;<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::any&amp;<sp/>value);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>StatusCode<sp/><ref refid="de/d35/classUserDataStore_1acc9d68c8802d9a08b9323633a8713b9a" kindref="member" tooltip="Retrieve method with boost::any as payload.">retrieveAny</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IAthenaBarCode&amp;<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::any*&amp;<sp/>value)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/d35/classUserDataStore_1aea8fdf3d142596f12a28ce9937d0fd27" kindref="member" tooltip="Method to set the AthenaBarCode of this event (called by UserDataSvc).">setEventABC</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AthenaBarCode_t&amp;<sp/>eventABC);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="de/d35/classUserDataStore_1a112ecacf3bdbba92155e209972f34282" refkind="member"><highlight class="normal"><sp/><sp/>AthenaBarCode_t<sp/><ref refid="de/d35/classUserDataStore_1a112ecacf3bdbba92155e209972f34282" kindref="member" tooltip="Method to get the AthenaBarCode of this event (called by UserDataSvc).">getEventABC</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_eventABC;<sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>NotFoundTypes<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLGOOD=0,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>BARCODE,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>LABEL</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:<sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>experimental<sp/>use<sp/>of<sp/>hash-maps<sp/>instead<sp/>of<sp/>std::map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>class<sp/>abcHashFcn<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>public:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>size_t<sp/>operator()(const<sp/>AthenaBarCode_t<sp/>abc)<sp/>const<sp/>{<sp/>return<sp/>((abc<sp/>&amp;<sp/>0xFFFFFFFF)&gt;&gt;6);<sp/>}<sp/>//Extract<sp/>the<sp/>26<sp/>counter-bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::any<sp/>payload_t;<sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>UDSLabelHashTable::hash_t<sp/>index_t;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;AthenaBarCode_t,std::map&lt;index_t,<sp/>payload_t<sp/>&gt;<sp/>&gt;<sp/>mapmap_t;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//typedef<sp/>__gnu_cxx::hash_map&lt;AthenaBarCode_t,std::map&lt;index_t,<sp/>payload_t<sp/>&gt;,<sp/>abcHashFcn<sp/>&gt;<sp/>mapmap_t;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//typedef<sp/>boost::unordered_map&lt;AthenaBarCode_t,std::map&lt;index_t,<sp/>payload_t<sp/>&gt;,<sp/>abcHashFcn<sp/>&gt;<sp/>mapmap_t;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;index_t,<sp/>payload_t<sp/>&gt;::iterator<sp/>iterator;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;index_t,<sp/>payload_t<sp/>&gt;::const_iterator<sp/>const_iterator;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>mapmap_t<sp/>m_data;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//find<sp/>a<sp/>label<sp/>(const<sp/>version)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>const_iterator<sp/>find(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AthenaBarCode_t&amp;<sp/>barcode,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Update<sp/>the<sp/>cached<sp/>map-iterator<sp/>m_lastIt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//void<sp/>updateIt(const<sp/>AthenaBarCode_t&amp;<sp/>barcode);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>const_iterator<sp/>m_notFoundIt;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;index_t,<sp/>payload_t<sp/>&gt;<sp/>m_defaultEntry;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><ref refid="d6/daa/classUDSLabelHashTable" kindref="compound" tooltip="Helper class for UserDataStore Provides the hash function and keeps a map&amp;lt;hash...">UDSLabelHashTable</ref><sp/>m_labelTable;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/><sp/>mapmap_t::const_iterator<sp/>m_lastIt;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/><sp/>mapmap_t::iterator<sp/>m_lastIt_nc;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>AthenaBarCode_t<sp/>m_eventABC;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>MsgStream<sp/>m_msg;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>NotFoundTypes<sp/>m_whyNotFound;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal">};</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal">CLASS_DEF(<sp/><ref refid="de/d35/classUserDataStore" kindref="compound">UserDataStore</ref><sp/>,<sp/>51567825<sp/>,<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal">template&lt;typename<sp/><ref refid="d1/def/classT" kindref="compound">T</ref>&gt;</highlight></codeline>
<codeline lineno="186" refid="de/d35/classUserDataStore_1a65de4910a6004813c83bdc0f861cd5ef" refkind="member"><highlight class="normal">StatusCode<sp/><ref refid="de/d35/classUserDataStore" kindref="compound">UserDataStore</ref>::retrieve(const<sp/>IAthenaBarCode&amp;<sp/>obj,<sp/>const<sp/>std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>label,<sp/><ref refid="d1/def/classT" kindref="compound">T</ref>&amp;<sp/>value)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::any*<sp/>aValue=0;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>StatusCode<sp/>sc=this-&gt;retrieveAny(obj,label,<sp/>aValue);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sc.isFailure())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sc;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(<ref refid="d1/def/classT" kindref="compound">T</ref>)<sp/>!=<sp/>aValue-&gt;type())<sp/>{<sp/></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>m_msg<sp/>&lt;&lt;<sp/>MSG::ERROR<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Typeid<sp/>mismatch<sp/>while<sp/>retrieving<sp/>user<sp/>data<sp/>with<sp/>label<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>label<sp/>&lt;&lt;<sp/>endreq;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/def/classT" kindref="compound">T</ref>*<sp/>decoPtr=boost::any_cast&lt;<ref refid="d1/def/classT" kindref="compound">T</ref>&gt;(aValue);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>value=*decoPtr;<sp/></highlight><highlight class="comment">//Deep<sp/>copy!<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="201" refid="de/d35/classUserDataStore_1a9c5195dbb8d90f148b822952c79a86cf" refkind="member"><highlight class="normal">StatusCode<sp/><ref refid="de/d35/classUserDataStore_1a9c5195dbb8d90f148b822952c79a86cf" kindref="member" tooltip="Record method with template payload.">UserDataStore::record</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IAthenaBarCode&amp;<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/def/classT" kindref="compound">T</ref>&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>boost::any<sp/>aValue(value);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="de/d35/classUserDataStore_1ae0d27103504b5cd13b98caac644ce284" kindref="member" tooltip="Record method with boost::any as payload.">recordAny</ref>(obj,label,<sp/>aValue);</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>not<sp/>XAOD_STANDALONE</highlight></codeline>
<codeline lineno="207"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>not<sp/>ATHCONTAINERS_USERDATASTORE_H</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/UserDataStore.h"/>
  </compounddef>
</doxygen>
