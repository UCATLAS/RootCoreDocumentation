<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d3/d72/semilCorr_8cxx" kind="file">
    <compoundname>semilCorr.cxx</compoundname>
    <includes refid="d6/ddd/semilCorr_8h" local="yes">SemileptonicCorr/semilCorr.h</includes>
    <incdepgraph>
      <node id="265200">
        <label>SemileptonicCorr/semilCorr.h</label>
        <link refid="d6/ddd/semilCorr_8h_source"/>
        <childnode refid="265201" relation="include">
        </childnode>
        <childnode refid="265202" relation="include">
        </childnode>
        <childnode refid="265203" relation="include">
        </childnode>
        <childnode refid="265204" relation="include">
        </childnode>
        <childnode refid="265205" relation="include">
        </childnode>
      </node>
      <node id="265204">
        <label>TLorentzVector.h</label>
      </node>
      <node id="265205">
        <label>vector</label>
      </node>
      <node id="265202">
        <label>TFile.h</label>
      </node>
      <node id="265203">
        <label>iostream</label>
      </node>
      <node id="265201">
        <label>TH2F.h</label>
      </node>
      <node id="265199">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SemileptonicCorr/Root/semilCorr.cxx</label>
        <link refid="semilCorr.cxx"/>
        <childnode refid="265200" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;SemileptonicCorr/semilCorr.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal">semilCorr::semilCorr(TString<sp/>fIn,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>suffix,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>DebugIn){</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/>Debug<sp/>=<sp/>DebugIn;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/>f<sp/>=<sp/>TFile::Open(fIn);</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/>etas.push_back(0);</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/>etas.push_back(0.8);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/>etas.push_back(1.2);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/>etas.push_back(1.7);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/>etas.push_back(2.1);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>etas.push_back(2.5);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>vector&lt;string&gt;<sp/>etastr;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>etastr.push_back(</highlight><highlight class="stringliteral">&quot;_e0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>etastr.push_back(</highlight><highlight class="stringliteral">&quot;_e1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>etastr.push_back(</highlight><highlight class="stringliteral">&quot;_e2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>etastr.push_back(</highlight><highlight class="stringliteral">&quot;_e3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>etastr.push_back(</highlight><highlight class="stringliteral">&quot;_e4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>vector&lt;string&gt;<sp/>prefix;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>prefix.push_back(</highlight><highlight class="stringliteral">&quot;corr&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>prefix.push_back(</highlight><highlight class="stringliteral">&quot;tagSyst&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>prefix.push_back(</highlight><highlight class="stringliteral">&quot;fragSyst&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>prefix.push_back(</highlight><highlight class="stringliteral">&quot;decaySyst&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>prefix.push_back(</highlight><highlight class="stringliteral">&quot;msSyst&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>prefix.push_back(</highlight><highlight class="stringliteral">&quot;idSyst&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>prefix.push_back(</highlight><highlight class="stringliteral">&quot;decayRewSyst&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>prefix.push_back(</highlight><highlight class="stringliteral">&quot;muRewSyst&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>prefix.push_back(</highlight><highlight class="stringliteral">&quot;corrIncl&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j&lt;prefix.size();<sp/>j++){</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;TH1F*&gt;<sp/>corr;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i&lt;etastr.size();<sp/>i++){</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>corr.push_back((TH1F*)<sp/>f-&gt;Get((prefix[j]+etastr[i]).c_str()));<sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>m_histos.push_back(corr);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">semilCorr::~semilCorr(){</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i&lt;m_histos.size();i++){</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j&lt;m_histos[i].size();j++){</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_histos[i][j];<sp/></highlight><highlight class="comment">//<sp/>TH2F&apos;s<sp/>that<sp/>store<sp/>response<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>f-&gt;Close();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>f;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>semilCorr::getSemilCorrToIncl(TLorentzVector<sp/>jet,<sp/>TLorentzVector<sp/>mu)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getSemilCorrToIncl(jet,mu,m_histos[0]);</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>semilCorr::getBjetCorrToIncl(TLorentzVector<sp/>jet,<sp/>TLorentzVector<sp/>mu)</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getSemilCorrToIncl(jet,mu,m_histos[8]);</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>semilCorr::getSemilCorrToIncl(TLorentzVector<sp/>jet,<sp/>TLorentzVector<sp/>mu,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;TH1F*&gt;<sp/>histos)</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>TLorentzVector<sp/>jetmu<sp/>=<sp/>jet+mu;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//correction<sp/>to<sp/>get<sp/>things<sp/>to<sp/>1<sp/>(or<sp/>to<sp/>pttruth),<sp/>not<sp/>to<sp/>reference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>corr<sp/>=<sp/>getResponse(jetmu.Pt(),<sp/>jetmu.Eta(),<sp/>histos);<sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>corr;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">vector&lt;int&gt;<sp/>semilCorr::getHistoIndeces(semilCorr::Systematics<sp/>syst)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>vector&lt;int&gt;<sp/>indices;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(syst<sp/>==<sp/>semilCorr::ALL){</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>indices.push_back(((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)semilCorr::TAGGINGWEIGHT));</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>indices.push_back(((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)semilCorr::FRAGMENTATION));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>indices.push_back(((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)semilCorr::DECAY));</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>indices.push_back(((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)semilCorr::MSRESO));</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>indices.push_back(((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)semilCorr::IDRESO));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>indices.push_back(((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)semilCorr::DECAYREW));</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>indices.push_back(((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)semilCorr::MUONSPECTRUM));</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>indices.push_back((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>syst);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>indices;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>semilCorr::getSemilCorrToInclSyst(TLorentzVector<sp/>jet,<sp/>TLorentzVector<sp/>mu,<sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>semilCorr::Systematics<sp/>syst)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//vector&lt;int&gt;<sp/>indeces<sp/>=<sp/>getHistoIndeces(up,syst);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>vector&lt;int&gt;<sp/>indeces1<sp/>=<sp/>getHistoIndeces(syst);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>systr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i&lt;indeces1.size();<sp/>i++){</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>systr<sp/>+=<sp/>pow(getSemilCorrToIncl(jet,mu,m_histos[indeces1[i]]),2);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(systr);</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>semilCorr::getResponse(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pt,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>eta,<sp/>vector&lt;TH1F*&gt;<sp/>h)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>usePt<sp/>=<sp/>pt;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>histbin<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i&lt;etas.size()-1;<sp/>i++){</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fabs(eta)&gt;=etas[i]<sp/>&amp;&amp;<sp/>fabs(eta)&lt;etas[i+1])</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>histbin<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(histbin<sp/>==<sp/>-1)<sp/>histbin<sp/>=<sp/>h.size()-1;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>min<sp/>=<sp/>h[histbin]-&gt;GetBinCenter(1);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max<sp/>=<sp/>h[histbin]-&gt;GetBinCenter(h[histbin]-&gt;GetNbinsX());</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pt&gt;max)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>usePt<sp/>=<sp/>max-0.001;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pt&lt;min)<sp/>usePt<sp/>=<sp/>min+0.001;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>h[histbin]-&gt;Interpolate(usePt);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SemileptonicCorr/Root/semilCorr.cxx"/>
  </compounddef>
</doxygen>
