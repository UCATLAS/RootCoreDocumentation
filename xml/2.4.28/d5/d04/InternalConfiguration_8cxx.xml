<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d5/d04/InternalConfiguration_8cxx" kind="file">
    <compoundname>InternalConfiguration.cxx</compoundname>
    <includes refid="d1/d40/InternalConfiguration_8h" local="no">QuickAna/InternalConfiguration.h</includes>
    <includes refid="d3/d59/Configuration_8h" local="no">QuickAna/Configuration.h</includes>
    <includes refid="d3/dac/Assert_8h" local="no">RootCoreUtils/Assert.h</includes>
    <incdepgraph>
      <node id="247897">
        <label>QuickAna/Configuration.h</label>
        <link refid="d3/d59/Configuration_8h_source"/>
        <childnode refid="247890" relation="include">
        </childnode>
        <childnode refid="247892" relation="include">
        </childnode>
        <childnode refid="247893" relation="include">
        </childnode>
        <childnode refid="247896" relation="include">
        </childnode>
      </node>
      <node id="247890">
        <label>QuickAna/Global.h</label>
        <link refid="d4/d7e/QuickAna_2QuickAna_2Global_8h_source"/>
      </node>
      <node id="247891">
        <label>QuickAna/SelectionStep.h</label>
        <link refid="d9/d76/SelectionStep_8h_source"/>
        <childnode refid="247890" relation="include">
        </childnode>
      </node>
      <node id="247892">
        <label>AsgTools/MsgLevel.h</label>
        <link refid="de/d80/MsgLevel_8h"/>
        <childnode refid="247893" relation="include">
        </childnode>
        <childnode refid="247894" relation="include">
        </childnode>
        <childnode refid="247895" relation="include">
        </childnode>
      </node>
      <node id="247894">
        <label>AsgTools/AsgToolsConf.h</label>
        <link refid="df/db7/AsgToolsConf_8h_source"/>
      </node>
      <node id="247893">
        <label>string</label>
      </node>
      <node id="247895">
        <label>GaudiKernel/IMessageSvc.h</label>
      </node>
      <node id="247889">
        <label>QuickAna/InternalConfiguration.h</label>
        <link refid="d1/d40/InternalConfiguration_8h_source"/>
        <childnode refid="247890" relation="include">
        </childnode>
        <childnode refid="247891" relation="include">
        </childnode>
        <childnode refid="247892" relation="include">
        </childnode>
        <childnode refid="247893" relation="include">
        </childnode>
        <childnode refid="247896" relation="include">
        </childnode>
      </node>
      <node id="247896">
        <label>vector</label>
      </node>
      <node id="247899">
        <label>RootCoreUtils/Global.h</label>
        <link refid="d6/d7f/RootCoreUtils_2RootCoreUtils_2Global_8h_source"/>
      </node>
      <node id="247888">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/Root/InternalConfiguration.cxx</label>
        <link refid="InternalConfiguration.cxx"/>
        <childnode refid="247889" relation="include">
        </childnode>
        <childnode refid="247897" relation="include">
        </childnode>
        <childnode refid="247898" relation="include">
        </childnode>
      </node>
      <node id="247898">
        <label>RootCoreUtils/Assert.h</label>
        <link refid="d3/dac/Assert_8h_source"/>
        <childnode refid="247899" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="d7/d63/namespaceana">ana</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>Iowa<sp/>State<sp/>University<sp/>2015.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>Nils<sp/>Krumnack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>(See<sp/>accompanying<sp/>file<sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Please<sp/>feel<sp/>free<sp/>to<sp/>contact<sp/>me<sp/>(nils.erik.krumnack@cern.ch)<sp/>for<sp/>bug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>reports,<sp/>feature<sp/>suggestions,<sp/>praise<sp/>and<sp/>complaints.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QuickAna/InternalConfiguration.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QuickAna/Configuration.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;RootCoreUtils/Assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>method<sp/>implementations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ana</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/daa/classana_1_1InternalConfiguration_1a96d2f1a4555f79e25b4f68b1a21bf0ae" kindref="member" tooltip="fetch the configuration options from the global configuration">InternalConfiguration ::</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><ref refid="db/daa/classana_1_1InternalConfiguration_1a96d2f1a4555f79e25b4f68b1a21bf0ae" kindref="member" tooltip="fetch the configuration options from the global configuration">  fetchConfiguration</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Configuration&amp;<sp/>conf)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>m_isData<sp/>=<sp/>conf.isDataFlag;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>m_isAFII<sp/>=<sp/>conf.isAFIIFlag;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>m_doingMet<sp/>=<sp/>conf.metDef<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;none&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>m_muDataFiles<sp/>=<sp/>conf.muDataFiles;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>m_msgLevel<sp/>=<sp/>MSG::Level<sp/>(conf.msgLevel);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!conf.selectionNameMET.empty())</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_selectionName[</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>(SelectionStep::MET)]<sp/>=<sp/>conf.selectionNameMET;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_selectionName[unsigned<sp/>(SelectionStep::MET)]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ana_select_met&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!conf.selectionNameOR.empty())</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_selectionName[</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>(SelectionStep::OR)]<sp/>=<sp/>conf.selectionNameOR;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_selectionName[unsigned<sp/>(SelectionStep::OR)]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ana_select_or&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!conf.selectionName.empty())</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_selectionName[</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>(SelectionStep::ANALYSIS)]<sp/>=<sp/>conf.selectionName;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_selectionName[unsigned<sp/>(SelectionStep::ANALYSIS)]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ana_select&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/daa/classana_1_1InternalConfiguration_1adcc3b9fc157fea6f8bb3c06f1839bf13" kindref="member" tooltip="whether we are running on data">InternalConfiguration ::</ref></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><ref refid="db/daa/classana_1_1InternalConfiguration_1adcc3b9fc157fea6f8bb3c06f1839bf13" kindref="member" tooltip="whether we are running on data">  isData</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="52"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_isData;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/daa/classana_1_1InternalConfiguration_1a73d9f4eacebefe3caed1070ca38d75b1" kindref="member" tooltip="whether we are running on AFII MC">InternalConfiguration ::</ref></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><ref refid="db/daa/classana_1_1InternalConfiguration_1a73d9f4eacebefe3caed1070ca38d75b1" kindref="member" tooltip="whether we are running on AFII MC">  isAFII</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="59"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_isAFII;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>MSG::Level<sp/><ref refid="db/daa/classana_1_1InternalConfiguration_1a23e353cf8c877e9070036406ce530852" kindref="member" tooltip="global message level for QuickAna internal tools">InternalConfiguration ::</ref></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><ref refid="db/daa/classana_1_1InternalConfiguration_1a23e353cf8c877e9070036406ce530852" kindref="member" tooltip="global message level for QuickAna internal tools">  msgLevel</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="66"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_msgLevel;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="db/daa/classana_1_1InternalConfiguration_1a88b6d7472f5143387d7ef85d8c2fe8e8" kindref="member" tooltip="what muon WP is the key one (for SFs)">InternalConfiguration ::</ref></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><ref refid="db/daa/classana_1_1InternalConfiguration_1a88b6d7472f5143387d7ef85d8c2fe8e8" kindref="member" tooltip="what muon WP is the key one (for SFs)">  muonWP</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="73"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_muonWP;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>std::string<sp/>InternalConfiguration<sp/>::</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>muonIsolationWP<sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="80"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_muonIsoWP;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InternalConfiguration<sp/>::</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>setMuonWP<sp/>(std::string<sp/>WP)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>m_muonWP<sp/>=<sp/>WP;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InternalConfiguration<sp/>::</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>setMuonIsolationWP<sp/>(std::string<sp/>WP)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>m_muonIsoWP=WP;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="db/daa/classana_1_1InternalConfiguration_1ad8c849ff4b1d59dd8b82a9fbd70bbf00" kindref="member" tooltip="what electron WP is the key one (for SFs)">InternalConfiguration ::</ref></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><ref refid="db/daa/classana_1_1InternalConfiguration_1ad8c849ff4b1d59dd8b82a9fbd70bbf00" kindref="member" tooltip="what electron WP is the key one (for SFs)">  electronWP</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="102"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_eleWP;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>std::string<sp/>InternalConfiguration<sp/>::</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>electronIsolationWP<sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="109"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_eleIsoWP;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InternalConfiguration<sp/>::</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>setElectronWP<sp/>(std::string<sp/>WP)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>m_eleWP=WP;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InternalConfiguration<sp/>::</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>setElectronIsolationWP<sp/>(std::string<sp/>WP)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>m_eleIsoWP=WP;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="db/daa/classana_1_1InternalConfiguration_1a32668536ef2c9def1a5881974c6cee85" kindref="member" tooltip="the names of the decorations for the different selection stages.">InternalConfiguration ::</ref></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><ref refid="db/daa/classana_1_1InternalConfiguration_1a32668536ef2c9def1a5881974c6cee85" kindref="member" tooltip="the names of the decorations for the different selection stages.">  selectionName</ref><sp/>(<ref refid="d7/d63/namespaceana_1a936d81073adf9fa0c67f3347a8350f51" kindref="member" tooltip="the different levels of selection we have">SelectionStep</ref><sp/>step)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="130"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>(step)<sp/>&gt;=<sp/><ref refid="d0/dc3/structana_1_1EnumSize_3_01SelectionStep_01_4_1a80ca47ed9929e05e104d2e00a1e852db" kindref="member" tooltip="the number of selection steps that actually have decorations on the object.">EnumSize&lt;SelectionStep&gt;::dataSize</ref>)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>empty;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>empty;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_selectionName[unsigned<sp/>(step)];</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="db/daa/classana_1_1InternalConfiguration_1a6cbfcaa470221ebc0aa7288ce49afc8a" kindref="member" tooltip="the input container name for the given object type">InternalConfiguration ::</ref></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><ref refid="db/daa/classana_1_1InternalConfiguration_1a6cbfcaa470221ebc0aa7288ce49afc8a" kindref="member" tooltip="the input container name for the given object type">  inputName</ref><sp/>(<ref refid="d7/d63/namespaceana_1ae3f743901acd68af2cd8583a1f982eee" kindref="member" tooltip="the various object types we have to deal with">ObjectType</ref><sp/>type)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="143"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_inputName[unsigned(type)];</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/daa/classana_1_1InternalConfiguration_1abbc2b2a229029b7405b2ebce90280946" kindref="member" tooltip="set the value of inputName">InternalConfiguration ::</ref></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><ref refid="db/daa/classana_1_1InternalConfiguration_1abbc2b2a229029b7405b2ebce90280946" kindref="member" tooltip="set the value of inputName">  setInputName</ref><sp/>(<ref refid="d7/d63/namespaceana_1ae3f743901acd68af2cd8583a1f982eee" kindref="member" tooltip="the various object types we have to deal with">ObjectType</ref><sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>val_inputName)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_ASSERT_SOFT<sp/>(m_inputName[</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">(type)].empty());</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>m_inputName[unsigned(type)]<sp/>=<sp/>val_inputName;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/Root/InternalConfiguration.cxx"/>
  </compounddef>
</doxygen>
