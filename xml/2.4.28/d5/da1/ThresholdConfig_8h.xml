<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d5/da1/ThresholdConfig_8h" kind="file">
    <compoundname>ThresholdConfig.h</compoundname>
    <includes refid="d1/de2/TriggerThreshold_8h" local="yes">TrigConfL1Data/TriggerThreshold.h</includes>
    <includes refid="d2/d93/CaloInfo_8h" local="yes">TrigConfL1Data/CaloInfo.h</includes>
    <includes refid="d8/db1/L1DataBaseclass_8h" local="yes">TrigConfL1Data/L1DataBaseclass.h</includes>
    <includes refid="da/d67/L1DataDef_8h" local="yes">TrigConfL1Data/L1DataDef.h</includes>
    <includedby refid="d4/d9e/ThresholdConfig_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/Root/ThresholdConfig.cxx</includedby>
    <includedby refid="d7/d46/LVL1Config_8h" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/TrigConfL1Data/LVL1Config.h</includedby>
    <includedby refid="df/dde/Menu_8h" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/TrigConfL1Data/Menu.h</includedby>
    <incdepgraph>
      <node id="311537">
        <label>TrigConfL1Data/TriggerThresholdValue.h</label>
        <link refid="dd/d1d/TriggerThresholdValue_8h_source"/>
        <childnode refid="311538" relation="include">
        </childnode>
        <childnode refid="311541" relation="include">
        </childnode>
      </node>
      <node id="311538">
        <label>TrigConfL1Data/L1DataBaseclass.h</label>
        <link refid="d8/db1/L1DataBaseclass_8h_source"/>
        <childnode refid="311539" relation="include">
        </childnode>
      </node>
      <node id="311546">
        <label>TrigConfL1Data/CaloInfo.h</label>
        <link refid="d2/d93/CaloInfo_8h_source"/>
        <childnode refid="311541" relation="include">
        </childnode>
        <childnode refid="311544" relation="include">
        </childnode>
        <childnode refid="311538" relation="include">
        </childnode>
        <childnode refid="311547" relation="include">
        </childnode>
        <childnode refid="311548" relation="include">
        </childnode>
        <childnode refid="311549" relation="include">
        </childnode>
      </node>
      <node id="311548">
        <label>TrigConfL1Data/METSigParam.h</label>
        <link refid="d3/dab/METSigParam_8h_source"/>
        <childnode refid="311541" relation="include">
        </childnode>
      </node>
      <node id="311541">
        <label>string</label>
      </node>
      <node id="311543">
        <label>map</label>
      </node>
      <node id="311539">
        <label>TrigConfL1Data/TrigConfData.h</label>
        <link refid="da/da8/TrigConfData_8h_source"/>
        <childnode refid="311540" relation="include">
        </childnode>
        <childnode refid="311541" relation="include">
        </childnode>
      </node>
      <node id="311547">
        <label>TrigConfL1Data/CaloSinCos.h</label>
        <link refid="d0/da4/CaloSinCos_8h_source"/>
        <childnode refid="311541" relation="include">
        </childnode>
        <childnode refid="311538" relation="include">
        </childnode>
      </node>
      <node id="311544">
        <label>vector</label>
      </node>
      <node id="311540">
        <label>iosfwd</label>
      </node>
      <node id="311545">
        <label>iostream</label>
      </node>
      <node id="311535">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/TrigConfL1Data/ThresholdConfig.h</label>
        <link refid="ThresholdConfig.h"/>
        <childnode refid="311536" relation="include">
        </childnode>
        <childnode refid="311546" relation="include">
        </childnode>
        <childnode refid="311538" relation="include">
        </childnode>
        <childnode refid="311542" relation="include">
        </childnode>
      </node>
      <node id="311549">
        <label>TrigConfL1Data/IsolationParam.h</label>
        <link refid="d3/d5c/IsolationParam_8h_source"/>
        <childnode refid="311538" relation="include">
        </childnode>
        <childnode refid="311541" relation="include">
        </childnode>
      </node>
      <node id="311542">
        <label>TrigConfL1Data/L1DataDef.h</label>
        <link refid="da/d67/L1DataDef_8h_source"/>
        <childnode refid="311541" relation="include">
        </childnode>
        <childnode refid="311543" relation="include">
        </childnode>
        <childnode refid="311544" relation="include">
        </childnode>
      </node>
      <node id="311536">
        <label>TrigConfL1Data/TriggerThreshold.h</label>
        <link refid="d1/de2/TriggerThreshold_8h_source"/>
        <childnode refid="311537" relation="include">
        </childnode>
        <childnode refid="311542" relation="include">
        </childnode>
        <childnode refid="311538" relation="include">
        </childnode>
        <childnode refid="311541" relation="include">
        </childnode>
        <childnode refid="311544" relation="include">
        </childnode>
        <childnode refid="311545" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="311586">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Combination.h</label>
        <link refid="dd/daf/Combination_8h_source"/>
        <childnode refid="311584" relation="include">
        </childnode>
        <childnode refid="311585" relation="include">
        </childnode>
        <childnode refid="311587" relation="include">
        </childnode>
        <childnode refid="311576" relation="include">
        </childnode>
        <childnode refid="311577" relation="include">
        </childnode>
      </node>
      <node id="311569">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CPAnalysisExamples/CPAnalysisExamples/ToolExamplesAlg.h</label>
        <link refid="d4/d75/ToolExamplesAlg_8h_source"/>
      </node>
      <node id="311587">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureContainer.h</label>
        <link refid="d5/de8/FeatureContainer_8h_source"/>
        <childnode refid="311560" relation="include">
        </childnode>
        <childnode refid="311584" relation="include">
        </childnode>
        <childnode refid="311585" relation="include">
        </childnode>
        <childnode refid="311576" relation="include">
        </childnode>
      </node>
      <node id="311565">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SUSYTools/SUSYTools/SUSYToolsDict.h</label>
        <link refid="dc/ded/SUSYToolsDict_8h_source"/>
      </node>
      <node id="311564">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SUSYTools/SUSYTools/SUSYObjDef_xAOD.h</label>
        <link refid="d0/daf/SUSYObjDef__xAOD_8h_source"/>
        <childnode refid="311565" relation="include">
        </childnode>
      </node>
      <node id="311567">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/TrigDecisionToolCore.h</label>
        <link refid="de/d03/TrigDecisionToolCore_8h_source"/>
        <childnode refid="311568" relation="include">
        </childnode>
        <childnode refid="311576" relation="include">
        </childnode>
      </node>
      <node id="311571">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigAnalysisTest/TrigAnalysisTest/ITest.h</label>
        <link refid="dd/d82/ITest_8h_source"/>
        <childnode refid="311570" relation="include">
        </childnode>
        <childnode refid="311572" relation="include">
        </childnode>
        <childnode refid="311573" relation="include">
        </childnode>
        <childnode refid="311574" relation="include">
        </childnode>
      </node>
      <node id="311579">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TriggerMatchingTool/TriggerMatchingTool/TriggerMatchingToolDict.h</label>
        <link refid="de/db3/TriggerMatchingToolDict_8h_source"/>
      </node>
      <node id="311568">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/TrigDecisionTool.h</label>
        <link refid="d7/df7/TrigDecisionTool_8h_source"/>
        <childnode refid="311569" relation="include">
        </childnode>
        <childnode refid="311570" relation="include">
        </childnode>
        <childnode refid="311571" relation="include">
        </childnode>
        <childnode refid="311575" relation="include">
        </childnode>
        <childnode refid="311576" relation="include">
        </childnode>
        <childnode refid="311577" relation="include">
        </childnode>
        <childnode refid="311580" relation="include">
        </childnode>
        <childnode refid="311581" relation="include">
        </childnode>
      </node>
      <node id="311556">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfxAOD/src/xAODConfigSvc.h</label>
        <link refid="d3/de6/xAODConfigSvc_8h_source"/>
      </node>
      <node id="311555">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/TrigConfL1Data/TrigConfL1DataDict.h</label>
        <link refid="d5/dfb/TrigConfL1DataDict_8h_source"/>
      </node>
      <node id="311590">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/DecisionUnpackerStandalone.h</label>
        <link refid="d1/d6e/DecisionUnpackerStandalone_8h_source"/>
      </node>
      <node id="311553">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/TrigConfL1Data/CTPConfig.h</label>
        <link refid="db/d97/CTPConfig_8h_source"/>
        <childnode refid="311554" relation="include">
        </childnode>
        <childnode refid="311555" relation="include">
        </childnode>
        <childnode refid="311556" relation="include">
        </childnode>
        <childnode refid="311557" relation="include">
        </childnode>
        <childnode refid="311559" relation="include">
        </childnode>
        <childnode refid="311588" relation="include">
        </childnode>
        <childnode refid="311589" relation="include">
        </childnode>
        <childnode refid="311590" relation="include">
        </childnode>
      </node>
      <node id="311589">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/DecisionUnpackerEventInfo.h</label>
        <link refid="dc/d39/DecisionUnpackerEventInfo_8h_source"/>
      </node>
      <node id="311551">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/TrigConfL1Data/LVL1Config.h</label>
        <link refid="d7/d46/LVL1Config_8h_source"/>
      </node>
      <node id="311566">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/ChainGroupFunctions.h</label>
        <link refid="d3/d14/ChainGroupFunctions_8h_source"/>
        <childnode refid="311567" relation="include">
        </childnode>
        <childnode refid="311576" relation="include">
        </childnode>
      </node>
      <node id="311561">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SUSYTools/SUSYTools/ISUSYObjDef_xAODTool.h</label>
        <link refid="d1/d7a/ISUSYObjDef__xAODTool_8h_source"/>
        <childnode refid="311562" relation="include">
        </childnode>
        <childnode refid="311563" relation="include">
        </childnode>
        <childnode refid="311564" relation="include">
        </childnode>
      </node>
      <node id="311574">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigAnalysisTest/TrigAnalysisTest/TestFactory.h</label>
        <link refid="d7/d5f/TestFactory_8h_source"/>
      </node>
      <node id="311575">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigAnalysisTest/TrigAnalysisTest/TriggersFiredTest.h</label>
        <link refid="da/d06/TriggersFiredTest_8h_source"/>
      </node>
      <node id="311582">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigTauMatching/TrigTauMatching/TrigTauMatchingDict.h</label>
        <link refid="dc/d01/TrigTauMatchingDict_8h_source"/>
      </node>
      <node id="311562">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SUSYTools/src/ApplySUSYTools.h</label>
        <link refid="dd/dcc/ApplySUSYTools_8h_source"/>
      </node>
      <node id="311572">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigAnalysisTest/TrigAnalysisTest/BasicTriggerFired.h</label>
        <link refid="d5/dd0/BasicTriggerFired_8h_source"/>
      </node>
      <node id="311585">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/ExpertMethods.h</label>
        <link refid="dd/d57/ExpertMethods_8h_source"/>
        <childnode refid="311567" relation="include">
        </childnode>
        <childnode refid="311576" relation="include">
        </childnode>
      </node>
      <node id="311560">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/ChainGroup.h</label>
        <link refid="d2/dd8/ChainGroup_8h_source"/>
        <childnode refid="311561" relation="include">
        </childnode>
        <childnode refid="311566" relation="include">
        </childnode>
        <childnode refid="311583" relation="include">
        </childnode>
        <childnode refid="311584" relation="include">
        </childnode>
        <childnode refid="311585" relation="include">
        </childnode>
        <childnode refid="311567" relation="include">
        </childnode>
        <childnode refid="311576" relation="include">
        </childnode>
      </node>
      <node id="311588">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/DecisionUnpackerAthena.h</label>
        <link refid="db/df6/DecisionUnpackerAthena_8h_source"/>
      </node>
      <node id="311563">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SUSYTools/src/SUSYToolsAlg.h</label>
        <link refid="d4/dd2/SUSYToolsAlg_8h_source"/>
      </node>
      <node id="311573">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigAnalysisTest/TrigAnalysisTest/Run1BStoxAODTrigger.h</label>
        <link refid="dd/d41/Run1BStoxAODTrigger_8h_source"/>
      </node>
      <node id="311570">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigAnalysisTest/TrigAnalysisTest/AthenaTestHarness.h</label>
        <link refid="d5/d93/AthenaTestHarness_8h_source"/>
      </node>
      <node id="311554">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/TrigConfL1Data/CTPConfigOnline.h</label>
        <link refid="d4/d33/CTPConfigOnline_8h_source"/>
      </node>
      <node id="311550">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/TrigConfL1Data/ThresholdConfig.h</label>
        <link refid="ThresholdConfig.h"/>
        <childnode refid="311551" relation="include">
        </childnode>
        <childnode refid="311552" relation="include">
        </childnode>
      </node>
      <node id="311558">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfxAOD/TrigConfxAOD/TrigConfxAODDict.h</label>
        <link refid="df/ddd/TrigConfxAODDict_8h_source"/>
      </node>
      <node id="311578">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TriggerMatchingTool/TriggerMatchingTool/MatchingImplementation.h</label>
        <link refid="d1/d9b/MatchingImplementation_8h_source"/>
      </node>
      <node id="311583">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/ConfigurationAccess.h</label>
        <link refid="df/d4d/ConfigurationAccess_8h_source"/>
        <childnode refid="311567" relation="include">
        </childnode>
        <childnode refid="311576" relation="include">
        </childnode>
      </node>
      <node id="311559">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/CacheGlobalMemory.h</label>
        <link refid="df/d4a/CacheGlobalMemory_8h_source"/>
        <childnode refid="311560" relation="include">
        </childnode>
        <childnode refid="311566" relation="include">
        </childnode>
        <childnode refid="311586" relation="include">
        </childnode>
        <childnode refid="311583" relation="include">
        </childnode>
        <childnode refid="311567" relation="include">
        </childnode>
        <childnode refid="311576" relation="include">
        </childnode>
      </node>
      <node id="311581">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigTauMatching/TrigTauMatching/TrigTauMatching.h</label>
        <link refid="dc/d5a/TrigTauMatching_8h_source"/>
        <childnode refid="311582" relation="include">
        </childnode>
      </node>
      <node id="311576">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/TrigDecisionToolDict.h</label>
        <link refid="d4/df1/TrigDecisionToolDict_8h_source"/>
      </node>
      <node id="311557">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfxAOD/TrigConfxAOD/xAODConfigTool.h</label>
        <link refid="d1/d98/xAODConfigTool_8h_source"/>
        <childnode refid="311558" relation="include">
        </childnode>
      </node>
      <node id="311580">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigTauMatching/src/TrigTauMatching_example.h</label>
        <link refid="d7/d96/TrigTauMatching__example_8h_source"/>
      </node>
      <node id="311552">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/TrigConfL1Data/Menu.h</label>
        <link refid="df/dde/Menu_8h_source"/>
        <childnode refid="311553" relation="include">
        </childnode>
        <childnode refid="311551" relation="include">
        </childnode>
      </node>
      <node id="311584">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/DecisionAccess.h</label>
        <link refid="d7/d07/DecisionAccess_8h_source"/>
        <childnode refid="311567" relation="include">
        </childnode>
        <childnode refid="311576" relation="include">
        </childnode>
      </node>
      <node id="311577">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TriggerMatchingTool/TriggerMatchingTool/MatchingTool.h</label>
        <link refid="df/d10/MatchingTool_8h_source"/>
        <childnode refid="311578" relation="include">
        </childnode>
        <childnode refid="311579" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="df/d8e/classTrigConf_1_1ThresholdConfig" prot="public">TrigConf::ThresholdConfig</innerclass>
    <innernamespace refid="d4/d08/namespaceTrigConf">TrigConf</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Dear<sp/>emacs,<sp/>this<sp/>is<sp/>-*-<sp/>c++<sp/>-*-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TrigConf_ThresholdConfig</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TrigConf_ThresholdConfig</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigConfL1Data/TriggerThreshold.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigConfL1Data/CaloInfo.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigConfL1Data/L1DataBaseclass.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigConfL1Data/L1DataDef.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">TrigConf<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="df/d8e/classTrigConf_1_1ThresholdConfig" refkind="compound"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="df/d8e/classTrigConf_1_1ThresholdConfig" kindref="compound">ThresholdConfig</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="d2/db1/classTrigConf_1_1L1DataBaseclass" kindref="compound">L1DataBaseclass</ref><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;<sp/>thrVec_t;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;<sp/>L1DataDef::TriggerType,<sp/>thrVec_t&gt;<sp/>thrVecMap_t;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/d8e/classTrigConf_1_1ThresholdConfig" kindref="compound">ThresholdConfig</ref>();</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>~<ref refid="df/d8e/classTrigConf_1_1ThresholdConfig" kindref="compound">ThresholdConfig</ref>();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;TriggerThreshold*&gt;&amp;<sp/>thresholdVector(L1DataDef::TriggerType);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;&amp;<sp/>getThresholdVector(L1DataDef::TriggerType)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;&amp;<sp/>getThresholdVector()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_TriggerThresholdVector;<sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;&amp;<sp/>thresholdVector()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_TriggerThresholdVector;<sp/>}<sp/></highlight><highlight class="comment">//<sp/>backward<sp/>compatible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//access<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>getClusterThresholdType(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresholdnumber<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>access<sp/>to<sp/>ptcut</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>getThreshold(L1DataDef::TriggerType<sp/>type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresholdnumber)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>access<sp/>to<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>getWindow(L1DataDef::TriggerType<sp/>type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresholdnumber)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getThresholdVector().size();<sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size(L1DataDef::TriggerType<sp/>type)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getThresholdVector(type).size();<sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>specialized<sp/>(should<sp/>be<sp/>faced<sp/>out)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>getClusterThreshold(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresholdnumber)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>getJetThreshold(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresholdnumber)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>getJbThreshold(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresholdnumber)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>getJfThreshold(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresholdnumber)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>getMuonThreshold(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresholdnumber)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>getTotEtThreshold(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresholdnumber)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>getJetEtThreshold(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresholdnumber)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>getMissEtThreshold(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresholdnumber)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>getMissEtSigThreshold(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresholdnumber)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>getClusterEmIsolation(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresholdnumber)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>getClusterHadIsolation(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresholdnumber)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>getClusterHadVeto(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresholdnumber)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>getJetWindow(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresholdnumber)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>getJbWindow(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresholdnumber)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>getJfWindow(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresholdnumber)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d81/classTrigConf_1_1CaloInfo" kindref="compound">CaloInfo</ref>&amp;<sp/>caloInfo()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_CaloInfo;<sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setCaloInfo<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d81/classTrigConf_1_1CaloInfo" kindref="compound">CaloInfo</ref>&amp;<sp/>ci)<sp/>{<sp/>m_CaloInfo<sp/>=<sp/>ci;<sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>addTriggerThreshold(<ref refid="db/de5/classTrigConf_1_1TriggerThreshold" kindref="compound">TriggerThreshold</ref>*<sp/>value);<sp/></highlight><highlight class="comment">//<sp/>add<sp/>according<sp/>to<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>indent=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>detail=1)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printTriggerThresholdVector(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>indent=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printThresholdValueMap()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printTtvMap(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/de5/classTrigConf_1_1TriggerThreshold" kindref="compound">TriggerThreshold</ref>*<sp/>thr)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printTtvSummary(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>thrVec_t&amp;<sp/>vec,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="d6/db2/structTrigConf_1_1name" kindref="compound">name</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clear();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>attributeThresholdNumbers();<sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/de5/classTrigConf_1_1TriggerThreshold" kindref="compound">TriggerThreshold</ref>*<sp/>findTriggerThreshold(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setCtpVersion(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ctpVersion)<sp/>{<sp/>m_ctpVersion<sp/>=<sp/>ctpVersion;<sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ctpVersion()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ctpVersion;<sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setL1Version(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l1Version)<sp/>{<sp/>m_l1Version<sp/>=<sp/>l1Version;<sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l1Version()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_l1Version;<sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>insertInPosition(std::vector&lt;TriggerThreshold*&gt;&amp;<sp/>thrVec,<sp/><ref refid="db/de5/classTrigConf_1_1TriggerThreshold" kindref="compound">TriggerThreshold</ref>*<sp/>tt,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;TriggerThreshold*&gt;<sp/>getNimThresholdVectorByType(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>type)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d7/d27/classTrigConf_1_1CTPConfig" kindref="compound">CTPConfig</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_ctpVersion;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_l1Version;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>thrVecMap_t<sp/><sp/>m_thresholdVectors;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vectors<sp/>of<sp/>TriggerThresholds<sp/>accessed<sp/>by<sp/>type<sp/>(map)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>thrVec_t<sp/><sp/><sp/><sp/><sp/>m_TriggerThresholdVector;<sp/><sp/></highlight><highlight class="comment">//<sp/>vector<sp/>of<sp/>all<sp/>TriggerThresholds<sp/>(owns<sp/>all<sp/>thresholds)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>thrVec_t<sp/><sp/><sp/><sp/><sp/>m_ClusterThresholdVector;<sp/><sp/></highlight><highlight class="comment">//<sp/>vector<sp/>of<sp/>all<sp/>EM<sp/>TAU<sp/>thresholds<sp/>(for<sp/>backward<sp/>compatibility,<sp/>where<sp/>EM<sp/>and<sp/>TAU<sp/>thresholds<sp/>are<sp/>in<sp/>one<sp/>vector)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d81/classTrigConf_1_1CaloInfo" kindref="compound">CaloInfo</ref><sp/><sp/><sp/><sp/><sp/>m_CaloInfo;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>these<sp/>need<sp/>to<sp/>stay<sp/>here<sp/>temporarily<sp/>to<sp/>make<sp/>the<sp/>migration<sp/>not<sp/>too<sp/>painfull</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;&amp;<sp/>getClusterThresholdVector()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ClusterThresholdVector;<sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;&amp;<sp/>getJetThresholdVector()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getThresholdVector(L1DataDef::JET);<sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;&amp;<sp/>getFJetThresholdVector()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getThresholdVector(L1DataDef::FJ);<sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;&amp;<sp/>getJbThresholdVector()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getThresholdVector(L1DataDef::JB);<sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;&amp;<sp/>getJfThresholdVector()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getThresholdVector(L1DataDef::JF);<sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;&amp;<sp/>getTotEtVector()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getThresholdVector(L1DataDef::TE);<sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;&amp;<sp/>getJetEtVector()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getThresholdVector(L1DataDef::JE);<sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;&amp;<sp/>getMissEtVector()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getThresholdVector(L1DataDef::XE);<sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;&amp;<sp/>getMissEtSignVector()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getThresholdVector(L1DataDef::XS);<sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;&amp;<sp/>getMuonThresholdVector()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getThresholdVector(L1DataDef::MUON);<sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;&amp;<sp/>getRndmThresholdVector()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getThresholdVector(L1DataDef::RNDM);<sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;&amp;<sp/>getBgrpThresholdVector()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getThresholdVector(L1DataDef::BGRP);<sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;&amp;<sp/>getPclkThresholdVector()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getThresholdVector(L1DataDef::PCLK);<sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;&amp;<sp/>getNimThresholdVector()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getThresholdVector(L1DataDef::NIM);<sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;&amp;<sp/>getZBThresholds()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getThresholdVector(L1DataDef::ZB);}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;&amp;<sp/>getMbtsThresholdVector()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getThresholdVector(L1DataDef::MBTS);<sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;&amp;<sp/>getMbtssiThresholdVector()</highlight><highlight class="keyword"><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getThresholdVector(L1DataDef::MBTSSI);<sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;&amp;<sp/>getTrtThresholdVector()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getThresholdVector(L1DataDef::TRT);<sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;&amp;<sp/>getZdcThresholdVector()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getThresholdVector(L1DataDef::ZDC);<sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;&amp;<sp/>getBcmThresholdVector()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getThresholdVector(L1DataDef::BCM);<sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;&amp;<sp/>getBcmcmbThresholdVector()</highlight><highlight class="keyword"><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getThresholdVector(L1DataDef::BCMCMB);<sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;&amp;<sp/>getLucidThresholdVector()</highlight><highlight class="keyword"><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getThresholdVector(L1DataDef::LUCID);<sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;&amp;<sp/>getBptxThresholdVector()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getThresholdVector(L1DataDef::BPTX);<sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>__GCCXML__</highlight></codeline>
<codeline lineno="125"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;*<sp/>getClusterThresholdPointer()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__attribute__<sp/>((deprecated))<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;m_ClusterThresholdVector;}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;*<sp/>getJetThresholdPointer()<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__attribute__<sp/>((deprecated))<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;getThresholdVector(L1DataDef::JET);}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;*<sp/>getFJetThresholdPointer()<sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__attribute__<sp/>((deprecated))<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;getThresholdVector(L1DataDef::FJ);}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;*<sp/>getJbThresholdPointer()<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__attribute__<sp/>((deprecated))<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;getThresholdVector(L1DataDef::JB);}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;*<sp/>getJfThresholdPointer()<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__attribute__<sp/>((deprecated))<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;getThresholdVector(L1DataDef::JF);}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;*<sp/>getTotEtPointer()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__attribute__<sp/>((deprecated))<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;getThresholdVector(L1DataDef::TE);}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;*<sp/>getJetEtPointer()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__attribute__<sp/>((deprecated))<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;getThresholdVector(L1DataDef::JE);}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;*<sp/>getMissEtPointer()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__attribute__<sp/>((deprecated))<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;getThresholdVector(L1DataDef::XE);}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;*<sp/>getMissEtSignPointer()<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__attribute__<sp/>((deprecated))<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;getThresholdVector(L1DataDef::XS);}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;*<sp/>getMuonThresholdPointer()<sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__attribute__<sp/>((deprecated))<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;getThresholdVector(L1DataDef::MUON);}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;*<sp/>getRndmThresholdPointer()<sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__attribute__<sp/>((deprecated))<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;getThresholdVector(L1DataDef::RNDM);}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;*<sp/>getBgrpThresholdPointer()<sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__attribute__<sp/>((deprecated))<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;getThresholdVector(L1DataDef::BGRP);}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;*<sp/>getPclkThresholdPointer()<sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__attribute__<sp/>((deprecated))<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;getThresholdVector(L1DataDef::PCLK);}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerThreshold*&gt;*<sp/>getNimThresholdPointer()<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__attribute__<sp/>((deprecated))<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;getThresholdVector(L1DataDef::NIM);}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="142"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/TrigConfL1Data/ThresholdConfig.h"/>
  </compounddef>
</doxygen>
