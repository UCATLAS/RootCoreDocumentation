<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d5/da0/classEL_1_1UnitTestAlg1" kind="class" prot="public">
    <compoundname>EL::UnitTestAlg1</compoundname>
    <basecompoundref refid="de/ddb/classEL_1_1Algorithm" prot="public" virt="non-virtual">EL::Algorithm</basecompoundref>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="d5/da0/classEL_1_1UnitTestAlg1_1af60433b65f09d4853bbf68731bb18016" prot="public" static="no">
        <name>CallBack</name>
        <enumvalue id="d5/da0/classEL_1_1UnitTestAlg1_1af60433b65f09d4853bbf68731bb18016a59048184996953a3c91cd7303207d594" prot="public">
          <name>CB_CHANGE_INPUT_FIRST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d5/da0/classEL_1_1UnitTestAlg1_1af60433b65f09d4853bbf68731bb18016ada63bb9502693b3db4ccb62cd13d3443" prot="public">
          <name>CB_CHANGE_INPUT_OTHER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d5/da0/classEL_1_1UnitTestAlg1_1af60433b65f09d4853bbf68731bb18016a23607862deb39ac850f3b10bf7150faf" prot="public">
          <name>CB_INITIALIZE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d5/da0/classEL_1_1UnitTestAlg1_1af60433b65f09d4853bbf68731bb18016a6e27afd890bb4340475d1f79a7e07ead" prot="public">
          <name>CB_HIST_INITIALIZE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d5/da0/classEL_1_1UnitTestAlg1_1af60433b65f09d4853bbf68731bb18016a9bf1aae57f0d9c5a10fccd4a46ebd906" prot="public">
          <name>CB_EXECUTE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d5/da0/classEL_1_1UnitTestAlg1_1af60433b65f09d4853bbf68731bb18016af6dc88195111fdb46d938cd38164db97" prot="public">
          <name>CB_FILE_EXECUTE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d5/da0/classEL_1_1UnitTestAlg1_1af60433b65f09d4853bbf68731bb18016a13f6c3d6b7c0ffeed14498300b099008" prot="public">
          <name>CB_FINALIZE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d5/da0/classEL_1_1UnitTestAlg1_1af60433b65f09d4853bbf68731bb18016adbbe0fe585f40f5ab49b8f110a93dcc8" prot="public">
          <name>CB_HIST_FINALIZE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>the various callbacks we use </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/UnitTestAlg1.h" line="63" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/UnitTestAlg1.h" bodystart="62" bodyend="72"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="d5/da0/classEL_1_1UnitTestAlg1_1aa5de81ca804a6454961c6a97bc63b7d2" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool EL::UnitTestAlg1::makeOutput</definition>
        <argsstring></argsstring>
        <name>makeOutput</name>
        <briefdescription>
<para>description: whether I create an output n-tuple </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/UnitTestAlg1.h" line="57" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/UnitTestAlg1.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d5/da0/classEL_1_1UnitTestAlg1_1ad411f33f49df75a6461d4f06996388ac" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string EL::UnitTestAlg1::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <briefdescription>
<para>description: the name of the variable we are using </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/UnitTestAlg1.h" line="164" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/UnitTestAlg1.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d5/da0/classEL_1_1UnitTestAlg1_1a569ed2383cbcd41ec90ca685e9ce5241" prot="private" static="no" mutable="no">
        <type>TBranch *</type>
        <definition>TBranch* EL::UnitTestAlg1::m_branch</definition>
        <argsstring></argsstring>
        <name>m_branch</name>
        <briefdescription>
<para>description: the branch we are using </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/UnitTestAlg1.h" line="173" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/UnitTestAlg1.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d5/da0/classEL_1_1UnitTestAlg1_1a5bb5b6b61ee76c6345eb690e2dafd0ce" prot="private" static="no" mutable="no">
        <type>Int_t</type>
        <definition>Int_t EL::UnitTestAlg1::m_value</definition>
        <argsstring></argsstring>
        <name>m_value</name>
        <briefdescription>
<para>description: the value we are reading from the branch </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/UnitTestAlg1.h" line="178" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/UnitTestAlg1.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d5/da0/classEL_1_1UnitTestAlg1_1a623760f4ab8a222376ee2098e0c1b57d" prot="private" static="no" mutable="no">
        <type>TTree *</type>
        <definition>TTree* EL::UnitTestAlg1::m_tree</definition>
        <argsstring></argsstring>
        <name>m_tree</name>
        <briefdescription>
<para>description: the histogram we are creating </para>        </briefdescription>
        <detaileddescription>
<para>description: the tree we are creating </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/UnitTestAlg1.h" line="186" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/UnitTestAlg1.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d5/da0/classEL_1_1UnitTestAlg1_1a433e7fa22cdc8b2d9b2c594585cb843f" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string EL::UnitTestAlg1::m_fileName</definition>
        <argsstring></argsstring>
        <name>m_fileName</name>
        <briefdescription>
<para>the name of the file (for testing changeInput) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/UnitTestAlg1.h" line="190" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/UnitTestAlg1.h" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d5/da0/classEL_1_1UnitTestAlg1_1a4af22782b90ea192285e849ef81a7e7d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool EL::UnitTestAlg1::m_hasInitialize</definition>
        <argsstring></argsstring>
        <name>m_hasInitialize</name>
        <briefdescription>
<para>whether initialize has been called </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/UnitTestAlg1.h" line="194" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/UnitTestAlg1.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d5/da0/classEL_1_1UnitTestAlg1_1a280825862d3cd75f7aaf2792dc067bbf" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool EL::UnitTestAlg1::m_hasHistInitialize</definition>
        <argsstring></argsstring>
        <name>m_hasHistInitialize</name>
        <briefdescription>
<para>whether histInitialize has been called </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/UnitTestAlg1.h" line="198" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/UnitTestAlg1.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d5/da0/classEL_1_1UnitTestAlg1_1a5234f0dc4aec77c542ec50e7fb019c91" prot="private" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned EL::UnitTestAlg1::m_calls</definition>
        <argsstring></argsstring>
        <name>m_calls</name>
        <initializer> 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/UnitTestAlg1.h" line="201" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/UnitTestAlg1.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d5/da0/classEL_1_1UnitTestAlg1_1afafb3835a33d429c17ff0a644e6f2314" prot="private" static="no" mutable="no">
        <type>TH1 *</type>
        <definition>TH1* EL::UnitTestAlg1::m_callbacks</definition>
        <argsstring></argsstring>
        <name>m_callbacks</name>
        <initializer> nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/UnitTestAlg1.h" line="204" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/UnitTestAlg1.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d5/da0/classEL_1_1UnitTestAlg1_1a7d0d93e5150738b4d2694ad118a56b4c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EL::UnitTestAlg1::testInvariant</definition>
        <argsstring>() const </argsstring>
        <name>testInvariant</name>
        <reimplements refid="de/ddb/classEL_1_1Algorithm_1afa8999f46656a42d53df3731216f1296">testInvariant</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: test the invariant of this object guarantee: no-fail </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/UnitTestAlg1.h" line="44"/>
      </memberdef>
      <memberdef kind="function" id="d5/da0/classEL_1_1UnitTestAlg1_1ad36cd9122e9d6d74fe35ee3d2e5eede3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>EL::UnitTestAlg1::UnitTestAlg1</definition>
        <argsstring>(const std::string &amp;branchName=&quot;el_n&quot;)</argsstring>
        <name>UnitTestAlg1</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>branchName</declname>
          <defval>&quot;el_n&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: standard constructor. initialize with a branch of type Int_t guarantee: strong failures: low level errors II </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/UnitTestAlg1.h" line="52"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d5/da0/classEL_1_1UnitTestAlg1_1abd1e808b6023d62ea932d1d50918833e" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d9/daa/classEL_1_1StatusCode" kindref="compound">StatusCode</ref></type>
        <definition>virtual StatusCode EL::UnitTestAlg1::setupJob</definition>
        <argsstring>(Job &amp;job) override</argsstring>
        <name>setupJob</name>
        <reimplements refid="de/ddb/classEL_1_1Algorithm_1a6bea54e06f41f386407aad066f051f59">setupJob</reimplements>
        <param>
          <type><ref refid="da/dbb/classEL_1_1Job" kindref="compound">Job</ref> &amp;</type>
          <declname>job</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: give the algorithm a chance to intialize the job with anything this algorithm needs. this method is automatically called before the algorithm is actually added to the job. guarantee: basic failures: algorithm dependent rationale: this is currently used to give algorithms a chance to register their output datasets, but can also be used for other stuff. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/UnitTestAlg1.h" line="89"/>
      </memberdef>
      <memberdef kind="function" id="d5/da0/classEL_1_1UnitTestAlg1_1a264cdbdc32a4fa2bb95bdbc765f26b2e" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d9/daa/classEL_1_1StatusCode" kindref="compound">StatusCode</ref></type>
        <definition>virtual StatusCode EL::UnitTestAlg1::changeInput</definition>
        <argsstring>(bool firstFile) override</argsstring>
        <name>changeInput</name>
        <reimplements refid="de/ddb/classEL_1_1Algorithm_1a555bf98d9d040bd8cca3cb55473fac0a">changeInput</reimplements>
        <param>
          <type>bool</type>
          <declname>firstFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: do all changes to work with a new input file, e.g. set new branch addresses. if firstFile is set, this method is called just before init() is called guarantee: basic failures: algorithm dependent </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/UnitTestAlg1.h" line="98"/>
      </memberdef>
      <memberdef kind="function" id="d5/da0/classEL_1_1UnitTestAlg1_1a1df50f98d547f09320aa6d2494ab3b74" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d9/daa/classEL_1_1StatusCode" kindref="compound">StatusCode</ref></type>
        <definition>virtual StatusCode EL::UnitTestAlg1::initialize</definition>
        <argsstring>() override</argsstring>
        <name>initialize</name>
        <reimplements refid="de/ddb/classEL_1_1Algorithm_1ad880ac0eae790193a28d0ec063727f5e">initialize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: do everything that needs to be done before running the algorithm, e.g. create output n-tuples and histograms. this method is called only once right after changeInput(true) is called guarantee: basic failures: algorithm dependent rationale: in principle all this work could be done on changeInput(true). However, providing this method should make it easier for the user to set up all his outputs and to do so only once. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/UnitTestAlg1.h" line="112"/>
      </memberdef>
      <memberdef kind="function" id="d5/da0/classEL_1_1UnitTestAlg1_1acbc4b19357759b21d04e831d441f73b4" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d9/daa/classEL_1_1StatusCode" kindref="compound">StatusCode</ref></type>
        <definition>virtual StatusCode EL::UnitTestAlg1::histInitialize</definition>
        <argsstring>() override</argsstring>
        <name>histInitialize</name>
        <reimplements refid="de/ddb/classEL_1_1Algorithm_1a495fd98dfd3af930cc2563df18ff2d01">histInitialize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: this is a pre-initialization routine that is called before changeInput is called. guarantee: basic failures: algorithm dependent rationale: unlike initialize(), this method is called all the time, even on empty input files. so you should create any histograms or n-tuples here that subsequent code expects </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/UnitTestAlg1.h" line="115"/>
      </memberdef>
      <memberdef kind="function" id="d5/da0/classEL_1_1UnitTestAlg1_1a84a1f1385bb933e2c17cc1b82d0dda94" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d9/daa/classEL_1_1StatusCode" kindref="compound">StatusCode</ref></type>
        <definition>virtual StatusCode EL::UnitTestAlg1::execute</definition>
        <argsstring>() override</argsstring>
        <name>execute</name>
        <reimplements refid="de/ddb/classEL_1_1Algorithm_1a2ca11106132eab43a10bba3be427ead8">execute</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: process the next event guarantee: basic failures: algorithm dependent rationale: the virtual part of Algorithm::process </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/UnitTestAlg1.h" line="123"/>
      </memberdef>
      <memberdef kind="function" id="d5/da0/classEL_1_1UnitTestAlg1_1adc3626422fc10aee7a4e5a1dff7fb5f8" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d9/daa/classEL_1_1StatusCode" kindref="compound">StatusCode</ref></type>
        <definition>virtual StatusCode EL::UnitTestAlg1::fileExecute</definition>
        <argsstring>() override</argsstring>
        <name>fileExecute</name>
        <reimplements refid="de/ddb/classEL_1_1Algorithm_1af77e160b0f307f1b53c2678542b18492">fileExecute</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: do all the processing that needs to be done once per file guarantee: basic failures: algorithm dependent rationale: this is to read per-file accounting data, e.g. the list of lumi-blocks processed </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/UnitTestAlg1.h" line="133"/>
      </memberdef>
      <memberdef kind="function" id="d5/da0/classEL_1_1UnitTestAlg1_1a7d84babd03aec9f5cd275199ddaf1c04" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d9/daa/classEL_1_1StatusCode" kindref="compound">StatusCode</ref></type>
        <definition>virtual StatusCode EL::UnitTestAlg1::finalize</definition>
        <argsstring>() override</argsstring>
        <name>finalize</name>
        <reimplements refid="de/ddb/classEL_1_1Algorithm_1a322365f8d90dcfc9fd1acf2f57c35b49">finalize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: do everything that needs to be done after completing work on this worker guarantee: basic failures: algorithm dependent rationale: currently there is no use foreseen, but this routine is provided regardless rationale: the virtual part of Algorithm::process </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/UnitTestAlg1.h" line="144"/>
      </memberdef>
      <memberdef kind="function" id="d5/da0/classEL_1_1UnitTestAlg1_1a9024e2abf5647834eef2a752a0d515d9" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d9/daa/classEL_1_1StatusCode" kindref="compound">StatusCode</ref></type>
        <definition>virtual StatusCode EL::UnitTestAlg1::histFinalize</definition>
        <argsstring>() override</argsstring>
        <name>histFinalize</name>
        <reimplements refid="de/ddb/classEL_1_1Algorithm_1ab8844066931062378f343c956369b1ec">histFinalize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: this is a post-initialization routine that is called after finalize has been called. guarantee: basic failures: algorithm dependent rationale: unlike finalize(), this method is called all the time, even on empty input files. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/UnitTestAlg1.h" line="154"/>
      </memberdef>
      <memberdef kind="function" id="d5/da0/classEL_1_1UnitTestAlg1_1ab794d90477941e6d8bca765fec1a5cfd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TH1 *</type>
        <definition>TH1* EL::UnitTestAlg1::getCallbacks</definition>
        <argsstring>()</argsstring>
        <name>getCallbacks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/UnitTestAlg1.h" line="207"/>
      </memberdef>
      <memberdef kind="function" id="d5/da0/classEL_1_1UnitTestAlg1_1a4d2ea1c23a9ed02cb3bf8596d8004947" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>EL::UnitTestAlg1::ClassDef</definition>
        <argsstring>(UnitTestAlg1, 1)</argsstring>
        <name>ClassDef</name>
        <reimplements refid="de/ddb/classEL_1_1Algorithm_1aaaf7e4b47c721a094449edc60a2ffe88">ClassDef</reimplements>
        <param>
          <type><ref refid="d5/da0/classEL_1_1UnitTestAlg1" kindref="compound">UnitTestAlg1</ref></type>
        </param>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/UnitTestAlg1.h" line="213"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="22636">
        <label>EL::Algorithm</label>
        <link refid="de/ddb/classEL_1_1Algorithm"/>
      </node>
      <node id="22635">
        <label>EL::UnitTestAlg1</label>
        <link refid="d5/da0/classEL_1_1UnitTestAlg1"/>
        <childnode refid="22636" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="22638">
        <label>EL::Algorithm</label>
        <link refid="de/ddb/classEL_1_1Algorithm"/>
        <childnode refid="22639" relation="usage">
          <edgelabel>m_wk</edgelabel>
        </childnode>
      </node>
      <node id="22639">
        <label>EL::Worker</label>
        <link refid="da/d12/classEL_1_1Worker"/>
        <childnode refid="22640" relation="usage">
          <edgelabel>m_metaData</edgelabel>
        </childnode>
      </node>
      <node id="22641">
        <label>string</label>
      </node>
      <node id="22640">
        <label>SH::MetaObject</label>
        <link refid="db/d3a/classSH_1_1MetaObject"/>
      </node>
      <node id="22637">
        <label>EL::UnitTestAlg1</label>
        <link refid="d5/da0/classEL_1_1UnitTestAlg1"/>
        <childnode refid="22638" relation="public-inheritance">
        </childnode>
        <childnode refid="22641" relation="usage">
          <edgelabel>m_fileName</edgelabel>
          <edgelabel>m_name</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/UnitTestAlg1.h" line="36" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/UnitTestAlg1.h" bodystart="35" bodyend="215"/>
    <listofallmembers>
      <member refid="de/ddb/classEL_1_1Algorithm_1abb182dee6741786ce59ddbd8a8fc4cc0" prot="public" virt="non-virtual"><scope>EL::UnitTestAlg1</scope><name>Algorithm</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1a9e2072bd4fdda18ebc86f847b691d9b9" prot="public" virt="non-virtual"><scope>EL::UnitTestAlg1</scope><name>book</name></member>
      <member refid="d5/da0/classEL_1_1UnitTestAlg1_1af60433b65f09d4853bbf68731bb18016" prot="public" virt="non-virtual"><scope>EL::UnitTestAlg1</scope><name>CallBack</name></member>
      <member refid="d5/da0/classEL_1_1UnitTestAlg1_1af60433b65f09d4853bbf68731bb18016a59048184996953a3c91cd7303207d594" prot="public" virt="non-virtual"><scope>EL::UnitTestAlg1</scope><name>CB_CHANGE_INPUT_FIRST</name></member>
      <member refid="d5/da0/classEL_1_1UnitTestAlg1_1af60433b65f09d4853bbf68731bb18016ada63bb9502693b3db4ccb62cd13d3443" prot="public" virt="non-virtual"><scope>EL::UnitTestAlg1</scope><name>CB_CHANGE_INPUT_OTHER</name></member>
      <member refid="d5/da0/classEL_1_1UnitTestAlg1_1af60433b65f09d4853bbf68731bb18016a9bf1aae57f0d9c5a10fccd4a46ebd906" prot="public" virt="non-virtual"><scope>EL::UnitTestAlg1</scope><name>CB_EXECUTE</name></member>
      <member refid="d5/da0/classEL_1_1UnitTestAlg1_1af60433b65f09d4853bbf68731bb18016af6dc88195111fdb46d938cd38164db97" prot="public" virt="non-virtual"><scope>EL::UnitTestAlg1</scope><name>CB_FILE_EXECUTE</name></member>
      <member refid="d5/da0/classEL_1_1UnitTestAlg1_1af60433b65f09d4853bbf68731bb18016a13f6c3d6b7c0ffeed14498300b099008" prot="public" virt="non-virtual"><scope>EL::UnitTestAlg1</scope><name>CB_FINALIZE</name></member>
      <member refid="d5/da0/classEL_1_1UnitTestAlg1_1af60433b65f09d4853bbf68731bb18016adbbe0fe585f40f5ab49b8f110a93dcc8" prot="public" virt="non-virtual"><scope>EL::UnitTestAlg1</scope><name>CB_HIST_FINALIZE</name></member>
      <member refid="d5/da0/classEL_1_1UnitTestAlg1_1af60433b65f09d4853bbf68731bb18016a6e27afd890bb4340475d1f79a7e07ead" prot="public" virt="non-virtual"><scope>EL::UnitTestAlg1</scope><name>CB_HIST_INITIALIZE</name></member>
      <member refid="d5/da0/classEL_1_1UnitTestAlg1_1af60433b65f09d4853bbf68731bb18016a23607862deb39ac850f3b10bf7150faf" prot="public" virt="non-virtual"><scope>EL::UnitTestAlg1</scope><name>CB_INITIALIZE</name></member>
      <member refid="d5/da0/classEL_1_1UnitTestAlg1_1a264cdbdc32a4fa2bb95bdbc765f26b2e" prot="private" virt="virtual"><scope>EL::UnitTestAlg1</scope><name>changeInput</name></member>
      <member refid="d5/da0/classEL_1_1UnitTestAlg1_1a4d2ea1c23a9ed02cb3bf8596d8004947" prot="private" virt="non-virtual"><scope>EL::UnitTestAlg1</scope><name>ClassDef</name></member>
      <member refid="d5/da0/classEL_1_1UnitTestAlg1_1a84a1f1385bb933e2c17cc1b82d0dda94" prot="private" virt="virtual"><scope>EL::UnitTestAlg1</scope><name>execute</name></member>
      <member refid="d5/da0/classEL_1_1UnitTestAlg1_1adc3626422fc10aee7a4e5a1dff7fb5f8" prot="private" virt="virtual"><scope>EL::UnitTestAlg1</scope><name>fileExecute</name></member>
      <member refid="d5/da0/classEL_1_1UnitTestAlg1_1a7d84babd03aec9f5cd275199ddaf1c04" prot="private" virt="virtual"><scope>EL::UnitTestAlg1</scope><name>finalize</name></member>
      <member refid="d5/da0/classEL_1_1UnitTestAlg1_1ab794d90477941e6d8bca765fec1a5cfd" prot="private" virt="non-virtual"><scope>EL::UnitTestAlg1</scope><name>getCallbacks</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1a03872c24f8a637ba069b61d847ad557e" prot="public" virt="non-virtual"><scope>EL::UnitTestAlg1</scope><name>hist</name></member>
      <member refid="d5/da0/classEL_1_1UnitTestAlg1_1a9024e2abf5647834eef2a752a0d515d9" prot="private" virt="virtual"><scope>EL::UnitTestAlg1</scope><name>histFinalize</name></member>
      <member refid="d5/da0/classEL_1_1UnitTestAlg1_1acbc4b19357759b21d04e831d441f73b4" prot="private" virt="virtual"><scope>EL::UnitTestAlg1</scope><name>histInitialize</name></member>
      <member refid="d5/da0/classEL_1_1UnitTestAlg1_1a1df50f98d547f09320aa6d2494ab3b74" prot="private" virt="virtual"><scope>EL::UnitTestAlg1</scope><name>initialize</name></member>
      <member refid="d5/da0/classEL_1_1UnitTestAlg1_1a569ed2383cbcd41ec90ca685e9ce5241" prot="private" virt="non-virtual"><scope>EL::UnitTestAlg1</scope><name>m_branch</name></member>
      <member refid="d5/da0/classEL_1_1UnitTestAlg1_1afafb3835a33d429c17ff0a644e6f2314" prot="private" virt="non-virtual"><scope>EL::UnitTestAlg1</scope><name>m_callbacks</name></member>
      <member refid="d5/da0/classEL_1_1UnitTestAlg1_1a5234f0dc4aec77c542ec50e7fb019c91" prot="private" virt="non-virtual"><scope>EL::UnitTestAlg1</scope><name>m_calls</name></member>
      <member refid="d5/da0/classEL_1_1UnitTestAlg1_1a433e7fa22cdc8b2d9b2c594585cb843f" prot="private" virt="non-virtual"><scope>EL::UnitTestAlg1</scope><name>m_fileName</name></member>
      <member refid="d5/da0/classEL_1_1UnitTestAlg1_1a280825862d3cd75f7aaf2792dc067bbf" prot="private" virt="non-virtual"><scope>EL::UnitTestAlg1</scope><name>m_hasHistInitialize</name></member>
      <member refid="d5/da0/classEL_1_1UnitTestAlg1_1a4af22782b90ea192285e849ef81a7e7d" prot="private" virt="non-virtual"><scope>EL::UnitTestAlg1</scope><name>m_hasInitialize</name></member>
      <member refid="d5/da0/classEL_1_1UnitTestAlg1_1ad411f33f49df75a6461d4f06996388ac" prot="private" virt="non-virtual"><scope>EL::UnitTestAlg1</scope><name>m_name</name></member>
      <member refid="d5/da0/classEL_1_1UnitTestAlg1_1a623760f4ab8a222376ee2098e0c1b57d" prot="private" virt="non-virtual"><scope>EL::UnitTestAlg1</scope><name>m_tree</name></member>
      <member refid="d5/da0/classEL_1_1UnitTestAlg1_1a5bb5b6b61ee76c6345eb690e2dafd0ce" prot="private" virt="non-virtual"><scope>EL::UnitTestAlg1</scope><name>m_value</name></member>
      <member refid="d5/da0/classEL_1_1UnitTestAlg1_1aa5de81ca804a6454961c6a97bc63b7d2" prot="public" virt="non-virtual"><scope>EL::UnitTestAlg1</scope><name>makeOutput</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1a468b0314089506f2c36445cfc84f673b" prot="public" virt="non-virtual"><scope>EL::UnitTestAlg1</scope><name>msg</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1a6d3345f2effc1ea5b8add736df764ca7" prot="public" virt="non-virtual"><scope>EL::UnitTestAlg1</scope><name>msg</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1ad89c787f00a88c7b51a23a4a397f5c05" prot="public" virt="non-virtual"><scope>EL::UnitTestAlg1</scope><name>msgLvl</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1a767c1725616f14d347b79002d755bf55" prot="public" virt="non-virtual"><scope>EL::UnitTestAlg1</scope><name>setMsgLevel</name></member>
      <member refid="d5/da0/classEL_1_1UnitTestAlg1_1abd1e808b6023d62ea932d1d50918833e" prot="private" virt="virtual"><scope>EL::UnitTestAlg1</scope><name>setupJob</name></member>
      <member refid="d5/da0/classEL_1_1UnitTestAlg1_1a7d0d93e5150738b4d2694ad118a56b4c" prot="public" virt="non-virtual"><scope>EL::UnitTestAlg1</scope><name>testInvariant</name></member>
      <member refid="d5/da0/classEL_1_1UnitTestAlg1_1ad36cd9122e9d6d74fe35ee3d2e5eede3" prot="public" virt="non-virtual"><scope>EL::UnitTestAlg1</scope><name>UnitTestAlg1</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1a36e05186cb50cc0e5929121d3f6b6053" prot="public" virt="non-virtual"><scope>EL::UnitTestAlg1</scope><name>wk</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1a6d787a867dbe55af8241032c7b4aabf4" prot="public" virt="non-virtual"><scope>EL::UnitTestAlg1</scope><name>~Algorithm</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
