<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d5/d94/AsgExampleTools_2test_2gt__AnaToolHandle__test_8cxx" kind="file">
    <compoundname>gt_AnaToolHandle_test.cxx</compoundname>
    <includes refid="de/dc4/AnaToolHandle_8h" local="no">AsgTools/AnaToolHandle.h</includes>
    <includes refid="d6/dab/AsgTools_2AsgTools_2MessageCheck_8h" local="no">AsgTools/MessageCheck.h</includes>
    <includes refid="d0/d72/AsgTools_2AsgTools_2UnitTest_8h" local="no">AsgTools/UnitTest.h</includes>
    <includes refid="d6/d84/UnitTestTool1_8h" local="no">AsgExampleTools/UnitTestTool1.h</includes>
    <includes refid="da/d62/UnitTestTool2_8h" local="no">AsgExampleTools/UnitTestTool2.h</includes>
    <includes refid="d2/d5e/UnitTestTool3_8h" local="no">AsgExampleTools/UnitTestTool3.h</includes>
    <includes local="no">cmath</includes>
    <includes refid="d8/d73/gtest_8h" local="no">gtest/gtest.h</includes>
    <includes local="no">sstream</includes>
    <incdepgraph>
      <node id="3732">
        <label>sys/stat.h</label>
      </node>
      <node id="3711">
        <label>list</label>
      </node>
      <node id="3710">
        <label>atomic</label>
      </node>
      <node id="3700">
        <label>AsgTools/IAsgTool.h</label>
        <link refid="df/dd4/IAsgTool_8h_source"/>
        <childnode refid="3701" relation="include">
        </childnode>
        <childnode refid="3699" relation="include">
        </childnode>
        <childnode refid="3702" relation="include">
        </childnode>
        <childnode refid="3703" relation="include">
        </childnode>
      </node>
      <node id="3758">
        <label>gtest/gtest-printers.h</label>
        <link refid="d0/d6d/gtest-printers_8h_source"/>
        <childnode refid="3722" relation="include">
        </childnode>
        <childnode refid="3735" relation="include">
        </childnode>
        <childnode refid="3701" relation="include">
        </childnode>
        <childnode refid="3736" relation="include">
        </childnode>
        <childnode refid="3723" relation="include">
        </childnode>
        <childnode refid="3725" relation="include">
        </childnode>
        <childnode refid="3724" relation="include">
        </childnode>
        <childnode refid="3759" relation="include">
        </childnode>
      </node>
      <node id="3764">
        <label>gtest/gtest-typed-test.h</label>
        <link refid="de/dce/gtest-typed-test_8h_source"/>
        <childnode refid="3725" relation="include">
        </childnode>
        <childnode refid="3750" relation="include">
        </childnode>
      </node>
      <node id="3771">
        <label>AsgExampleTools/IUnitTestTool3.h</label>
        <link refid="db/d32/IUnitTestTool3_8h_source"/>
        <childnode refid="3700" relation="include">
        </childnode>
      </node>
      <node id="3754">
        <label>gtest/internal/gtest-param-util.h</label>
        <link refid="dc/df2/gtest-param-util_8h_source"/>
        <childnode refid="3726" relation="include">
        </childnode>
        <childnode refid="3755" relation="include">
        </childnode>
        <childnode refid="3746" relation="include">
        </childnode>
        <childnode refid="3736" relation="include">
        </childnode>
        <childnode refid="3723" relation="include">
        </childnode>
        <childnode refid="3724" relation="include">
        </childnode>
        <childnode refid="3756" relation="include">
        </childnode>
        <childnode refid="3725" relation="include">
        </childnode>
        <childnode refid="3758" relation="include">
        </childnode>
      </node>
      <node id="3765">
        <label>gtest/gtest_pred_impl.h</label>
        <link refid="db/d6e/gtest__pred__impl_8h_source"/>
      </node>
      <node id="3745">
        <label>iomanip</label>
      </node>
      <node id="3721">
        <label>limits</label>
      </node>
      <node id="3759">
        <label>gtest/internal/custom/gtest-printers.h</label>
        <link refid="da/db0/internal_2custom_2gtest-printers_8h_source"/>
      </node>
      <node id="3703">
        <label>GaudiKernel/IAlgTool.h</label>
      </node>
      <node id="3707">
        <label>AsgTools/Deprecated.h</label>
        <link refid="d4/d77/AsgTools_2AsgTools_2Deprecated_8h_source"/>
      </node>
      <node id="3757">
        <label>assert.h</label>
      </node>
      <node id="3755">
        <label>iterator</label>
      </node>
      <node id="3744">
        <label>float.h</label>
      </node>
      <node id="3766">
        <label>AsgExampleTools/UnitTestTool1.h</label>
        <link refid="d6/d84/UnitTestTool1_8h_source"/>
        <childnode refid="3698" relation="include">
        </childnode>
        <childnode refid="3767" relation="include">
        </childnode>
      </node>
      <node id="3724">
        <label>gtest/internal/gtest-internal.h</label>
        <link refid="d5/da1/gtest-internal_8h_source"/>
        <childnode refid="3725" relation="include">
        </childnode>
        <childnode refid="3726" relation="include">
        </childnode>
        <childnode refid="3744" relation="include">
        </childnode>
        <childnode refid="3730" relation="include">
        </childnode>
        <childnode refid="3745" relation="include">
        </childnode>
        <childnode refid="3721" relation="include">
        </childnode>
        <childnode refid="3712" relation="include">
        </childnode>
        <childnode refid="3746" relation="include">
        </childnode>
        <childnode refid="3701" relation="include">
        </childnode>
        <childnode refid="3723" relation="include">
        </childnode>
        <childnode refid="3747" relation="include">
        </childnode>
        <childnode refid="3748" relation="include">
        </childnode>
        <childnode refid="3749" relation="include">
        </childnode>
        <childnode refid="3750" relation="include">
        </childnode>
      </node>
      <node id="3716">
        <label>xAODRootAccess/tools/TReturnCode.h</label>
        <link refid="df/d0a/TReturnCode_8h_source"/>
      </node>
      <node id="3728">
        <label>stdlib.h</label>
      </node>
      <node id="3718">
        <label>AsgTools/UnitTest.h</label>
        <link refid="d0/d72/AsgTools_2AsgTools_2UnitTest_8h_source"/>
        <childnode refid="3714" relation="include">
        </childnode>
        <childnode refid="3701" relation="include">
        </childnode>
        <childnode refid="3719" relation="include">
        </childnode>
        <childnode refid="3720" relation="include">
        </childnode>
      </node>
      <node id="3772">
        <label>cmath</label>
      </node>
      <node id="3704">
        <label>AsgTools/MsgLevel.h</label>
        <link refid="de/d80/MsgLevel_8h"/>
        <childnode refid="3701" relation="include">
        </childnode>
        <childnode refid="3699" relation="include">
        </childnode>
        <childnode refid="3705" relation="include">
        </childnode>
      </node>
      <node id="3699">
        <label>AsgTools/AsgToolsConf.h</label>
        <link refid="df/db7/AsgToolsConf_8h_source"/>
      </node>
      <node id="3701">
        <label>string</label>
      </node>
      <node id="3769">
        <label>AsgExampleTools/IUnitTestTool2.h</label>
        <link refid="dc/d17/IUnitTestTool2_8h_source"/>
        <childnode refid="3700" relation="include">
        </childnode>
      </node>
      <node id="3712">
        <label>map</label>
      </node>
      <node id="3717">
        <label>AthenaBaseComps/AthMessaging.h</label>
      </node>
      <node id="3697">
        <label>AsgTools/AnaToolHandle.h</label>
        <link refid="de/dc4/AnaToolHandle_8h_source"/>
        <childnode refid="3698" relation="include">
        </childnode>
        <childnode refid="3707" relation="include">
        </childnode>
        <childnode refid="3708" relation="include">
        </childnode>
        <childnode refid="3710" relation="include">
        </childnode>
        <childnode refid="3711" relation="include">
        </childnode>
        <childnode refid="3712" relation="include">
        </childnode>
        <childnode refid="3713" relation="include">
        </childnode>
      </node>
      <node id="3768">
        <label>AsgExampleTools/UnitTestTool2.h</label>
        <link refid="da/d62/UnitTestTool2_8h_source"/>
        <childnode refid="3697" relation="include">
        </childnode>
        <childnode refid="3698" relation="include">
        </childnode>
        <childnode refid="3769" relation="include">
        </childnode>
      </node>
      <node id="3719">
        <label>exception</label>
      </node>
      <node id="3760">
        <label>gtest/internal/gtest-param-util-generated.h</label>
        <link refid="dc/db7/gtest-param-util-generated_8h_source"/>
        <childnode refid="3754" relation="include">
        </childnode>
        <childnode refid="3725" relation="include">
        </childnode>
      </node>
      <node id="3727">
        <label>stddef.h</label>
      </node>
      <node id="3743">
        <label>gtest/internal/gtest-tuple.h</label>
        <link refid="d1/d63/gtest-tuple_8h_source"/>
        <childnode refid="3736" relation="include">
        </childnode>
      </node>
      <node id="3751">
        <label>gtest/gtest-death-test.h</label>
        <link refid="d4/d59/gtest-death-test_8h_source"/>
        <childnode refid="3752" relation="include">
        </childnode>
      </node>
      <node id="3722">
        <label>ostream</label>
      </node>
      <node id="3705">
        <label>GaudiKernel/IMessageSvc.h</label>
      </node>
      <node id="3753">
        <label>gtest/gtest-param-test.h</label>
        <link refid="d0/d31/gtest-param-test_8h_source"/>
        <childnode refid="3725" relation="include">
        </childnode>
        <childnode refid="3736" relation="include">
        </childnode>
        <childnode refid="3724" relation="include">
        </childnode>
        <childnode refid="3754" relation="include">
        </childnode>
        <childnode refid="3760" relation="include">
        </childnode>
      </node>
      <node id="3761">
        <label>gtest/gtest_prod.h</label>
        <link refid="d4/db1/gtest__prod_8h_source"/>
      </node>
      <node id="3709">
        <label>GaudiKernel/ToolHandle.h</label>
      </node>
      <node id="3731">
        <label>sys/types.h</label>
      </node>
      <node id="3749">
        <label>gtest/internal/gtest-filepath.h</label>
        <link refid="dc/d79/gtest-filepath_8h_source"/>
        <childnode refid="3748" relation="include">
        </childnode>
      </node>
      <node id="3730">
        <label>string.h</label>
      </node>
      <node id="3742">
        <label>typeinfo</label>
      </node>
      <node id="3714">
        <label>AsgTools/MessageCheck.h</label>
        <link refid="d6/dab/AsgTools_2AsgTools_2MessageCheck_8h_source"/>
        <childnode refid="3715" relation="include">
        </childnode>
        <childnode refid="3716" relation="include">
        </childnode>
        <childnode refid="3717" relation="include">
        </childnode>
      </node>
      <node id="3767">
        <label>AsgExampleTools/IUnitTestTool1.h</label>
        <link refid="d1/d21/IUnitTestTool1_8h_source"/>
        <childnode refid="3700" relation="include">
        </childnode>
      </node>
      <node id="3747">
        <label>gtest/gtest-message.h</label>
        <link refid="d6/da4/gtest-message_8h_source"/>
        <childnode refid="3721" relation="include">
        </childnode>
        <childnode refid="3725" relation="include">
        </childnode>
      </node>
      <node id="3739">
        <label>unistd.h</label>
      </node>
      <node id="3723">
        <label>vector</label>
      </node>
      <node id="3770">
        <label>AsgExampleTools/UnitTestTool3.h</label>
        <link refid="d2/d5e/UnitTestTool3_8h_source"/>
        <childnode refid="3697" relation="include">
        </childnode>
        <childnode refid="3698" relation="include">
        </childnode>
        <childnode refid="3771" relation="include">
        </childnode>
      </node>
      <node id="3738">
        <label>gtest/internal/custom/gtest-port.h</label>
        <link refid="d5/d66/custom_2gtest-port_8h_source"/>
      </node>
      <node id="3736">
        <label>utility</label>
      </node>
      <node id="3756">
        <label>gtest/internal/gtest-linked_ptr.h</label>
        <link refid="d0/d03/gtest-linked__ptr_8h_source"/>
        <childnode refid="3728" relation="include">
        </childnode>
        <childnode refid="3757" relation="include">
        </childnode>
        <childnode refid="3725" relation="include">
        </childnode>
      </node>
      <node id="3735">
        <label>sstream</label>
      </node>
      <node id="3720">
        <label>gtest/gtest.h</label>
        <link refid="d8/d73/gtest_8h_source"/>
        <childnode refid="3721" relation="include">
        </childnode>
        <childnode refid="3722" relation="include">
        </childnode>
        <childnode refid="3723" relation="include">
        </childnode>
        <childnode refid="3724" relation="include">
        </childnode>
        <childnode refid="3748" relation="include">
        </childnode>
        <childnode refid="3751" relation="include">
        </childnode>
        <childnode refid="3747" relation="include">
        </childnode>
        <childnode refid="3753" relation="include">
        </childnode>
        <childnode refid="3758" relation="include">
        </childnode>
        <childnode refid="3761" relation="include">
        </childnode>
        <childnode refid="3762" relation="include">
        </childnode>
        <childnode refid="3764" relation="include">
        </childnode>
        <childnode refid="3765" relation="include">
        </childnode>
      </node>
      <node id="3696">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgExampleTools/test/gt_AnaToolHandle_test.cxx</label>
        <link refid="AsgExampleTools/test/gt_AnaToolHandle_test.cxx"/>
        <childnode refid="3697" relation="include">
        </childnode>
        <childnode refid="3714" relation="include">
        </childnode>
        <childnode refid="3718" relation="include">
        </childnode>
        <childnode refid="3766" relation="include">
        </childnode>
        <childnode refid="3768" relation="include">
        </childnode>
        <childnode refid="3770" relation="include">
        </childnode>
        <childnode refid="3772" relation="include">
        </childnode>
        <childnode refid="3720" relation="include">
        </childnode>
        <childnode refid="3735" relation="include">
        </childnode>
      </node>
      <node id="3763">
        <label>iosfwd</label>
      </node>
      <node id="3748">
        <label>gtest/internal/gtest-string.h</label>
        <link refid="d0/d45/gtest-string_8h_source"/>
        <childnode refid="3730" relation="include">
        </childnode>
        <childnode refid="3701" relation="include">
        </childnode>
        <childnode refid="3725" relation="include">
        </childnode>
      </node>
      <node id="3734">
        <label>iostream</label>
      </node>
      <node id="3708">
        <label>AsgTools/ToolHandle.h</label>
        <link refid="de/d2d/ToolHandle_8h_source"/>
        <childnode refid="3699" relation="include">
        </childnode>
        <childnode refid="3709" relation="include">
        </childnode>
      </node>
      <node id="3740">
        <label>strings.h</label>
      </node>
      <node id="3750">
        <label>gtest/internal/gtest-type-util.h</label>
        <link refid="d9/d97/gtest-type-util_8h_source"/>
        <childnode refid="3725" relation="include">
        </childnode>
      </node>
      <node id="3726">
        <label>ctype.h</label>
      </node>
      <node id="3702">
        <label>AsgTools/AsgToolMacros.h</label>
        <link refid="d1/d68/AsgToolMacros_8h_source"/>
      </node>
      <node id="3725">
        <label>gtest/internal/gtest-port.h</label>
        <link refid="d3/dc9/gtest-port_8h_source"/>
        <childnode refid="3726" relation="include">
        </childnode>
        <childnode refid="3727" relation="include">
        </childnode>
        <childnode refid="3728" relation="include">
        </childnode>
        <childnode refid="3729" relation="include">
        </childnode>
        <childnode refid="3730" relation="include">
        </childnode>
        <childnode refid="3731" relation="include">
        </childnode>
        <childnode refid="3732" relation="include">
        </childnode>
        <childnode refid="3733" relation="include">
        </childnode>
        <childnode refid="3734" relation="include">
        </childnode>
        <childnode refid="3735" relation="include">
        </childnode>
        <childnode refid="3701" relation="include">
        </childnode>
        <childnode refid="3736" relation="include">
        </childnode>
        <childnode refid="3723" relation="include">
        </childnode>
        <childnode refid="3737" relation="include">
        </childnode>
        <childnode refid="3738" relation="include">
        </childnode>
        <childnode refid="3739" relation="include">
        </childnode>
        <childnode refid="3740" relation="include">
        </childnode>
        <childnode refid="3741" relation="include">
        </childnode>
        <childnode refid="3742" relation="include">
        </childnode>
        <childnode refid="3743" relation="include">
        </childnode>
      </node>
      <node id="3713">
        <label>mutex</label>
      </node>
      <node id="3715">
        <label>type_traits</label>
      </node>
      <node id="3746">
        <label>set</label>
      </node>
      <node id="3752">
        <label>gtest/internal/gtest-death-test-internal.h</label>
        <link refid="d0/d1a/gtest-death-test-internal_8h_source"/>
        <childnode refid="3724" relation="include">
        </childnode>
        <childnode refid="3729" relation="include">
        </childnode>
      </node>
      <node id="3733">
        <label>algorithm</label>
      </node>
      <node id="3741">
        <label>regex.h</label>
      </node>
      <node id="3737">
        <label>gtest/internal/gtest-port-arch.h</label>
        <link refid="d6/d76/gtest-port-arch_8h_source"/>
      </node>
      <node id="3698">
        <label>AsgTools/AsgTool.h</label>
        <link refid="d4/d29/AsgTool_8h_source"/>
        <childnode refid="3699" relation="include">
        </childnode>
        <childnode refid="3700" relation="include">
        </childnode>
        <childnode refid="3704" relation="include">
        </childnode>
        <childnode refid="3706" relation="include">
        </childnode>
      </node>
      <node id="3729">
        <label>stdio.h</label>
      </node>
      <node id="3762">
        <label>gtest/gtest-test-part.h</label>
        <link refid="d1/d01/gtest-test-part_8h_source"/>
        <childnode refid="3763" relation="include">
        </childnode>
        <childnode refid="3723" relation="include">
        </childnode>
        <childnode refid="3724" relation="include">
        </childnode>
        <childnode refid="3748" relation="include">
        </childnode>
      </node>
      <node id="3706">
        <label>AsgTools/SetProperty.h</label>
        <link refid="df/db0/SetProperty_8h_source"/>
      </node>
    </incdepgraph>
    <innerclass refid="db/db5/classasg_1_1AnaToolHandleMakeTest" prot="public">asg::AnaToolHandleMakeTest</innerclass>
    <innerclass refid="d7/d73/classasg_1_1AnaToolHandleUseTest" prot="public">asg::AnaToolHandleUseTest</innerclass>
    <innerclass refid="d9/de2/structasg_1_1PublicAnaSubTool" prot="public">asg::PublicAnaSubTool</innerclass>
    <innerclass refid="de/d9d/structasg_1_1PrivateAnaSubTool" prot="public">asg::PrivateAnaSubTool</innerclass>
    <innerclass refid="de/d45/structasg_1_1EmptyRegSubTool" prot="public">asg::EmptyRegSubTool</innerclass>
    <innerclass refid="d7/d84/structasg_1_1InvalidSubTool" prot="public">asg::InvalidSubTool</innerclass>
    <innerclass refid="d9/d6a/structasg_1_1NamedSubTool" prot="public">asg::NamedSubTool</innerclass>
    <innernamespace refid="d1/d56/namespaceasg">asg</innernamespace>
    <innernamespace refid="d8/d16/namespaceasg_1_1msgUserCode">asg::msgUserCode</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>Iowa<sp/>State<sp/>University<sp/>2016.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>Nils<sp/>Krumnack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>(See<sp/>accompanying<sp/>file<sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Please<sp/>feel<sp/>free<sp/>to<sp/>contact<sp/>me<sp/>(nils.erik.krumnack@cern.ch)<sp/>for<sp/>bug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>reports,<sp/>feature<sp/>suggestions,<sp/>praise<sp/>and<sp/>complaints.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AsgTools/AnaToolHandle.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AsgTools/MessageCheck.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AsgTools/UnitTest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AsgExampleTools/UnitTestTool1.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AsgExampleTools/UnitTestTool2.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AsgExampleTools/UnitTestTool3.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtest/gtest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wdeprecated-declarations&quot;</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>method<sp/>implementations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">asg::msgUserCode;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">asg</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>makeUniqueName<sp/>()</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>str;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;unique&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>++<sp/>index;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str.str();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="db/db5/classasg_1_1AnaToolHandleMakeTest" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="db/db5/classasg_1_1AnaToolHandleMakeTest" kindref="compound" tooltip="fixture for all tests that do things before a tool is made">AnaToolHandleMakeTest</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>::testing::Test</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/db5/classasg_1_1AnaToolHandleMakeTest" kindref="compound" tooltip="fixture for all tests that do things before a tool is made">AnaToolHandleMakeTest</ref>()</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>name<sp/>(makeUniqueName()),</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>tool<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1/&quot;</highlight><highlight class="normal"><sp/>+<sp/>name)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool1&gt;<sp/>tool;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="d7/d73/classasg_1_1AnaToolHandleUseTest" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d7/d73/classasg_1_1AnaToolHandleUseTest" kindref="compound" tooltip="fixture for all tests that do things after a tool is initialized">AnaToolHandleUseTest</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="db/db5/classasg_1_1AnaToolHandleMakeTest" kindref="compound" tooltip="fixture for all tests that do things before a tool is made">AnaToolHandleMakeTest</ref></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d73/classasg_1_1AnaToolHandleUseTest" kindref="compound" tooltip="fixture for all tests that do things after a tool is initialized">AnaToolHandleUseTest</ref>()</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK_THROW<sp/>(tool.initialize());</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>we<sp/>can<sp/>create<sp/>and<sp/>initialize<sp/>a<sp/>simple<sp/>tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>TEST<sp/>(AnaToolHandleTest,<sp/>basic1)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool1&gt;<sp/>tool<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1/&quot;</highlight><highlight class="normal"><sp/>+<sp/>makeUniqueName());</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE<sp/>(tool.isUserConfigured());</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE<sp/>(tool.isConfigurable());</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.make());</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE<sp/>(tool.isUserConfigured());</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE<sp/>(tool.isConfigurable());</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.initialize());</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE<sp/>(tool.isUserConfigured());</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE<sp/>(tool.isConfigurable());</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE<sp/>(tool.get()<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ROOTCORE</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>tool<sp/>destruction<sp/>works<sp/>as<sp/>advertised<sp/>for<sp/>tools</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>TEST<sp/>(AnaToolHandleTest,<sp/>DISABLED_destruct_direct)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>myname;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ToolHandle&lt;IUnitTestTool1&gt;<sp/>tool<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1/&quot;</highlight><highlight class="normal"><sp/>+<sp/>makeUniqueName());</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.retrieve());</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>myname<sp/>=<sp/>tool-&gt;name();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ<sp/>(2u,<sp/>tool-&gt;refCount());</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ<sp/>(1,<sp/><ref refid="dd/dff/structasg_1_1UnitTestTool1_1ad47acee21b2f1c6e332767c9e6ff3c40" kindref="member" tooltip="the number of times the tool of the given name has been instantiated">UnitTestTool1::instance_counts</ref>(myname));</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tool-&gt;release();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ<sp/>(1,<sp/><ref refid="dd/dff/structasg_1_1UnitTestTool1_1ad47acee21b2f1c6e332767c9e6ff3c40" kindref="member" tooltip="the number of times the tool of the given name has been instantiated">UnitTestTool1::instance_counts</ref>(myname));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tool.release();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ<sp/>(0,<sp/><ref refid="dd/dff/structasg_1_1UnitTestTool1_1ad47acee21b2f1c6e332767c9e6ff3c40" kindref="member" tooltip="the number of times the tool of the given name has been instantiated">UnitTestTool1::instance_counts</ref>(myname));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>interfaceType_t<sp/>*tool<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE<sp/>(detail::toolExists<sp/>(myname,<sp/>tool));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="120"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>tool<sp/>destruction<sp/>works<sp/>as<sp/>advertised<sp/>for<sp/>public<sp/>tools</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ROOTCORE</highlight></codeline>
<codeline lineno="125"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>TEST<sp/>(AnaToolHandleTest,<sp/>destruct_public)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="127"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>TEST<sp/>(AnaToolHandleTest,<sp/>DISABLED_destruct_public)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="129"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>myname;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool1&gt;<sp/>tool<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1/&quot;</highlight><highlight class="normal"><sp/>+<sp/>makeUniqueName());</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.initialize());</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>myname<sp/>=<sp/>tool-&gt;name();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ<sp/>(1,<sp/><ref refid="dd/dff/structasg_1_1UnitTestTool1_1ad47acee21b2f1c6e332767c9e6ff3c40" kindref="member" tooltip="the number of times the tool of the given name has been instantiated">UnitTestTool1::instance_counts</ref>(myname));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ<sp/>(0,<sp/><ref refid="dd/dff/structasg_1_1UnitTestTool1_1ad47acee21b2f1c6e332767c9e6ff3c40" kindref="member" tooltip="the number of times the tool of the given name has been instantiated">UnitTestTool1::instance_counts</ref>(myname));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>tool<sp/>destruction<sp/>works<sp/>as<sp/>advertised<sp/>for<sp/>private<sp/>tools</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ROOTCORE</highlight></codeline>
<codeline lineno="143"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>TEST<sp/>(AnaToolHandleTest,<sp/>destruct_private)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="145"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>TEST<sp/>(AnaToolHandleTest,<sp/>DISABLED_destruct_private)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="147"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>myname;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;UnitTestTool1&gt;<sp/>parent<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>UnitTestTool1<sp/>(makeUniqueName()));</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool1&gt;<sp/>tool<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1/&quot;</highlight><highlight class="normal"><sp/>+<sp/>makeUniqueName(),<sp/>parent.get());</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.initialize());</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>myname<sp/>=<sp/>tool-&gt;name();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ<sp/>(1,<sp/><ref refid="dd/dff/structasg_1_1UnitTestTool1_1ad47acee21b2f1c6e332767c9e6ff3c40" kindref="member" tooltip="the number of times the tool of the given name has been instantiated">UnitTestTool1::instance_counts</ref>(myname));</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ<sp/>(0,<sp/><ref refid="dd/dff/structasg_1_1UnitTestTool1_1ad47acee21b2f1c6e332767c9e6ff3c40" kindref="member" tooltip="the number of times the tool of the given name has been instantiated">UnitTestTool1::instance_counts</ref>(myname));</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>tool<sp/>destruction<sp/>works<sp/>as<sp/>advertised<sp/>with<sp/>copy<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ROOTCORE</highlight></codeline>
<codeline lineno="161"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>TEST<sp/>(AnaToolHandleTest,<sp/>copy_destruct)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="163"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>TEST<sp/>(AnaToolHandleTest,<sp/>DISABLED_copy_destruct)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="165"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/>makeUniqueName();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ<sp/>(0,<sp/><ref refid="dd/dff/structasg_1_1UnitTestTool1_1ad47acee21b2f1c6e332767c9e6ff3c40" kindref="member" tooltip="the number of times the tool of the given name has been instantiated">UnitTestTool1::instance_counts</ref>(name));</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool1&gt;<sp/>tool<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1/&quot;</highlight><highlight class="normal"><sp/>+<sp/>name);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.initialize());</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>tool-&gt;name();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ<sp/>(1,<sp/><ref refid="dd/dff/structasg_1_1UnitTestTool1_1ad47acee21b2f1c6e332767c9e6ff3c40" kindref="member" tooltip="the number of times the tool of the given name has been instantiated">UnitTestTool1::instance_counts</ref>(name));</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool1&gt;<sp/>tool2<sp/>=<sp/>tool;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ<sp/>(1,<sp/><ref refid="dd/dff/structasg_1_1UnitTestTool1_1ad47acee21b2f1c6e332767c9e6ff3c40" kindref="member" tooltip="the number of times the tool of the given name has been instantiated">UnitTestTool1::instance_counts</ref>(name));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ<sp/>(0,<sp/><ref refid="dd/dff/structasg_1_1UnitTestTool1_1ad47acee21b2f1c6e332767c9e6ff3c40" kindref="member" tooltip="the number of times the tool of the given name has been instantiated">UnitTestTool1::instance_counts</ref>(name));</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>tool<sp/>destruction<sp/>works<sp/>as<sp/>advertised<sp/>with<sp/>assignment<sp/>operator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ROOTCORE</highlight></codeline>
<codeline lineno="181"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>TEST<sp/>(AnaToolHandleTest,<sp/>assign_destruct)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="183"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>TEST<sp/>(AnaToolHandleTest,<sp/>DISABLED_assign_destruct)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="185"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/>makeUniqueName();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ<sp/>(0,<sp/><ref refid="dd/dff/structasg_1_1UnitTestTool1_1ad47acee21b2f1c6e332767c9e6ff3c40" kindref="member" tooltip="the number of times the tool of the given name has been instantiated">UnitTestTool1::instance_counts</ref>(name));</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool1&gt;<sp/>tool<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1/&quot;</highlight><highlight class="normal"><sp/>+<sp/>name);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.initialize());</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>tool-&gt;name();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ<sp/>(1,<sp/><ref refid="dd/dff/structasg_1_1UnitTestTool1_1ad47acee21b2f1c6e332767c9e6ff3c40" kindref="member" tooltip="the number of times the tool of the given name has been instantiated">UnitTestTool1::instance_counts</ref>(name));</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool1&gt;<sp/>tool2;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tool2<sp/>=<sp/>tool;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ<sp/>(1,<sp/><ref refid="dd/dff/structasg_1_1UnitTestTool1_1ad47acee21b2f1c6e332767c9e6ff3c40" kindref="member" tooltip="the number of times the tool of the given name has been instantiated">UnitTestTool1::instance_counts</ref>(name));</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ<sp/>(0,<sp/><ref refid="dd/dff/structasg_1_1UnitTestTool1_1ad47acee21b2f1c6e332767c9e6ff3c40" kindref="member" tooltip="the number of times the tool of the given name has been instantiated">UnitTestTool1::instance_counts</ref>(name));</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>tool<sp/>destruction<sp/>works<sp/>as<sp/>advertised<sp/>with<sp/>swap<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>that<sp/>this<sp/>swaps<sp/>twice,<sp/>as<sp/>there<sp/>may<sp/>be<sp/>a<sp/>difference<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>swapping<sp/>to<sp/>and<sp/>from<sp/>a<sp/>valid<sp/>handle<sp/>(due<sp/>to<sp/>the<sp/>specifics<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Athena<sp/>ToolHandle)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ROOTCORE</highlight></codeline>
<codeline lineno="206"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>TEST<sp/>(AnaToolHandleTest,<sp/>swap_destruct)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="208"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>TEST<sp/>(AnaToolHandleTest,<sp/>DISABLED_swap_destruct)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="210"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/>makeUniqueName();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ<sp/>(0,<sp/><ref refid="dd/dff/structasg_1_1UnitTestTool1_1ad47acee21b2f1c6e332767c9e6ff3c40" kindref="member" tooltip="the number of times the tool of the given name has been instantiated">UnitTestTool1::instance_counts</ref>(name));</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool1&gt;<sp/>tool<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1/&quot;</highlight><highlight class="normal"><sp/>+<sp/>name);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.initialize());</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>tool-&gt;name();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ<sp/>(1,<sp/><ref refid="dd/dff/structasg_1_1UnitTestTool1_1ad47acee21b2f1c6e332767c9e6ff3c40" kindref="member" tooltip="the number of times the tool of the given name has been instantiated">UnitTestTool1::instance_counts</ref>(name));</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool1&gt;<sp/>tool2;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tool2.swap<sp/>(tool);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ<sp/>(1,<sp/><ref refid="dd/dff/structasg_1_1UnitTestTool1_1ad47acee21b2f1c6e332767c9e6ff3c40" kindref="member" tooltip="the number of times the tool of the given name has been instantiated">UnitTestTool1::instance_counts</ref>(name));</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tool2.swap<sp/>(tool);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ<sp/>(1,<sp/><ref refid="dd/dff/structasg_1_1UnitTestTool1_1ad47acee21b2f1c6e332767c9e6ff3c40" kindref="member" tooltip="the number of times the tool of the given name has been instantiated">UnitTestTool1::instance_counts</ref>(name));</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ<sp/>(0,<sp/><ref refid="dd/dff/structasg_1_1UnitTestTool1_1ad47acee21b2f1c6e332767c9e6ff3c40" kindref="member" tooltip="the number of times the tool of the given name has been instantiated">UnitTestTool1::instance_counts</ref>(name));</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>we<sp/>can<sp/>create<sp/>and<sp/>initialize<sp/>a<sp/>simple<sp/>tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>TEST<sp/>(AnaToolHandleTest,<sp/>basic2)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool2&gt;<sp/>tool<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool2/&quot;</highlight><highlight class="normal"><sp/>+<sp/>makeUniqueName());</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE<sp/>(tool.isUserConfigured());</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE<sp/>(tool.isConfigurable());</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.make());</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.initialize());</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE<sp/>(tool.get()<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>the<sp/>isInitialized<sp/>member<sp/>works<sp/>as<sp/>advertised</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>TEST<sp/>(AnaToolHandleTest,<sp/>isInitialized)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool1&gt;<sp/>tool<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1/&quot;</highlight><highlight class="normal"><sp/>+<sp/>makeUniqueName());</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE<sp/>(tool.isInitialized());</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.make());</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE<sp/>(tool.isInitialized());</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.initialize());</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE<sp/>(tool.isInitialized());</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool1&gt;<sp/>tool2<sp/>=<sp/>std::move<sp/>(tool);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE<sp/>(tool.isInitialized());</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>make()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>TEST_F<sp/>(AnaToolHandleMakeTest,<sp/>makeBasic)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.make());</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE<sp/>(tool.isInitialized());</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.initialize());</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1&quot;</highlight><highlight class="normal">,<sp/>tool.type());</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_MATCH_REGEX<sp/>(</highlight><highlight class="stringliteral">&quot;^(ToolSvc.)?&quot;</highlight><highlight class="normal"><sp/>+<sp/>tool.name()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">,<sp/>tool-&gt;name());</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>make(),<sp/>with<sp/>no<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>TEST<sp/>(AnaToolHandleTest,<sp/>makeBasic_noType)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool1&gt;<sp/>tool<sp/>(makeUniqueName());</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE<sp/>(tool.isUserConfigured<sp/>());</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FAILURE<sp/>(tool.initialize<sp/>());</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>make(),<sp/>with<sp/>an<sp/>invalid<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>TEST<sp/>(AnaToolHandleTest,<sp/>makeBasic_undefinedType)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool1&gt;<sp/>tool<sp/>(</highlight><highlight class="stringliteral">&quot;UNKNOWN_TOOL_TYPE/&quot;</highlight><highlight class="normal"><sp/>+<sp/>makeUniqueName());</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.make<sp/>());</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FAILURE<sp/>(tool.initialize<sp/>());</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>make(type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>TEST<sp/>(AnaToolHandleTest,<sp/>makeTyped)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>making<sp/>separate<sp/>ToolHandle<sp/>with<sp/>different<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool1&gt;<sp/>tool<sp/>(</highlight><highlight class="stringliteral">&quot;UNKNOWN_TOOL_TYPE/&quot;</highlight><highlight class="normal"><sp/>+<sp/>makeUniqueName());</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ<sp/>(</highlight><highlight class="stringliteral">&quot;UNKNOWN_TOOL_TYPE&quot;</highlight><highlight class="normal">,<sp/>tool.type());</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.make<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1&quot;</highlight><highlight class="normal">,<sp/>tool.type());</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE<sp/>(tool.isInitialized());</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.initialize());</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_MATCH_REGEX<sp/>(</highlight><highlight class="stringliteral">&quot;^(ToolSvc.)?&quot;</highlight><highlight class="normal"><sp/>+<sp/>tool.name()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">,<sp/>tool-&gt;name());</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>make(type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>TEST<sp/>(AnaToolHandleTest,<sp/>makeTyped_named)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>making<sp/>separate<sp/>ToolHandle<sp/>with<sp/>different<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool1&gt;<sp/>tool<sp/>(</highlight><highlight class="stringliteral">&quot;UNKNOWN_TOOL_TYPE/UNKNOWN_TOOL_NAME&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ<sp/>(</highlight><highlight class="stringliteral">&quot;UNKNOWN_TOOL_TYPE&quot;</highlight><highlight class="normal">,<sp/>tool.type());</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ<sp/>(</highlight><highlight class="stringliteral">&quot;UNKNOWN_TOOL_NAME&quot;</highlight><highlight class="normal">,<sp/>tool.name());</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/>makeUniqueName();</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.make<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1/&quot;</highlight><highlight class="normal"><sp/>+<sp/>name));</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1&quot;</highlight><highlight class="normal">,<sp/>tool.type());</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_MATCH_REGEX<sp/>(</highlight><highlight class="stringliteral">&quot;^(ToolSvc.)?&quot;</highlight><highlight class="normal"><sp/>+<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">,<sp/>tool.name());</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE<sp/>(tool.isInitialized());</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.initialize());</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_MATCH_REGEX<sp/>(</highlight><highlight class="stringliteral">&quot;^(ToolSvc.)?&quot;</highlight><highlight class="normal"><sp/>+<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">,<sp/>tool-&gt;name());</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>we<sp/>can<sp/>fail<sp/>tocreate<sp/>and<sp/>initialize<sp/>a<sp/>simple<sp/>tool<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>passing<sp/>an<sp/>unknown<sp/>typename<sp/>as<sp/>argument<sp/>into<sp/>make()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>TEST_F<sp/>(AnaToolHandleMakeTest,<sp/>makeTyped_unknownType)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.make<sp/>(</highlight><highlight class="stringliteral">&quot;UNDEFINED_TYPE_NAME&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FAILURE<sp/>(tool.initialize<sp/>());</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NDEBUG</highlight></codeline>
<codeline lineno="321"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>make(type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>TEST_F<sp/>(AnaToolHandleUseTest,<sp/>makeTyped)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_DEATH<sp/>(tool.make<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="327"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ROOTCORE</highlight></codeline>
<codeline lineno="331"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>makeNew&lt;type&gt;()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>TEST<sp/>(AnaToolHandleTest,<sp/>makeNew)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>making<sp/>separate<sp/>ToolHandle<sp/>with<sp/>different<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/>makeUniqueName();</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool1&gt;<sp/>tool<sp/>(</highlight><highlight class="stringliteral">&quot;UNKNOWN_TOOL_TYPE/&quot;</highlight><highlight class="normal"><sp/>+<sp/>name);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ<sp/>(</highlight><highlight class="stringliteral">&quot;UNKNOWN_TOOL_TYPE&quot;</highlight><highlight class="normal">,<sp/>tool.type());</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.makeNew&lt;<ref refid="dd/dff/structasg_1_1UnitTestTool1" kindref="compound" tooltip="a tool used to unit test AnaToolHandle">asg::UnitTestTool1</ref>&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1&quot;</highlight><highlight class="normal">,<sp/>tool.type());</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE<sp/>(tool.isInitialized());</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.initialize());</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_MATCH_REGEX<sp/>(</highlight><highlight class="stringliteral">&quot;^(ToolSvc.)?&quot;</highlight><highlight class="normal"><sp/>+<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">,<sp/>tool-&gt;name());</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>makeNew&lt;type&gt;()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>TEST_F<sp/>(AnaToolHandleUseTest,<sp/>makeNew)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_DEATH<sp/>(tool.makeNew&lt;<ref refid="dd/dff/structasg_1_1UnitTestTool1" kindref="compound" tooltip="a tool used to unit test AnaToolHandle">asg::UnitTestTool1</ref>&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="351"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>ASG_SET_ANA_TOOL_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>TEST<sp/>(AnaToolHandleTest,<sp/>setToolTypeMacro)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>making<sp/>separate<sp/>ToolHandle<sp/>with<sp/>different<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/>makeUniqueName();</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool1&gt;<sp/>tool<sp/>(</highlight><highlight class="stringliteral">&quot;UNKNOWN_TOOL_TYPE/&quot;</highlight><highlight class="normal"><sp/>+<sp/>name);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ<sp/>(</highlight><highlight class="stringliteral">&quot;UNKNOWN_TOOL_TYPE&quot;</highlight><highlight class="normal">,<sp/>tool.type());</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>ASG_SET_ANA_TOOL_TYPE<sp/>(tool,<sp/><ref refid="dd/dff/structasg_1_1UnitTestTool1" kindref="compound" tooltip="a tool used to unit test AnaToolHandle">asg::UnitTestTool1</ref>);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1&quot;</highlight><highlight class="normal">,<sp/>tool.type());</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE<sp/>(tool.isInitialized());</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.initialize());</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_MATCH_REGEX<sp/>(</highlight><highlight class="stringliteral">&quot;^(ToolSvc.)?&quot;</highlight><highlight class="normal"><sp/>+<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">,<sp/>tool-&gt;name());</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>ASG_MAKE_ANA_TOOL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>TEST<sp/>(AnaToolHandleTest,<sp/>makeMacro)</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>making<sp/>separate<sp/>ToolHandle<sp/>with<sp/>different<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/>makeUniqueName();</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool1&gt;<sp/>tool<sp/>(</highlight><highlight class="stringliteral">&quot;UNKNOWN_TOOL_TYPE/&quot;</highlight><highlight class="normal"><sp/>+<sp/>name);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ<sp/>(</highlight><highlight class="stringliteral">&quot;UNKNOWN_TOOL_TYPE&quot;</highlight><highlight class="normal">,<sp/>tool.type());</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(ASG_MAKE_ANA_TOOL<sp/>(tool,<sp/><ref refid="dd/dff/structasg_1_1UnitTestTool1" kindref="compound" tooltip="a tool used to unit test AnaToolHandle">asg::UnitTestTool1</ref>));</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1&quot;</highlight><highlight class="normal">,<sp/>tool.type());</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE<sp/>(tool.isInitialized());</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.initialize());</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_MATCH_REGEX<sp/>(</highlight><highlight class="stringliteral">&quot;^(ToolSvc.)?&quot;</highlight><highlight class="normal"><sp/>+<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">,<sp/>tool-&gt;name());</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NDEBUG</highlight></codeline>
<codeline lineno="385"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>ASG_MAKE_ANA_TOOL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>TEST_F<sp/>(AnaToolHandleUseTest,<sp/>makeMacro)</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_DEATH<sp/>(ASG_MAKE_ANA_TOOL<sp/>(tool,<sp/><ref refid="dd/dff/structasg_1_1UnitTestTool1" kindref="compound" tooltip="a tool used to unit test AnaToolHandle">asg::UnitTestTool1</ref>),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="391"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>we<sp/>can<sp/>actually<sp/>change<sp/>the<sp/>tool<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>TEST<sp/>(AnaToolHandleTest,<sp/>changeType)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool1&gt;<sp/>tool<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1A/&quot;</highlight><highlight class="normal"><sp/>+<sp/>makeUniqueName());</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.make());</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.initialize());</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ<sp/>(-7,<sp/>tool-&gt;getPropertyInt());</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>setProperty&lt;int&gt;()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>TEST_F<sp/>(AnaToolHandleMakeTest,<sp/>setPropertyInt)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.setProperty&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;propertyInt&quot;</highlight><highlight class="normal">,<sp/>42));</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.initialize());</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ<sp/>(42,<sp/>tool-&gt;getPropertyInt());</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>setProperty&lt;int&gt;()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>TEST_F<sp/>(AnaToolHandleMakeTest,<sp/>setPropertyInt_failure)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.setProperty&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;UNKNOWN_PROPERTY&quot;</highlight><highlight class="normal">,<sp/>42));</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FAILURE<sp/>(tool.initialize<sp/>());</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NDEBUG</highlight></codeline>
<codeline lineno="422"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>setProperty&lt;int&gt;()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>TEST_F<sp/>(AnaToolHandleUseTest,<sp/>setPropertyInt)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_DEATH<sp/>(tool.setProperty&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;propertyInt&quot;</highlight><highlight class="normal">,<sp/>42),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="428"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>setProperty(const<sp/>char*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>TEST_F<sp/>(AnaToolHandleMakeTest,<sp/>setPropertyString)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.setProperty<sp/>(</highlight><highlight class="stringliteral">&quot;propertyString&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;42&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.initialize());</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ<sp/>(</highlight><highlight class="stringliteral">&quot;42&quot;</highlight><highlight class="normal">,<sp/>tool-&gt;getPropertyString());</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>setProperty(const<sp/>char*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/>TEST_F<sp/>(AnaToolHandleMakeTest,<sp/>setPropertyString_failure)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.setProperty<sp/>(</highlight><highlight class="stringliteral">&quot;UNKNOWN_PROPERTY&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;42&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FAILURE<sp/>(tool.initialize<sp/>());</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NDEBUG</highlight></codeline>
<codeline lineno="447"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>setProperty(const<sp/>char*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>TEST_F<sp/>(AnaToolHandleUseTest,<sp/>setPropertyString)</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_DEATH<sp/>(tool.setProperty<sp/>(</highlight><highlight class="stringliteral">&quot;propertyString&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;42&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="453"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>initialize()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/>TEST_F<sp/>(AnaToolHandleMakeTest,<sp/>initialize)</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.initialize());</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE<sp/>(tool.isInitialized());</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE<sp/>(tool-&gt;isInitialized());</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>initialize()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>TEST_F<sp/>(AnaToolHandleMakeTest,<sp/>initialize_failure)</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.setProperty&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;initializeFail&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FAILURE<sp/>(tool.initialize());</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE<sp/>(tool.isInitialized());</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NDEBUG</highlight></codeline>
<codeline lineno="473"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>initialize()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>TEST_F<sp/>(AnaToolHandleUseTest,<sp/>initialize)</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_DEATH<sp/>(tool.initialize(),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="479"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>get()<sp/>(and<sp/>by<sp/>implication<sp/>*<sp/>and<sp/>-&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>TEST_F<sp/>(AnaToolHandleUseTest,<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>IUnitTestTool1<sp/>*mytool<sp/>=<sp/>tool.get();</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE<sp/>(mytool<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_MATCH_REGEX<sp/>(</highlight><highlight class="stringliteral">&quot;^(ToolSvc.)?&quot;</highlight><highlight class="normal"><sp/>+<sp/>tool.name()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">,<sp/>mytool-&gt;name());</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>get()<sp/>(and<sp/>by<sp/>implication<sp/>*<sp/>and<sp/>-&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/>TEST_F<sp/>(AnaToolHandleMakeTest,<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>IUnitTestTool1<sp/>*mytool<sp/>=<sp/>tool.get();</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE<sp/>(mytool<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_MATCH_REGEX<sp/>(</highlight><highlight class="stringliteral">&quot;^(ToolSvc.)?&quot;</highlight><highlight class="normal"><sp/>+<sp/>tool.name()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">,<sp/>mytool-&gt;name());</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>we<sp/>can<sp/>create<sp/>a<sp/>tool<sp/>handle<sp/>with<sp/>the<sp/>same<sp/>name<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>different<sp/>parameters<sp/>after<sp/>we<sp/>are<sp/>done<sp/>with<sp/>the<sp/>first<sp/>one.<sp/><sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>routinely<sp/>done<sp/>as<sp/>part<sp/>of<sp/>unit<sp/>tests,<sp/>so<sp/>this<sp/>absolutely<sp/>has</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>stay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ROOTCORE</highlight></codeline>
<codeline lineno="505"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>TEST<sp/>(AnaToolHandleTest,<sp/>duplicate_series)</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="507"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>TEST<sp/>(AnaToolHandleTest,<sp/>DISABLED_duplicate_series)</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="509"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/>makeUniqueName();</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool1&gt;<sp/>tool<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1/&quot;</highlight><highlight class="normal"><sp/>+<sp/>name);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE<sp/>(tool.isUserConfigured());</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE<sp/>(tool.isConfigurable());</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.setProperty&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;propertyInt&quot;</highlight><highlight class="normal">,<sp/>42));</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.initialize());</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ<sp/>(42,<sp/>tool-&gt;getPropertyInt());</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool1&gt;<sp/>tool<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1/&quot;</highlight><highlight class="normal"><sp/>+<sp/>name);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE<sp/>(tool.isUserConfigured());</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE<sp/>(tool.isConfigurable());</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.setProperty&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;propertyInt&quot;</highlight><highlight class="normal">,<sp/>4));</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.initialize());</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ<sp/>(4,<sp/>tool-&gt;getPropertyInt());</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool1&gt;<sp/>tool<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1/&quot;</highlight><highlight class="normal"><sp/>+<sp/>name);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE<sp/>(tool.isUserConfigured());</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE<sp/>(tool.isConfigurable());</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.setProperty&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;propertyInt&quot;</highlight><highlight class="normal">,<sp/>17));</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool.initialize());</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ<sp/>(17,<sp/>tool-&gt;getPropertyInt());</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>a<sp/>tool<sp/>gets<sp/>shared<sp/>between<sp/>two<sp/>AnaToolHandle<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>they<sp/>are<sp/>given<sp/>the<sp/>same<sp/>name<sp/>and<sp/>have<sp/>no<sp/>parents.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/>TEST<sp/>(AnaToolHandleTest,<sp/>shared_tool)</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/>makeUniqueName();</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool1&gt;<sp/>tool1<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1/&quot;</highlight><highlight class="normal"><sp/>+<sp/>name);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_FALSE<sp/>(tool1.isUserConfigured());</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE<sp/>(tool1.isConfigurable());</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool1.setProperty&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;propertyInt&quot;</highlight><highlight class="normal">,<sp/>42));</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_FALSE<sp/>(tool1.isUserConfigured());</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE<sp/>(tool1.isConfigurable());</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool1.initialize());</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_FALSE<sp/>(tool1.isUserConfigured());</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE<sp/>(tool1.isConfigurable());</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool1&gt;<sp/>tool2<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1/&quot;</highlight><highlight class="normal"><sp/>+<sp/>name);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE<sp/>(tool2.isUserConfigured());</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_FALSE<sp/>(tool2.isConfigurable());</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool2.setProperty&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;propertyInt&quot;</highlight><highlight class="normal">,<sp/>7));</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE<sp/>(tool2.isUserConfigured());</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_FALSE<sp/>(tool2.isConfigurable());</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool2.initialize());</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE<sp/>(tool2.isUserConfigured());</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_FALSE<sp/>(tool2.isConfigurable());</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ<sp/>(tool1.get(),<sp/>tool2.get());</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ<sp/>(42,<sp/>tool1-&gt;getPropertyInt());</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>a<sp/>tool<sp/>gets<sp/>shared<sp/>between<sp/>two<sp/>AnaToolHandle<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>they<sp/>are<sp/>given<sp/>the<sp/>same<sp/>name<sp/>via<sp/>setType/setName.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/>TEST<sp/>(AnaToolHandleTest,<sp/>shared_tool_setName)</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/>makeUniqueName();</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool1&gt;<sp/>tool1;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tool1.setType<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tool1.setName<sp/>(name);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_FALSE<sp/>(tool1.isUserConfigured());</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE<sp/>(tool1.isConfigurable());</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool1.setProperty&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;propertyInt&quot;</highlight><highlight class="normal">,<sp/>42));</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_FALSE<sp/>(tool1.isUserConfigured());</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE<sp/>(tool1.isConfigurable());</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool1.initialize());</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_FALSE<sp/>(tool1.isUserConfigured());</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE<sp/>(tool1.isConfigurable());</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool1&gt;<sp/>tool2;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tool2.setType<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tool2.setName<sp/>(name);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE<sp/>(tool2.isUserConfigured());</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_FALSE<sp/>(tool2.isConfigurable());</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool2.setProperty&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;propertyInt&quot;</highlight><highlight class="normal">,<sp/>7));</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE<sp/>(tool2.isUserConfigured());</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_FALSE<sp/>(tool2.isConfigurable());</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool2.initialize());</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE<sp/>(tool2.isUserConfigured());</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_FALSE<sp/>(tool2.isConfigurable());</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ<sp/>(tool1.get(),<sp/>tool2.get());</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ<sp/>(42,<sp/>tool1-&gt;getPropertyInt());</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>a<sp/>tool<sp/>gets<sp/>shared<sp/>between<sp/>two<sp/>AnaToolHandle<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>they<sp/>are<sp/>given<sp/>the<sp/>same<sp/>name<sp/>and<sp/>have<sp/>no<sp/>parents.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ROOTCORE</highlight></codeline>
<codeline lineno="612"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>TEST<sp/>(AnaToolHandleTest,<sp/>shared_tool_cleanup)</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="614"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>TEST<sp/>(AnaToolHandleTest,<sp/>DISABLED_shared_tool_cleanup)</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="616"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/>makeUniqueName();</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool1&gt;<sp/>tool1<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1/&quot;</highlight><highlight class="normal"><sp/>+<sp/>name);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_FALSE<sp/>(tool1.isUserConfigured());</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE<sp/>(tool1.isConfigurable());</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool1.setProperty&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;propertyInt&quot;</highlight><highlight class="normal">,<sp/>42));</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_FALSE<sp/>(tool1.isUserConfigured());</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE<sp/>(tool1.isConfigurable());</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool1.initialize());</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_FALSE<sp/>(tool1.isUserConfigured());</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE<sp/>(tool1.isConfigurable());</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool1&gt;<sp/>tool2<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1/&quot;</highlight><highlight class="normal"><sp/>+<sp/>name);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE<sp/>(tool2.isUserConfigured());</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_FALSE<sp/>(tool2.isConfigurable());</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool2.setProperty&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;propertyInt&quot;</highlight><highlight class="normal">,<sp/>7));</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE<sp/>(tool2.isUserConfigured());</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_FALSE<sp/>(tool2.isConfigurable());</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool2.initialize());</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_TRUE<sp/>(tool2.isUserConfigured());</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_FALSE<sp/>(tool2.isConfigurable());</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ<sp/>(tool1.get(),<sp/>tool2.get());</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ<sp/>(42,<sp/>tool1-&gt;getPropertyInt());</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool1&gt;<sp/>tool1<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1/&quot;</highlight><highlight class="normal"><sp/>+<sp/>name);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE<sp/>(tool1.isUserConfigured());</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE<sp/>(tool1.isConfigurable());</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool1.setProperty&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;propertyInt&quot;</highlight><highlight class="normal">,<sp/>17));</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool1.initialize());</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TH&gt;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">SetToolHandlePropertyTest<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>::testing::Test</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testSetToolHandle<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>handleName,</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isRegular,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*isPublic*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SCOPED_TRACE<sp/>(handleName);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TH<sp/>par;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool2&gt;<sp/>mainTool<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool2/&quot;</highlight><highlight class="normal"><sp/>+<sp/>makeUniqueName());</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!par.isSettable())</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FAILURE<sp/>(mainTool.setProperty<sp/>(handleName,<sp/>par.handle));</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(mainTool.setProperty<sp/>(handleName,<sp/>par.handle));</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>AnaToolHandle<sp/>members<sp/>we<sp/>try<sp/>to<sp/>get<sp/>the<sp/>tool<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize(),<sp/>so<sp/>if<sp/>we<sp/>can&apos;t<sp/>get<sp/>a<sp/>tool<sp/>from<sp/>the<sp/>tool<sp/>handle,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>will<sp/>fail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isRegular<sp/>&amp;&amp;<sp/>!par.isGettable())</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FAILURE<sp/>(mainTool.initialize<sp/>());</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(mainTool.initialize<sp/>());</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>regular<sp/>ToolHandle<sp/>will<sp/>throw<sp/>when<sp/>trying<sp/>to<sp/>get<sp/>an<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>handle,<sp/>an<sp/>AnaToolHandle<sp/>will<sp/>return<sp/>a<sp/>nullptr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(par.handle.empty())</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isRegular)</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_ANY_THROW<sp/>(mainTool-&gt;getToolHandle<sp/>(handleName));</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ<sp/>(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>mainTool-&gt;getToolHandle<sp/>(handleName));</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>old-fashioned<sp/>ToolHandle<sp/>members<sp/>we<sp/>don&apos;t<sp/>try<sp/>to<sp/>get<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tool<sp/>until<sp/>we<sp/>access<sp/>it,<sp/>making<sp/>it<sp/>fail<sp/>at<sp/>that<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!par.isGettable())</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_ANY_THROW<sp/>(mainTool-&gt;getToolHandle<sp/>(handleName));</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>subtool<sp/>=<sp/>mainTool-&gt;getToolHandle<sp/>(handleName);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ROOTCORE</highlight></codeline>
<codeline lineno="699"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ<sp/>(par.getTool(),<sp/>subtool);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="701"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ<sp/>(par.handle-&gt;getPropertyInt(),<sp/>subtool-&gt;getPropertyInt());</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="703"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isRegular)</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE<sp/>(mainTool-&gt;wasUserConfigured<sp/>(handleName));</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_SUCCESS<sp/>(mainTool-&gt;retrieveToolHandle<sp/>(handleName));</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ<sp/>(subtool,<sp/>mainTool-&gt;getToolHandle<sp/>(handleName));</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/>TYPED_TEST_CASE_P<sp/>(SetToolHandlePropertyTest);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/>TYPED_TEST_P<sp/>(SetToolHandlePropertyTest,<sp/>setRegPublicHandle)</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;testSetToolHandle<sp/>(</highlight><highlight class="stringliteral">&quot;regPublicHandle&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/>TYPED_TEST_P<sp/>(SetToolHandlePropertyTest,<sp/>setRegPrivateHandle)</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;testSetToolHandle<sp/>(</highlight><highlight class="stringliteral">&quot;regPrivateHandle&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/>TYPED_TEST_P<sp/>(SetToolHandlePropertyTest,<sp/>setAnaPublicHandle)</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;testSetToolHandle<sp/>(</highlight><highlight class="stringliteral">&quot;anaPublicHandle&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/>TYPED_TEST_P<sp/>(SetToolHandlePropertyTest,<sp/>setAnaPrivateHandle)</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;testSetToolHandle<sp/>(</highlight><highlight class="stringliteral">&quot;anaPrivateHandle&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/>REGISTER_TYPED_TEST_CASE_P<sp/>(SetToolHandlePropertyTest,<sp/>setRegPublicHandle,<sp/>setRegPrivateHandle,<sp/>setAnaPublicHandle,<sp/>setAnaPrivateHandle);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740" refid="d9/de2/structasg_1_1PublicAnaSubTool" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d9/de2/structasg_1_1PublicAnaSubTool" kindref="compound">PublicAnaSubTool</ref></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/de2/structasg_1_1PublicAnaSubTool" kindref="compound">PublicAnaSubTool</ref><sp/>()</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK_THROW<sp/>(handle.make<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1/&quot;</highlight><highlight class="normal"><sp/>+<sp/>makeUniqueName()));</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK_THROW<sp/>(handle.initialize<sp/>());</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isSettable<sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isGettable<sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/d49/classasg_1_1IUnitTestTool1" kindref="compound" tooltip="the interface for UnitTestTool1">IUnitTestTool1</ref><sp/>*getTool<sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;*handle;}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool1&gt;<sp/>handle;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ROOTCORE</highlight></codeline>
<codeline lineno="755"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>INSTANTIATE_TYPED_TEST_CASE_P<sp/>(PublicAnaSubToolTest,<sp/>SetToolHandlePropertyTest,<sp/><ref refid="d9/de2/structasg_1_1PublicAnaSubTool" kindref="compound">PublicAnaSubTool</ref>);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="757"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758" refid="de/d9d/structasg_1_1PrivateAnaSubTool" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="de/d9d/structasg_1_1PrivateAnaSubTool" kindref="compound">PrivateAnaSubTool</ref></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/d9d/structasg_1_1PrivateAnaSubTool" kindref="compound">PrivateAnaSubTool</ref><sp/>()</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>parent<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dd/dff/structasg_1_1UnitTestTool1" kindref="compound" tooltip="a tool used to unit test AnaToolHandle">UnitTestTool1</ref><sp/>(makeUniqueName())),</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>handle<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1/&quot;</highlight><highlight class="normal"><sp/>+<sp/>makeUniqueName(),<sp/>parent.get())</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK_THROW<sp/>(parent-&gt;initialize<sp/>());</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK_THROW<sp/>(handle.initialize<sp/>());</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isSettable<sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isGettable<sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/d49/classasg_1_1IUnitTestTool1" kindref="compound" tooltip="the interface for UnitTestTool1">IUnitTestTool1</ref><sp/>*getTool<sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;*handle;}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;UnitTestTool1&gt;<sp/>parent;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool1&gt;<sp/>handle;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ROOTCORE</highlight></codeline>
<codeline lineno="776"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>INSTANTIATE_TYPED_TEST_CASE_P<sp/>(PrivateAnaSubToolTest,<sp/>SetToolHandlePropertyTest,<sp/><ref refid="de/d9d/structasg_1_1PrivateAnaSubTool" kindref="compound">PrivateAnaSubTool</ref>);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="778"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779" refid="de/d45/structasg_1_1EmptyRegSubTool" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="de/d45/structasg_1_1EmptyRegSubTool" kindref="compound">EmptyRegSubTool</ref></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/d45/structasg_1_1EmptyRegSubTool" kindref="compound">EmptyRegSubTool</ref><sp/>()</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isSettable<sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isGettable<sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d49/classasg_1_1IUnitTestTool1" kindref="compound" tooltip="the interface for UnitTestTool1">IUnitTestTool1</ref><sp/>*getTool<sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>ToolHandle&lt;IUnitTestTool1&gt;<sp/>handle;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/>INSTANTIATE_TYPED_TEST_CASE_P<sp/>(EmptyRegSubToolTest,<sp/>SetToolHandlePropertyTest,<sp/><ref refid="de/d45/structasg_1_1EmptyRegSubTool" kindref="compound">EmptyRegSubTool</ref>);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793" refid="d7/d84/structasg_1_1InvalidSubTool" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d7/d84/structasg_1_1InvalidSubTool" kindref="compound">InvalidSubTool</ref></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d84/structasg_1_1InvalidSubTool" kindref="compound">InvalidSubTool</ref><sp/>()</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>handle<sp/>(</highlight><highlight class="stringliteral">&quot;UNDEFINED_TOOL_TYPE/UNDEFINED_TOOL_NAME&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isSettable<sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isGettable<sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/d49/classasg_1_1IUnitTestTool1" kindref="compound" tooltip="the interface for UnitTestTool1">IUnitTestTool1</ref><sp/>*getTool<sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;*handle;}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>ToolHandle&lt;IUnitTestTool1&gt;<sp/>handle;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/>INSTANTIATE_TYPED_TEST_CASE_P<sp/>(InvalidSubToolTest,<sp/>SetToolHandlePropertyTest,<sp/><ref refid="d7/d84/structasg_1_1InvalidSubTool" kindref="compound">InvalidSubTool</ref>);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808" refid="d9/d6a/structasg_1_1NamedSubTool" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d9/d6a/structasg_1_1NamedSubTool" kindref="compound">NamedSubTool</ref></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d6a/structasg_1_1NamedSubTool" kindref="compound">NamedSubTool</ref><sp/>()</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ROOTCORE</highlight></codeline>
<codeline lineno="812"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>mytool<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dd/dff/structasg_1_1UnitTestTool1" kindref="compound" tooltip="a tool used to unit test AnaToolHandle">UnitTestTool1</ref><sp/>(</highlight><highlight class="stringliteral">&quot;sharedTestTool&quot;</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>handle<sp/>(</highlight><highlight class="stringliteral">&quot;sharedTestTool&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="815"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>handle<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1/sharedTestTool&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="817"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ROOTCORE</highlight></codeline>
<codeline lineno="819"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK_THROW<sp/>(mytool-&gt;initialize<sp/>());</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="821"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK_THROW<sp/>(handle.retrieve<sp/>());</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="823"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isSettable<sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isGettable<sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/d49/classasg_1_1IUnitTestTool1" kindref="compound" tooltip="the interface for UnitTestTool1">IUnitTestTool1</ref><sp/>*getTool<sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;*handle;}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ROOTCORE</highlight></codeline>
<codeline lineno="830"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;UnitTestTool1&gt;<sp/>mytool;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="832"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ToolHandle&lt;IUnitTestTool1&gt;<sp/>handle;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/>INSTANTIATE_TYPED_TEST_CASE_P<sp/>(NamedSubToolTest,<sp/>SetToolHandlePropertyTest,<sp/><ref refid="d9/d6a/structasg_1_1NamedSubTool" kindref="compound">NamedSubTool</ref>);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ROOTCORE</highlight></codeline>
<codeline lineno="837"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">PointerRegSubTool</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>PointerRegSubTool<sp/>()</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK_THROW<sp/>(tool.make<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1/&quot;</highlight><highlight class="normal"><sp/>+<sp/>makeUniqueName()));</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK_THROW<sp/>(tool.initialize<sp/>());</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>handle<sp/>=<sp/>tool.get<sp/>();</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isSettable<sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isGettable<sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IUnitTestTool1<sp/>*getTool<sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;*handle;}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool1&gt;<sp/>tool;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>ToolHandle&lt;IUnitTestTool1&gt;<sp/>handle;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/>INSTANTIATE_TYPED_TEST_CASE_P<sp/>(PointerRegSubToolTest,<sp/>SetToolHandlePropertyTest,<sp/>PointerRegSubTool);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="855"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ROOTCORE</highlight></codeline>
<codeline lineno="859"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>TEST<sp/>(AnaToolHandleTest,<sp/>athena_job_options_property)</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/>makeUniqueName();</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>ServiceHandle&lt;IJobOptionsSvc&gt;<sp/>joSvc(</highlight><highlight class="stringliteral">&quot;JobOptionsSvc&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>joSvc-&gt;addPropertyToCatalogue<sp/>(</highlight><highlight class="stringliteral">&quot;ToolSvc.&quot;</highlight><highlight class="normal"><sp/>+<sp/>name,<sp/>StringProperty(</highlight><highlight class="stringliteral">&quot;propertyInt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;57&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool1&gt;<sp/>handle<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1/&quot;</highlight><highlight class="normal"><sp/>+<sp/>name);</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE<sp/>(handle.isUserConfigured());</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(handle.setProperty(</highlight><highlight class="stringliteral">&quot;propertyInt&quot;</highlight><highlight class="normal">,<sp/>17));</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(handle.initialize());</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ<sp/>(</highlight><highlight class="stringliteral">&quot;ToolSvc.&quot;</highlight><highlight class="normal"><sp/>+<sp/>name,<sp/>handle-&gt;name());</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ<sp/>(57,<sp/>handle-&gt;getPropertyInt<sp/>());</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/>TEST<sp/>(AnaToolHandleTest,<sp/>athena_job_options_misspelled)</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/>makeUniqueName();</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>ServiceHandle&lt;IJobOptionsSvc&gt;<sp/>joSvc(</highlight><highlight class="stringliteral">&quot;JobOptionsSvc&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>joSvc-&gt;addPropertyToCatalogue<sp/>(</highlight><highlight class="stringliteral">&quot;ToolSvc.&quot;</highlight><highlight class="normal"><sp/>+<sp/>name,<sp/>StringProperty(</highlight><highlight class="stringliteral">&quot;invalid&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;57&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool1&gt;<sp/>handle<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1/&quot;</highlight><highlight class="normal"><sp/>+<sp/>name);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE<sp/>(handle.isUserConfigured());</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FAILURE<sp/>(handle.initialize());</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/>TEST<sp/>(AnaToolHandleTest,<sp/>athena_job_options_type_private)</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/>makeUniqueName();</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>ServiceHandle&lt;IJobOptionsSvc&gt;<sp/>joSvc(</highlight><highlight class="stringliteral">&quot;JobOptionsSvc&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>joSvc-&gt;addPropertyToCatalogue<sp/>(</highlight><highlight class="stringliteral">&quot;ToolSvc.&quot;</highlight><highlight class="normal"><sp/>+<sp/>name,<sp/>StringProperty(</highlight><highlight class="stringliteral">&quot;anaPrivateHandle&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1A/anaPrivateHandle&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool2&gt;<sp/>handle<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool2/&quot;</highlight><highlight class="normal"><sp/>+<sp/>name);</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE<sp/>(handle.isUserConfigured());</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(handle.initialize());</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE<sp/>(handle-&gt;wasUserConfigured<sp/>(</highlight><highlight class="stringliteral">&quot;anaPrivateHandle&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ<sp/>(-7,<sp/>handle-&gt;getToolHandle<sp/>(</highlight><highlight class="stringliteral">&quot;anaPrivateHandle&quot;</highlight><highlight class="normal">)-&gt;getPropertyInt());</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/>TEST<sp/>(AnaToolHandleTest,<sp/>athena_job_options_subtool)</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/>makeUniqueName();</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>ServiceHandle&lt;IJobOptionsSvc&gt;<sp/>joSvc(</highlight><highlight class="stringliteral">&quot;JobOptionsSvc&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>joSvc-&gt;addPropertyToCatalogue<sp/>(</highlight><highlight class="stringliteral">&quot;ToolSvc.&quot;</highlight><highlight class="normal"><sp/>+<sp/>name,<sp/>StringProperty(</highlight><highlight class="stringliteral">&quot;anaPrivateHandle&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1/anaPrivateHandle&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>joSvc-&gt;addPropertyToCatalogue<sp/>(</highlight><highlight class="stringliteral">&quot;ToolSvc.&quot;</highlight><highlight class="normal"><sp/>+<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.anaPrivateHandle&quot;</highlight><highlight class="normal">,<sp/>StringProperty(</highlight><highlight class="stringliteral">&quot;propertyInt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;48&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool2&gt;<sp/>handle<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool2/&quot;</highlight><highlight class="normal"><sp/>+<sp/>name);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE<sp/>(handle.isUserConfigured());</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(handle.initialize());</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE<sp/>(handle-&gt;wasUserConfigured<sp/>(</highlight><highlight class="stringliteral">&quot;anaPrivateHandle&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ<sp/>(</highlight><highlight class="stringliteral">&quot;ToolSvc.&quot;</highlight><highlight class="normal"><sp/>+<sp/>name,<sp/>handle-&gt;name());</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ<sp/>(</highlight><highlight class="stringliteral">&quot;ToolSvc.&quot;</highlight><highlight class="normal"><sp/>+<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.anaPrivateHandle&quot;</highlight><highlight class="normal">,<sp/>handle-&gt;getToolHandle<sp/>(</highlight><highlight class="stringliteral">&quot;anaPrivateHandle&quot;</highlight><highlight class="normal">)-&gt;name());</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ<sp/>(48,<sp/>handle-&gt;getToolHandle<sp/>(</highlight><highlight class="stringliteral">&quot;anaPrivateHandle&quot;</highlight><highlight class="normal">)-&gt;getPropertyInt());</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="913"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/>TEST<sp/>(AnaToolHandleTest,<sp/>swap_test)</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/>makeUniqueName();</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IAsgTool&gt;<sp/>tool1(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1/&quot;</highlight><highlight class="normal"><sp/>+<sp/>name);</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool1.initialize());</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>asg::AnaToolHandle&lt;asg::IAsgTool&gt;<sp/>tool3;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>asg::AnaToolHandle&lt;asg::IAsgTool&gt;<sp/>tool2(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1/&quot;</highlight><highlight class="normal"><sp/>+<sp/>name);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(tool2.initialize());</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tool3<sp/>=<sp/>std::move(tool2);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">SubtoolTest<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>testing::TestWithParam&lt;std::tuple&lt;std::string,std::string,std::string&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/>TEST_P<sp/>(SubtoolTest,<sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::shared_ptr&lt;void&gt;<sp/>&gt;<sp/>cleanup;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>propertyName;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::get&lt;1&gt;(GetParam())<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;public&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>propertyName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;subtool0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::get&lt;1&gt;(GetParam())<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;private&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>propertyName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;subtool1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ADD_FAILURE<sp/>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;unknown<sp/>parameter<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::get&lt;1&gt;(GetParam());</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/>AnaToolHandle&lt;IUnitTestTool3&gt;<sp/>th3<sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool3/&quot;</highlight><highlight class="normal"><sp/>+<sp/>makeUniqueName());</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(th3.setProperty<sp/>(</highlight><highlight class="stringliteral">&quot;propertyName&quot;</highlight><highlight class="normal">,<sp/>std::get&lt;0&gt;(GetParam<sp/>())));</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::get&lt;2&gt;(GetParam())<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;empty&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ToolHandle&lt;asg::IUnitTestTool1&gt;<sp/>th<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE<sp/>(th.empty());</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(th3.setProperty<sp/>(propertyName,<sp/>th));</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::get&lt;2&gt;(GetParam())<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;none&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>42;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::get&lt;2&gt;(GetParam())<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;ATH&quot;</highlight><highlight class="normal"><sp/>||</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::get&lt;2&gt;(GetParam())<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;TH&quot;</highlight><highlight class="normal"><sp/>||</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::get&lt;2&gt;(GetParam())<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;NOINIT&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;AnaToolHandle&lt;IUnitTestTool1&gt;<sp/>&gt;<sp/>th1;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::get&lt;1&gt;(GetParam())<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;public&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>th1<sp/>=</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;AnaToolHandle&lt;IUnitTestTool1&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1/&quot;</highlight><highlight class="normal"><sp/>+<sp/>makeUniqueName());</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cleanup.push_back<sp/>(th1);</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>th0<sp/>=</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;AnaToolHandle&lt;IUnitTestTool1&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1/&quot;</highlight><highlight class="normal"><sp/>+<sp/>makeUniqueName());</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cleanup.push_back<sp/>(th0);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(th0-&gt;initialize<sp/>());</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>th1<sp/>=</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;AnaToolHandle&lt;IUnitTestTool1&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;asg::UnitTestTool1/&quot;</highlight><highlight class="normal"><sp/>+<sp/>makeUniqueName(),</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">AsgTool*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(th0-&gt;get()));</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cleanup.push_back<sp/>(th1);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(th1-&gt;setProperty<sp/>(</highlight><highlight class="stringliteral">&quot;propertyInt&quot;</highlight><highlight class="normal">,<sp/>value));</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::get&lt;2&gt;(GetParam())<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;NOINIT&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ROOTCORE</highlight></codeline>
<codeline lineno="994"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ<sp/>(std::get&lt;1&gt;(GetParam())<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;public&quot;</highlight><highlight class="normal">,<sp/>th1-&gt;getHandle().isPublic());</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="996"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(th1-&gt;initialize<sp/>());</highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ROOTCORE</highlight></codeline>
<codeline lineno="998"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ<sp/>(std::get&lt;1&gt;(GetParam())<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;public&quot;</highlight><highlight class="normal">,<sp/>th1-&gt;getHandle().isPublic());</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1000"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::get&lt;2&gt;(GetParam())<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;ATH&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(th3.setProperty<sp/>(propertyName,<sp/>*th1));</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::get&lt;2&gt;(GetParam())<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;TH&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(th3.setProperty<sp/>(propertyName,<sp/>th1-&gt;getHandle()));</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::get&lt;2&gt;(GetParam())<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;NOINIT&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(th3.setProperty<sp/>(propertyName,<sp/>*th1));</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ADD_FAILURE<sp/>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;unknown<sp/>parameter<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::get&lt;2&gt;(GetParam());</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ADD_FAILURE<sp/>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;unknown<sp/>parameter<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::get&lt;1&gt;(GetParam());</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::get&lt;1&gt;(GetParam())<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;public&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(th3.setProperty<sp/>(</highlight><highlight class="stringliteral">&quot;usePublic&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_SUCCESS<sp/>(th3.initialize<sp/>());</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE<sp/>(th3-&gt;subsubtoolEmpty());</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE<sp/>(th3-&gt;subsubtoolEmpty());</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ<sp/>(value,<sp/>th3-&gt;getSubsubtool()-&gt;getPropertyInt());</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/>INSTANTIATE_TEST_CASE_P</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/>(MySubtoolTest1,<sp/>SubtoolTest,<sp/>::testing::Values</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/>(std::make_tuple<sp/>(</highlight><highlight class="stringliteral">&quot;regPublicHandle&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;public&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;ATH&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_tuple<sp/>(</highlight><highlight class="stringliteral">&quot;anaPublicHandle&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;public&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;ATH&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_tuple<sp/>(</highlight><highlight class="stringliteral">&quot;regPublicHandle&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;public&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;TH&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_tuple<sp/>(</highlight><highlight class="stringliteral">&quot;anaPublicHandle&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;public&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;TH&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_tuple<sp/>(</highlight><highlight class="stringliteral">&quot;regPublicHandle&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;public&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;NOINIT&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_tuple<sp/>(</highlight><highlight class="stringliteral">&quot;anaPublicHandle&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;public&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;NOINIT&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_tuple<sp/>(</highlight><highlight class="stringliteral">&quot;regPublicHandle&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;public&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;empty&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_tuple<sp/>(</highlight><highlight class="stringliteral">&quot;anaPublicHandle&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;public&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;empty&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_tuple<sp/>(</highlight><highlight class="stringliteral">&quot;regPrivateHandle&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;private&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ATH&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_tuple<sp/>(</highlight><highlight class="stringliteral">&quot;anaPrivateHandle&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;private&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ATH&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_tuple<sp/>(</highlight><highlight class="stringliteral">&quot;regPrivateHandle&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;private&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;TH&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_tuple<sp/>(</highlight><highlight class="stringliteral">&quot;anaPrivateHandle&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;private&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;TH&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_tuple<sp/>(</highlight><highlight class="stringliteral">&quot;regPrivateHandle&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;private&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;NOINIT&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_tuple<sp/>(</highlight><highlight class="stringliteral">&quot;anaPrivateHandle&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;private&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;NOINIT&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_tuple<sp/>(</highlight><highlight class="stringliteral">&quot;regPrivateHandle&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;private&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;empty&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_tuple<sp/>(</highlight><highlight class="stringliteral">&quot;anaPrivateHandle&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;private&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;empty&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_tuple<sp/>(</highlight><highlight class="stringliteral">&quot;regPrivateHandle&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;private&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;none&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_tuple<sp/>(</highlight><highlight class="stringliteral">&quot;anaPrivateHandle&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;private&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;none&quot;</highlight><highlight class="normal">)),);</highlight></codeline>
<codeline lineno="1055"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal">ATLAS_GOOGLE_TEST_MAIN</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgExampleTools/test/gt_AnaToolHandle_test.cxx"/>
  </compounddef>
</doxygen>
