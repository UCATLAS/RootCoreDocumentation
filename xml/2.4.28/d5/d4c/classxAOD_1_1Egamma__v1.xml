<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d5/d4c/classxAOD_1_1Egamma__v1" kind="class" prot="public">
    <compoundname>xAOD::Egamma_v1</compoundname>
    <basecompoundref refid="d5/d4c/classxAOD_1_1IParticle" prot="public" virt="non-virtual">xAOD::IParticle</basecompoundref>
    <derivedcompoundref refid="d3/da7/classxAOD_1_1Electron__v1" prot="public" virt="non-virtual">xAOD::Electron_v1</derivedcompoundref>
    <derivedcompoundref refid="df/df1/classxAOD_1_1Photon__v1" prot="public" virt="non-virtual">xAOD::Photon_v1</derivedcompoundref>
      <sectiondef kind="user-defined">
      <header>xAOD::IParticle functions</header>
      <description><para><anchor id="_1amgrp4a262f605c2b3ea3245e27ec097db7ee"/> These are already virtual due to <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref> </para></description>
      <memberdef kind="typedef" id="d5/d4c/classxAOD_1_1Egamma__v1_1a387b516af32193b22a1ec12856936ea7" prot="public" static="no">
        <type><ref refid="d5/d4c/classxAOD_1_1IParticle_1ab10b2abb617a3e1a745de3a4a9d8721e" kindref="member">IParticle::FourMom_t</ref></type>
        <definition>typedef IParticle::FourMom_t xAOD::Egamma_v1::FourMom_t</definition>
        <argsstring></argsstring>
        <name>FourMom_t</name>
        <reimplements refid="d5/d4c/classxAOD_1_1IParticle_1ab10b2abb617a3e1a745de3a4a9d8721e">FourMom_t</reimplements>
        <briefdescription>
<para>Definition of the 4-momentum type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="99" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1aee301381a5be0d47caa07b2947db1327" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double xAOD::Egamma_v1::pt</definition>
        <argsstring>() const ATH_FINAL</argsstring>
        <name>pt</name>
        <reimplements refid="d5/d4c/classxAOD_1_1IParticle_1a79ea3de671f898eef634aa9104cd15d5">pt</reimplements>
        <briefdescription>
<para>The transverse momentum (<formula id="11">$p_T$</formula>) of the particle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="81" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a9c64d1f34b462d0c733eb29e51d68899" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double xAOD::Egamma_v1::eta</definition>
        <argsstring>() const ATH_FINAL</argsstring>
        <name>eta</name>
        <reimplements refid="d5/d4c/classxAOD_1_1IParticle_1a4c912bbd5baf31fa18602586c6e42692">eta</reimplements>
        <briefdescription>
<para>The pseudorapidity (<formula id="12">$\eta$</formula>) of the particle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="84" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a3d0388e78161846da4c5f02b5e7b73c6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double xAOD::Egamma_v1::phi</definition>
        <argsstring>() const ATH_FINAL</argsstring>
        <name>phi</name>
        <reimplements refid="d5/d4c/classxAOD_1_1IParticle_1adbe89863622f629d468556e8dcc5bcf8">phi</reimplements>
        <briefdescription>
<para>The azimuthal angle (<formula id="13">$\phi$</formula>) of the particle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="87" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a01d1279e46ce4eb33b3fcb4c24454439" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double xAOD::Egamma_v1::m</definition>
        <argsstring>() const ATH_FINAL</argsstring>
        <name>m</name>
        <reimplements refid="d5/d4c/classxAOD_1_1IParticle_1a8fcac9e6531f0273345c37bfc8deca5b">m</reimplements>
        <briefdescription>
<para>The invariant mass of the particle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="90" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a8e58d9167d689f335753ec3112ea304f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double xAOD::Egamma_v1::e</definition>
        <argsstring>() const ATH_FINAL</argsstring>
        <name>e</name>
        <reimplements refid="d5/d4c/classxAOD_1_1IParticle_1afb494c89a607da5fb6e74b908867a9ab">e</reimplements>
        <briefdescription>
<para>The total energy of the particle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="93" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1ada67ec6540d85bc80e15726e6e25bba9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double xAOD::Egamma_v1::rapidity</definition>
        <argsstring>() const ATH_FINAL</argsstring>
        <name>rapidity</name>
        <reimplements refid="d5/d4c/classxAOD_1_1IParticle_1a95491311d0c6e988ec13a8506cdb31e5">rapidity</reimplements>
        <briefdescription>
<para>The true rapidity (y) of the particle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="96" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a3cb2d57ad308c4da1c5379062c479748" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a387b516af32193b22a1ec12856936ea7" kindref="member">FourMom_t</ref> &amp;</type>
        <definition>const Egamma_v1::FourMom_t &amp; xAOD::Egamma_v1::p4</definition>
        <argsstring>() const ATH_FINAL</argsstring>
        <name>p4</name>
        <reimplements refid="d5/d4c/classxAOD_1_1IParticle_1a996aa0974b322a612e89b70fd870ba35">p4</reimplements>
        <briefdescription>
<para>The full 4-momentum of the particle as a TLoretzVector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="102" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="65" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a693fc91cc7dac5b3faf20ff3fa61fbd6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="dd/dc8/namespacexAOD_1_1Type_1a96c48d2d85466ace623036af49f84434" kindref="member">Type::ObjectType</ref></type>
        <definition>virtual Type::ObjectType xAOD::Egamma_v1::type</definition>
        <argsstring>() const ATH_OVERRIDE=0</argsstring>
        <name>type</name>
        <reimplements refid="d5/d4c/classxAOD_1_1IParticle_1a852e62cdcea85eb9f99461898c301e02">type</reimplements>
        <reimplementedby refid="df/df1/classxAOD_1_1Photon__v1_1a44a4fae9e99a22ac1efd9cccb7ff3390">type</reimplementedby>
        <reimplementedby refid="d3/da7/classxAOD_1_1Electron__v1_1ae939ccee870a4546a14c392f97958b68">type</reimplementedby>
        <briefdescription>
<para>The type of the object as a simple enumeration, remains pure virtual in e/gamma. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="105"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>xAOD::Egamma 4x4 Covariance Matrix</header>
      <description><para><anchor id="_1amgrpa96f2eb6c6e55d1da55a37b5dcd38cf3"/> </para></description>
      <memberdef kind="typedef" id="d5/d4c/classxAOD_1_1Egamma__v1_1acd4a485f56814dab83be15134b8a4d2d" prot="public" static="no">
        <type>Eigen::Matrix&lt; float, 4, 4 &gt;</type>
        <definition>typedef Eigen::Matrix&lt;float,4,4&gt; xAOD::Egamma_v1::EgammaCovMatrix_t</definition>
        <argsstring></argsstring>
        <name>EgammaCovMatrix_t</name>
        <briefdescription>
<para>4x4 Covariance Matrix in EtEtaPhiM (needs decision) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="134" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a603dfedeecd77b71f8fe72c1686074aa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1acd4a485f56814dab83be15134b8a4d2d" kindref="member">EgammaCovMatrix_t</ref></type>
        <definition>Egamma_v1::EgammaCovMatrix_t xAOD::Egamma_v1::covMatrix</definition>
        <argsstring>() const </argsstring>
        <name>covMatrix</name>
        <briefdescription>
<para>Returns the 4x4 symmetric covariance matrix . </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="137" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="114" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a408915b268d5ab9b11395215119b1116" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Egamma_v1::setCovMatrix</definition>
        <argsstring>(const EgammaCovMatrix_t &amp;cov)</argsstring>
        <name>setCovMatrix</name>
        <param>
          <type>const <ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1acd4a485f56814dab83be15134b8a4d2d" kindref="member">EgammaCovMatrix_t</ref> &amp;</type>
          <declname>cov</declname>
        </param>
        <briefdescription>
<para>set the 4x4 symmetric covariance matrix . </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="140" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="125" bodyend="130"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>xAOD::Egamma Pointer to CaloClusters</header>
      <description><para><anchor id="_1amgrpafd7438c4fd7972379cea57a64b3abea"/> </para></description>
      <memberdef kind="typedef" id="d5/d4c/classxAOD_1_1Egamma__v1_1a6a546618ceacfd1cf73d02697db1f350" prot="public" static="no">
        <type>std::vector&lt; <ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref>&lt; <ref refid="d0/d4d/classDataVector" kindref="compound">CaloClusterContainer</ref> &gt; &gt;</type>
        <definition>typedef std::vector&lt; ElementLink&lt; CaloClusterContainer &gt; &gt; xAOD::Egamma_v1::CLELVec_t</definition>
        <argsstring></argsstring>
        <name>CLELVec_t</name>
        <briefdescription>
<para>Helper type definition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="160" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1aff51c92a4239f737e8382bfdc076839f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t xAOD::Egamma_v1::nCaloClusters</definition>
        <argsstring>() const </argsstring>
        <name>nCaloClusters</name>
        <briefdescription>
<para>Return the number of xAOD::CaloClusters that define the electron candidate. </para>        </briefdescription>
        <detaileddescription>
<para>Implementation of the CaloCluster accessor functions </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="148" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="324" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a59ef94cb0c87efcd27b3781048932e2e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="dd/d91/classxAOD_1_1CaloCluster__v1" kindref="compound">xAOD::CaloCluster</ref> *</type>
        <definition>const xAOD::CaloCluster * xAOD::Egamma_v1::caloCluster</definition>
        <argsstring>(size_t index=0) const </argsstring>
        <name>caloCluster</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Pointer to the <ref refid="dd/d44/namespacexAOD_1a48cb7e4f34a3ea892ee409c7d6a292ea" kindref="member">xAOD::CaloCluster</ref>/s that define the electron candidate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="152" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="335" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a3b873a0e8d4fca717f5d00eaf2aebbed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref>&lt; <ref refid="d0/d4d/classDataVector" kindref="compound">CaloClusterContainer</ref> &gt; &amp;</type>
        <definition>const ElementLink&lt; CaloClusterContainer &gt; &amp; xAOD::Egamma_v1::caloClusterLink</definition>
        <argsstring>(size_t index=0) const </argsstring>
        <name>caloClusterLink</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para><ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref> to the <ref refid="dd/d44/namespacexAOD_1a48cb7e4f34a3ea892ee409c7d6a292ea" kindref="member">xAOD::CaloCluster</ref>/s that match the electron candidate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="157" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="348" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a8e1688e9665559ba5dc6dca303091c07" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a6a546618ceacfd1cf73d02697db1f350" kindref="member">CLELVec_t</ref> &amp;</type>
        <definition>const CLELVec_t&amp; xAOD::Egamma_v1::caloClusterLinks</definition>
        <argsstring>() const </argsstring>
        <name>caloClusterLinks</name>
        <briefdescription>
<para>Get all cluster links. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="163"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a1e265e24ab5f0480cc7d20f56c65ab4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Egamma_v1::setCaloClusterLinks</definition>
        <argsstring>(const CLELVec_t &amp;links)</argsstring>
        <name>setCaloClusterLinks</name>
        <param>
          <type>const <ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a6a546618ceacfd1cf73d02697db1f350" kindref="member">CLELVec_t</ref> &amp;</type>
          <declname>links</declname>
        </param>
        <briefdescription>
<para>set Pointer to the <ref refid="dd/d44/namespacexAOD_1a48cb7e4f34a3ea892ee409c7d6a292ea" kindref="member">xAOD::CaloCluster</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="165"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>xAOD::Egamma constructors</header>
      <description><para><anchor id="_1amgrp6658018b11678e85f1e683ce6572ce07"/> The <ref refid="d4/d2b/classxAOD_1_1Egamma" kindref="compound">xAOD::Egamma</ref> is not supposed to be created directly, only via <ref refid="dd/da6/classxAOD_1_1Electron" kindref="compound">xAOD::Electron</ref> and <ref refid="dc/d42/classxAOD_1_1Photon" kindref="compound">xAOD::Photon</ref>. <ref refid="d4/d2b/classxAOD_1_1Egamma" kindref="compound">xAOD::Egamma</ref> is an abstract class. It does not define the <ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a693fc91cc7dac5b3faf20ff3fa61fbd6" kindref="member">type()</ref> pure virtual function from <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref> The default constructors is protected </para></description>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a79e70bc14a2fc3a29d7d45a2a2c9a5af" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xAOD::Egamma_v1::Egamma_v1</definition>
        <argsstring>()</argsstring>
        <name>Egamma_v1</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="59" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="14" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a7404f9d63391180c74d09c3e50182670" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xAOD::Egamma_v1::Egamma_v1</definition>
        <argsstring>(const Egamma_v1 &amp;eg)</argsstring>
        <name>Egamma_v1</name>
        <param>
          <type>const <ref refid="d5/d4c/classxAOD_1_1Egamma__v1" kindref="compound">Egamma_v1</ref> &amp;</type>
          <declname>eg</declname>
        </param>
        <briefdescription>
<para>Copy constructor (default implementation). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="62" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="18" bodyend="19"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>xAOD::Egamma Assignment operator</header>
      <description><para><anchor id="_1amgrp2c94100acf1b06abbb6251980d4bf318"/> </para></description>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1ab0ba0e6120b3eea36befb17bbf31906d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d4c/classxAOD_1_1Egamma__v1" kindref="compound">Egamma_v1</ref> &amp;</type>
        <definition>Egamma_v1 &amp; xAOD::Egamma_v1::operator=</definition>
        <argsstring>(const Egamma_v1 &amp;eg)</argsstring>
        <name>operator=</name>
        <reimplements refid="dc/db0/classSG_1_1AuxElement_1a1ecd49ad16cba61c3131046d8e068650">operator=</reimplements>
        <reimplementedby refid="df/df1/classxAOD_1_1Photon__v1_1a540c991d01ca45db43d46035f8ad6eeb">operator=</reimplementedby>
        <reimplementedby refid="d3/da7/classxAOD_1_1Electron__v1_1a23218cf2fbf6fc29d3ebdea5b443be98">operator=</reimplementedby>
        <param>
          <type>const <ref refid="d5/d4c/classxAOD_1_1Egamma__v1" kindref="compound">Egamma_v1</ref> &amp;</type>
          <declname>eg</declname>
        </param>
        <briefdescription>
<para>Assignment Operator. Using the assignment of <ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound">SG::AuxElement</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="71" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="21" bodyend="34"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>xAOD::Egamma 4-Mom functions</header>
      <description><para><anchor id="_1amgrp381517655493b6e67acbacb4951609a6"/> </para></description>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a1424b7edbe81cf37e473129b25de116f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Egamma_v1::setP4</definition>
        <argsstring>(float pt, float eta, float phi, float m)</argsstring>
        <name>setP4</name>
        <param>
          <type>float</type>
          <declname>pt</declname>
        </param>
        <param>
          <type>float</type>
          <declname>eta</declname>
        </param>
        <param>
          <type>float</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>float</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>set the 4-vec </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="114" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="73" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a91f15804dee9affffd6ae4aecee604d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Egamma_v1::setPt</definition>
        <argsstring>(float pt)</argsstring>
        <name>setPt</name>
        <param>
          <type>float</type>
          <declname>pt</declname>
        </param>
        <briefdescription>
<para>set the Pt </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="117" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="86" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a423160d03d506b2238e9b711fdaa95aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Egamma_v1::setEta</definition>
        <argsstring>(float eta)</argsstring>
        <name>setEta</name>
        <param>
          <type>float</type>
          <declname>eta</declname>
        </param>
        <briefdescription>
<para>set the eta </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="120" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="93" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a4a07a23da2c3b97cb2998acee1df1296" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Egamma_v1::setPhi</definition>
        <argsstring>(float phi)</argsstring>
        <name>setPhi</name>
        <param>
          <type>float</type>
          <declname>phi</declname>
        </param>
        <briefdescription>
<para>set the phi </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="123" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="100" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a4ff0e73d79c45d0ced4e77b1ca4f74d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Egamma_v1::setM</definition>
        <argsstring>(float m)</argsstring>
        <name>setM</name>
        <param>
          <type>float</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>set the Mass </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="126" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="107" bodyend="112"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>xAOD::Egamma author (i.e. which reco algorithm was used)</header>
      <description><para><anchor id="_1amgrpb871f7f8e5a74b681ad54a030af12203"/> </para></description>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1ae6d85313985892f5bbfda67e4194e449" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t xAOD::Egamma_v1::author</definition>
        <argsstring>(uint16_t bitmask=EgammaParameters::AuthorALL) const </argsstring>
        <name>author</name>
        <param>
          <type>uint16_t</type>
          <declname>bitmask</declname>
          <defval>EgammaParameters::AuthorALL</defval>
        </param>
        <briefdescription>
<para>Get author. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="174" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="132" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1ac739caad9a5e1d28bb01c75fe1428ccd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Egamma_v1::addAuthor</definition>
        <argsstring>(uint16_t)</argsstring>
        <name>addAuthor</name>
        <param>
          <type>uint16_t</type>
          <defname>newAuthor</defname>
        </param>
        <briefdescription>
<para>add author </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="177" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="138" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a067237194e53ea2d80ae525619089d23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Egamma_v1::setAuthor</definition>
        <argsstring>(uint16_t)</argsstring>
        <name>setAuthor</name>
        <param>
          <type>uint16_t</type>
          <defname>newAuthor</defname>
        </param>
        <briefdescription>
<para>set author </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="180" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="144" bodyend="147"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>xAOD::Egamma Shower shape  Accesors</header>
      <description><para><anchor id="_1amgrpb1b7d24f50b71057872718eca379ea1e"/> If &apos;information&apos; is stored in this <ref refid="d4/d2b/classxAOD_1_1Egamma" kindref="compound">xAOD::Egamma</ref> and is of the correct type, then the function fills &apos;value&apos; and returns &apos;true&apos;, otherwise it returns &apos;false&apos;, and does not touch &apos;value&apos;. </para></description>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a132220c60799f5d19c27e6a9dd64e8ea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::Egamma_v1::showerShapeValue</definition>
        <argsstring>(float &amp;value, const EgammaParameters::ShowerShapeType information) const </argsstring>
        <name>showerShapeValue</name>
        <param>
          <type>float &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const EgammaParameters::ShowerShapeType</type>
          <declname>information</declname>
        </param>
        <briefdescription>
<para>Accessor for ShowerShape values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="192" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="150" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a684aafc5c974224710f837de37248398" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float xAOD::Egamma_v1::showerShapeValue</definition>
        <argsstring>(const EgammaParameters::ShowerShapeType information) const </argsstring>
        <name>showerShapeValue</name>
        <param>
          <type>const EgammaParameters::ShowerShapeType</type>
          <declname>information</declname>
        </param>
        <briefdescription>
<para>Accessor to ShowerShape values , this just returns the value without internaly checking if it exists. Will lead to an exception if the variable is not available. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="196" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="163" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a0ff80af411b893a13c583d2a6dc4a9c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::Egamma_v1::setShowerShapeValue</definition>
        <argsstring>(float value, const EgammaParameters::ShowerShapeType information)</argsstring>
        <name>setShowerShapeValue</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const EgammaParameters::ShowerShapeType</type>
          <declname>information</declname>
        </param>
        <briefdescription>
<para>Set method for Shower Shape values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="199" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="169" bodyend="176"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>xAOD::Egamma Isolation value Accesors</header>
      <description><para><anchor id="_1amgrp6ab22283ce4fa3464193260a332bbd33"/> If &apos;information&apos; is stored in this <ref refid="d4/d2b/classxAOD_1_1Egamma" kindref="compound">xAOD::Egamma</ref> and is of the correct type, then the function fills &apos;value&apos; and returns &apos;true&apos;, otherwise it returns &apos;false&apos;, and does not touch &apos;value&apos;. </para></description>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1af0a931cf7fcb2b333035fa85e1a223ad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::Egamma_v1::isolation</definition>
        <argsstring>(float &amp;value, const Iso::IsolationType information) const </argsstring>
        <name>isolation</name>
        <param>
          <type>float &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1a64cf14cc53f00d0342ccc89131a3ab8f" kindref="member">Iso::IsolationType</ref></type>
          <declname>information</declname>
        </param>
        <briefdescription>
<para>Accessor for Isolation values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="210" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="179" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a1733e33efa7ccfea84c12416946b2fb8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float xAOD::Egamma_v1::isolation</definition>
        <argsstring>(const Iso::IsolationType information) const </argsstring>
        <name>isolation</name>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1a64cf14cc53f00d0342ccc89131a3ab8f" kindref="member">Iso::IsolationType</ref></type>
          <declname>information</declname>
        </param>
        <briefdescription>
<para>Accessor to Isolation values , this just returns the value without internaly checking if it exists. Will lead to an exception if the information is not available. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="214" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="192" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a9ad0fd2fcfdc6721096fecb1f7f4ca8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::Egamma_v1::setIsolation</definition>
        <argsstring>(float value, const Iso::IsolationType information)</argsstring>
        <name>setIsolation</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1a64cf14cc53f00d0342ccc89131a3ab8f" kindref="member">Iso::IsolationType</ref></type>
          <declname>information</declname>
        </param>
        <briefdescription>
<para>set method for Isolation values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="217" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="198" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a2f7f9c2b6db40e6e4ff3a914c3a6831e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::Egamma_v1::isolationValue</definition>
        <argsstring>(float &amp;value, const Iso::IsolationType information) const </argsstring>
        <name>isolationValue</name>
        <param>
          <type>float &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1a64cf14cc53f00d0342ccc89131a3ab8f" kindref="member">Iso::IsolationType</ref></type>
          <declname>information</declname>
        </param>
        <briefdescription>
<para>old Accessor for Isolation values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="221" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" bodystart="221" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1ab75b1818fd18bf0e11e0e2e9004bcdf0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float xAOD::Egamma_v1::isolationValue</definition>
        <argsstring>(const Iso::IsolationType information) const </argsstring>
        <name>isolationValue</name>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1a64cf14cc53f00d0342ccc89131a3ab8f" kindref="member">Iso::IsolationType</ref></type>
          <declname>information</declname>
        </param>
        <briefdescription>
<para>old Accessor to Isolation values , this just returns the value without internaly checking if it exists. Will lead to an exception if the information is not available </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="227" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" bodystart="227" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a9f2ffaabebe6772d6ca87b4b53224553" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::Egamma_v1::setIsolationValue</definition>
        <argsstring>(float value, const Iso::IsolationType information)</argsstring>
        <name>setIsolationValue</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1a64cf14cc53f00d0342ccc89131a3ab8f" kindref="member">Iso::IsolationType</ref></type>
          <declname>information</declname>
        </param>
        <briefdescription>
<para>old set method for Isolation values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="232" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" bodystart="232" bodyend="234"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>xAOD::Egamma Isolation correction  Accesors</header>
      <description><para><anchor id="_1amgrpd5e60cbcbd424bdcfbfb17649854d066"/> If &apos;information&apos; is stored in this <ref refid="d4/d2b/classxAOD_1_1Egamma" kindref="compound">xAOD::Egamma</ref> and is of the correct type, then the function fills &apos;value&apos; and returns &apos;true&apos;, otherwise it returns &apos;false&apos;, and does not touch &apos;value&apos;. </para></description>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1ac1f838bba3bc1fda254ebd0746ec84db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::Egamma_v1::isolationCaloCorrection</definition>
        <argsstring>(float &amp;value, const Iso::IsolationFlavour flavour, const Iso::IsolationCaloCorrection corr, const Iso::IsolationCorrectionParameter param) const </argsstring>
        <name>isolationCaloCorrection</name>
        <param>
          <type>float &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1a7efe235f93c604b06856e397129fdb86" kindref="member">Iso::IsolationFlavour</ref></type>
          <declname>flavour</declname>
        </param>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1ae465287a132699088d47001124c72ec8" kindref="member">Iso::IsolationCaloCorrection</ref></type>
          <declname>corr</declname>
        </param>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1ae3ff6c71df01b30ae787cfd544e01eed" kindref="member">Iso::IsolationCorrectionParameter</ref></type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Accessor for flavour and type depended Isolation Calo correction. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="247" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="208" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1aa6960f7bd0294484cef812059a78f0fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float xAOD::Egamma_v1::isolationCaloCorrection</definition>
        <argsstring>(const Iso::IsolationFlavour flavour, const Iso::IsolationCaloCorrection corr, const Iso::IsolationCorrectionParameter param) const </argsstring>
        <name>isolationCaloCorrection</name>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1a7efe235f93c604b06856e397129fdb86" kindref="member">Iso::IsolationFlavour</ref></type>
          <declname>flavour</declname>
        </param>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1ae465287a132699088d47001124c72ec8" kindref="member">Iso::IsolationCaloCorrection</ref></type>
          <declname>corr</declname>
        </param>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1ae3ff6c71df01b30ae787cfd544e01eed" kindref="member">Iso::IsolationCorrectionParameter</ref></type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Accessor for flavour and type depended Isolation Calo corrections , this just returns the correction without internaly checking if it exists. Will lead to an exception if the information is not available. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="252" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="222" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1afca38ccee1cc8d942b72c2b5a3f833ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::Egamma_v1::setIsolationCaloCorrection</definition>
        <argsstring>(float value, const Iso::IsolationFlavour flavour, const Iso::IsolationCaloCorrection corr, const Iso::IsolationCorrectionParameter param)</argsstring>
        <name>setIsolationCaloCorrection</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1a7efe235f93c604b06856e397129fdb86" kindref="member">Iso::IsolationFlavour</ref></type>
          <declname>flavour</declname>
        </param>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1ae465287a132699088d47001124c72ec8" kindref="member">Iso::IsolationCaloCorrection</ref></type>
          <declname>corr</declname>
        </param>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1ae3ff6c71df01b30ae787cfd544e01eed" kindref="member">Iso::IsolationCorrectionParameter</ref></type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>set method for flavour and type depended Isolation Calo Corrections. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="256" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="230" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a586484525ab8055d1785ecdbc9fbc3b9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::Egamma_v1::isolationCaloCorrection</definition>
        <argsstring>(float &amp;value, Iso::IsolationType type, Iso::IsolationCaloCorrection corr) const </argsstring>
        <name>isolationCaloCorrection</name>
        <param>
          <type>float &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="db/d3d/namespacexAOD_1_1Iso_1a64cf14cc53f00d0342ccc89131a3ab8f" kindref="member">Iso::IsolationType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="db/d3d/namespacexAOD_1_1Iso_1ae465287a132699088d47001124c72ec8" kindref="member">Iso::IsolationCaloCorrection</ref></type>
          <declname>corr</declname>
        </param>
        <briefdescription>
<para>Accessor for type depended Isolation Calo correction. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="259" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="240" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1ae2bd5e16b94d5e5d0b981a6ed12102ae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float xAOD::Egamma_v1::isolationCaloCorrection</definition>
        <argsstring>(Iso::IsolationType type, Iso::IsolationCaloCorrection corr) const </argsstring>
        <name>isolationCaloCorrection</name>
        <param>
          <type><ref refid="db/d3d/namespacexAOD_1_1Iso_1a64cf14cc53f00d0342ccc89131a3ab8f" kindref="member">Iso::IsolationType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="db/d3d/namespacexAOD_1_1Iso_1ae465287a132699088d47001124c72ec8" kindref="member">Iso::IsolationCaloCorrection</ref></type>
          <declname>corr</declname>
        </param>
        <briefdescription>
<para>Accessor for type depended Isolation Calo corrections , this just returns the correction without internaly checking if it exists. Will lead to an exception if the information is not available. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="263" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="253" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a717c7d31246c148b5b4f8cb8c7d94125" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::Egamma_v1::setIsolationCaloCorrection</definition>
        <argsstring>(float value, Iso::IsolationType type, Iso::IsolationCaloCorrection corr)</argsstring>
        <name>setIsolationCaloCorrection</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="db/d3d/namespacexAOD_1_1Iso_1a64cf14cc53f00d0342ccc89131a3ab8f" kindref="member">Iso::IsolationType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="db/d3d/namespacexAOD_1_1Iso_1ae465287a132699088d47001124c72ec8" kindref="member">Iso::IsolationCaloCorrection</ref></type>
          <declname>corr</declname>
        </param>
        <briefdescription>
<para>set method for type depended Isolation Calo Corrections. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="266" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="259" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a8815edbd6a07e588bfddfec07a8e4ff5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::Egamma_v1::isolationTrackCorrection</definition>
        <argsstring>(float &amp;value, const Iso::IsolationFlavour flavour, const Iso::IsolationTrackCorrection corr) const </argsstring>
        <name>isolationTrackCorrection</name>
        <param>
          <type>float &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1a7efe235f93c604b06856e397129fdb86" kindref="member">Iso::IsolationFlavour</ref></type>
          <declname>flavour</declname>
        </param>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1ac0f0dbe9ac669e6afc9a0ac55e84f249" kindref="member">Iso::IsolationTrackCorrection</ref></type>
          <declname>corr</declname>
        </param>
        <briefdescription>
<para>Accessor for Isolation Track correction. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="269" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="267" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a11f84887e26d04bd2625568d84f3150b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float xAOD::Egamma_v1::isolationTrackCorrection</definition>
        <argsstring>(const Iso::IsolationFlavour flavour, const Iso::IsolationTrackCorrection corr) const </argsstring>
        <name>isolationTrackCorrection</name>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1a7efe235f93c604b06856e397129fdb86" kindref="member">Iso::IsolationFlavour</ref></type>
          <declname>flavour</declname>
        </param>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1ac0f0dbe9ac669e6afc9a0ac55e84f249" kindref="member">Iso::IsolationTrackCorrection</ref></type>
          <declname>corr</declname>
        </param>
        <briefdescription>
<para>Accessor to Isolation Track corrections , this just returns the correction without internaly checking if it exists. Will lead to an exception if the information is not available. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="273" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="280" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1ad9128201008c12a80807258553e6805a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::Egamma_v1::setIsolationTrackCorrection</definition>
        <argsstring>(float value, const Iso::IsolationFlavour flavour, const Iso::IsolationTrackCorrection corr)</argsstring>
        <name>setIsolationTrackCorrection</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1a7efe235f93c604b06856e397129fdb86" kindref="member">Iso::IsolationFlavour</ref></type>
          <declname>flavour</declname>
        </param>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1ac0f0dbe9ac669e6afc9a0ac55e84f249" kindref="member">Iso::IsolationTrackCorrection</ref></type>
          <declname>corr</declname>
        </param>
        <briefdescription>
<para>Set method for Isolation Track Corrections. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="276" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="287" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a5c0a54d58af75673853f9b4fffa0f45a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::Egamma_v1::isolationCorrectionBitset</definition>
        <argsstring>(std::bitset&lt; 32 &gt; &amp;value, const Iso::IsolationFlavour flavour) const </argsstring>
        <name>isolationCorrectionBitset</name>
        <param>
          <type>std::bitset&lt; 32 &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1a7efe235f93c604b06856e397129fdb86" kindref="member">Iso::IsolationFlavour</ref></type>
          <declname>flavour</declname>
        </param>
        <briefdescription>
<para>Accessor for Isolation corection Bitset. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="280" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="295" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a5a06b7dd2f8936ca22bd056b994aedcc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::bitset&lt; 32 &gt;</type>
        <definition>std::bitset&lt; 32 &gt; xAOD::Egamma_v1::isolationCorrectionBitset</definition>
        <argsstring>(const Iso::IsolationFlavour flavour) const </argsstring>
        <name>isolationCorrectionBitset</name>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1a7efe235f93c604b06856e397129fdb86" kindref="member">Iso::IsolationFlavour</ref></type>
          <declname>flavour</declname>
        </param>
        <briefdescription>
<para>Accessor to Isolation corection Bitset , this just returns the bitset without internaly checking if it exists. Will lead to an exception if the information is not available. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="284" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="308" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1adbc6115a83a660cf1bf07a8051978c9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::Egamma_v1::setIsolationCorrectionBitset</definition>
        <argsstring>(uint32_t value, const Iso::IsolationFlavour flavour)</argsstring>
        <name>setIsolationCorrectionBitset</name>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1a7efe235f93c604b06856e397129fdb86" kindref="member">Iso::IsolationFlavour</ref></type>
          <declname>flavour</declname>
        </param>
        <briefdescription>
<para>Set method for Isolation corection Bitset. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="287" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="314" bodyend="320"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>xAOD::Egamma  object quality of the calorimeter cluster</header>
      <description><para><anchor id="_1amgrp51eef571f96f55e8b76d128eadfe3806"/> </para></description>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a3a9f19e2fab41772f8d0186c31acb6aa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::Egamma_v1::isGoodOQ</definition>
        <argsstring>(uint32_t mask) const </argsstring>
        <name>isGoodOQ</name>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Check object quality. Return True is it is Good Object Quality. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="296"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a47ed9e0498f310e9e119911927102c7b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t xAOD::Egamma_v1::OQ</definition>
        <argsstring>() const </argsstring>
        <name>OQ</name>
        <briefdescription>
<para>Return the object quality bit word. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="299" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="368" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a580cbf8b1776ac9c860d23c88a6c10b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Egamma_v1::setOQ</definition>
        <argsstring>(uint32_t newOQ)</argsstring>
        <name>setOQ</name>
        <param>
          <type>uint32_t</type>
          <declname>newOQ</declname>
        </param>
        <briefdescription>
<para>Set the object quality. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="302" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="373" bodyend="376"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>xAOD::Egamma selector methods with enums</header>
      <description><para><anchor id="_1amgrp097d380e2e12485d5aa2914d6372a067"/>Check if the egamma object pass a selection menu If the menu decision is stored in this <ref refid="d4/d2b/classxAOD_1_1Egamma" kindref="compound">xAOD::Egamma</ref>, then the function fills &apos;value&apos; with the decision (reference) and returns &apos;true&apos;, otherwise it returns &apos;false&apos;, and does not touch &apos;value&apos;. </para></description>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a8100e3ee0bc223198afbad3a98428907" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::Egamma_v1::passSelection</definition>
        <argsstring>(bool &amp;value, const xAOD::EgammaParameters::SelectionMenu menu) const </argsstring>
        <name>passSelection</name>
        <param>
          <type>bool &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const xAOD::EgammaParameters::SelectionMenu</type>
          <declname>menu</declname>
        </param>
        <briefdescription>
<para>Selectors / isEM and all that. </para>        </briefdescription>
        <detaileddescription>
<para>First with enums (static accessor no lookup =&gt; faster but less flexible) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="315" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="383" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1aadea8c1d5308ee3bdfdaa573a01aae2b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::Egamma_v1::passSelection</definition>
        <argsstring>(const xAOD::EgammaParameters::SelectionMenu menu) const </argsstring>
        <name>passSelection</name>
        <param>
          <type>const xAOD::EgammaParameters::SelectionMenu</type>
          <declname>menu</declname>
        </param>
        <briefdescription>
<para>Check if the egamma object pass a selection menu If the particular menu decision is not stored in this <ref refid="d4/d2b/classxAOD_1_1Egamma" kindref="compound">xAOD::Egamma</ref>, an exception will occur. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="320" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="395" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a69da50401824e8b722648ece2c86fd2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Egamma_v1::setPassSelection</definition>
        <argsstring>(bool value, const xAOD::EgammaParameters::SelectionMenu menu)</argsstring>
        <name>setPassSelection</name>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const xAOD::EgammaParameters::SelectionMenu</type>
          <declname>menu</declname>
        </param>
        <briefdescription>
<para>Set the selection decision for a menu. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="323" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="401" bodyend="405"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a93fb2ba5994e0120e89ecdfb90ef4ad0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::Egamma_v1::selectionisEM</definition>
        <argsstring>(unsigned int &amp;value, const xAOD::EgammaParameters::SelectionisEM isEM) const </argsstring>
        <name>selectionisEM</name>
        <param>
          <type>unsigned int &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const xAOD::EgammaParameters::SelectionisEM</type>
          <declname>isEM</declname>
        </param>
        <briefdescription>
<para>Return the isEM word for a selection menu If the menu isEM is stored in this <ref refid="d4/d2b/classxAOD_1_1Egamma" kindref="compound">xAOD::Egamma</ref>, then the function fills &apos;value&apos; with the isEM (reference) and returns &apos;true&apos;, otherwise it returns &apos;false&apos;, and does not touch &apos;value&apos;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="330" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="407" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1aaafb2cfc884d019e13c4284690b7ad55" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int xAOD::Egamma_v1::selectionisEM</definition>
        <argsstring>(const xAOD::EgammaParameters::SelectionisEM isEM) const </argsstring>
        <name>selectionisEM</name>
        <param>
          <type>const xAOD::EgammaParameters::SelectionisEM</type>
          <declname>isEM</declname>
        </param>
        <briefdescription>
<para>Return the isEM word for a selection menu If the particular isEM word is not stored in this <ref refid="d4/d2b/classxAOD_1_1Egamma" kindref="compound">xAOD::Egamma</ref>, an exception will occur. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="335" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="419" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a6a9d41e1b5b7a7d6b3b6a571af7aff02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Egamma_v1::setSelectionisEM</definition>
        <argsstring>(unsigned int value, const xAOD::EgammaParameters::SelectionisEM isEM)</argsstring>
        <name>setSelectionisEM</name>
        <param>
          <type>unsigned int</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const xAOD::EgammaParameters::SelectionisEM</type>
          <declname>isEM</declname>
        </param>
        <briefdescription>
<para>Set the isEM word for a selection menu. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="338" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="425" bodyend="429"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>xAOD::Egamma selector / isEM methods using the menu name</header>
      <description><para><anchor id="_1amgrpe28122f0e7d0394b15033d1e12a4739e"/> </para></description>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1ada49c66713644dca5a5f950061772760" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::Egamma_v1::passSelection</definition>
        <argsstring>(bool &amp;value, const std::string &amp;menu) const </argsstring>
        <name>passSelection</name>
        <param>
          <type>bool &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>menu</declname>
        </param>
        <briefdescription>
<para>Check if the egamma object pass a selection menu (using the name) If the menu decision is stored in this <ref refid="d4/d2b/classxAOD_1_1Egamma" kindref="compound">xAOD::Egamma</ref>, then the function fills &apos;value&apos; with the decision (reference) and returns &apos;true&apos;, otherwise it returns &apos;false&apos;, and does not touch &apos;value&apos;. </para>        </briefdescription>
        <detaileddescription>
<para>Then with strings (full flexibility when adding new menus dynamically) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="351" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="432" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a8f937fe8f25fbcf0d3ec74777d9875c3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::Egamma_v1::passSelection</definition>
        <argsstring>(const std::string &amp;menu) const </argsstring>
        <name>passSelection</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>menu</declname>
        </param>
        <briefdescription>
<para>Check if the egamma object pass a selection menu (using the name) If the particular menu decision is not stored in this <ref refid="d4/d2b/classxAOD_1_1Egamma" kindref="compound">xAOD::Egamma</ref>, an exception will occur. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="356" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="441" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a28fa86f58037ed26325f5cd4abefaaed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Egamma_v1::setPassSelection</definition>
        <argsstring>(bool value, const std::string &amp;menu)</argsstring>
        <name>setPassSelection</name>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>menu</declname>
        </param>
        <briefdescription>
<para>Set the selection decision for a menu (using the name). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="359" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="446" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1ace47361d2f939e473df209f59d297117" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::Egamma_v1::selectionisEM</definition>
        <argsstring>(unsigned int &amp;value, const std::string &amp;isEM) const </argsstring>
        <name>selectionisEM</name>
        <param>
          <type>unsigned int &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>isEM</declname>
        </param>
        <briefdescription>
<para>Return the isEM word for a selection menu If the menu isEM is stored in this <ref refid="d4/d2b/classxAOD_1_1Egamma" kindref="compound">xAOD::Egamma</ref>, then the function fills &apos;value&apos; with the isEM (reference) and returns &apos;true&apos;, otherwise it returns &apos;false&apos;, and does not touch &apos;value&apos;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="366" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="452" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1abcc9ca045e115ef7371c6cacaf6d201c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int xAOD::Egamma_v1::selectionisEM</definition>
        <argsstring>(const std::string &amp;isEM) const </argsstring>
        <name>selectionisEM</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>isEM</declname>
        </param>
        <briefdescription>
<para>Return the isEM word for a selection menu (using the name) If the particular isEM word is not stored in this <ref refid="d4/d2b/classxAOD_1_1Egamma" kindref="compound">xAOD::Egamma</ref>, an exception will occur. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="371" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="461" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a04c284c5883116892f34a3472fcae286" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Egamma_v1::setSelectionisEM</definition>
        <argsstring>(unsigned int value, const std::string &amp;isEM)</argsstring>
        <name>setSelectionisEM</name>
        <param>
          <type>unsigned int</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>isEM</declname>
        </param>
        <briefdescription>
<para>Set the isEM word for a selection menu (using the name). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="374" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="466" bodyend="470"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1aa8ea1eec284609eb403b92d80c37bd7e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::Egamma_v1::likelihoodValue</definition>
        <argsstring>(float &amp;value, const std::string &amp;LHValue=std::string(&quot;LHValue&quot;)) const </argsstring>
        <name>likelihoodValue</name>
        <param>
          <type>float &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>LHValue</declname>
          <defval>std::string(&quot;LHValue&quot;)</defval>
        </param>
        <briefdescription>
<para>Return the LH value as float If the LH decision is stored in this <ref refid="d4/d2b/classxAOD_1_1Egamma" kindref="compound">xAOD::Egamma</ref>, then the function fills &apos;value&apos; with the decision (reference) and returns &apos;true&apos;, otherwise it returns &apos;false&apos;, and does not touch &apos;value&apos;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="381" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="472" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a21a4b72b2e74978de961677abe9d0d85" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float xAOD::Egamma_v1::likelihoodValue</definition>
        <argsstring>(const std::string &amp;LHValue=std::string(&quot;LHValue&quot;)) const </argsstring>
        <name>likelihoodValue</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>LHValue</declname>
          <defval>std::string(&quot;LHValue&quot;)</defval>
        </param>
        <briefdescription>
<para>Return the LH value as float If the LH Value is not stored in this <ref refid="d4/d2b/classxAOD_1_1Egamma" kindref="compound">xAOD::Egamma</ref>, an exception will occur. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="386" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="481" bodyend="484"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classxAOD_1_1Egamma__v1_1a2a1194afd77f29bdd7b4f13dd1e7558e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Egamma_v1::setLikelihoodValue</definition>
        <argsstring>(float value, const std::string &amp;LHValue=std::string(&quot;LHValue&quot;))</argsstring>
        <name>setLikelihoodValue</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>LHValue</declname>
          <defval>std::string(&quot;LHValue&quot;)</defval>
        </param>
        <briefdescription>
<para>Set the LHValue as float. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="389" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx" bodystart="486" bodyend="490"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d5/d4c/classxAOD_1_1Egamma__v1_1a0b61b2b61d25dafcab1262b5907ee101" prot="private" static="no" mutable="yes">
        <type><ref refid="d5/d4c/classxAOD_1_1Egamma__v1_1a387b516af32193b22a1ec12856936ea7" kindref="member">FourMom_t</ref></type>
        <definition>FourMom_t xAOD::Egamma_v1::m_p4</definition>
        <argsstring></argsstring>
        <name>m_p4</name>
        <briefdescription>
<para>Cached 4-momentum object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="397" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" bodystart="397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d5/d4c/classxAOD_1_1Egamma__v1_1ac2892c4ecd1d174b4503d31d12370796" prot="private" static="no" mutable="yes">
        <type>bool</type>
        <definition>bool xAOD::Egamma_v1::m_p4Cached</definition>
        <argsstring></argsstring>
        <name>m_p4Cached</name>
        <briefdescription>
<para>Cache state of the internal 4-momentum (reset from the streamer). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="401" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" bodystart="401" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5469">
        <label>xAOD::Electron_v1</label>
        <link refid="d3/da7/classxAOD_1_1Electron__v1"/>
        <childnode refid="5465" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5470">
        <label>xAOD::Photon_v1</label>
        <link refid="df/df1/classxAOD_1_1Photon__v1"/>
        <childnode refid="5465" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5468">
        <label>SG::IAuxElement</label>
        <link refid="df/dca/classSG_1_1IAuxElement"/>
      </node>
      <node id="5466">
        <label>xAOD::IParticle</label>
        <link refid="d5/d4c/classxAOD_1_1IParticle"/>
        <childnode refid="5467" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5465">
        <label>xAOD::Egamma_v1</label>
        <link refid="d5/d4c/classxAOD_1_1Egamma__v1"/>
        <childnode refid="5466" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5467">
        <label>SG::AuxElement</label>
        <link refid="dc/db0/classSG_1_1AuxElement"/>
        <childnode refid="5468" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5485">
        <label>Internal::rehash_base&lt;Internal::prime_rehash_policy , hashtable&lt;Value , Value , Alloc , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="db/d2b/classInternal_1_1rehash__base"/>
      </node>
      <node id="5486">
        <label>Internal::hash_code_base&lt;Value , Value , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , cache_hash_code&gt;</label>
        <link refid="d0/d2e/classInternal_1_1hash__code__base"/>
      </node>
      <node id="5481">
        <label>xAOD::TVirtualEvent</label>
        <link refid="de/daf/classxAOD_1_1TVirtualEvent"/>
      </node>
      <node id="5490">
        <label>SG::AuxElementData</label>
        <link refid="dc/dfb/classSG_1_1AuxElementData"/>
        <childnode refid="5475" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5484">
        <label>SG::hashtable&lt; Value, Value, Alloc, Internal::identity&lt; Value &gt;, Pred, Hash, Internal::mod_range_hashing, Internal::default_ranged_hash, Internal::prime_rehash_policy, cache_hash_code, true, true &gt;</label>
        <link refid="de/d63/classSG_1_1hashtable"/>
        <childnode refid="5485" relation="public-inheritance">
        </childnode>
        <childnode refid="5486" relation="public-inheritance">
        </childnode>
        <childnode refid="5487" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5479">
        <label>SelectNoInstance</label>
        <link refid="d9/dec/classSelectNoInstance"/>
      </node>
      <node id="5480">
        <label>DataLinkBase</label>
        <link refid="dd/d9d/classDataLinkBase"/>
      </node>
      <node id="5474">
        <label>SG::IAuxElement</label>
        <link refid="df/dca/classSG_1_1IAuxElement"/>
      </node>
      <node id="5472">
        <label>xAOD::IParticle</label>
        <link refid="d5/d4c/classxAOD_1_1IParticle"/>
        <childnode refid="5473" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5477">
        <label>SG::IConstAuxStore</label>
        <link refid="d3/dd5/classSG_1_1IConstAuxStore"/>
      </node>
      <node id="5478">
        <label>DataLink&lt; SG::IConstAuxStore &gt;</label>
        <link refid="da/da2/classDataLink"/>
        <childnode refid="5479" relation="public-inheritance">
        </childnode>
        <childnode refid="5480" relation="public-inheritance">
        </childnode>
        <childnode refid="5481" relation="usage">
          <edgelabel>m_event</edgelabel>
        </childnode>
        <childnode refid="5477" relation="usage">
          <edgelabel>m_object</edgelabel>
        </childnode>
      </node>
      <node id="5471">
        <label>xAOD::Egamma_v1</label>
        <link refid="d5/d4c/classxAOD_1_1Egamma__v1"/>
        <childnode refid="5472" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5476">
        <label>SG::IAuxStore</label>
        <link refid="dc/d05/classSG_1_1IAuxStore"/>
        <childnode refid="5477" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5483">
        <label>SG::unordered_set&lt; Value, Hash, Pred, Alloc, cache_hash_code &gt;</label>
        <link refid="dd/dac/classSG_1_1unordered__set"/>
        <childnode refid="5484" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5487">
        <label>Internal::map_base&lt;Value , Value , Internal::identity&lt; Value &gt; , unique_keys, hashtable&lt;Value , Value , Alloc , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="d1/d54/classInternal_1_1map__base"/>
      </node>
      <node id="5488">
        <label>SG::AuxVectorData::Cache</label>
        <childnode refid="5489" relation="usage">
          <edgelabel>m_cache</edgelabel>
        </childnode>
      </node>
      <node id="5482">
        <label>mutex</label>
      </node>
      <node id="5473">
        <label>SG::AuxElement</label>
        <link refid="dc/db0/classSG_1_1AuxElement"/>
        <childnode refid="5474" relation="public-inheritance">
        </childnode>
        <childnode refid="5475" relation="usage">
          <edgelabel>m_container</edgelabel>
        </childnode>
        <childnode refid="5490" relation="usage">
          <edgelabel>m_privateData</edgelabel>
          <edgelabel>s_privatePlaceholder</edgelabel>
        </childnode>
      </node>
      <node id="5489">
        <label>void</label>
      </node>
      <node id="5475">
        <label>SG::AuxVectorData</label>
        <link refid="db/dd6/classSG_1_1AuxVectorData"/>
        <childnode refid="5476" relation="usage">
          <edgelabel>m_store</edgelabel>
        </childnode>
        <childnode refid="5478" relation="usage">
          <edgelabel>m_constStoreLink</edgelabel>
        </childnode>
        <childnode refid="5477" relation="usage">
          <edgelabel>m_constStore</edgelabel>
        </childnode>
        <childnode refid="5482" relation="usage">
          <edgelabel>m_mutex</edgelabel>
        </childnode>
        <childnode refid="5483" relation="usage">
          <edgelabel>s_emptySet</edgelabel>
        </childnode>
        <childnode refid="5488" relation="usage">
          <edgelabel>m_cache</edgelabel>
          <edgelabel>m_constCache</edgelabel>
          <edgelabel>m_decorCache</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" line="48" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/xAODEgamma/versions/Egamma_v1.h" bodystart="48" bodyend="405"/>
    <listofallmembers>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1ac739caad9a5e1d28bb01c75fe1428ccd" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>addAuthor</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1ae6d85313985892f5bbfda67e4194e449" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>author</name></member>
      <member refid="d5/d4c/classxAOD_1_1IParticle_1a27c59a50a203be500dae35e8ab217c75" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>auxdata</name></member>
      <member refid="d5/d4c/classxAOD_1_1IParticle_1a523f65a37d801b93f9334dc555257ef6" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>auxdata</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ace84dc4cbb05aa996bc0bb12ea0580b0" prot="public" virt="non-virtual" ambiguityscope="SG::AuxElement::"><scope>xAOD::Egamma_v1</scope><name>auxdata</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1acd13909ea46d99e1b502834f133a159c" prot="public" virt="non-virtual" ambiguityscope="SG::AuxElement::"><scope>xAOD::Egamma_v1</scope><name>auxdata</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a1fc119dd13bd2c74f2ce4f2ba19c8898" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>auxdataConst</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1afa20cbd90cdb931e16c2751709e35271" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>auxdataConst</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1af85b897bffef87879e0ed6a58428a60b" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>auxdecor</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a6c8fc3d315a5ec0633e7ae6a2b26a432" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>auxdecor</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1aef247a3ae0d53cd8c4f90702c7501d2f" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>AuxElement</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ac8345167ba85a0788d804a39b8325a36" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>AuxElement</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a59ef94cb0c87efcd27b3781048932e2e" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>caloCluster</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a3b873a0e8d4fca717f5d00eaf2aebbed" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>caloClusterLink</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a8e1688e9665559ba5dc6dca303091c07" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>caloClusterLinks</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a127c2c4839333f537cb83ecdc82ad99d" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>clearCache</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a71044a012a37af1bb0b6fab3d3ea1230" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>clearDecorations</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a6a546618ceacfd1cf73d02697db1f350" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>CLELVec_t</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a9004b51bd3619cab56c3d52e290c09b9" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>container</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a45f6f3563f9c8f088e4b840f81103588" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>container</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a603dfedeecd77b71f8fe72c1686074aa" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>covMatrix</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a8e58d9167d689f335753ec3112ea304f" prot="public" virt="virtual"><scope>xAOD::Egamma_v1</scope><name>e</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a79e70bc14a2fc3a29d7d45a2a2c9a5af" prot="protected" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>Egamma_v1</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a7404f9d63391180c74d09c3e50182670" prot="protected" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>Egamma_v1</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1acd4a485f56814dab83be15134b8a4d2d" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>EgammaCovMatrix_t</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a9c64d1f34b462d0c733eb29e51d68899" prot="public" virt="virtual"><scope>xAOD::Egamma_v1</scope><name>eta</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a387b516af32193b22a1ec12856936ea7" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>FourMom_t</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a607ee93fe8081d2bd3aa1745f0cbbb50" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>getAuxIDs</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a324d8fccbfe274b6ff91d6a19de35caf" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>getConstStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1afc4602cf2edeb01c3350367f5985f49b" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>getStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ac4bc75a2f7b1ed984ffae1bba6de58ba" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>hasNonConstStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a2d354faac53b7a003d29c0f7b95f3672" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>hasStore</name></member>
      <member refid="df/dca/classSG_1_1IAuxElement_1afdd6ee3469014a690d257119d34ec598" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>IAuxElement</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1aba555afb4547fbe96fbdc4b266f75f16" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>index</name></member>
      <member refid="d5/d4c/classxAOD_1_1IParticle_1a73d35d149fce4bcc1ce55da0faf8e0d5" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>isAvailable</name></member>
      <member refid="d5/d4c/classxAOD_1_1IParticle_1a0b30769b501e807f246424b3a8fa20da" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>isAvailableWritable</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a5c56e0b548ba0f0fa6eba200defaa44d" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>isAvailableWritableAsDecoration</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a3a9f19e2fab41772f8d0186c31acb6aa" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>isGoodOQ</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1af0a931cf7fcb2b333035fa85e1a223ad" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>isolation</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a1733e33efa7ccfea84c12416946b2fb8" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>isolation</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1ac1f838bba3bc1fda254ebd0746ec84db" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>isolationCaloCorrection</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1aa6960f7bd0294484cef812059a78f0fd" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>isolationCaloCorrection</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a586484525ab8055d1785ecdbc9fbc3b9" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>isolationCaloCorrection</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1ae2bd5e16b94d5e5d0b981a6ed12102ae" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>isolationCaloCorrection</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a5c0a54d58af75673853f9b4fffa0f45a" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>isolationCorrectionBitset</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a5a06b7dd2f8936ca22bd056b994aedcc" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>isolationCorrectionBitset</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a8815edbd6a07e588bfddfec07a8e4ff5" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>isolationTrackCorrection</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a11f84887e26d04bd2625568d84f3150b" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>isolationTrackCorrection</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a2f7f9c2b6db40e6e4ff3a914c3a6831e" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>isolationValue</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1ab75b1818fd18bf0e11e0e2e9004bcdf0" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>isolationValue</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1aa8ea1eec284609eb403b92d80c37bd7e" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>likelihoodValue</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a21a4b72b2e74978de961677abe9d0d85" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>likelihoodValue</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a01d1279e46ce4eb33b3fcb4c24454439" prot="public" virt="virtual"><scope>xAOD::Egamma_v1</scope><name>m</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a0b61b2b61d25dafcab1262b5907ee101" prot="private" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>m_p4</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1ac2892c4ecd1d174b4503d31d12370796" prot="private" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>m_p4Cached</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a197bf9fc579d49e25a850a4b3a5c14e8" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>makePrivateStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ad2eaf2e38536e93c05aebaf1218516a2" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>makePrivateStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a164f94b3ddbbc773ba8beefdb7cb8677" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>makePrivateStore</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1aff51c92a4239f737e8382bfdc076839f" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>nCaloClusters</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1ab0ba0e6120b3eea36befb17bbf31906d" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>operator=</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a47ed9e0498f310e9e119911927102c7b" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>OQ</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a3cb2d57ad308c4da1c5379062c479748" prot="public" virt="virtual"><scope>xAOD::Egamma_v1</scope><name>p4</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a8100e3ee0bc223198afbad3a98428907" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>passSelection</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1aadea8c1d5308ee3bdfdaa573a01aae2b" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>passSelection</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1ada49c66713644dca5a5f950061772760" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>passSelection</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a8f937fe8f25fbcf0d3ec74777d9875c3" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>passSelection</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a3d0388e78161846da4c5f02b5e7b73c6" prot="public" virt="virtual"><scope>xAOD::Egamma_v1</scope><name>phi</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1aee301381a5be0d47caa07b2947db1327" prot="public" virt="virtual"><scope>xAOD::Egamma_v1</scope><name>pt</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1ada67ec6540d85bc80e15726e6e25bba9" prot="public" virt="virtual"><scope>xAOD::Egamma_v1</scope><name>rapidity</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1aab2f280f3c832e285fe020365bb3ac1e" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>releasePrivateStore</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a93fb2ba5994e0120e89ecdfb90ef4ad0" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>selectionisEM</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1aaafb2cfc884d019e13c4284690b7ad55" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>selectionisEM</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1ace47361d2f939e473df209f59d297117" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>selectionisEM</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1abcc9ca045e115ef7371c6cacaf6d201c" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>selectionisEM</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a067237194e53ea2d80ae525619089d23" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>setAuthor</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a1e265e24ab5f0480cc7d20f56c65ab4a" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>setCaloClusterLinks</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a3079709e44e8ac7452c05454f4994ce9" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>setConstStore</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a408915b268d5ab9b11395215119b1116" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>setCovMatrix</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a423160d03d506b2238e9b711fdaa95aa" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>setEta</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a9ad0fd2fcfdc6721096fecb1f7f4ca8e" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>setIsolation</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1afca38ccee1cc8d942b72c2b5a3f833ab" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>setIsolationCaloCorrection</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a717c7d31246c148b5b4f8cb8c7d94125" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>setIsolationCaloCorrection</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1adbc6115a83a660cf1bf07a8051978c9a" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>setIsolationCorrectionBitset</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1ad9128201008c12a80807258553e6805a" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>setIsolationTrackCorrection</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a9f2ffaabebe6772d6ca87b4b53224553" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>setIsolationValue</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a2a1194afd77f29bdd7b4f13dd1e7558e" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>setLikelihoodValue</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a4ff0e73d79c45d0ced4e77b1ca4f74d0" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>setM</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a68b13428943609fd2b56c35c9dec85b3" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>setNonConstStore</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a580cbf8b1776ac9c860d23c88a6c10b9" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>setOQ</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a1424b7edbe81cf37e473129b25de116f" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>setP4</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a69da50401824e8b722648ece2c86fd2d" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>setPassSelection</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a28fa86f58037ed26325f5cd4abefaaed" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>setPassSelection</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a4a07a23da2c3b97cb2998acee1df1296" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>setPhi</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a91f15804dee9affffd6ae4aecee604d1" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>setPt</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a6a9d41e1b5b7a7d6b3b6a571af7aff02" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>setSelectionisEM</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a04c284c5883116892f34a3472fcae286" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>setSelectionisEM</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a0ff80af411b893a13c583d2a6dc4a9c0" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>setShowerShapeValue</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a57b602d3ec1c0129811375f46c18c049" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>setStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a9cc58e245a417833f297e836d9559a32" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>setStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a4bdca4ef5f1df892b5dc9742644444b8" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>setStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a6a154ec406bc6531a348a80e679da31f" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>SG::AuxVectorBase</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a4573c8a5a16556f7a1826c502a8a1577" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>SG::AuxVectorBase_test</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a132220c60799f5d19c27e6a9dd64e8ea" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>showerShapeValue</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a684aafc5c974224710f837de37248398" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>showerShapeValue</name></member>
      <member refid="d5/d4c/classxAOD_1_1Egamma__v1_1a693fc91cc7dac5b3faf20ff3fa61fbd6" prot="public" virt="pure-virtual"><scope>xAOD::Egamma_v1</scope><name>type</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ad7f08e277b177f9dd74924e7d635034e" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>usingPrivateStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1af97c2ef167b0d66ada327a0ada1015e7" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>usingStandaloneStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a0b6a5f12eb826137b6d218f5738bb0b1" prot="public" virt="non-virtual"><scope>xAOD::Egamma_v1</scope><name>~AuxElement</name></member>
      <member refid="d5/d4c/classxAOD_1_1IParticle_1ac395fa36a91d7e4e6533cafd92a1f29e" prot="public" virt="virtual"><scope>xAOD::Egamma_v1</scope><name>~IParticle</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
