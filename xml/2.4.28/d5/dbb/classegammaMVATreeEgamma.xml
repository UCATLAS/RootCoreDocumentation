<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d5/dbb/classegammaMVATreeEgamma" kind="class" prot="public">
    <compoundname>egammaMVATreeEgamma</compoundname>
    <basecompoundref refid="d1/d97/classasg_1_1AsgMessaging" prot="public" virt="non-virtual">asg::AsgMessaging</basecompoundref>
    <derivedcompoundref refid="d9/d4d/classegammaMVATreeElectron" prot="public" virt="non-virtual">egammaMVATreeElectron</derivedcompoundref>
    <derivedcompoundref refid="d2/d00/classegammaMVATreePhoton" prot="public" virt="non-virtual">egammaMVATreePhoton</derivedcompoundref>
    <includes refid="de/d6c/egammaMVATree_8h" local="no">egammaMVATree.h</includes>
      <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="d5/dbb/classegammaMVATreeEgamma_1aeb0fb5b194cfab61ac8b7e035ef49d93" prot="protected" static="no">
        <type>std::tuple&lt; std::string, std::function&lt; float(const <ref refid="dd/d91/classxAOD_1_1CaloCluster__v1" kindref="compound">xAOD::CaloCluster</ref> &amp;)&gt;, float &gt;</type>
        <definition>typedef std::tuple&lt;std::string, std::function&lt;float(const xAOD::CaloCluster&amp;)&gt;, float&gt; egammaMVATreeEgamma::FloatElement</definition>
        <argsstring></argsstring>
        <name>FloatElement</name>
        <reimplementedby refid="d9/d4d/classegammaMVATreeElectron_1a47fb8e7d4392f9aa93908d999861bd5e">FloatElement</reimplementedby>
        <reimplementedby refid="d2/d00/classegammaMVATreePhoton_1a0ddf576fe709838dbb38edfdaf76a264">FloatElement</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/egammaMVACalib/egammaMVATree.h" line="134" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/egammaMVACalib/egammaMVATree.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d5/dbb/classegammaMVATreeEgamma_1a91228dbc0b4550d13eaa674eff8462b5" prot="protected" static="no">
        <type>std::tuple&lt; std::string, std::function&lt; float(const <ref refid="d4/d2b/classxAOD_1_1Egamma" kindref="compound">xAOD::Egamma</ref> &amp;)&gt;, float &gt;</type>
        <definition>typedef std::tuple&lt;std::string, std::function&lt;float(const xAOD::Egamma&amp;)&gt;, float&gt; egammaMVATreeEgamma::FloatElementParticle</definition>
        <argsstring></argsstring>
        <name>FloatElementParticle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/egammaMVACalib/egammaMVATree.h" line="136" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/egammaMVACalib/egammaMVATree.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d5/dbb/classegammaMVATreeEgamma_1ae6e040a547f1a42581db2cc58f14e966" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string egammaMVATreeEgamma::m_prefix</definition>
        <argsstring></argsstring>
        <name>m_prefix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/egammaMVACalib/egammaMVATree.h" line="89" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/egammaMVACalib/egammaMVATree.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d5/dbb/classegammaMVATreeEgamma_1a8b240c135482076029af94cef50e13cb" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool egammaMVATreeEgamma::m_use_layer_corrected</definition>
        <argsstring></argsstring>
        <name>m_use_layer_corrected</name>
        <initializer> true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/egammaMVACalib/egammaMVATree.h" line="90" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/egammaMVACalib/egammaMVATree.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="d5/dbb/classegammaMVATreeEgamma_1aa18a6e917782ee535581896ebea9c104" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; FloatElement &gt;</type>
        <definition>std::vector&lt;FloatElement&gt; egammaMVATreeEgamma::m_functions_float_from_calo_cluster</definition>
        <argsstring></argsstring>
        <name>m_functions_float_from_calo_cluster</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/egammaMVACalib/egammaMVATree.h" line="135" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/egammaMVACalib/egammaMVATree.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d5/dbb/classegammaMVATreeEgamma_1ac06c0e70fdbc7a94b199a2849d92ee20" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; FloatElementParticle &gt;</type>
        <definition>std::vector&lt;FloatElementParticle&gt; egammaMVATreeEgamma::m_functions_float_from_particle</definition>
        <argsstring></argsstring>
        <name>m_functions_float_from_particle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/egammaMVACalib/egammaMVATree.h" line="137" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/egammaMVACalib/egammaMVATree.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d5/dbb/classegammaMVATreeEgamma_1ab6af6adbf4479c152ab05088218b050d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>egammaMVATreeEgamma::egammaMVATreeEgamma</definition>
        <argsstring>(const std::string &amp;name, const std::string &amp;prefix, const std::set&lt; std::string &gt; &amp;variables, bool use_layer_corrected=true)</argsstring>
        <name>egammaMVATreeEgamma</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>const std::set&lt; std::string &gt; &amp;</type>
          <declname>variables</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>use_layer_corrected</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/egammaMVACalib/egammaMVATree.h" line="74" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/Root/egammaMVATree.cxx" bodystart="27" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="d5/dbb/classegammaMVATreeEgamma_1a0d119f0d86d948b8b9c9ba5e9d0e6753" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void egammaMVATreeEgamma::update</definition>
        <argsstring>(const xAOD::Egamma *egamma)</argsstring>
        <name>update</name>
        <param>
          <type>const <ref refid="d4/d2b/classxAOD_1_1Egamma" kindref="compound">xAOD::Egamma</ref> *</type>
          <declname>egamma</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>call update for every egamma object, this update the internal variables connected to the branches </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/egammaMVACalib/egammaMVATree.h" line="85" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/Root/egammaMVATree.cxx" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="d5/dbb/classegammaMVATreeEgamma_1aae4e0c139127104bea052590f6b24f12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void egammaMVATreeEgamma::update</definition>
        <argsstring>(const xAOD::Egamma *egamma, const xAOD::CaloCluster *cluster)</argsstring>
        <name>update</name>
        <param>
          <type>const <ref refid="d4/d2b/classxAOD_1_1Egamma" kindref="compound">xAOD::Egamma</ref> *</type>
          <declname>egamma</declname>
        </param>
        <param>
          <type>const <ref refid="dd/d91/classxAOD_1_1CaloCluster__v1" kindref="compound">xAOD::CaloCluster</ref> *</type>
          <declname>cluster</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/egammaMVACalib/egammaMVATree.h" line="86" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/Root/egammaMVATree.cxx" bodystart="97" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="d5/dbb/classegammaMVATreeEgamma_1acf2cbe6bbf623dd4b77529b6d1b3f824" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
        </templateparamlist>
        <type>const <ref refid="d1/def/classT" kindref="compound">T</ref> &amp;</type>
        <definition>const T&amp; egammaMVATreeEgamma::get_ref</definition>
        <argsstring>(const std::string &amp;var_name) const </argsstring>
        <name>get_ref</name>
        <reimplementedby refid="d9/d4d/classegammaMVATreeElectron_1aea439146b4e666471db15058d7ef09d4">get_ref</reimplementedby>
        <reimplementedby refid="d2/d00/classegammaMVATreePhoton_1a7215ccbeb6a69cca5be4c632964c5382">get_ref</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>var_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/egammaMVACalib/egammaMVATree.h" line="140" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/egammaMVACalib/egammaMVATree.h" bodystart="139" bodyend="144"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d5/dbb/classegammaMVATreeEgamma_1a563b199b72a12520b1b21f554526ef14" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void egammaMVATreeEgamma::init_variables</definition>
        <argsstring>(const std::set&lt; std::string &gt; &amp;variables)</argsstring>
        <name>init_variables</name>
        <reimplementedby refid="d9/d4d/classegammaMVATreeElectron_1a7b4fd1f009f26157e952c1ac2d329794">init_variables</reimplementedby>
        <reimplementedby refid="d2/d00/classegammaMVATreePhoton_1ab368bd0961cd39b9fe1bd2182c151d1d">init_variables</reimplementedby>
        <param>
          <type>const std::set&lt; std::string &gt; &amp;</type>
          <declname>variables</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/egammaMVACalib/egammaMVATree.h" line="88" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/Root/egammaMVATree.cxx" bodystart="40" bodyend="73"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="d5/dbb/classegammaMVATreeEgamma_1a4d8112d05b99ef549947639a111d6b99" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
        </templateparamlist>
        <type>const <ref refid="d1/def/classT" kindref="compound">T</ref> *</type>
        <definition>const int * egammaMVATreeEgamma::get_ptr</definition>
        <argsstring>(const std::string &amp;) const </argsstring>
        <name>get_ptr</name>
        <reimplementedby refid="d9/d4d/classegammaMVATreeElectron_1a591eca52cf76896ceb36da103525b4a5">get_ptr</reimplementedby>
        <reimplementedby refid="d2/d00/classegammaMVATreePhoton_1aacd5d1656cf839e2d2611dfd41982914">get_ptr</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <defname>var_name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/egammaMVACalib/egammaMVATree.h" line="93" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/egammaMVACalib/egammaMVATree.h" bodystart="92" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="d5/dbb/classegammaMVATreeEgamma_1aebee9a971586ceec6dd4dc0e3cb8aef6" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
          <param>
            <type>typename MAPSTRINGFUNCTION</type>
          </param>
          <param>
            <type>typename CONTAINER</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void egammaMVATreeEgamma::search_var_and_add</definition>
        <argsstring>(const std::string &amp;var_name, const MAPSTRINGFUNCTION &amp;map_string_function, CONTAINER &amp;container)</argsstring>
        <name>search_var_and_add</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>var_name</declname>
        </param>
        <param>
          <type>const MAPSTRINGFUNCTION &amp;</type>
          <declname>map_string_function</declname>
        </param>
        <param>
          <type>CONTAINER &amp;</type>
          <declname>container</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/egammaMVACalib/egammaMVATree.h" line="101" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/egammaMVACalib/egammaMVATree.h" bodystart="98" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="d5/dbb/classegammaMVATreeEgamma_1a9ee210499c377d21866430ddf2ccf494" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
          <param>
            <type>typename MAPSTRINGFUNCTION</type>
          </param>
          <param>
            <type>typename CONTAINER</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void egammaMVATreeEgamma::create_structure</definition>
        <argsstring>(const std::set&lt; std::string &gt; vars, const MAPSTRINGFUNCTION &amp;map_string_function, CONTAINER &amp;container)</argsstring>
        <name>create_structure</name>
        <param>
          <type>const std::set&lt; std::string &gt;</type>
          <declname>vars</declname>
        </param>
        <param>
          <type>const MAPSTRINGFUNCTION &amp;</type>
          <declname>map_string_function</declname>
        </param>
        <param>
          <type>CONTAINER &amp;</type>
          <declname>container</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/egammaMVACalib/egammaMVATree.h" line="113" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/egammaMVACalib/egammaMVATree.h" bodystart="110" bodyend="132"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Base class implementing variables defined for egamma clusters </para>    </detaileddescription>
    <inheritancegraph>
      <node id="5581">
        <label>egammaMVATreePhoton</label>
        <link refid="d2/d00/classegammaMVATreePhoton"/>
        <childnode refid="5578" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5579">
        <label>asg::AsgMessaging</label>
        <link refid="d1/d97/classasg_1_1AsgMessaging"/>
      </node>
      <node id="5580">
        <label>egammaMVATreeElectron</label>
        <link refid="d9/d4d/classegammaMVATreeElectron"/>
        <childnode refid="5578" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5578">
        <label>egammaMVATreeEgamma</label>
        <link refid="d5/dbb/classegammaMVATreeEgamma"/>
        <childnode refid="5579" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5583">
        <label>asg::AsgMessaging</label>
        <link refid="d1/d97/classasg_1_1AsgMessaging"/>
      </node>
      <node id="5584">
        <label>string</label>
      </node>
      <node id="5582">
        <label>egammaMVATreeEgamma</label>
        <link refid="d5/dbb/classegammaMVATreeEgamma"/>
        <childnode refid="5583" relation="public-inheritance">
        </childnode>
        <childnode refid="5584" relation="usage">
          <edgelabel>m_prefix</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/egammaMVACalib/egammaMVATree.h" line="68" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/egammaMVACalib/egammaMVATree.h" bodystart="67" bodyend="148"/>
    <listofallmembers>
      <member refid="d1/d97/classasg_1_1AsgMessaging_1aa6e565de0931b6458b932cbb6a8ec55f" prot="public" virt="non-virtual"><scope>egammaMVATreeEgamma</scope><name>AsgMessaging</name></member>
      <member refid="d1/d97/classasg_1_1AsgMessaging_1ab1e1c2857d74fd5d60ba77d85cdaa26c" prot="public" virt="non-virtual"><scope>egammaMVATreeEgamma</scope><name>AsgMessaging</name></member>
      <member refid="d5/dbb/classegammaMVATreeEgamma_1a9ee210499c377d21866430ddf2ccf494" prot="protected" virt="non-virtual"><scope>egammaMVATreeEgamma</scope><name>create_structure</name></member>
      <member refid="d5/dbb/classegammaMVATreeEgamma_1ab6af6adbf4479c152ab05088218b050d" prot="public" virt="non-virtual"><scope>egammaMVATreeEgamma</scope><name>egammaMVATreeEgamma</name></member>
      <member refid="d5/dbb/classegammaMVATreeEgamma_1aeb0fb5b194cfab61ac8b7e035ef49d93" prot="protected" virt="non-virtual"><scope>egammaMVATreeEgamma</scope><name>FloatElement</name></member>
      <member refid="d5/dbb/classegammaMVATreeEgamma_1a91228dbc0b4550d13eaa674eff8462b5" prot="protected" virt="non-virtual"><scope>egammaMVATreeEgamma</scope><name>FloatElementParticle</name></member>
      <member refid="d5/dbb/classegammaMVATreeEgamma_1a4d8112d05b99ef549947639a111d6b99" prot="protected" virt="non-virtual"><scope>egammaMVATreeEgamma</scope><name>get_ptr</name></member>
      <member refid="d5/dbb/classegammaMVATreeEgamma_1acf2cbe6bbf623dd4b77529b6d1b3f824" prot="public" virt="non-virtual"><scope>egammaMVATreeEgamma</scope><name>get_ref</name></member>
      <member refid="d5/dbb/classegammaMVATreeEgamma_1a563b199b72a12520b1b21f554526ef14" prot="private" virt="non-virtual"><scope>egammaMVATreeEgamma</scope><name>init_variables</name></member>
      <member refid="d5/dbb/classegammaMVATreeEgamma_1aa18a6e917782ee535581896ebea9c104" prot="protected" virt="non-virtual"><scope>egammaMVATreeEgamma</scope><name>m_functions_float_from_calo_cluster</name></member>
      <member refid="d5/dbb/classegammaMVATreeEgamma_1ac06c0e70fdbc7a94b199a2849d92ee20" prot="protected" virt="non-virtual"><scope>egammaMVATreeEgamma</scope><name>m_functions_float_from_particle</name></member>
      <member refid="d5/dbb/classegammaMVATreeEgamma_1ae6e040a547f1a42581db2cc58f14e966" prot="private" virt="non-virtual"><scope>egammaMVATreeEgamma</scope><name>m_prefix</name></member>
      <member refid="d5/dbb/classegammaMVATreeEgamma_1a8b240c135482076029af94cef50e13cb" prot="private" virt="non-virtual"><scope>egammaMVATreeEgamma</scope><name>m_use_layer_corrected</name></member>
      <member refid="d1/d97/classasg_1_1AsgMessaging_1ade3c4b8227d4dd544df9b5aee53363c3" prot="public" virt="non-virtual"><scope>egammaMVATreeEgamma</scope><name>msg</name></member>
      <member refid="d1/d97/classasg_1_1AsgMessaging_1a7dd4e350bc2d52f0200257bd22eae53b" prot="public" virt="non-virtual"><scope>egammaMVATreeEgamma</scope><name>msg</name></member>
      <member refid="d1/d97/classasg_1_1AsgMessaging_1af52f582970fc09501ead498c285ebb32" prot="public" virt="non-virtual"><scope>egammaMVATreeEgamma</scope><name>msgLvl</name></member>
      <member refid="d5/dbb/classegammaMVATreeEgamma_1aebee9a971586ceec6dd4dc0e3cb8aef6" prot="protected" virt="non-virtual"><scope>egammaMVATreeEgamma</scope><name>search_var_and_add</name></member>
      <member refid="d5/dbb/classegammaMVATreeEgamma_1a0d119f0d86d948b8b9c9ba5e9d0e6753" prot="public" virt="non-virtual"><scope>egammaMVATreeEgamma</scope><name>update</name></member>
      <member refid="d5/dbb/classegammaMVATreeEgamma_1aae4e0c139127104bea052590f6b24f12" prot="public" virt="non-virtual"><scope>egammaMVATreeEgamma</scope><name>update</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
