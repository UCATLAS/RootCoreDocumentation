<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d5/d12/TrigPassFlags_8h" kind="file">
    <compoundname>TrigPassFlags.h</compoundname>
    <includes local="no">vector</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">stdexcept</includes>
    <includes refid="d6/d20/xAODCore_2xAODCore_2CLASS__DEF_8h" local="yes">xAODCore/CLASS_DEF.h</includes>
    <includes refid="d4/dfd/TrigPassFlagsCollection_8h" local="yes">TrigSteeringEvent/TrigPassFlagsCollection.h</includes>
    <includedby refid="d4/d1b/FeatureCollectAthena_8h" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureCollectAthena.h</includedby>
    <includedby refid="d5/de8/FeatureContainer_8h" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureContainer.h</includedby>
    <includedby refid="d3/d9c/TrigPassFlags_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/Root/TrigPassFlags.cxx</includedby>
    <includedby refid="d4/dfd/TrigPassFlagsCollection_8h" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassFlagsCollection.h</includedby>
    <incdepgraph>
      <node id="331853">
        <label>list</label>
      </node>
      <node id="331862">
        <label>AthContainers/tools/DVL_algorithms.icc</label>
        <link refid="df/daa/DVL__algorithms_8icc"/>
        <childnode refid="331847" relation="include">
        </childnode>
        <childnode refid="331854" relation="include">
        </childnode>
        <childnode refid="331838" relation="include">
        </childnode>
        <childnode refid="331843" relation="include">
        </childnode>
        <childnode refid="331772" relation="include">
        </childnode>
      </node>
      <node id="331847">
        <label>AthContainers/tools/DVLNoBase.h</label>
        <link refid="d7/d92/DVLNoBase_8h"/>
      </node>
      <node id="331817">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="331869">
        <label>AthContainers/tools/DVLDataBucket.h</label>
        <link refid="d4/d16/DVLDataBucket_8h"/>
        <childnode refid="331870" relation="include">
        </childnode>
        <childnode refid="331848" relation="include">
        </childnode>
        <childnode refid="331790" relation="include">
        </childnode>
        <childnode refid="331871" relation="include">
        </childnode>
      </node>
      <node id="331834">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="331782" relation="include">
        </childnode>
        <childnode refid="331783" relation="include">
        </childnode>
        <childnode refid="331790" relation="include">
        </childnode>
        <childnode refid="331791" relation="include">
        </childnode>
      </node>
      <node id="331836">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="331798" relation="include">
        </childnode>
        <childnode refid="331780" relation="include">
        </childnode>
        <childnode refid="331837" relation="include">
        </childnode>
        <childnode refid="331775" relation="include">
        </childnode>
      </node>
      <node id="331835">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="331789">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="331791">
        <label>functional</label>
      </node>
      <node id="331844">
        <label>boost/version.hpp</label>
      </node>
      <node id="331787">
        <label>limits</label>
      </node>
      <node id="331837">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="331815">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="331784">
        <label>iterator</label>
      </node>
      <node id="331799">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="331788" relation="include">
        </childnode>
        <childnode refid="331800" relation="include">
        </childnode>
      </node>
      <node id="331868">
        <label>SGTools/ClassName.h</label>
      </node>
      <node id="331874">
        <label>AthContainers/DataVector.icc</label>
        <link refid="da/de6/DataVector_8icc"/>
        <childnode refid="331875" relation="include">
        </childnode>
        <childnode refid="331842" relation="include">
        </childnode>
        <childnode refid="331787" relation="include">
        </childnode>
        <childnode refid="331791" relation="include">
        </childnode>
        <childnode refid="331876" relation="include">
        </childnode>
      </node>
      <node id="331778">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="331779" relation="include">
        </childnode>
        <childnode refid="331792" relation="include">
        </childnode>
        <childnode refid="331773" relation="include">
        </childnode>
        <childnode refid="331793" relation="include">
        </childnode>
        <childnode refid="331788" relation="include">
        </childnode>
      </node>
      <node id="331801">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="331771" relation="include">
        </childnode>
        <childnode refid="331785" relation="include">
        </childnode>
      </node>
      <node id="331803">
        <label>stdint.h</label>
      </node>
      <node id="331854">
        <label>AthContainers/tools/DVLCast.h</label>
        <link refid="df/d5c/DVLCast_8h"/>
        <childnode refid="331787" relation="include">
        </childnode>
        <childnode refid="331855" relation="include">
        </childnode>
        <childnode refid="331793" relation="include">
        </childnode>
        <childnode refid="331785" relation="include">
        </childnode>
        <childnode refid="331780" relation="include">
        </childnode>
      </node>
      <node id="331822">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="331780" relation="include">
        </childnode>
        <childnode refid="331793" relation="include">
        </childnode>
      </node>
      <node id="331795">
        <label>AthContainers/IndexTrackingPolicy.h</label>
        <link refid="d0/da5/IndexTrackingPolicy_8h"/>
      </node>
      <node id="331806">
        <label>RVersion.h</label>
      </node>
      <node id="331781">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="331782" relation="include">
        </childnode>
        <childnode refid="331790" relation="include">
        </childnode>
        <childnode refid="331791" relation="include">
        </childnode>
      </node>
      <node id="331786">
        <label>cmath</label>
      </node>
      <node id="331841">
        <label>cassert</label>
      </node>
      <node id="331845">
        <label>boost/mpl/if.hpp</label>
      </node>
      <node id="331864">
        <label>boost/static_assert.hpp</label>
      </node>
      <node id="331773">
        <label>stdexcept</label>
      </node>
      <node id="331818">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="331851">
        <label>boost/type_traits/is_pointer.hpp</label>
      </node>
      <node id="331859">
        <label>boost/iterator/iterator_adaptor.hpp</label>
      </node>
      <node id="331788">
        <label>string</label>
      </node>
      <node id="331797">
        <label>AthContainers/AuxVectorData.h</label>
        <link refid="d9/df2/AuxVectorData_8h"/>
        <childnode refid="331779" relation="include">
        </childnode>
        <childnode refid="331798" relation="include">
        </childnode>
        <childnode refid="331799" relation="include">
        </childnode>
        <childnode refid="331801" relation="include">
        </childnode>
        <childnode refid="331802" relation="include">
        </childnode>
        <childnode refid="331808" relation="include">
        </childnode>
        <childnode refid="331809" relation="include">
        </childnode>
        <childnode refid="331810" relation="include">
        </childnode>
        <childnode refid="331771" relation="include">
        </childnode>
        <childnode refid="331783" relation="include">
        </childnode>
        <childnode refid="331785" relation="include">
        </childnode>
        <childnode refid="331811" relation="include">
        </childnode>
        <childnode refid="331812" relation="include">
        </childnode>
        <childnode refid="331813" relation="include">
        </childnode>
        <childnode refid="331819" relation="include">
        </childnode>
      </node>
      <node id="331821">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="331780" relation="include">
        </childnode>
        <childnode refid="331793" relation="include">
        </childnode>
      </node>
      <node id="331811">
        <label>AthContainers/tools/likely.h</label>
        <link refid="d6/dd6/likely_8h"/>
      </node>
      <node id="331856">
        <label>AthContainers/tools/DVLIterator.h</label>
        <link refid="d3/dc7/DVLIterator_8h_source"/>
        <childnode refid="331794" relation="include">
        </childnode>
        <childnode refid="331854" relation="include">
        </childnode>
        <childnode refid="331857" relation="include">
        </childnode>
        <childnode refid="331859" relation="include">
        </childnode>
        <childnode refid="331844" relation="include">
        </childnode>
        <childnode refid="331784" relation="include">
        </childnode>
        <childnode refid="331785" relation="include">
        </childnode>
      </node>
      <node id="331870">
        <label>SGTools/DataBucket.h</label>
      </node>
      <node id="331871">
        <label>AthContainers/tools/DVLDataBucket.icc</label>
        <link refid="d3/d21/DVLDataBucket_8icc"/>
        <childnode refid="331872" relation="include">
        </childnode>
      </node>
      <node id="331872">
        <label>SGTools/IRegisterTransient.h</label>
      </node>
      <node id="331807">
        <label>RootMetaSelection.h</label>
      </node>
      <node id="331831">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="331861">
        <label>AthContainers/tools/DVL_algorithms.h</label>
        <link refid="d0/d7a/DVL__algorithms_8h"/>
        <childnode refid="331856" relation="include">
        </childnode>
        <childnode refid="331784" relation="include">
        </childnode>
        <childnode refid="331772" relation="include">
        </childnode>
        <childnode refid="331862" relation="include">
        </childnode>
      </node>
      <node id="331812">
        <label>AthContainers/tools/assume.h</label>
        <link refid="d2/d20/assume_8h"/>
      </node>
      <node id="331828">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="331857">
        <label>AthContainers/tools/ElementProxy.h</label>
        <link refid="db/d26/ElementProxy_8h"/>
        <childnode refid="331794" relation="include">
        </childnode>
        <childnode refid="331805" relation="include">
        </childnode>
        <childnode refid="331790" relation="include">
        </childnode>
        <childnode refid="331858" relation="include">
        </childnode>
      </node>
      <node id="331839">
        <label>AthContainersInterfaces/IAuxElement.h</label>
        <link refid="dd/d7a/IAuxElement_8h"/>
      </node>
      <node id="331805">
        <label>AthLinks/tools/selection_ns.h</label>
        <link refid="d3/dec/selection__ns_8h"/>
        <childnode refid="331806" relation="include">
        </childnode>
        <childnode refid="331807" relation="include">
        </childnode>
      </node>
      <node id="331809">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="331816">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="331855">
        <label>limits.h</label>
      </node>
      <node id="331849">
        <label>AthContainers/tools/ClassID.h</label>
        <link refid="de/de2/ClassID_8h"/>
        <childnode refid="331850" relation="include">
        </childnode>
      </node>
      <node id="331826">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="331799" relation="include">
        </childnode>
        <childnode refid="331787" relation="include">
        </childnode>
        <childnode refid="331803" relation="include">
        </childnode>
        <childnode refid="331827" relation="include">
        </childnode>
      </node>
      <node id="331779">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="331780" relation="include">
        </childnode>
        <childnode refid="331781" relation="include">
        </childnode>
      </node>
      <node id="331782">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="331772" relation="include">
        </childnode>
        <childnode refid="331783" relation="include">
        </childnode>
        <childnode refid="331784" relation="include">
        </childnode>
        <childnode refid="331780" relation="include">
        </childnode>
        <childnode refid="331785" relation="include">
        </childnode>
        <childnode refid="331786" relation="include">
        </childnode>
        <childnode refid="331787" relation="include">
        </childnode>
        <childnode refid="331788" relation="include">
        </childnode>
        <childnode refid="331789" relation="include">
        </childnode>
      </node>
      <node id="331842">
        <label>AthContainers/tools/ATHCONTAINERS_ASSERT.h</label>
        <link refid="de/d6b/ATHCONTAINERS__ASSERT_8h"/>
        <childnode refid="331841" relation="include">
        </childnode>
      </node>
      <node id="331858">
        <label>AthContainers/tools/ElementProxy.icc</label>
        <link refid="d6/d70/ElementProxy_8icc"/>
        <childnode refid="331854" relation="include">
        </childnode>
        <childnode refid="331842" relation="include">
        </childnode>
      </node>
      <node id="331793">
        <label>typeinfo</label>
      </node>
      <node id="331840">
        <label>AthContainers/AuxElement.icc</label>
        <link refid="d2/d37/AuxElement_8icc"/>
        <childnode refid="331811" relation="include">
        </childnode>
        <childnode refid="331841" relation="include">
        </childnode>
      </node>
      <node id="331777">
        <label>AthContainers/DataVector.h</label>
        <link refid="d7/dd6/DataVector_8h"/>
        <childnode refid="331778" relation="include">
        </childnode>
        <childnode refid="331794" relation="include">
        </childnode>
        <childnode refid="331795" relation="include">
        </childnode>
        <childnode refid="331796" relation="include">
        </childnode>
        <childnode refid="331847" relation="include">
        </childnode>
        <childnode refid="331848" relation="include">
        </childnode>
        <childnode refid="331854" relation="include">
        </childnode>
        <childnode refid="331856" relation="include">
        </childnode>
        <childnode refid="331860" relation="include">
        </childnode>
        <childnode refid="331861" relation="include">
        </childnode>
        <childnode refid="331857" relation="include">
        </childnode>
        <childnode refid="331863" relation="include">
        </childnode>
        <childnode refid="331805" relation="include">
        </childnode>
        <childnode refid="331864" relation="include">
        </childnode>
        <childnode refid="331865" relation="include">
        </childnode>
        <childnode refid="331859" relation="include">
        </childnode>
        <childnode refid="331771" relation="include">
        </childnode>
        <childnode refid="331793" relation="include">
        </childnode>
        <childnode refid="331791" relation="include">
        </childnode>
        <childnode refid="331866" relation="include">
        </childnode>
        <childnode refid="331772" relation="include">
        </childnode>
        <childnode refid="331773" relation="include">
        </childnode>
        <childnode refid="331784" relation="include">
        </childnode>
        <childnode refid="331837" relation="include">
        </childnode>
        <childnode refid="331867" relation="include">
        </childnode>
        <childnode refid="331869" relation="include">
        </childnode>
        <childnode refid="331873" relation="include">
        </childnode>
        <childnode refid="331874" relation="include">
        </childnode>
      </node>
      <node id="331827">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="331808">
        <label>AthenaKernel/ILockable.h</label>
      </node>
      <node id="331804">
        <label>AthLinks/DataLinkBase.h</label>
        <link refid="db/da8/DataLinkBase_8h_source"/>
        <childnode refid="331803" relation="include">
        </childnode>
      </node>
      <node id="331800">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="331830">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="331848">
        <label>AthContainers/tools/DVLInfo.h</label>
        <link refid="d3/d2e/DVLInfo_8h"/>
        <childnode refid="331849" relation="include">
        </childnode>
        <childnode refid="331796" relation="include">
        </childnode>
        <childnode refid="331793" relation="include">
        </childnode>
        <childnode refid="331780" relation="include">
        </childnode>
        <childnode refid="331789" relation="include">
        </childnode>
        <childnode refid="331851" relation="include">
        </childnode>
        <childnode refid="331829" relation="include">
        </childnode>
        <childnode refid="331852" relation="include">
        </childnode>
      </node>
      <node id="331775">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="331867">
        <label>AthContainers/ClassName.h</label>
        <link refid="dd/d6b/AthContainers_2AthContainers_2ClassName_8h_source"/>
        <childnode refid="331868" relation="include">
        </childnode>
      </node>
      <node id="331820">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="331779" relation="include">
        </childnode>
        <childnode refid="331821" relation="include">
        </childnode>
        <childnode refid="331822" relation="include">
        </childnode>
        <childnode refid="331823" relation="include">
        </childnode>
        <childnode refid="331832" relation="include">
        </childnode>
        <childnode refid="331813" relation="include">
        </childnode>
        <childnode refid="331780" relation="include">
        </childnode>
        <childnode refid="331793" relation="include">
        </childnode>
        <childnode refid="331771" relation="include">
        </childnode>
        <childnode refid="331834" relation="include">
        </childnode>
        <childnode refid="331835" relation="include">
        </childnode>
      </node>
      <node id="331776">
        <label>TrigSteeringEvent/TrigPassFlagsCollection.h</label>
        <link refid="d4/dfd/TrigPassFlagsCollection_8h_source"/>
        <childnode refid="331777" relation="include">
        </childnode>
        <childnode refid="331877" relation="include">
        </childnode>
        <childnode refid="331770" relation="include">
        </childnode>
      </node>
      <node id="331771">
        <label>vector</label>
      </node>
      <node id="331875">
        <label>AthContainers/tools/CompareAndPrint.h</label>
        <link refid="d5/da8/CompareAndPrint_8h_source"/>
        <childnode refid="331772" relation="include">
        </childnode>
        <childnode refid="331793" relation="include">
        </childnode>
      </node>
      <node id="331876">
        <label>AthContainers/tools/DVLEltBaseInfo.icc</label>
        <link refid="dd/d5e/DVLEltBaseInfo_8icc"/>
      </node>
      <node id="331783">
        <label>utility</label>
      </node>
      <node id="331873">
        <label>SGTools/DataBucketTraitFwd.h</label>
      </node>
      <node id="331810">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="331846">
        <label>AthContainers/AuxVectorBase.icc</label>
        <link refid="d4/d50/AuxVectorBase_8icc"/>
      </node>
      <node id="331814">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="331824">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="331813">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="331814" relation="include">
        </childnode>
        <childnode refid="331815" relation="include">
        </childnode>
        <childnode refid="331816" relation="include">
        </childnode>
        <childnode refid="331817" relation="include">
        </childnode>
        <childnode refid="331818" relation="include">
        </childnode>
      </node>
      <node id="331785">
        <label>cstdlib</label>
      </node>
      <node id="331866">
        <label>iostream</label>
      </node>
      <node id="331792">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="331798">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="331779" relation="include">
        </childnode>
        <childnode refid="331780" relation="include">
        </childnode>
        <childnode refid="331775" relation="include">
        </childnode>
      </node>
      <node id="331780">
        <label>cstddef</label>
      </node>
      <node id="331819">
        <label>AthContainers/AuxVectorData.icc</label>
        <link refid="da/de7/AuxVectorData_8icc"/>
        <childnode refid="331820" relation="include">
        </childnode>
        <childnode refid="331836" relation="include">
        </childnode>
        <childnode refid="331798" relation="include">
        </childnode>
        <childnode refid="331811" relation="include">
        </childnode>
        <childnode refid="331812" relation="include">
        </childnode>
      </node>
      <node id="331877">
        <label>xAODCore/BaseInfo.h</label>
        <link refid="d3/d17/BaseInfo_8h_source"/>
        <childnode refid="331837" relation="include">
        </childnode>
      </node>
      <node id="331852">
        <label>AthContainers/tools/DVLInfo.icc</label>
        <link refid="da/d83/DVLInfo_8icc"/>
        <childnode refid="331794" relation="include">
        </childnode>
        <childnode refid="331771" relation="include">
        </childnode>
        <childnode refid="331853" relation="include">
        </childnode>
        <childnode refid="331841" relation="include">
        </childnode>
        <childnode refid="331785" relation="include">
        </childnode>
        <childnode refid="331837" relation="include">
        </childnode>
      </node>
      <node id="331823">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="331821" relation="include">
        </childnode>
        <childnode refid="331824" relation="include">
        </childnode>
        <childnode refid="331801" relation="include">
        </childnode>
        <childnode refid="331825" relation="include">
        </childnode>
        <childnode refid="331810" relation="include">
        </childnode>
        <childnode refid="331793" relation="include">
        </childnode>
        <childnode refid="331771" relation="include">
        </childnode>
        <childnode refid="331772" relation="include">
        </childnode>
        <childnode refid="331803" relation="include">
        </childnode>
        <childnode refid="331829" relation="include">
        </childnode>
        <childnode refid="331830" relation="include">
        </childnode>
        <childnode refid="331831" relation="include">
        </childnode>
      </node>
      <node id="331770">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassFlags.h</label>
        <link refid="TrigPassFlags.h"/>
        <childnode refid="331771" relation="include">
        </childnode>
        <childnode refid="331772" relation="include">
        </childnode>
        <childnode refid="331773" relation="include">
        </childnode>
        <childnode refid="331774" relation="include">
        </childnode>
        <childnode refid="331776" relation="include">
        </childnode>
      </node>
      <node id="331829">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="331796">
        <label>AthContainers/AuxVectorBase.h</label>
        <link refid="d7/d18/AuxVectorBase_8h"/>
        <childnode refid="331797" relation="include">
        </childnode>
        <childnode refid="331794" relation="include">
        </childnode>
        <childnode refid="331795" relation="include">
        </childnode>
        <childnode refid="331838" relation="include">
        </childnode>
        <childnode refid="331820" relation="include">
        </childnode>
        <childnode refid="331778" relation="include">
        </childnode>
        <childnode refid="331842" relation="include">
        </childnode>
        <childnode refid="331836" relation="include">
        </childnode>
        <childnode refid="331843" relation="include">
        </childnode>
        <childnode refid="331771" relation="include">
        </childnode>
        <childnode refid="331846" relation="include">
        </childnode>
      </node>
      <node id="331774">
        <label>xAODCore/CLASS_DEF.h</label>
        <link refid="d6/d20/xAODCore_2xAODCore_2CLASS__DEF_8h"/>
        <childnode refid="331775" relation="include">
        </childnode>
      </node>
      <node id="331833">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="331825">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="331824" relation="include">
        </childnode>
        <childnode refid="331826" relation="include">
        </childnode>
        <childnode refid="331810" relation="include">
        </childnode>
        <childnode refid="331771" relation="include">
        </childnode>
        <childnode refid="331828" relation="include">
        </childnode>
      </node>
      <node id="331772">
        <label>algorithm</label>
      </node>
      <node id="331863">
        <label>AthContainers/tools/IsMostDerivedFlag.h</label>
        <link refid="d5/dfa/IsMostDerivedFlag_8h"/>
      </node>
      <node id="331838">
        <label>AthContainers/AuxElement.h</label>
        <link refid="d1/d6f/AuxElement_8h"/>
        <childnode refid="331839" relation="include">
        </childnode>
        <childnode refid="331798" relation="include">
        </childnode>
        <childnode refid="331836" relation="include">
        </childnode>
        <childnode refid="331802" relation="include">
        </childnode>
        <childnode refid="331820" relation="include">
        </childnode>
        <childnode refid="331797" relation="include">
        </childnode>
        <childnode refid="331801" relation="include">
        </childnode>
        <childnode refid="331778" relation="include">
        </childnode>
        <childnode refid="331811" relation="include">
        </childnode>
        <childnode refid="331780" relation="include">
        </childnode>
        <childnode refid="331840" relation="include">
        </childnode>
      </node>
      <node id="331802">
        <label>AthLinks/DataLink.h</label>
        <link refid="da/de8/DataLink_8h_source"/>
        <childnode refid="331803" relation="include">
        </childnode>
        <childnode refid="331788" relation="include">
        </childnode>
        <childnode refid="331804" relation="include">
        </childnode>
        <childnode refid="331805" relation="include">
        </childnode>
      </node>
      <node id="331860">
        <label>AthContainers/tools/DVL_iter_swap.h</label>
        <link refid="d6/ddb/DVL__iter__swap_8h"/>
        <childnode refid="331856" relation="include">
        </childnode>
        <childnode refid="331842" relation="include">
        </childnode>
        <childnode refid="331784" relation="include">
        </childnode>
      </node>
      <node id="331794">
        <label>AthContainers/OwnershipPolicy.h</label>
        <link refid="d3/da4/OwnershipPolicy_8h_source"/>
      </node>
      <node id="331850">
        <label>GaudiKernel/ClassID.h</label>
      </node>
      <node id="331865">
        <label>boost/type_traits.hpp</label>
      </node>
      <node id="331790">
        <label>memory</label>
      </node>
      <node id="331832">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="331822" relation="include">
        </childnode>
        <childnode refid="331823" relation="include">
        </childnode>
        <childnode refid="331833" relation="include">
        </childnode>
      </node>
      <node id="331843">
        <label>AthContainersInterfaces/AuxStore_traits.h</label>
        <link refid="dd/d70/AuxStore__traits_8h"/>
        <childnode refid="331839" relation="include">
        </childnode>
        <childnode refid="331836" relation="include">
        </childnode>
        <childnode refid="331798" relation="include">
        </childnode>
        <childnode refid="331829" relation="include">
        </childnode>
        <childnode refid="331844" relation="include">
        </childnode>
        <childnode refid="331845" relation="include">
        </childnode>
        <childnode refid="331788" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="331880">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Combination.h</label>
        <link refid="dd/daf/Combination_8h_source"/>
        <childnode refid="331881" relation="include">
        </childnode>
        <childnode refid="331898" relation="include">
        </childnode>
        <childnode refid="331899" relation="include">
        </childnode>
        <childnode refid="331891" relation="include">
        </childnode>
        <childnode refid="331892" relation="include">
        </childnode>
      </node>
      <node id="331884">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CPAnalysisExamples/CPAnalysisExamples/ToolExamplesAlg.h</label>
        <link refid="d4/d75/ToolExamplesAlg_8h_source"/>
      </node>
      <node id="331899">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureContainer.h</label>
        <link refid="d5/de8/FeatureContainer_8h_source"/>
        <childnode refid="331900" relation="include">
        </childnode>
        <childnode refid="331881" relation="include">
        </childnode>
        <childnode refid="331898" relation="include">
        </childnode>
        <childnode refid="331891" relation="include">
        </childnode>
      </node>
      <node id="331905">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SUSYTools/SUSYTools/SUSYToolsDict.h</label>
        <link refid="dc/ded/SUSYToolsDict_8h_source"/>
      </node>
      <node id="331904">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SUSYTools/SUSYTools/SUSYObjDef_xAOD.h</label>
        <link refid="d0/daf/SUSYObjDef__xAOD_8h_source"/>
        <childnode refid="331905" relation="include">
        </childnode>
      </node>
      <node id="331882">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/TrigDecisionToolCore.h</label>
        <link refid="de/d03/TrigDecisionToolCore_8h_source"/>
        <childnode refid="331883" relation="include">
        </childnode>
        <childnode refid="331891" relation="include">
        </childnode>
      </node>
      <node id="331886">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigAnalysisTest/TrigAnalysisTest/ITest.h</label>
        <link refid="dd/d82/ITest_8h_source"/>
        <childnode refid="331885" relation="include">
        </childnode>
        <childnode refid="331887" relation="include">
        </childnode>
        <childnode refid="331888" relation="include">
        </childnode>
        <childnode refid="331889" relation="include">
        </childnode>
      </node>
      <node id="331894">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TriggerMatchingTool/TriggerMatchingTool/TriggerMatchingToolDict.h</label>
        <link refid="de/db3/TriggerMatchingToolDict_8h_source"/>
      </node>
      <node id="331879">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureCollectAthena.h</label>
        <link refid="d4/d1b/FeatureCollectAthena_8h_source"/>
        <childnode refid="331880" relation="include">
        </childnode>
      </node>
      <node id="331883">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/TrigDecisionTool.h</label>
        <link refid="d7/df7/TrigDecisionTool_8h_source"/>
        <childnode refid="331884" relation="include">
        </childnode>
        <childnode refid="331885" relation="include">
        </childnode>
        <childnode refid="331886" relation="include">
        </childnode>
        <childnode refid="331890" relation="include">
        </childnode>
        <childnode refid="331891" relation="include">
        </childnode>
        <childnode refid="331892" relation="include">
        </childnode>
        <childnode refid="331895" relation="include">
        </childnode>
        <childnode refid="331896" relation="include">
        </childnode>
      </node>
      <node id="331909">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigSteeringEventDict.h</label>
        <link refid="d6/dd5/TrigSteeringEventDict_8h_source"/>
      </node>
      <node id="331906">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/ChainGroupFunctions.h</label>
        <link refid="d3/d14/ChainGroupFunctions_8h_source"/>
        <childnode refid="331882" relation="include">
        </childnode>
        <childnode refid="331891" relation="include">
        </childnode>
      </node>
      <node id="331901">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SUSYTools/SUSYTools/ISUSYObjDef_xAODTool.h</label>
        <link refid="d1/d7a/ISUSYObjDef__xAODTool_8h_source"/>
        <childnode refid="331902" relation="include">
        </childnode>
        <childnode refid="331903" relation="include">
        </childnode>
        <childnode refid="331904" relation="include">
        </childnode>
      </node>
      <node id="331889">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigAnalysisTest/TrigAnalysisTest/TestFactory.h</label>
        <link refid="d7/d5f/TestFactory_8h_source"/>
      </node>
      <node id="331890">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigAnalysisTest/TrigAnalysisTest/TriggersFiredTest.h</label>
        <link refid="da/d06/TriggersFiredTest_8h_source"/>
      </node>
      <node id="331908">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassFlagsCollection.h</label>
        <link refid="d4/dfd/TrigPassFlagsCollection_8h_source"/>
        <childnode refid="331878" relation="include">
        </childnode>
        <childnode refid="331909" relation="include">
        </childnode>
      </node>
      <node id="331897">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigTauMatching/TrigTauMatching/TrigTauMatchingDict.h</label>
        <link refid="dc/d01/TrigTauMatchingDict_8h_source"/>
      </node>
      <node id="331902">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SUSYTools/src/ApplySUSYTools.h</label>
        <link refid="dd/dcc/ApplySUSYTools_8h_source"/>
      </node>
      <node id="331887">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigAnalysisTest/TrigAnalysisTest/BasicTriggerFired.h</label>
        <link refid="d5/dd0/BasicTriggerFired_8h_source"/>
      </node>
      <node id="331900">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/ChainGroup.h</label>
        <link refid="d2/dd8/ChainGroup_8h_source"/>
        <childnode refid="331901" relation="include">
        </childnode>
        <childnode refid="331906" relation="include">
        </childnode>
        <childnode refid="331907" relation="include">
        </childnode>
        <childnode refid="331881" relation="include">
        </childnode>
        <childnode refid="331898" relation="include">
        </childnode>
        <childnode refid="331882" relation="include">
        </childnode>
        <childnode refid="331891" relation="include">
        </childnode>
      </node>
      <node id="331898">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/ExpertMethods.h</label>
        <link refid="dd/d57/ExpertMethods_8h_source"/>
        <childnode refid="331882" relation="include">
        </childnode>
        <childnode refid="331891" relation="include">
        </childnode>
      </node>
      <node id="331903">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SUSYTools/src/SUSYToolsAlg.h</label>
        <link refid="d4/dd2/SUSYToolsAlg_8h_source"/>
      </node>
      <node id="331888">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigAnalysisTest/TrigAnalysisTest/Run1BStoxAODTrigger.h</label>
        <link refid="dd/d41/Run1BStoxAODTrigger_8h_source"/>
      </node>
      <node id="331885">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigAnalysisTest/TrigAnalysisTest/AthenaTestHarness.h</label>
        <link refid="d5/d93/AthenaTestHarness_8h_source"/>
      </node>
      <node id="331878">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassFlags.h</label>
        <link refid="TrigPassFlags.h"/>
        <childnode refid="331879" relation="include">
        </childnode>
        <childnode refid="331899" relation="include">
        </childnode>
        <childnode refid="331908" relation="include">
        </childnode>
      </node>
      <node id="331893">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TriggerMatchingTool/TriggerMatchingTool/MatchingImplementation.h</label>
        <link refid="d1/d9b/MatchingImplementation_8h_source"/>
      </node>
      <node id="331907">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/ConfigurationAccess.h</label>
        <link refid="df/d4d/ConfigurationAccess_8h_source"/>
        <childnode refid="331882" relation="include">
        </childnode>
        <childnode refid="331891" relation="include">
        </childnode>
      </node>
      <node id="331896">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigTauMatching/TrigTauMatching/TrigTauMatching.h</label>
        <link refid="dc/d5a/TrigTauMatching_8h_source"/>
        <childnode refid="331897" relation="include">
        </childnode>
      </node>
      <node id="331891">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/TrigDecisionToolDict.h</label>
        <link refid="d4/df1/TrigDecisionToolDict_8h_source"/>
      </node>
      <node id="331895">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigTauMatching/src/TrigTauMatching_example.h</label>
        <link refid="d7/d96/TrigTauMatching__example_8h_source"/>
      </node>
      <node id="331881">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/DecisionAccess.h</label>
        <link refid="d7/d07/DecisionAccess_8h_source"/>
        <childnode refid="331882" relation="include">
        </childnode>
        <childnode refid="331891" relation="include">
        </childnode>
      </node>
      <node id="331892">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TriggerMatchingTool/TriggerMatchingTool/MatchingTool.h</label>
        <link refid="df/d10/MatchingTool_8h_source"/>
        <childnode refid="331893" relation="include">
        </childnode>
        <childnode refid="331894" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="d7/db1/classTrigPassFlags" prot="public">TrigPassFlags</innerclass>
    <innernamespace refid="dc/d8d/namespaceHLT">HLT</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifndef<sp/>TrigSteeringEvent_TrigPassFlags_h</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TrigSteeringEvent_TrigPassFlags_h</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d6/d20/xAODCore_2xAODCore_2CLASS__DEF_8h" kindref="compound" tooltip="File providing the different SG_BASE macros.">xAODCore/CLASS_DEF.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TrigPassFlagsCollection<sp/>is<sp/>included<sp/>at<sp/>the<sp/>end<sp/>(required<sp/>by<sp/>Trigger<sp/>EDM<sp/>schema)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="d7/db1/classTrigPassFlags" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref>();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d7/db1/classTrigPassFlags_1afe2c5027f4cca0b8d40950c60e811300" kindref="member" tooltip="gets size of the container object vector">size</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d7/db1/classTrigPassFlags_1a9f71f216729c77930ff472e957613815" kindref="member" tooltip="gets size of the flag vector for the object at index">flagSize</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*cont=0);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/db1/classTrigPassFlags_1a98bcdc8942a8d0e7cbd6a11bba0d25d7" kindref="member" tooltip="Set bit of the flag at index position.">setFlagBit</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>position,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitPosition,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bitValue,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*cont=0<sp/>);<sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/db1/classTrigPassFlags_1a86e67daeafe9da4270914f278cf9edf7" kindref="member" tooltip="Set the flag at index position.">setFlag</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>position,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;bool&gt;&amp;<sp/>flag,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*cont=0<sp/>);<sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d7/db1/classTrigPassFlags_1a7dfa55e6026462f28e0da62dbd289862" kindref="member" tooltip="Returns the bit &amp;#39;bitPosition&amp;#39; of the flag at index position.">getFlagBit</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>position,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitPosition)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;bool&gt;&amp;<sp/><ref refid="d7/db1/classTrigPassFlags_1a5e6911b1442640b82aea163f577d358a" kindref="member" tooltip="Returns the flag (vector&amp;lt;bool&amp;gt;) at index position.">getFlag</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>position)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="d7/db1/classTrigPassFlags_1afe2c5027f4cca0b8d40950c60e811300" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d7/db1/classTrigPassFlags_1afe2c5027f4cca0b8d40950c60e811300" kindref="member" tooltip="gets size of the container object vector">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_flagsPerObject.size();<sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="d7/db1/classTrigPassFlags_1a9f71f216729c77930ff472e957613815" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d7/db1/classTrigPassFlags_1a9f71f216729c77930ff472e957613815" kindref="member" tooltip="gets size of the flag vector for the object at index">flagSize</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_flagsPerObject[0].size();<sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TrigPassFlagsCnv_p1;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*m_container_ptr;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;std::vector&lt;bool&gt;<sp/>&gt;<sp/>m_flagsPerObject;<sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal">};</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal">CLASS_DEF(<sp/><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref><sp/>,<sp/>74395451<sp/>,<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal">namespace<sp/>HLT<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CONTAINER&gt;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref>*<sp/>makeTrigPassFlags(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CONTAINER*<sp/>cont,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flagSize)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref>(cont-&gt;size(),<sp/>flagSize,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)cont<sp/>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CONTAINER&gt;</highlight></codeline>
<codeline lineno="101" refid="dc/d8d/namespaceHLT_1a47f73f8090fb22242479b867ed797d58" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/d8d/namespaceHLT_1a47f73f8090fb22242479b867ed797d58" kindref="member" tooltip="Set bit of the flag at index position for a given TrigPassFlags object.">setFlagBit</ref>(<ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref><sp/>*<sp/>flags,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/def/classT" kindref="compound">T</ref>*<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CONTAINER*<sp/>container,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitPosition,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bitValue<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CONTAINER::const_iterator<sp/>i<sp/>=<sp/>std::find(container-&gt;begin(),<sp/>container-&gt;end(),<sp/>obj);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>!=<sp/>container-&gt;end()<sp/>)<sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags-&gt;<ref refid="d7/db1/classTrigPassFlags_1a98bcdc8942a8d0e7cbd6a11bba0d25d7" kindref="member" tooltip="Set bit of the flag at index position.">setFlagBit</ref>(i-container-&gt;begin(),<sp/>bitPosition,<sp/>bitValue,<sp/>container);<sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;The<sp/>CONTAINER<sp/>passed<sp/>does<sp/>not<sp/>match<sp/>the<sp/>CONTAINER<sp/>that<sp/>created<sp/>the<sp/>TrigPassFlags&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CONTAINER&gt;</highlight></codeline>
<codeline lineno="117" refid="dc/d8d/namespaceHLT_1a9e82af6d95406e63e9fc22db58a269a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/d8d/namespaceHLT_1a9e82af6d95406e63e9fc22db58a269a8" kindref="member" tooltip="Set the flag at index position.">setFlag</ref>(<ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref><sp/>*<sp/>flags,<sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/def/classT" kindref="compound">T</ref>*<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CONTAINER*<sp/>container,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;bool&gt;&amp;<sp/>flag)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CONTAINER::const_iterator<sp/>i<sp/>=<sp/>std::find(container-&gt;begin(),<sp/>container-&gt;end(),<sp/>obj);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>!=<sp/>container-&gt;end()<sp/>)<sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags-&gt;<ref refid="d7/db1/classTrigPassFlags_1a86e67daeafe9da4270914f278cf9edf7" kindref="member" tooltip="Set the flag at index position.">setFlag</ref>(i-container-&gt;begin(),<sp/>flag,<sp/>container);<sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;The<sp/>CONTAINER<sp/>passed<sp/>does<sp/>not<sp/>match<sp/>the<sp/>CONTAINER<sp/>that<sp/>created<sp/>the<sp/>TrigPassFlags&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CONTAINER&gt;</highlight></codeline>
<codeline lineno="130" refid="dc/d8d/namespaceHLT_1af8a8de691c034960ca68e60eb3acb5ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dc/d8d/namespaceHLT_1af8a8de691c034960ca68e60eb3acb5ef" kindref="member" tooltip="Returns the bit &amp;#39;bitPosition&amp;#39; of the flag at index position.">getFlagBit</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref><sp/>*flags,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/def/classT" kindref="compound">T</ref>*<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CONTAINER*<sp/>container,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>position,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitPosition)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CONTAINER::const_iterator<sp/>i<sp/>=<sp/>std::find(container-&gt;begin(),<sp/>container-&gt;end(),<sp/>obj);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>!=<sp/>container-&gt;end()<sp/>)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flags-&gt;<ref refid="d7/db1/classTrigPassFlags_1a7dfa55e6026462f28e0da62dbd289862" kindref="member" tooltip="Returns the bit &amp;#39;bitPosition&amp;#39; of the flag at index position.">getFlagBit</ref>(i-container-&gt;begin(),position,<sp/>bitPosition);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;The<sp/>CONTAINER<sp/>passed<sp/>does<sp/>not<sp/>match<sp/>the<sp/>CONTAINER<sp/>that<sp/>created<sp/>the<sp/>TrigPassFlags&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CONTAINER&gt;</highlight></codeline>
<codeline lineno="141" refid="dc/d8d/namespaceHLT_1a17f6857efcd2a5d097d29c9502105689" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;bool&gt;&amp;<sp/><ref refid="dc/d8d/namespaceHLT_1a17f6857efcd2a5d097d29c9502105689" kindref="member" tooltip="Returns the flag at index position.">getFlag</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref><sp/>*flags,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/def/classT" kindref="compound">T</ref>*<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CONTAINER*<sp/>container,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>position)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CONTAINER::const_iterator<sp/>i<sp/>=<sp/>std::find(container-&gt;begin(),<sp/>container-&gt;end(),<sp/>obj);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>!=<sp/>container-&gt;end()<sp/>)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flags-&gt;<ref refid="d7/db1/classTrigPassFlags_1a5e6911b1442640b82aea163f577d358a" kindref="member" tooltip="Returns the flag (vector&amp;lt;bool&amp;gt;) at index position.">getFlag</ref>(i-container-&gt;begin(),position);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;The<sp/>CONTAINER<sp/>passed<sp/>does<sp/>not<sp/>match<sp/>the<sp/>CONTAINER<sp/>that<sp/>created<sp/>the<sp/>TrigPassFlags&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;bool&gt;<sp/>AsFlag(<ref refid="d1/def/classT" kindref="compound">T</ref><sp/>flag_t,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>T<sp/>should<sp/>be<sp/>an<sp/>unsigned<sp/>type,<sp/>otherwise<sp/>this<sp/>will<sp/>give<sp/>a<sp/>compilation<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size&gt;8*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d1/def/classT" kindref="compound">T</ref>))<sp/></highlight><highlight class="comment">//<sp/>check<sp/>of<sp/>T<sp/>has<sp/>at<sp/>list<sp/>&apos;size&apos;<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;AsFlag():<sp/>type<sp/>T<sp/>has<sp/>less<sp/>bits<sp/>than<sp/>required<sp/>by<sp/>&apos;size&apos;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(flag_t<sp/>&gt;=<sp/>(<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)1)&lt;&lt;size)<sp/><sp/>)<sp/></highlight><highlight class="comment">//<sp/>check<sp/>of<sp/>T<sp/>has<sp/>at<sp/>least<sp/>&apos;size&apos;<sp/>bits<sp/>(with<sp/>&apos;size&apos;<sp/>bits<sp/>&apos;1&lt;&lt;size&apos;<sp/>is<sp/>the<sp/>lowest<sp/>number<sp/>I<sp/>can<sp/>not<sp/>represent.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;AsFlag():<sp/>the<sp/>flag<sp/>is<sp/>larger<sp/>then<sp/>bits<sp/>available&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;bool&gt;<sp/>flag(size);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mask<sp/>=<sp/>0x01;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx=0;<sp/>idx&lt;size;<sp/>++idx,<sp/>mask&lt;&lt;=1)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag[idx]<sp/>=<sp/>(flag_t&amp;mask)!=0;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flag;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><ref refid="d1/def/classT" kindref="compound">T</ref><sp/>FlagAs(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;bool&gt;<sp/>flag)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(8*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d1/def/classT" kindref="compound">T</ref>)&lt;flag.size())<sp/></highlight><highlight class="comment">//<sp/>check<sp/>of<sp/>T<sp/>has<sp/>enough<sp/>bits<sp/>to<sp/>represent<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;FlagAs():<sp/>the<sp/>flag<sp/>size<sp/>does<sp/>not<sp/>fit<sp/>into<sp/>the<sp/>requested<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/def/classT" kindref="compound">T</ref><sp/>v<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mask<sp/>=<sp/>0x01;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx=0;<sp/>idx&lt;flag.size();<sp/>++idx,<sp/>mask&lt;&lt;=1)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(flag[idx])<sp/>v<sp/>+=<sp/>mask;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>eof<sp/>HLT<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigSteeringEvent/TrigPassFlagsCollection.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>TrigSteeringEvent_TrigPassFlags_h</highlight></codeline>
<codeline lineno="179"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassFlags.h"/>
  </compounddef>
</doxygen>
