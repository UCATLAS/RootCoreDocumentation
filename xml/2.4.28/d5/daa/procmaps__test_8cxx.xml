<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d5/daa/procmaps__test_8cxx" kind="file">
    <compoundname>procmaps_test.cxx</compoundname>
    <includes local="no">cassert</includes>
    <includes local="no">iostream</includes>
    <includes local="no">boost/pool/pool_alloc.hpp</includes>
    <includes refid="de/d45/procmaps_8h" local="yes">CxxUtils/procmaps.h</includes>
    <incdepgraph>
      <node id="113754">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/test/procmaps_test.cxx</label>
        <link refid="procmaps_test.cxx"/>
        <childnode refid="113755" relation="include">
        </childnode>
        <childnode refid="113756" relation="include">
        </childnode>
        <childnode refid="113757" relation="include">
        </childnode>
        <childnode refid="113758" relation="include">
        </childnode>
      </node>
      <node id="113755">
        <label>cassert</label>
      </node>
      <node id="113757">
        <label>boost/pool/pool_alloc.hpp</label>
      </node>
      <node id="113759">
        <label>vector</label>
      </node>
      <node id="113758">
        <label>CxxUtils/procmaps.h</label>
        <link refid="de/d45/procmaps_8h_source"/>
        <childnode refid="113757" relation="include">
        </childnode>
        <childnode refid="113759" relation="include">
        </childnode>
      </node>
      <node id="113756">
        <label>iostream</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="d5/daa/procmaps__test_8cxx_1a9feb7476507383309c8e3ff2648016f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nop</definition>
        <argsstring>()</argsstring>
        <name>nop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/test/procmaps_test.cxx" line="8" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/test/procmaps_test.cxx" bodystart="8" bodyend="8"/>
      </memberdef>
      <memberdef kind="function" id="d5/daa/procmaps__test_8cxx_1a840291bc02cba5474a4cb46a9b9566fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(void)</argsstring>
        <name>main</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/test/procmaps_test.cxx" line="9" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/test/procmaps_test.cxx" bodystart="9" bodyend="49"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#undef<sp/>NDEBUG</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/pool/pool_alloc.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CxxUtils/procmaps.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>DEBUGIT<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>nop()<sp/>{}</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;***<sp/>procmaps_test<sp/>starts<sp/>***&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;endl;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUGIT</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>DUMPMAPS(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="14"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>DUMPMAPS(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><ref refid="da/da2/classprocmaps" kindref="compound" tooltip="A simple API to access /proc/self/maps info.">procmaps</ref><sp/>pmaps(DUMPMAPS);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//let&apos;s<sp/>start<sp/>with<sp/>a<sp/>code<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d8e/structprocmaps_1_1Entry" kindref="compound">procmaps::Entry</ref>*<sp/>pCodeEntry(pmaps.getEntry((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)&amp;nop));</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>assert(pCodeEntry);<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUGIT</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;code<sp/>entry<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>hex<sp/>&lt;&lt;<sp/>pCodeEntry-&gt;begAddress<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)&amp;nop<sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>pCodeEntry-&gt;endAddress<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="24"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>assert(pCodeEntry-&gt;executable);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>assert(pCodeEntry-&gt;readable);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>assert(!pCodeEntry-&gt;writable);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>assert(0<sp/>!=<sp/>pCodeEntry-&gt;inode);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//now<sp/>with<sp/>a<sp/>heap<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>pi=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>int(2);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d8e/structprocmaps_1_1Entry" kindref="compound">procmaps::Entry</ref>*<sp/>pHeapEntry(pmaps.getEntry(pi));</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>assert(pHeapEntry);<sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUGIT</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;heap<sp/>entry<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>hex<sp/>&lt;&lt;<sp/>pHeapEntry-&gt;begAddress<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>pi<sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>pHeapEntry-&gt;endAddress<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//FIXME<sp/>the<sp/>heap<sp/>should<sp/>not<sp/>be<sp/>executable,<sp/>right?<sp/><sp/>assert(!pHeapEntry-&gt;executable);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>assert(pHeapEntry-&gt;readable);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>assert(pHeapEntry-&gt;writable);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>assert(0<sp/>==<sp/>pHeapEntry-&gt;inode);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//make<sp/>valgrind<sp/>happy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pi;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>boost::singleton_pool&lt;boost::pool_allocator_tag,<sp/>sizeof(procmaps::Entry)&gt;::release_memory();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;***<sp/>procmaps_test<sp/>OK<sp/>***&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;endl;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/test/procmaps_test.cxx"/>
  </compounddef>
</doxygen>
