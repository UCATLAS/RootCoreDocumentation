<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d5/d11/AuxVectorBase_8cxx" kind="file">
    <compoundname>AuxVectorBase.cxx</compoundname>
    <includes refid="d7/d18/AuxVectorBase_8h" local="yes">AthContainers/AuxVectorBase.h</includes>
    <includes refid="da/d8e/foreach_8h" local="yes">AthContainers/tools/foreach.h</includes>
    <incdepgraph>
      <node id="71441">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="71459">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="71409" relation="include">
        </childnode>
        <childnode refid="71411" relation="include">
        </childnode>
        <childnode refid="71418" relation="include">
        </childnode>
        <childnode refid="71419" relation="include">
        </childnode>
      </node>
      <node id="71461">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="71420" relation="include">
        </childnode>
        <childnode refid="71407" relation="include">
        </childnode>
        <childnode refid="71462" relation="include">
        </childnode>
        <childnode refid="71421" relation="include">
        </childnode>
      </node>
      <node id="71460">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="71417">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="71419">
        <label>functional</label>
      </node>
      <node id="71474">
        <label>boost/version.hpp</label>
      </node>
      <node id="71415">
        <label>limits</label>
      </node>
      <node id="71462">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="71439">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="71412">
        <label>iterator</label>
      </node>
      <node id="71422">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="71416" relation="include">
        </childnode>
        <childnode refid="71423" relation="include">
        </childnode>
      </node>
      <node id="71467">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="71406" relation="include">
        </childnode>
        <childnode refid="71468" relation="include">
        </childnode>
        <childnode refid="71469" relation="include">
        </childnode>
        <childnode refid="71446" relation="include">
        </childnode>
        <childnode refid="71416" relation="include">
        </childnode>
      </node>
      <node id="71424">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="71425" relation="include">
        </childnode>
        <childnode refid="71413" relation="include">
        </childnode>
      </node>
      <node id="71427">
        <label>stdint.h</label>
      </node>
      <node id="71464">
        <label>AthContainers/IndexTrackingPolicy.h</label>
        <link refid="d0/da5/IndexTrackingPolicy_8h"/>
      </node>
      <node id="71447">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="71407" relation="include">
        </childnode>
        <childnode refid="71446" relation="include">
        </childnode>
      </node>
      <node id="71478">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="71430">
        <label>RVersion.h</label>
      </node>
      <node id="71408">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="71409" relation="include">
        </childnode>
        <childnode refid="71418" relation="include">
        </childnode>
        <childnode refid="71419" relation="include">
        </childnode>
      </node>
      <node id="71414">
        <label>cmath</label>
      </node>
      <node id="71471">
        <label>cassert</label>
      </node>
      <node id="71475">
        <label>boost/mpl/if.hpp</label>
      </node>
      <node id="71469">
        <label>stdexcept</label>
      </node>
      <node id="71442">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="71416">
        <label>string</label>
      </node>
      <node id="71405">
        <label>AthContainers/AuxVectorData.h</label>
        <link refid="d9/df2/AuxVectorData_8h"/>
        <childnode refid="71406" relation="include">
        </childnode>
        <childnode refid="71420" relation="include">
        </childnode>
        <childnode refid="71422" relation="include">
        </childnode>
        <childnode refid="71424" relation="include">
        </childnode>
        <childnode refid="71426" relation="include">
        </childnode>
        <childnode refid="71432" relation="include">
        </childnode>
        <childnode refid="71433" relation="include">
        </childnode>
        <childnode refid="71434" relation="include">
        </childnode>
        <childnode refid="71425" relation="include">
        </childnode>
        <childnode refid="71411" relation="include">
        </childnode>
        <childnode refid="71413" relation="include">
        </childnode>
        <childnode refid="71435" relation="include">
        </childnode>
        <childnode refid="71436" relation="include">
        </childnode>
        <childnode refid="71437" relation="include">
        </childnode>
        <childnode refid="71443" relation="include">
        </childnode>
      </node>
      <node id="71445">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="71407" relation="include">
        </childnode>
        <childnode refid="71446" relation="include">
        </childnode>
      </node>
      <node id="71435">
        <label>AthContainers/tools/likely.h</label>
        <link refid="d6/dd6/likely_8h"/>
      </node>
      <node id="71431">
        <label>RootMetaSelection.h</label>
      </node>
      <node id="71456">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="71436">
        <label>AthContainers/tools/assume.h</label>
        <link refid="d2/d20/assume_8h"/>
      </node>
      <node id="71453">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="71466">
        <label>AthContainersInterfaces/IAuxElement.h</label>
        <link refid="dd/d7a/IAuxElement_8h"/>
      </node>
      <node id="71429">
        <label>AthLinks/tools/selection_ns.h</label>
        <link refid="d3/dec/selection__ns_8h"/>
        <childnode refid="71430" relation="include">
        </childnode>
        <childnode refid="71431" relation="include">
        </childnode>
      </node>
      <node id="71433">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="71477">
        <label>AthContainers/tools/foreach.h</label>
        <link refid="da/d8e/foreach_8h"/>
        <childnode refid="71478" relation="include">
        </childnode>
      </node>
      <node id="71440">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="71451">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="71422" relation="include">
        </childnode>
        <childnode refid="71415" relation="include">
        </childnode>
        <childnode refid="71427" relation="include">
        </childnode>
        <childnode refid="71452" relation="include">
        </childnode>
      </node>
      <node id="71406">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="71407" relation="include">
        </childnode>
        <childnode refid="71408" relation="include">
        </childnode>
      </node>
      <node id="71409">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="71410" relation="include">
        </childnode>
        <childnode refid="71411" relation="include">
        </childnode>
        <childnode refid="71412" relation="include">
        </childnode>
        <childnode refid="71407" relation="include">
        </childnode>
        <childnode refid="71413" relation="include">
        </childnode>
        <childnode refid="71414" relation="include">
        </childnode>
        <childnode refid="71415" relation="include">
        </childnode>
        <childnode refid="71416" relation="include">
        </childnode>
        <childnode refid="71417" relation="include">
        </childnode>
      </node>
      <node id="71472">
        <label>AthContainers/tools/ATHCONTAINERS_ASSERT.h</label>
        <link refid="de/d6b/ATHCONTAINERS__ASSERT_8h"/>
        <childnode refid="71471" relation="include">
        </childnode>
      </node>
      <node id="71446">
        <label>typeinfo</label>
      </node>
      <node id="71470">
        <label>AthContainers/AuxElement.icc</label>
        <link refid="d2/d37/AuxElement_8icc"/>
        <childnode refid="71435" relation="include">
        </childnode>
        <childnode refid="71471" relation="include">
        </childnode>
      </node>
      <node id="71452">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="71432">
        <label>AthenaKernel/ILockable.h</label>
      </node>
      <node id="71428">
        <label>AthLinks/DataLinkBase.h</label>
        <link refid="db/da8/DataLinkBase_8h_source"/>
        <childnode refid="71427" relation="include">
        </childnode>
      </node>
      <node id="71423">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="71455">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="71421">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="71444">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="71406" relation="include">
        </childnode>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71447" relation="include">
        </childnode>
        <childnode refid="71448" relation="include">
        </childnode>
        <childnode refid="71457" relation="include">
        </childnode>
        <childnode refid="71437" relation="include">
        </childnode>
        <childnode refid="71407" relation="include">
        </childnode>
        <childnode refid="71446" relation="include">
        </childnode>
        <childnode refid="71425" relation="include">
        </childnode>
        <childnode refid="71459" relation="include">
        </childnode>
        <childnode refid="71460" relation="include">
        </childnode>
      </node>
      <node id="71425">
        <label>vector</label>
      </node>
      <node id="71411">
        <label>utility</label>
      </node>
      <node id="71434">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="71403">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/AuxVectorBase.cxx</label>
        <link refid="AuxVectorBase.cxx"/>
        <childnode refid="71404" relation="include">
        </childnode>
        <childnode refid="71477" relation="include">
        </childnode>
      </node>
      <node id="71476">
        <label>AthContainers/AuxVectorBase.icc</label>
        <link refid="d4/d50/AuxVectorBase_8icc"/>
      </node>
      <node id="71438">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="71449">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="71437">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="71438" relation="include">
        </childnode>
        <childnode refid="71439" relation="include">
        </childnode>
        <childnode refid="71440" relation="include">
        </childnode>
        <childnode refid="71441" relation="include">
        </childnode>
        <childnode refid="71442" relation="include">
        </childnode>
      </node>
      <node id="71413">
        <label>cstdlib</label>
      </node>
      <node id="71468">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="71420">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="71406" relation="include">
        </childnode>
        <childnode refid="71407" relation="include">
        </childnode>
        <childnode refid="71421" relation="include">
        </childnode>
      </node>
      <node id="71407">
        <label>cstddef</label>
      </node>
      <node id="71443">
        <label>AthContainers/AuxVectorData.icc</label>
        <link refid="da/de7/AuxVectorData_8icc"/>
        <childnode refid="71444" relation="include">
        </childnode>
        <childnode refid="71461" relation="include">
        </childnode>
        <childnode refid="71420" relation="include">
        </childnode>
        <childnode refid="71435" relation="include">
        </childnode>
        <childnode refid="71436" relation="include">
        </childnode>
      </node>
      <node id="71448">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71449" relation="include">
        </childnode>
        <childnode refid="71424" relation="include">
        </childnode>
        <childnode refid="71450" relation="include">
        </childnode>
        <childnode refid="71434" relation="include">
        </childnode>
        <childnode refid="71446" relation="include">
        </childnode>
        <childnode refid="71425" relation="include">
        </childnode>
        <childnode refid="71410" relation="include">
        </childnode>
        <childnode refid="71427" relation="include">
        </childnode>
        <childnode refid="71454" relation="include">
        </childnode>
        <childnode refid="71455" relation="include">
        </childnode>
        <childnode refid="71456" relation="include">
        </childnode>
      </node>
      <node id="71454">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="71404">
        <label>AthContainers/AuxVectorBase.h</label>
        <link refid="d7/d18/AuxVectorBase_8h"/>
        <childnode refid="71405" relation="include">
        </childnode>
        <childnode refid="71463" relation="include">
        </childnode>
        <childnode refid="71464" relation="include">
        </childnode>
        <childnode refid="71465" relation="include">
        </childnode>
        <childnode refid="71444" relation="include">
        </childnode>
        <childnode refid="71467" relation="include">
        </childnode>
        <childnode refid="71472" relation="include">
        </childnode>
        <childnode refid="71461" relation="include">
        </childnode>
        <childnode refid="71473" relation="include">
        </childnode>
        <childnode refid="71425" relation="include">
        </childnode>
        <childnode refid="71476" relation="include">
        </childnode>
      </node>
      <node id="71458">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="71450">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="71449" relation="include">
        </childnode>
        <childnode refid="71451" relation="include">
        </childnode>
        <childnode refid="71434" relation="include">
        </childnode>
        <childnode refid="71425" relation="include">
        </childnode>
        <childnode refid="71453" relation="include">
        </childnode>
      </node>
      <node id="71410">
        <label>algorithm</label>
      </node>
      <node id="71465">
        <label>AthContainers/AuxElement.h</label>
        <link refid="d1/d6f/AuxElement_8h"/>
        <childnode refid="71466" relation="include">
        </childnode>
        <childnode refid="71420" relation="include">
        </childnode>
        <childnode refid="71461" relation="include">
        </childnode>
        <childnode refid="71426" relation="include">
        </childnode>
        <childnode refid="71444" relation="include">
        </childnode>
        <childnode refid="71405" relation="include">
        </childnode>
        <childnode refid="71424" relation="include">
        </childnode>
        <childnode refid="71467" relation="include">
        </childnode>
        <childnode refid="71435" relation="include">
        </childnode>
        <childnode refid="71407" relation="include">
        </childnode>
        <childnode refid="71470" relation="include">
        </childnode>
      </node>
      <node id="71426">
        <label>AthLinks/DataLink.h</label>
        <link refid="da/de8/DataLink_8h_source"/>
        <childnode refid="71427" relation="include">
        </childnode>
        <childnode refid="71416" relation="include">
        </childnode>
        <childnode refid="71428" relation="include">
        </childnode>
        <childnode refid="71429" relation="include">
        </childnode>
      </node>
      <node id="71463">
        <label>AthContainers/OwnershipPolicy.h</label>
        <link refid="d3/da4/OwnershipPolicy_8h_source"/>
      </node>
      <node id="71418">
        <label>memory</label>
      </node>
      <node id="71457">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="71447" relation="include">
        </childnode>
        <childnode refid="71448" relation="include">
        </childnode>
        <childnode refid="71458" relation="include">
        </childnode>
      </node>
      <node id="71473">
        <label>AthContainersInterfaces/AuxStore_traits.h</label>
        <link refid="dd/d70/AuxStore__traits_8h"/>
        <childnode refid="71466" relation="include">
        </childnode>
        <childnode refid="71461" relation="include">
        </childnode>
        <childnode refid="71420" relation="include">
        </childnode>
        <childnode refid="71454" relation="include">
        </childnode>
        <childnode refid="71474" relation="include">
        </childnode>
        <childnode refid="71475" relation="include">
        </childnode>
        <childnode refid="71416" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="dd/d59/namespaceSG">SG</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>$Id$</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d7/d18/AuxVectorBase_8h" kindref="compound" tooltip="Manage index tracking and synchronization of auxiliary data.">AthContainers/AuxVectorBase.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="da/d8e/foreach_8h" kindref="compound" tooltip="foreach helper for standalone build.">AthContainers/tools/foreach.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">SG<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><ref refid="dd/da5/classSG_1_1AuxVectorBase_1a0393c7e87efbe788419774c662cba5a2" kindref="member" tooltip="Default constructor.">AuxVectorBase::AuxVectorBase</ref>()</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>:<sp/>m_trackIndices<sp/>(false)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201100</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><ref refid="dd/da5/classSG_1_1AuxVectorBase_1a0393c7e87efbe788419774c662cba5a2" kindref="member" tooltip="Default constructor.">AuxVectorBase::AuxVectorBase</ref><sp/>(AuxVectorBase&amp;&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>:<sp/>AuxVectorData<sp/>(std::move<sp/>(rhs)),</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>m_trackIndices<sp/>(rhs.m_trackIndices)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">AuxVectorBase&amp;<sp/>AuxVectorBase::operator=<sp/>(AuxVectorBase&amp;&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>AuxVectorData::operator=<sp/>(std::move<sp/>(rhs));</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>m_trackIndices<sp/>=<sp/>rhs.m_trackIndices;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><ref refid="dd/da5/classSG_1_1AuxVectorBase_1a863ff9b970004c403c1398d24b1f60e7" kindref="member" tooltip="Destructor.">AuxVectorBase::~AuxVectorBase</ref>()</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/da5/classSG_1_1AuxVectorBase_1aa21603645adb97780ff75af26630bfad" kindref="member" tooltip="Set the store associated with this object.">AuxVectorBase::setStore</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d3/dd5/classSG_1_1IConstAuxStore" kindref="compound" tooltip="Interface for const operations on an auxiliary store.">SG::IConstAuxStore</ref>*<sp/>store)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(store<sp/>&amp;&amp;<sp/>!m_trackIndices)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="d4/d77/classSG_1_1ExcUntrackedSetStore" kindref="compound" tooltip="Exception --- Attempt to set aux data store on container that doesn&amp;#39;t track indices...">SG::ExcUntrackedSetStore</ref>();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="dd/da5/classSG_1_1AuxVectorBase_1aa21603645adb97780ff75af26630bfad" kindref="member" tooltip="Set the store associated with this object.">SG::AuxVectorData::setStore</ref><sp/>(store);</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/da5/classSG_1_1AuxVectorBase_1aa21603645adb97780ff75af26630bfad" kindref="member" tooltip="Set the store associated with this object.">AuxVectorBase::setStore</ref><sp/>(<ref refid="dc/d05/classSG_1_1IAuxStore" kindref="compound" tooltip="Interface for non-const operations on an auxiliary store.">SG::IAuxStore</ref>*<sp/>store)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(store<sp/>&amp;&amp;<sp/>!m_trackIndices)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="d4/d77/classSG_1_1ExcUntrackedSetStore" kindref="compound" tooltip="Exception --- Attempt to set aux data store on container that doesn&amp;#39;t track indices...">SG::ExcUntrackedSetStore</ref>();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><ref refid="dd/da5/classSG_1_1AuxVectorBase_1aa21603645adb97780ff75af26630bfad" kindref="member" tooltip="Set the store associated with this object.">SG::AuxVectorData::setStore</ref><sp/>(store);</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/da5/classSG_1_1AuxVectorBase_1aa21603645adb97780ff75af26630bfad" kindref="member" tooltip="Set the store associated with this object.">AuxVectorBase::setStore</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/da2/classDataLink" kindref="compound">DataLink&lt;SG::IConstAuxStore&gt;</ref>&amp;<sp/>store)</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_trackIndices)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="d4/d77/classSG_1_1ExcUntrackedSetStore" kindref="compound" tooltip="Exception --- Attempt to set aux data store on container that doesn&amp;#39;t track indices...">SG::ExcUntrackedSetStore</ref>();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><ref refid="dd/da5/classSG_1_1AuxVectorBase_1aa21603645adb97780ff75af26630bfad" kindref="member" tooltip="Set the store associated with this object.">SG::AuxVectorData::setStore</ref><sp/>(store);</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal">AuxVectorBase::initAuxVectorBase1<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SG_STD_OR_BOOST::false_type&amp;,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d59/namespaceSG_1acd9d1a31242c6243cc1c6fab0fbc7cd8" kindref="member" tooltip="describes the possible element ownership policies (see e.g. DataVector)">SG::OwnershipPolicy</ref><sp/></highlight><highlight class="comment">/*ownPolicy*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d59/namespaceSG_1a9f3d699f65390b7f8baf54d9cd634573" kindref="member">SG::IndexTrackingPolicy</ref><sp/></highlight><highlight class="comment">/*indexTrackingPolicy*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>m_trackIndices<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1a7ae11026ce063feb9b55456698ef2a4f" kindref="member" tooltip="Return true if this object has an associated store.">hasStore</ref>())</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="d4/d77/classSG_1_1ExcUntrackedSetStore" kindref="compound" tooltip="Exception --- Attempt to set aux data store on container that doesn&amp;#39;t track indices...">SG::ExcUntrackedSetStore</ref>();</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal">AuxVectorBase::initAuxVectorBase1<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SG_STD_OR_BOOST::true_type&amp;,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d59/namespaceSG_1acd9d1a31242c6243cc1c6fab0fbc7cd8" kindref="member" tooltip="describes the possible element ownership policies (see e.g. DataVector)">SG::OwnershipPolicy</ref><sp/>ownPolicy,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d59/namespaceSG_1a9f3d699f65390b7f8baf54d9cd634573" kindref="member">SG::IndexTrackingPolicy</ref><sp/>indexTrackingPolicy)</highlight></codeline>
<codeline lineno="154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(indexTrackingPolicy<sp/>==<sp/><ref refid="dd/d59/namespaceSG_1a9f3d699f65390b7f8baf54d9cd634573a3fef24c7e616865bef9cfc1ecd85b67d" kindref="member" tooltip="Always track indices, regardless of the setting of the ownership policy.">SG::ALWAYS_TRACK_INDICES</ref>)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>m_trackIndices<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(indexTrackingPolicy<sp/>==<sp/><ref refid="dd/d59/namespaceSG_1a9f3d699f65390b7f8baf54d9cd634573a6e7a344e9aac93f8a793eebda3c608a8" kindref="member" tooltip="Never track indices, regardless of the setting of the ownership policy.">SG::NEVER_TRACK_INDICES</ref>)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>m_trackIndices<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ownPolicy<sp/>==<sp/><ref refid="dd/d59/namespaceSG_1acd9d1a31242c6243cc1c6fab0fbc7cd8a1f65f0fb55784cfd27d9d4d6d7986d4d" kindref="member" tooltip="this data object owns its elements">SG::OWN_ELEMENTS</ref>)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>m_trackIndices<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>m_trackIndices<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_trackIndices<sp/>&amp;&amp;<sp/>this-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1a7ae11026ce063feb9b55456698ef2a4f" kindref="member" tooltip="Return true if this object has an associated store.">hasStore</ref>())</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="d4/d77/classSG_1_1ExcUntrackedSetStore" kindref="compound" tooltip="Exception --- Attempt to set aux data store on container that doesn&amp;#39;t track indices...">SG::ExcUntrackedSetStore</ref>();</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AuxVectorBase::resize1<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SG_STD_OR_BOOST::true_type&amp;,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1a97b5279b30e60d9b099cb6496404c1aa" kindref="member" tooltip="Return true if this object has an associated non-const store.">hasNonConstStore</ref>())<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1af1d8f5f0dd148fbf2041560f77ab0113" kindref="member" tooltip="Return the current store, as a non-const interface.">getStore</ref>()-&gt;<ref refid="dc/d05/classSG_1_1IAuxStore_1a3e35266b4688361e2c804b68b73892e0" kindref="member" tooltip="Change the size of all aux data vectors.">resize</ref><sp/>(size);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/dd6/classSG_1_1AuxVectorData_1a5d6d9eefd8811b373b3eeda823e5c0ad" kindref="member" tooltip="Clear the cached aux data pointers.">clearCache</ref>();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1a7ae11026ce063feb9b55456698ef2a4f" kindref="member" tooltip="Return true if this object has an associated store.">hasStore</ref>())</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="da/ddd/classSG_1_1ExcConstAuxData" kindref="compound" tooltip="Exception --- Non-const operation performed on const aux data.">SG::ExcConstAuxData</ref><sp/>(</highlight><highlight class="stringliteral">&quot;resize&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AuxVectorBase::reserve1<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SG_STD_OR_BOOST::true_type&amp;,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1a97b5279b30e60d9b099cb6496404c1aa" kindref="member" tooltip="Return true if this object has an associated non-const store.">hasNonConstStore</ref>())<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1af1d8f5f0dd148fbf2041560f77ab0113" kindref="member" tooltip="Return the current store, as a non-const interface.">getStore</ref>()-&gt;<ref refid="dc/d05/classSG_1_1IAuxStore_1a76c099cf5b1e88b8bdfebf4c014e4d1b" kindref="member" tooltip="Change the capacity of all aux data vectors.">reserve</ref><sp/>(size);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/dd6/classSG_1_1AuxVectorData_1a5d6d9eefd8811b373b3eeda823e5c0ad" kindref="member" tooltip="Clear the cached aux data pointers.">clearCache</ref>();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1a7ae11026ce063feb9b55456698ef2a4f" kindref="member" tooltip="Return true if this object has an associated store.">hasStore</ref>())</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="da/ddd/classSG_1_1ExcConstAuxData" kindref="compound" tooltip="Exception --- Non-const operation performed on const aux data.">SG::ExcConstAuxData</ref><sp/>(</highlight><highlight class="stringliteral">&quot;reserve&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><ref refid="dd/da5/classSG_1_1AuxVectorBase_1ad4be9ca08792014774acdd5218bd27a0" kindref="member" tooltip="Set index on an element and copy auxiliary data.">AuxVectorBase::moveAux</ref><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index,<sp/><ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound" tooltip="Base class for elements of a container that can have aux data.">SG::AuxElement</ref>*<sp/>p,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clear<sp/></highlight><highlight class="comment">/*=<sp/>false*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_trackIndices)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound" tooltip="Base class for elements of a container that can have aux data.">SG::AuxElement</ref><sp/>to<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>index);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>to.clearAux();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>to.copyAux<sp/>(*p);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clear)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;clearAux();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>p-&gt;setIndex<sp/>(index,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/da5/classSG_1_1AuxVectorBase_1a3105544a00e10c72e45ca7367bb43e87" kindref="member" tooltip="Swap indices and auxiliary data between two elements.">AuxVectorBase::swapElementsAux</ref><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aindex,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bindex,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound" tooltip="Base class for elements of a container that can have aux data.">SG::AuxElement</ref>*<sp/>a,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound" tooltip="Base class for elements of a container that can have aux data.">SG::AuxElement</ref>*<sp/>b,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AuxVectorBase*<sp/>bcont)</highlight></codeline>
<codeline lineno="251"><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><ref refid="dd/da5/classSG_1_1AuxVectorBase_1a0393c7e87efbe788419774c662cba5a2" kindref="member" tooltip="Default constructor.">AuxVectorBase</ref>*<sp/>acont<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>one<sp/>of<sp/>the<sp/>elements<sp/>is<sp/>null,<sp/>then<sp/>this<sp/>is<sp/>just<sp/>a<sp/>@c<sp/>moveAux.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!b)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!a)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>acont-&gt;moveAux<sp/>(aindex,<sp/>a,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!a)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>bcont-&gt;moveAux<sp/>(bindex,<sp/>b,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>indices.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>&amp;&amp;<sp/>bcont-&gt;trackIndices())</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;setIndex<sp/>(bindex,<sp/>bcont);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>&amp;&amp;<sp/>acont-&gt;trackIndices())</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>a-&gt;setIndex<sp/>(aindex,<sp/>acont);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>stores.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1a97b5279b30e60d9b099cb6496404c1aa" kindref="member" tooltip="Return true if this object has an associated non-const store.">hasNonConstStore</ref>())<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1a7ae11026ce063feb9b55456698ef2a4f" kindref="member" tooltip="Return true if this object has an associated store.">hasStore</ref>())<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="da/ddd/classSG_1_1ExcConstAuxData" kindref="compound" tooltip="Exception --- Non-const operation performed on const aux data.">SG::ExcConstAuxData</ref><sp/>(</highlight><highlight class="stringliteral">&quot;swapElementsAux&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Swap<sp/>aux<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">SG::auxid_set_t</ref>&amp;<sp/>a_ids<sp/>=<sp/>acont-&gt;getAuxIDs();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">SG::auxid_set_t</ref>&amp;<sp/>b_ids<sp/>=<sp/>bcont-&gt;getAuxIDs();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry" kindref="compound" tooltip="Handle mappings between names and auxid_t.">SG::AuxTypeRegistry</ref>&amp;<sp/>r<sp/>=<sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry_1ab22c247525e0883b46012f14b6f5a048" kindref="member" tooltip="Return the singleton registry instance.">SG::AuxTypeRegistry::instance</ref>();</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><ref refid="d9/d35/classAthContainers__detail_1_1strict__shared__lock" kindref="compound">SG::AuxTypeRegistry::lock_t</ref><sp/><ref refid="db/dd6/classSG_1_1AuxVectorData_1a4379058b2eb0522291c4c20076ef7967" kindref="member" tooltip="Lock the container.">lock</ref><sp/>(r);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>ATHCONTAINERS_FOREACH<sp/>(<ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/>auxid,<sp/>a_ids)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>aptr<sp/>=<sp/>acont-&gt;getDataArray<sp/>(auxid);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>bptr<sp/>=<sp/>bcont-&gt;getDataArray<sp/>(auxid);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>r.<ref refid="db/d33/classSG_1_1AuxTypeRegistry_1a5ff58673f48fe3db1a1654bcce6a33ea" kindref="member" tooltip="Swap an element between vectors.">swap</ref><sp/>(<ref refid="db/dd6/classSG_1_1AuxVectorData_1a4379058b2eb0522291c4c20076ef7967" kindref="member" tooltip="Lock the container.">lock</ref>,<sp/>auxid,<sp/>aptr,<sp/>aindex,<sp/>bptr,<sp/>bindex);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>ATHCONTAINERS_FOREACH<sp/>(<ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/>auxid,<sp/>b_ids)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a_ids.find<sp/>(auxid)<sp/>==<sp/>a_ids.end())<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>aptr<sp/>=<sp/>acont-&gt;getDataArray<sp/>(auxid);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>bptr<sp/>=<sp/>bcont-&gt;getDataArray<sp/>(auxid);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="db/d33/classSG_1_1AuxTypeRegistry_1a5ff58673f48fe3db1a1654bcce6a33ea" kindref="member" tooltip="Swap an element between vectors.">swap</ref><sp/>(<ref refid="db/dd6/classSG_1_1AuxVectorData_1a4379058b2eb0522291c4c20076ef7967" kindref="member" tooltip="Lock the container.">lock</ref>,<sp/>auxid,<sp/>aptr,<sp/>aindex,<sp/>bptr,<sp/>bindex);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal">AuxVectorBase::ResortAuxHelper::ResortAuxHelper<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz,</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index,</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AuxVectorBase&amp;<sp/>vec)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>:<sp/>m_vec<sp/>(vec),</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>m_index<sp/>(index),</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>m_imap<sp/>(sz),</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>m_rmap<sp/>(sz),</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>m_lock<sp/>(SG::AuxTypeRegistry::instance())</highlight></codeline>
<codeline lineno="316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>sz;<sp/>i++)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>m_imap[i]<sp/>=<sp/>m_rmap[i]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">SG::auxid_set_t</ref>&amp;<sp/>auxid_set<sp/>=<sp/>vec.getAuxIDs();</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>naux<sp/>=<sp/>auxid_set.size();</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>m_auxdata.reserve<sp/>(naux);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>m_auxids.reserve<sp/>(naux);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>ATHCONTAINERS_FOREACH<sp/>(<ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/>auxid,<sp/>auxid_set)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>m_auxdata.push_back<sp/>(vec.getDataArrayForResort<sp/>(auxid));</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>m_auxids.push_back<sp/>(auxid);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal">AuxVectorBase::ResortAuxHelper::resortElement<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx,<sp/><ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound" tooltip="Base class for elements of a container that can have aux data.">SG::AuxElement</ref>*<sp/>elt)</highlight></codeline>
<codeline lineno="338"><highlight class="normal">{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>x:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>9<sp/><sp/>8<sp/><sp/>7<sp/><sp/>6<sp/><sp/>5<sp/><sp/>0<sp/><sp/>1<sp/><sp/>2<sp/><sp/>3<sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>m_index:<sp/><sp/>0<sp/><sp/>1<sp/><sp/>2<sp/><sp/>3<sp/><sp/>4<sp/><sp/>0<sp/><sp/>1<sp/><sp/>2<sp/><sp/>3<sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>imap<sp/><sp/><sp/><sp/><sp/><sp/>9<sp/><sp/>8<sp/><sp/>7<sp/><sp/>6<sp/><sp/>5<sp/><sp/>4<sp/><sp/>3<sp/><sp/>2<sp/><sp/>1<sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rmap<sp/><sp/><sp/><sp/><sp/><sp/>9<sp/><sp/>8<sp/><sp/>7<sp/><sp/>6<sp/><sp/>5<sp/><sp/>4<sp/><sp/>3<sp/><sp/>2<sp/><sp/>1<sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>aux<sp/><sp/><sp/><sp/><sp/><sp/>19<sp/>18<sp/>17<sp/>16<sp/>15<sp/>14<sp/>13<sp/>12<sp/>11<sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>imap[i]<sp/>tells<sp/>in<sp/>which<sp/>slot<sp/>the<sp/>auxdata<sp/>originally<sp/>in<sp/>slot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>i<sp/>is<sp/>currently<sp/>located.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rmap[i]<sp/>gives<sp/>the<sp/>original<sp/>location<sp/>of<sp/>the<sp/>auxdata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>currently<sp/>in<sp/>slot<sp/>i.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>each<sp/>time<sp/>through<sp/>the<sp/>loop,<sp/>looking<sp/>at<sp/>index<sp/>i:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>--<sp/>look<sp/>at<sp/>the<sp/>index<sp/>that<sp/>was<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>we<sp/>want<sp/>to<sp/>move<sp/>the<sp/>aux<sp/>data<sp/>originally<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>auxindex=v[i]-&gt;index()<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>--<sp/>that<sp/>data<sp/>is<sp/>currently<sp/>at<sp/>slot<sp/>ii1<sp/>=<sp/>imap[auxindex]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>--<sp/>swap<sp/>auxdata<sp/>between<sp/>slots<sp/>i<sp/>and<sp/>ii1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>--<sp/>swap<sp/>rmap<sp/>between<sp/>slots<sp/>i<sp/>and<sp/>ii1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>--<sp/>swap<sp/>imap<sp/>entries<sp/>rmap[i]<sp/>and<sp/>rmap[ii1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>--<sp/>set<sp/>v[i]-&gt;index()<sp/>to<sp/>index.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>need<sp/>to<sp/>remember<sp/>to<sp/>take<sp/>into<sp/>account<sp/>any<sp/>offset<sp/>between</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>range<sp/>we&apos;re<sp/>given<sp/>and<sp/>the<sp/>beginning<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>container<sp/>(i.e.,<sp/>index<sp/>was<sp/>nonzero<sp/>on<sp/>entry).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>???<sp/>can<sp/>this<sp/>be<sp/>made<sp/>more<sp/>efficient?<sp/><sp/>do<sp/>we<sp/>need<sp/>so<sp/>much</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>working<sp/>storage???<sp/><sp/>xxx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>m_index;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>auxindex<sp/>=<sp/>elt-&gt;<ref refid="dc/db0/classSG_1_1AuxElement_1aba555afb4547fbe96fbdc4b266f75f16" kindref="member" tooltip="Return the index of this element within its container.">index</ref>();</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>ATHCONTAINERS_ASSERT<sp/>(auxindex-index<sp/>&lt;<sp/>m_imap.size());</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ii1<sp/>=<sp/>m_imap[auxindex-index];</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ii1<sp/>!=<sp/>idx)<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>ATHCONTAINERS_ASSERT<sp/>(ii1<sp/>&gt;<sp/>idx);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>swap<sp/>between<sp/>auxdata<sp/>slots<sp/>dx+index,<sp/>ii1+index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry" kindref="compound" tooltip="Handle mappings between names and auxid_t.">SG::AuxTypeRegistry</ref>&amp;<sp/>r<sp/>=<sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry_1ab22c247525e0883b46012f14b6f5a048" kindref="member" tooltip="Return the singleton registry instance.">SG::AuxTypeRegistry::instance</ref>();</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>naux<sp/>=<sp/>m_auxids.size();</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iid<sp/>=<sp/>0;<sp/>iid<sp/>&lt;<sp/>naux;<sp/>iid++)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr<sp/>=<sp/>m_auxdata[iid];</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="db/d33/classSG_1_1AuxTypeRegistry_1a5ff58673f48fe3db1a1654bcce6a33ea" kindref="member" tooltip="Swap an element between vectors.">swap</ref><sp/>(m_lock,<sp/>m_auxids[iid],<sp/>ptr,<sp/>idx+index,<sp/>ptr,<sp/>ii1+index);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/dd6/classSG_1_1AuxVectorData_1aea4d64e4a85beda13d1243ece5d210e2" kindref="member" tooltip="Swap this instance with another.">std::swap</ref><sp/>(m_rmap[idx],<sp/>m_rmap[ii1]);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/dd6/classSG_1_1AuxVectorData_1aea4d64e4a85beda13d1243ece5d210e2" kindref="member" tooltip="Swap this instance with another.">std::swap</ref><sp/>(m_imap[m_rmap[idx]],<sp/>m_imap[m_rmap[ii1]]);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>m_vec.setIndexForResort<sp/>(elt,<sp/>index+idx);</highlight></codeline>
<codeline lineno="385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>SG</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/AuxVectorBase.cxx"/>
  </compounddef>
</doxygen>
