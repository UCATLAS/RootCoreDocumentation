<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d5/d07/AuxSelection_8cxx" kind="file">
    <compoundname>AuxSelection.cxx</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">map</includes>
    <includes refid="db/d7f/AuxTypeRegistry_8h" local="yes">AthContainers/AuxTypeRegistry.h</includes>
    <includes refid="d3/dd4/AuxSelection_8h" local="yes">xAODCore/AuxSelection.h</includes>
    <incdepgraph>
      <node id="358543">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="358545">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="358508" relation="include">
        </childnode>
        <childnode refid="358510" relation="include">
        </childnode>
        <childnode refid="358517" relation="include">
        </childnode>
        <childnode refid="358518" relation="include">
        </childnode>
      </node>
      <node id="358546">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="358516">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="358518">
        <label>functional</label>
      </node>
      <node id="358514">
        <label>limits</label>
      </node>
      <node id="358541">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="358511">
        <label>iterator</label>
      </node>
      <node id="358528">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="358515" relation="include">
        </childnode>
        <childnode refid="358529" relation="include">
        </childnode>
      </node>
      <node id="358524">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="358525" relation="include">
        </childnode>
        <childnode refid="358512" relation="include">
        </childnode>
      </node>
      <node id="358530">
        <label>stdint.h</label>
      </node>
      <node id="358521">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="358506" relation="include">
        </childnode>
        <childnode refid="358520" relation="include">
        </childnode>
      </node>
      <node id="358507">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="358508" relation="include">
        </childnode>
        <childnode refid="358517" relation="include">
        </childnode>
        <childnode refid="358518" relation="include">
        </childnode>
      </node>
      <node id="358513">
        <label>cmath</label>
      </node>
      <node id="358544">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="358515">
        <label>string</label>
      </node>
      <node id="358519">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="358506" relation="include">
        </childnode>
        <childnode refid="358520" relation="include">
        </childnode>
      </node>
      <node id="358503">
        <label>map</label>
      </node>
      <node id="358536">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="358533">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="358542">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="358527">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="358528" relation="include">
        </childnode>
        <childnode refid="358514" relation="include">
        </childnode>
        <childnode refid="358530" relation="include">
        </childnode>
        <childnode refid="358531" relation="include">
        </childnode>
      </node>
      <node id="358505">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="358506" relation="include">
        </childnode>
        <childnode refid="358507" relation="include">
        </childnode>
      </node>
      <node id="358508">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="358509" relation="include">
        </childnode>
        <childnode refid="358510" relation="include">
        </childnode>
        <childnode refid="358511" relation="include">
        </childnode>
        <childnode refid="358506" relation="include">
        </childnode>
        <childnode refid="358512" relation="include">
        </childnode>
        <childnode refid="358513" relation="include">
        </childnode>
        <childnode refid="358514" relation="include">
        </childnode>
        <childnode refid="358515" relation="include">
        </childnode>
        <childnode refid="358516" relation="include">
        </childnode>
      </node>
      <node id="358520">
        <label>typeinfo</label>
      </node>
      <node id="358531">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="358529">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="358535">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="358504">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="358505" relation="include">
        </childnode>
        <childnode refid="358519" relation="include">
        </childnode>
        <childnode refid="358521" relation="include">
        </childnode>
        <childnode refid="358522" relation="include">
        </childnode>
        <childnode refid="358537" relation="include">
        </childnode>
        <childnode refid="358539" relation="include">
        </childnode>
        <childnode refid="358506" relation="include">
        </childnode>
        <childnode refid="358520" relation="include">
        </childnode>
        <childnode refid="358525" relation="include">
        </childnode>
        <childnode refid="358545" relation="include">
        </childnode>
        <childnode refid="358546" relation="include">
        </childnode>
      </node>
      <node id="358525">
        <label>vector</label>
      </node>
      <node id="358510">
        <label>utility</label>
      </node>
      <node id="358532">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="358540">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="358523">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="358539">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="358540" relation="include">
        </childnode>
        <childnode refid="358541" relation="include">
        </childnode>
        <childnode refid="358542" relation="include">
        </childnode>
        <childnode refid="358543" relation="include">
        </childnode>
        <childnode refid="358544" relation="include">
        </childnode>
      </node>
      <node id="358512">
        <label>cstdlib</label>
      </node>
      <node id="358547">
        <label>xAODCore/AuxSelection.h</label>
        <link refid="d3/dd4/AuxSelection_8h_source"/>
        <childnode refid="358548" relation="include">
        </childnode>
        <childnode refid="358515" relation="include">
        </childnode>
        <childnode refid="358505" relation="include">
        </childnode>
      </node>
      <node id="358502">
        <label>iostream</label>
      </node>
      <node id="358506">
        <label>cstddef</label>
      </node>
      <node id="358522">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="358519" relation="include">
        </childnode>
        <childnode refid="358523" relation="include">
        </childnode>
        <childnode refid="358524" relation="include">
        </childnode>
        <childnode refid="358526" relation="include">
        </childnode>
        <childnode refid="358532" relation="include">
        </childnode>
        <childnode refid="358520" relation="include">
        </childnode>
        <childnode refid="358525" relation="include">
        </childnode>
        <childnode refid="358509" relation="include">
        </childnode>
        <childnode refid="358530" relation="include">
        </childnode>
        <childnode refid="358534" relation="include">
        </childnode>
        <childnode refid="358535" relation="include">
        </childnode>
        <childnode refid="358536" relation="include">
        </childnode>
      </node>
      <node id="358534">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="358548">
        <label>set</label>
      </node>
      <node id="358538">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="358526">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="358523" relation="include">
        </childnode>
        <childnode refid="358527" relation="include">
        </childnode>
        <childnode refid="358532" relation="include">
        </childnode>
        <childnode refid="358525" relation="include">
        </childnode>
        <childnode refid="358533" relation="include">
        </childnode>
      </node>
      <node id="358509">
        <label>algorithm</label>
      </node>
      <node id="358501">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxSelection.cxx</label>
        <link refid="AuxSelection.cxx"/>
        <childnode refid="358502" relation="include">
        </childnode>
        <childnode refid="358503" relation="include">
        </childnode>
        <childnode refid="358504" relation="include">
        </childnode>
        <childnode refid="358547" relation="include">
        </childnode>
      </node>
      <node id="358517">
        <label>memory</label>
      </node>
      <node id="358537">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="358521" relation="include">
        </childnode>
        <childnode refid="358522" relation="include">
        </childnode>
        <childnode refid="358538" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="dd/d44/namespacexAOD">xAOD</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>$Id:<sp/>AuxSelection.cxx<sp/>653257<sp/>2015-03-11<sp/>11:26:15Z<sp/>krasznaa<sp/>$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>System<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EDM<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="db/d7f/AuxTypeRegistry_8h" kindref="compound" tooltip="Handle mappings between names and auxid_t.">AthContainers/AuxTypeRegistry.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Local<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODCore/AuxSelection.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::set&lt;<sp/>std::string<sp/>&gt;<sp/>mentionnedVariableNames;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>private<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">xAOD<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><ref refid="d6/dd6/classxAOD_1_1AuxSelection_1ae447c47249fce9012b7e373615d4cecb" kindref="member" tooltip="Default constructor.">AuxSelection::AuxSelection</ref>()</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_names(),</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_auxids()<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/dd6/classxAOD_1_1AuxSelection_1a4cc5c075a7fd3bb5d151e1883878ed5e" kindref="member" tooltip="Select which variables should be written out.">AuxSelection::selectAux</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;<sp/>std::string<sp/>&gt;&amp;<sp/>attributes<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/dd6/classxAOD_1_1AuxSelection_1a076b5fe8839bc5ed0d69dde67d980b94" kindref="member" tooltip="Properties following the variable selection convention.">m_names</ref><sp/>=<sp/>attributes;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">SG::auxid_set_t</ref>&amp;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><ref refid="d6/dd6/classxAOD_1_1AuxSelection_1a263c3809091ab37fe06c70b59142c05d" kindref="member" tooltip="Return which variables were selected to be written out.">AuxSelection::getSelectedAuxIDs</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">SG::auxid_set_t</ref>&amp;<sp/>fullset<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>the<sp/>simplest<sp/>case...<sp/>all<sp/>variables<sp/>selected:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="d6/dd6/classxAOD_1_1AuxSelection_1a076b5fe8839bc5ed0d69dde67d980b94" kindref="member" tooltip="Properties following the variable selection convention.">m_names</ref>.empty()<sp/>||<sp/>(<sp/><ref refid="d6/dd6/classxAOD_1_1AuxSelection_1a076b5fe8839bc5ed0d69dde67d980b94" kindref="member" tooltip="Properties following the variable selection convention.">m_names</ref>.find(<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/><ref refid="d6/dd6/classxAOD_1_1AuxSelection_1a076b5fe8839bc5ed0d69dde67d980b94" kindref="member" tooltip="Properties following the variable selection convention.">m_names</ref>.end()<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fullset;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>from<sp/>an<sp/>empty<sp/>list:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/dd6/classxAOD_1_1AuxSelection_1a20ba173c75a3b4c4768ad571805c33df" kindref="member" tooltip="Auxiliary IDs of the variables that were selected from the last list.">m_auxids</ref>.clear();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>everything<sp/>should<sp/>be<sp/>disregarded:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="d6/dd6/classxAOD_1_1AuxSelection_1a076b5fe8839bc5ed0d69dde67d980b94" kindref="member" tooltip="Properties following the variable selection convention.">m_names</ref>.find(<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/><ref refid="d6/dd6/classxAOD_1_1AuxSelection_1a076b5fe8839bc5ed0d69dde67d980b94" kindref="member" tooltip="Properties following the variable selection convention.">m_names</ref>.end()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d6/dd6/classxAOD_1_1AuxSelection_1a20ba173c75a3b4c4768ad571805c33df" kindref="member" tooltip="Auxiliary IDs of the variables that were selected from the last list.">m_auxids</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>the<sp/>user<sp/>only<sp/>put<sp/>positive<sp/>or<sp/>negative<sp/>selections<sp/>on<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>list.<sp/>They<sp/>can&apos;t<sp/>be<sp/>mixed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sub<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>add<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;<sp/>std::string<sp/>&gt;::const_iterator<sp/>name_itr<sp/>=<sp/><ref refid="d6/dd6/classxAOD_1_1AuxSelection_1a076b5fe8839bc5ed0d69dde67d980b94" kindref="member" tooltip="Properties following the variable selection convention.">m_names</ref>.begin();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;<sp/>std::string<sp/>&gt;::const_iterator<sp/>name_end<sp/>=<sp/><ref refid="d6/dd6/classxAOD_1_1AuxSelection_1a076b5fe8839bc5ed0d69dde67d980b94" kindref="member" tooltip="Properties following the variable selection convention.">m_names</ref>.end();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>;<sp/>name_itr<sp/>!=<sp/>name_end;<sp/>++name_itr<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>*name_itr<sp/>)[<sp/>0<sp/>]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>sub<sp/>&amp;&amp;<sp/>add<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;xAOD::AuxSelection<sp/>ERROR<sp/>Mixing<sp/>+<sp/>and<sp/>-<sp/>options<sp/>for<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;dynamic<sp/>attributes&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fullset;<sp/><sp/></highlight><highlight class="comment">//better<sp/>safe<sp/>than<sp/>sorry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>add<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>with<sp/>an<sp/>empty<sp/>list,<sp/>and<sp/>loop<sp/>over<sp/>the<sp/>selected<sp/>names:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name_itr<sp/>=<sp/><ref refid="d6/dd6/classxAOD_1_1AuxSelection_1a076b5fe8839bc5ed0d69dde67d980b94" kindref="member" tooltip="Properties following the variable selection convention.">m_names</ref>.begin();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name_end<sp/>=<sp/><ref refid="d6/dd6/classxAOD_1_1AuxSelection_1a076b5fe8839bc5ed0d69dde67d980b94" kindref="member" tooltip="Properties following the variable selection convention.">m_names</ref>.end();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>;<sp/>name_itr<sp/>!=<sp/>name_end;<sp/>++name_itr<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>ID<sp/>of<sp/>this<sp/>name:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/>auxid<sp/>=</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry_1ab22c247525e0883b46012f14b6f5a048" kindref="member" tooltip="Return the singleton registry instance.">SG::AuxTypeRegistry::instance</ref>().findAuxID(<sp/>*name_itr<sp/>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>auxid<sp/>!=<sp/>SG::null_auxid<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>this<sp/>variable<sp/>if<sp/>it<sp/>exists:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>fullset.find(<sp/>auxid<sp/>)<sp/>!=<sp/>fullset.end()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/dd6/classxAOD_1_1AuxSelection_1a20ba173c75a3b4c4768ad571805c33df" kindref="member" tooltip="Auxiliary IDs of the variables that were selected from the last list.">m_auxids</ref>.insert(<sp/>auxid<sp/>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>a<sp/>warning<sp/>should<sp/>be<sp/>printed<sp/>at<sp/>this<sp/>time<sp/>or<sp/>not:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>::mentionnedVariableNames.insert(<sp/>*name_itr<sp/>).second<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apparently<sp/>we<sp/>didn&apos;t<sp/>complain<sp/>about<sp/>this<sp/>name<sp/>yet...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;xAOD::AuxSelection<sp/>WARNING<sp/>Selected<sp/>dynamic<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Aux<sp/>atribute<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>*name_itr</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>not<sp/>found<sp/>in<sp/>the<sp/>registry&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>from<sp/>the<sp/>full<sp/>list:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/dd6/classxAOD_1_1AuxSelection_1a20ba173c75a3b4c4768ad571805c33df" kindref="member" tooltip="Auxiliary IDs of the variables that were selected from the last list.">m_auxids</ref><sp/>=<sp/>fullset;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...and<sp/>check<sp/>which<sp/>variables<sp/>should<sp/>be<sp/>removed:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SG::auxid_set_t::const_iterator<sp/>id_itr<sp/>=<sp/>fullset.begin();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SG::auxid_set_t::const_iterator<sp/>id_end<sp/>=<sp/>fullset.end();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>;<sp/>id_itr<sp/>!=<sp/>id_end;<sp/>++id_itr<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>the<sp/>name<sp/>that<sp/>we<sp/>need<sp/>to<sp/>look<sp/>for:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>attrname<sp/>=</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry_1ab22c247525e0883b46012f14b6f5a048" kindref="member" tooltip="Return the singleton registry instance.">SG::AuxTypeRegistry::instance</ref>().getName(<sp/>*id_itr<sp/>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>it<sp/>is<sp/>in<sp/>the<sp/>list<sp/>to<sp/>be<sp/>removed:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="d6/dd6/classxAOD_1_1AuxSelection_1a076b5fe8839bc5ed0d69dde67d980b94" kindref="member" tooltip="Properties following the variable selection convention.">m_names</ref>.find(<sp/>attrname<sp/>)<sp/>!=<sp/><ref refid="d6/dd6/classxAOD_1_1AuxSelection_1a076b5fe8839bc5ed0d69dde67d980b94" kindref="member" tooltip="Properties following the variable selection convention.">m_names</ref>.end()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/dd6/classxAOD_1_1AuxSelection_1a20ba173c75a3b4c4768ad571805c33df" kindref="member" tooltip="Auxiliary IDs of the variables that were selected from the last list.">m_auxids</ref>.erase(<sp/>*id_itr<sp/>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>list<sp/>of<sp/>variables<sp/>to<sp/>be<sp/>written<sp/>out:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d6/dd6/classxAOD_1_1AuxSelection_1a20ba173c75a3b4c4768ad571805c33df" kindref="member" tooltip="Auxiliary IDs of the variables that were selected from the last list.">m_auxids</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>xAOD</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxSelection.cxx"/>
  </compounddef>
</doxygen>
