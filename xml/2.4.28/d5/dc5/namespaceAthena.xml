<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d5/dc5/namespaceAthena" kind="namespace">
    <compoundname>Athena</compoundname>
    <innerclass refid="d4/d62/classAthena_1_1DebugAids" prot="public">Athena::DebugAids</innerclass>
    <innerclass refid="d9/da7/classAthena_1_1Callback1Rep" prot="public">Athena::Callback1Rep</innerclass>
    <innerclass refid="d3/d81/classAthena_1_1Callback1" prot="public">Athena::Callback1</innerclass>
    <innerclass refid="d5/d50/classAthena_1_1CallbackImpF11" prot="public">Athena::CallbackImpF11</innerclass>
    <innerclass refid="d3/d66/classAthena_1_1SharedLibraryError" prot="public">Athena::SharedLibraryError</innerclass>
    <innerclass refid="d9/d80/classAthena_1_1SharedLibrary" prot="public">Athena::SharedLibrary</innerclass>
    <innerclass refid="d8/d93/structAthena_1_1BitTraits" prot="public">Athena::BitTraits</innerclass>
    <innerclass refid="d9/d58/classAthena_1_1Signal" prot="public">Athena::Signal</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="d5/dc5/namespaceAthena_1abc64851a956e157687d05d9e59795de4" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* Athena::DummyHandlerType)(int)</definition>
        <argsstring>)(int)</argsstring>
        <name>DummyHandlerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dummy handler type for standard <computeroutput>signal()</computeroutput> function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/SealSignal.cxx" line="101" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/SealSignal.cxx" bodystart="101" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="d5/dc5/namespaceAthena_1a45f5d8067177d003cd4498c7f0e8a4a0" prot="public" static="yes" mutable="no">
        <type><ref refid="d3/d81/classAthena_1_1Callback1" kindref="compound">SharedLibrary::InfoHandler</ref> *</type>
        <definition>SharedLibrary::InfoHandler* Athena::SignalDumpCallback</definition>
        <argsstring></argsstring>
        <name>SignalDumpCallback</name>
        <initializer> 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shared library dump callback for Signal::fataldump(). Allocated at initialisation time in Signal::handleFatal() so that we won&apos;t need to allocate memory in the middle of a fatal handler. This variable is deliberately private to this file (to keep Signal headers from referring to SharedLibrary for the local class). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/SealSignal.cxx" line="110" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/SealSignal.cxx" bodystart="110" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="d5/dc5/namespaceAthena_1a7b082ffab56ecad85acd1c7faab0d964" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T1</type>
          </param>
          <param>
            <type>class T2</type>
          </param>
        </templateparamlist>
        <type><ref refid="d9/da7/classAthena_1_1Callback1Rep" kindref="compound">Callback1Rep</ref>&lt; T1 &gt; *</type>
        <definition>Callback1Rep&lt;T1&gt;* Athena::CreateCallback</definition>
        <argsstring>(void(*function)(T1, T2), const T2 &amp;fill_2)</argsstring>
        <name>CreateCallback</name>
        <param>
          <type>void(*)(T1, T2)</type>
          <declname>function</declname>
        </param>
        <param>
          <type>const T2 &amp;</type>
          <declname>fill_2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/SealSharedLib.h" line="140" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/SealSharedLib.h" bodystart="138" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="d5/dc5/namespaceAthena_1a3efef479f74d3f653e01fd3b5825fcff" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Athena::SignalDumpLibs</definition>
        <argsstring>(const SharedLibrary::LibraryInfo &amp;info, IOFD fd)</argsstring>
        <name>SignalDumpLibs</name>
        <param>
          <type>const <ref refid="d7/d0a/structAthena_1_1SharedLibrary_1_1LibraryInfo" kindref="compound">SharedLibrary::LibraryInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <param>
          <type><ref refid="d1/dc7/SealCommon_8h_1a98d936fe848403f33ff9cebfc9a38597" kindref="member">IOFD</ref></type>
          <declname>fd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Internal Signal::fataldump() dumper to produce the list of currently loaded shared libraries. Called for every library detected by SharedLibrary::loaded().</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>Information about this particular library. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>The file descriptor to output to. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/SealSignal.cxx" line="161" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/SealSignal.cxx" bodystart="160" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="d5/dc5/namespaceAthena_1a85eea1ef33350bcb535ede135dc3868c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IMessageSvc *</type>
        <definition>IMessageSvc* Athena::getMessageSvc</definition>
        <argsstring>(bool) __attribute__((weak))</argsstring>
        <name>getMessageSvc</name>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfBase/Root/MsgStream.cxx" line="18"/>
      </memberdef>
      <memberdef kind="function" id="d5/dc5/namespaceAthena_1ab53c08c20f356acbe27f281521a734af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Athena::reportMessage</definition>
        <argsstring>(IMessageSvc *, const std::string &amp;, int, const std::string &amp;) __attribute__((weak))</argsstring>
        <name>reportMessage</name>
        <param>
          <type>IMessageSvc *</type>
        </param>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfBase/Root/MsgStream.cxx" line="19"/>
      </memberdef>
      <memberdef kind="function" id="d5/dc5/namespaceAthena_1ac2518ada4cb932b2323132a9e0ead3ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Athena::outputLevel</definition>
        <argsstring>(IMessageSvc *, const std::string &amp;) __attribute__((weak))</argsstring>
        <name>outputLevel</name>
        <param>
          <type>IMessageSvc *</type>
        </param>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfBase/Root/MsgStream.cxx" line="20"/>
      </memberdef>
      <memberdef kind="function" id="d5/dc5/namespaceAthena_1a7a0cb4f91cb2537857e01b6809d673f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Athena::setOutputLevel</definition>
        <argsstring>(IMessageSvc *, const std::string &amp;, int) __attribute__((weak))</argsstring>
        <name>setOutputLevel</name>
        <param>
          <type>IMessageSvc *</type>
        </param>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfBase/Root/MsgStream.cxx" line="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Some weak symbol referencing magic... These are declared in AthenaKernel/getMessageSvc.h and will be non-NULL in case the GaudiSvc/AthenaKernel shared libraries have been loaded. </para>    </detaileddescription>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/SealDebug.h" line="46"/>
  </compounddef>
</doxygen>
