<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d5/dd7/TPrimitiveAuxBranchManager_8cxx" kind="file">
    <compoundname>TPrimitiveAuxBranchManager.cxx</compoundname>
    <includes local="no">TBranch.h</includes>
    <includes refid="db/d7f/AuxTypeRegistry_8h" local="yes">AthContainers/AuxTypeRegistry.h</includes>
    <includes refid="d5/d4e/TPrimitiveAuxBranchManager_8h" local="yes">xAODRootAccess/tools/TPrimitiveAuxBranchManager.h</includes>
    <includes refid="d1/db1/THolder_8h" local="yes">xAODRootAccess/tools/THolder.h</includes>
    <incdepgraph>
      <node id="410973">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="410975">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="410938" relation="include">
        </childnode>
        <childnode refid="410940" relation="include">
        </childnode>
        <childnode refid="410947" relation="include">
        </childnode>
        <childnode refid="410948" relation="include">
        </childnode>
      </node>
      <node id="410976">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="410946">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="410948">
        <label>functional</label>
      </node>
      <node id="410944">
        <label>limits</label>
      </node>
      <node id="410971">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="410941">
        <label>iterator</label>
      </node>
      <node id="410958">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="410945" relation="include">
        </childnode>
        <childnode refid="410959" relation="include">
        </childnode>
      </node>
      <node id="410954">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="410955" relation="include">
        </childnode>
        <childnode refid="410942" relation="include">
        </childnode>
      </node>
      <node id="410960">
        <label>stdint.h</label>
      </node>
      <node id="410951">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="410936" relation="include">
        </childnode>
        <childnode refid="410950" relation="include">
        </childnode>
      </node>
      <node id="410937">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="410938" relation="include">
        </childnode>
        <childnode refid="410947" relation="include">
        </childnode>
        <childnode refid="410948" relation="include">
        </childnode>
      </node>
      <node id="410943">
        <label>cmath</label>
      </node>
      <node id="410974">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="410945">
        <label>string</label>
      </node>
      <node id="410949">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="410936" relation="include">
        </childnode>
        <childnode refid="410950" relation="include">
        </childnode>
      </node>
      <node id="410981">
        <label>map</label>
      </node>
      <node id="410966">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="410963">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="410972">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="410957">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="410958" relation="include">
        </childnode>
        <childnode refid="410944" relation="include">
        </childnode>
        <childnode refid="410960" relation="include">
        </childnode>
        <childnode refid="410961" relation="include">
        </childnode>
      </node>
      <node id="410935">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="410936" relation="include">
        </childnode>
        <childnode refid="410937" relation="include">
        </childnode>
      </node>
      <node id="410938">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="410939" relation="include">
        </childnode>
        <childnode refid="410940" relation="include">
        </childnode>
        <childnode refid="410941" relation="include">
        </childnode>
        <childnode refid="410936" relation="include">
        </childnode>
        <childnode refid="410942" relation="include">
        </childnode>
        <childnode refid="410943" relation="include">
        </childnode>
        <childnode refid="410944" relation="include">
        </childnode>
        <childnode refid="410945" relation="include">
        </childnode>
        <childnode refid="410946" relation="include">
        </childnode>
      </node>
      <node id="410950">
        <label>typeinfo</label>
      </node>
      <node id="410961">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="410959">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="410965">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="410934">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="410935" relation="include">
        </childnode>
        <childnode refid="410949" relation="include">
        </childnode>
        <childnode refid="410951" relation="include">
        </childnode>
        <childnode refid="410952" relation="include">
        </childnode>
        <childnode refid="410967" relation="include">
        </childnode>
        <childnode refid="410969" relation="include">
        </childnode>
        <childnode refid="410936" relation="include">
        </childnode>
        <childnode refid="410950" relation="include">
        </childnode>
        <childnode refid="410955" relation="include">
        </childnode>
        <childnode refid="410975" relation="include">
        </childnode>
        <childnode refid="410976" relation="include">
        </childnode>
      </node>
      <node id="410955">
        <label>vector</label>
      </node>
      <node id="410932">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/Root/TPrimitiveAuxBranchManager.cxx</label>
        <link refid="TPrimitiveAuxBranchManager.cxx"/>
        <childnode refid="410933" relation="include">
        </childnode>
        <childnode refid="410934" relation="include">
        </childnode>
        <childnode refid="410977" relation="include">
        </childnode>
        <childnode refid="410980" relation="include">
        </childnode>
      </node>
      <node id="410940">
        <label>utility</label>
      </node>
      <node id="410962">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="410970">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="410953">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="410979">
        <label>Rtypes.h</label>
      </node>
      <node id="410969">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="410970" relation="include">
        </childnode>
        <childnode refid="410971" relation="include">
        </childnode>
        <childnode refid="410972" relation="include">
        </childnode>
        <childnode refid="410973" relation="include">
        </childnode>
        <childnode refid="410974" relation="include">
        </childnode>
      </node>
      <node id="410942">
        <label>cstdlib</label>
      </node>
      <node id="410977">
        <label>xAODRootAccess/tools/TPrimitiveAuxBranchManager.h</label>
        <link refid="d5/d4e/TPrimitiveAuxBranchManager_8h_source"/>
        <childnode refid="410935" relation="include">
        </childnode>
        <childnode refid="410978" relation="include">
        </childnode>
      </node>
      <node id="410978">
        <label>TVirtualManager.h</label>
        <link refid="d5/d3d/TVirtualManager_8h_source"/>
        <childnode refid="410979" relation="include">
        </childnode>
      </node>
      <node id="410936">
        <label>cstddef</label>
      </node>
      <node id="410980">
        <label>xAODRootAccess/tools/THolder.h</label>
        <link refid="d1/db1/THolder_8h_source"/>
        <childnode refid="410981" relation="include">
        </childnode>
        <childnode refid="410979" relation="include">
        </childnode>
      </node>
      <node id="410933">
        <label>TBranch.h</label>
      </node>
      <node id="410952">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="410949" relation="include">
        </childnode>
        <childnode refid="410953" relation="include">
        </childnode>
        <childnode refid="410954" relation="include">
        </childnode>
        <childnode refid="410956" relation="include">
        </childnode>
        <childnode refid="410962" relation="include">
        </childnode>
        <childnode refid="410950" relation="include">
        </childnode>
        <childnode refid="410955" relation="include">
        </childnode>
        <childnode refid="410939" relation="include">
        </childnode>
        <childnode refid="410960" relation="include">
        </childnode>
        <childnode refid="410964" relation="include">
        </childnode>
        <childnode refid="410965" relation="include">
        </childnode>
        <childnode refid="410966" relation="include">
        </childnode>
      </node>
      <node id="410964">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="410968">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="410956">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="410953" relation="include">
        </childnode>
        <childnode refid="410957" relation="include">
        </childnode>
        <childnode refid="410962" relation="include">
        </childnode>
        <childnode refid="410955" relation="include">
        </childnode>
        <childnode refid="410963" relation="include">
        </childnode>
      </node>
      <node id="410939">
        <label>algorithm</label>
      </node>
      <node id="410947">
        <label>memory</label>
      </node>
      <node id="410967">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="410951" relation="include">
        </childnode>
        <childnode refid="410952" relation="include">
        </childnode>
        <childnode refid="410968" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="dd/d44/namespacexAOD">xAOD</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>$Id:<sp/>TPrimitiveAuxBranchManager.cxx<sp/>595278<sp/>2014-05-03<sp/>09:31:05Z<sp/>krasznaa<sp/>$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ROOT<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TBranch.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EDM<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="db/d7f/AuxTypeRegistry_8h" kindref="compound" tooltip="Handle mappings between names and auxid_t.">AthContainers/AuxTypeRegistry.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Local<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODRootAccess/tools/TPrimitiveAuxBranchManager.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODRootAccess/tools/THolder.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">xAOD<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><ref refid="d5/d8e/classxAOD_1_1TPrimitiveAuxBranchManager_1a27f2dd29e37dd4e9063ede4b7604fe2d" kindref="member" tooltip="Constructor getting hold of a possible branch.">TPrimitiveAuxBranchManager::TPrimitiveAuxBranchManager</ref>(<sp/><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">auxid_t</ref><sp/>auxid,</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::TBranch*<sp/>br,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>THolder*<sp/>holder<sp/>)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_branch(<sp/>br<sp/>),<sp/>m_holder(<sp/>holder<sp/>),<sp/>m_entry(<sp/>-1<sp/>),</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_isSet(<sp/>kTRUE<sp/>),<sp/>m_auxId(<sp/>auxid<sp/>),<sp/>m_vector(<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><ref refid="d5/d8e/classxAOD_1_1TPrimitiveAuxBranchManager_1a27f2dd29e37dd4e9063ede4b7604fe2d" kindref="member" tooltip="Constructor getting hold of a possible branch.">TPrimitiveAuxBranchManager::</ref></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><ref refid="d5/d8e/classxAOD_1_1TPrimitiveAuxBranchManager_1a27f2dd29e37dd4e9063ede4b7604fe2d" kindref="member" tooltip="Constructor getting hold of a possible branch.">   TPrimitiveAuxBranchManager</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TPrimitiveAuxBranchManager&amp;<sp/>parent<sp/>)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>TVirtualManager(),<sp/>m_branch(<sp/>parent.m_branch<sp/>),<sp/>m_holder(<sp/>0<sp/>),</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_entry(<sp/>parent.m_entry<sp/>),<sp/>m_isSet(<sp/>parent.m_isSet<sp/>),</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_auxId(<sp/>parent.m_auxId<sp/>),<sp/>m_vector(<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>parent.m_holder<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_holder<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>THolder(<sp/>*parent.m_holder<sp/>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>parent.m_vector<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_vector<sp/>=<sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry_1ab22c247525e0883b46012f14b6f5a048" kindref="member" tooltip="Return the singleton registry instance.">SG::AuxTypeRegistry::instance</ref>().makeVector(<sp/>m_auxId,<sp/>0,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_vector-&gt;resize(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><ref refid="d5/d8e/classxAOD_1_1TPrimitiveAuxBranchManager_1a554fa0555ae7b098d3e6f1f575ef2e72" kindref="member" tooltip="Destructor.">TPrimitiveAuxBranchManager::~TPrimitiveAuxBranchManager</ref>()<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_holder<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_holder;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_vector<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_vector;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/>TPrimitiveAuxBranchManager&amp;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><ref refid="d5/d8e/classxAOD_1_1TPrimitiveAuxBranchManager_1aaad280eaeaa75d58d1063e40ba73e09a" kindref="member" tooltip="Assignment operator.">TPrimitiveAuxBranchManager::</ref></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><ref refid="d5/d8e/classxAOD_1_1TPrimitiveAuxBranchManager_1aaad280eaeaa75d58d1063e40ba73e09a" kindref="member" tooltip="Assignment operator.">   operator=</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TPrimitiveAuxBranchManager&amp;<sp/>rhs<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>anything<sp/>needs<sp/>to<sp/>be<sp/>done:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>&amp;rhs<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_branch<sp/>=<sp/>rhs.m_branch;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_holder<sp/>)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_holder;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>rhs.m_holder<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_holder<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>THolder(<sp/>*rhs.m_holder<sp/>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_holder<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_entry<sp/>=<sp/>rhs.m_entry;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_isSet<sp/>=<sp/>rhs.m_isSet;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_auxId<sp/>=<sp/>rhs.m_auxId;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_vector<sp/>)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_vector;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>rhs.m_vector<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_vector<sp/>=<sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry_1ab22c247525e0883b46012f14b6f5a048" kindref="member" tooltip="Return the singleton registry instance.">SG::AuxTypeRegistry::instance</ref>().makeVector(<sp/>m_auxId,<sp/>0,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_vector-&gt;resize(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_vector<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>this<sp/>same<sp/>object:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/>::TBranch*<sp/><ref refid="d5/d8e/classxAOD_1_1TPrimitiveAuxBranchManager_1a0845c192ecf98350faf3646bcf2a8fda" kindref="member" tooltip="Accessor to the branch.">TPrimitiveAuxBranchManager::branch</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_branch;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/>::TBranch**<sp/><ref refid="d5/d8e/classxAOD_1_1TPrimitiveAuxBranchManager_1a98da6eeb8ce268242441b047bfc06b37" kindref="member" tooltip="Pointer to the branch&amp;#39;s pointer.">TPrimitiveAuxBranchManager::branchPtr</ref>()<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;m_branch;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>THolder*<sp/><ref refid="d5/d8e/classxAOD_1_1TPrimitiveAuxBranchManager_1a32921344323ef8e58b3967f4a9a08946" kindref="member" tooltip="Accessor to the Holder object (constant version).">TPrimitiveAuxBranchManager::holder</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_holder;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/>THolder*<sp/><ref refid="d5/d8e/classxAOD_1_1TPrimitiveAuxBranchManager_1a32921344323ef8e58b3967f4a9a08946" kindref="member" tooltip="Accessor to the Holder object (constant version).">TPrimitiveAuxBranchManager::holder</ref>()<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_holder;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/>::Int_t<sp/><ref refid="d5/d8e/classxAOD_1_1TPrimitiveAuxBranchManager_1acd690e33eee8a17ceecbb571d090d029" kindref="member" tooltip="Function for updating the object in memory if needed.">TPrimitiveAuxBranchManager::getEntry</ref>(<sp/>::Long64_t<sp/>entry,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Int_t<sp/>getall<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>anything<sp/>needs<sp/>to<sp/>be<sp/>done:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>entry<sp/>==<sp/>m_entry<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remember<sp/>which<sp/>entry<sp/>we&apos;re<sp/>loading<sp/>at<sp/>the<sp/>moment:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_entry<sp/>=<sp/>entry;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>the<sp/>entry:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_branch-&gt;GetEntry(<sp/>entry,<sp/>getall<sp/>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="d5/d8e/classxAOD_1_1TPrimitiveAuxBranchManager_1aa5575ea6e95de15f14e85a5de8888db3" kindref="member" tooltip="Function getting a pointer to the object being handled.">TPrimitiveAuxBranchManager::object</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_holder-&gt;get();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/d8e/classxAOD_1_1TPrimitiveAuxBranchManager_1a11c15b4a26511454689daeb342d17321" kindref="member" tooltip="Function replacing the object being handled.">TPrimitiveAuxBranchManager::setObject</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>obj<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>the<sp/>holder<sp/>forget<sp/>about<sp/>the<sp/>previous<sp/>variable,<sp/>and<sp/>get<sp/>hold</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>this<sp/>new<sp/>one:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_holder-&gt;setOwner(<sp/>kFALSE<sp/>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_holder-&gt;set(<sp/>obj<sp/>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>address<sp/>of<sp/>the<sp/>branch:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_branch-&gt;SetAddress(<sp/>m_holder-&gt;get()<sp/>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>are<sp/>now<sp/>&quot;set&quot;:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_isSet<sp/>=<sp/>kTRUE;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/>::Bool_t<sp/><ref refid="d5/d8e/classxAOD_1_1TPrimitiveAuxBranchManager_1a2a147dc71c81f466fcf577e11f47cf45" kindref="member" tooltip="Check if the object was set for the current event.">TPrimitiveAuxBranchManager::isSet</ref>(<sp/>::Bool_t<sp/>forceSet<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>can&apos;t<sp/>use<sp/>default<sp/>objects,<sp/>let&apos;s<sp/>just<sp/>return<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>actual<sp/>state<sp/>that<sp/>the<sp/>object<sp/>is<sp/>in:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>forceSet<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_isSet;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>already<sp/>have<sp/>it<sp/>set,<sp/>let&apos;s<sp/>stop<sp/>here:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_isSet<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kTRUE;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise<sp/>let&apos;s<sp/>create<sp/>a<sp/>default<sp/>object:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_isSet<sp/>=<sp/>kTRUE;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>m_vector<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_vector<sp/>=<sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry_1ab22c247525e0883b46012f14b6f5a048" kindref="member" tooltip="Return the singleton registry instance.">SG::AuxTypeRegistry::instance</ref>().makeVector(<sp/>m_auxId,<sp/>0,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_vector-&gt;resize(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...and<sp/>use<sp/>it<sp/>to<sp/>fill<sp/>the<sp/>current<sp/>event:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_holder-&gt;setOwner(<sp/>kFALSE<sp/>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_holder-&gt;set(<sp/>m_vector-&gt;toPtr()<sp/>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>update<sp/>the<sp/>branch<sp/>to<sp/>use<sp/>this<sp/>address:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_branch-&gt;SetAddress(<sp/>m_holder-&gt;get()<sp/>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>are<sp/>now<sp/>&quot;set&quot;:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kTRUE;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/d8e/classxAOD_1_1TPrimitiveAuxBranchManager_1a84eb0b82d9445b738ab2df847ddad3b1" kindref="member" tooltip="Reset the object at the end of processing of an event.">TPrimitiveAuxBranchManager::reset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_isSet<sp/>=<sp/>kFALSE;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>xAOD</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/Root/TPrimitiveAuxBranchManager.cxx"/>
  </compounddef>
</doxygen>
