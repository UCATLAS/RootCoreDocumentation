<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d5/d24/PrescaleSet_8cxx" kind="file">
    <compoundname>PrescaleSet.cxx</compoundname>
    <includes refid="d9/d6a/PrescaleSet_8h" local="yes">TrigConfL1Data/PrescaleSet.h</includes>
    <includes refid="dd/da2/L1PSNumber_8h" local="yes">TrigConfL1Data/L1PSNumber.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">iomanip</includes>
    <includes local="no">math.h</includes>
    <incdepgraph>
      <node id="310288">
        <label>TrigConfL1Data/L1DataBaseclass.h</label>
        <link refid="d8/db1/L1DataBaseclass_8h_source"/>
        <childnode refid="310289" relation="include">
        </childnode>
      </node>
      <node id="310294">
        <label>iomanip</label>
      </node>
      <node id="310291">
        <label>stdint.h</label>
      </node>
      <node id="310287">
        <label>string</label>
      </node>
      <node id="310289">
        <label>TrigConfL1Data/TrigConfData.h</label>
        <link refid="da/da8/TrigConfData_8h_source"/>
        <childnode refid="310290" relation="include">
        </childnode>
        <childnode refid="310287" relation="include">
        </childnode>
      </node>
      <node id="310286">
        <label>vector</label>
      </node>
      <node id="310295">
        <label>math.h</label>
      </node>
      <node id="310285">
        <label>TrigConfL1Data/PrescaleSet.h</label>
        <link refid="d9/d6a/PrescaleSet_8h_source"/>
        <childnode refid="310286" relation="include">
        </childnode>
        <childnode refid="310287" relation="include">
        </childnode>
        <childnode refid="310288" relation="include">
        </childnode>
        <childnode refid="310291" relation="include">
        </childnode>
      </node>
      <node id="310290">
        <label>iosfwd</label>
      </node>
      <node id="310293">
        <label>iostream</label>
      </node>
      <node id="310284">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/Root/PrescaleSet.cxx</label>
        <link refid="PrescaleSet.cxx"/>
        <childnode refid="310285" relation="include">
        </childnode>
        <childnode refid="310292" relation="include">
        </childnode>
        <childnode refid="310293" relation="include">
        </childnode>
        <childnode refid="310294" relation="include">
        </childnode>
        <childnode refid="310295" relation="include">
        </childnode>
      </node>
      <node id="310292">
        <label>TrigConfL1Data/L1PSNumber.h</label>
        <link refid="dd/da2/L1PSNumber_8h_source"/>
        <childnode refid="310290" relation="include">
        </childnode>
        <childnode refid="310287" relation="include">
        </childnode>
        <childnode refid="310291" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigConfL1Data/PrescaleSet.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigConfL1Data/L1PSNumber.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">TrigConf;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//const<sp/>unsigned<sp/>int<sp/>PrescaleSet::N_PRESCALES<sp/>=<sp/>256;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>PrescaleSet::maxPrescaleCut<sp/>=<sp/>0xFFFFFF;<sp/></highlight><highlight class="comment">//2**24<sp/>-<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal">int32_t</highlight></codeline>
<codeline lineno="29"><highlight class="normal">PrescaleSet::getCutFromPrescale(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prescale)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/>int32_t<sp/>sign<sp/>=<sp/>prescale&lt;0<sp/>?<sp/>-1<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>uprescale<sp/>=<sp/>fabs(prescale);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sign<sp/>*<sp/>(<sp/>0x1000000<sp/>-<sp/>int32_t(0xFFFFFF/uprescale));</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><ref refid="d0/d41/classTrigConf_1_1PrescaleSet_1a79e52bdfd3aee508c7daf272d20f4d82" kindref="member">PrescaleSet::getPrescaleFromCut</ref>(int32_t<sp/>cut)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sign<sp/>=<sp/>cut&lt;0<sp/>?<sp/>-1<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/>uint32_t<sp/><sp/>ucut<sp/>=<sp/>abs(cut);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(sign<sp/>*<sp/>0xFFFFFF<sp/>)<sp/>/<sp/>(<sp/>0x1000000<sp/>-<sp/>ucut<sp/>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">TrigConf::PrescaleSet::PrescaleSet()<sp/>:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><ref refid="d2/db1/classTrigConf_1_1L1DataBaseclass" kindref="compound">L1DataBaseclass</ref>(),</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/>m_null(true),</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/>m_newPrescales(true),</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/>m_Type(</highlight><highlight class="stringliteral">&quot;Physics&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/>m_Partition(0),</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/>m_Prescales(),</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/>m_Prescales_ctp(),</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/>m_Prescales_float(),</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/>m_Cuts()</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">TrigConf::PrescaleSet::~PrescaleSet()</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TrigConf::PrescaleSet::reset()<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>x:<sp/>m_Prescales)<sp/>x=-1;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>x:<sp/>m_Prescales_ctp)<sp/>x=-1;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>x:<sp/>m_Prescales_float)<sp/>x=-1;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>x:<sp/>m_Cuts)<sp/>x=-maxPrescaleCut;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/>m_null<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">TrigConf::PrescaleSet::resize(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/>m_Prescales.resize(size,-1);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/>m_Prescales_ctp.resize(size,-1);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/>m_Prescales_float.resize(size,-1);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/>m_Cuts.resize(size,2&lt;&lt;10);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//m_Cuts.resize(size,-maxPrescaleCut);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">TrigConf::PrescaleSet::setCuts(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int32_t&gt;&amp;<sp/>cuts)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ctpid<sp/>=<sp/>0;<sp/>ctpid<sp/>&lt;<sp/>cuts.size();<sp/>++ctpid<sp/>)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setCut(ctpid,<sp/>cuts[ctpid]);</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">TrigConf::PrescaleSet::setCut(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ctpid,<sp/>int32_t<sp/>cut)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/>m_Cuts[ctpid]<sp/>=<sp/>cut;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ps_f<sp/>=<sp/>getPrescaleFromCut(cut);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/>m_Prescales_float[ctpid]<sp/>=<sp/>ps_f;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sign<sp/>=<sp/>ps_f&lt;0<sp/>?<sp/>-1<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ps<sp/>=<sp/>sign<sp/>*<sp/>int(fabs(ps_f)+0.5);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/>m_Prescales[ctpid]<sp/>=<sp/>ps;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/>m_null<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><ref refid="d0/d41/classTrigConf_1_1PrescaleSet_1a6b3f09ef1045a70dcdc778444847d576" kindref="member">TrigConf::PrescaleSet::setPrescales</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int64_t&gt;&amp;<sp/>prescales)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/>m_Prescales_ctp<sp/>=<sp/>prescales;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><ref refid="d2/d78/classTrigConf_1_1L1PSNumber" kindref="compound">TrigConf::L1PSNumber</ref><sp/>l1ps;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i(0);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ps:<sp/>m_Prescales_ctp)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l1ps<sp/>=<sp/><ref refid="d2/d78/classTrigConf_1_1L1PSNumber" kindref="compound">TrigConf::L1PSNumber</ref>(ps);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Prescales[i]<sp/>=<sp/>l1ps.getInt32();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Prescales_float[i]<sp/>=<sp/>l1ps.getFloatPrescale();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/>m_null<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><ref refid="d0/d41/classTrigConf_1_1PrescaleSet_1a6b3f09ef1045a70dcdc778444847d576" kindref="member">TrigConf::PrescaleSet::setPrescales</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>p[],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><ref refid="d2/d78/classTrigConf_1_1L1PSNumber" kindref="compound">TrigConf::L1PSNumber</ref><sp/>l1ps;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Prescales_ctp[i]<sp/>=<sp/>p[i];</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l1ps<sp/>=<sp/><ref refid="d2/d78/classTrigConf_1_1L1PSNumber" kindref="compound">TrigConf::L1PSNumber</ref>(p[i]);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Prescales[i]<sp/>=<sp/>l1ps.getInt32();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Prescales_float[i]<sp/>=<sp/>l1ps.getFloatPrescale();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/>m_null<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/d41/classTrigConf_1_1PrescaleSet_1a6b3f09ef1045a70dcdc778444847d576" kindref="member">TrigConf::PrescaleSet::setPrescales</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p[],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><ref refid="d2/d78/classTrigConf_1_1L1PSNumber" kindref="compound">TrigConf::L1PSNumber</ref><sp/>l1ps;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Prescales_ctp[i]<sp/>=<sp/>(int64_t)<sp/>p[i];</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l1ps<sp/>=<sp/><ref refid="d2/d78/classTrigConf_1_1L1PSNumber" kindref="compound">TrigConf::L1PSNumber</ref>((int64_t)p[i]);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Prescales[i]<sp/>=<sp/>l1ps.getInt32();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Prescales_float[i]<sp/>=<sp/>l1ps.getFloatPrescale();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/>m_null<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><ref refid="d0/d41/classTrigConf_1_1PrescaleSet_1a22a91f3a39e25e224d74bfad7d7d1a93" kindref="member">TrigConf::PrescaleSet::setPrescale</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num,<sp/>int64_t<sp/>prescaleValue)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><ref refid="d2/d78/classTrigConf_1_1L1PSNumber" kindref="compound">TrigConf::L1PSNumber</ref><sp/>l1ps<sp/>=<sp/><ref refid="d2/d78/classTrigConf_1_1L1PSNumber" kindref="compound">TrigConf::L1PSNumber</ref>(prescaleValue);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/>m_Prescales[num]<sp/>=<sp/>l1ps.getInt32();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/>m_Prescales_ctp[num]<sp/>=<sp/>prescaleValue;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/>m_Prescales_float[num]<sp/>=<sp/>l1ps.getFloatPrescale();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/>m_null<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><ref refid="d0/d41/classTrigConf_1_1PrescaleSet_1a22a91f3a39e25e224d74bfad7d7d1a93" kindref="member">TrigConf::PrescaleSet::setPrescale</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prescaleValue)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/>m_Prescales_ctp[num]<sp/>=<sp/>(int64_t)<sp/>prescaleValue;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><ref refid="d2/d78/classTrigConf_1_1L1PSNumber" kindref="compound">TrigConf::L1PSNumber</ref><sp/>l1ps<sp/>=<sp/><ref refid="d2/d78/classTrigConf_1_1L1PSNumber" kindref="compound">TrigConf::L1PSNumber</ref>((int64_t)prescaleValue);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/>m_Prescales[num]<sp/>=<sp/>l1ps.getInt32();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/>m_Prescales_float[num]<sp/>=<sp/>l1ps.getFloatPrescale();<sp/><sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/>m_null<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><ref refid="d0/d41/classTrigConf_1_1PrescaleSet_1a22a91f3a39e25e224d74bfad7d7d1a93" kindref="member">TrigConf::PrescaleSet::setPrescale</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>prescaleValue)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>int32_t<sp/>cut<sp/>=<sp/>getCutFromPrescale(prescaleValue);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>m_Prescales[num]<sp/>=<sp/>cut;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>m_Prescales_ctp[num]<sp/>=<sp/>cut;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>m_Prescales_float[num]<sp/>=<sp/>prescaleValue;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>m_null<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal">TrigConf::PrescaleSet::print(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>indent,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>detail)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(detail&gt;=1)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PrescaleSet<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printNameIdV(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(detail&gt;=3)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i(0);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ps:<sp/>m_Prescales_float)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctpid=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i++<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>prescale=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ps<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><ref refid="d0/d41/classTrigConf_1_1PrescaleSet_1a417a88d51dd031f36d20049ed2950674" kindref="member">TrigConf::PrescaleSet::writeXML</ref>(std::ostream<sp/>&amp;<sp/>xmlfile,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indentLevel,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indentWidth)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><ref refid="d2/d78/classTrigConf_1_1L1PSNumber" kindref="compound">L1PSNumber</ref><sp/>psOut;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/>indent(xmlfile,<sp/>indentLevel,<sp/>indentWidth)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;PrescaleSet&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>name=\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="d6/db2/structTrigConf_1_1name" kindref="compound">name</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>type=\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>type()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>menuPartition=\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>partition()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&gt;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newPrescaleStyle())<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ctpid(0);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int32_t<sp/>cut:<sp/>m_Cuts)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indent(xmlfile,<sp/>indentLevel<sp/>+<sp/>1,<sp/>indentWidth)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;Prescale<sp/>ctpid=\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ctpid++</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>cut=\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(cut&lt;0?</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>hex<sp/>&lt;&lt;<sp/>setfill(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>setw(6)<sp/>&lt;&lt;<sp/>abs(cut)<sp/>&lt;&lt;<sp/>setfill(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>dec</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>value=\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>getPrescaleFromCut(cut)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;/&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i(0);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>ps:<sp/>m_Prescales_ctp)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psOut<sp/>=<sp/><ref refid="d2/d78/classTrigConf_1_1L1PSNumber" kindref="compound">L1PSNumber</ref>(ps);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indent(xmlfile,<sp/>indentLevel<sp/>+<sp/>1,<sp/>indentWidth)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;Prescale<sp/>ctpid=\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i++<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>ps=\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>psOut.<ref refid="d2/d78/classTrigConf_1_1L1PSNumber_1a06bd86a880de690d960f82720fd82b49" kindref="member">write</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;/&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/>indent(xmlfile,<sp/>indentLevel,<sp/>indentWidth)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;/PrescaleSet&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/Root/PrescaleSet.cxx"/>
  </compounddef>
</doxygen>
