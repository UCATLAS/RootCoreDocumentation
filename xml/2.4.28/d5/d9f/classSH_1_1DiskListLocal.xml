<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d5/d9f/classSH_1_1DiskListLocal" kind="class" prot="public">
    <compoundname>SH::DiskListLocal</compoundname>
    <basecompoundref refid="d1/d5b/classSH_1_1DiskList" prot="public" virt="non-virtual">SH::DiskList</basecompoundref>
    <includes refid="d8/d4f/DiskListLocal_8h" local="no">DiskListLocal.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d5/d9f/classSH_1_1DiskListLocal_1a2747f82f6f19b2798d38426590379169" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string SH::DiskListLocal::m_dir</definition>
        <argsstring></argsstring>
        <name>m_dir</name>
        <briefdescription>
<para>the directory we are reading </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListLocal.h" line="105" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListLocal.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d5/d9f/classSH_1_1DiskListLocal_1a1446809918937d328e5127ae50f32843" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string SH::DiskListLocal::m_prefix</definition>
        <argsstring></argsstring>
        <name>m_prefix</name>
        <briefdescription>
<para>the directory from with to read actual files </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListLocal.h" line="109" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListLocal.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d5/d9f/classSH_1_1DiskListLocal_1ab12da444975a119290f5972f74b70dcf" prot="private" static="no" mutable="no">
        <type>void *</type>
        <definition>void* SH::DiskListLocal::m_dirp</definition>
        <argsstring></argsstring>
        <name>m_dirp</name>
        <briefdescription>
<para>the directory pointer used </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListLocal.h" line="113" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListLocal.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d5/d9f/classSH_1_1DiskListLocal_1ae9a81cdb6f06df07323c4382985edf05" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string SH::DiskListLocal::m_file</definition>
        <argsstring></argsstring>
        <name>m_file</name>
        <briefdescription>
<para>the file we last fetched </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListLocal.h" line="117" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListLocal.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d5/d9f/classSH_1_1DiskListLocal_1a737a46c21387326936cd743219df5650" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SH::DiskListLocal::testInvariant</definition>
        <argsstring>() const </argsstring>
        <name>testInvariant</name>
        <reimplements refid="d1/d5b/classSH_1_1DiskList_1afe1f3b7accb6b9f2b3536956daf72d0f">testInvariant</reimplements>
        <briefdescription>
<para>test the invariant of this object </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Guarantee</title><para>no-fail </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListLocal.h" line="33" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/DiskListLocal.cxx" bodystart="28" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="d5/d9f/classSH_1_1DiskListLocal_1ac19608705488724e024f41c896e6d6f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SH::DiskListLocal::DiskListLocal</definition>
        <argsstring>(const std::string &amp;val_dir)</argsstring>
        <name>DiskListLocal</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>val_dir</declname>
        </param>
        <briefdescription>
<para>make the listing for the given directory </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val_dir</parametername>
</parameternamelist>
<parameterdescription>
<para>the directory to list </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Guarantee</title><para>strong<linebreak/>
 </para></simplesect>
<simplesect kind="par"><title>Failures</title><para>out of memory II </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListLocal.h" line="44" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/DiskListLocal.cxx" bodystart="36" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="d5/d9f/classSH_1_1DiskListLocal_1a8748f85568316c2fca507020e75dee02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SH::DiskListLocal::DiskListLocal</definition>
        <argsstring>(const std::string &amp;val_dir, const std::string &amp;val_prefix)</argsstring>
        <name>DiskListLocal</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>val_dir</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val_prefix</declname>
        </param>
        <briefdescription>
<para>make the listing for the given directory, but replacing the directory with prefix for the path </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val_dir</parametername>
</parameternamelist>
<parameterdescription>
<para>the directory to list </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val_prefix</parametername>
</parameternamelist>
<parameterdescription>
<para>the prefix with which val_dir will be replaced in the reported paths </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Guarantee</title><para>strong<linebreak/>
 </para></simplesect>
<simplesect kind="par"><title>Failures</title><para>out of memory II<linebreak/>
 </para></simplesect>
<simplesect kind="par"><title>Rationale</title><para>this mechanism is meant to allow scanning file servers using one protocol, but then accessing them using another </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListLocal.h" line="62" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/DiskListLocal.cxx" bodystart="45" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="d5/d9f/classSH_1_1DiskListLocal_1abd93b732186baa529bb6a6c543adb34c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>SH::DiskListLocal::~DiskListLocal</definition>
        <argsstring>()</argsstring>
        <name>~DiskListLocal</name>
        <briefdescription>
<para>standard destructor </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Guarantee</title><para>no-fail </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListLocal.h" line="70" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/DiskListLocal.cxx" bodystart="54" bodyend="63"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="d5/d9f/classSH_1_1DiskListLocal_1afef9187960ea9cf9ce72267cfa0f77a2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool SH::DiskListLocal::getNext</definition>
        <argsstring>()</argsstring>
        <name>getNext</name>
        <reimplements refid="d1/d5b/classSH_1_1DiskList_1abdeb673c1a9e9c0db6719d888247130f">getNext</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><copydoc link="DiskList::getNext()"><para><copydoc link="next()"><para>get the next list entry </para><para><simplesect kind="return"><para>whether we found another entry </para></simplesect>
<simplesect kind="par"><title>Guarantee</title><para>basic </para></simplesect>
<simplesect kind="par"><title>Failures</title><para>i/o errors </para></simplesect>
</para></copydoc>
 <simplesect kind="par"><title>Rationale</title><para>the virtual part of <ref refid="d1/d5b/classSH_1_1DiskList_1ac7620eb6d2d21d8533fe4edd66f7680c" kindref="member">DiskList::next()</ref> </para></simplesect>
</para></copydoc>
 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListLocal.h" line="80" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/DiskListLocal.cxx" bodystart="68" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="d5/d9f/classSH_1_1DiskListLocal_1a6ae7c8fbc603604a0b1d226b0a13e75b" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string SH::DiskListLocal::getPath</definition>
        <argsstring>() const </argsstring>
        <name>getPath</name>
        <reimplements refid="d1/d5b/classSH_1_1DiskList_1abdd1551b406aad8a16ad3a06e5b50dad">getPath</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><copydoc link="DiskList::getPath()"><para><copydoc link="path()"><para>the path for the current entry. </para><para><simplesect kind="return"><para>the path for the current entry </para></simplesect>
<simplesect kind="pre"><para>(soft) <ref refid="d1/d5b/classSH_1_1DiskList_1ac7620eb6d2d21d8533fe4edd66f7680c" kindref="member">next()</ref> has been called successfully </para></simplesect>
<simplesect kind="par"><title>Guarantee</title><para>strong failures: out of memory III </para></simplesect>
</para></copydoc>
 <simplesect kind="par"><title>Rationale</title><para>the virtual part of <ref refid="d1/d5b/classSH_1_1DiskList_1a260a5bf756383588dadee7b6dfe67138" kindref="member">DiskList::path()</ref> </para></simplesect>
</para></copydoc>
 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListLocal.h" line="85" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/DiskListLocal.cxx" bodystart="98" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="d5/d9f/classSH_1_1DiskListLocal_1a8fff56e343209d845034d963ce86061a" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d1/d5b/classSH_1_1DiskList" kindref="compound">DiskList</ref> *</type>
        <definition>DiskList * SH::DiskListLocal::doOpenDir</definition>
        <argsstring>() const </argsstring>
        <name>doOpenDir</name>
        <reimplements refid="d1/d5b/classSH_1_1DiskList_1a93f295d8f42dbdab1dbb8a7e03004a32">doOpenDir</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><copydoc link="DiskList::doOpenDir()"><para><copydoc link="openDir()"><para>make a new list object for the sub-directory </para><para><simplesect kind="return"><para>a new list object for the sub-directory, or <computeroutput>NULL</computeroutput> if it is not a directory </para></simplesect>
<simplesect kind="pre"><para>(soft) <ref refid="d1/d5b/classSH_1_1DiskList_1ac7620eb6d2d21d8533fe4edd66f7680c" kindref="member">next()</ref> has been called successfully </para></simplesect>
<simplesect kind="par"><title>Guarantee</title><para>strong </para></simplesect>
<simplesect kind="par"><title>Failures</title><para>out of memory III </para></simplesect>
</para></copydoc>
 <simplesect kind="par"><title>Rationale</title><para>the virtual part of <ref refid="d1/d5b/classSH_1_1DiskList_1af847547a93cff6e6e27c75c8a84dd2f3" kindref="member">DiskList::openDir()</ref> </para></simplesect>
</para></copydoc>
 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListLocal.h" line="90" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/DiskListLocal.cxx" bodystart="107" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="d5/d9f/classSH_1_1DiskListLocal_1aa784637a907de6816058ddc8f8e57d89" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string SH::DiskListLocal::getDirname</definition>
        <argsstring>() const </argsstring>
        <name>getDirname</name>
        <reimplements refid="d1/d5b/classSH_1_1DiskList_1a55ab282c7345c5c4e6acafa9b5972fd6">getDirname</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><copydoc link="DiskList::getDirname()"><para><copydoc link="dirname()"><para>the base path for the directory listed </para><para><simplesect kind="par"><title>Guarantee</title><para>strong </para></simplesect>
<simplesect kind="par"><title>Failures</title><para>out of memory II </para></simplesect>
</para></copydoc>
 <simplesect kind="par"><title>Rationale</title><para>the virtual part of <ref refid="d1/d5b/classSH_1_1DiskList_1a663385469f51471d4cd3053f7671f741" kindref="member">DiskList::dirname()</ref> </para></simplesect>
</para></copydoc>
 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListLocal.h" line="95" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/DiskListLocal.cxx" bodystart="122" bodyend="126"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>a <ref refid="d1/d5b/classSH_1_1DiskList" kindref="compound">DiskList</ref> implementation for local directories </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5131">
        <label>SH::DiskList</label>
        <link refid="d1/d5b/classSH_1_1DiskList"/>
      </node>
      <node id="5130">
        <label>SH::DiskListLocal</label>
        <link refid="d5/d9f/classSH_1_1DiskListLocal"/>
        <childnode refid="5131" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5133">
        <label>SH::DiskList</label>
        <link refid="d1/d5b/classSH_1_1DiskList"/>
      </node>
      <node id="5135">
        <label>string</label>
      </node>
      <node id="5132">
        <label>SH::DiskListLocal</label>
        <link refid="d5/d9f/classSH_1_1DiskListLocal"/>
        <childnode refid="5133" relation="public-inheritance">
        </childnode>
        <childnode refid="5134" relation="usage">
          <edgelabel>m_dirp</edgelabel>
        </childnode>
        <childnode refid="5135" relation="usage">
          <edgelabel>m_dir</edgelabel>
          <edgelabel>m_prefix</edgelabel>
          <edgelabel>m_file</edgelabel>
        </childnode>
      </node>
      <node id="5134">
        <label>void</label>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListLocal.h" line="23" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/DiskListLocal.h" bodystart="22" bodyend="118"/>
    <listofallmembers>
      <member refid="d1/d5b/classSH_1_1DiskList_1a663385469f51471d4cd3053f7671f741" prot="public" virt="non-virtual"><scope>SH::DiskListLocal</scope><name>dirname</name></member>
      <member refid="d1/d5b/classSH_1_1DiskList_1ae4be65474961b630fec4158f7ce3185e" prot="protected" virt="non-virtual"><scope>SH::DiskListLocal</scope><name>DiskList</name></member>
      <member refid="d5/d9f/classSH_1_1DiskListLocal_1ac19608705488724e024f41c896e6d6f3" prot="public" virt="non-virtual"><scope>SH::DiskListLocal</scope><name>DiskListLocal</name></member>
      <member refid="d5/d9f/classSH_1_1DiskListLocal_1a8748f85568316c2fca507020e75dee02" prot="public" virt="non-virtual"><scope>SH::DiskListLocal</scope><name>DiskListLocal</name></member>
      <member refid="d5/d9f/classSH_1_1DiskListLocal_1a8fff56e343209d845034d963ce86061a" prot="protected" virt="virtual"><scope>SH::DiskListLocal</scope><name>doOpenDir</name></member>
      <member refid="d1/d5b/classSH_1_1DiskList_1a17d746155a8cacb20f97fd34bd11e427" prot="public" virt="non-virtual"><scope>SH::DiskListLocal</scope><name>fileName</name></member>
      <member refid="d5/d9f/classSH_1_1DiskListLocal_1aa784637a907de6816058ddc8f8e57d89" prot="protected" virt="virtual"><scope>SH::DiskListLocal</scope><name>getDirname</name></member>
      <member refid="d5/d9f/classSH_1_1DiskListLocal_1afef9187960ea9cf9ce72267cfa0f77a2" prot="protected" virt="virtual"><scope>SH::DiskListLocal</scope><name>getNext</name></member>
      <member refid="d5/d9f/classSH_1_1DiskListLocal_1a6ae7c8fbc603604a0b1d226b0a13e75b" prot="protected" virt="virtual"><scope>SH::DiskListLocal</scope><name>getPath</name></member>
      <member refid="d5/d9f/classSH_1_1DiskListLocal_1a2747f82f6f19b2798d38426590379169" prot="private" virt="non-virtual"><scope>SH::DiskListLocal</scope><name>m_dir</name></member>
      <member refid="d5/d9f/classSH_1_1DiskListLocal_1ab12da444975a119290f5972f74b70dcf" prot="private" virt="non-virtual"><scope>SH::DiskListLocal</scope><name>m_dirp</name></member>
      <member refid="d5/d9f/classSH_1_1DiskListLocal_1ae9a81cdb6f06df07323c4382985edf05" prot="private" virt="non-virtual"><scope>SH::DiskListLocal</scope><name>m_file</name></member>
      <member refid="d5/d9f/classSH_1_1DiskListLocal_1a1446809918937d328e5127ae50f32843" prot="private" virt="non-virtual"><scope>SH::DiskListLocal</scope><name>m_prefix</name></member>
      <member refid="d1/d5b/classSH_1_1DiskList_1ac7620eb6d2d21d8533fe4edd66f7680c" prot="public" virt="non-virtual"><scope>SH::DiskListLocal</scope><name>next</name></member>
      <member refid="d1/d5b/classSH_1_1DiskList_1af847547a93cff6e6e27c75c8a84dd2f3" prot="public" virt="non-virtual"><scope>SH::DiskListLocal</scope><name>openDir</name></member>
      <member refid="d1/d5b/classSH_1_1DiskList_1a260a5bf756383588dadee7b6dfe67138" prot="public" virt="non-virtual"><scope>SH::DiskListLocal</scope><name>path</name></member>
      <member refid="d5/d9f/classSH_1_1DiskListLocal_1a737a46c21387326936cd743219df5650" prot="public" virt="non-virtual"><scope>SH::DiskListLocal</scope><name>testInvariant</name></member>
      <member refid="d1/d5b/classSH_1_1DiskList_1aba03cd19b877c25e63b78c5fd27da7c5" prot="public" virt="virtual"><scope>SH::DiskListLocal</scope><name>~DiskList</name></member>
      <member refid="d5/d9f/classSH_1_1DiskListLocal_1abd93b732186baa529bb6a6c543adb34c" prot="public" virt="virtual"><scope>SH::DiskListLocal</scope><name>~DiskListLocal</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
