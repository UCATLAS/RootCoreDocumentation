<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d5/d22/classxAOD_1_1BunchConf__v1" kind="class" prot="public">
    <compoundname>xAOD::BunchConf_v1</compoundname>
    <basecompoundref refid="dc/db0/classSG_1_1AuxElement" prot="public" virt="non-virtual">SG::AuxElement</basecompoundref>
    <includes refid="dc/d14/BunchConf__v1_8h" local="no">BunchConf_v1.h</includes>
      <sectiondef kind="user-defined">
      <header>Configuration identifier accessors</header>
      <description><para><anchor id="_1amgrp3bd2677c2aabdbf713c51fded8333af2"/> </para></description>
      <memberdef kind="function" id="d5/d22/classxAOD_1_1BunchConf__v1_1acea5760abff45bbe63c847579f4ede7b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t xAOD::BunchConf_v1::configID</definition>
        <argsstring>() const </argsstring>
        <name>configID</name>
        <briefdescription>
<para>Get the configuration ID that this object describes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/BunchConf_v1.h" line="38"/>
      </memberdef>
      <memberdef kind="function" id="d5/d22/classxAOD_1_1BunchConf__v1_1aaf062adbb341887d8f83b2c784e05f2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::BunchConf_v1::setConfigID</definition>
        <argsstring>(uint32_t value)</argsstring>
        <name>setConfigID</name>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the configuration ID that this object describes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/BunchConf_v1.h" line="40"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Basic beam configuration values</header>
      <description><para><anchor id="_1amgrpf14dfede1d014b973bd3655f52d2f150"/> </para></description>
      <memberdef kind="function" id="d5/d22/classxAOD_1_1BunchConf__v1_1afde26e5ec16f4c325033eafe79fdf9ed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt; int &gt;&amp; xAOD::BunchConf_v1::collidingBCIDs</definition>
        <argsstring>() const </argsstring>
        <name>collidingBCIDs</name>
        <briefdescription>
<para>Get the BCIDs of the colliding bunches. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/BunchConf_v1.h" line="48"/>
      </memberdef>
      <memberdef kind="function" id="d5/d22/classxAOD_1_1BunchConf__v1_1a00f082605420c54113b4a6caa63b690b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::BunchConf_v1::setCollidingBCIDs</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;value)</argsstring>
        <name>setCollidingBCIDs</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the BCIDs of the colliding bunches. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/BunchConf_v1.h" line="50"/>
      </memberdef>
      <memberdef kind="function" id="d5/d22/classxAOD_1_1BunchConf__v1_1a9244d55056e17eaeceaae8903c184750" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; float &gt; &amp;</type>
        <definition>const std::vector&lt; float &gt;&amp; xAOD::BunchConf_v1::intensitiesBeam1</definition>
        <argsstring>() const </argsstring>
        <name>intensitiesBeam1</name>
        <briefdescription>
<para>Get the intensities of the beam1 bunches. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/BunchConf_v1.h" line="53"/>
      </memberdef>
      <memberdef kind="function" id="d5/d22/classxAOD_1_1BunchConf__v1_1ad1de617e22fc19064fb6c661c39898e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::BunchConf_v1::setIntensitiesBeam1</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;value)</argsstring>
        <name>setIntensitiesBeam1</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the intensities of the beam1 bunches. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/BunchConf_v1.h" line="55"/>
      </memberdef>
      <memberdef kind="function" id="d5/d22/classxAOD_1_1BunchConf__v1_1ae431ff2b1b261e8dc1c25086bb51507a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::BunchConf_v1::intensitiesBeam1Available</definition>
        <argsstring>() const </argsstring>
        <name>intensitiesBeam1Available</name>
        <briefdescription>
<para>Check if the beam1 intensities are available. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/BunchConf_v1.h" line="57"/>
      </memberdef>
      <memberdef kind="function" id="d5/d22/classxAOD_1_1BunchConf__v1_1ac396ed4f3b58d0c3fb81185ef91edc82" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; float &gt; &amp;</type>
        <definition>const std::vector&lt; float &gt;&amp; xAOD::BunchConf_v1::intensitiesBeam2</definition>
        <argsstring>() const </argsstring>
        <name>intensitiesBeam2</name>
        <briefdescription>
<para>Get the intensities of the beam2 bunches. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/BunchConf_v1.h" line="60"/>
      </memberdef>
      <memberdef kind="function" id="d5/d22/classxAOD_1_1BunchConf__v1_1a340ae30b62acdff8ee7d18773c1b2965" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::BunchConf_v1::setIntensitiesBeam2</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;value)</argsstring>
        <name>setIntensitiesBeam2</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the intensities of the beam2 bunches. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/BunchConf_v1.h" line="62"/>
      </memberdef>
      <memberdef kind="function" id="d5/d22/classxAOD_1_1BunchConf__v1_1abedde6bf180765462fcd5e58537471c6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::BunchConf_v1::intensitiesBeam2Available</definition>
        <argsstring>() const </argsstring>
        <name>intensitiesBeam2Available</name>
        <briefdescription>
<para>Check if the beam2 intensities are available. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/BunchConf_v1.h" line="64"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Information about the unpaired bunches</header>
      <description><para><anchor id="_1amgrpdec065468fecf141fd6190041556344b"/> </para></description>
      <memberdef kind="function" id="d5/d22/classxAOD_1_1BunchConf__v1_1aa9fb1e99ad9310d7d10d1528cbe1c896" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt; int &gt;&amp; xAOD::BunchConf_v1::unpairedBCIDsBeam1</definition>
        <argsstring>() const </argsstring>
        <name>unpairedBCIDsBeam1</name>
        <briefdescription>
<para>Get the BCIDs of the unpaired bunches in beam1. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/BunchConf_v1.h" line="72"/>
      </memberdef>
      <memberdef kind="function" id="d5/d22/classxAOD_1_1BunchConf__v1_1aa1de03e89dbc53b9ed90cec5b257c0f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::BunchConf_v1::setUnpairedBCIDsBeam1</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;value)</argsstring>
        <name>setUnpairedBCIDsBeam1</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the BCIDs of the unpaired bunches in beam1. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/BunchConf_v1.h" line="74"/>
      </memberdef>
      <memberdef kind="function" id="d5/d22/classxAOD_1_1BunchConf__v1_1aa09a4f86b955bd01a5caf19678cb3710" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::BunchConf_v1::unpairedBCIDsBeam1Available</definition>
        <argsstring>() const </argsstring>
        <name>unpairedBCIDsBeam1Available</name>
        <briefdescription>
<para>Check if the beam1 unpaired BCIDs are available. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/BunchConf_v1.h" line="76"/>
      </memberdef>
      <memberdef kind="function" id="d5/d22/classxAOD_1_1BunchConf__v1_1abdce8c7b4a05c0226ba8272054be3cee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt; int &gt;&amp; xAOD::BunchConf_v1::unpairedBCIDsBeam2</definition>
        <argsstring>() const </argsstring>
        <name>unpairedBCIDsBeam2</name>
        <briefdescription>
<para>Get the BCIDs of the unpaired bunches in beam2. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/BunchConf_v1.h" line="79"/>
      </memberdef>
      <memberdef kind="function" id="d5/d22/classxAOD_1_1BunchConf__v1_1a0ddae1a570b8bf4f265010c2d62d1185" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::BunchConf_v1::setUnpairedBCIDsBeam2</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;value)</argsstring>
        <name>setUnpairedBCIDsBeam2</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the BCIDs of the unpaired bunches in beam2. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/BunchConf_v1.h" line="81"/>
      </memberdef>
      <memberdef kind="function" id="d5/d22/classxAOD_1_1BunchConf__v1_1a3824ea059869f0de86d2aa4da0d8320f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::BunchConf_v1::unpairedBCIDsBeam2Available</definition>
        <argsstring>() const </argsstring>
        <name>unpairedBCIDsBeam2Available</name>
        <briefdescription>
<para>Check if the beam2 unpaired BCIDs are available. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/BunchConf_v1.h" line="83"/>
      </memberdef>
      <memberdef kind="function" id="d5/d22/classxAOD_1_1BunchConf__v1_1a7f03a67b165f241c4c1c1dab64745d13" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; float &gt; &amp;</type>
        <definition>const std::vector&lt; float &gt;&amp; xAOD::BunchConf_v1::unpairedIntensisitesBeam1</definition>
        <argsstring>() const </argsstring>
        <name>unpairedIntensisitesBeam1</name>
        <briefdescription>
<para>Get the intensities of the unpaired bunches in beam1. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/BunchConf_v1.h" line="86"/>
      </memberdef>
      <memberdef kind="function" id="d5/d22/classxAOD_1_1BunchConf__v1_1ab3a1e8e7a8e3797444a6d4ef8d4aa07d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::BunchConf_v1::setUnpairedIntensitiesBeam1</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;value)</argsstring>
        <name>setUnpairedIntensitiesBeam1</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the intensities of the unpaired bunches in beam1. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/BunchConf_v1.h" line="88"/>
      </memberdef>
      <memberdef kind="function" id="d5/d22/classxAOD_1_1BunchConf__v1_1a4e5c7574d61f8aa7b7d68d77ec4d0aa9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::BunchConf_v1::unpairedIntensitiesBeam1Available</definition>
        <argsstring>() const </argsstring>
        <name>unpairedIntensitiesBeam1Available</name>
        <briefdescription>
<para>Check if the unpaired beam1 intensities are available. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/BunchConf_v1.h" line="90"/>
      </memberdef>
      <memberdef kind="function" id="d5/d22/classxAOD_1_1BunchConf__v1_1af55e50dad543011b061f1d863332a56f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; float &gt; &amp;</type>
        <definition>const std::vector&lt; float &gt;&amp; xAOD::BunchConf_v1::unpairedIntensisitesBeam2</definition>
        <argsstring>() const </argsstring>
        <name>unpairedIntensisitesBeam2</name>
        <briefdescription>
<para>Get the intensities of the unpaired bunches in beam2. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/BunchConf_v1.h" line="93"/>
      </memberdef>
      <memberdef kind="function" id="d5/d22/classxAOD_1_1BunchConf__v1_1adfe3d222f889bcaaa364e673422032cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::BunchConf_v1::setUnpairedIntensitiesBeam2</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;value)</argsstring>
        <name>setUnpairedIntensitiesBeam2</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the intensities of the unpaired bunches in beam2. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/BunchConf_v1.h" line="95"/>
      </memberdef>
      <memberdef kind="function" id="d5/d22/classxAOD_1_1BunchConf__v1_1a978a017a970a2ddd1af317b448fb855c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::BunchConf_v1::unpairedIntensitiesBeam2Available</definition>
        <argsstring>() const </argsstring>
        <name>unpairedIntensitiesBeam2Available</name>
        <briefdescription>
<para>Check if the unpaired beam2 intensities are available. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/BunchConf_v1.h" line="97"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d5/d22/classxAOD_1_1BunchConf__v1_1ad9eae0581f1bc9dd69eb1ff81a1d39f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xAOD::BunchConf_v1::BunchConf_v1</definition>
        <argsstring>()</argsstring>
        <name>BunchConf_v1</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/BunchConf_v1.h" line="32" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/Root/BunchConf_v1.cxx" bodystart="11" bodyend="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Class holding one particular bunch configuration</para><para>This is a very simple class for storing the output taken from <ref refid="d5/ddc/classTrig_1_1IBunchCrossingConfProvider" kindref="compound">Trig::IBunchCrossingConfProvider</ref>, and re-using it in subsequent jobs.</para><para><simplesect kind="author"><para>Attila Krasznahorkay &lt;<ulink url="mailto:Attila.Krasznahorkay@cern.ch">Attila.Krasznahorkay@cern.ch</ulink>&gt;</para></simplesect>
<simplesect kind="rcs"><title>Revision</title><para>583374 </para></simplesect>
<simplesect kind="rcs"><title>Date</title><para>2014-02-14 16:52:54 +0100 (Fri, 14 Feb 2014) </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="2695">
        <label>xAOD::BunchConf_v1</label>
        <link refid="d5/d22/classxAOD_1_1BunchConf__v1"/>
        <childnode refid="2696" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2697">
        <label>SG::IAuxElement</label>
        <link refid="df/dca/classSG_1_1IAuxElement"/>
      </node>
      <node id="2696">
        <label>SG::AuxElement</label>
        <link refid="dc/db0/classSG_1_1AuxElement"/>
        <childnode refid="2697" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2711">
        <label>Internal::rehash_base&lt;Internal::prime_rehash_policy , hashtable&lt;Value , Value , Alloc , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="db/d2b/classInternal_1_1rehash__base"/>
      </node>
      <node id="2712">
        <label>Internal::hash_code_base&lt;Value , Value , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , cache_hash_code&gt;</label>
        <link refid="d0/d2e/classInternal_1_1hash__code__base"/>
      </node>
      <node id="2707">
        <label>xAOD::TVirtualEvent</label>
        <link refid="de/daf/classxAOD_1_1TVirtualEvent"/>
      </node>
      <node id="2716">
        <label>SG::AuxElementData</label>
        <link refid="dc/dfb/classSG_1_1AuxElementData"/>
        <childnode refid="2701" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2698">
        <label>xAOD::BunchConf_v1</label>
        <link refid="d5/d22/classxAOD_1_1BunchConf__v1"/>
        <childnode refid="2699" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2710">
        <label>SG::hashtable&lt; Value, Value, Alloc, Internal::identity&lt; Value &gt;, Pred, Hash, Internal::mod_range_hashing, Internal::default_ranged_hash, Internal::prime_rehash_policy, cache_hash_code, true, true &gt;</label>
        <link refid="de/d63/classSG_1_1hashtable"/>
        <childnode refid="2711" relation="public-inheritance">
        </childnode>
        <childnode refid="2712" relation="public-inheritance">
        </childnode>
        <childnode refid="2713" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2705">
        <label>SelectNoInstance</label>
        <link refid="d9/dec/classSelectNoInstance"/>
      </node>
      <node id="2706">
        <label>DataLinkBase</label>
        <link refid="dd/d9d/classDataLinkBase"/>
      </node>
      <node id="2700">
        <label>SG::IAuxElement</label>
        <link refid="df/dca/classSG_1_1IAuxElement"/>
      </node>
      <node id="2703">
        <label>SG::IConstAuxStore</label>
        <link refid="d3/dd5/classSG_1_1IConstAuxStore"/>
      </node>
      <node id="2704">
        <label>DataLink&lt; SG::IConstAuxStore &gt;</label>
        <link refid="da/da2/classDataLink"/>
        <childnode refid="2705" relation="public-inheritance">
        </childnode>
        <childnode refid="2706" relation="public-inheritance">
        </childnode>
        <childnode refid="2707" relation="usage">
          <edgelabel>m_event</edgelabel>
        </childnode>
        <childnode refid="2703" relation="usage">
          <edgelabel>m_object</edgelabel>
        </childnode>
      </node>
      <node id="2702">
        <label>SG::IAuxStore</label>
        <link refid="dc/d05/classSG_1_1IAuxStore"/>
        <childnode refid="2703" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2709">
        <label>SG::unordered_set&lt; Value, Hash, Pred, Alloc, cache_hash_code &gt;</label>
        <link refid="dd/dac/classSG_1_1unordered__set"/>
        <childnode refid="2710" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2713">
        <label>Internal::map_base&lt;Value , Value , Internal::identity&lt; Value &gt; , unique_keys, hashtable&lt;Value , Value , Alloc , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="d1/d54/classInternal_1_1map__base"/>
      </node>
      <node id="2714">
        <label>SG::AuxVectorData::Cache</label>
        <childnode refid="2715" relation="usage">
          <edgelabel>m_cache</edgelabel>
        </childnode>
      </node>
      <node id="2708">
        <label>mutex</label>
      </node>
      <node id="2699">
        <label>SG::AuxElement</label>
        <link refid="dc/db0/classSG_1_1AuxElement"/>
        <childnode refid="2700" relation="public-inheritance">
        </childnode>
        <childnode refid="2701" relation="usage">
          <edgelabel>m_container</edgelabel>
        </childnode>
        <childnode refid="2716" relation="usage">
          <edgelabel>m_privateData</edgelabel>
          <edgelabel>s_privatePlaceholder</edgelabel>
        </childnode>
      </node>
      <node id="2715">
        <label>void</label>
      </node>
      <node id="2701">
        <label>SG::AuxVectorData</label>
        <link refid="db/dd6/classSG_1_1AuxVectorData"/>
        <childnode refid="2702" relation="usage">
          <edgelabel>m_store</edgelabel>
        </childnode>
        <childnode refid="2704" relation="usage">
          <edgelabel>m_constStoreLink</edgelabel>
        </childnode>
        <childnode refid="2703" relation="usage">
          <edgelabel>m_constStore</edgelabel>
        </childnode>
        <childnode refid="2708" relation="usage">
          <edgelabel>m_mutex</edgelabel>
        </childnode>
        <childnode refid="2709" relation="usage">
          <edgelabel>s_emptySet</edgelabel>
        </childnode>
        <childnode refid="2714" relation="usage">
          <edgelabel>m_cache</edgelabel>
          <edgelabel>m_constCache</edgelabel>
          <edgelabel>m_decorCache</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/BunchConf_v1.h" line="28" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/BunchConf_v1.h" bodystart="28" bodyend="101"/>
    <listofallmembers>
      <member refid="dc/db0/classSG_1_1AuxElement_1ace84dc4cbb05aa996bc0bb12ea0580b0" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>auxdata</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a7aaa8e9eb54091ab7ee43bb7c73918e4" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>auxdata</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1acd13909ea46d99e1b502834f133a159c" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>auxdata</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a5279e0349d690c26121f60b5a8778322" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>auxdata</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a1fc119dd13bd2c74f2ce4f2ba19c8898" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>auxdataConst</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1afa20cbd90cdb931e16c2751709e35271" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>auxdataConst</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1af85b897bffef87879e0ed6a58428a60b" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>auxdecor</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a6c8fc3d315a5ec0633e7ae6a2b26a432" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>auxdecor</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1aef247a3ae0d53cd8c4f90702c7501d2f" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>AuxElement</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ac8345167ba85a0788d804a39b8325a36" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>AuxElement</name></member>
      <member refid="d5/d22/classxAOD_1_1BunchConf__v1_1ad9eae0581f1bc9dd69eb1ff81a1d39f8" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>BunchConf_v1</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a127c2c4839333f537cb83ecdc82ad99d" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>clearCache</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a71044a012a37af1bb0b6fab3d3ea1230" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>clearDecorations</name></member>
      <member refid="d5/d22/classxAOD_1_1BunchConf__v1_1afde26e5ec16f4c325033eafe79fdf9ed" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>collidingBCIDs</name></member>
      <member refid="d5/d22/classxAOD_1_1BunchConf__v1_1acea5760abff45bbe63c847579f4ede7b" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>configID</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a9004b51bd3619cab56c3d52e290c09b9" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>container</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a45f6f3563f9c8f088e4b840f81103588" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>container</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a607ee93fe8081d2bd3aa1745f0cbbb50" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>getAuxIDs</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a324d8fccbfe274b6ff91d6a19de35caf" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>getConstStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1afc4602cf2edeb01c3350367f5985f49b" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>getStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ac4bc75a2f7b1ed984ffae1bba6de58ba" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>hasNonConstStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a2d354faac53b7a003d29c0f7b95f3672" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>hasStore</name></member>
      <member refid="df/dca/classSG_1_1IAuxElement_1afdd6ee3469014a690d257119d34ec598" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>IAuxElement</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1aba555afb4547fbe96fbdc4b266f75f16" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>index</name></member>
      <member refid="d5/d22/classxAOD_1_1BunchConf__v1_1a9244d55056e17eaeceaae8903c184750" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>intensitiesBeam1</name></member>
      <member refid="d5/d22/classxAOD_1_1BunchConf__v1_1ae431ff2b1b261e8dc1c25086bb51507a" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>intensitiesBeam1Available</name></member>
      <member refid="d5/d22/classxAOD_1_1BunchConf__v1_1ac396ed4f3b58d0c3fb81185ef91edc82" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>intensitiesBeam2</name></member>
      <member refid="d5/d22/classxAOD_1_1BunchConf__v1_1abedde6bf180765462fcd5e58537471c6" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>intensitiesBeam2Available</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1af727b22ab51f1d848fc3cf59065b99ea" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>isAvailable</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a864fc1dab026cbcf20b2c7e3904b89a4" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>isAvailableWritable</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a5c56e0b548ba0f0fa6eba200defaa44d" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>isAvailableWritableAsDecoration</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a197bf9fc579d49e25a850a4b3a5c14e8" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>makePrivateStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ad2eaf2e38536e93c05aebaf1218516a2" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>makePrivateStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a164f94b3ddbbc773ba8beefdb7cb8677" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>makePrivateStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a1ecd49ad16cba61c3131046d8e068650" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>operator=</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1aab2f280f3c832e285fe020365bb3ac1e" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>releasePrivateStore</name></member>
      <member refid="d5/d22/classxAOD_1_1BunchConf__v1_1a00f082605420c54113b4a6caa63b690b" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>setCollidingBCIDs</name></member>
      <member refid="d5/d22/classxAOD_1_1BunchConf__v1_1aaf062adbb341887d8f83b2c784e05f2f" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>setConfigID</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a3079709e44e8ac7452c05454f4994ce9" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>setConstStore</name></member>
      <member refid="d5/d22/classxAOD_1_1BunchConf__v1_1ad1de617e22fc19064fb6c661c39898e8" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>setIntensitiesBeam1</name></member>
      <member refid="d5/d22/classxAOD_1_1BunchConf__v1_1a340ae30b62acdff8ee7d18773c1b2965" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>setIntensitiesBeam2</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a68b13428943609fd2b56c35c9dec85b3" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>setNonConstStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a57b602d3ec1c0129811375f46c18c049" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>setStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a9cc58e245a417833f297e836d9559a32" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>setStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a4bdca4ef5f1df892b5dc9742644444b8" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>setStore</name></member>
      <member refid="d5/d22/classxAOD_1_1BunchConf__v1_1aa1de03e89dbc53b9ed90cec5b257c0f6" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>setUnpairedBCIDsBeam1</name></member>
      <member refid="d5/d22/classxAOD_1_1BunchConf__v1_1a0ddae1a570b8bf4f265010c2d62d1185" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>setUnpairedBCIDsBeam2</name></member>
      <member refid="d5/d22/classxAOD_1_1BunchConf__v1_1ab3a1e8e7a8e3797444a6d4ef8d4aa07d" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>setUnpairedIntensitiesBeam1</name></member>
      <member refid="d5/d22/classxAOD_1_1BunchConf__v1_1adfe3d222f889bcaaa364e673422032cf" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>setUnpairedIntensitiesBeam2</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a6a154ec406bc6531a348a80e679da31f" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>SG::AuxVectorBase</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a4573c8a5a16556f7a1826c502a8a1577" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>SG::AuxVectorBase_test</name></member>
      <member refid="d5/d22/classxAOD_1_1BunchConf__v1_1aa9fb1e99ad9310d7d10d1528cbe1c896" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>unpairedBCIDsBeam1</name></member>
      <member refid="d5/d22/classxAOD_1_1BunchConf__v1_1aa09a4f86b955bd01a5caf19678cb3710" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>unpairedBCIDsBeam1Available</name></member>
      <member refid="d5/d22/classxAOD_1_1BunchConf__v1_1abdce8c7b4a05c0226ba8272054be3cee" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>unpairedBCIDsBeam2</name></member>
      <member refid="d5/d22/classxAOD_1_1BunchConf__v1_1a3824ea059869f0de86d2aa4da0d8320f" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>unpairedBCIDsBeam2Available</name></member>
      <member refid="d5/d22/classxAOD_1_1BunchConf__v1_1a7f03a67b165f241c4c1c1dab64745d13" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>unpairedIntensisitesBeam1</name></member>
      <member refid="d5/d22/classxAOD_1_1BunchConf__v1_1af55e50dad543011b061f1d863332a56f" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>unpairedIntensisitesBeam2</name></member>
      <member refid="d5/d22/classxAOD_1_1BunchConf__v1_1a4e5c7574d61f8aa7b7d68d77ec4d0aa9" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>unpairedIntensitiesBeam1Available</name></member>
      <member refid="d5/d22/classxAOD_1_1BunchConf__v1_1a978a017a970a2ddd1af317b448fb855c" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>unpairedIntensitiesBeam2Available</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ad7f08e277b177f9dd74924e7d635034e" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>usingPrivateStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1af97c2ef167b0d66ada327a0ada1015e7" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>usingStandaloneStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a0b6a5f12eb826137b6d218f5738bb0b1" prot="public" virt="non-virtual"><scope>xAOD::BunchConf_v1</scope><name>~AuxElement</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
