<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d5/d02/HLTSequenceList_8cxx" kind="file">
    <compoundname>HLTSequenceList.cxx</compoundname>
    <includes refid="d6/dfe/HLTSequenceList_8h" local="yes">TrigConfHLTData/HLTSequenceList.h</includes>
    <includes refid="db/d1d/HLTSequence_8h" local="yes">TrigConfHLTData/HLTSequence.h</includes>
    <includes refid="dc/d9c/HLTTriggerElement_8h" local="yes">TrigConfHLTData/HLTTriggerElement.h</includes>
    <includes refid="df/d33/DiffStruct_8h" local="yes">TrigConfL1Data/DiffStruct.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">stdexcept</includes>
    <incdepgraph>
      <node id="309225">
        <label>boost/multi_index/ordered_index.hpp</label>
      </node>
      <node id="309214">
        <label>TrigConfHLTData/HLTSequenceList.h</label>
        <link refid="d6/dfe/HLTSequenceList_8h_source"/>
        <childnode refid="309215" relation="include">
        </childnode>
        <childnode refid="309216" relation="include">
        </childnode>
        <childnode refid="309217" relation="include">
        </childnode>
        <childnode refid="309218" relation="include">
        </childnode>
        <childnode refid="309219" relation="include">
        </childnode>
        <childnode refid="309222" relation="include">
        </childnode>
        <childnode refid="309223" relation="include">
        </childnode>
        <childnode refid="309224" relation="include">
        </childnode>
        <childnode refid="309225" relation="include">
        </childnode>
      </node>
      <node id="309230">
        <label>stdexcept</label>
      </node>
      <node id="309216">
        <label>string</label>
      </node>
      <node id="309218">
        <label>map</label>
      </node>
      <node id="309213">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfHLTData/Root/HLTSequenceList.cxx</label>
        <link refid="HLTSequenceList.cxx"/>
        <childnode refid="309214" relation="include">
        </childnode>
        <childnode refid="309219" relation="include">
        </childnode>
        <childnode refid="309226" relation="include">
        </childnode>
        <childnode refid="309227" relation="include">
        </childnode>
        <childnode refid="309229" relation="include">
        </childnode>
        <childnode refid="309230" relation="include">
        </childnode>
      </node>
      <node id="309220">
        <label>TrigConfL1Data/TrigConfData.h</label>
        <link refid="da/da8/TrigConfData_8h_source"/>
        <childnode refid="309215" relation="include">
        </childnode>
        <childnode refid="309216" relation="include">
        </childnode>
      </node>
      <node id="309221">
        <label>fstream</label>
      </node>
      <node id="309226">
        <label>TrigConfHLTData/HLTTriggerElement.h</label>
        <link refid="dc/d9c/HLTTriggerElement_8h_source"/>
        <childnode refid="309220" relation="include">
        </childnode>
        <childnode refid="309215" relation="include">
        </childnode>
        <childnode refid="309221" relation="include">
        </childnode>
        <childnode refid="309216" relation="include">
        </childnode>
        <childnode refid="309218" relation="include">
        </childnode>
      </node>
      <node id="309219">
        <label>TrigConfHLTData/HLTSequence.h</label>
        <link refid="db/d1d/HLTSequence_8h_source"/>
        <childnode refid="309220" relation="include">
        </childnode>
        <childnode refid="309215" relation="include">
        </childnode>
        <childnode refid="309221" relation="include">
        </childnode>
        <childnode refid="309216" relation="include">
        </childnode>
        <childnode refid="309217" relation="include">
        </childnode>
      </node>
      <node id="309228">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="309217">
        <label>vector</label>
      </node>
      <node id="309224">
        <label>boost/multi_index/hashed_index.hpp</label>
      </node>
      <node id="309215">
        <label>iosfwd</label>
      </node>
      <node id="309229">
        <label>iostream</label>
      </node>
      <node id="309227">
        <label>TrigConfL1Data/DiffStruct.h</label>
        <link refid="df/d33/DiffStruct_8h_source"/>
        <childnode refid="309228" relation="include">
        </childnode>
        <childnode refid="309216" relation="include">
        </childnode>
        <childnode refid="309217" relation="include">
        </childnode>
      </node>
      <node id="309222">
        <label>boost/multi_index_container.hpp</label>
      </node>
      <node id="309223">
        <label>boost/multi_index/mem_fun.hpp</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;TrigConfHLTData/HLTSequenceList.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigConfHLTData/HLTSequence.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigConfHLTData/HLTTriggerElement.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigConfL1Data/DiffStruct.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><ref refid="d6/dbb/classTrigConf_1_1HLTSequenceList_1a48219232b491f2f7822efec371dab2e3" kindref="member" tooltip="default constructor">TrigConf::HLTSequenceList::HLTSequenceList</ref>(){}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><ref refid="d6/dbb/classTrigConf_1_1HLTSequenceList_1a48219232b491f2f7822efec371dab2e3" kindref="member" tooltip="default constructor">TrigConf::HLTSequenceList::HLTSequenceList</ref>(<sp/>vector&lt;HLTSequence*&gt;&amp;<sp/>sequenceList<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/>copy(<sp/>sequenceList.begin(),<sp/>sequenceList.end(),<sp/>std::inserter(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>begin()));</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><ref refid="d6/dbb/classTrigConf_1_1HLTSequenceList_1a54ad0b6624ee019dc15ab18fd18340e1" kindref="member" tooltip="destructor">TrigConf::HLTSequenceList::~HLTSequenceList</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/>clear();</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TrigConf::HLTSequenceList::clear()<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(HLTSequence*<sp/>seq<sp/>:<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>seq;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/>HLTSequenceContainer::clear();</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/dbb/classTrigConf_1_1HLTSequenceList_1a615c017a441d377febfdcefa57d8ff01" kindref="member" tooltip="adds an HLTSequence to the menu">TrigConf::HLTSequenceList::addHLTSequence</ref>(<sp/>HLTSequence<sp/>*<sp/>sequence)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sequence==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/>pair&lt;iterator,<sp/>bool&gt;<sp/>ins<sp/>=<sp/>insert(sequence);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ins.second)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>insert<sp/>sequence<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>sequence-&gt;name()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;,<sp/>because<sp/>a<sp/>uniqueness<sp/>constraint<sp/>is<sp/>violated&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>TrigConf::HLTSequenceList::hasTE(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getSequence(name)!=0;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><ref refid="d5/df5/classTrigConf_1_1HLTSequence" kindref="compound" tooltip="HLT sequence configuration information.">TrigConf::HLTSequence</ref>*</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><ref refid="d6/dbb/classTrigConf_1_1HLTSequenceList_1a368b1ddb36fc2bf23a5749914ba5289e" kindref="member" tooltip="counts the number of sequences in the menu">TrigConf::HLTSequenceList::getSequence</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>index&lt;seq_hash_id&gt;::type&amp;<sp/>byid<sp/>=<sp/>get&lt;seq_hash_id&gt;();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/>index&lt;seq_hash_id&gt;::type::const_iterator<sp/>seq<sp/>=<sp/>byid.find(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(seq<sp/>==<sp/>byid.end())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*seq;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><ref refid="d5/df5/classTrigConf_1_1HLTSequence" kindref="compound" tooltip="HLT sequence configuration information.">TrigConf::HLTSequence</ref>*</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><ref refid="d6/dbb/classTrigConf_1_1HLTSequenceList_1a368b1ddb36fc2bf23a5749914ba5289e" kindref="member" tooltip="counts the number of sequences in the menu">TrigConf::HLTSequenceList::getSequence</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>index&lt;seq_name_hash&gt;::type&amp;<sp/>byname<sp/>=<sp/>get&lt;seq_name_hash&gt;();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/>index&lt;seq_name_hash&gt;::type::const_iterator<sp/>seq<sp/>=<sp/>byname.find(name);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(seq<sp/>==<sp/>byname.end())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*seq;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><ref refid="d6/dbb/classTrigConf_1_1HLTSequenceList_1addf9f5f40b9671b0ec3d18bda7ff2fb2" kindref="member" tooltip="find name from ID in the map m_IdToLabel">TrigConf::HLTSequenceList::getLabel</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>std::string<sp/>&amp;<sp/>label)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>index&lt;seq_hash_id&gt;::type&amp;<sp/>byid<sp/>=<sp/>get&lt;seq_hash_id&gt;();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/>index&lt;seq_hash_id&gt;::type::const_iterator<sp/>seq<sp/>=<sp/>byid.find(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(seq<sp/>!=<sp/>byid.end())<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>label<sp/>=<sp/>(*seq)-&gt;name();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><ref refid="d6/dbb/classTrigConf_1_1HLTSequenceList_1af3fa233727ccbce6d9d533411c3ff19d" kindref="member" tooltip="find ID from name in the map m_IdToLabel">TrigConf::HLTSequenceList::getHashIdFromLabel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>label,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>index&lt;seq_name_hash&gt;::type&amp;<sp/>byname<sp/>=<sp/>get&lt;seq_name_hash&gt;();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/>index&lt;seq_name_hash&gt;::type::const_iterator<sp/>seq<sp/>=<sp/>byname.find(label);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(seq<sp/>!=<sp/>byname.end())<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>(*seq)-&gt;hashId();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><ref refid="d2/d81/classTrigConf_1_1DiffStruct" kindref="compound">TrigConf::DiffStruct</ref>*</highlight></codeline>
<codeline lineno="85"><highlight class="normal">TrigConf::HLTSequenceList::compareTo(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>HLTSequenceList*<sp/>o)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/>DiffStruct<sp/>*<sp/>ds<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>DiffStruct(</highlight><highlight class="stringliteral">&quot;SEQUENCE_LIST&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(HLTSequence*<sp/>seq<sp/>:<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>HLTSequence<sp/>*o_seq<sp/>=<sp/>o-&gt;getSequence(seq-&gt;name());</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(o_seq)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ds-&gt;addSub(<sp/>seq-&gt;compareTo(o_seq)<sp/>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ds-&gt;addLeftOnlySub(<sp/></highlight><highlight class="stringliteral">&quot;SEQUENCE&quot;</highlight><highlight class="normal">,<sp/>seq-&gt;name()<sp/>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(HLTSequence*<sp/>o_seq<sp/>:<sp/>*o)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>HLTSequence<sp/>*seq<sp/>=<sp/>getSequence(o_seq-&gt;name());</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!seq)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ds-&gt;addRightOnlySub(<sp/></highlight><highlight class="stringliteral">&quot;SEQUENCE&quot;</highlight><highlight class="normal">,<sp/>o_seq-&gt;name()<sp/>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ds-&gt;empty())<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>ds;<sp/>ds=0;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ds;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><ref refid="d6/dbb/classTrigConf_1_1HLTSequenceList_1aba8fe0c501fbb38c39476c1c1565ccc2" kindref="member" tooltip="print the sequence list">TrigConf::HLTSequenceList::print</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>indent,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>detail)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(detail&gt;=1)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;HLTSequenceList<sp/>has<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>sequences&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(detail&gt;=4)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;--------------------------------------------------------------------------------&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(HLTSequence*<sp/>seq<sp/>:<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seq-&gt;print(indent<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>detail);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;================================================================================&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal">std::ostream<sp/>&amp;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">TrigConf::operator&lt;&lt;(std::ostream<sp/>&amp;<sp/>o,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/dbb/classTrigConf_1_1HLTSequenceList" kindref="compound" tooltip="list of HLT sequences">TrigConf::HLTSequenceList</ref><sp/>&amp;<sp/>sl)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/>o<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-<sp/>--<sp/>HLTSequenceList<sp/>printout<sp/>------------------------------<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="d5/df5/classTrigConf_1_1HLTSequence" kindref="compound" tooltip="HLT sequence configuration information.">TrigConf::HLTSequence</ref>*<sp/>seq<sp/>:<sp/>sl)<sp/>o<sp/>&lt;&lt;<sp/>*seq;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/>o<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-<sp/>----------------------------------------------------------<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>o;</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfHLTData/Root/HLTSequenceList.cxx"/>
  </compounddef>
</doxygen>
