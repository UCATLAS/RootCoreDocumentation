<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d5/df0/TDTUtilities_8cxx" kind="file">
    <compoundname>TDTUtilities.cxx</compoundname>
    <includes local="no">boost/algorithm/string.hpp</includes>
    <includes refid="dc/d9c/HLTTriggerElement_8h" local="yes">TrigConfHLTData/HLTTriggerElement.h</includes>
    <includes refid="de/dfe/TDTUtilities_8h" local="yes">TrigDecisionTool/TDTUtilities.h</includes>
    <includes refid="d7/d71/TriggerElement_8h" local="yes">TrigNavStructure/TriggerElement.h</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="yes">TPython.h</includes>
    <includes local="yes">TTree.h</includes>
    <includes local="yes">TROOT.h</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="316557">
        <label>boost/algorithm/string.hpp</label>
      </node>
      <node id="316567">
        <label>stdint.h</label>
      </node>
      <node id="316564">
        <label>TrigDecisionTool/TDTUtilities.h</label>
        <link refid="de/dfe/TDTUtilities_8h_source"/>
        <childnode refid="316561" relation="include">
        </childnode>
        <childnode refid="316565" relation="include">
        </childnode>
      </node>
      <node id="316561">
        <label>string</label>
      </node>
      <node id="316571">
        <label>TPython.h</label>
      </node>
      <node id="316563">
        <label>map</label>
      </node>
      <node id="316559">
        <label>TrigConfL1Data/TrigConfData.h</label>
        <link refid="da/da8/TrigConfData_8h_source"/>
        <childnode refid="316560" relation="include">
        </childnode>
        <childnode refid="316561" relation="include">
        </childnode>
      </node>
      <node id="316570">
        <label>boost/variant.hpp</label>
      </node>
      <node id="316562">
        <label>fstream</label>
      </node>
      <node id="316558">
        <label>TrigConfHLTData/HLTTriggerElement.h</label>
        <link refid="dc/d9c/HLTTriggerElement_8h_source"/>
        <childnode refid="316559" relation="include">
        </childnode>
        <childnode refid="316560" relation="include">
        </childnode>
        <childnode refid="316562" relation="include">
        </childnode>
        <childnode refid="316561" relation="include">
        </childnode>
        <childnode refid="316563" relation="include">
        </childnode>
      </node>
      <node id="316569">
        <label>TrigNavStructure/Types.h</label>
        <link refid="d5/d81/TrigNavStructure_2Types_8h_source"/>
        <childnode refid="316567" relation="include">
        </childnode>
        <childnode refid="316570" relation="include">
        </childnode>
      </node>
      <node id="316573">
        <label>TROOT.h</label>
      </node>
      <node id="316566">
        <label>TrigNavStructure/TriggerElement.h</label>
        <link refid="d7/d71/TriggerElement_8h_source"/>
        <childnode refid="316563" relation="include">
        </childnode>
        <childnode refid="316565" relation="include">
        </childnode>
        <childnode refid="316561" relation="include">
        </childnode>
        <childnode refid="316567" relation="include">
        </childnode>
        <childnode refid="316568" relation="include">
        </childnode>
        <childnode refid="316569" relation="include">
        </childnode>
      </node>
      <node id="316565">
        <label>vector</label>
      </node>
      <node id="316560">
        <label>iosfwd</label>
      </node>
      <node id="316568">
        <label>iostream</label>
      </node>
      <node id="316556">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/Root/TDTUtilities.cxx</label>
        <link refid="TDTUtilities.cxx"/>
        <childnode refid="316557" relation="include">
        </childnode>
        <childnode refid="316558" relation="include">
        </childnode>
        <childnode refid="316564" relation="include">
        </childnode>
        <childnode refid="316566" relation="include">
        </childnode>
        <childnode refid="316561" relation="include">
        </childnode>
        <childnode refid="316565" relation="include">
        </childnode>
        <childnode refid="316571" relation="include">
        </childnode>
        <childnode refid="316572" relation="include">
        </childnode>
        <childnode refid="316573" relation="include">
        </childnode>
        <childnode refid="316568" relation="include">
        </childnode>
      </node>
      <node id="316572">
        <label>TTree.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="d9/d74/namespaceTDTUtilities__impl">TDTUtilities_impl</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;boost/algorithm/string.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigConfHLTData/HLTTriggerElement.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigDecisionTool/TDTUtilities.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigNavStructure/TriggerElement.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TPython.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TTree.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TROOT.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">TDTUtilities_impl<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>splitting<sp/>a<sp/>string<sp/>at<sp/>the<sp/>&apos;,&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>split(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>line)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>res;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string::size_type<sp/>old_pos<sp/>=<sp/>0,<sp/>pos<sp/>=<sp/>line.find(</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">,0);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>pos<sp/>!=<sp/>std::string::npos<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res.push_back(line.substr(old_pos,pos-old_pos));</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>old_pos<sp/>=<sp/>pos<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>line.find(</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">,<sp/>old_pos);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>last<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(old_pos<sp/>&lt;<sp/>line.size())</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res.push_back(line.substr(old_pos,line.size()-old_pos));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">std::vector&lt;<sp/>std::string<sp/>&gt;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><ref refid="d2/d87/namespaceTrig_1a1603ef3999da9799870e1bb433932ed1" kindref="member" tooltip="makes a split of list of chains into the vector of chains">Trig::convertStringToVector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>triggerNames)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>std::string<sp/>temp(triggerNames);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>std::string::size_type<sp/>pos;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>new<sp/>erase<sp/>all<sp/>spaces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((pos<sp/>=<sp/>temp.find_first_of(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">))<sp/>!=<sp/>std::string::npos)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>temp.erase(pos,1);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TDTUtilities_impl::split(temp);</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">std::vector&lt;<sp/>std::string<sp/>&gt;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><ref refid="d2/d87/namespaceTrig_1a6ca77302aef6d33ad12b0ba1ccb3b0ed" kindref="member" tooltip="normalizes the list of triggers (patterns) by sorting and uniquing them">Trig::keyWrap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;&amp;<sp/>triggerNames)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>v;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>v.assign(triggerNames.begin(),triggerNames.end());</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>std::sort(v.begin(),v.end());</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>v.erase(<sp/>std::unique(v.begin(),v.end()),v.end());</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">Trig::BuildTransientTrees(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;&amp;<sp/>PoolFileList,<sp/>TTree*&amp;<sp/>eventTree,<sp/>TTree*&amp;<sp/>metadataTree)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>import<sp/>necessary<sp/>python<sp/>libs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/>TPython::Exec(</highlight><highlight class="stringliteral">&quot;import<sp/>ROOT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/>TPython::Exec(</highlight><highlight class="stringliteral">&quot;import<sp/>PyCintex&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/>TPython::Exec(</highlight><highlight class="stringliteral">&quot;import<sp/>AthenaROOTAccess.transientTree&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>persistent<sp/>trees</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/>TPython::Exec(</highlight><highlight class="stringliteral">&quot;ct<sp/>=<sp/>ROOT.AthenaROOTAccess.TChainROOTAccess(\&apos;CollectionTree\&apos;)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/>TPython::Exec(</highlight><highlight class="stringliteral">&quot;mdt<sp/>=<sp/>ROOT.AthenaROOTAccess.TChainROOTAccess(\&apos;MetaData\&apos;)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::vector&lt;std::string&gt;::const_iterator<sp/>fIt<sp/>=<sp/>PoolFileList.begin();<sp/>fIt<sp/>!=<sp/>PoolFileList.end();<sp/>fIt++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>inputAODCT<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ct.Add(\&quot;&quot;</highlight><highlight class="normal"><sp/><sp/>+<sp/>*fIt<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/CollectionTree\&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>inputAODMDT<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;mdt.Add(\&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/>*fIt<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/MetaData\&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TPython::Exec(inputAODCT.c_str());</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TPython::Exec(inputAODMDT.c_str());</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/>TPython::Exec(</highlight><highlight class="stringliteral">&quot;trct<sp/><sp/>=<sp/>AthenaROOTAccess.transientTree.makeTree(ct)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/>TPython::Exec(</highlight><highlight class="stringliteral">&quot;trmdt<sp/>=<sp/>AthenaROOTAccess.transientTree.makeTree(mdt,<sp/>persTreeName<sp/>=<sp/>\&apos;MetaData\&apos;,<sp/>dhTreeName<sp/>=<sp/>\&apos;MetaDataHdrDataHeader\&apos;)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/>eventTree<sp/><sp/><sp/><sp/>=<sp/>(TTree*)gROOT-&gt;Get(</highlight><highlight class="stringliteral">&quot;CollectionTree_trans&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/>metadataTree<sp/>=<sp/>(TTree*)gROOT-&gt;Get(</highlight><highlight class="stringliteral">&quot;MetaData_trans&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal">Trig::DestroyTransientTrees()<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/>TPython::Exec(</highlight><highlight class="stringliteral">&quot;del<sp/>ct&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/>TPython::Exec(</highlight><highlight class="stringliteral">&quot;del<sp/>mdt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/>TPython::Exec(</highlight><highlight class="stringliteral">&quot;del<sp/>trct&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/>TPython::Exec(</highlight><highlight class="stringliteral">&quot;del<sp/>trmdt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">std::string<sp/><ref refid="d2/d87/namespaceTrig_1a283b99d494125fc3c7c68f465c25f237" kindref="member" tooltip="converts TEid to TE name (this may not always work, it depends on the availability...">Trig::getTEName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">HLT::TriggerElement</ref>&amp;<sp/>te)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>std::string<sp/>s;<sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="db/d7d/classTrigConf_1_1HLTTriggerElement_1a541bf6f15c84f59e6184bf127cd46605" kindref="member" tooltip="find name from ID in the map m_IdToLabel">TrigConf::HLTTriggerElement::getLabel</ref>(te.<ref refid="dd/db8/classHLT_1_1TriggerElement_1a3b549590aa2392644ce33125f62058c8" kindref="member" tooltip="reset internals. Needed because of TriggerStore (or TriggerFactory ...) can be used...">getId</ref>(),<sp/>s)<sp/>?<sp/>s<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/Root/TDTUtilities.cxx"/>
  </compounddef>
</doxygen>
