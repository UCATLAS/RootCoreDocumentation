<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d5/d27/classCxxUtils_1_1ArrayIteratorChooser" kind="class" prot="public">
    <compoundname>CxxUtils::ArrayIteratorChooser</compoundname>
    <includes refid="df/dd0/Array_8h" local="no">Array.h</includes>
    <templateparamlist>
      <param>
        <type>unsigned int</type>
        <declname>N</declname>
        <defname>N</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="d5/d27/classCxxUtils_1_1ArrayIteratorChooser_1ae92711006c208cba098b09ea6f3d248f" prot="public" static="no">
        <type><ref refid="d4/d75/classCxxUtils_1_1ArrayIterator" kindref="compound">ArrayIterator</ref>&lt; <ref refid="da/deb/structN" kindref="compound">N</ref> &gt;</type>
        <definition>typedef ArrayIterator&lt;N&gt; CxxUtils::ArrayIteratorChooser&lt; N &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
<para>Iterator type for an <computeroutput>Array&lt;N&gt;</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.h" line="71" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="d5/d27/classCxxUtils_1_1ArrayIteratorChooser_1af8b4ab406779e0d7e86746cc78edb0a7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d4/d75/classCxxUtils_1_1ArrayIterator" kindref="compound">const_iterator</ref></type>
        <definition>ArrayIteratorChooser&lt; N &gt;::const_iterator CxxUtils::ArrayIteratorChooser&lt; N &gt;::make_iterator</definition>
        <argsstring>(const Arrayrep *rep, unsigned int offs)</argsstring>
        <name>make_iterator</name>
        <param>
          <type>const <ref refid="d4/dc1/structCaloRec_1_1Arrayrep" kindref="compound">Arrayrep</ref> *</type>
          <declname>rep</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>offs</declname>
        </param>
        <briefdescription>
<para>Construct an <computeroutput><ref refid="d5/dd9/classCxxUtils_1_1Array_1af8716c5726c944e8ba55f90a576949e3" kindref="member">Array&lt;N&gt;::const_iterator</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rep</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>Arrayrep</computeroutput> from which to initialize the iterator. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offs</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset of the first element referenced by the iterator within <emphasis>rep</emphasis>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The new iterator. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.h" line="81" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.icc" bodystart="28" bodyend="32"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Helper for defining iterators over <computeroutput>Array&apos;s</computeroutput>. </para>    </briefdescription>
    <detaileddescription>
<para>Helper for defining iterators over <computeroutput>Array&apos;s</computeroutput>, specialized for <computeroutput><ref refid="da/deb/structN" kindref="compound">N</ref></computeroutput> == 1.</para><para>For <computeroutput>Array&lt;N&gt;</computeroutput> with <computeroutput><ref refid="da/deb/structN" kindref="compound">N</ref></computeroutput> &gt;= 2, we want to use <computeroutput>ArrayIterator&lt;N&gt;</computeroutput> as the iterator class. However, for <computeroutput>Array&lt;1&gt;</computeroutput>, we want to use just an <computeroutput>Arrayelt*</computeroutput>. I&apos;m too lazy to either specialize <computeroutput>ArrayIterator&lt;1&gt;</computeroutput> or to add a new <computeroutput>Array&lt;1&gt;</computeroutput> specialization. So this is an easier way of achieving the same effect. <computeroutput>Array&lt;N&gt;</computeroutput> uses as its iterator type <computeroutput><ref refid="d5/d27/classCxxUtils_1_1ArrayIteratorChooser_1ae92711006c208cba098b09ea6f3d248f" kindref="member">ArrayIteratorChooser&lt;N&gt;::const_iterator</ref></computeroutput>; this small class then gets specialized for  == 1. We also need to provide a way to create the iterators (since it will be done differently in the two cases). This is supplied by the <computeroutput>make_iterator</computeroutput> method.</para><para>For <computeroutput><ref refid="da/deb/structN" kindref="compound">N</ref></computeroutput> == 1, we specialize so that <computeroutput>Array&lt;N&gt;</computeroutput> uses <computeroutput>Arrayelt*</computeroutput> as its iterator type. </para>    </detaileddescription>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.h" line="68" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.h" bodystart="67" bodyend="82"/>
    <listofallmembers>
      <member refid="d5/d27/classCxxUtils_1_1ArrayIteratorChooser_1ae92711006c208cba098b09ea6f3d248f" prot="public" virt="non-virtual"><scope>CxxUtils::ArrayIteratorChooser</scope><name>const_iterator</name></member>
      <member refid="d5/d27/classCxxUtils_1_1ArrayIteratorChooser_1af8b4ab406779e0d7e86746cc78edb0a7" prot="public" virt="non-virtual"><scope>CxxUtils::ArrayIteratorChooser</scope><name>make_iterator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
