<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d6/d4c/compare-string_8h" kind="file">
    <compoundname>compare-string.h</compoundname>
    <includedby refid="d7/d3a/libcalg_8h" local="no">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/libcalg.h</includedby>
    <invincdepgraph>
      <node id="108147">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/libcalg.h</label>
        <link refid="d7/d3a/libcalg_8h_source"/>
      </node>
      <node id="108146">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/compare-string.h</label>
        <link refid="compare-string.h"/>
        <childnode refid="108147" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="d6/d4c/compare-string_8h_1a7ce41711c0a4b7a00ec037de05356cc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int string_equal</definition>
        <argsstring>(void *string1, void *string2)</argsstring>
        <name>string_equal</name>
        <param>
          <type>void *</type>
          <declname>string1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>string2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare two strings to determine if they are equal.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string1</parametername>
</parameternamelist>
<parameterdescription>
<para>The first string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>string2</parametername>
</parameternamelist>
<parameterdescription>
<para>The second string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Non-zero if the strings are equal, zero if they are not equal. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/compare-string.h" line="50"/>
      </memberdef>
      <memberdef kind="function" id="d6/d4c/compare-string_8h_1a2a5a2e3c5df0303fd738b7ac5f6d1eca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int string_compare</definition>
        <argsstring>(void *string1, void *string2)</argsstring>
        <name>string_compare</name>
        <param>
          <type>void *</type>
          <declname>string1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>string2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare two strings.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string1</parametername>
</parameternamelist>
<parameterdescription>
<para>The first string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>string2</parametername>
</parameternamelist>
<parameterdescription>
<para>The second string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="d4/dc4/structA" kindref="compound">A</ref> negative value if the first string should be sorted before the second, a positive value if the first string should be sorted after the second, zero if the two strings are equal. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/compare-string.h" line="63"/>
      </memberdef>
      <memberdef kind="function" id="d6/d4c/compare-string_8h_1a14555072c6617493f44e084023400b33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int string_nocase_equal</definition>
        <argsstring>(void *string1, void *string2)</argsstring>
        <name>string_nocase_equal</name>
        <param>
          <type>void *</type>
          <declname>string1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>string2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare two strings to determine if they are equal, ignoring the case of letters.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string1</parametername>
</parameternamelist>
<parameterdescription>
<para>The first string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>string2</parametername>
</parameternamelist>
<parameterdescription>
<para>The second string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Non-zero if the strings are equal, zero if they are not equal. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/compare-string.h" line="75"/>
      </memberdef>
      <memberdef kind="function" id="d6/d4c/compare-string_8h_1a794aabb07ad7323799756c8bb84844c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int string_nocase_compare</definition>
        <argsstring>(void *string1, void *string2)</argsstring>
        <name>string_nocase_compare</name>
        <param>
          <type>void *</type>
          <declname>string1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>string2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare two strings, ignoring the case of letters.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string1</parametername>
</parameternamelist>
<parameterdescription>
<para>The first string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>string2</parametername>
</parameternamelist>
<parameterdescription>
<para>The second string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="d4/dc4/structA" kindref="compound">A</ref> negative value if the first string should be sorted before the second, a positive value if the first string should be sorted after the second, zero if the two strings are equal. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/compare-string.h" line="88"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Comparison functions for strings.</para><para>To find the difference between two strings, use <ref refid="d6/d4c/compare-string_8h_1a2a5a2e3c5df0303fd738b7ac5f6d1eca" kindref="member">string_compare</ref>.</para><para>To find if two strings are equal, use <ref refid="d6/d4c/compare-string_8h_1a7ce41711c0a4b7a00ec037de05356cc1" kindref="member">string_equal</ref>.</para><para>For case insensitive versions, see <ref refid="d6/d4c/compare-string_8h_1a794aabb07ad7323799756c8bb84844c7" kindref="member">string_nocase_compare</ref> and <ref refid="d6/d4c/compare-string_8h_1a14555072c6617493f44e084023400b33" kindref="member">string_nocase_equal</ref>. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">Copyright<sp/>(c)<sp/>2005-2008,<sp/>Simon<sp/>Howard</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment">Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment">for<sp/>any<sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment">that<sp/>the<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment">in<sp/>all<sp/>copies.<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment">THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/></highlight></codeline>
<codeline lineno="11"><highlight class="comment">WARRANTIES<sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment">WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/></highlight></codeline>
<codeline lineno="13"><highlight class="comment">AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment">CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES<sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="comment">LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="comment">NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17"><highlight class="comment">CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.<sp/></highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor">#ifndef<sp/>ALGORITHM_COMPARE_STRING_H</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ALGORITHM_COMPARE_STRING_H</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="50"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d6/d4c/compare-string_8h_1a7ce41711c0a4b7a00ec037de05356cc1" kindref="member">string_equal</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*string1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*string2);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d6/d4c/compare-string_8h_1a2a5a2e3c5df0303fd738b7ac5f6d1eca" kindref="member">string_compare</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*string1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*string2);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d6/d4c/compare-string_8h_1a14555072c6617493f44e084023400b33" kindref="member">string_nocase_equal</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*string1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*string2);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d6/d4c/compare-string_8h_1a794aabb07ad7323799756c8bb84844c7" kindref="member">string_nocase_compare</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*string1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*string2);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>#ifndef<sp/>ALGORITHM_COMPARE_STRING_H<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/libcalg/compare-string.h"/>
  </compounddef>
</doxygen>
