<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d6/d29/InDetTrackSystematicsTool_8cxx" kind="file">
    <compoundname>InDetTrackSystematicsTool.cxx</compoundname>
    <includes refid="dd/d95/InDetTrackSystematicsTool_8h" local="yes">InDetTrackSystematicsTools/InDetTrackSystematicsTool.h</includes>
    <includes refid="de/d22/SystematicRegistry_8h" local="yes">PATInterfaces/SystematicRegistry.h</includes>
    <includes refid="d3/d32/PathResolver_8h" local="yes">PathResolver/PathResolver.h</includes>
    <includes local="yes">TFile.h</includes>
    <incdepgraph>
      <node id="139486">
        <label>AsgTools/IAsgTool.h</label>
        <link refid="df/dd4/IAsgTool_8h_source"/>
        <childnode refid="139475" relation="include">
        </childnode>
        <childnode refid="139485" relation="include">
        </childnode>
        <childnode refid="139487" relation="include">
        </childnode>
        <childnode refid="139488" relation="include">
        </childnode>
      </node>
      <node id="139496">
        <label>functional</label>
      </node>
      <node id="139492">
        <label>PATInterfaces/ISystematicsTool.h</label>
        <link refid="d6/db3/ISystematicsTool_8h_source"/>
        <childnode refid="139486" relation="include">
        </childnode>
        <childnode refid="139493" relation="include">
        </childnode>
        <childnode refid="139479" relation="include">
        </childnode>
        <childnode refid="139494" relation="include">
        </childnode>
      </node>
      <node id="139488">
        <label>GaudiKernel/IAlgTool.h</label>
      </node>
      <node id="139505">
        <label>AthenaBaseComps/AthMsgStreamMacros.h</label>
      </node>
      <node id="139489">
        <label>AsgTools/MsgLevel.h</label>
        <link refid="de/d80/MsgLevel_8h"/>
        <childnode refid="139475" relation="include">
        </childnode>
        <childnode refid="139485" relation="include">
        </childnode>
        <childnode refid="139490" relation="include">
        </childnode>
      </node>
      <node id="139485">
        <label>AsgTools/AsgToolsConf.h</label>
        <link refid="df/db7/AsgToolsConf_8h_source"/>
      </node>
      <node id="139475">
        <label>string</label>
      </node>
      <node id="139476">
        <label>map</label>
      </node>
      <node id="139478">
        <label>InDetTrackSystematicsTools/InDetTrackSystematics.h</label>
        <link refid="de/d93/InDetTrackSystematics_8h_source"/>
        <childnode refid="139479" relation="include">
        </childnode>
        <childnode refid="139483" relation="include">
        </childnode>
      </node>
      <node id="139490">
        <label>GaudiKernel/IMessageSvc.h</label>
      </node>
      <node id="139494">
        <label>PATInterfaces/SystematicSet.h</label>
        <link refid="d4/db8/SystematicSet_8h_source"/>
        <childnode refid="139480" relation="include">
        </childnode>
        <childnode refid="139482" relation="include">
        </childnode>
        <childnode refid="139495" relation="include">
        </childnode>
        <childnode refid="139475" relation="include">
        </childnode>
        <childnode refid="139496" relation="include">
        </childnode>
        <childnode refid="139493" relation="include">
        </childnode>
        <childnode refid="139479" relation="include">
        </childnode>
      </node>
      <node id="139479">
        <label>PATInterfaces/SystematicVariation.h</label>
        <link refid="d1/def/SystematicVariation_8h_source"/>
        <childnode refid="139480" relation="include">
        </childnode>
        <childnode refid="139481" relation="include">
        </childnode>
        <childnode refid="139482" relation="include">
        </childnode>
        <childnode refid="139475" relation="include">
        </childnode>
      </node>
      <node id="139480">
        <label>PATInterfaces/Global.h</label>
        <link refid="dd/d0c/PATInterfaces_2PATInterfaces_2Global_8h_source"/>
      </node>
      <node id="139504">
        <label>AsgTools/MsgStreamMacros.h</label>
        <link refid="d3/ded/AsgTools_2AsgTools_2MsgStreamMacros_8h_source"/>
        <childnode refid="139485" relation="include">
        </childnode>
        <childnode refid="139489" relation="include">
        </childnode>
        <childnode refid="139505" relation="include">
        </childnode>
      </node>
      <node id="139495">
        <label>vector</label>
      </node>
      <node id="139498">
        <label>PATInterfaces/SystematicRegistry.h</label>
        <link refid="de/d22/SystematicRegistry_8h_source"/>
        <childnode refid="139480" relation="include">
        </childnode>
        <childnode refid="139494" relation="include">
        </childnode>
      </node>
      <node id="139497">
        <label>TFile.h</label>
      </node>
      <node id="139473">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/InDetTrackSystematicsTools/Root/InDetTrackSystematicsTool.cxx</label>
        <link refid="InDetTrackSystematicsTool.cxx"/>
        <childnode refid="139474" relation="include">
        </childnode>
        <childnode refid="139498" relation="include">
        </childnode>
        <childnode refid="139499" relation="include">
        </childnode>
        <childnode refid="139497" relation="include">
        </childnode>
      </node>
      <node id="139502">
        <label>sstream</label>
      </node>
      <node id="139481">
        <label>iosfwd</label>
      </node>
      <node id="139503">
        <label>GaudiKernel/MsgStream.h</label>
      </node>
      <node id="139483">
        <label>unordered_map</label>
      </node>
      <node id="139501">
        <label>AsgTools/MsgStream.h</label>
        <link refid="d3/d95/AsgTools_2AsgTools_2MsgStream_8h_source"/>
        <childnode refid="139475" relation="include">
        </childnode>
        <childnode refid="139502" relation="include">
        </childnode>
        <childnode refid="139485" relation="include">
        </childnode>
        <childnode refid="139489" relation="include">
        </childnode>
        <childnode refid="139486" relation="include">
        </childnode>
        <childnode refid="139503" relation="include">
        </childnode>
      </node>
      <node id="139487">
        <label>AsgTools/AsgToolMacros.h</label>
        <link refid="d1/d68/AsgToolMacros_8h_source"/>
      </node>
      <node id="139499">
        <label>PathResolver/PathResolver.h</label>
        <link refid="d3/d32/PathResolver_8h_source"/>
        <childnode refid="139500" relation="include">
        </childnode>
        <childnode refid="139475" relation="include">
        </childnode>
      </node>
      <node id="139500">
        <label>AsgTools/AsgMessaging.h</label>
        <link refid="d3/d61/AsgMessaging_8h_source"/>
        <childnode refid="139475" relation="include">
        </childnode>
        <childnode refid="139485" relation="include">
        </childnode>
        <childnode refid="139501" relation="include">
        </childnode>
        <childnode refid="139504" relation="include">
        </childnode>
      </node>
      <node id="139482">
        <label>set</label>
      </node>
      <node id="139484">
        <label>AsgTools/AsgTool.h</label>
        <link refid="d4/d29/AsgTool_8h_source"/>
        <childnode refid="139485" relation="include">
        </childnode>
        <childnode refid="139486" relation="include">
        </childnode>
        <childnode refid="139489" relation="include">
        </childnode>
        <childnode refid="139491" relation="include">
        </childnode>
      </node>
      <node id="139491">
        <label>AsgTools/SetProperty.h</label>
        <link refid="df/db0/SetProperty_8h_source"/>
      </node>
      <node id="139493">
        <label>PATInterfaces/SystematicCode.h</label>
        <link refid="df/df5/SystematicCode_8h_source"/>
      </node>
      <node id="139477">
        <label>memory</label>
      </node>
      <node id="139474">
        <label>InDetTrackSystematicsTools/InDetTrackSystematicsTool.h</label>
        <link refid="dd/d95/InDetTrackSystematicsTool_8h_source"/>
        <childnode refid="139475" relation="include">
        </childnode>
        <childnode refid="139476" relation="include">
        </childnode>
        <childnode refid="139477" relation="include">
        </childnode>
        <childnode refid="139478" relation="include">
        </childnode>
        <childnode refid="139484" relation="include">
        </childnode>
        <childnode refid="139492" relation="include">
        </childnode>
        <childnode refid="139494" relation="include">
        </childnode>
        <childnode refid="139497" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="dd/dff/namespaceInDet">InDet</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;InDetTrackSystematicsTools/InDetTrackSystematicsTool.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;PATInterfaces/SystematicRegistry.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;PathResolver/PathResolver.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TFile.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::string;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">InDet<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/>InDetTrackSystematicsTool::InDetTrackSystematicsTool(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>name<sp/>)</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>asg::AsgTool(name)</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>StatusCode<sp/>InDetTrackSystematicsTool::initialize()</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>the<sp/>affecting<sp/>systematics<sp/>to<sp/>the<sp/>registry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>registry<sp/>=<sp/><ref refid="d4/d6e/classCP_1_1SystematicRegistry_1a6bfc41e5ad75c56240e635dba9423ad1" kindref="member" tooltip="Get the singleton instance of the registry.">CP::SystematicRegistry::getInstance</ref>();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(registry.registerSystematics(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>!=<sp/><ref refid="d1/d38/classCP_1_1SystematicCode_1a07da906f4dfdca0598ec3a4ac9bfb686ae0356fe67c0b21740893766ab2f334aa" kindref="member" tooltip="The requested systematic will be applied.">CP::SystematicCode::Ok</ref>)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>register<sp/>systematics&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>InDetTrackSystematicsTool::isAffectedBySystematic(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d2d/classCP_1_1SystematicVariation" kindref="compound">CP::SystematicVariation</ref>&amp;<sp/>systematic<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="30"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>affSysts<sp/>=<sp/>affectingSystematics();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>affSysts.find(systematic)<sp/>!=<sp/>affSysts.end()<sp/>);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">CP::SystematicSet</ref><sp/>InDetTrackSystematicsTool::recommendedSystematics()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="36"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it&apos;s<sp/>probably<sp/>a<sp/>good<sp/>idea<sp/>to<sp/>change<sp/>this<sp/>behavior<sp/>to<sp/>return<sp/>a<sp/>more<sp/>intelligently<sp/>thought-out<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>affectingSystematics();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><ref refid="d1/d38/classCP_1_1SystematicCode" kindref="compound">CP::SystematicCode</ref><sp/>InDetTrackSystematicsTool::applySystematicVariation(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">CP::SystematicSet</ref>&amp;<sp/>systematics<sp/>)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>check<sp/>if<sp/>we<sp/>already<sp/>know<sp/>this<sp/>systematic<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>look<sp/>for<sp/>it<sp/>in<sp/>our<sp/>filter<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sysMapItr<sp/>=<sp/>m_sysFilterMap.find(systematics);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sysMapItr<sp/>==<sp/>m_sysFilterMap.end())<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>filter<sp/>the<sp/>input<sp/>systematic<sp/>with<sp/>the<sp/>affecting<sp/>systematics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">CP::SystematicSet</ref><sp/>affectingSysts<sp/>=<sp/>affectingSystematics();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">CP::SystematicSet</ref><sp/>filteredSysts;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="d4/d52/classCP_1_1SystematicSet_1aab3705cd204c44632901b94ab958d412" kindref="member">CP::SystematicSet::filterForAffectingSystematics</ref></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(systematics,<sp/>affectingSysts,<sp/>filteredSysts)<sp/>!=<sp/><ref refid="d1/d38/classCP_1_1SystematicCode_1a07da906f4dfdca0598ec3a4ac9bfb686ae0356fe67c0b21740893766ab2f334aa" kindref="member" tooltip="The requested systematic will be applied.">CP::SystematicCode::Ok</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(<sp/></highlight><highlight class="stringliteral">&quot;Recieved<sp/>unsupported<sp/>systematics:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>systematics.<ref refid="d4/d52/classCP_1_1SystematicSet_1af01661875334428bad90eb29174a5ae8" kindref="member">name</ref>()<sp/>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/d38/classCP_1_1SystematicCode_1a07da906f4dfdca0598ec3a4ac9bfb686a3bf0b760b0d2dc3b22292c97a3f16a03" kindref="member" tooltip="The requested systematic is not supported.">CP::SystematicCode::Unsupported</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>in<sp/>here<sp/>for<sp/>incompatible<sp/>systematics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>isIn<sp/>=<sp/>[&amp;](InDet::TrackSystematic<sp/>syst)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>helper<sp/>function<sp/>to<sp/>check<sp/>if<sp/>a<sp/>systematic<sp/>exists<sp/>in<sp/>the<sp/>filtered<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>filteredSysts.<ref refid="d4/d52/classCP_1_1SystematicSet_1ad2ade5846d7bf837c2679fa2e7628895" kindref="member" tooltip="description: find an element in the set">find</ref>(<sp/>InDet::TrackSystematicMap[<sp/>syst<sp/>]<sp/>)<sp/>!=<sp/>filteredSysts.<ref refid="d4/d52/classCP_1_1SystematicSet_1aa89eea0473b865d52295c272c7b5b944" kindref="member" tooltip="description: const iterator to the end of the set">end</ref>();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>isIn(<sp/>TRK_RES_D0_MEAS)<sp/>+<sp/>isIn(<sp/>TRK_RES_D0_MEAS_UP<sp/>)<sp/>+<sp/>isIn(<sp/>TRK_RES_D0_MEAS_DOWN<sp/>)<sp/>&gt;<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>only<sp/>have<sp/>1<sp/>of<sp/>these<sp/>options<sp/>simultantously</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(<sp/></highlight><highlight class="stringliteral">&quot;You<sp/>must<sp/>pick<sp/>only<sp/>one<sp/>choice<sp/>for<sp/>the<sp/>d0<sp/>resolution<sp/>systematic&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/d38/classCP_1_1SystematicCode_1a07da906f4dfdca0598ec3a4ac9bfb686a3bf0b760b0d2dc3b22292c97a3f16a03" kindref="member" tooltip="The requested systematic is not supported.">CP::SystematicCode::Unsupported</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>isIn(TRK_RES_Z0_MEAS)<sp/>+<sp/>isIn(<sp/>TRK_RES_Z0_MEAS_UP<sp/>)<sp/>+<sp/>isIn(<sp/>TRK_RES_Z0_MEAS_DOWN<sp/>)<sp/>&gt;<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(<sp/></highlight><highlight class="stringliteral">&quot;You<sp/>must<sp/>pick<sp/>only<sp/>one<sp/>choice<sp/>for<sp/>the<sp/>z0<sp/>resolution<sp/>systematic&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/d38/classCP_1_1SystematicCode_1a07da906f4dfdca0598ec3a4ac9bfb686a3bf0b760b0d2dc3b22292c97a3f16a03" kindref="member" tooltip="The requested systematic is not supported.">CP::SystematicCode::Unsupported</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isSetTrkLoose<sp/>=<sp/>isIn(<sp/>TRK_FAKE_RATE_LOOSE<sp/>)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>||<sp/>isIn(<sp/>TRK_EFF_LOOSE_GLOBAL<sp/>)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>||<sp/>isIn(<sp/>TRK_EFF_LOOSE_IBL<sp/>)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>||<sp/>isIn(<sp/>TRK_EFF_LOOSE_PP0<sp/>)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>||<sp/>isIn(<sp/>TRK_EFF_LOOSE_PHYSMODEL<sp/>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isSetTrkTight<sp/>=<sp/>isIn(<sp/>TRK_FAKE_RATE_TIGHT<sp/>)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>||<sp/>isIn(<sp/>TRK_EFF_TIGHT_GLOBAL<sp/>)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>||<sp/>isIn(<sp/>TRK_EFF_TIGHT_IBL<sp/>)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>||<sp/>isIn(<sp/>TRK_EFF_TIGHT_PP0<sp/>)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>||<sp/>isIn(<sp/>TRK_EFF_TIGHT_PHYSMODEL<sp/>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>isSetTrkLoose<sp/>&amp;&amp;<sp/>isSetTrkTight)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(<sp/></highlight><highlight class="stringliteral">&quot;Both<sp/>Loose<sp/>and<sp/>TightPrimary<sp/>versions<sp/>of<sp/>systematics<sp/>are<sp/>simultaneously<sp/>active.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/d38/classCP_1_1SystematicCode_1a07da906f4dfdca0598ec3a4ac9bfb686a3bf0b760b0d2dc3b22292c97a3f16a03" kindref="member" tooltip="The requested systematic is not supported.">CP::SystematicCode::Unsupported</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>systematics<sp/>set<sp/>looks<sp/>supported,<sp/>then<sp/>insert<sp/>it<sp/>into<sp/>the<sp/>map<sp/>for<sp/>future<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sysMapItr<sp/>=<sp/>m_sysFilterMap.insert(std::make_pair(systematics,<sp/>filteredSysts)).first;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>m_activeSysts<sp/>=<sp/>&amp;sysMapItr-&gt;second;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/d38/classCP_1_1SystematicCode_1a07da906f4dfdca0598ec3a4ac9bfb686ae0356fe67c0b21740893766ab2f334aa" kindref="member" tooltip="The requested systematic will be applied.">CP::SystematicCode::Ok</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>InDetTrackSystematicsTool::isActive(<sp/>TrackSystematic<sp/>syst<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="98"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_activeSysts<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(<sp/></highlight><highlight class="stringliteral">&quot;applySystematicsVariation()<sp/>has<sp/>not<sp/>been<sp/>successfully<sp/>called.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it_syst<sp/>=<sp/>m_activeSysts-&gt;<ref refid="d4/d52/classCP_1_1SystematicSet_1ad2ade5846d7bf837c2679fa2e7628895" kindref="member" tooltip="description: find an element in the set">find</ref>(InDet::TrackSystematicMap[syst]);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it_syst<sp/>!=<sp/>m_activeSysts-&gt;<ref refid="d4/d52/classCP_1_1SystematicSet_1aa89eea0473b865d52295c272c7b5b944" kindref="member" tooltip="description: const iterator to the end of the set">end</ref>();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>TFile*<sp/><ref refid="d3/d6b/classInDet_1_1InDetTrackSystematicsTool_1a4cf913ceb5ff72d85f85122b67a20c3c" kindref="member">InDetTrackSystematicsTool::getFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>filename)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="108"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>the<sp/>files<sp/>are<sp/>stored<sp/>in<sp/>the<sp/>calibration<sp/>area</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>filenameWithPath<sp/>=<sp/>PathResolverFindCalibFile</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;InDetTrackSystematicsTools/CalibData_20.7_2016_EOYE-v06/&quot;</highlight><highlight class="normal"><sp/>+<sp/>filename);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>TFile*<sp/>file<sp/>=<sp/><sp/>TFile::Open(filenameWithPath.data(),<sp/></highlight><highlight class="stringliteral">&quot;READ&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>filename<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>in<sp/>the<sp/>calibration<sp/>database.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(<sp/></highlight><highlight class="stringliteral">&quot;Will<sp/>now<sp/>look<sp/>in<sp/>InDetTrackSystematicsTools/data/<sp/>.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(<sp/></highlight><highlight class="stringliteral">&quot;You<sp/>should<sp/>not<sp/>see<sp/>this<sp/>message<sp/>unless<sp/>you<sp/>are<sp/>a<sp/>dev<sp/>testing<sp/>a<sp/>new<sp/>file.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>XAOD_STANDALONE</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>filenameWithPath<sp/>=<sp/>PathResolverFindCalibFile(</highlight><highlight class="stringliteral">&quot;$ROOTCOREBIN/data/InDetTrackSystematicsTools/&quot;</highlight><highlight class="normal"><sp/>+<sp/>filename);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="120"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>filenameWithPath<sp/>=<sp/>PathResolverFindDataFile(</highlight><highlight class="stringliteral">&quot;InDetTrackSystematicsTools/data/&quot;</highlight><highlight class="normal"><sp/>+<sp/>filename);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>file<sp/>=<sp/>TFile::Open(filenameWithPath.data(),<sp/></highlight><highlight class="stringliteral">&quot;READ&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/InDetTrackSystematicsTools/Root/InDetTrackSystematicsTool.cxx"/>
  </compounddef>
</doxygen>
