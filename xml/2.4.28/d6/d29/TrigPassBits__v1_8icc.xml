<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d6/d29/TrigPassBits__v1_8icc" kind="file">
    <compoundname>TrigPassBits_v1.icc</compoundname>
    <includes local="no">stdexcept</includes>
    <includes refid="de/d1a/normalizedTypeinfoName_8h" local="yes">AthContainers/normalizedTypeinfoName.h</includes>
    <includes refid="d6/d20/xAODCore_2xAODCore_2CLASS__DEF_8h" local="yes">xAODCore/CLASS_DEF.h</includes>
    <includedby refid="de/d58/TrigPassBits__v1_8h" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigPassBits_v1.h</includedby>
    <incdepgraph>
      <node id="451455">
        <label>AthContainers/normalizedTypeinfoName.h</label>
        <link refid="de/d1a/normalizedTypeinfoName_8h"/>
        <childnode refid="451456" relation="include">
        </childnode>
        <childnode refid="451457" relation="include">
        </childnode>
      </node>
      <node id="451454">
        <label>stdexcept</label>
      </node>
      <node id="451456">
        <label>string</label>
      </node>
      <node id="451453">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigPassBits_v1.icc</label>
        <link refid="TrigPassBits_v1.icc"/>
        <childnode refid="451454" relation="include">
        </childnode>
        <childnode refid="451455" relation="include">
        </childnode>
        <childnode refid="451458" relation="include">
        </childnode>
      </node>
      <node id="451457">
        <label>typeinfo</label>
      </node>
      <node id="451459">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="451458">
        <label>xAODCore/CLASS_DEF.h</label>
        <link refid="d6/d20/xAODCore_2xAODCore_2CLASS__DEF_8h"/>
        <childnode refid="451459" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="451465">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/xAODTriggerDict.h</label>
        <link refid="d8/db2/xAODTriggerDict_8h_source"/>
      </node>
      <node id="451463">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/TrigPassBitsContainer.h</label>
        <link refid="d2/dcc/TrigPassBitsContainer_8h_source"/>
      </node>
      <node id="451461">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigPassBits_v1.h</label>
        <link refid="de/d58/TrigPassBits__v1_8h_source"/>
        <childnode refid="451462" relation="include">
        </childnode>
        <childnode refid="451464" relation="include">
        </childnode>
        <childnode refid="451465" relation="include">
        </childnode>
      </node>
      <node id="451460">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigPassBits_v1.icc</label>
        <link refid="TrigPassBits_v1.icc"/>
        <childnode refid="451461" relation="include">
        </childnode>
      </node>
      <node id="451462">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/TrigPassBits.h</label>
        <link refid="dd/d39/xAODTrigger_2xAODTrigger_2TrigPassBits_8h_source"/>
        <childnode refid="451463" relation="include">
        </childnode>
      </node>
      <node id="451464">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigPassBitsContainer_v1.h</label>
        <link refid="d8/d69/TrigPassBitsContainer__v1_8h_source"/>
        <childnode refid="451463" relation="include">
        </childnode>
        <childnode refid="451465" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="dd/d44/namespacexAOD">xAOD</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Dear<sp/>emacs,<sp/>this<sp/>is<sp/>-*-<sp/>c++<sp/>-*-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>$Id:<sp/>TrigPassBits_v1.icc<sp/>704009<sp/>2015-10-28<sp/>08:32:05Z<sp/>krasznaa<sp/>$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>XAODTRIGGER_VERSIONS_TRIGPASSBITS_V1_ICC</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>XAODTRIGGER_VERSIONS_TRIGPASSBITS_V1_ICC</highlight></codeline>
<codeline lineno="5"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>System<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>xAOD<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="de/d1a/normalizedTypeinfoName_8h" kindref="compound" tooltip="Convert a type_info to a normalized string representation (matching the names used...">AthContainers/normalizedTypeinfoName.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d6/d20/xAODCore_2xAODCore_2CLASS__DEF_8h" kindref="compound" tooltip="File providing the different SG_BASE macros.">xAODCore/CLASS_DEF.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">xAOD<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CONT<sp/>&gt;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/dc1/classxAOD_1_1TrigPassBits__v1_1a623213e4b400bb8bee6cf9dbf75eae56" kindref="member" tooltip="Function configuring and resetting the object for a new target.">TrigPassBits_v1::reset</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CONT*<sp/>container,<sp/>uint32_t<sp/>containerKey<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>all<sp/>internal<sp/>variables:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_container<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>container<sp/>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/dc1/classxAOD_1_1TrigPassBits__v1_1a8ba96aecc568d354b9baf92a86fc9892" kindref="member" tooltip="Set the size of the target container.">setSize</ref>(<sp/>container-&gt;size()<sp/>);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>container-&gt;size()<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/dc1/classxAOD_1_1TrigPassBits__v1_1a3b66899807ab062d63159bcc9b9514eb" kindref="member" tooltip="Set the internal bitmap directly (not recommended).">setPassBits</ref>(<sp/>std::vector&lt;<sp/>uint32_t<sp/>&gt;()<sp/>);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/dc1/classxAOD_1_1TrigPassBits__v1_1a3b66899807ab062d63159bcc9b9514eb" kindref="member" tooltip="Set the internal bitmap directly (not recommended).">setPassBits</ref>(<sp/>std::vector&lt;<sp/>uint32_t<sp/>&gt;(<sp/>(<sp/>(<sp/>container-&gt;size()<sp/>-<sp/>1<sp/>)<sp/>/</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>32<sp/>)<sp/>+<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/dc1/classxAOD_1_1TrigPassBits__v1_1a38bf3385c1b40e3a2c55aaae979637d9" kindref="member" tooltip="Set the hashed SG key of the target container.">setContainerKey</ref>(<sp/>containerKey<sp/>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/dc1/classxAOD_1_1TrigPassBits__v1_1afaabc84dadc7ecf137a72baadefbb47e" kindref="member" tooltip="Set the CLID of the target container.">setContainerClid</ref>(<sp/><ref refid="d0/dbd/structClassID__traits" kindref="compound">ClassID_traits&lt; CONT &gt;::ID</ref>()<sp/>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>OBJ,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CONT<sp/>&gt;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/dc1/classxAOD_1_1TrigPassBits__v1_1acd0dc9daa8b1022372b9022bb3f6af39" kindref="member" tooltip="Mark one of the elements of the target container as passing/failing.">TrigPassBits_v1::markPassing</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>OBJ*<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CONT*<sp/>container,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>passed<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>we<sp/>received<sp/>the<sp/>correct<sp/>container:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_container<sp/>&amp;&amp;<sp/>(<sp/>m_container<sp/>!=<sp/>container<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<sp/></highlight><highlight class="stringliteral">&quot;Function<sp/>called<sp/>with<sp/>a<sp/>wrong<sp/>container&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>element<sp/>in<sp/>the<sp/>container:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>itr<sp/>=<sp/>std::find(<sp/>container-&gt;begin(),<sp/>container-&gt;end(),<sp/>obj<sp/>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>itr<sp/>==<sp/>container-&gt;end()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<sp/></highlight><highlight class="stringliteral">&quot;Specified<sp/>object<sp/>is<sp/>not<sp/>part<sp/>of<sp/>the<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;specified<sp/>container&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>the<sp/>non-templated<sp/>function<sp/>to<sp/>set<sp/>the<sp/>bit:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/dc1/classxAOD_1_1TrigPassBits__v1_1acd0dc9daa8b1022372b9022bb3f6af39" kindref="member" tooltip="Mark one of the elements of the target container as passing/failing.">markPassing</ref>(<sp/>itr<sp/>-<sp/>container-&gt;begin(),<sp/>passed<sp/>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>OBJ,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CONT<sp/>&gt;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/dc1/classxAOD_1_1TrigPassBits__v1_1a282b68e17217ae29465da764e545f85f" kindref="member" tooltip="Check if an element of a container is passing/failing.">TrigPassBits_v1::isPassing</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>OBJ*<sp/>obj,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CONT*<sp/>container<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>we<sp/>received<sp/>the<sp/>correct<sp/>container:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_container<sp/>&amp;&amp;<sp/>(<sp/>m_container<sp/>!=<sp/>container<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<sp/></highlight><highlight class="stringliteral">&quot;Function<sp/>called<sp/>with<sp/>a<sp/>wrong<sp/>container&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>element<sp/>in<sp/>the<sp/>container:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>itr<sp/>=<sp/>std::find(<sp/>container-&gt;begin(),<sp/>container-&gt;end(),<sp/>obj<sp/>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>itr<sp/>==<sp/>container-&gt;end()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<sp/></highlight><highlight class="stringliteral">&quot;Specified<sp/>object<sp/>is<sp/>not<sp/>part<sp/>of<sp/>the<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;specified<sp/>container&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>the<sp/>non-templated<sp/>function<sp/>to<sp/>check<sp/>the<sp/>status<sp/>of<sp/>the<sp/>bit:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d9/dc1/classxAOD_1_1TrigPassBits__v1_1a282b68e17217ae29465da764e545f85f" kindref="member" tooltip="Check if an element of a container is passing/failing.">isPassing</ref>(<sp/>itr<sp/>-<sp/>container-&gt;begin()<sp/>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CONT<sp/>&gt;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/>std::unique_ptr&lt;<sp/>TrigPassBits_v1<sp/>&gt;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><ref refid="dd/d44/namespacexAOD_1a05951db81bcc33e3be1b181918e3c0df" kindref="member" tooltip="Helper function creating a new object to describe a target container.">makeTrigPassBits</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CONT*<sp/>container,<sp/>uint32_t<sp/>containerKey<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>new<sp/>object:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;<sp/>TrigPassBits_v1<sp/>&gt;<sp/>result(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TrigPassBits_v1()<sp/>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Give<sp/>it<sp/>a<sp/>private<sp/>auxiliary<sp/>store:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;makePrivateStore();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>it<sp/>up:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;reset(<sp/>container,<sp/>containerKey<sp/>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>now<sp/>return<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>xAOD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>XAODTRIGGER_VERSIONS_TRIGPASSBITS_V1_ICC</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/TrigPassBits_v1.icc"/>
  </compounddef>
</doxygen>
