<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d6/d2b/BPhysHelper_8cxx" kind="file">
    <compoundname>BPhysHelper.cxx</compoundname>
    <includes refid="d0/de1/BPhysHelper_8h" local="yes">xAODBPhys/BPhysHelper.h</includes>
    <includes refid="d2/d15/TrackParticle_8h" local="yes">xAODTracking/TrackParticle.h</includes>
    <includes refid="d9/d2d/Vertex_8h" local="yes">xAODTracking/Vertex.h</includes>
    <includes refid="d6/dd8/VertexContainer_8h" local="yes">xAODTracking/VertexContainer.h</includes>
    <incdepgraph>
      <node id="343659">
        <label>list</label>
      </node>
      <node id="343668">
        <label>AthContainers/tools/DVL_algorithms.icc</label>
        <link refid="df/daa/DVL__algorithms_8icc"/>
        <childnode refid="343653" relation="include">
        </childnode>
        <childnode refid="343660" relation="include">
        </childnode>
        <childnode refid="343644" relation="include">
        </childnode>
        <childnode refid="343649" relation="include">
        </childnode>
        <childnode refid="343585" relation="include">
        </childnode>
      </node>
      <node id="343653">
        <label>AthContainers/tools/DVLNoBase.h</label>
        <link refid="d7/d92/DVLNoBase_8h"/>
      </node>
      <node id="343623">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="343675">
        <label>AthContainers/tools/DVLDataBucket.h</label>
        <link refid="d4/d16/DVLDataBucket_8h"/>
        <childnode refid="343676" relation="include">
        </childnode>
        <childnode refid="343654" relation="include">
        </childnode>
        <childnode refid="343593" relation="include">
        </childnode>
        <childnode refid="343677" relation="include">
        </childnode>
      </node>
      <node id="343727">
        <label>xAODMuon/versions/MuonContainer_v1.h</label>
        <link refid="da/d0b/MuonContainer__v1_8h_source"/>
        <childnode refid="343609" relation="include">
        </childnode>
        <childnode refid="343579" relation="include">
        </childnode>
        <childnode refid="343685" relation="include">
        </childnode>
      </node>
      <node id="343640">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="343584" relation="include">
        </childnode>
        <childnode refid="343586" relation="include">
        </childnode>
        <childnode refid="343593" relation="include">
        </childnode>
        <childnode refid="343594" relation="include">
        </childnode>
      </node>
      <node id="343642">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="343602" relation="include">
        </childnode>
        <childnode refid="343582" relation="include">
        </childnode>
        <childnode refid="343643" relation="include">
        </childnode>
        <childnode refid="343603" relation="include">
        </childnode>
      </node>
      <node id="343641">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="343698">
        <label>EventPrimitives/EventPrimitives.h</label>
        <link refid="d1/d54/EventPrimitives_8h_source"/>
        <childnode refid="343699" relation="include">
        </childnode>
        <childnode refid="343700" relation="include">
        </childnode>
        <childnode refid="343701" relation="include">
        </childnode>
      </node>
      <node id="343592">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="343683">
        <label>xAODMuon/MuonContainer.h</label>
        <link refid="dc/dd9/MuonContainer_8h_source"/>
        <childnode refid="343684" relation="include">
        </childnode>
        <childnode refid="343727" relation="include">
        </childnode>
        <childnode refid="343707" relation="include">
        </childnode>
      </node>
      <node id="343594">
        <label>functional</label>
      </node>
      <node id="343650">
        <label>boost/version.hpp</label>
      </node>
      <node id="343590">
        <label>limits</label>
      </node>
      <node id="343643">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="343621">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="343730">
        <label>assert.h</label>
      </node>
      <node id="343587">
        <label>iterator</label>
      </node>
      <node id="343717">
        <label>xAODCaloEvent/versions/CaloClusterBadChannelData_v1.h</label>
        <link refid="d5/d3a/CaloClusterBadChannelData__v1_8h_source"/>
        <childnode refid="343714" relation="include">
        </childnode>
        <childnode refid="343607" relation="include">
        </childnode>
      </node>
      <node id="343604">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="343591" relation="include">
        </childnode>
        <childnode refid="343605" relation="include">
        </childnode>
      </node>
      <node id="343719">
        <label>CaloEvent/CaloRecoStatus.h</label>
      </node>
      <node id="343674">
        <label>SGTools/ClassName.h</label>
      </node>
      <node id="343684">
        <label>xAODMuon/Muon.h</label>
        <link refid="d2/dfd/Muon_8h_source"/>
        <childnode refid="343685" relation="include">
        </childnode>
      </node>
      <node id="343680">
        <label>AthContainers/DataVector.icc</label>
        <link refid="da/de6/DataVector_8icc"/>
        <childnode refid="343681" relation="include">
        </childnode>
        <childnode refid="343648" relation="include">
        </childnode>
        <childnode refid="343590" relation="include">
        </childnode>
        <childnode refid="343594" relation="include">
        </childnode>
        <childnode refid="343682" relation="include">
        </childnode>
      </node>
      <node id="343580">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="343581" relation="include">
        </childnode>
        <childnode refid="343595" relation="include">
        </childnode>
        <childnode refid="343596" relation="include">
        </childnode>
        <childnode refid="343597" relation="include">
        </childnode>
        <childnode refid="343591" relation="include">
        </childnode>
      </node>
      <node id="343606">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="343607" relation="include">
        </childnode>
        <childnode refid="343588" relation="include">
        </childnode>
      </node>
      <node id="343609">
        <label>stdint.h</label>
      </node>
      <node id="343660">
        <label>AthContainers/tools/DVLCast.h</label>
        <link refid="df/d5c/DVLCast_8h"/>
        <childnode refid="343590" relation="include">
        </childnode>
        <childnode refid="343661" relation="include">
        </childnode>
        <childnode refid="343597" relation="include">
        </childnode>
        <childnode refid="343588" relation="include">
        </childnode>
        <childnode refid="343582" relation="include">
        </childnode>
      </node>
      <node id="343628">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="343582" relation="include">
        </childnode>
        <childnode refid="343597" relation="include">
        </childnode>
      </node>
      <node id="343599">
        <label>AthContainers/IndexTrackingPolicy.h</label>
        <link refid="d0/da5/IndexTrackingPolicy_8h"/>
      </node>
      <node id="343734">
        <label>Eigen/Geometry</label>
      </node>
      <node id="343612">
        <label>RVersion.h</label>
      </node>
      <node id="343583">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="343584" relation="include">
        </childnode>
        <childnode refid="343593" relation="include">
        </childnode>
        <childnode refid="343594" relation="include">
        </childnode>
      </node>
      <node id="343720">
        <label>xAODCaloEvent/versions/CaloClusterContainer_v1.h</label>
        <link refid="d8/dda/CaloClusterContainer__v1_8h_source"/>
        <childnode refid="343579" relation="include">
        </childnode>
        <childnode refid="343710" relation="include">
        </childnode>
        <childnode refid="343713" relation="include">
        </childnode>
      </node>
      <node id="343589">
        <label>cmath</label>
      </node>
      <node id="343647">
        <label>cassert</label>
      </node>
      <node id="343651">
        <label>boost/mpl/if.hpp</label>
      </node>
      <node id="343670">
        <label>boost/static_assert.hpp</label>
      </node>
      <node id="343722">
        <label>xAODMuon/MuonSegment.h</label>
        <link refid="de/d5b/MuonSegment_8h_source"/>
        <childnode refid="343723" relation="include">
        </childnode>
      </node>
      <node id="343596">
        <label>stdexcept</label>
      </node>
      <node id="343624">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="343700">
        <label>Eigen/Core</label>
      </node>
      <node id="343657">
        <label>boost/type_traits/is_pointer.hpp</label>
      </node>
      <node id="343578">
        <label>xAODTracking/VertexContainerFwd.h</label>
        <link refid="d0/dc4/VertexContainerFwd_8h_source"/>
        <childnode refid="343579" relation="include">
        </childnode>
        <childnode refid="343577" relation="include">
        </childnode>
      </node>
      <node id="343709">
        <label>xAODTracking/TrackParticleContainerFwd.h</label>
        <link refid="de/dea/TrackParticleContainerFwd_8h_source"/>
        <childnode refid="343579" relation="include">
        </childnode>
        <childnode refid="343710" relation="include">
        </childnode>
        <childnode refid="343576" relation="include">
        </childnode>
      </node>
      <node id="343665">
        <label>boost/iterator/iterator_adaptor.hpp</label>
      </node>
      <node id="343694">
        <label>TLorentzVector.h</label>
      </node>
      <node id="343714">
        <label>CaloGeoHelpers/CaloSampling.h</label>
        <link refid="d7/d85/CaloSampling_8h_source"/>
        <childnode refid="343591" relation="include">
        </childnode>
        <childnode refid="343715" relation="include">
        </childnode>
      </node>
      <node id="343591">
        <label>string</label>
      </node>
      <node id="343601">
        <label>AthContainers/AuxVectorData.h</label>
        <link refid="d9/df2/AuxVectorData_8h"/>
        <childnode refid="343581" relation="include">
        </childnode>
        <childnode refid="343602" relation="include">
        </childnode>
        <childnode refid="343604" relation="include">
        </childnode>
        <childnode refid="343606" relation="include">
        </childnode>
        <childnode refid="343608" relation="include">
        </childnode>
        <childnode refid="343614" relation="include">
        </childnode>
        <childnode refid="343615" relation="include">
        </childnode>
        <childnode refid="343616" relation="include">
        </childnode>
        <childnode refid="343607" relation="include">
        </childnode>
        <childnode refid="343586" relation="include">
        </childnode>
        <childnode refid="343588" relation="include">
        </childnode>
        <childnode refid="343617" relation="include">
        </childnode>
        <childnode refid="343618" relation="include">
        </childnode>
        <childnode refid="343619" relation="include">
        </childnode>
        <childnode refid="343625" relation="include">
        </childnode>
      </node>
      <node id="343627">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="343582" relation="include">
        </childnode>
        <childnode refid="343597" relation="include">
        </childnode>
      </node>
      <node id="343704">
        <label>versions/TrackParticle_v1.h</label>
        <link refid="d2/d7f/TrackParticle__v1_8h_source"/>
        <childnode refid="343690" relation="include">
        </childnode>
        <childnode refid="343609" relation="include">
        </childnode>
        <childnode refid="343686" relation="include">
        </childnode>
        <childnode refid="343579" relation="include">
        </childnode>
        <childnode refid="343693" relation="include">
        </childnode>
        <childnode refid="343697" relation="include">
        </childnode>
        <childnode refid="343578" relation="include">
        </childnode>
        <childnode refid="343705" relation="include">
        </childnode>
        <childnode refid="343706" relation="include">
        </childnode>
      </node>
      <node id="343617">
        <label>AthContainers/tools/likely.h</label>
        <link refid="d6/dd6/likely_8h"/>
      </node>
      <node id="343726">
        <label>xAODMuon/versions/MuonSegmentContainer_v1.h</label>
        <link refid="dd/dcd/MuonSegmentContainer__v1_8h_source"/>
        <childnode refid="343579" relation="include">
        </childnode>
        <childnode refid="343723" relation="include">
        </childnode>
      </node>
      <node id="343662">
        <label>AthContainers/tools/DVLIterator.h</label>
        <link refid="d3/dc7/DVLIterator_8h_source"/>
        <childnode refid="343598" relation="include">
        </childnode>
        <childnode refid="343660" relation="include">
        </childnode>
        <childnode refid="343663" relation="include">
        </childnode>
        <childnode refid="343665" relation="include">
        </childnode>
        <childnode refid="343650" relation="include">
        </childnode>
        <childnode refid="343587" relation="include">
        </childnode>
        <childnode refid="343588" relation="include">
        </childnode>
      </node>
      <node id="343676">
        <label>SGTools/DataBucket.h</label>
      </node>
      <node id="343691">
        <label>xAODPrimitives/IsolationType.h</label>
        <link refid="d2/d36/IsolationType_8h_source"/>
      </node>
      <node id="343677">
        <label>AthContainers/tools/DVLDataBucket.icc</label>
        <link refid="d3/d21/DVLDataBucket_8icc"/>
        <childnode refid="343678" relation="include">
        </childnode>
      </node>
      <node id="343689">
        <label>xAODPrimitives/IsolationCorrection.h</label>
        <link refid="d3/de5/xAODPrimitives_2xAODPrimitives_2IsolationCorrection_8h_source"/>
        <childnode refid="343690" relation="include">
        </childnode>
        <childnode refid="343607" relation="include">
        </childnode>
      </node>
      <node id="343678">
        <label>SGTools/IRegisterTransient.h</label>
      </node>
      <node id="343613">
        <label>RootMetaSelection.h</label>
      </node>
      <node id="343637">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="343735">
        <label>VxVertex/VxTrackAtVertex.h</label>
      </node>
      <node id="343667">
        <label>AthContainers/tools/DVL_algorithms.h</label>
        <link refid="d0/d7a/DVL__algorithms_8h"/>
        <childnode refid="343662" relation="include">
        </childnode>
        <childnode refid="343587" relation="include">
        </childnode>
        <childnode refid="343585" relation="include">
        </childnode>
        <childnode refid="343668" relation="include">
        </childnode>
      </node>
      <node id="343618">
        <label>AthContainers/tools/assume.h</label>
        <link refid="d2/d20/assume_8h"/>
      </node>
      <node id="343723">
        <label>versions/MuonSegment_v1.h</label>
        <link refid="df/d0d/MuonSegment__v1_8h_source"/>
        <childnode refid="343644" relation="include">
        </childnode>
        <childnode refid="343686" relation="include">
        </childnode>
        <childnode refid="343724" relation="include">
        </childnode>
        <childnode refid="343725" relation="include">
        </childnode>
      </node>
      <node id="343634">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="343744">
        <label>xAODTracking/VertexContainer.h</label>
        <link refid="d6/dd8/VertexContainer_8h_source"/>
        <childnode refid="343731" relation="include">
        </childnode>
        <childnode refid="343745" relation="include">
        </childnode>
        <childnode refid="343707" relation="include">
        </childnode>
      </node>
      <node id="343663">
        <label>AthContainers/tools/ElementProxy.h</label>
        <link refid="db/d26/ElementProxy_8h"/>
        <childnode refid="343598" relation="include">
        </childnode>
        <childnode refid="343611" relation="include">
        </childnode>
        <childnode refid="343593" relation="include">
        </childnode>
        <childnode refid="343664" relation="include">
        </childnode>
      </node>
      <node id="343645">
        <label>AthContainersInterfaces/IAuxElement.h</label>
        <link refid="dd/d7a/IAuxElement_8h"/>
      </node>
      <node id="343611">
        <label>AthLinks/tools/selection_ns.h</label>
        <link refid="d3/dec/selection__ns_8h"/>
        <childnode refid="343612" relation="include">
        </childnode>
        <childnode refid="343613" relation="include">
        </childnode>
      </node>
      <node id="343615">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="343622">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="343724">
        <label>MuonIdHelpers/MuonStationIndex.h</label>
        <link refid="d5/d3f/MuonStationIndex_8h_source"/>
        <childnode refid="343591" relation="include">
        </childnode>
        <childnode refid="343607" relation="include">
        </childnode>
      </node>
      <node id="343576">
        <label>xAODTracking/TrackParticleFwd.h</label>
        <link refid="d1/dc4/TrackParticleFwd_8h_source"/>
      </node>
      <node id="343661">
        <label>limits.h</label>
      </node>
      <node id="343721">
        <label>xAODMuon/MuonSegmentContainer.h</label>
        <link refid="d5/d26/MuonSegmentContainer_8h_source"/>
        <childnode refid="343722" relation="include">
        </childnode>
        <childnode refid="343726" relation="include">
        </childnode>
        <childnode refid="343707" relation="include">
        </childnode>
      </node>
      <node id="343729">
        <label>TMatrixTSym.h</label>
      </node>
      <node id="343655">
        <label>AthContainers/tools/ClassID.h</label>
        <link refid="de/de2/ClassID_8h"/>
        <childnode refid="343656" relation="include">
        </childnode>
      </node>
      <node id="343685">
        <label>versions/Muon_v1.h</label>
        <link refid="da/dde/Muon__v1_8h_source"/>
        <childnode refid="343644" relation="include">
        </childnode>
        <childnode refid="343686" relation="include">
        </childnode>
        <childnode refid="343689" relation="include">
        </childnode>
        <childnode refid="343691" relation="include">
        </childnode>
        <childnode refid="343692" relation="include">
        </childnode>
        <childnode refid="343693" relation="include">
        </childnode>
        <childnode refid="343697" relation="include">
        </childnode>
        <childnode refid="343702" relation="include">
        </childnode>
        <childnode refid="343711" relation="include">
        </childnode>
        <childnode refid="343721" relation="include">
        </childnode>
        <childnode refid="343690" relation="include">
        </childnode>
        <childnode refid="343609" relation="include">
        </childnode>
        <childnode refid="343707" relation="include">
        </childnode>
        <childnode refid="343579" relation="include">
        </childnode>
      </node>
      <node id="343745">
        <label>xAODTracking/versions/VertexContainer_v1.h</label>
        <link refid="d2/dda/VertexContainer__v1_8h_source"/>
        <childnode refid="343579" relation="include">
        </childnode>
        <childnode refid="343732" relation="include">
        </childnode>
      </node>
      <node id="343632">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="343604" relation="include">
        </childnode>
        <childnode refid="343590" relation="include">
        </childnode>
        <childnode refid="343609" relation="include">
        </childnode>
        <childnode refid="343633" relation="include">
        </childnode>
      </node>
      <node id="343581">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="343582" relation="include">
        </childnode>
        <childnode refid="343583" relation="include">
        </childnode>
      </node>
      <node id="343728">
        <label>TVector3.h</label>
      </node>
      <node id="343687">
        <label>AthLinks/ElementLinkBase.h</label>
        <link refid="d0/d16/ElementLinkBase_8h_source"/>
        <childnode refid="343609" relation="include">
        </childnode>
      </node>
      <node id="343701">
        <label>Eigen/Dense</label>
      </node>
      <node id="343584">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="343585" relation="include">
        </childnode>
        <childnode refid="343586" relation="include">
        </childnode>
        <childnode refid="343587" relation="include">
        </childnode>
        <childnode refid="343582" relation="include">
        </childnode>
        <childnode refid="343588" relation="include">
        </childnode>
        <childnode refid="343589" relation="include">
        </childnode>
        <childnode refid="343590" relation="include">
        </childnode>
        <childnode refid="343591" relation="include">
        </childnode>
        <childnode refid="343592" relation="include">
        </childnode>
      </node>
      <node id="343648">
        <label>AthContainers/tools/ATHCONTAINERS_ASSERT.h</label>
        <link refid="de/d6b/ATHCONTAINERS__ASSERT_8h"/>
        <childnode refid="343647" relation="include">
        </childnode>
      </node>
      <node id="343693">
        <label>xAODBase/IParticle.h</label>
        <link refid="d5/dac/IParticle_8h_source"/>
        <childnode refid="343694" relation="include">
        </childnode>
        <childnode refid="343644" relation="include">
        </childnode>
        <childnode refid="343695" relation="include">
        </childnode>
        <childnode refid="343643" relation="include">
        </childnode>
      </node>
      <node id="343695">
        <label>ObjectType.h</label>
        <link refid="d8/d04/ObjectType_8h_source"/>
        <childnode refid="343696" relation="include">
        </childnode>
      </node>
      <node id="343713">
        <label>xAODCaloEvent/versions/CaloCluster_v1.h</label>
        <link refid="dc/d4b/CaloCluster__v1_8h_source"/>
        <childnode refid="343609" relation="include">
        </childnode>
        <childnode refid="343690" relation="include">
        </childnode>
        <childnode refid="343693" relation="include">
        </childnode>
        <childnode refid="343714" relation="include">
        </childnode>
        <childnode refid="343716" relation="include">
        </childnode>
        <childnode refid="343686" relation="include">
        </childnode>
        <childnode refid="343718" relation="include">
        </childnode>
        <childnode refid="343719" relation="include">
        </childnode>
      </node>
      <node id="343664">
        <label>AthContainers/tools/ElementProxy.icc</label>
        <link refid="d6/d70/ElementProxy_8icc"/>
        <childnode refid="343660" relation="include">
        </childnode>
        <childnode refid="343648" relation="include">
        </childnode>
      </node>
      <node id="343574">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBPhys/Root/BPhysHelper.cxx</label>
        <link refid="BPhysHelper.cxx"/>
        <childnode refid="343575" relation="include">
        </childnode>
        <childnode refid="343703" relation="include">
        </childnode>
        <childnode refid="343731" relation="include">
        </childnode>
        <childnode refid="343744" relation="include">
        </childnode>
      </node>
      <node id="343597">
        <label>typeinfo</label>
      </node>
      <node id="343697">
        <label>xAODTracking/TrackingPrimitives.h</label>
        <link refid="d2/d4c/TrackingPrimitives_8h_source"/>
        <childnode refid="343698" relation="include">
        </childnode>
      </node>
      <node id="343646">
        <label>AthContainers/AuxElement.icc</label>
        <link refid="d2/d37/AuxElement_8icc"/>
        <childnode refid="343617" relation="include">
        </childnode>
        <childnode refid="343647" relation="include">
        </childnode>
      </node>
      <node id="343712">
        <label>xAODCaloEvent/CaloCluster.h</label>
        <link refid="db/d88/CaloCluster_8h_source"/>
        <childnode refid="343713" relation="include">
        </childnode>
        <childnode refid="343707" relation="include">
        </childnode>
      </node>
      <node id="343579">
        <label>AthContainers/DataVector.h</label>
        <link refid="d7/dd6/DataVector_8h"/>
        <childnode refid="343580" relation="include">
        </childnode>
        <childnode refid="343598" relation="include">
        </childnode>
        <childnode refid="343599" relation="include">
        </childnode>
        <childnode refid="343600" relation="include">
        </childnode>
        <childnode refid="343653" relation="include">
        </childnode>
        <childnode refid="343654" relation="include">
        </childnode>
        <childnode refid="343660" relation="include">
        </childnode>
        <childnode refid="343662" relation="include">
        </childnode>
        <childnode refid="343666" relation="include">
        </childnode>
        <childnode refid="343667" relation="include">
        </childnode>
        <childnode refid="343663" relation="include">
        </childnode>
        <childnode refid="343669" relation="include">
        </childnode>
        <childnode refid="343611" relation="include">
        </childnode>
        <childnode refid="343670" relation="include">
        </childnode>
        <childnode refid="343671" relation="include">
        </childnode>
        <childnode refid="343665" relation="include">
        </childnode>
        <childnode refid="343607" relation="include">
        </childnode>
        <childnode refid="343597" relation="include">
        </childnode>
        <childnode refid="343594" relation="include">
        </childnode>
        <childnode refid="343672" relation="include">
        </childnode>
        <childnode refid="343585" relation="include">
        </childnode>
        <childnode refid="343596" relation="include">
        </childnode>
        <childnode refid="343587" relation="include">
        </childnode>
        <childnode refid="343643" relation="include">
        </childnode>
        <childnode refid="343673" relation="include">
        </childnode>
        <childnode refid="343675" relation="include">
        </childnode>
        <childnode refid="343679" relation="include">
        </childnode>
        <childnode refid="343680" relation="include">
        </childnode>
      </node>
      <node id="343737">
        <label>xAODTracking/NeutralParticle.h</label>
        <link refid="d4/daa/NeutralParticle_8h_source"/>
        <childnode refid="343738" relation="include">
        </childnode>
        <childnode refid="343707" relation="include">
        </childnode>
      </node>
      <node id="343690">
        <label>bitset</label>
      </node>
      <node id="343633">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="343688">
        <label>AthLinks/tools/TypeTools.h</label>
        <link refid="dd/db1/TypeTools_8h_source"/>
      </node>
      <node id="343614">
        <label>AthenaKernel/ILockable.h</label>
      </node>
      <node id="343610">
        <label>AthLinks/DataLinkBase.h</label>
        <link refid="db/da8/DataLinkBase_8h_source"/>
        <childnode refid="343609" relation="include">
        </childnode>
      </node>
      <node id="343732">
        <label>xAODTracking/versions/Vertex_v1.h</label>
        <link refid="d7/dcc/Vertex__v1_8h_source"/>
        <childnode refid="343607" relation="include">
        </childnode>
        <childnode refid="343644" relation="include">
        </childnode>
        <childnode refid="343686" relation="include">
        </childnode>
        <childnode refid="343698" relation="include">
        </childnode>
        <childnode refid="343733" relation="include">
        </childnode>
        <childnode refid="343735" relation="include">
        </childnode>
        <childnode refid="343697" relation="include">
        </childnode>
        <childnode refid="343709" relation="include">
        </childnode>
        <childnode refid="343736" relation="include">
        </childnode>
        <childnode refid="343695" relation="include">
        </childnode>
        <childnode refid="343743" relation="include">
        </childnode>
      </node>
      <node id="343605">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="343636">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="343654">
        <label>AthContainers/tools/DVLInfo.h</label>
        <link refid="d3/d2e/DVLInfo_8h"/>
        <childnode refid="343655" relation="include">
        </childnode>
        <childnode refid="343600" relation="include">
        </childnode>
        <childnode refid="343597" relation="include">
        </childnode>
        <childnode refid="343582" relation="include">
        </childnode>
        <childnode refid="343592" relation="include">
        </childnode>
        <childnode refid="343657" relation="include">
        </childnode>
        <childnode refid="343635" relation="include">
        </childnode>
        <childnode refid="343658" relation="include">
        </childnode>
      </node>
      <node id="343603">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="343699">
        <label>unistd.h</label>
      </node>
      <node id="343673">
        <label>AthContainers/ClassName.h</label>
        <link refid="dd/d6b/AthContainers_2AthContainers_2ClassName_8h_source"/>
        <childnode refid="343674" relation="include">
        </childnode>
      </node>
      <node id="343626">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="343581" relation="include">
        </childnode>
        <childnode refid="343627" relation="include">
        </childnode>
        <childnode refid="343628" relation="include">
        </childnode>
        <childnode refid="343629" relation="include">
        </childnode>
        <childnode refid="343638" relation="include">
        </childnode>
        <childnode refid="343619" relation="include">
        </childnode>
        <childnode refid="343582" relation="include">
        </childnode>
        <childnode refid="343597" relation="include">
        </childnode>
        <childnode refid="343607" relation="include">
        </childnode>
        <childnode refid="343640" relation="include">
        </childnode>
        <childnode refid="343641" relation="include">
        </childnode>
      </node>
      <node id="343607">
        <label>vector</label>
      </node>
      <node id="343710">
        <label>xAODBase/IParticleContainer.h</label>
        <link refid="dd/d2d/IParticleContainer_8h_source"/>
        <childnode refid="343579" relation="include">
        </childnode>
        <childnode refid="343693" relation="include">
        </childnode>
        <childnode refid="343603" relation="include">
        </childnode>
      </node>
      <node id="343681">
        <label>AthContainers/tools/CompareAndPrint.h</label>
        <link refid="d5/da8/CompareAndPrint_8h_source"/>
        <childnode refid="343585" relation="include">
        </childnode>
        <childnode refid="343597" relation="include">
        </childnode>
      </node>
      <node id="343731">
        <label>xAODTracking/Vertex.h</label>
        <link refid="d9/d2d/Vertex_8h_source"/>
        <childnode refid="343732" relation="include">
        </childnode>
      </node>
      <node id="343740">
        <label>xAODTracking/versions/NeutralParticleContainer_v1.h</label>
        <link refid="d6/d5f/NeutralParticleContainer__v1_8h_source"/>
        <childnode refid="343609" relation="include">
        </childnode>
        <childnode refid="343579" relation="include">
        </childnode>
        <childnode refid="343738" relation="include">
        </childnode>
        <childnode refid="343741" relation="include">
        </childnode>
      </node>
      <node id="343682">
        <label>AthContainers/tools/DVLEltBaseInfo.icc</label>
        <link refid="dd/d5e/DVLEltBaseInfo_8icc"/>
      </node>
      <node id="343716">
        <label>xAODCaloEvent/CaloClusterBadChannelData.h</label>
        <link refid="d1/d93/CaloClusterBadChannelData_8h_source"/>
        <childnode refid="343717" relation="include">
        </childnode>
      </node>
      <node id="343586">
        <label>utility</label>
      </node>
      <node id="343679">
        <label>SGTools/DataBucketTraitFwd.h</label>
      </node>
      <node id="343616">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="343711">
        <label>xAODCaloEvent/CaloClusterContainer.h</label>
        <link refid="da/dc3/CaloClusterContainer_8h_source"/>
        <childnode refid="343712" relation="include">
        </childnode>
        <childnode refid="343720" relation="include">
        </childnode>
        <childnode refid="343707" relation="include">
        </childnode>
      </node>
      <node id="343733">
        <label>GeoPrimitives/GeoPrimitives.h</label>
        <link refid="d7/d87/GeoPrimitives_8h_source"/>
        <childnode refid="343699" relation="include">
        </childnode>
        <childnode refid="343734" relation="include">
        </childnode>
      </node>
      <node id="343577">
        <label>xAODTracking/VertexFwd.h</label>
        <link refid="d9/ddd/VertexFwd_8h_source"/>
      </node>
      <node id="343652">
        <label>AthContainers/AuxVectorBase.icc</label>
        <link refid="d4/d50/AuxVectorBase_8icc"/>
      </node>
      <node id="343620">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="343630">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="343619">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="343620" relation="include">
        </childnode>
        <childnode refid="343621" relation="include">
        </childnode>
        <childnode refid="343622" relation="include">
        </childnode>
        <childnode refid="343623" relation="include">
        </childnode>
        <childnode refid="343624" relation="include">
        </childnode>
      </node>
      <node id="343575">
        <label>xAODBPhys/BPhysHelper.h</label>
        <link refid="d0/de1/BPhysHelper_8h"/>
        <childnode refid="343576" relation="include">
        </childnode>
        <childnode refid="343577" relation="include">
        </childnode>
        <childnode refid="343578" relation="include">
        </childnode>
        <childnode refid="343683" relation="include">
        </childnode>
        <childnode refid="343728" relation="include">
        </childnode>
        <childnode refid="343694" relation="include">
        </childnode>
        <childnode refid="343729" relation="include">
        </childnode>
        <childnode refid="343730" relation="include">
        </childnode>
      </node>
      <node id="343715">
        <label>CaloGeoHelpers/CaloSampling.def</label>
      </node>
      <node id="343696">
        <label>iosfwd</label>
      </node>
      <node id="343588">
        <label>cstdlib</label>
      </node>
      <node id="343703">
        <label>xAODTracking/TrackParticle.h</label>
        <link refid="d2/d15/TrackParticle_8h_source"/>
        <childnode refid="343704" relation="include">
        </childnode>
        <childnode refid="343707" relation="include">
        </childnode>
      </node>
      <node id="343672">
        <label>iostream</label>
      </node>
      <node id="343595">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="343708">
        <label>xAODTracking/versions/TrackParticleContainer_v1.h</label>
        <link refid="d7/d3b/TrackParticleContainer__v1_8h_source"/>
        <childnode refid="343609" relation="include">
        </childnode>
        <childnode refid="343579" relation="include">
        </childnode>
        <childnode refid="343704" relation="include">
        </childnode>
        <childnode refid="343709" relation="include">
        </childnode>
      </node>
      <node id="343602">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="343581" relation="include">
        </childnode>
        <childnode refid="343582" relation="include">
        </childnode>
        <childnode refid="343603" relation="include">
        </childnode>
      </node>
      <node id="343582">
        <label>cstddef</label>
      </node>
      <node id="343625">
        <label>AthContainers/AuxVectorData.icc</label>
        <link refid="da/de7/AuxVectorData_8icc"/>
        <childnode refid="343626" relation="include">
        </childnode>
        <childnode refid="343642" relation="include">
        </childnode>
        <childnode refid="343602" relation="include">
        </childnode>
        <childnode refid="343617" relation="include">
        </childnode>
        <childnode refid="343618" relation="include">
        </childnode>
      </node>
      <node id="343743">
        <label>xAODCore/BaseInfo.h</label>
        <link refid="d3/d17/BaseInfo_8h_source"/>
        <childnode refid="343643" relation="include">
        </childnode>
      </node>
      <node id="343739">
        <label>TrkNeutralParameters/NeutralParameters.h</label>
      </node>
      <node id="343658">
        <label>AthContainers/tools/DVLInfo.icc</label>
        <link refid="da/d83/DVLInfo_8icc"/>
        <childnode refid="343598" relation="include">
        </childnode>
        <childnode refid="343607" relation="include">
        </childnode>
        <childnode refid="343659" relation="include">
        </childnode>
        <childnode refid="343647" relation="include">
        </childnode>
        <childnode refid="343588" relation="include">
        </childnode>
        <childnode refid="343643" relation="include">
        </childnode>
      </node>
      <node id="343629">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="343627" relation="include">
        </childnode>
        <childnode refid="343630" relation="include">
        </childnode>
        <childnode refid="343606" relation="include">
        </childnode>
        <childnode refid="343631" relation="include">
        </childnode>
        <childnode refid="343616" relation="include">
        </childnode>
        <childnode refid="343597" relation="include">
        </childnode>
        <childnode refid="343607" relation="include">
        </childnode>
        <childnode refid="343585" relation="include">
        </childnode>
        <childnode refid="343609" relation="include">
        </childnode>
        <childnode refid="343635" relation="include">
        </childnode>
        <childnode refid="343636" relation="include">
        </childnode>
        <childnode refid="343637" relation="include">
        </childnode>
      </node>
      <node id="343725">
        <label>TrkSegment/SegmentCollection.h</label>
      </node>
      <node id="343705">
        <label>TrkParameters/TrackParameters.h</label>
      </node>
      <node id="343738">
        <label>versions/NeutralParticle_v1.h</label>
        <link refid="da/d85/NeutralParticle__v1_8h_source"/>
        <childnode refid="343686" relation="include">
        </childnode>
        <childnode refid="343579" relation="include">
        </childnode>
        <childnode refid="343693" relation="include">
        </childnode>
        <childnode refid="343697" relation="include">
        </childnode>
        <childnode refid="343578" relation="include">
        </childnode>
        <childnode refid="343690" relation="include">
        </childnode>
        <childnode refid="343609" relation="include">
        </childnode>
        <childnode refid="343739" relation="include">
        </childnode>
      </node>
      <node id="343742">
        <label>xAODTracking/NeutralParticleFwd.h</label>
        <link refid="d4/d90/NeutralParticleFwd_8h_source"/>
      </node>
      <node id="343635">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="343736">
        <label>xAODTracking/NeutralParticleContainer.h</label>
        <link refid="da/d7f/NeutralParticleContainer_8h_source"/>
        <childnode refid="343737" relation="include">
        </childnode>
        <childnode refid="343740" relation="include">
        </childnode>
        <childnode refid="343707" relation="include">
        </childnode>
      </node>
      <node id="343600">
        <label>AthContainers/AuxVectorBase.h</label>
        <link refid="d7/d18/AuxVectorBase_8h"/>
        <childnode refid="343601" relation="include">
        </childnode>
        <childnode refid="343598" relation="include">
        </childnode>
        <childnode refid="343599" relation="include">
        </childnode>
        <childnode refid="343644" relation="include">
        </childnode>
        <childnode refid="343626" relation="include">
        </childnode>
        <childnode refid="343580" relation="include">
        </childnode>
        <childnode refid="343648" relation="include">
        </childnode>
        <childnode refid="343642" relation="include">
        </childnode>
        <childnode refid="343649" relation="include">
        </childnode>
        <childnode refid="343607" relation="include">
        </childnode>
        <childnode refid="343652" relation="include">
        </childnode>
      </node>
      <node id="343692">
        <label>xAODPrimitives/IsolationFlavour.h</label>
        <link refid="da/d23/IsolationFlavour_8h_source"/>
      </node>
      <node id="343707">
        <label>xAODCore/CLASS_DEF.h</label>
        <link refid="d6/d20/xAODCore_2xAODCore_2CLASS__DEF_8h"/>
        <childnode refid="343603" relation="include">
        </childnode>
      </node>
      <node id="343639">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="343631">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="343630" relation="include">
        </childnode>
        <childnode refid="343632" relation="include">
        </childnode>
        <childnode refid="343616" relation="include">
        </childnode>
        <childnode refid="343607" relation="include">
        </childnode>
        <childnode refid="343634" relation="include">
        </childnode>
      </node>
      <node id="343585">
        <label>algorithm</label>
      </node>
      <node id="343718">
        <label>CaloEvent/CaloClusterCellLinkContainer.h</label>
      </node>
      <node id="343669">
        <label>AthContainers/tools/IsMostDerivedFlag.h</label>
        <link refid="d5/dfa/IsMostDerivedFlag_8h"/>
      </node>
      <node id="343706">
        <label>TrkTrack/TrackCollection.h</label>
      </node>
      <node id="343644">
        <label>AthContainers/AuxElement.h</label>
        <link refid="d1/d6f/AuxElement_8h"/>
        <childnode refid="343645" relation="include">
        </childnode>
        <childnode refid="343602" relation="include">
        </childnode>
        <childnode refid="343642" relation="include">
        </childnode>
        <childnode refid="343608" relation="include">
        </childnode>
        <childnode refid="343626" relation="include">
        </childnode>
        <childnode refid="343601" relation="include">
        </childnode>
        <childnode refid="343606" relation="include">
        </childnode>
        <childnode refid="343580" relation="include">
        </childnode>
        <childnode refid="343617" relation="include">
        </childnode>
        <childnode refid="343582" relation="include">
        </childnode>
        <childnode refid="343646" relation="include">
        </childnode>
      </node>
      <node id="343608">
        <label>AthLinks/DataLink.h</label>
        <link refid="da/de8/DataLink_8h_source"/>
        <childnode refid="343609" relation="include">
        </childnode>
        <childnode refid="343591" relation="include">
        </childnode>
        <childnode refid="343610" relation="include">
        </childnode>
        <childnode refid="343611" relation="include">
        </childnode>
      </node>
      <node id="343666">
        <label>AthContainers/tools/DVL_iter_swap.h</label>
        <link refid="d6/ddb/DVL__iter__swap_8h"/>
        <childnode refid="343662" relation="include">
        </childnode>
        <childnode refid="343648" relation="include">
        </childnode>
        <childnode refid="343587" relation="include">
        </childnode>
      </node>
      <node id="343598">
        <label>AthContainers/OwnershipPolicy.h</label>
        <link refid="d3/da4/OwnershipPolicy_8h_source"/>
      </node>
      <node id="343686">
        <label>AthLinks/ElementLink.h</label>
        <link refid="dc/d24/ElementLink_8h_source"/>
        <childnode refid="343609" relation="include">
        </childnode>
        <childnode refid="343591" relation="include">
        </childnode>
        <childnode refid="343687" relation="include">
        </childnode>
        <childnode refid="343611" relation="include">
        </childnode>
        <childnode refid="343688" relation="include">
        </childnode>
      </node>
      <node id="343702">
        <label>xAODTracking/TrackParticleContainer.h</label>
        <link refid="da/d31/TrackParticleContainer_8h_source"/>
        <childnode refid="343703" relation="include">
        </childnode>
        <childnode refid="343708" relation="include">
        </childnode>
        <childnode refid="343707" relation="include">
        </childnode>
      </node>
      <node id="343656">
        <label>GaudiKernel/ClassID.h</label>
      </node>
      <node id="343671">
        <label>boost/type_traits.hpp</label>
      </node>
      <node id="343593">
        <label>memory</label>
      </node>
      <node id="343741">
        <label>xAODTracking/NeutralParticleContainerFwd.h</label>
        <link refid="d2/db4/NeutralParticleContainerFwd_8h_source"/>
        <childnode refid="343579" relation="include">
        </childnode>
        <childnode refid="343710" relation="include">
        </childnode>
        <childnode refid="343742" relation="include">
        </childnode>
      </node>
      <node id="343638">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="343628" relation="include">
        </childnode>
        <childnode refid="343629" relation="include">
        </childnode>
        <childnode refid="343639" relation="include">
        </childnode>
      </node>
      <node id="343649">
        <label>AthContainersInterfaces/AuxStore_traits.h</label>
        <link refid="dd/d70/AuxStore__traits_8h"/>
        <childnode refid="343645" relation="include">
        </childnode>
        <childnode refid="343642" relation="include">
        </childnode>
        <childnode refid="343602" relation="include">
        </childnode>
        <childnode refid="343635" relation="include">
        </childnode>
        <childnode refid="343650" relation="include">
        </childnode>
        <childnode refid="343651" relation="include">
        </childnode>
        <childnode refid="343591" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="user-defined">
      <description><para><anchor id="_1amgrpd41d8cd98f00b204e9800998ecf8427e"/> </para></description>
      <memberdef kind="define" id="d6/d2b/BPhysHelper_8cxx_1a5e280474c198362956a1fb6e0b2df55a" prot="public" static="no">
        <name>GET_PV</name>
        <param><defname>name</defname></param>
        <initializer>{                                                               \
  static <ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor</ref>&lt;<ref refid="d6/d6e/classElementLink" kindref="compound">VertexLink</ref>&gt; pvLinkAcc(name);  \
  if(!pvLinkAcc.isAvailable(*m_b)) {                            \
    return 0;                                                   \
  }                                                             \
  const <ref refid="d6/d6e/classElementLink" kindref="compound">VertexLink</ref>&amp; pvLink = pvLinkAcc(*m_b);                   \
  if(!pvLink.isValid()) {                                       \
    return 0;                                                   \
  }                                                             \
  return *pvLink;                                               \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Some useful macros </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBPhys/Root/BPhysHelper.cxx" line="40" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBPhys/Root/BPhysHelper.cxx" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d6/d2b/BPhysHelper_8cxx_1a292d776bed1e48f178f5f8d7ac372a6e" prot="public" static="no">
        <name>SET_PV</name>
        <param><defname>name</defname></param>
        <param><defname>pv</defname></param>
        <param><defname>vertexContainer</defname></param>
        <initializer>{                                                                 \
  static <ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound">SG::AuxElement::Decorator</ref>&lt;<ref refid="d6/d6e/classElementLink" kindref="compound">VertexLink</ref>&gt; pvLinkDecor(name); \
  <ref refid="d6/d6e/classElementLink" kindref="compound">VertexLink</ref> vertexLink;                                          \
  if(pv) {                                                        \
  vertexLink.setElement(pv);                                      \
  vertexLink.setStorableObject(*vertexContainer);                 \
  if( !vertexLink.isValid() )                                     \
    return false;}                                                \
  pvLinkDecor(*m_b) = vertexLink;                                 \
  return true;                                                    \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBPhys/Root/BPhysHelper.cxx" line="53" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBPhys/Root/BPhysHelper.cxx" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d6/d2b/BPhysHelper_8cxx_1a7d5c4f5de9fb72e988b737336d93ce36" prot="public" static="no">
        <name>GET_FLOAT</name>
        <param><defname>name</defname></param>
        <initializer>{                                                          \
  static <ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor</ref>&lt;float&gt; floatAcc(name);   \
  if(!floatAcc.isAvailable(*m_b)) return -9999999.;        \
  return floatAcc(*m_b);                                   \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBPhys/Root/BPhysHelper.cxx" line="60" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBPhys/Root/BPhysHelper.cxx" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d6/d2b/BPhysHelper_8cxx_1aa09db1745dfb7e94e3e1db03b42f6b45" prot="public" static="no">
        <name>SET_FLOAT</name>
        <param><defname>name</defname></param>
        <param><defname>val</defname></param>
        <initializer>{                                                          \
  static <ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound">SG::AuxElement::Decorator</ref>&lt;float&gt; floatDec(name);  \
  floatDec(*m_b) = val;                                    \
  return true;                                             \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBPhys/Root/BPhysHelper.cxx" line="67" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBPhys/Root/BPhysHelper.cxx" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d6/d2b/BPhysHelper_8cxx_1addac6a893cc36677b5834ed34a415582" prot="public" static="no">
        <name>GET_INT</name>
        <param><defname>name</defname></param>
        <initializer>{                                                      \
  static <ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor</ref>&lt;int&gt; intAcc(name);   \
  if(!intAcc.isAvailable(*m_b)) return -9999999;       \
  return intAcc(*m_b);                                 \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBPhys/Root/BPhysHelper.cxx" line="74" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBPhys/Root/BPhysHelper.cxx" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d6/d2b/BPhysHelper_8cxx_1a1779f08556b9f187973b18d110f7939d" prot="public" static="no">
        <name>SET_INT</name>
        <param><defname>name</defname></param>
        <param><defname>val</defname></param>
        <initializer>{                                                      \
  static <ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound">SG::AuxElement::Decorator</ref>&lt;int&gt; intDec(name);  \
  intDec(*m_b) = val;                                  \
  return true;                                         \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBPhys/Root/BPhysHelper.cxx" line="81" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBPhys/Root/BPhysHelper.cxx" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d6/d2b/BPhysHelper_8cxx_1a462ee5ad9175e8ebbaa42b8f948af6a3" prot="public" static="no">
        <type><ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref>&lt; <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::VertexContainer</ref> &gt;</type>
        <definition>typedef ElementLink&lt;xAOD::VertexContainer&gt; VertexLink</definition>
        <argsstring></argsstring>
        <name>VertexLink</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Some useful typedefs </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBPhys/Root/BPhysHelper.cxx" line="15" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBPhys/Root/BPhysHelper.cxx" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d6/d2b/BPhysHelper_8cxx_1ad20c9c31205cdecf798a23c4438fde99" prot="public" static="no">
        <type>std::vector&lt; <ref refid="d6/d6e/classElementLink" kindref="compound">VertexLink</ref> &gt;</type>
        <definition>typedef std::vector&lt;VertexLink&gt; VertexLinkVector</definition>
        <argsstring></argsstring>
        <name>VertexLinkVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBPhys/Root/BPhysHelper.cxx" line="16" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBPhys/Root/BPhysHelper.cxx" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d6/d2b/BPhysHelper_8cxx_1a6d69915a0c2d9b12e215e210b727568f" prot="public" static="no">
        <type><ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref>&lt; <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::MuonContainer</ref> &gt;</type>
        <definition>typedef ElementLink&lt;xAOD::MuonContainer&gt; MuonLink</definition>
        <argsstring></argsstring>
        <name>MuonLink</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBPhys/Root/BPhysHelper.cxx" line="17" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBPhys/Root/BPhysHelper.cxx" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d6/d2b/BPhysHelper_8cxx_1a7f5701ec89666dee057aa5276da0809d" prot="public" static="no">
        <type>std::vector&lt; <ref refid="d6/d6e/classElementLink" kindref="compound">MuonLink</ref> &gt;</type>
        <definition>typedef std::vector&lt;MuonLink&gt; MuonLinkVector</definition>
        <argsstring></argsstring>
        <name>MuonLinkVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBPhys/Root/BPhysHelper.cxx" line="18" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBPhys/Root/BPhysHelper.cxx" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Daniel Scheirich &lt;<ulink url="mailto:daniel.scheirich@cern.ch">daniel.scheirich@cern.ch</ulink>&gt; </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="5"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d0/de1/BPhysHelper_8h" kindref="compound" tooltip=": B-physcis xAOD helpers.">xAODBPhys/BPhysHelper.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODTracking/TrackParticle.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODTracking/Vertex.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODTracking/VertexContainer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight></codeline>
<codeline lineno="15"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt;xAOD::VertexContainer&gt;</ref><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">VertexLink</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;VertexLink&gt;<sp/>VertexLinkVector;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt;xAOD::MuonContainer&gt;</ref><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">MuonLink</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;MuonLink&gt;<sp/>MuonLinkVector;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GET_PV(<sp/>name<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"><sp/><sp/>static<sp/>SG::AuxElement::Accessor&lt;VertexLink&gt;<sp/>pvLinkAcc(name);<sp/><sp/>\</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"><sp/><sp/>if(!pvLinkAcc.isAvailable(*m_b))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"><sp/><sp/>const<sp/>VertexLink&amp;<sp/>pvLink<sp/>=<sp/>pvLinkAcc(*m_b);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"><sp/><sp/>if(!pvLink.isValid())<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"><sp/><sp/>return<sp/>*pvLink;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor">}</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SET_PV(<sp/>name,<sp/>pv,<sp/>vertexContainer<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"><sp/><sp/>static<sp/>SG::AuxElement::Decorator&lt;VertexLink&gt;<sp/>pvLinkDecor(name);<sp/>\</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"><sp/><sp/>VertexLink<sp/>vertexLink;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"><sp/><sp/>if(pv)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"><sp/><sp/>vertexLink.setElement(pv);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"><sp/><sp/>vertexLink.setStorableObject(*vertexContainer);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"><sp/><sp/>if(<sp/>!vertexLink.isValid()<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>false;}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"><sp/><sp/>pvLinkDecor(*m_b)<sp/>=<sp/>vertexLink;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"><sp/><sp/>return<sp/>true;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor">}</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GET_FLOAT(name)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"><sp/><sp/>static<sp/>SG::AuxElement::Accessor&lt;float&gt;<sp/>floatAcc(name);<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"><sp/><sp/>if(!floatAcc.isAvailable(*m_b))<sp/>return<sp/>-9999999.;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"><sp/><sp/>return<sp/>floatAcc(*m_b);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor">}</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SET_FLOAT(<sp/>name,<sp/>val)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"><sp/><sp/>static<sp/>SG::AuxElement::Decorator&lt;float&gt;<sp/>floatDec(name);<sp/><sp/>\</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"><sp/><sp/>floatDec(*m_b)<sp/>=<sp/>val;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"><sp/><sp/>return<sp/>true;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor">}</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GET_INT(name)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"><sp/><sp/>static<sp/>SG::AuxElement::Accessor&lt;int&gt;<sp/>intAcc(name);<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"><sp/><sp/>if(!intAcc.isAvailable(*m_b))<sp/>return<sp/>-9999999;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"><sp/><sp/>return<sp/>intAcc(*m_b);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor">}</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SET_INT(<sp/>name,<sp/>val)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="77"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="78"><highlight class="preprocessor"><sp/><sp/>static<sp/>SG::AuxElement::Decorator&lt;int&gt;<sp/>intDec(name);<sp/><sp/>\</highlight></codeline>
<codeline lineno="79"><highlight class="preprocessor"><sp/><sp/>intDec(*m_b)<sp/>=<sp/>val;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"><sp/><sp/>return<sp/>true;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor">}</highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TMatrixTSym&lt;double&gt;&amp;<sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a38a7fb7eb73c5e6914a9c3e4904e1d7b" kindref="member" tooltip=": Returns full covariance matrix">xAOD::BPhysHelper::covariance</ref>()</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cache<sp/>covariance<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="d2/dac/classxAOD_1_1BPhysHelper_1ab8d637f372eec3f588c663d401b6c24c" kindref="member" tooltip=": Cache covariance matrix">cacheCov</ref>())</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xAOD::BPhysHelper::emptyMatrix;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>OK:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_cachedCov;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1ad03b85b2fa11a5ba7d4a319481b6ee04" kindref="member">xAOD::BPhysHelper::nRefTrks</ref>()</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cache<sp/>refitted<sp/>tracks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!cacheRefTracks()<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>OK:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_cachedRefTracks.size();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">TVector3<sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a7b0b4cc4c316a8cc64546ceda27d951f" kindref="member">xAOD::BPhysHelper::refTrk</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cache<sp/>refitted<sp/>tracks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!cacheRefTracks()<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TVector3(0,0,0);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>range<sp/>check:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(index&gt;=m_cachedRefTracks.size())</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TVector3(0,0,0);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>OK:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_cachedRefTracks[index];</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TVector3&gt;&amp;<sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a726dadc6da8bad00d75c1d0a3b153903" kindref="member">xAOD::BPhysHelper::refTrks</ref>()</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cache<sp/>refitted<sp/>tracks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!cacheRefTracks()<sp/>)<sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a393b0d81c38cf4a4a20202a099d2b39d" kindref="member">xAOD::BPhysHelper::emptyVectorOfTVector3</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_cachedRefTracks;<sp/><sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal">TLorentzVector<sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a7b0b4cc4c316a8cc64546ceda27d951f" kindref="member">xAOD::BPhysHelper::refTrk</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mass)</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cache<sp/>refitted<sp/>tracks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!cacheRefTracks()<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector(0,0,0,0);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>range<sp/>check:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(index&gt;=m_cachedRefTracks.size())</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TLorentzVector(0,0,0,0);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>OK,<sp/>create<sp/>the<sp/>4-momentum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>TLorentzVector<sp/>mom;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>mom.SetVectM(m_cachedRefTracks[index],<sp/>mass);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mom;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">xAOD::IParticle</ref>*<sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a3ea893bb6a7951301b4c025d15eadcbd" kindref="member" tooltip=": Returns the original track (charged or neutral) corresponding to the i-th refitted...">xAOD::BPhysHelper::refTrkOrigin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="156"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>range<sp/>check:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>add<sp/>neutral<sp/>particles<sp/>once<sp/>they<sp/>are<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if(index&gt;=m_b-&gt;nTrackParticles()+m_b-&gt;nNeutralParticles())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>return<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:supports<sp/>charged<sp/>particles<sp/>only<sp/>for<sp/>now<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(index&gt;=m_b-&gt;nTrackParticles())</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>charged<sp/>tracks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(index&lt;m_b-&gt;nTrackParticles())<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_b-&gt;trackParticle(index);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>add<sp/>neutral<sp/>particles<sp/>once<sp/>they<sp/>are<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>m_b-&gt;neutralParticle(index<sp/>-<sp/>m_b-&gt;nNeutralParticles());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal">TVector3<sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a1ec799838d7b5d03817e5c7bce546b95" kindref="member">xAOD::BPhysHelper::refTrkOriginP</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="179"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>range<sp/>check:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>add<sp/>neutral<sp/>particles<sp/>once<sp/>they<sp/>are<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if(index&gt;=m_b-&gt;nTrackParticles()+m_b-&gt;nNeutralParticles())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>return<sp/>TVector3(0,0,0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:supports<sp/>charged<sp/>particles<sp/>only<sp/>for<sp/>now<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(index&gt;=m_b-&gt;nTrackParticles())</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TVector3(0,0,0);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(index&lt;m_b-&gt;nTrackParticles())<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>charged<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref>*<sp/>trk<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(refTrkOrigin(index));</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>null-pointer<sp/>protection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!trk)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TVector3(0,0,0);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>TVector3<sp/>tmp;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.SetPtEtaPhi(trk-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a4354004bc5b79bf39d3ea87ed4347387" kindref="member" tooltip="The transverse momentum () of the particle.">pt</ref>(),<sp/>trk-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a116a10463c5865f3b6b2bf7449930991" kindref="member" tooltip="The pseudorapidity () of the particle.">eta</ref>(),<sp/>trk-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a772eca8615366991d7b6686f31bba0ca" kindref="member" tooltip="The azimuthal angle () of the particle (has range  to .).">phi</ref>());</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/>neutral<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>const<sp/>xAOD::NeutralParticle*<sp/>trk<sp/>=<sp/>dynamic_cast&lt;const<sp/>xAOD::NeutralParticle*&gt;(refTrkOrigin(index));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/>null-pointer<sp/>protection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if(!trk)<sp/>return<sp/>TVector3(0,0,0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/>all<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TVector3<sp/>tmp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tmp.SetPtEtaPhi(trk-&gt;pt(),<sp/>trk-&gt;eta(),<sp/>trk-&gt;phi());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>tmp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>neutral<sp/>tracks<sp/>not<sp/>implemented<sp/>yet:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TVector3(0,0,0);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal">TLorentzVector<sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a1ec799838d7b5d03817e5c7bce546b95" kindref="member">xAOD::BPhysHelper::refTrkOriginP</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mass)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="221"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>range<sp/>check:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>add<sp/>neutral<sp/>particles<sp/>once<sp/>they<sp/>are<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if(index&gt;=m_b-&gt;nTrackParticles()+m_b-&gt;nNeutralParticles())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>return<sp/>TVector3(0,0,0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:supports<sp/>charged<sp/>particles<sp/>only<sp/>for<sp/>now<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(index&gt;=m_b-&gt;nTrackParticles())</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TLorentzVector(0,0,0,0);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>TLorentzVector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>TLorentzVector<sp/>tmp;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>tmp.SetVectM(refTrkOriginP(index),<sp/>mass);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1af9d487930449baa715840ced8c50ed1e" kindref="member">xAOD::BPhysHelper::refTrkCharge</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="240"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>range<sp/>check:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>add<sp/>neutral<sp/>particles<sp/>once<sp/>they<sp/>are<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if(index&gt;=m_b-&gt;nTrackParticles()+m_b-&gt;nNeutralParticles())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>return<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:supports<sp/>charged<sp/>particles<sp/>only<sp/>for<sp/>now<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(index&gt;=m_b-&gt;nTrackParticles())</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-9999.;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(index&lt;m_b-&gt;nTrackParticles())<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>charged<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref>*<sp/>trk<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(refTrkOrigin(index));</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>null-pointer<sp/>protection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!trk)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-9999.;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>trk-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a034186ea39ba84a3040213dd96f6ab9e" kindref="member" tooltip="Returns the charge.">charge</ref>();</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>do<sp/>not<sp/>need<sp/>to<sp/>do<sp/>anything<sp/>here,<sp/>since<sp/>we<sp/>know<sp/>this<sp/>track<sp/>must<sp/>be<sp/>neutral</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a3ae1dba6539c9395044db7e8d6bcace3" kindref="member" tooltip=": Sets refitted track momenta">xAOD::BPhysHelper::setRefTrks</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;&amp;<sp/>px,</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;&amp;<sp/>py,</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;&amp;<sp/>pz)</highlight></codeline>
<codeline lineno="273"><highlight class="normal">{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sanity<sp/>check:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(px.size()!=py.size()<sp/>||<sp/>px.size()!=pz.size())</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>erase<sp/>refitted<sp/>track<sp/>cache<sp/>to<sp/>preserve<sp/>cosistency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>m_refTracksCached<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>m_cachedRefTracks.clear();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>decorators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Decorator&lt; std::vector&lt;float&gt;</ref><sp/>&gt;<sp/>refTrackPxDeco(</highlight><highlight class="stringliteral">&quot;RefTrackPx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Decorator&lt; std::vector&lt;float&gt;</ref><sp/>&gt;<sp/>refTrackPyDeco(</highlight><highlight class="stringliteral">&quot;RefTrackPy&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Decorator&lt; std::vector&lt;float&gt;</ref><sp/>&gt;<sp/>refTrackPzDeco(</highlight><highlight class="stringliteral">&quot;RefTrackPz&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>the<sp/>elements:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>refTrackPxDeco(*m_b)<sp/>=<sp/>px;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>refTrackPyDeco(*m_b)<sp/>=<sp/>py;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>refTrackPzDeco(*m_b)<sp/>=<sp/>pz;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a3ae1dba6539c9395044db7e8d6bcace3" kindref="member" tooltip=": Sets refitted track momenta">xAOD::BPhysHelper::setRefTrks</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TVector3&gt;&amp;<sp/>refTrks)</highlight></codeline>
<codeline lineno="297"><highlight class="normal">{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sanity<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(refTrks.empty())</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>tmp<sp/>vectors<sp/>of<sp/>px,py,pz<sp/>components:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>std::vector&lt;float&gt;<sp/>px;<sp/><sp/></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>std::vector&lt;float&gt;<sp/>py;<sp/><sp/></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>std::vector&lt;float&gt;<sp/>pz;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>loop<sp/>over<sp/>refitted<sp/>track<sp/>momenta<sp/>and<sp/>store<sp/>the<sp/>components</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>std::vector&lt;TVector3&gt;::const_iterator<sp/>refTrksItr<sp/>=<sp/>refTrks.begin();</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>refTrksItr!=refTrks.end();<sp/>++refTrksItr)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>px.push_back(<sp/>refTrksItr-&gt;Px()<sp/>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>py.push_back(<sp/>refTrksItr-&gt;Py()<sp/>);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>pz.push_back(<sp/>refTrksItr-&gt;Pz()<sp/>);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>call<sp/>overloaded<sp/>method:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>setRefTrks(px,py,pz);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(<sp/>!<sp/>defined(XAOD_STANDALONE)<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>!<sp/>defined(XAOD_MANACORE)<sp/>)</highlight></codeline>
<codeline lineno="322"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a3ae1dba6539c9395044db7e8d6bcace3" kindref="member" tooltip=": Sets refitted track momenta">xAOD::BPhysHelper::setRefTrks</ref>()</highlight></codeline>
<codeline lineno="324"><highlight class="normal">{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>refitted<sp/>momenta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>std::vector&lt;float&gt;<sp/>px;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>std::vector&lt;float&gt;<sp/>py;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>std::vector&lt;float&gt;<sp/>pz;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>loop<sp/>over<sp/>refitted<sp/>tracks<sp/>at<sp/>vertex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint<sp/>i=0;<sp/>i&lt;vtx()-&gt;vxTrackAtVertex().size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Trk::TrackParameters*<sp/>aPerigee<sp/>=<sp/>vtx()-&gt;vxTrackAtVertex()[i].perigeeAtVertex();</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sanity<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!aPerigee)<sp/></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>individual<sp/>momentum<sp/>components</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>px.push_back(<sp/>aPerigee-&gt;momentum()[Trk::px]<sp/>);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>py.push_back(<sp/>aPerigee-&gt;momentum()[Trk::py]<sp/>);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>pz.push_back(<sp/>aPerigee-&gt;momentum()[Trk::pz]<sp/>);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>as<sp/>augmentation:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>setRefTrks(px,<sp/>py,<sp/>pz);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>not<sp/>XAOD_STANDALONE<sp/>and<sp/>not<sp/>XAOD_MANACORE<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="351"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal">TVector3<sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1ad456c61c308ef4270fa25a1a6964c7c5" kindref="member" tooltip=": Returns total 3-momentum calculated from the refitted tracks">xAOD::BPhysHelper::totalP</ref>()</highlight></codeline>
<codeline lineno="354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cache<sp/>refitted<sp/>tracks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!cacheRefTracks()<sp/>&amp;&amp;<sp/>nCascadeVertices()&lt;=0)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>case<sp/>of<sp/>cascade<sp/>decays,<sp/>vector<sp/>with<sp/>no<sp/>refitted<sp/>tracks<sp/>can<sp/>still<sp/>be<sp/>correct.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Therefore,<sp/>return<sp/>error<sp/>only<sp/>is<sp/>this<sp/>is<sp/>not<sp/>the<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TVector3(0,0,0);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sum<sp/>the<sp/>momenta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>TVector3<sp/>sum(0,0,0);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;nRefTrks();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>refTrk(i);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>treat<sp/>cascade<sp/>vertices,<sp/>if<sp/>they<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nCascadeVertices()&gt;0)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;nCascadeVertices();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>helper<sp/>class<sp/>for<sp/>the<sp/>daughter<sp/>vertex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper" kindref="compound">xAOD::BPhysHelper</ref><sp/>daughterVtx(<sp/>cascadeVertex(i)<sp/>);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TVector3<sp/>daughterP<sp/>=<sp/>daughterVtx.totalP();</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>the<sp/>daughter<sp/>total<sp/>momentum<sp/>was<sp/>retrieved<sp/>correctly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(daughterP==TVector3(0,0,0))</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TVector3(0,0,0);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//OK,<sp/>sum<sp/>the<sp/>momenta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>daughterP;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sum;</highlight></codeline>
<codeline lineno="385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal">TLorentzVector<sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1ad456c61c308ef4270fa25a1a6964c7c5" kindref="member" tooltip=": Returns total 3-momentum calculated from the refitted tracks">xAOD::BPhysHelper::totalP</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>masses)</highlight></codeline>
<codeline lineno="389"><highlight class="normal">{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cache<sp/>refitted<sp/>tracks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!cacheRefTracks()<sp/>)<sp/></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TLorentzVector(0,0,0,0);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>input<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(masses.size())<sp/>!=<sp/>nRefTrks())</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TLorentzVector(0,0,0,0);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sum<sp/>the<sp/>4-momenta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>TLorentzVector<sp/>sum;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;nRefTrks();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>refTrk(i,<sp/>masses[i]);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sum;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1aab597e21300da3b5a99a44717c6097f1" kindref="member">xAOD::BPhysHelper::ptErr</ref>()</highlight></codeline>
<codeline lineno="410"><highlight class="normal">{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><ref refid="df/d1e/BPhysHypoHelper_8cxx_1a7d5c4f5de9fb72e988b737336d93ce36" kindref="member">GET_FLOAT</ref>(</highlight><highlight class="stringliteral">&quot;PtErr&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a144d4e7f5c49986e9513eba18f4be71e" kindref="member">xAOD::BPhysHelper::setPtErr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val)</highlight></codeline>
<codeline lineno="415"><highlight class="normal">{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>SET_FLOAT(</highlight><highlight class="stringliteral">&quot;PtErr&quot;</highlight><highlight class="normal">,<sp/>val);</highlight></codeline>
<codeline lineno="417"><highlight class="normal">}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a167ed6d4686684715893d86d3653a2d8" kindref="member" tooltip=": Methods providing access to the linked muons">xAOD::BPhysHelper::nMuons</ref>()</highlight></codeline>
<codeline lineno="420"><highlight class="normal">{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cache<sp/>linked<sp/>muons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!cacheMuons())</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>OK:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_cachedMuons.size();</highlight></codeline>
<codeline lineno="427"><highlight class="normal">}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1" kindref="compound">xAOD::Muon</ref>*<sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1aa6a849a5e64d9b0c5f7deb699cfdd7b9" kindref="member">xAOD::BPhysHelper::muon</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="431"><highlight class="normal">{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cache<sp/>linked<sp/>muons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!cacheMuons())</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>range<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(index&gt;=m_cachedMuons.size())</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>OK:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_cachedMuons[index];</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="443"><highlight class="normal">}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;const<sp/>xAOD::Muon*&gt;&amp;<sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a1c450f2a7e22ee07e12165761b2deae9" kindref="member">xAOD::BPhysHelper::muons</ref>()</highlight></codeline>
<codeline lineno="447"><highlight class="normal">{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cache<sp/>linked<sp/>muons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!cacheMuons())</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xAOD::BPhysHelper::emptyVectorOfMuons;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>OK:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_cachedMuons;<sp/><sp/></highlight></codeline>
<codeline lineno="454"><highlight class="normal">}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a5bf3d331e9b0845e8ca7201f05da49f7" kindref="member">xAOD::BPhysHelper::setMuons</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;const<sp/>xAOD::Muon*&gt;&amp;<sp/>muons,</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::MuonContainer</ref>*<sp/>muonContainer)</highlight></codeline>
<codeline lineno="459"><highlight class="normal">{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>erase<sp/>muon<sp/>cache<sp/>to<sp/>preserve<sp/>cosistency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>m_muonsCached<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>m_cachedMuons.clear();</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>muon<sp/>links<sp/>decorator<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Decorator&lt;MuonLinkVector&gt;</ref><sp/>muonLinksDecor(</highlight><highlight class="stringliteral">&quot;MuonLinks&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>tmp<sp/>vector<sp/>of<sp/>muon<sp/>links</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>MuonLinkVector<sp/>muonLinks;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>loop<sp/>over<sp/>input<sp/>muons<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>std::vector&lt;const<sp/>xAOD::Muon*&gt;::const_iterator<sp/>muonsItr<sp/>=<sp/>muons.begin();</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>muonsItr!=muons.end();<sp/>++muonsItr)<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sanity<sp/>check<sp/>1:<sp/>protect<sp/>against<sp/>null<sp/>pointers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!(*muonsItr)<sp/>)</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>element<sp/>link</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt;xAOD::MuonContainer&gt;</ref><sp/>muLink;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>muLink.<ref refid="d6/d6e/classElementLink_1a056f02ecff42be70ad0a333c3500f612" kindref="member" tooltip="Set link to point to an Element (slowest).">setElement</ref>(*muonsItr);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>muLink.<ref refid="d6/d6e/classElementLink_1aee77dc8370e564cbed949a823d14574b" kindref="member" tooltip="Set link storable to data object pointed by data (slower).">setStorableObject</ref>(*muonContainer);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sanity<sp/>check<sp/>2:<sp/>is<sp/>the<sp/>link<sp/>valid?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!muLink.<ref refid="d6/d6e/classElementLink_1a5f30b71e430164fc4ee11880e4bb8d12" kindref="member" tooltip="Check if the element can be found.">isValid</ref>()<sp/>)</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>link<sp/>is<sp/>OK,<sp/>store<sp/>it<sp/>in<sp/>the<sp/>tmp<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>muonLinks.push_back(<sp/>muLink<sp/>);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>loop<sp/>over<sp/>muons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>OK:<sp/>store<sp/>muon<sp/>links<sp/>in<sp/>the<sp/>aux<sp/>store</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/>muonLinksDecor(*m_b)<sp/>=<sp/>muonLinks;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="496"><highlight class="normal">}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1aa46613307820cbd0683afcb32191ab45" kindref="member" tooltip=": Links to preceding vertices">xAOD::BPhysHelper::nPrecedingVertices</ref>()</highlight></codeline>
<codeline lineno="500"><highlight class="normal">{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cache<sp/>linked<sp/>preceding<sp/>vertices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!cachePrecedingVertices())</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>OK:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_cachedPrecedingVertices.size();</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="508"><highlight class="normal">}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref>*<sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a5c138676c444d7808ceaab4aab1af242" kindref="member">xAOD::BPhysHelper::precedingVertex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="512"><highlight class="normal">{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cache<sp/>linked<sp/>precedingVertices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!cachePrecedingVertices())</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>range<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(index&gt;=m_cachedPrecedingVertices.size())</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>OK:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_cachedPrecedingVertices[index];</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="524"><highlight class="normal">}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;const<sp/>xAOD::Vertex*&gt;&amp;<sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a38b7bbe22fa1264775d02e45b081ed6d" kindref="member">xAOD::BPhysHelper::precedingVertices</ref>()</highlight></codeline>
<codeline lineno="528"><highlight class="normal">{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cache<sp/>linked<sp/>precedingVertices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!cachePrecedingVertices())</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xAOD::BPhysHelper::emptyVectorOfVertices;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>OK:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_cachedPrecedingVertices;<sp/><sp/></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a6b184a4d49430465862b9157414f9926" kindref="member">xAOD::BPhysHelper::setPrecedingVertices</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;const<sp/>xAOD::Vertex*&gt;&amp;<sp/>vertices,</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::VertexContainer</ref>*<sp/>vertexContainer)</highlight></codeline>
<codeline lineno="541"><highlight class="normal">{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>erase<sp/>precedingVertex<sp/>cache<sp/>to<sp/>preserve<sp/>consistency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>m_precedingVerticesCached<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/>m_cachedPrecedingVertices.clear();</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>preceding<sp/>vertex<sp/>links<sp/>decorator<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Decorator&lt;VertexLinkVector&gt;</ref><sp/>precedingVertexLinksDecor(</highlight><highlight class="stringliteral">&quot;PrecedingVertexLinks&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>tmp<sp/>vector<sp/>of<sp/>preceding<sp/>vertex<sp/>links</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>VertexLinkVector<sp/>precedingVertexLinks;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>loop<sp/>over<sp/>input<sp/>precedingVertices<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/>std::vector&lt;const<sp/>xAOD::Vertex*&gt;::const_iterator<sp/>precedingVerticesItr<sp/>=<sp/>vertices.begin();</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>precedingVerticesItr!=vertices.end();<sp/>++precedingVerticesItr)<sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sanity<sp/>check<sp/>1:<sp/>protect<sp/>against<sp/>null<sp/>pointers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!(*precedingVerticesItr)<sp/>)</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>element<sp/>link</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">VertexLink</ref><sp/>vertexLink;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>vertexLink.<ref refid="d6/d6e/classElementLink_1a056f02ecff42be70ad0a333c3500f612" kindref="member" tooltip="Set link to point to an Element (slowest).">setElement</ref>(*precedingVerticesItr);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>vertexLink.<ref refid="d6/d6e/classElementLink_1aee77dc8370e564cbed949a823d14574b" kindref="member" tooltip="Set link storable to data object pointed by data (slower).">setStorableObject</ref>(*vertexContainer);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sanity<sp/>check<sp/>2:<sp/>is<sp/>the<sp/>link<sp/>valid?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!vertexLink.<ref refid="d6/d6e/classElementLink_1a5f30b71e430164fc4ee11880e4bb8d12" kindref="member" tooltip="Check if the element can be found.">isValid</ref>()<sp/>)</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>link<sp/>is<sp/>OK,<sp/>store<sp/>it<sp/>in<sp/>the<sp/>tmp<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>precedingVertexLinks.push_back(<sp/>vertexLink<sp/>);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>loop<sp/>over<sp/>preceding<sp/>vertices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>OK:<sp/>store<sp/>preceding<sp/>vertex<sp/>links<sp/>in<sp/>the<sp/>aux<sp/>store</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/>precedingVertexLinksDecor(*m_b)<sp/>=<sp/>precedingVertexLinks;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a2903222e835e41e48745ae35f09d78b6" kindref="member" tooltip=": Links to cascade vertices">xAOD::BPhysHelper::nCascadeVertices</ref>()</highlight></codeline>
<codeline lineno="581"><highlight class="normal">{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cache<sp/>linked<sp/>cascade<sp/>vertices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!cacheCascadeVertices())</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>OK:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_cachedCascadeVertices.size();</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="589"><highlight class="normal">}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref>*<sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a2bc968061332083b4ab5e423370c4636" kindref="member">xAOD::BPhysHelper::cascadeVertex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="593"><highlight class="normal">{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cache<sp/>linked<sp/>cascadeVertices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!cacheCascadeVertices())</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>range<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(index&gt;=m_cachedCascadeVertices.size())</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>OK:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_cachedCascadeVertices[index];</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="605"><highlight class="normal">}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;const<sp/>xAOD::Vertex*&gt;&amp;<sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1ac00ad6e00a7586463c1b9e843bc26219" kindref="member">xAOD::BPhysHelper::cascadeVertices</ref>()</highlight></codeline>
<codeline lineno="609"><highlight class="normal">{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cache<sp/>linked<sp/>cascadeVertices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!cacheCascadeVertices())</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xAOD::BPhysHelper::emptyVectorOfVertices;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>OK:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_cachedCascadeVertices;<sp/><sp/></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="617"><highlight class="normal">}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1aa0f0a1f122352f1888466e2d06a33252" kindref="member">xAOD::BPhysHelper::setCascadeVertices</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;const<sp/>xAOD::Vertex*&gt;&amp;<sp/>vertices,</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::VertexContainer</ref>*<sp/>vertexContainer)</highlight></codeline>
<codeline lineno="622"><highlight class="normal">{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>erase<sp/>cascadeVertex<sp/>cache<sp/>to<sp/>preserve<sp/>consistency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/>m_cascadeVerticesCached<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/>m_cachedCascadeVertices.clear();</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>cascade<sp/>vertex<sp/>links<sp/>decorator<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Decorator&lt;VertexLinkVector&gt;</ref><sp/>cascadeVertexLinksDecor(</highlight><highlight class="stringliteral">&quot;CascadeVertexLinks&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>tmp<sp/>vector<sp/>of<sp/>cascade<sp/>vertex<sp/>links</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/>VertexLinkVector<sp/>cascadeVertexLinks;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>loop<sp/>over<sp/>input<sp/>cascadeVertices<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/>std::vector&lt;const<sp/>xAOD::Vertex*&gt;::const_iterator<sp/>cascadeVerticesItr<sp/>=<sp/>vertices.begin();</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>cascadeVerticesItr!=vertices.end();<sp/>++cascadeVerticesItr)<sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sanity<sp/>check<sp/>1:<sp/>protect<sp/>against<sp/>null<sp/>pointers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!(*cascadeVerticesItr)<sp/>)</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>element<sp/>link</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">VertexLink</ref><sp/>vertexLink;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>vertexLink.<ref refid="d6/d6e/classElementLink_1a056f02ecff42be70ad0a333c3500f612" kindref="member" tooltip="Set link to point to an Element (slowest).">setElement</ref>(*cascadeVerticesItr);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>vertexLink.<ref refid="d6/d6e/classElementLink_1aee77dc8370e564cbed949a823d14574b" kindref="member" tooltip="Set link storable to data object pointed by data (slower).">setStorableObject</ref>(*vertexContainer);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sanity<sp/>check<sp/>2:<sp/>is<sp/>the<sp/>link<sp/>valid?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!vertexLink.<ref refid="d6/d6e/classElementLink_1a5f30b71e430164fc4ee11880e4bb8d12" kindref="member" tooltip="Check if the element can be found.">isValid</ref>()<sp/>)</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>link<sp/>is<sp/>OK,<sp/>store<sp/>it<sp/>in<sp/>the<sp/>tmp<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>cascadeVertexLinks.push_back(<sp/>vertexLink<sp/>);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>loop<sp/>over<sp/>cascade<sp/>vertices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>OK:<sp/>store<sp/>cascade<sp/>vertex<sp/>links<sp/>in<sp/>the<sp/>aux<sp/>store</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/>cascadeVertexLinksDecor(*m_b)<sp/>=<sp/>cascadeVertexLinks;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="659"><highlight class="normal">}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1adb3192f2930d5724ecdf35b9af502a01" kindref="member">xAOD::BPhysHelper::nRefTrksCascade</ref>()</highlight></codeline>
<codeline lineno="663"><highlight class="normal">{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>number<sp/>of<sp/>refitted<sp/>tracks<sp/>in<sp/>this<sp/>vertex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>nRefTrks();</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>errors.<sp/>If<sp/>there<sp/>are<sp/>cascade<sp/>vertices<sp/>stored<sp/>in<sp/>this<sp/>vertex,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>is<sp/>possible<sp/>there<sp/>are<sp/>no<sp/>refitted<sp/>tracks,<sp/>so<sp/>report<sp/>error<sp/>only<sp/>in<sp/>case<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>this<sp/>veretx<sp/>has<sp/>no<sp/>cascade<sp/>vertices<sp/>and<sp/>no<sp/>refitted<sp/>tracks:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n&lt;0<sp/>&amp;&amp;<sp/>nCascadeVertices()&lt;=0)<sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n&lt;0<sp/>&amp;&amp;<sp/>nCascadeVertices()&gt;0)<sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>loop<sp/>over<sp/>cascade<sp/>vertices,<sp/>if<sp/>they<sp/>exist:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;nCascadeVertices();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>helper<sp/>class<sp/>for<sp/>the<sp/>daughter<sp/>vertex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper" kindref="compound">xAOD::BPhysHelper</ref><sp/>daughterVtx(cascadeVertex(i));</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(daughterVtx.nRefTrksCascade()&lt;0)</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OK,<sp/>add<sp/>the<sp/>numbers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>+=<sp/>daughterVtx.nRefTrksCascade();</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>OK,<sp/>return<sp/>the<sp/>number<sp/>of<sp/>tracks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="692"><highlight class="normal">}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref>*<sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a743a38f25f66071e8a6af3dee0e43cd5" kindref="member" tooltip="refitted PV">xAOD::BPhysHelper::pv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pv_type<sp/>vertexType)<sp/></highlight></codeline>
<codeline lineno="695"><highlight class="normal">{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(vertexType)<sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MAX_SUM_PT2<sp/>:<sp/><ref refid="d6/d2b/BPhysHelper_8cxx_1a5e280474c198362956a1fb6e0b2df55a" kindref="member">GET_PV</ref>(</highlight><highlight class="stringliteral">&quot;PvMaxSumPt2Link&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_A0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="d6/d2b/BPhysHelper_8cxx_1a5e280474c198362956a1fb6e0b2df55a" kindref="member">GET_PV</ref>(</highlight><highlight class="stringliteral">&quot;PvMinA0Link&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="d6/d2b/BPhysHelper_8cxx_1a5e280474c198362956a1fb6e0b2df55a" kindref="member">GET_PV</ref>(</highlight><highlight class="stringliteral">&quot;PvMinZ0Link&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0_BA<sp/><sp/><sp/>:<sp/><ref refid="d6/d2b/BPhysHelper_8cxx_1a5e280474c198362956a1fb6e0b2df55a" kindref="member">GET_PV</ref>(</highlight><highlight class="stringliteral">&quot;PvMinZ0BALink&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="703"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref>*<sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a299f91f8f62ed2efacb6a76baf589161" kindref="member" tooltip="original PV">xAOD::BPhysHelper::origPv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pv_type<sp/>vertexType)<sp/></highlight></codeline>
<codeline lineno="706"><highlight class="normal">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(vertexType)<sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MAX_SUM_PT2<sp/>:<sp/><ref refid="d6/d2b/BPhysHelper_8cxx_1a5e280474c198362956a1fb6e0b2df55a" kindref="member">GET_PV</ref>(</highlight><highlight class="stringliteral">&quot;OrigPvMaxSumPt2Link&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_A0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="d6/d2b/BPhysHelper_8cxx_1a5e280474c198362956a1fb6e0b2df55a" kindref="member">GET_PV</ref>(</highlight><highlight class="stringliteral">&quot;OrigPvMinA0Link&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="d6/d2b/BPhysHelper_8cxx_1a5e280474c198362956a1fb6e0b2df55a" kindref="member">GET_PV</ref>(</highlight><highlight class="stringliteral">&quot;OrigPvMinZ0Link&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0_BA<sp/><sp/><sp/>:<sp/><ref refid="d6/d2b/BPhysHelper_8cxx_1a5e280474c198362956a1fb6e0b2df55a" kindref="member">GET_PV</ref>(</highlight><highlight class="stringliteral">&quot;OrigPvMinZ0BALink&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1ae1bc19ff038de66c345f573704533816" kindref="member">xAOD::BPhysHelper::setOrigPv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref>*<sp/>pv,<sp/></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::VertexContainer</ref>*<sp/>vertexContainer,</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pv_type<sp/>vertexType)</highlight></codeline>
<codeline lineno="719"><highlight class="normal">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(vertexType)<sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MAX_SUM_PT2<sp/>:<sp/>SET_PV(</highlight><highlight class="stringliteral">&quot;OrigPvMaxSumPt2Link&quot;</highlight><highlight class="normal">,<sp/>pv,<sp/>vertexContainer);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_A0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>SET_PV(</highlight><highlight class="stringliteral">&quot;OrigPvMinA0Link&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>pv,<sp/>vertexContainer);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>SET_PV(</highlight><highlight class="stringliteral">&quot;OrigPvMinZ0Link&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>pv,<sp/>vertexContainer);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0_BA<sp/><sp/><sp/>:<sp/>SET_PV(</highlight><highlight class="stringliteral">&quot;OrigPvMinZ0BALink&quot;</highlight><highlight class="normal"><sp/><sp/>,<sp/>pv,<sp/>vertexContainer);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="727"><highlight class="normal">}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a72bb077d2736bc0f8c1a93b3293469b7" kindref="member">xAOD::BPhysHelper::setPv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref>*<sp/>pv,<sp/></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::VertexContainer</ref>*<sp/>vertexContainer,</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pv_type<sp/>vertexType)</highlight></codeline>
<codeline lineno="732"><highlight class="normal">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(vertexType)<sp/>{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MAX_SUM_PT2<sp/>:<sp/>SET_PV(</highlight><highlight class="stringliteral">&quot;PvMaxSumPt2Link&quot;</highlight><highlight class="normal">,<sp/>pv,<sp/>vertexContainer);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_A0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>SET_PV(</highlight><highlight class="stringliteral">&quot;PvMinA0Link&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>pv,<sp/>vertexContainer);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>SET_PV(</highlight><highlight class="stringliteral">&quot;PvMinZ0Link&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>pv,<sp/>vertexContainer);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0_BA<sp/><sp/><sp/>:<sp/>SET_PV(</highlight><highlight class="stringliteral">&quot;PvMinZ0BALink&quot;</highlight><highlight class="normal"><sp/><sp/>,<sp/>pv,<sp/>vertexContainer);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="740"><highlight class="normal">}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1abb046d897addf155c900118829a4f632" kindref="member">xAOD::BPhysHelper::setRefitPVStatus</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>code,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pv_type<sp/>vertexType)</highlight></codeline>
<codeline lineno="743"><highlight class="normal">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(vertexType)<sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MAX_SUM_PT2<sp/>:<sp/>SET_INT(</highlight><highlight class="stringliteral">&quot;PvMaxSumPt2Status&quot;</highlight><highlight class="normal">,<sp/>code);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_A0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>SET_INT(</highlight><highlight class="stringliteral">&quot;PvMinA0Status&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>code);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>SET_INT(</highlight><highlight class="stringliteral">&quot;PvMinZ0Status&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>code);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0_BA<sp/><sp/><sp/>:<sp/>SET_INT(</highlight><highlight class="stringliteral">&quot;PvMinZ0BAStatus&quot;</highlight><highlight class="normal"><sp/><sp/>,<sp/>code);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="751"><highlight class="normal">}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1ad9046acb03c73ac9ec4c2fca0abf792f" kindref="member">xAOD::BPhysHelper::RefitPVStatus</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pv_type<sp/>vertexType)</highlight></codeline>
<codeline lineno="754"><highlight class="normal">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(vertexType)<sp/>{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MAX_SUM_PT2<sp/>:<sp/>GET_INT(</highlight><highlight class="stringliteral">&quot;PvMaxSumPt2Status&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_A0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>GET_INT(</highlight><highlight class="stringliteral">&quot;PvMinA0Status&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>GET_INT(</highlight><highlight class="stringliteral">&quot;PvMinZ0Status&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0_BA<sp/><sp/><sp/>:<sp/>GET_INT(</highlight><highlight class="stringliteral">&quot;PvMinZ0BAStatus&quot;</highlight><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-999999;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="762"><highlight class="normal">}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a3cc7835f5a1c8315bc3605ecee5fcdbf" kindref="member" tooltip="decay distance">xAOD::BPhysHelper::lxy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pv_type<sp/>vertexType)</highlight></codeline>
<codeline lineno="765"><highlight class="normal">{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(vertexType)<sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MAX_SUM_PT2<sp/>:<sp/><ref refid="df/d1e/BPhysHypoHelper_8cxx_1a7d5c4f5de9fb72e988b737336d93ce36" kindref="member">GET_FLOAT</ref>(</highlight><highlight class="stringliteral">&quot;LxyMaxSumPt2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_A0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="df/d1e/BPhysHypoHelper_8cxx_1a7d5c4f5de9fb72e988b737336d93ce36" kindref="member">GET_FLOAT</ref>(</highlight><highlight class="stringliteral">&quot;LxyMinA0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="df/d1e/BPhysHypoHelper_8cxx_1a7d5c4f5de9fb72e988b737336d93ce36" kindref="member">GET_FLOAT</ref>(</highlight><highlight class="stringliteral">&quot;LxyMinZ0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0_BA<sp/><sp/><sp/>:<sp/><ref refid="df/d1e/BPhysHypoHelper_8cxx_1a7d5c4f5de9fb72e988b737336d93ce36" kindref="member">GET_FLOAT</ref>(</highlight><highlight class="stringliteral">&quot;LxyMinZ0BA&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-9999999.;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="773"><highlight class="normal">}</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1ae584e8ba1b27f357508ca3249ee9c081" kindref="member" tooltip="its error">xAOD::BPhysHelper::lxyErr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pv_type<sp/>vertexType)</highlight></codeline>
<codeline lineno="776"><highlight class="normal">{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(vertexType)<sp/>{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MAX_SUM_PT2<sp/>:<sp/><ref refid="df/d1e/BPhysHypoHelper_8cxx_1a7d5c4f5de9fb72e988b737336d93ce36" kindref="member">GET_FLOAT</ref>(</highlight><highlight class="stringliteral">&quot;LxyErrMaxSumPt2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_A0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="df/d1e/BPhysHypoHelper_8cxx_1a7d5c4f5de9fb72e988b737336d93ce36" kindref="member">GET_FLOAT</ref>(</highlight><highlight class="stringliteral">&quot;LxyErrMinA0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="df/d1e/BPhysHypoHelper_8cxx_1a7d5c4f5de9fb72e988b737336d93ce36" kindref="member">GET_FLOAT</ref>(</highlight><highlight class="stringliteral">&quot;LxyErrMinZ0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0_BA<sp/><sp/><sp/>:<sp/><ref refid="df/d1e/BPhysHypoHelper_8cxx_1a7d5c4f5de9fb72e988b737336d93ce36" kindref="member">GET_FLOAT</ref>(</highlight><highlight class="stringliteral">&quot;LxyErrMinZ0BA&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-9999999.;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="784"><highlight class="normal">}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a3b82e8cee4c83ce4db54c27bff905af1" kindref="member" tooltip="decay distance">xAOD::BPhysHelper::setLxy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pv_type<sp/>vertexType)</highlight></codeline>
<codeline lineno="787"><highlight class="normal">{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(vertexType)<sp/>{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MAX_SUM_PT2<sp/>:<sp/>SET_FLOAT(</highlight><highlight class="stringliteral">&quot;LxyMaxSumPt2&quot;</highlight><highlight class="normal">,<sp/>val);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_A0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>SET_FLOAT(</highlight><highlight class="stringliteral">&quot;LxyMinA0&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>val);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>SET_FLOAT(</highlight><highlight class="stringliteral">&quot;LxyMinZ0&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>val);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0_BA<sp/><sp/><sp/>:<sp/>SET_FLOAT(</highlight><highlight class="stringliteral">&quot;LxyMinZ0BA&quot;</highlight><highlight class="normal"><sp/><sp/>,<sp/>val);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="795"><highlight class="normal">}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a381ad7815e53b8acfee2d2065fad3098" kindref="member" tooltip="its error">xAOD::BPhysHelper::setLxyErr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pv_type<sp/>vertexType)</highlight></codeline>
<codeline lineno="798"><highlight class="normal">{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(vertexType)<sp/>{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MAX_SUM_PT2<sp/>:<sp/>SET_FLOAT(</highlight><highlight class="stringliteral">&quot;LxyErrMaxSumPt2&quot;</highlight><highlight class="normal">,<sp/>val);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_A0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>SET_FLOAT(</highlight><highlight class="stringliteral">&quot;LxyErrMinA0&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>val);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>SET_FLOAT(</highlight><highlight class="stringliteral">&quot;LxyErrMinZ0&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>val);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0_BA<sp/><sp/><sp/>:<sp/>SET_FLOAT(</highlight><highlight class="stringliteral">&quot;LxyErrMinZ0BA&quot;</highlight><highlight class="normal"><sp/><sp/>,<sp/>val);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="806"><highlight class="normal">}</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a8029dcb836fb380663844c87930aa2a4" kindref="member" tooltip="3D impact parameter">xAOD::BPhysHelper::a0</ref><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pv_type<sp/>vertexType)</highlight></codeline>
<codeline lineno="809"><highlight class="normal">{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(vertexType)<sp/>{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MAX_SUM_PT2<sp/>:<sp/><ref refid="df/d1e/BPhysHypoHelper_8cxx_1a7d5c4f5de9fb72e988b737336d93ce36" kindref="member">GET_FLOAT</ref>(</highlight><highlight class="stringliteral">&quot;A0MaxSumPt2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_A0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="df/d1e/BPhysHypoHelper_8cxx_1a7d5c4f5de9fb72e988b737336d93ce36" kindref="member">GET_FLOAT</ref>(</highlight><highlight class="stringliteral">&quot;A0MinA0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="df/d1e/BPhysHypoHelper_8cxx_1a7d5c4f5de9fb72e988b737336d93ce36" kindref="member">GET_FLOAT</ref>(</highlight><highlight class="stringliteral">&quot;A0MinZ0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0_BA<sp/><sp/><sp/>:<sp/><ref refid="df/d1e/BPhysHypoHelper_8cxx_1a7d5c4f5de9fb72e988b737336d93ce36" kindref="member">GET_FLOAT</ref>(</highlight><highlight class="stringliteral">&quot;A0MinZ0BA&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-9999999.;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="817"><highlight class="normal">}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a8e35b94bf40e0a25695e727405caa214" kindref="member" tooltip="3D impact parameter error">xAOD::BPhysHelper::a0Err</ref><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pv_type<sp/>vertexType)</highlight></codeline>
<codeline lineno="820"><highlight class="normal">{</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(vertexType)<sp/>{</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MAX_SUM_PT2<sp/>:<sp/><ref refid="df/d1e/BPhysHypoHelper_8cxx_1a7d5c4f5de9fb72e988b737336d93ce36" kindref="member">GET_FLOAT</ref>(</highlight><highlight class="stringliteral">&quot;A0ErrMaxSumPt2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_A0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="df/d1e/BPhysHypoHelper_8cxx_1a7d5c4f5de9fb72e988b737336d93ce36" kindref="member">GET_FLOAT</ref>(</highlight><highlight class="stringliteral">&quot;A0ErrMinA0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="df/d1e/BPhysHypoHelper_8cxx_1a7d5c4f5de9fb72e988b737336d93ce36" kindref="member">GET_FLOAT</ref>(</highlight><highlight class="stringliteral">&quot;A0ErrMinZ0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0_BA<sp/><sp/><sp/>:<sp/><ref refid="df/d1e/BPhysHypoHelper_8cxx_1a7d5c4f5de9fb72e988b737336d93ce36" kindref="member">GET_FLOAT</ref>(</highlight><highlight class="stringliteral">&quot;A0ErrMinZ0BA&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-9999999.;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1ac052512946ba2c143c23563a85a75c75" kindref="member" tooltip="transverse impact parameter">xAOD::BPhysHelper::a0xy</ref><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pv_type<sp/>vertexType)</highlight></codeline>
<codeline lineno="831"><highlight class="normal">{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(vertexType)<sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MAX_SUM_PT2<sp/>:<sp/><ref refid="df/d1e/BPhysHypoHelper_8cxx_1a7d5c4f5de9fb72e988b737336d93ce36" kindref="member">GET_FLOAT</ref>(</highlight><highlight class="stringliteral">&quot;A0xyMaxSumPt2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_A0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="df/d1e/BPhysHypoHelper_8cxx_1a7d5c4f5de9fb72e988b737336d93ce36" kindref="member">GET_FLOAT</ref>(</highlight><highlight class="stringliteral">&quot;A0xyMinA0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="df/d1e/BPhysHypoHelper_8cxx_1a7d5c4f5de9fb72e988b737336d93ce36" kindref="member">GET_FLOAT</ref>(</highlight><highlight class="stringliteral">&quot;A0xyMinZ0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0_BA<sp/><sp/><sp/>:<sp/><ref refid="df/d1e/BPhysHypoHelper_8cxx_1a7d5c4f5de9fb72e988b737336d93ce36" kindref="member">GET_FLOAT</ref>(</highlight><highlight class="stringliteral">&quot;A0xyMinZ0BA&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-9999999.;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="839"><highlight class="normal">}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a36380a81f55ac0e8c529846321c6d9d9" kindref="member" tooltip="rtansverse impact parameter error">xAOD::BPhysHelper::a0xyErr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pv_type<sp/>vertexType)</highlight></codeline>
<codeline lineno="842"><highlight class="normal">{</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(vertexType)<sp/>{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MAX_SUM_PT2<sp/>:<sp/><ref refid="df/d1e/BPhysHypoHelper_8cxx_1a7d5c4f5de9fb72e988b737336d93ce36" kindref="member">GET_FLOAT</ref>(</highlight><highlight class="stringliteral">&quot;A0xyErrMaxSumPt2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_A0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="df/d1e/BPhysHypoHelper_8cxx_1a7d5c4f5de9fb72e988b737336d93ce36" kindref="member">GET_FLOAT</ref>(</highlight><highlight class="stringliteral">&quot;A0xyErrMinA0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="df/d1e/BPhysHypoHelper_8cxx_1a7d5c4f5de9fb72e988b737336d93ce36" kindref="member">GET_FLOAT</ref>(</highlight><highlight class="stringliteral">&quot;A0xyErrMinZ0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0_BA<sp/><sp/><sp/>:<sp/><ref refid="df/d1e/BPhysHypoHelper_8cxx_1a7d5c4f5de9fb72e988b737336d93ce36" kindref="member">GET_FLOAT</ref>(</highlight><highlight class="stringliteral">&quot;A0xyErrMinZ0BA&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-9999999.;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="850"><highlight class="normal">}</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a2eb755be5f59292f6a5c598709b12ed6" kindref="member" tooltip="longitudinal impact parameter">xAOD::BPhysHelper::z0</ref><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pv_type<sp/>vertexType)</highlight></codeline>
<codeline lineno="853"><highlight class="normal">{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(vertexType)<sp/>{</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MAX_SUM_PT2<sp/>:<sp/><ref refid="df/d1e/BPhysHypoHelper_8cxx_1a7d5c4f5de9fb72e988b737336d93ce36" kindref="member">GET_FLOAT</ref>(</highlight><highlight class="stringliteral">&quot;Z0MaxSumPt2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_A0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="df/d1e/BPhysHypoHelper_8cxx_1a7d5c4f5de9fb72e988b737336d93ce36" kindref="member">GET_FLOAT</ref>(</highlight><highlight class="stringliteral">&quot;Z0MinA0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="df/d1e/BPhysHypoHelper_8cxx_1a7d5c4f5de9fb72e988b737336d93ce36" kindref="member">GET_FLOAT</ref>(</highlight><highlight class="stringliteral">&quot;Z0MinZ0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0_BA<sp/><sp/><sp/>:<sp/><ref refid="df/d1e/BPhysHypoHelper_8cxx_1a7d5c4f5de9fb72e988b737336d93ce36" kindref="member">GET_FLOAT</ref>(</highlight><highlight class="stringliteral">&quot;Z0MinZ0BA&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-9999999.;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="861"><highlight class="normal">}</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a73007a4f940e687e07693b7dbeaf0a78" kindref="member" tooltip="longitudinal impact parameter error">xAOD::BPhysHelper::z0Err</ref><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pv_type<sp/>vertexType)</highlight></codeline>
<codeline lineno="864"><highlight class="normal">{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(vertexType)<sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MAX_SUM_PT2<sp/>:<sp/><ref refid="df/d1e/BPhysHypoHelper_8cxx_1a7d5c4f5de9fb72e988b737336d93ce36" kindref="member">GET_FLOAT</ref>(</highlight><highlight class="stringliteral">&quot;Z0ErrMaxSumPt2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_A0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="df/d1e/BPhysHypoHelper_8cxx_1a7d5c4f5de9fb72e988b737336d93ce36" kindref="member">GET_FLOAT</ref>(</highlight><highlight class="stringliteral">&quot;Z0ErrMinA0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="df/d1e/BPhysHypoHelper_8cxx_1a7d5c4f5de9fb72e988b737336d93ce36" kindref="member">GET_FLOAT</ref>(</highlight><highlight class="stringliteral">&quot;Z0ErrMinZ0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0_BA<sp/><sp/><sp/>:<sp/><ref refid="df/d1e/BPhysHypoHelper_8cxx_1a7d5c4f5de9fb72e988b737336d93ce36" kindref="member">GET_FLOAT</ref>(</highlight><highlight class="stringliteral">&quot;Z0ErrMinZ0BA&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-9999999.;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="872"><highlight class="normal">}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a6b72bc7edb498d4ef88de1f9c71e55b7" kindref="member" tooltip="3D impact parameter">xAOD::BPhysHelper::setA0</ref><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pv_type<sp/>vertexType)</highlight></codeline>
<codeline lineno="875"><highlight class="normal">{</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(vertexType)<sp/>{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MAX_SUM_PT2<sp/>:<sp/>SET_FLOAT(</highlight><highlight class="stringliteral">&quot;A0MaxSumPt2&quot;</highlight><highlight class="normal">,<sp/>val);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_A0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>SET_FLOAT(</highlight><highlight class="stringliteral">&quot;A0MinA0&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>val);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>SET_FLOAT(</highlight><highlight class="stringliteral">&quot;A0MinZ0&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>val);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0_BA<sp/><sp/><sp/>:<sp/>SET_FLOAT(</highlight><highlight class="stringliteral">&quot;A0MinZ0BA&quot;</highlight><highlight class="normal"><sp/><sp/>,<sp/>val);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="883"><highlight class="normal">}</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a9e985c5682d36d7a5757ded65e17deb9" kindref="member" tooltip="3D impact parameter error">xAOD::BPhysHelper::setA0Err</ref><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pv_type<sp/>vertexType)</highlight></codeline>
<codeline lineno="886"><highlight class="normal">{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(vertexType)<sp/>{</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MAX_SUM_PT2<sp/>:<sp/>SET_FLOAT(</highlight><highlight class="stringliteral">&quot;A0ErrMaxSumPt2&quot;</highlight><highlight class="normal">,<sp/>val);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_A0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>SET_FLOAT(</highlight><highlight class="stringliteral">&quot;A0ErrMinA0&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>val);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>SET_FLOAT(</highlight><highlight class="stringliteral">&quot;A0ErrMinZ0&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>val);</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0_BA<sp/><sp/><sp/>:<sp/>SET_FLOAT(</highlight><highlight class="stringliteral">&quot;A0ErrMinZ0BA&quot;</highlight><highlight class="normal"><sp/><sp/>,<sp/>val);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="894"><highlight class="normal">}</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1ad3102f46d218743570a5668c602dc56d" kindref="member" tooltip="transverse impact parameter">xAOD::BPhysHelper::setA0xy</ref><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pv_type<sp/>vertexType)</highlight></codeline>
<codeline lineno="897"><highlight class="normal">{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(vertexType)<sp/>{</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MAX_SUM_PT2<sp/>:<sp/>SET_FLOAT(</highlight><highlight class="stringliteral">&quot;A0xyMaxSumPt2&quot;</highlight><highlight class="normal">,<sp/>val);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_A0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>SET_FLOAT(</highlight><highlight class="stringliteral">&quot;A0xyMinA0&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>val);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>SET_FLOAT(</highlight><highlight class="stringliteral">&quot;A0xyMinZ0&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>val);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0_BA<sp/><sp/><sp/>:<sp/>SET_FLOAT(</highlight><highlight class="stringliteral">&quot;A0xyMinZ0BA&quot;</highlight><highlight class="normal"><sp/><sp/>,<sp/>val);</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="905"><highlight class="normal">}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1ac82842885ffb9afc0c9378041d08e9bf" kindref="member" tooltip="transverse impact parameter error">xAOD::BPhysHelper::setA0xyErr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pv_type<sp/>vertexType)</highlight></codeline>
<codeline lineno="908"><highlight class="normal">{</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(vertexType)<sp/>{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MAX_SUM_PT2<sp/>:<sp/>SET_FLOAT(</highlight><highlight class="stringliteral">&quot;A0xyErrMaxSumPt2&quot;</highlight><highlight class="normal">,<sp/>val);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_A0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>SET_FLOAT(</highlight><highlight class="stringliteral">&quot;A0xyErrMinA0&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>val);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>SET_FLOAT(</highlight><highlight class="stringliteral">&quot;A0xyErrMinZ0&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>val);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0_BA<sp/><sp/><sp/>:<sp/>SET_FLOAT(</highlight><highlight class="stringliteral">&quot;A0xyErrMinZ0BA&quot;</highlight><highlight class="normal"><sp/><sp/>,<sp/>val);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="916"><highlight class="normal">}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a28efd7b1cb021484ff7b7d5c956a39f2" kindref="member" tooltip="longitudinal impact parameter">xAOD::BPhysHelper::setZ0</ref><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pv_type<sp/>vertexType)</highlight></codeline>
<codeline lineno="919"><highlight class="normal">{</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(vertexType)<sp/>{</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MAX_SUM_PT2<sp/>:<sp/>SET_FLOAT(</highlight><highlight class="stringliteral">&quot;Z0MaxSumPt2&quot;</highlight><highlight class="normal">,<sp/>val);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_A0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>SET_FLOAT(</highlight><highlight class="stringliteral">&quot;Z0MinA0&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>val);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>SET_FLOAT(</highlight><highlight class="stringliteral">&quot;Z0MinZ0&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>val);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0_BA<sp/><sp/><sp/>:<sp/>SET_FLOAT(</highlight><highlight class="stringliteral">&quot;Z0MinZ0BA&quot;</highlight><highlight class="normal"><sp/><sp/>,<sp/>val);</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="927"><highlight class="normal">}</highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a5fe67a05e7fa954e8f530f7062b6e661" kindref="member" tooltip="longitudinal impact parameter error">xAOD::BPhysHelper::setZ0Err</ref><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pv_type<sp/>vertexType)</highlight></codeline>
<codeline lineno="930"><highlight class="normal">{</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(vertexType)<sp/>{</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MAX_SUM_PT2<sp/>:<sp/>SET_FLOAT(</highlight><highlight class="stringliteral">&quot;Z0ErrMaxSumPt2&quot;</highlight><highlight class="normal">,<sp/>val);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_A0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>SET_FLOAT(</highlight><highlight class="stringliteral">&quot;Z0ErrMinA0&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>val);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>SET_FLOAT(</highlight><highlight class="stringliteral">&quot;Z0ErrMinZ0&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>val);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PV_MIN_Z0_BA<sp/><sp/><sp/>:<sp/>SET_FLOAT(</highlight><highlight class="stringliteral">&quot;Z0ErrMinZ0BA&quot;</highlight><highlight class="normal"><sp/><sp/>,<sp/>val);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="938"><highlight class="normal">}</highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1ab8d637f372eec3f588c663d401b6c24c" kindref="member" tooltip=": Cache covariance matrix">xAOD::BPhysHelper::cacheCov</ref>()</highlight></codeline>
<codeline lineno="941"><highlight class="normal">{</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>cov<sp/>matrix<sp/>is<sp/>already<sp/>cached,<sp/>do<sp/>nothing<sp/>and<sp/>return<sp/>true<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_covCached<sp/>&amp;&amp;<sp/>m_cachedCov.GetNrows()!=0)</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>cov<sp/>matrix<sp/>is<sp/>cached<sp/>but<sp/>the<sp/>cache<sp/>is<sp/>empty,<sp/>return<sp/>false<sp/>(error)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_covCached<sp/>&amp;&amp;<sp/>m_cachedCov.GetNrows()==0)</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>number<sp/>of<sp/>tracks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>ref<sp/>tracks<sp/>are<sp/>stripped<sp/>from<sp/>the<sp/>vertex,<sp/>this<sp/>will<sp/>not<sp/>work<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>error<sp/>will<sp/>be<sp/>returned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nTrk<sp/>=<sp/>nRefTrks();</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nTrk&lt;0)</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Covariance<sp/>matrix<sp/>not<sp/>cached,<sp/>yet.<sp/>Retrieve<sp/>them<sp/>from<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>vertex<sp/>and<sp/>convert:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/>m_covCached<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>retrieve<sp/>native<sp/>covariance<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;&amp;<sp/>cov<sp/>=<sp/>m_b-&gt;covariance();</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>covariance<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(cov.size())==(3*nTrk+3)*(3*nTrk+3+1)/2)<sp/>{</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>a<sp/>VKalVrtFitter<sp/>covariance<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cachedCov.ResizeTo(3+3*nTrk,<sp/>3+3*nTrk);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ij=0;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;(3+3*nTrk);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;=i;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_cachedCov(i,j)<sp/>=<sp/>cov[ij];</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ij++;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>so<sp/>far<sp/>we<sp/>can<sp/>only<sp/>conver<sp/>VKalVrt<sp/>cov<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="985"><highlight class="normal">}</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a58aa03b5c2286be7faa1d9789ce80377" kindref="member" tooltip=": Cache refitted tracks">xAOD::BPhysHelper::cacheRefTracks</ref>()</highlight></codeline>
<codeline lineno="989"><highlight class="normal">{</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>refitted<sp/>tracks<sp/>are<sp/>already<sp/>cached,<sp/>do<sp/>nothing<sp/>and<sp/>return<sp/>true<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_refTracksCached<sp/>&amp;&amp;<sp/>!m_cachedRefTracks.empty())</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>refitted<sp/>tracks<sp/>are<sp/>cached<sp/>but<sp/>the<sp/>cache<sp/>is<sp/>empty,<sp/>return<sp/>false<sp/>(error)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_refTracksCached<sp/>&amp;&amp;<sp/>m_cachedRefTracks.empty())</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Refitted<sp/>tracks<sp/>are<sp/>not<sp/>cached,<sp/>yet.<sp/>Retrieve<sp/>them<sp/>from<sp/>the<sp/>aux<sp/>store:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/>m_refTracksCached<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/>m_cachedRefTracks.clear();</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>auxiliary<sp/>branches<sp/>accessors<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Accessor&lt; std::vector&lt;float&gt;</ref><sp/>&gt;<sp/>refTrackPxAcc(</highlight><highlight class="stringliteral">&quot;RefTrackPx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Accessor&lt; std::vector&lt;float&gt;</ref><sp/>&gt;<sp/>refTrackPyAcc(</highlight><highlight class="stringliteral">&quot;RefTrackPy&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Accessor&lt; std::vector&lt;float&gt;</ref><sp/>&gt;<sp/>refTrackPzAcc(</highlight><highlight class="stringliteral">&quot;RefTrackPz&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>branches<sp/>are<sp/>available:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!refTrackPxAcc.isAvailable(*m_b)<sp/>||<sp/></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>!refTrackPyAcc.isAvailable(*m_b)<sp/>||</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>!refTrackPzAcc.isAvailable(*m_b)<sp/>)</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>retrieve<sp/>branches:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;&amp;<sp/>refTrackPx<sp/>=<sp/>refTrackPxAcc(*m_b);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;&amp;<sp/>refTrackPy<sp/>=<sp/>refTrackPyAcc(*m_b);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;&amp;<sp/>refTrackPz<sp/>=<sp/>refTrackPzAcc(*m_b);</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>must<sp/>have<sp/>the<sp/>same<sp/>lenght</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(refTrackPx.size()!=refTrackPy.size()<sp/>||<sp/>refTrackPx.size()!=refTrackPz.size())</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>OK:<sp/>store<sp/>refitted<sp/>tracks<sp/>in<sp/>the<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint<sp/>i=0;<sp/>i&lt;refTrackPx.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cachedRefTracks.push_back(<sp/>TVector3(refTrackPx[i],<sp/>refTrackPy[i],<sp/>refTrackPz[i]<sp/>));</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1029"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a37ca51bba9c218f79b4621355ac9c248" kindref="member" tooltip=": Cache linked muons">xAOD::BPhysHelper::cacheMuons</ref>()</highlight></codeline>
<codeline lineno="1033"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>linked<sp/>muons<sp/>are<sp/>already<sp/>cached<sp/>do<sp/>nothing<sp/>and<sp/>return<sp/>true<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_muonsCached<sp/>&amp;&amp;<sp/>!m_cachedMuons.empty())</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>linked<sp/>muons<sp/>are<sp/>cached<sp/>but<sp/>the<sp/>cache<sp/>is<sp/>empty,<sp/>return<sp/>false<sp/>(error)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_muonsCached<sp/>&amp;&amp;<sp/>m_cachedMuons.empty())</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Linked<sp/>muons<sp/>are<sp/>not<sp/>cached,<sp/>yet.<sp/>Retrieve<sp/>them<sp/>from<sp/>the<sp/>aux<sp/>store:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/>m_muonsCached<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/>m_cachedMuons.clear();</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>auxiliary<sp/>branches<sp/>accessors<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Accessor&lt;MuonLinkVector&gt;</ref><sp/>muonLinksAcc(</highlight><highlight class="stringliteral">&quot;MuonLinks&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>branch<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!muonLinksAcc.isAvailable(*m_b))<sp/>{</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>retrieve<sp/>the<sp/>muon<sp/>links...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MuonLinkVector&amp;<sp/>muonLinks<sp/>=<sp/>muonLinksAcc(*m_b);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>...<sp/>and<sp/>check<sp/>if<sp/>they<sp/>are<sp/>all<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/>MuonLinkVector::const_iterator<sp/>muonLinksItr<sp/>=<sp/>muonLinks.begin();</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>muonLinksItr!=muonLinks.end();<sp/>++muonLinksItr)<sp/>{</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>links<sp/>are<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(*muonLinksItr).isValid())<sp/>{</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>OK,<sp/>cache<sp/>the<sp/>muons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/>muonLinksItr<sp/>=<sp/>muonLinks.begin();</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>muonLinksItr!=muonLinks.end();<sp/>++muonLinksItr)<sp/>{</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cachedMuons.push_back(*(*muonLinksItr));</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1074"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a66b808986e0acc560bfb1a7c8e340e27" kindref="member" tooltip=": Cache preceding vertices">xAOD::BPhysHelper::cachePrecedingVertices</ref>()</highlight></codeline>
<codeline lineno="1078"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>linked<sp/>preceding<sp/>vertices<sp/>are<sp/>already<sp/>cached<sp/>do<sp/>nothing<sp/>and<sp/>return<sp/>true<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_precedingVerticesCached<sp/>&amp;&amp;<sp/>!m_cachedPrecedingVertices.empty())</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>linked<sp/>preceding<sp/>vertices<sp/>are<sp/>cached<sp/>but<sp/>the<sp/>cache<sp/>is<sp/>empty,<sp/>return<sp/>false<sp/>(error)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_precedingVerticesCached<sp/>&amp;&amp;<sp/>m_cachedPrecedingVertices.empty())</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Linked<sp/>preceding<sp/>vertices<sp/>are<sp/>not<sp/>cached,<sp/>yet.<sp/>Retrieve<sp/>them<sp/>from<sp/>the<sp/>aux<sp/>store:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/>m_precedingVerticesCached<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/>m_cachedPrecedingVertices.clear();</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>auxiliary<sp/>branches<sp/>accessors<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Accessor&lt;VertexLinkVector&gt;</ref><sp/>precedingVertexLinksAcc(</highlight><highlight class="stringliteral">&quot;PrecedingVertexLinks&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>branch<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!precedingVertexLinksAcc.isAvailable(*m_b))<sp/>{</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>retrieve<sp/>the<sp/>precedingVertex<sp/>links...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VertexLinkVector&amp;<sp/>precedingVertexLinks<sp/>=<sp/>precedingVertexLinksAcc(*m_b);</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>...<sp/>and<sp/>check<sp/>if<sp/>they<sp/>are<sp/>all<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/>VertexLinkVector::const_iterator<sp/>precedingVertexLinksItr<sp/>=<sp/>precedingVertexLinks.begin();</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>precedingVertexLinksItr!=precedingVertexLinks.end();<sp/>++precedingVertexLinksItr)<sp/>{</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>links<sp/>are<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(*precedingVertexLinksItr).isValid())<sp/>{</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>OK,<sp/>cache<sp/>the<sp/>precedingVertices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/>precedingVertexLinksItr<sp/>=<sp/>precedingVertexLinks.begin();</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>precedingVertexLinksItr!=precedingVertexLinks.end();<sp/>++precedingVertexLinksItr)<sp/>{</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cachedPrecedingVertices.push_back(*(*precedingVertexLinksItr));</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a1e4213ff0c5a1f6f49c9c4e90cbaa24d" kindref="member" tooltip=": Cache cascade vertices">xAOD::BPhysHelper::cacheCascadeVertices</ref>()</highlight></codeline>
<codeline lineno="1123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>linked<sp/>cascade<sp/>vertices<sp/>are<sp/>already<sp/>cached<sp/>do<sp/>nothing<sp/>and<sp/>return<sp/>true<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_cascadeVerticesCached<sp/>&amp;&amp;<sp/>!m_cachedCascadeVertices.empty())</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>linked<sp/>cascade<sp/>vertices<sp/>are<sp/>cached<sp/>but<sp/>the<sp/>cache<sp/>is<sp/>empty,<sp/>return<sp/>false<sp/>(error)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_cascadeVerticesCached<sp/>&amp;&amp;<sp/>m_cachedCascadeVertices.empty())</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Linked<sp/>cascade<sp/>vertices<sp/>are<sp/>not<sp/>cached,<sp/>yet.<sp/>Retrieve<sp/>them<sp/>from<sp/>the<sp/>aux<sp/>store:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/>m_cascadeVerticesCached<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/>m_cachedCascadeVertices.clear();</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>auxiliary<sp/>branches<sp/>accessors<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Accessor&lt;VertexLinkVector&gt;</ref><sp/>cascadeVertexLinksAcc(</highlight><highlight class="stringliteral">&quot;CascadeVertexLinks&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>branch<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!cascadeVertexLinksAcc.isAvailable(*m_b))<sp/>{</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>retrieve<sp/>the<sp/>cascadeVertex<sp/>links...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VertexLinkVector&amp;<sp/>cascadeVertexLinks<sp/>=<sp/>cascadeVertexLinksAcc(*m_b);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>...<sp/>and<sp/>check<sp/>if<sp/>they<sp/>are<sp/>all<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/>VertexLinkVector::const_iterator<sp/>cascadeVertexLinksItr<sp/>=<sp/>cascadeVertexLinks.begin();</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>cascadeVertexLinksItr!=cascadeVertexLinks.end();<sp/>++cascadeVertexLinksItr)<sp/>{</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>links<sp/>are<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(*cascadeVertexLinksItr).isValid())<sp/>{</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>OK,<sp/>cache<sp/>the<sp/>cascadeVertices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/>cascadeVertexLinksItr<sp/>=<sp/>cascadeVertexLinks.begin();</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>cascadeVertexLinksItr!=cascadeVertexLinks.end();<sp/>++cascadeVertexLinksItr)<sp/>{</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cachedCascadeVertices.push_back(*(*cascadeVertexLinksItr));</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TVector3&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a393b0d81c38cf4a4a20202a099d2b39d" kindref="member">xAOD::BPhysHelper::emptyVectorOfTVector3</ref>(0);</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;const<sp/>xAOD::Muon*&gt;<sp/><sp/><sp/>xAOD::BPhysHelper::emptyVectorOfMuons(0);</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TMatrixTSym&lt;double&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xAOD::BPhysHelper::emptyMatrix(0);</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;const<sp/>xAOD::Vertex*&gt;<sp/>xAOD::BPhysHelper::emptyVectorOfVertices(0);</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBPhys/Root/BPhysHelper.cxx"/>
  </compounddef>
</doxygen>
