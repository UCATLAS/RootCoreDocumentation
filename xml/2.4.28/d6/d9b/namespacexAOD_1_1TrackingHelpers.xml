<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d6/d9b/namespacexAOD_1_1TrackingHelpers" kind="namespace">
    <compoundname>xAOD::TrackingHelpers</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="d6/d9b/namespacexAOD_1_1TrackingHelpers_1ae7bcbf2beb4ae87191169608aa570320" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TrackingHelpers::checkTPAndDefiningParamCov</definition>
        <argsstring>(const xAOD::TrackParticle *tp)</argsstring>
        <name>checkTPAndDefiningParamCov</name>
        <param>
          <type>const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref> *</type>
          <declname>tp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/TrackParticlexAODHelpers.cxx" line="9" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/TrackParticlexAODHelpers.cxx" bodystart="9" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="d6/d9b/namespacexAOD_1_1TrackingHelpers_1a6955f408bf9c3ddfb90914d774b661f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double xAOD::TrackingHelpers::_d0significance</definition>
        <argsstring>(const xAOD::TrackParticle *tp, double d0_uncert_beam_spot_2)</argsstring>
        <name>_d0significance</name>
        <param>
          <type>const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref> *</type>
          <declname>tp</declname>
        </param>
        <param>
          <type>double</type>
          <declname>d0_uncert_beam_spot_2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/TrackParticlexAODHelpers.cxx" line="28" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/TrackParticlexAODHelpers.cxx" bodystart="28" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="d6/d9b/namespacexAOD_1_1TrackingHelpers_1a550dc3e45f4f48c9923a4a2458bd4db5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double xAOD::TrackingHelpers::sqr</definition>
        <argsstring>(double a)</argsstring>
        <name>sqr</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>convenience method to calculate the square of a value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/TrackParticlexAODHelpers.h" line="16" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/TrackParticlexAODHelpers.h" bodystart="16" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="d6/d9b/namespacexAOD_1_1TrackingHelpers_1ac833f1ac9dbc467dbf9225b7aa06e5ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double xAOD::TrackingHelpers::d0significance</definition>
        <argsstring>(const xAOD::TrackParticle *tp)</argsstring>
        <name>d0significance</name>
        <param>
          <type>const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref> *</type>
          <declname>tp</declname>
        </param>
        <briefdescription>
<para>Get the impact parameter significance of a track particle in the r-phi plane. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the impact parameter significance of the track particle. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>this</parametername>
</parameternamelist>
<parameterdescription>
<para>method may throw an exception in case the uncertainty is zero or the covariance matrix does not exist. The impact parameter and uncertainty are those stored in the track particle. Will perform input (tp, cov) validity checks. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/TrackParticlexAODHelpers.h" line="22" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/TrackParticlexAODHelpers.cxx" bodystart="40" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="d6/d9b/namespacexAOD_1_1TrackingHelpers_1af37a1412ead18d1119bced3cdb198085" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double xAOD::TrackingHelpers::d0significanceUnsafe</definition>
        <argsstring>(const xAOD::TrackParticle *tp)</argsstring>
        <name>d0significanceUnsafe</name>
        <param>
          <type>const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref> *</type>
          <declname>tp</declname>
        </param>
        <briefdescription>
<para>Unsafe version of d0significance. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the impact parameter significance of the track particle or an undefined value In case the covariance matrix does not exist or the uncertainty is zero, this method will return an undefined value. In case the track particle does not exist the behaviour is undefined (segmentation fault or random return value). To validated the inputs use hasValidCovD0, hasValidCovD0andZ0, or checkPVReference. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/TrackParticlexAODHelpers.h" line="30" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/TrackParticlexAODHelpers.h" bodystart="30" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="d6/d9b/namespacexAOD_1_1TrackingHelpers_1a23d235bc4f21f21bb471b184692a3f80" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double xAOD::TrackingHelpers::d0UncertaintyBeamSpot2</definition>
        <argsstring>(double track_phi0, double beam_sigma_x, double beam_sigma_y, double beam_sigma_xy)</argsstring>
        <name>d0UncertaintyBeamSpot2</name>
        <param>
          <type>double</type>
          <declname>track_phi0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>beam_sigma_x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>beam_sigma_y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>beam_sigma_xy</declname>
        </param>
        <briefdescription>
<para>calculate the squared d0 uncertainty component due to the size of the beam spot. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>track_phi0</parametername>
</parameternamelist>
<parameterdescription>
<para>the phi angle of the track particle at the perigee wrt. the average beamspot position. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>beam_sigma_x</parametername>
</parameternamelist>
<parameterdescription>
<para>the width of the beamspot in the x-direction e.g. IBeamCondSvc:: beamSigma(0). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>beam_sigma_y</parametername>
</parameternamelist>
<parameterdescription>
<para>the width of the beamspot in the y-direction e.g. IBeamCondSvc:: beamSigma(1). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>beam_sigma_xy</parametername>
</parameternamelist>
<parameterdescription>
<para>the beamspot xy correlation e.g. IBeamCondSvc:: beamSigmaXY. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the squared d0 uncertainty component due to the size of the beam spot. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/TrackParticlexAODHelpers.h" line="44" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/TrackParticlexAODHelpers.h" bodystart="44" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="d6/d9b/namespacexAOD_1_1TrackingHelpers_1ac3ff88408164ad8e9faef5bbb49d3592" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double xAOD::TrackingHelpers::d0significance</definition>
        <argsstring>(const xAOD::TrackParticle *tp, double beam_sigma_x, double beam_sigma_y, double beam_sigma_xy)</argsstring>
        <name>d0significance</name>
        <param>
          <type>const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref> *</type>
          <declname>tp</declname>
        </param>
        <param>
          <type>double</type>
          <declname>beam_sigma_x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>beam_sigma_y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>beam_sigma_xy</declname>
        </param>
        <briefdescription>
<para>Get the impact parameter significance of a track particle in the r-phi plane where the d0 uncertainty takes the finite beamspot width into account. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>beam_sigma_x</parametername>
</parameternamelist>
<parameterdescription>
<para>the width of the beamspot in the x-direction e.g. IBeamCondSvc:: beamSigma(0). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>beam_sigma_y</parametername>
</parameternamelist>
<parameterdescription>
<para>the width of the beamspot in the y-direction e.g. IBeamCondSvc:: beamSigma(1). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>beam_sigma_xy</parametername>
</parameternamelist>
<parameterdescription>
<para>the beamspot xy correlation e.g. IBeamCondSvc:: beamSigmaXY. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the impact parameter significance of the track particle where the d0 uncertainty takes the finite beamspot width into account. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>this</parametername>
</parameternamelist>
<parameterdescription>
<para>method may throw an exception in case the uncertainty is zero or the covariance matrix does not exist or the beamspot covariance matrix is invalid. The impact parameter and uncertainty are those stored in the track particle. Will perform input (tp, cov) validity checks. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/TrackParticlexAODHelpers.h" line="62" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/TrackParticlexAODHelpers.cxx" bodystart="44" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="d6/d9b/namespacexAOD_1_1TrackingHelpers_1a916c33cdb250da0919525c201305180a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double xAOD::TrackingHelpers::d0significanceUnsafe</definition>
        <argsstring>(const xAOD::TrackParticle *tp, double beam_sigma_x, double beam_sigma_y, double beam_sigma_xy)</argsstring>
        <name>d0significanceUnsafe</name>
        <param>
          <type>const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref> *</type>
          <declname>tp</declname>
        </param>
        <param>
          <type>double</type>
          <declname>beam_sigma_x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>beam_sigma_y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>beam_sigma_xy</declname>
        </param>
        <briefdescription>
<para>Unsafe version of d0significance with beam spot uncertainty. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tp</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a track particle. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>beam_sigma_x</parametername>
</parameternamelist>
<parameterdescription>
<para>the width of the beamspot in the x-direction e.g. IBeamCondSvc:: beamSigma(0). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>beam_sigma_y</parametername>
</parameternamelist>
<parameterdescription>
<para>the width of the beamspot in the y-direction e.g. IBeamCondSvc:: beamSigma(1). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>beam_sigma_xy</parametername>
</parameternamelist>
<parameterdescription>
<para>the beamspot xy correlation e.g. IBeamCondSvc:: beamSigmaXY. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the impact parameter significance of the track particle where the d0 uncertainty takes the finite beamspot width into account, or an undefined value In case the covariance matrix does not exist or the uncertainty is zero, this method will return an undefined value. In case the track particle does not exist the behaviour is undefined (segmentation fault or random return value). To validated the inputs use hasValidCovD0, hasValidCovD0andZ0, or checkPVReference or checkBeamSpotSigma. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/TrackParticlexAODHelpers.h" line="75" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/TrackParticlexAODHelpers.h" bodystart="75" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="d6/d9b/namespacexAOD_1_1TrackingHelpers_1a1e35c6b85e8077dfb7bce68b3393712f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double xAOD::TrackingHelpers::z0significance</definition>
        <argsstring>(const xAOD::TrackParticle *tp, const xAOD::Vertex *vx=NULL)</argsstring>
        <name>z0significance</name>
        <param>
          <type>const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref> *</type>
          <declname>tp</declname>
        </param>
        <param>
          <type>const <ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref> *</type>
          <declname>vx</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Get the impact parameter significance of a track particle in the z direction. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tp</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to a track particle. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vx</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to a primary vertex with respect to which z0 is expressed or NULL. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the impact parameter significance of the track particle. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>this</parametername>
</parameternamelist>
<parameterdescription>
<para>method may throw an exception in case the uncertainty is zero or the covariance matrix does not exist. The impact parameter and uncertainty are those stored in the track particle. Will perform input (tp, cov) validity checks. If the given vertex results from a fit which includes the track particle tp, then this z0 impact parameter significance will be biased. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/TrackParticlexAODHelpers.h" line="90" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/TrackParticlexAODHelpers.cxx" bodystart="51" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="d6/d9b/namespacexAOD_1_1TrackingHelpers_1a53aa8f157be5e3d03d0ed2c1b887e9d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double xAOD::TrackingHelpers::z0significanceUnsafe</definition>
        <argsstring>(const xAOD::TrackParticle *tp)</argsstring>
        <name>z0significanceUnsafe</name>
        <param>
          <type>const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref> *</type>
          <declname>tp</declname>
        </param>
        <briefdescription>
<para>Unsafe version of z0significance. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the impact parameter significance of the track particle or an undefined value In case the covariance matrix does not exist or the uncertainty is zero or smaller, this method will return an undefined value. In case the track particle does not exist the behaviour is undefined (segmentation fault or random return value). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/TrackParticlexAODHelpers.h" line="97" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/TrackParticlexAODHelpers.h" bodystart="97" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="d6/d9b/namespacexAOD_1_1TrackingHelpers_1ad1a654eeed235bcc9d822cab06c46022" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double xAOD::TrackingHelpers::z0significanceUnsafe</definition>
        <argsstring>(const xAOD::TrackParticle *tp, const xAOD::Vertex *vx)</argsstring>
        <name>z0significanceUnsafe</name>
        <param>
          <type>const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref> *</type>
          <declname>tp</declname>
        </param>
        <param>
          <type>const <ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref> *</type>
          <declname>vx</declname>
        </param>
        <briefdescription>
<para>Unsafe version of z0significance, which uses z0 relative to a given primary vertex. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tp</parametername>
</parameternamelist>
<parameterdescription>
<para>a valid pointer to a track particle. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vx</parametername>
</parameternamelist>
<parameterdescription>
<para>a valid pointer to a primary vertex with respect to which z0 is expressed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the impact parameter significance of the track particle or an undefined value In case the covariance matrix does not exist or the uncertainty is zero or smaller, this method will return an undefined value. In case the track particle or vertex does not exist the behaviour is undefined (segmentation fault or random return value). To validated the inputs use hasValidCovZ0 or hasValidCovD0andZ0, and checkPVReference. If the given vertex results from a fit which includes the track particle tp, this z0 impact parameter significance will be biased. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/TrackParticlexAODHelpers.h" line="114" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/TrackParticlexAODHelpers.h" bodystart="114" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="d6/d9b/namespacexAOD_1_1TrackingHelpers_1acc615483a2042846cbc61cd1990adbcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::TrackingHelpers::hasValidCov</definition>
        <argsstring>(const xAOD::TrackParticle *tp)</argsstring>
        <name>hasValidCov</name>
        <param>
          <type>const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref> *</type>
          <declname>tp</declname>
        </param>
        <briefdescription>
<para>Check whether the given track particle is valid and has a covariance matrix of the defining parameters. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the track particle is valid and has a covariance matrix of the defining parameters. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/TrackParticlexAODHelpers.h" line="129" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/TrackParticlexAODHelpers.cxx" bodystart="20" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="d6/d9b/namespacexAOD_1_1TrackingHelpers_1a5299b73ed8f43a435a64f647a33583a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::TrackingHelpers::hasValidCovD0</definition>
        <argsstring>(const xAOD::TrackParticle *tp)</argsstring>
        <name>hasValidCovD0</name>
        <param>
          <type>const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref> *</type>
          <declname>tp</declname>
        </param>
        <briefdescription>
<para>Check whether the given track particle is valid and has a valid d0 uncertainty. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the track particle is valid, has a covariance matrix, and a valid d0 uncertainty. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/TrackParticlexAODHelpers.h" line="134" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/TrackParticlexAODHelpers.h" bodystart="134" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="d6/d9b/namespacexAOD_1_1TrackingHelpers_1a068949ce4db5870d9bbdc3927e3cfd1f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::TrackingHelpers::hasValidCovZ0</definition>
        <argsstring>(const xAOD::TrackParticle *tp)</argsstring>
        <name>hasValidCovZ0</name>
        <param>
          <type>const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref> *</type>
          <declname>tp</declname>
        </param>
        <briefdescription>
<para>Check whether the given track particle is valid and has a valid z0 uncertainty. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the track particle is valid, has a covariance matrix, and a valid z0 uncertainty. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/TrackParticlexAODHelpers.h" line="147" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/TrackParticlexAODHelpers.h" bodystart="147" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="d6/d9b/namespacexAOD_1_1TrackingHelpers_1a3ec900b49a57bd3cf798e778d54ba3b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::TrackingHelpers::hasValidCovD0andZ0</definition>
        <argsstring>(const xAOD::TrackParticle *tp)</argsstring>
        <name>hasValidCovD0andZ0</name>
        <param>
          <type>const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref> *</type>
          <declname>tp</declname>
        </param>
        <briefdescription>
<para>Check whether the given track particle is valid and has a valid d0 and z0 uncertainty. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the track particle is valid, has a covariance matrix, and a valid d0 and z0 uncertainty. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/TrackParticlexAODHelpers.h" line="160" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/TrackParticlexAODHelpers.h" bodystart="160" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="d6/d9b/namespacexAOD_1_1TrackingHelpers_1a3c6cd813fc669d1fb62e9993633972ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::TrackingHelpers::checkPVReference</definition>
        <argsstring>(const xAOD::TrackParticle *tp, const xAOD::Vertex *vx, const double max_pv_dxy_sqr=0.5 *0.5)</argsstring>
        <name>checkPVReference</name>
        <param>
          <type>const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref> *</type>
          <declname>tp</declname>
        </param>
        <param>
          <type>const <ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref> *</type>
          <declname>vx</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>max_pv_dxy_sqr</declname>
          <defval>0.5 *0.5</defval>
        </param>
        <briefdescription>
<para>test whether the given primary vertex has a significant displacement in r-phi wrt. d0 uncertainty. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tp</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a track particle. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vx</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a vertex. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_pv_dxy_sqr</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum deviation of the primary vertex in units of the d0 uncertainty squared. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the given primary vertex has no significant displacement in r-phi wrt. d0 uncertainty. The method will also return false if the track particle or vertex are invalid or if the track particle does not have a valid d0 uncertainty. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/TrackParticlexAODHelpers.h" line="180" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/TrackParticlexAODHelpers.h" bodystart="180" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="d6/d9b/namespacexAOD_1_1TrackingHelpers_1adafc13144c01bf32ae26d6201138ab8b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::TrackingHelpers::checkBeamSpotSigma</definition>
        <argsstring>(double beam_sigma_x, double beam_sigma_y, double beam_sigma_xy)</argsstring>
        <name>checkBeamSpotSigma</name>
        <param>
          <type>double</type>
          <declname>beam_sigma_x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>beam_sigma_y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>beam_sigma_xy</declname>
        </param>
        <briefdescription>
<para>check that the beamspot covariance matrix is valid </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>beam_sigma_x</parametername>
</parameternamelist>
<parameterdescription>
<para>the width of the beamspot in the x-direction e.g. IBeamCondSvc:: beamSigma(0). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>beam_sigma_y</parametername>
</parameternamelist>
<parameterdescription>
<para>the width of the beamspot in the y-direction e.g. IBeamCondSvc:: beamSigma(1). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>beam_sigma_xy</parametername>
</parameternamelist>
<parameterdescription>
<para>the beamspot xy correlation e.g. IBeamCondSvc:: beamSigmaXY. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the beamspot covariance matrix is valid. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/TrackParticlexAODHelpers.h" line="193" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/TrackParticlexAODHelpers.h" bodystart="193" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="d6/d9b/namespacexAOD_1_1TrackingHelpers_1a93c85d060cae7665cdc74a79be0f8dba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double xAOD::TrackingHelpers::pTErr2</definition>
        <argsstring>(const xAOD::TrackParticle *tp)</argsstring>
        <name>pTErr2</name>
        <param>
          <type>const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref> *</type>
          <declname>tp</declname>
        </param>
        <briefdescription>
<para>compute the uncertainty of pt squared. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tp</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to a track particle. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>will</parametername>
</parameternamelist>
<parameterdescription>
<para>throw an exception if the track particle is not valid, no covariance matrix of the defining parameters is set or the covariance matrix has wrong dimension. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/TrackParticlexAODHelpers.h" line="200" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/TrackParticlexAODHelpers.cxx" bodystart="77" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="d6/d9b/namespacexAOD_1_1TrackingHelpers_1aa0cdf581a925ecd0460089f8456c31c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double xAOD::TrackingHelpers::pTErr</definition>
        <argsstring>(const xAOD::TrackParticle *tp)</argsstring>
        <name>pTErr</name>
        <param>
          <type>const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref> *</type>
          <declname>tp</declname>
        </param>
        <briefdescription>
<para>compute the uncertainty of pt. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tp</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to a track particle. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>will</parametername>
</parameternamelist>
<parameterdescription>
<para>throw an exception if the track particle is not valid, no covariance matrix of the defining parameters is set or the covariance matrix has wrong dimension. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/TrackParticlexAODHelpers.h" line="206" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/TrackParticlexAODHelpers.h" bodystart="206" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="d6/d9b/namespacexAOD_1_1TrackingHelpers_1af520ca89d6942ec05151a2ffc09e3a44" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double xAOD::TrackingHelpers::pTErr2Unsafe</definition>
        <argsstring>(const xAOD::TrackParticle *tp)</argsstring>
        <name>pTErr2Unsafe</name>
        <param>
          <type>const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref> *</type>
          <declname>tp</declname>
        </param>
        <briefdescription>
<para>compute the uncertainty of pt squared. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tp</parametername>
</parameternamelist>
<parameterdescription>
<para>a valid pointer to a track particle for which the defining parameters covariance matrix is set and valid undefined behaviour if tp is invalid or no valid covariance matrix is set for the defining parameters. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/TrackParticlexAODHelpers.h" line="215" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/TrackParticlexAODHelpers.h" bodystart="215" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="d6/d9b/namespacexAOD_1_1TrackingHelpers_1a19188e625e99986ab640a5b0a6448173" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double xAOD::TrackingHelpers::pTErrUnsafe</definition>
        <argsstring>(const xAOD::TrackParticle *tp)</argsstring>
        <name>pTErrUnsafe</name>
        <param>
          <type>const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref> *</type>
          <declname>tp</declname>
        </param>
        <briefdescription>
<para>compute the uncertainty of pt. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tp</parametername>
</parameternamelist>
<parameterdescription>
<para>a valid pointer to a track particle for which the defining parameters covariance matrix is set and valid undefined behaviour if tp is invalid or no valid covariance matrix is set for the defining parameters. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/TrackParticlexAODHelpers.h" line="260" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/TrackParticlexAODHelpers.h" bodystart="260" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="d6/d9b/namespacexAOD_1_1TrackingHelpers_1abfd8ab0502ecf53ecf594537f172c6a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::TrackingHelpers::hasValidCovQoverP</definition>
        <argsstring>(const xAOD::TrackParticle *tp)</argsstring>
        <name>hasValidCovQoverP</name>
        <param>
          <type>const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref> *</type>
          <declname>tp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>return true if the covariance matrix of the defining parameters is set, has enough elements and the q/p is valid  also check theta ? </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/TrackParticlexAODHelpers.h" line="267" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/TrackParticlexAODHelpers.h" bodystart="267" bodyend="274"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/TrackParticlexAODHelpers.cxx" line="8"/>
  </compounddef>
</doxygen>
