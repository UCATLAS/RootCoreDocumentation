<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d6/d75/copyAuxStoreThinned__test_8cxx" kind="file">
    <compoundname>copyAuxStoreThinned_test.cxx</compoundname>
    <includes refid="da/dec/copyAuxStoreThinned_8h" local="yes">AthContainers/tools/copyAuxStoreThinned.h</includes>
    <includes refid="d3/d0f/AuxStoreInternal_8h" local="yes">AthContainers/AuxStoreInternal.h</includes>
    <includes refid="db/d7f/AuxTypeRegistry_8h" local="yes">AthContainers/AuxTypeRegistry.h</includes>
    <includes refid="da/d8e/foreach_8h" local="yes">AthContainers/tools/foreach.h</includes>
    <includes local="no">vector</includes>
    <includes local="no">iostream</includes>
    <includes local="no">cassert</includes>
    <includes refid="d0/dab/TestThinningSvc_8icc" local="yes">TestThinningSvc.icc</includes>
    <incdepgraph>
      <node id="72434">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="72456">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="72414" relation="include">
        </childnode>
        <childnode refid="72416" relation="include">
        </childnode>
        <childnode refid="72423" relation="include">
        </childnode>
        <childnode refid="72424" relation="include">
        </childnode>
      </node>
      <node id="72457">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="72409">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="72410" relation="include">
        </childnode>
        <childnode refid="72412" relation="include">
        </childnode>
        <childnode refid="72426" relation="include">
        </childnode>
        <childnode refid="72425" relation="include">
        </childnode>
      </node>
      <node id="72422">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="72424">
        <label>functional</label>
      </node>
      <node id="72420">
        <label>limits</label>
      </node>
      <node id="72426">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="72432">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="72417">
        <label>iterator</label>
      </node>
      <node id="72446">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="72421" relation="include">
        </childnode>
        <childnode refid="72447" relation="include">
        </childnode>
      </node>
      <node id="72443">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="72437" relation="include">
        </childnode>
        <childnode refid="72418" relation="include">
        </childnode>
      </node>
      <node id="72448">
        <label>stdint.h</label>
      </node>
      <node id="72440">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="72412" relation="include">
        </childnode>
        <childnode refid="72428" relation="include">
        </childnode>
      </node>
      <node id="72459">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="72427">
        <label>AthContainersInterfaces/IAuxStoreIO.h</label>
        <link refid="d9/db5/IAuxStoreIO_8h"/>
        <childnode refid="72411" relation="include">
        </childnode>
        <childnode refid="72428" relation="include">
        </childnode>
        <childnode refid="72429" relation="include">
        </childnode>
        <childnode refid="72425" relation="include">
        </childnode>
      </node>
      <node id="72413">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="72414" relation="include">
        </childnode>
        <childnode refid="72423" relation="include">
        </childnode>
        <childnode refid="72424" relation="include">
        </childnode>
      </node>
      <node id="72419">
        <label>cmath</label>
      </node>
      <node id="72461">
        <label>cassert</label>
      </node>
      <node id="72435">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="72421">
        <label>string</label>
      </node>
      <node id="72439">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="72412" relation="include">
        </childnode>
        <childnode refid="72428" relation="include">
        </childnode>
      </node>
      <node id="72465">
        <label>map</label>
      </node>
      <node id="72407">
        <label>AthContainers/tools/copyAuxStoreThinned.h</label>
        <link refid="da/dec/copyAuxStoreThinned_8h"/>
      </node>
      <node id="72453">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="72450">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="72464">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="72458">
        <label>AthContainers/tools/foreach.h</label>
        <link refid="da/d8e/foreach_8h"/>
        <childnode refid="72459" relation="include">
        </childnode>
      </node>
      <node id="72433">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="72445">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="72446" relation="include">
        </childnode>
        <childnode refid="72420" relation="include">
        </childnode>
        <childnode refid="72448" relation="include">
        </childnode>
        <childnode refid="72449" relation="include">
        </childnode>
      </node>
      <node id="72411">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="72412" relation="include">
        </childnode>
        <childnode refid="72413" relation="include">
        </childnode>
      </node>
      <node id="72414">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="72415" relation="include">
        </childnode>
        <childnode refid="72416" relation="include">
        </childnode>
        <childnode refid="72417" relation="include">
        </childnode>
        <childnode refid="72412" relation="include">
        </childnode>
        <childnode refid="72418" relation="include">
        </childnode>
        <childnode refid="72419" relation="include">
        </childnode>
        <childnode refid="72420" relation="include">
        </childnode>
        <childnode refid="72421" relation="include">
        </childnode>
        <childnode refid="72422" relation="include">
        </childnode>
      </node>
      <node id="72428">
        <label>typeinfo</label>
      </node>
      <node id="72449">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="72447">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="72406">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/copyAuxStoreThinned_test.cxx</label>
        <link refid="copyAuxStoreThinned_test.cxx"/>
        <childnode refid="72407" relation="include">
        </childnode>
        <childnode refid="72408" relation="include">
        </childnode>
        <childnode refid="72438" relation="include">
        </childnode>
        <childnode refid="72458" relation="include">
        </childnode>
        <childnode refid="72437" relation="include">
        </childnode>
        <childnode refid="72460" relation="include">
        </childnode>
        <childnode refid="72461" relation="include">
        </childnode>
        <childnode refid="72462" relation="include">
        </childnode>
      </node>
      <node id="72452">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="72425">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="72438">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="72411" relation="include">
        </childnode>
        <childnode refid="72439" relation="include">
        </childnode>
        <childnode refid="72440" relation="include">
        </childnode>
        <childnode refid="72441" relation="include">
        </childnode>
        <childnode refid="72454" relation="include">
        </childnode>
        <childnode refid="72430" relation="include">
        </childnode>
        <childnode refid="72412" relation="include">
        </childnode>
        <childnode refid="72428" relation="include">
        </childnode>
        <childnode refid="72437" relation="include">
        </childnode>
        <childnode refid="72456" relation="include">
        </childnode>
        <childnode refid="72457" relation="include">
        </childnode>
      </node>
      <node id="72437">
        <label>vector</label>
      </node>
      <node id="72416">
        <label>utility</label>
      </node>
      <node id="72436">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="72431">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="72442">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="72430">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="72431" relation="include">
        </childnode>
        <childnode refid="72432" relation="include">
        </childnode>
        <childnode refid="72433" relation="include">
        </childnode>
        <childnode refid="72434" relation="include">
        </childnode>
        <childnode refid="72435" relation="include">
        </childnode>
      </node>
      <node id="72418">
        <label>cstdlib</label>
      </node>
      <node id="72460">
        <label>iostream</label>
      </node>
      <node id="72410">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="72411" relation="include">
        </childnode>
        <childnode refid="72412" relation="include">
        </childnode>
        <childnode refid="72425" relation="include">
        </childnode>
      </node>
      <node id="72412">
        <label>cstddef</label>
      </node>
      <node id="72441">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="72439" relation="include">
        </childnode>
        <childnode refid="72442" relation="include">
        </childnode>
        <childnode refid="72443" relation="include">
        </childnode>
        <childnode refid="72444" relation="include">
        </childnode>
        <childnode refid="72436" relation="include">
        </childnode>
        <childnode refid="72428" relation="include">
        </childnode>
        <childnode refid="72437" relation="include">
        </childnode>
        <childnode refid="72415" relation="include">
        </childnode>
        <childnode refid="72448" relation="include">
        </childnode>
        <childnode refid="72451" relation="include">
        </childnode>
        <childnode refid="72452" relation="include">
        </childnode>
        <childnode refid="72453" relation="include">
        </childnode>
      </node>
      <node id="72462">
        <label>TestThinningSvc.icc</label>
        <link refid="d0/dab/TestThinningSvc_8icc"/>
        <childnode refid="72463" relation="include">
        </childnode>
        <childnode refid="72464" relation="include">
        </childnode>
        <childnode refid="72465" relation="include">
        </childnode>
      </node>
      <node id="72463">
        <label>SGTools/DataProxy.h</label>
      </node>
      <node id="72451">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="72429">
        <label>set</label>
      </node>
      <node id="72455">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="72444">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="72442" relation="include">
        </childnode>
        <childnode refid="72445" relation="include">
        </childnode>
        <childnode refid="72436" relation="include">
        </childnode>
        <childnode refid="72437" relation="include">
        </childnode>
        <childnode refid="72450" relation="include">
        </childnode>
      </node>
      <node id="72415">
        <label>algorithm</label>
      </node>
      <node id="72408">
        <label>AthContainers/AuxStoreInternal.h</label>
        <link refid="d3/d0f/AuxStoreInternal_8h"/>
        <childnode refid="72409" relation="include">
        </childnode>
        <childnode refid="72427" relation="include">
        </childnode>
        <childnode refid="72430" relation="include">
        </childnode>
        <childnode refid="72436" relation="include">
        </childnode>
        <childnode refid="72437" relation="include">
        </childnode>
        <childnode refid="72426" relation="include">
        </childnode>
        <childnode refid="72425" relation="include">
        </childnode>
      </node>
      <node id="72423">
        <label>memory</label>
      </node>
      <node id="72454">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="72440" relation="include">
        </childnode>
        <childnode refid="72441" relation="include">
        </childnode>
        <childnode refid="72455" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="df/d7b/classAuxStoreTest" prot="public">AuxStoreTest</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="d6/d75/copyAuxStoreThinned__test_8cxx_1a3283e171180fb1aaeb02fc6431a606fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void compare</definition>
        <argsstring>(const SG::AuxStoreInternal &amp;a, const SG::AuxStoreInternal &amp;b, bool thinned=false, SG::auxid_t suppressed=SG::null_auxid)</argsstring>
        <name>compare</name>
        <param>
          <type>const <ref refid="d1/d1c/classSG_1_1AuxStoreInternal" kindref="compound">SG::AuxStoreInternal</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="d1/d1c/classSG_1_1AuxStoreInternal" kindref="compound">SG::AuxStoreInternal</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>thinned</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member">SG::auxid_t</ref></type>
          <declname>suppressed</declname>
          <defval>SG::null_auxid</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/copyAuxStoreThinned_test.cxx" line="52" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/copyAuxStoreThinned_test.cxx" bodystart="48" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="d6/d75/copyAuxStoreThinned__test_8cxx_1a1440a7779ac56f47a3f355ce4a8c7da0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test1</definition>
        <argsstring>()</argsstring>
        <name>test1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/copyAuxStoreThinned_test.cxx" line="83" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/copyAuxStoreThinned_test.cxx" bodystart="82" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="d6/d75/copyAuxStoreThinned__test_8cxx_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/copyAuxStoreThinned_test.cxx" line="132" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/copyAuxStoreThinned_test.cxx" bodystart="131" bodyend="135"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Regression tests for copyAuxStoreThinned. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>scott snyder &lt;<ulink url="mailto:snyder@bnl.gov">snyder@bnl.gov</ulink>&gt; </para></simplesect>
<simplesect kind="date"><para>Jul, 2014 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>$Id$</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight><highlight class="preprocessor">#undef<sp/>NDEBUG</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>XAOD_STANDALONE</highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="da/dec/copyAuxStoreThinned_8h" kindref="compound" tooltip="Helper to copy an aux store while applying thinning.">AthContainers/tools/copyAuxStoreThinned.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d3/d0f/AuxStoreInternal_8h" kindref="compound" tooltip="An auxiliary data store that holds data internally.">AthContainers/AuxStoreInternal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="db/d7f/AuxTypeRegistry_8h" kindref="compound" tooltip="Handle mappings between names and auxid_t.">AthContainers/AuxTypeRegistry.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="da/d8e/foreach_8h" kindref="compound" tooltip="foreach helper for standalone build.">AthContainers/tools/foreach.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d0/dab/TestThinningSvc_8icc" kindref="compound" tooltip="Dummy thinning service, for regression tests.">TestThinningSvc.icc</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="df/d7b/classAuxStoreTest" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="df/d7b/classAuxStoreTest" kindref="compound">AuxStoreTest</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>SG::<ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1adaae95b4226c1514d5327ae16c9a15cd" kindref="member" tooltip="Constructor.">AuxStoreInternal</ref></highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><ref refid="df/d7b/classAuxStoreTest" kindref="compound">AuxStoreTest</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>suppress<sp/>(<ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/>auxid)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>{<sp/>m_suppressed.insert<sp/>(auxid);<sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">SG::auxid_set_t</ref>&amp;<sp/><ref refid="df/d7b/classAuxStoreTest_1a5156bbe52bd7c219286b9ec486f1785f" kindref="member" tooltip="Get a list of all the variables that need to be written out.">getSelectedAuxIDs</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="35"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>m_selected<sp/>=<sp/><ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1a40f6e8146486daebb9cc12c2b5a626a6" kindref="member" tooltip="Return a set of identifiers for existing data items in this store.">getAuxIDs</ref>();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>ATHCONTAINERS_FOREACH(<ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/>auxid,<sp/>m_suppressed)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_selected.erase<sp/>(auxid);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_selected;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">SG::auxid_set_t</ref><sp/>m_suppressed;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/><ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">SG::auxid_set_t</ref><sp/>m_selected;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">};</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>compare<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/d1c/classSG_1_1AuxStoreInternal" kindref="compound" tooltip="An auxiliary data store that holds data internally.">SG::AuxStoreInternal</ref>&amp;<sp/>a,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/d1c/classSG_1_1AuxStoreInternal" kindref="compound" tooltip="An auxiliary data store that holds data internally.">SG::AuxStoreInternal</ref>&amp;<sp/>b,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>thinned<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/>suppressed<sp/>=<sp/>SG::null_auxid)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(thinned)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>assert<sp/>(a.<ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1a7ac1985447a8d2b73561a434f06822ab" kindref="member" tooltip="Return the number of elements in the store.">size</ref>()/2<sp/>==<sp/>b.<ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1a7ac1985447a8d2b73561a434f06822ab" kindref="member" tooltip="Return the number of elements in the store.">size</ref>());</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>assert<sp/>(a.<ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1a7ac1985447a8d2b73561a434f06822ab" kindref="member" tooltip="Return the number of elements in the store.">size</ref>()<sp/>==<sp/>b.<ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1a7ac1985447a8d2b73561a434f06822ab" kindref="member" tooltip="Return the number of elements in the store.">size</ref>());</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry" kindref="compound" tooltip="Handle mappings between names and auxid_t.">SG::AuxTypeRegistry</ref>&amp;<sp/>reg<sp/>=<sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry_1ab22c247525e0883b46012f14b6f5a048" kindref="member" tooltip="Return the singleton registry instance.">SG::AuxTypeRegistry::instance</ref>();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>ATHCONTAINERS_FOREACH(<ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>a.<ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1a40f6e8146486daebb9cc12c2b5a626a6" kindref="member" tooltip="Return a set of identifiers for existing data items in this store.">getAuxIDs</ref>())<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/>suppressed)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert<sp/>(b.<ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1a40f6e8146486daebb9cc12c2b5a626a6" kindref="member" tooltip="Return a set of identifiers for existing data items in this store.">getAuxIDs</ref>().count(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>aptr<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(a.<ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1a90b2121f7a3ae82b0cd339cb5d212d48" kindref="member" tooltip="Return the data vector for one aux data item.">getData</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>bptr<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(b.<ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1a90b2121f7a3ae82b0cd339cb5d212d48" kindref="member" tooltip="Return the data vector for one aux data item.">getData</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>assert<sp/>(aptr<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>bptr<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/>reg.<ref refid="db/d33/classSG_1_1AuxTypeRegistry_1a1429d97078f8731031ddeae38654039e" kindref="member" tooltip="Return size of an element in the STL vector.">getEltSize</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ia=0,<sp/>ib=0;<sp/>ia<sp/>&lt;<sp/>a.<ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1a7ac1985447a8d2b73561a434f06822ab" kindref="member" tooltip="Return the number of elements in the store.">size</ref>();<sp/>++ia)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!thinned<sp/>||<sp/>ia%2<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert<sp/>(memcmp<sp/>(aptr<sp/>+<sp/>ia*sz<sp/>,<sp/>bptr<sp/>+<sp/>ib*sz,<sp/>sz)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++ib;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test1()</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;test1\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="db/dc7/classTestThinningSvc" kindref="compound">TestThinningSvc</ref><sp/>svc;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><ref refid="df/d7b/classAuxStoreTest" kindref="compound">AuxStoreTest</ref><sp/>src;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><ref refid="d1/d1c/classSG_1_1AuxStoreInternal" kindref="compound" tooltip="An auxiliary data store that holds data internally.">SG::AuxStoreInternal</ref><sp/>dst;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><ref refid="dd/d59/namespaceSG_1a38b539ad86491a55bf89748a05e7906a" kindref="member" tooltip="Helper to copy an aux store while applying thinning.">copyAuxStoreThinned</ref><sp/>(src,<sp/>dst,<sp/>0);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>compare<sp/>(src,<sp/>dst);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><ref refid="dd/d59/namespaceSG_1a38b539ad86491a55bf89748a05e7906a" kindref="member" tooltip="Helper to copy an aux store while applying thinning.">copyAuxStoreThinned</ref><sp/>(src,<sp/>dst,<sp/>&amp;svc);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>compare<sp/>(src,<sp/>dst);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/>ityp<sp/>=<sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry_1ab22c247525e0883b46012f14b6f5a048" kindref="member" tooltip="Return the singleton registry instance.">SG::AuxTypeRegistry::instance</ref>().getAuxID&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;anInt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/>ftyp<sp/>=<sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry_1ab22c247525e0883b46012f14b6f5a048" kindref="member" tooltip="Return the singleton registry instance.">SG::AuxTypeRegistry::instance</ref>().getAuxID&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;aFloat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>iptr<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/>(src.<ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1a90b2121f7a3ae82b0cd339cb5d212d48" kindref="member" tooltip="Return the data vector for one aux data item.">getData</ref><sp/>(ityp,<sp/>10,<sp/>10));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>fptr<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/>(src.<ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1a90b2121f7a3ae82b0cd339cb5d212d48" kindref="member" tooltip="Return the data vector for one aux data item.">getData</ref><sp/>(ftyp,<sp/>10,<sp/>10));</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>10;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>iptr[i]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>fptr[i]<sp/>=<sp/>10*i;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><ref refid="d1/d1c/classSG_1_1AuxStoreInternal" kindref="compound" tooltip="An auxiliary data store that holds data internally.">SG::AuxStoreInternal</ref><sp/>src2;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>svc.remap<sp/>(&amp;src2,<sp/>1,<sp/>2);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><ref refid="dd/d59/namespaceSG_1a38b539ad86491a55bf89748a05e7906a" kindref="member" tooltip="Helper to copy an aux store while applying thinning.">copyAuxStoreThinned</ref><sp/>(src,<sp/>dst,<sp/>&amp;svc);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>compare<sp/>(src,<sp/>dst);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0,<sp/>i1=0;<sp/>i<sp/>&lt;<sp/>10;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i%2<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>svc.remap<sp/>(&amp;src,<sp/>i,<sp/>i1);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++i1;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>svc.remap<sp/>(&amp;src,<sp/>i,<sp/>IThinningSvc::RemovedIdx);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><ref refid="dd/d59/namespaceSG_1a38b539ad86491a55bf89748a05e7906a" kindref="member" tooltip="Helper to copy an aux store while applying thinning.">copyAuxStoreThinned</ref><sp/>(src,<sp/>dst,<sp/>&amp;svc);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>compare<sp/>(src,<sp/>dst,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><ref refid="d1/d1c/classSG_1_1AuxStoreInternal" kindref="compound" tooltip="An auxiliary data store that holds data internally.">SG::AuxStoreInternal</ref><sp/>dst2;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>src.suppress<sp/>(ftyp);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><ref refid="dd/d59/namespaceSG_1a38b539ad86491a55bf89748a05e7906a" kindref="member" tooltip="Helper to copy an aux store while applying thinning.">copyAuxStoreThinned</ref><sp/>(src,<sp/>dst2,<sp/>&amp;svc);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>compare<sp/>(src,<sp/>dst2,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>ftyp);</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>test1();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="138"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>XAOD_STANDALONE</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/copyAuxStoreThinned_test.cxx"/>
  </compounddef>
</doxygen>
