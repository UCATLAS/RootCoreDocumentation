<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d6/dab/AsgTools_2AsgTools_2MessageCheck_8h" kind="file">
    <compoundname>MessageCheck.h</compoundname>
    <includes local="no">type_traits</includes>
    <includes refid="df/d0a/TReturnCode_8h" local="no">xAODRootAccess/tools/TReturnCode.h</includes>
    <includes local="yes">AthenaBaseComps/AthMessaging.h</includes>
    <includedby refid="d5/d94/AsgExampleTools_2test_2gt__AnaToolHandle__test_8cxx" local="no">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgExampleTools/test/gt_AnaToolHandle_test.cxx</includedby>
    <includedby refid="d1/daf/gt__ToolHandle__test_8cxx" local="no">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgExampleTools/test/gt_ToolHandle_test.cxx</includedby>
    <includedby refid="df/d70/hello_8cxx" local="no">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgExampleTools/util/hello.cxx</includedby>
    <includedby refid="d6/de7/AnaToolHandle_8icc" local="no">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/AnaToolHandle.icc</includedby>
    <includedby refid="d0/d72/AsgTools_2AsgTools_2UnitTest_8h" local="no">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/UnitTest.h</includedby>
    <includedby refid="d0/d4e/AnaToolHandle_8cxx" local="no">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/Root/AnaToolHandle.cxx</includedby>
    <includedby refid="da/d87/AsgTools_2Root_2MessageCheck_8cxx" local="no">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/Root/MessageCheck.cxx</includedby>
    <includedby refid="d6/d77/gt__UnitTest__test_8cxx" local="no">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/test/gt_UnitTest_test.cxx</includedby>
    <includedby refid="dd/d31/AsgTools_2test_2inc__MessageCheck_8cxx" local="no">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/test/inc_MessageCheck.cxx</includedby>
    <includedby refid="df/d00/AsgTools_2test_2ut__MessageCheck_8cxx" local="no">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/test/ut_MessageCheck.cxx</includedby>
    <includedby refid="da/d1b/AssociationUtils_2test_2gt__AnaToolHandle__test_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AssociationUtils/test/gt_AnaToolHandle_test.cxx</includedby>
    <includedby refid="d9/da5/gt__OverlapRemovalInit__test_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AssociationUtils/test/gt_OverlapRemovalInit_test.cxx</includedby>
    <includedby refid="d9/da4/gt__toolbox__test_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AssociationUtils/test/gt_toolbox_test.cxx</includedby>
    <includedby refid="d0/dd1/ut__ath__checkTrigger__test_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CPAnalysisExamples/test/ut_ath_checkTrigger_test.cxx</includedby>
    <includedby refid="d0/d34/ut__ath__EgammaCalibrationAndSmearingTool__test_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CPAnalysisExamples/test/ut_ath_EgammaCalibrationAndSmearingTool_test.cxx</includedby>
    <includedby refid="d6/dfc/checkxAODTrigger_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CPAnalysisExamples/util/checkxAODTrigger.cxx</includedby>
    <includedby refid="d8/d0d/VomsProxySvc_8cxx" local="no">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/Root/VomsProxySvc.cxx</includedby>
    <includedby refid="db/d6c/gt__DirectDriver_8cxx" local="no">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/test/gt_DirectDriver.cxx</includedby>
    <includedby refid="d6/d4b/gt__LocalDriver_8cxx" local="no">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/test/gt_LocalDriver.cxx</includedby>
    <includedby refid="d5/db5/gt__LSFDriver__EOS_8cxx" local="no">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/test/gt_LSFDriver_EOS.cxx</includedby>
    <includedby refid="dd/d5c/gt__ProofDriver_8cxx" local="no">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/test/gt_ProofDriver.cxx</includedby>
    <includedby refid="dd/dc5/PATInterfaces_2PATInterfaces_2MessageCheck_8h" local="no">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATInterfaces/PATInterfaces/MessageCheck.h</includedby>
    <includedby refid="d4/d50/MyPMGApp_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PMGTools/test/MyPMGApp.cxx</includedby>
    <includedby refid="d5/dba/QuickAna_2QuickAna_2MessageCheck_8h" local="no">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/QuickAna/MessageCheck.h</includedby>
    <includedby refid="d5/d55/gt__KinSelect_8cxx" local="no">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/test/gt_KinSelect.cxx</includedby>
    <includedby refid="de/d2d/GridTools_8cxx" local="no">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/GridTools.cxx</includedby>
    <includedby refid="d1/dd9/GridTools_8h" local="no">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/GridTools.h</includedby>
    <incdepgraph>
      <node id="8333">
        <label>xAODRootAccess/tools/TReturnCode.h</label>
        <link refid="df/d0a/TReturnCode_8h_source"/>
      </node>
      <node id="8334">
        <label>AthenaBaseComps/AthMessaging.h</label>
      </node>
      <node id="8331">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h</label>
        <link refid="AsgTools/AsgTools/MessageCheck.h"/>
        <childnode refid="8332" relation="include">
        </childnode>
        <childnode refid="8333" relation="include">
        </childnode>
        <childnode refid="8334" relation="include">
        </childnode>
      </node>
      <node id="8332">
        <label>type_traits</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="8337">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATInterfaces/PATInterfaces/MessageCheck.h</label>
        <link refid="dd/dc5/PATInterfaces_2PATInterfaces_2MessageCheck_8h_source"/>
      </node>
      <node id="8336">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/UnitTest.h</label>
        <link refid="d0/d72/AsgTools_2AsgTools_2UnitTest_8h_source"/>
      </node>
      <node id="8339">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/GridTools.h</label>
        <link refid="d1/dd9/GridTools_8h_source"/>
      </node>
      <node id="8335">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h</label>
        <link refid="AsgTools/AsgTools/MessageCheck.h"/>
        <childnode refid="8336" relation="include">
        </childnode>
        <childnode refid="8337" relation="include">
        </childnode>
        <childnode refid="8338" relation="include">
        </childnode>
        <childnode refid="8339" relation="include">
        </childnode>
      </node>
      <node id="8338">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/QuickAna/MessageCheck.h</label>
        <link refid="d5/dba/QuickAna_2QuickAna_2MessageCheck_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="d5/d88/structasg_1_1CheckHelper_3_01StatusCode_01_4" prot="public">asg::CheckHelper&lt; StatusCode &gt;</innerclass>
    <innerclass refid="de/d18/structasg_1_1CheckHelper_3_01xAOD_1_1TReturnCode_01_4" prot="public">asg::CheckHelper&lt; xAOD::TReturnCode &gt;</innerclass>
    <innerclass refid="d2/d34/structasg_1_1CheckHelper_3_01int_01_4" prot="public">asg::CheckHelper&lt; int &gt;</innerclass>
    <innerclass refid="d0/d9a/structasg_1_1CheckHelper_3_01bool_01_4" prot="public">asg::CheckHelper&lt; bool &gt;</innerclass>
    <innerclass refid="d5/d2d/structasg_1_1CheckHelper_3_01T_01_5_01_4" prot="public">asg::CheckHelper&lt; T * &gt;</innerclass>
    <innernamespace refid="d1/d56/namespaceasg">asg</innernamespace>
    <innernamespace refid="d0/da8/namespaceasg_1_1detail">asg::detail</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="d6/dab/AsgTools_2AsgTools_2MessageCheck_8h_1ada0a8a56e791ad45e13623de84b96063" prot="public" static="no">
        <name>ANA_MSG_HEADER</name>
        <param><defname>NAME</defname></param>
        <initializer>namespace NAME {				\
  MsgStream&amp; msg ();				\
  MsgStream&amp; msg (MSG::Level level);		\
  bool msgLvl (MSG::Level lvl);			\
  void setMsgLevel (MSG::Level level); }</initializer>
        <briefdescription>
<para>for standalone code this creates a new message category </para>        </briefdescription>
        <detaileddescription>
<para>The idea is that this provides a way to use the &quot;standard&quot; messaging macros in code that doesn&apos;t inherit from AsgTools. All you have to do is put <programlisting><codeline><highlight class="normal"><sp/>{.cpp}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">NAME;</highlight></codeline>
</programlisting> at the beginning of a function and then you can use the messaging macros as if you were inside an AsgTool.</para><para>Or almost, in RootCore this works just fine, but in <ref refid="d5/dc5/namespaceAthena" kindref="compound">Athena</ref> ATH_MSG_* is defined slightly differently so that this won&apos;t work. To that end we are providing ANA_MSG_* macros that work with this, and in both RootCore and <ref refid="d5/dc5/namespaceAthena" kindref="compound">Athena</ref>. This way you can also use ATH_CHECK/ANA_CHECK in your code.</para><para>Besides allowing to use the standard messaging macros, you can also set the message level similar to how you&apos;d do it for an AsgTool: <programlisting><codeline><highlight class="normal"><sp/>{.cpp}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>NAME::setMsgLevel<sp/>(MSG::DEBUG);</highlight></codeline>
</programlisting></para><para><simplesect kind="see"><para>ANA_MSG_SOURCE </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" line="118" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d6/dab/AsgTools_2AsgTools_2MessageCheck_8h_1a0c41b5ca46cb9dae3100ffce8d4bd9b9" prot="public" static="no">
        <name>ASG_TOOLS_MSG_STREAM</name>
        <param><defname>NAME</defname></param>
        <param><defname>TITLE</defname></param>
        <initializer>static MsgStream NAME (::asg::detail::getMessageSvcAthena(), TITLE);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" line="126" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d6/dab/AsgTools_2AsgTools_2MessageCheck_8h_1ada6b6773e13d44930598cecb6fa1e9ee" prot="public" static="no">
        <name>ANA_MSG_SOURCE</name>
        <param><defname>NAME</defname></param>
        <param><defname>TITLE</defname></param>
        <initializer>namespace NAME				\
  {						\
  namespace					\
    {						\
  MSG::Level&amp; msgLevel ()			\
    {						\
  static MSG::Level level = MSG::INFO;		\
  return level;					\
    }						\
  }						\
						\
						\
						\
  MsgStream&amp; msg ()				\
  {						\
    ASG_TOOLS_MSG_STREAM (result, TITLE);	\
  return result;				\
  }						\
						\
						\
  MsgStream&amp; msg (MSG::Level level)		\
  {						\
    return msg() &lt;&lt; level;			\
  }						\
						\
						\
						\
  bool msgLvl (MSG::Level lvl)			\
  {						\
    return msgLevel() &lt;= lvl;			\
  }						\
						\
						\
						\
  void setMsgLevel (MSG::Level level)		\
  {						\
    msgLevel() = level;				\
  }						\
  }</initializer>
        <briefdescription>
<para>the source code part of ANA_MSG_SOURCE </para>        </briefdescription>
        <detaileddescription>
<para>For every message category that you introduce via ANA_MSG_SOURCE you have to add this in one of your source files, to add the source code needed for its function implementations </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" line="173" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d6/dab/AsgTools_2AsgTools_2MessageCheck_8h_1adcad7318836105766cb4de037834a1e7" prot="public" static="no">
        <name>MSGSTREAM_FNAME</name>
        <initializer>&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" line="275" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d6/dab/AsgTools_2AsgTools_2MessageCheck_8h_1a232af85b9f9fa1c301d2ff52787d4555" prot="public" static="no">
        <name>ASG_TOOLS_MSGSTREAM_FNAME</name>
        <initializer>&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" line="283" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d6/dab/AsgTools_2AsgTools_2MessageCheck_8h_1a5795a5fb8af7d1c3617ba8497453c2c9" prot="public" static="no">
        <name>ASG_TOOLS_MSGSTREAM_PREFIX</name>
        <initializer>__FILE__ &lt;&lt; &quot;:&quot; &lt;&lt; __LINE__ &lt;&lt; &quot; (&quot; &lt;&lt; ASG_TOOLS_MSGSTREAM_FNAME &lt;&lt; &quot;): &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Common prefix for the non-usual messages</para><para>The idea is that a regular user usually only wants to see DEBUG, INFO and some WARNING messages. So those should be reasonably short. On the other hand serious warnings (ERROR, FATAL) messages should be as precise as possible to make debugging the issue easier. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" line="294" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d6/dab/AsgTools_2AsgTools_2MessageCheck_8h_1a8581a4d732bb0aef0cde43b3ae235d28" prot="public" static="no">
        <name>ANA_MSG_LVL_SERIOUS</name>
        <param><defname>lvl</defname></param>
        <param><defname>xmsg</defname></param>
        <initializer>msg( lvl ) &lt;&lt; ASG_TOOLS_MSGSTREAM_PREFIX &lt;&lt; xmsg &lt;&lt; endmsg</initializer>
        <briefdescription>
<para>Macro used to print &quot;serious&quot; messages. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" line="298" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d6/dab/AsgTools_2AsgTools_2MessageCheck_8h_1aa0e17abda1635d67d399b330aab8e255" prot="public" static="no">
        <name>ANA_MSG_LVL_NOCHK</name>
        <param><defname>lvl</defname></param>
        <param><defname>xmsg</defname></param>
        <initializer>msg( lvl ) &lt;&lt; xmsg &lt;&lt; endmsg</initializer>
        <briefdescription>
<para>Macro used to print &quot;regular&quot; messages. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" line="302" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d6/dab/AsgTools_2AsgTools_2MessageCheck_8h_1a828825b7a902cba362a4a046b303811b" prot="public" static="no">
        <name>ANA_MSG_LVL</name>
        <param><defname>lvl</defname></param>
        <param><defname>xmsg</defname></param>
        <initializer>do {                                         \
      if( msg().level() &lt;= lvl ) {             \
         ANA_MSG_LVL_NOCHK( lvl, xmsg );        \
      }                                         \
   } while( 0 )</initializer>
        <briefdescription>
<para>Macro used to print &quot;protected&quot; messages. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" line="310" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" bodystart="305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d6/dab/AsgTools_2AsgTools_2MessageCheck_8h_1a7b1aad53a84e553dbb83a3510c13dfb2" prot="public" static="no">
        <name>ANA_MSG_VERBOSE</name>
        <param><defname>xmsg</defname></param>
        <initializer>ANA_MSG_LVL( MSG::VERBOSE, xmsg )</initializer>
        <briefdescription>
<para>Macro printing verbose messages. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" line="313" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d6/dab/AsgTools_2AsgTools_2MessageCheck_8h_1a7c8ec32f57295d19d2c9467269a0f5f6" prot="public" static="no">
        <name>ANA_MSG_DEBUG</name>
        <param><defname>xmsg</defname></param>
        <initializer>ANA_MSG_LVL( MSG::DEBUG, xmsg )</initializer>
        <briefdescription>
<para>Macro printing debug messages. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" line="315" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d6/dab/AsgTools_2AsgTools_2MessageCheck_8h_1a09e295fe88c0adfcca2f6037f10bc532" prot="public" static="no">
        <name>ANA_MSG_INFO</name>
        <param><defname>xmsg</defname></param>
        <initializer>ANA_MSG_LVL_NOCHK( MSG::INFO,  xmsg )</initializer>
        <briefdescription>
<para>Macro printing info messages. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" line="317" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d6/dab/AsgTools_2AsgTools_2MessageCheck_8h_1a4ab7665fb5f96643a97cc1425b9bbf3d" prot="public" static="no">
        <name>ANA_MSG_WARNING</name>
        <param><defname>xmsg</defname></param>
        <initializer>ANA_MSG_LVL_NOCHK( MSG::WARNING, xmsg )</initializer>
        <briefdescription>
<para>Macro printing warning messages. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" line="319" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d6/dab/AsgTools_2AsgTools_2MessageCheck_8h_1a159f133277d4b9ee793ebc5dc9b64e54" prot="public" static="no">
        <name>ANA_MSG_ERROR</name>
        <param><defname>xmsg</defname></param>
        <initializer>ANA_MSG_LVL_SERIOUS( MSG::ERROR, xmsg )</initializer>
        <briefdescription>
<para>Macro printing error messages. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" line="321" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" bodystart="321" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d6/dab/AsgTools_2AsgTools_2MessageCheck_8h_1ab457e246b484b94513e1208952282781" prot="public" static="no">
        <name>ANA_MSG_FATAL</name>
        <param><defname>xmsg</defname></param>
        <initializer>ANA_MSG_LVL_SERIOUS( MSG::FATAL, xmsg )</initializer>
        <briefdescription>
<para>Macro printing fatal messages. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" line="323" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" bodystart="323" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d6/dab/AsgTools_2AsgTools_2MessageCheck_8h_1a245f71a20ef1ee4d85b385cc56b0b6d7" prot="public" static="no">
        <name>ANA_MSG_ALWAYS</name>
        <param><defname>xmsg</defname></param>
        <initializer>ANA_MSG_LVL_NOCHK( MSG::ALWAYS, xmsg )</initializer>
        <briefdescription>
<para>Macro printing messages that should always appear. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" line="325" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" bodystart="325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d6/dab/AsgTools_2AsgTools_2MessageCheck_8h_1af95d001f651b3ef9c9995ae83d08c3ba" prot="public" static="no">
        <name>ANA_CHECK_SET_TYPE</name>
        <param><defname>TYPE</defname></param>
        <initializer>typedef TYPE AsgToolsCheckResultType;</initializer>
        <briefdescription>
<para>set the type for ANA_CHECK to report failures </para>        </briefdescription>
        <detaileddescription>
<para>normally ANA_CHECK will report failures via a StatusCode object, but this macro can be called inside a function to tell it to report via a different type. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" line="342" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" bodystart="341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d6/dab/AsgTools_2AsgTools_2MessageCheck_8h_1aa06c6be5db55f65c6811dac983fac464" prot="public" static="no">
        <name>ANA_CHECK</name>
        <param><defname>EXP</defname></param>
        <initializer>{ const auto sc__ = EXP;						\
    typedef typename std::decay&lt;decltype(sc__)&gt;::type scType__;		\
    if (!::asg::CheckHelper&lt;scType__&gt;::isSuccess (sc__)) {		\
      ANA_MSG_ERROR (&quot;Failed to call \&quot;&quot; &lt;&lt; #EXP &lt;&lt; &quot;\&quot;&quot;);		\
      return ::asg::CheckHelper&lt;AsgToolsCheckResultType&gt;::failureCode(); \
    } }</initializer>
        <briefdescription>
<para>check whether the given expression was successful </para>        </briefdescription>
        <detaileddescription>
<para>This works like ATH_CHECK except it can handle all kinds of status codes, not just the regular ones. In particular the user can also set the type of the status code returned via ANA_CHECK_SET_TYPE </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" line="357" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" bodystart="351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d6/dab/AsgTools_2AsgTools_2MessageCheck_8h_1af693279a61732b57ee2d14581e2bd3cb" prot="public" static="no">
        <name>ANA_CHECK_THROW</name>
        <param><defname>EXP</defname></param>
        <initializer>{ const auto sc__ = EXP;						\
    typedef typename std::decay&lt;decltype(sc__)&gt;::type scType__;		\
    if (!::asg::CheckHelper&lt;scType__&gt;::isSuccess (sc__)) {		\
      std::ostringstream str;						\
      str &lt;&lt; #EXP;							\
      ANA_MSG_ERROR (&quot;Failed to call \&quot;&quot; &lt;&lt; str.str() &lt;&lt; &quot;\&quot;, throwing exception&quot;); \
      ::asg::detail::throw_check_fail (str.str());			\
    } }</initializer>
        <briefdescription>
<para>check whether the given expression was successful, throwing an exception on failure </para>        </briefdescription>
        <detaileddescription>
<para>This works like ANA_CHECK except it throws when an error occurs. This is meant for situations in which we perform a check inside a function that does not return a StatusCode. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" line="374" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" bodystart="366" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="d6/dab/AsgTools_2AsgTools_2MessageCheck_8h_1a861d518bd5161f57468cae1aff8f866b" prot="public" static="no">
        <type>StatusCode</type>
        <definition>typedef StatusCode AsgToolsCheckResultType</definition>
        <argsstring></argsstring>
        <name>AsgToolsCheckResultType</name>
        <briefdescription>
<para>the return type used by ANA_CHECK </para>        </briefdescription>
        <detaileddescription>
<para>this defaults to the regular StatusCode, but can be overriden via ANA_CHECK_SET_TYPE </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" line="333" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h" bodystart="333" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>ASG_TOOLS__MESSAGE_CHECK_H</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ASG_TOOLS__MESSAGE_CHECK_H</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>Iowa<sp/>State<sp/>University<sp/>2014.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>Nils<sp/>Krumnack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>(See<sp/>accompanying<sp/>file<sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Please<sp/>feel<sp/>free<sp/>to<sp/>contact<sp/>me<sp/>(nils.erik.krumnack@cern.ch)<sp/>for<sp/>bug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>reports,<sp/>feature<sp/>suggestions,<sp/>praise<sp/>and<sp/>complaints.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;xAODRootAccess/tools/TReturnCode.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ROOTCORE</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;AsgTools/MsgStream.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="85"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;AthenaBaseComps/AthMessaging.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="87"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="113"><highlight class="preprocessor">#define<sp/>ANA_MSG_HEADER(NAME)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="114"><highlight class="preprocessor"><sp/><sp/>namespace<sp/>NAME<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="115"><highlight class="preprocessor"><sp/><sp/>MsgStream&amp;<sp/>msg<sp/>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="116"><highlight class="preprocessor"><sp/><sp/>MsgStream&amp;<sp/>msg<sp/>(MSG::Level<sp/>level);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="117"><highlight class="preprocessor"><sp/><sp/>bool<sp/>msgLvl<sp/>(MSG::Level<sp/>lvl);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor"><sp/><sp/>void<sp/>setMsgLevel<sp/>(MSG::Level<sp/>level);<sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ROOTCORE</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ASG_TOOLS_MSG_STREAM(NAME,TITLE)<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="123"><highlight class="preprocessor"><sp/><sp/>static<sp/>MsgStream<sp/>NAME<sp/>(TITLE);</highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="125"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ASG_TOOLS_MSG_STREAM(NAME,TITLE)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="126"><highlight class="preprocessor"><sp/><sp/>static<sp/>MsgStream<sp/>NAME<sp/>(::asg::detail::getMessageSvcAthena(),<sp/>TITLE);</highlight></codeline>
<codeline lineno="127"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="134"><highlight class="preprocessor">#define<sp/>ANA_MSG_SOURCE(NAME,TITLE)<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="135"><highlight class="preprocessor"><sp/><sp/>namespace<sp/>NAME<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="136"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="137"><highlight class="preprocessor"><sp/><sp/>namespace<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="138"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="139"><highlight class="preprocessor"><sp/><sp/>MSG::Level&amp;<sp/>msgLevel<sp/>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="140"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="141"><highlight class="preprocessor"><sp/><sp/>static<sp/>MSG::Level<sp/>level<sp/>=<sp/>MSG::INFO;<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="142"><highlight class="preprocessor"><sp/><sp/>return<sp/>level;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="143"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="144"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="145"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="146"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="147"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="148"><highlight class="preprocessor"><sp/><sp/>MsgStream&amp;<sp/>msg<sp/>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="149"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="150"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ASG_TOOLS_MSG_STREAM<sp/>(result,<sp/>TITLE);<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="151"><highlight class="preprocessor"><sp/><sp/>return<sp/>result;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="152"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="153"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="154"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="155"><highlight class="preprocessor"><sp/><sp/>MsgStream&amp;<sp/>msg<sp/>(MSG::Level<sp/>level)<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="156"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="157"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>msg()<sp/>&lt;&lt;<sp/>level;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="158"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="159"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="160"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="161"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="162"><highlight class="preprocessor"><sp/><sp/>bool<sp/>msgLvl<sp/>(MSG::Level<sp/>lvl)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="163"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>msgLevel()<sp/>&lt;=<sp/>lvl;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="165"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="166"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="167"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="168"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="169"><highlight class="preprocessor"><sp/><sp/>void<sp/>setMsgLevel<sp/>(MSG::Level<sp/>level)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="170"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="171"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>msgLevel()<sp/>=<sp/>level;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="173"><highlight class="preprocessor"><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">asg</highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>ANA_MSG_HEADER<sp/>(msgToolHandle)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>ANA_MSG_HEADER<sp/>(msgUserCode)</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal">namespace<sp/>asg</highlight></codeline>
<codeline lineno="182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">CheckHelper;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="d5/d88/structasg_1_1CheckHelper_3_01StatusCode_01_4" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">CheckHelper&lt;StatusCode&gt;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="190" refid="d5/d88/structasg_1_1CheckHelper_3_01StatusCode_01_4_1a18c3e2bb17e5b8dccde0fdc0f3d1dec9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d88/structasg_1_1CheckHelper_3_01StatusCode_01_4_1a18c3e2bb17e5b8dccde0fdc0f3d1dec9" kindref="member" tooltip="whether the status code reports a success">isSuccess</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>StatusCode&amp;<sp/>sc)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sc.isSuccess();<sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="d5/d88/structasg_1_1CheckHelper_3_01StatusCode_01_4_1aa152f7cf1dbb99bb857f41b594dbb424" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="d5/d88/structasg_1_1CheckHelper_3_01StatusCode_01_4_1aa152f7cf1dbb99bb857f41b594dbb424" kindref="member" tooltip="produce a status code to report success">decltype</ref>(StatusCode::SUCCESS)<sp/>successCode<sp/>()<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="d5/d88/structasg_1_1CheckHelper_3_01StatusCode_01_4_1aef8bc5ec47f428f6295ec8195bebbfbd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="d5/d88/structasg_1_1CheckHelper_3_01StatusCode_01_4_1aef8bc5ec47f428f6295ec8195bebbfbd" kindref="member" tooltip="produce a status code to report failure">decltype</ref>(StatusCode::FAILURE)<sp/>failureCode<sp/>()<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="de/d18/structasg_1_1CheckHelper_3_01xAOD_1_1TReturnCode_01_4" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">CheckHelper&lt;xAOD::TReturnCode&gt;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="205" refid="de/d18/structasg_1_1CheckHelper_3_01xAOD_1_1TReturnCode_01_4_1ab1dc178550aeda04e63907417af4839f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d18/structasg_1_1CheckHelper_3_01xAOD_1_1TReturnCode_01_4_1ab1dc178550aeda04e63907417af4839f" kindref="member" tooltip="whether the status code reports a success">isSuccess</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/da4/classxAOD_1_1TReturnCode" kindref="compound">xAOD::TReturnCode</ref>&amp;<sp/>sc)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sc.<ref refid="d1/da4/classxAOD_1_1TReturnCode_1a22d065dfa48e27f306fa7c94efc77dda" kindref="member" tooltip="Function checking if the function call succeeded.">isSuccess</ref>();<sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="de/d18/structasg_1_1CheckHelper_3_01xAOD_1_1TReturnCode_01_4_1a976495379f16c3d3ac83885d423a4a18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="de/d18/structasg_1_1CheckHelper_3_01xAOD_1_1TReturnCode_01_4_1a976495379f16c3d3ac83885d423a4a18" kindref="member" tooltip="produce a status code to report success">decltype</ref><sp/>(<ref refid="d1/da4/classxAOD_1_1TReturnCode_1a8f212da971e112f15d8bd5bf49c4ed0aadf30f5028ade4d2f7dce8ab294d8400f" kindref="member">xAOD::TReturnCode::kSuccess</ref>)<sp/>successCode<sp/>()<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/da4/classxAOD_1_1TReturnCode_1a8f212da971e112f15d8bd5bf49c4ed0aadf30f5028ade4d2f7dce8ab294d8400f" kindref="member">xAOD::TReturnCode::kSuccess</ref>;}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="de/d18/structasg_1_1CheckHelper_3_01xAOD_1_1TReturnCode_01_4_1a646a5bf5d62dddb9c316346b7e7a087b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="de/d18/structasg_1_1CheckHelper_3_01xAOD_1_1TReturnCode_01_4_1a646a5bf5d62dddb9c316346b7e7a087b" kindref="member" tooltip="produce a status code to report failure">decltype</ref><sp/>(<ref refid="d1/da4/classxAOD_1_1TReturnCode_1a8f212da971e112f15d8bd5bf49c4ed0aa65103d5e226744ccf3bf1f920cac2075" kindref="member" tooltip="The function call failed.">xAOD::TReturnCode::kFailure</ref>)<sp/>failureCode<sp/>()<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/da4/classxAOD_1_1TReturnCode_1a8f212da971e112f15d8bd5bf49c4ed0aa65103d5e226744ccf3bf1f920cac2075" kindref="member" tooltip="The function call failed.">xAOD::TReturnCode::kFailure</ref>;}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="d2/d34/structasg_1_1CheckHelper_3_01int_01_4" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">CheckHelper&lt;int&gt;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="220" refid="d2/d34/structasg_1_1CheckHelper_3_01int_01_4_1ae19d7e43210e23ab3fa7a916a8629951" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d2/d34/structasg_1_1CheckHelper_3_01int_01_4_1ae19d7e43210e23ab3fa7a916a8629951" kindref="member" tooltip="produce a status code to report success">successCode</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="d2/d34/structasg_1_1CheckHelper_3_01int_01_4_1a06fb562fb9d828f845cbaaac1256e1a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d2/d34/structasg_1_1CheckHelper_3_01int_01_4_1a06fb562fb9d828f845cbaaac1256e1a8" kindref="member" tooltip="produce a status code to report failure">failureCode</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="d0/d9a/structasg_1_1CheckHelper_3_01bool_01_4" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">CheckHelper&lt;bool&gt;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="231" refid="d0/d9a/structasg_1_1CheckHelper_3_01bool_01_4_1aa5ee52544fa8e854ae92086f16807b2c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/d9a/structasg_1_1CheckHelper_3_01bool_01_4_1aa5ee52544fa8e854ae92086f16807b2c" kindref="member" tooltip="whether the status code reports a success">isSuccess</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>sc)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sc;<sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="d0/d9a/structasg_1_1CheckHelper_3_01bool_01_4_1a62910354a04a031c408d8d0a918a60de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/d9a/structasg_1_1CheckHelper_3_01bool_01_4_1a62910354a04a031c408d8d0a918a60de" kindref="member" tooltip="produce a status code to report success">successCode</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="d0/d9a/structasg_1_1CheckHelper_3_01bool_01_4_1ab98c1f22302e2875df9b584f4ef79e27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/d9a/structasg_1_1CheckHelper_3_01bool_01_4_1ab98c1f22302e2875df9b584f4ef79e27" kindref="member" tooltip="produce a status code to report failure">failureCode</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="d5/d2d/structasg_1_1CheckHelper_3_01T_01_5_01_4" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">CheckHelper&lt;<ref refid="d1/def/classT" kindref="compound">T</ref>*&gt;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="246" refid="d5/d2d/structasg_1_1CheckHelper_3_01T_01_5_01_4_1a4d285e39876b7464fe2d75e6b05c4072" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d2d/structasg_1_1CheckHelper_3_01T_01_5_01_4_1a4d285e39876b7464fe2d75e6b05c4072" kindref="member" tooltip="whether the status code reports a success">isSuccess</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/def/classT" kindref="compound">T</ref><sp/>*sc)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sc;<sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="d5/d2d/structasg_1_1CheckHelper_3_01T_01_5_01_4_1a3aa0097b5a3278e4d6d436003894e250" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="d1/def/classT" kindref="compound">T</ref><sp/>*<ref refid="d5/d2d/structasg_1_1CheckHelper_3_01T_01_5_01_4_1a3aa0097b5a3278e4d6d436003894e250" kindref="member" tooltip="produce a status code to report failure">failureCode</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ROOTCORE</highlight></codeline>
<codeline lineno="259"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>IMessageSvc*<sp/>getMessageSvcAthena();</highlight></codeline>
<codeline lineno="260"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="261"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>[[noreturn]]<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>throw_check_fail<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>GCC<sp/>extension<sp/>for<sp/>getting<sp/>the<sp/>name<sp/>of<sp/>the<sp/>current<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(<sp/>__GNUC__<sp/>)</highlight></codeline>
<codeline lineno="273"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>MSGSTREAM_FNAME<sp/>__PRETTY_FUNCTION__</highlight></codeline>
<codeline lineno="274"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="275"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>MSGSTREAM_FNAME<sp/>&quot;&quot;</highlight></codeline>
<codeline lineno="276"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="277"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>GCC<sp/>extension<sp/>for<sp/>getting<sp/>the<sp/>name<sp/>of<sp/>the<sp/>current<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(<sp/>__GNUC__<sp/>)</highlight></codeline>
<codeline lineno="281"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>ASG_TOOLS_MSGSTREAM_FNAME<sp/>__PRETTY_FUNCTION__</highlight></codeline>
<codeline lineno="282"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="283"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>ASG_TOOLS_MSGSTREAM_FNAME<sp/>&quot;&quot;</highlight></codeline>
<codeline lineno="284"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="285"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="293"><highlight class="preprocessor">#define<sp/>ASG_TOOLS_MSGSTREAM_PREFIX<sp/>\</highlight></codeline>
<codeline lineno="294"><highlight class="preprocessor"><sp/><sp/><sp/>__FILE__<sp/>&lt;&lt;<sp/>&quot;:&quot;<sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/>&quot;<sp/>(&quot;<sp/>&lt;&lt;<sp/>ASG_TOOLS_MSGSTREAM_FNAME<sp/>&lt;&lt;<sp/>&quot;):<sp/>&quot;</highlight></codeline>
<codeline lineno="295"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="297"><highlight class="preprocessor">#define<sp/>ANA_MSG_LVL_SERIOUS(<sp/>lvl,<sp/>xmsg<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="298"><highlight class="preprocessor"><sp/><sp/><sp/>msg(<sp/>lvl<sp/>)<sp/>&lt;&lt;<sp/>ASG_TOOLS_MSGSTREAM_PREFIX<sp/>&lt;&lt;<sp/>xmsg<sp/>&lt;&lt;<sp/>endmsg</highlight></codeline>
<codeline lineno="299"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="301"><highlight class="preprocessor">#define<sp/>ANA_MSG_LVL_NOCHK(<sp/>lvl,<sp/>xmsg<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="302"><highlight class="preprocessor"><sp/><sp/><sp/>msg(<sp/>lvl<sp/>)<sp/>&lt;&lt;<sp/>xmsg<sp/>&lt;&lt;<sp/>endmsg</highlight></codeline>
<codeline lineno="303"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="305"><highlight class="preprocessor">#define<sp/>ANA_MSG_LVL(<sp/>lvl,<sp/>xmsg<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="306"><highlight class="preprocessor"><sp/><sp/><sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="307"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>if(<sp/>msg().level()<sp/>&lt;=<sp/>lvl<sp/>)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="308"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANA_MSG_LVL_NOCHK(<sp/>lvl,<sp/>xmsg<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="309"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="310"><highlight class="preprocessor"><sp/><sp/><sp/>}<sp/>while(<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="311"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="313"><highlight class="preprocessor">#define<sp/>ANA_MSG_VERBOSE(<sp/>xmsg<sp/>)<sp/><sp/>ANA_MSG_LVL(<sp/>MSG::VERBOSE,<sp/>xmsg<sp/>)</highlight></codeline>
<codeline lineno="315"><highlight class="preprocessor">#define<sp/>ANA_MSG_DEBUG(<sp/>xmsg<sp/>)<sp/><sp/><sp/><sp/>ANA_MSG_LVL(<sp/>MSG::DEBUG,<sp/>xmsg<sp/>)</highlight></codeline>
<codeline lineno="317"><highlight class="preprocessor">#define<sp/>ANA_MSG_INFO(<sp/>xmsg<sp/>)<sp/><sp/><sp/><sp/><sp/>ANA_MSG_LVL_NOCHK(<sp/>MSG::INFO,<sp/><sp/>xmsg<sp/>)</highlight></codeline>
<codeline lineno="319"><highlight class="preprocessor">#define<sp/>ANA_MSG_WARNING(<sp/>xmsg<sp/>)<sp/><sp/>ANA_MSG_LVL_NOCHK(<sp/>MSG::WARNING,<sp/>xmsg<sp/>)</highlight></codeline>
<codeline lineno="321"><highlight class="preprocessor">#define<sp/>ANA_MSG_ERROR(<sp/>xmsg<sp/>)<sp/><sp/><sp/><sp/>ANA_MSG_LVL_SERIOUS(<sp/>MSG::ERROR,<sp/>xmsg<sp/>)</highlight></codeline>
<codeline lineno="323"><highlight class="preprocessor">#define<sp/>ANA_MSG_FATAL(<sp/>xmsg<sp/>)<sp/><sp/><sp/><sp/>ANA_MSG_LVL_SERIOUS(<sp/>MSG::FATAL,<sp/>xmsg<sp/>)</highlight></codeline>
<codeline lineno="325"><highlight class="preprocessor">#define<sp/>ANA_MSG_ALWAYS(<sp/>xmsg<sp/>)<sp/><sp/><sp/>ANA_MSG_LVL_NOCHK(<sp/>MSG::ALWAYS,<sp/>xmsg<sp/>)</highlight></codeline>
<codeline lineno="326"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>StatusCode<sp/>AsgToolsCheckResultType;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="preprocessor">#define<sp/>ANA_CHECK_SET_TYPE(TYPE)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="342"><highlight class="preprocessor"><sp/><sp/>typedef<sp/>TYPE<sp/>AsgToolsCheckResultType;</highlight></codeline>
<codeline lineno="343"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="preprocessor">#define<sp/>ANA_CHECK(EXP)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="352"><highlight class="preprocessor"><sp/><sp/>{<sp/>const<sp/>auto<sp/>sc__<sp/>=<sp/>EXP;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="353"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typedef<sp/>typename<sp/>std::decay&lt;decltype(sc__)&gt;::type<sp/>scType__;<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="354"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(!::asg::CheckHelper&lt;scType__&gt;::isSuccess<sp/>(sc__))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="355"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>ANA_MSG_ERROR<sp/>(&quot;Failed<sp/>to<sp/>call<sp/>\&quot;&quot;<sp/>&lt;&lt;<sp/>#EXP<sp/>&lt;&lt;<sp/>&quot;\&quot;&quot;);<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="356"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::asg::CheckHelper&lt;AsgToolsCheckResultType&gt;::failureCode();<sp/>\</highlight></codeline>
<codeline lineno="357"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="preprocessor">#define<sp/>ANA_CHECK_THROW(EXP)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="367"><highlight class="preprocessor"><sp/><sp/>{<sp/>const<sp/>auto<sp/>sc__<sp/>=<sp/>EXP;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="368"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typedef<sp/>typename<sp/>std::decay&lt;decltype(sc__)&gt;::type<sp/>scType__;<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="369"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(!::asg::CheckHelper&lt;scType__&gt;::isSuccess<sp/>(sc__))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="370"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>str;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="371"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>&lt;&lt;<sp/>#EXP;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="372"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>ANA_MSG_ERROR<sp/>(&quot;Failed<sp/>to<sp/>call<sp/>\&quot;&quot;<sp/>&lt;&lt;<sp/>str.str()<sp/>&lt;&lt;<sp/>&quot;\&quot;,<sp/>throwing<sp/>exception&quot;);<sp/>\</highlight></codeline>
<codeline lineno="373"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>::asg::detail::throw_check_fail<sp/>(str.str());<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="374"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/MessageCheck.h"/>
  </compounddef>
</doxygen>
