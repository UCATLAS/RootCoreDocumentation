<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d6/d86/LeptonTriggerSF_8cxx" kind="file">
    <compoundname>LeptonTriggerSF.cxx</compoundname>
    <includes local="no">stdexcept</includes>
    <includes local="no">sstream</includes>
    <includes local="no">iostream</includes>
    <includes refid="d3/d1d/LeptonTriggerSF_8h" local="yes">TrigMuonEfficiency/LeptonTriggerSF.h</includes>
    <includes refid="d4/d4c/TElectronEfficiencyCorrectionTool_8h" local="yes">ElectronEfficiencyCorrection/TElectronEfficiencyCorrectionTool.h</includes>
    <includes local="yes">TFile.h</includes>
    <includes local="yes">TSystem.h</includes>
    <includes local="yes">TROOT.h</includes>
    <includes local="yes">TRandom.h</includes>
    <includes local="yes">TDirectory.h</includes>
    <includes local="yes">TLorentzVector.h</includes>
    <includes local="yes">TH2.h</includes>
    <incdepgraph>
      <node id="328189">
        <label>AsgTools/IAsgTool.h</label>
        <link refid="df/dd4/IAsgTool_8h_source"/>
        <childnode refid="328173" relation="include">
        </childnode>
        <childnode refid="328185" relation="include">
        </childnode>
        <childnode refid="328190" relation="include">
        </childnode>
        <childnode refid="328191" relation="include">
        </childnode>
      </node>
      <node id="328191">
        <label>GaudiKernel/IAlgTool.h</label>
      </node>
      <node id="328177">
        <label>TObjArray.h</label>
      </node>
      <node id="328170">
        <label>TrigMuonEfficiency/LeptonTriggerSF.h</label>
        <link refid="d3/d1d/LeptonTriggerSF_8h_source"/>
        <childnode refid="328171" relation="include">
        </childnode>
        <childnode refid="328172" relation="include">
        </childnode>
        <childnode refid="328173" relation="include">
        </childnode>
      </node>
      <node id="328194">
        <label>AthenaBaseComps/AthMsgStreamMacros.h</label>
      </node>
      <node id="328167">
        <label>stdexcept</label>
      </node>
      <node id="328187">
        <label>AsgTools/MsgLevel.h</label>
        <link refid="de/d80/MsgLevel_8h"/>
        <childnode refid="328173" relation="include">
        </childnode>
        <childnode refid="328185" relation="include">
        </childnode>
        <childnode refid="328188" relation="include">
        </childnode>
      </node>
      <node id="328200">
        <label>TLorentzVector.h</label>
      </node>
      <node id="328185">
        <label>AsgTools/AsgToolsConf.h</label>
        <link refid="df/db7/AsgToolsConf_8h_source"/>
      </node>
      <node id="328173">
        <label>string</label>
      </node>
      <node id="328172">
        <label>map</label>
      </node>
      <node id="328199">
        <label>TDirectory.h</label>
      </node>
      <node id="328188">
        <label>GaudiKernel/IMessageSvc.h</label>
      </node>
      <node id="328178">
        <label>TH1.h</label>
      </node>
      <node id="328182">
        <label>PATCore/TCalculatorToolBase.h</label>
        <link refid="de/d54/TCalculatorToolBase_8h_source"/>
        <childnode refid="328175" relation="include">
        </childnode>
        <childnode refid="328181" relation="include">
        </childnode>
      </node>
      <node id="328183">
        <label>PATCore/PATCoreEnums.h</label>
        <link refid="d0/dcb/PATCoreEnums_8h_source"/>
      </node>
      <node id="328197">
        <label>TROOT.h</label>
      </node>
      <node id="328174">
        <label>ElectronEfficiencyCorrection/TElectronEfficiencyCorrectionTool.h</label>
        <link refid="d4/d4c/TElectronEfficiencyCorrectionTool_8h_source"/>
        <childnode refid="328168" relation="include">
        </childnode>
        <childnode refid="328171" relation="include">
        </childnode>
        <childnode refid="328173" relation="include">
        </childnode>
        <childnode refid="328175" relation="include">
        </childnode>
        <childnode refid="328176" relation="include">
        </childnode>
        <childnode refid="328177" relation="include">
        </childnode>
        <childnode refid="328178" relation="include">
        </childnode>
        <childnode refid="328179" relation="include">
        </childnode>
        <childnode refid="328180" relation="include">
        </childnode>
        <childnode refid="328181" relation="include">
        </childnode>
        <childnode refid="328182" relation="include">
        </childnode>
        <childnode refid="328183" relation="include">
        </childnode>
        <childnode refid="328184" relation="include">
        </childnode>
      </node>
      <node id="328193">
        <label>AsgTools/MsgStreamMacros.h</label>
        <link refid="d3/ded/AsgTools_2AsgTools_2MsgStreamMacros_8h_source"/>
        <childnode refid="328185" relation="include">
        </childnode>
        <childnode refid="328187" relation="include">
        </childnode>
        <childnode refid="328194" relation="include">
        </childnode>
      </node>
      <node id="328196">
        <label>TSystem.h</label>
      </node>
      <node id="328171">
        <label>vector</label>
      </node>
      <node id="328195">
        <label>TFile.h</label>
      </node>
      <node id="328176">
        <label>TKey.h</label>
      </node>
      <node id="328168">
        <label>sstream</label>
      </node>
      <node id="328181">
        <label>PATCore/TResult.h</label>
        <link refid="de/d64/TResult_8h_source"/>
        <childnode refid="328175" relation="include">
        </childnode>
        <childnode refid="328172" relation="include">
        </childnode>
        <childnode refid="328171" relation="include">
        </childnode>
      </node>
      <node id="328179">
        <label>TH2.h</label>
      </node>
      <node id="328169">
        <label>iostream</label>
      </node>
      <node id="328192">
        <label>GaudiKernel/MsgStream.h</label>
      </node>
      <node id="328186">
        <label>AsgTools/MsgStream.h</label>
        <link refid="d3/d95/AsgTools_2AsgTools_2MsgStream_8h_source"/>
        <childnode refid="328173" relation="include">
        </childnode>
        <childnode refid="328168" relation="include">
        </childnode>
        <childnode refid="328185" relation="include">
        </childnode>
        <childnode refid="328187" relation="include">
        </childnode>
        <childnode refid="328189" relation="include">
        </childnode>
        <childnode refid="328192" relation="include">
        </childnode>
      </node>
      <node id="328190">
        <label>AsgTools/AsgToolMacros.h</label>
        <link refid="d1/d68/AsgToolMacros_8h_source"/>
      </node>
      <node id="328175">
        <label>TString.h</label>
      </node>
      <node id="328166">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/Root/LeptonTriggerSF.cxx</label>
        <link refid="LeptonTriggerSF.cxx"/>
        <childnode refid="328167" relation="include">
        </childnode>
        <childnode refid="328168" relation="include">
        </childnode>
        <childnode refid="328169" relation="include">
        </childnode>
        <childnode refid="328170" relation="include">
        </childnode>
        <childnode refid="328174" relation="include">
        </childnode>
        <childnode refid="328195" relation="include">
        </childnode>
        <childnode refid="328196" relation="include">
        </childnode>
        <childnode refid="328197" relation="include">
        </childnode>
        <childnode refid="328198" relation="include">
        </childnode>
        <childnode refid="328199" relation="include">
        </childnode>
        <childnode refid="328200" relation="include">
        </childnode>
        <childnode refid="328179" relation="include">
        </childnode>
      </node>
      <node id="328184">
        <label>AsgTools/AsgMessaging.h</label>
        <link refid="d3/d61/AsgMessaging_8h_source"/>
        <childnode refid="328173" relation="include">
        </childnode>
        <childnode refid="328185" relation="include">
        </childnode>
        <childnode refid="328186" relation="include">
        </childnode>
        <childnode refid="328193" relation="include">
        </childnode>
      </node>
      <node id="328198">
        <label>TRandom.h</label>
      </node>
      <node id="328180">
        <label>TRandom3.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="d6/d86/LeptonTriggerSF_8cxx_1a49832830c550488a9a1836aa8614143a" prot="public" static="no">
        <name>ERROR_MESSAGE</name>
        <param><defname>MESSAGE</defname></param>
        <initializer>&quot;%s:%i &quot; MESSAGE, __FILE__, __LINE__</initializer>
        <briefdescription>
<para>Helper macro for printing nice error messages. </para>        </briefdescription>
        <detaileddescription>
<para>This macro is used to print some pretty error messages that specify the file name and line number. This can be very useful when debugging problems.</para><para>It can be placed into a ROOT print function like this:</para><para><computeroutput> Error( &quot;ThisFunction&quot;, ERROR_MESSAGE( &quot;My message with an int %i&quot; ), myInt ); </computeroutput></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>MESSAGE</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to &quot;make pretty&quot; </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/Root/LeptonTriggerSF.cxx" line="45" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/Root/LeptonTriggerSF.cxx" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="d6/d86/LeptonTriggerSF_8cxx_1af3907467ce866104024f38d334ee41c0" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double commonSystMTSG</definition>
        <argsstring></argsstring>
        <name>commonSystMTSG</name>
        <initializer> 0.01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/Root/LeptonTriggerSF.cxx" line="23" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/Root/LeptonTriggerSF.cxx" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d86/LeptonTriggerSF_8cxx_1a7b2d7b20e2a0539c339841df1bea1f44" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double muon_barrel_endcap_boundary</definition>
        <argsstring></argsstring>
        <name>muon_barrel_endcap_boundary</name>
        <initializer> 1.05</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/Root/LeptonTriggerSF.cxx" line="24" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/Root/LeptonTriggerSF.cxx" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d86/LeptonTriggerSF_8cxx_1abf77e38edf3c11577dce42082ab5e962" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double electron_maximum_eta</definition>
        <argsstring></argsstring>
        <name>electron_maximum_eta</name>
        <initializer> 2.47</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/Root/LeptonTriggerSF.cxx" line="25" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/Root/LeptonTriggerSF.cxx" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d86/LeptonTriggerSF_8cxx_1a9498bf9faaff95e13a46a58b93b7e130" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double GeVtoMeV</definition>
        <argsstring></argsstring>
        <name>GeVtoMeV</name>
        <initializer> 1000.</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/Root/LeptonTriggerSF.cxx" line="26" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/Root/LeptonTriggerSF.cxx" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>STL<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Local<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigMuonEfficiency/LeptonTriggerSF.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ElectronEfficiencyCorrection/TElectronEfficiencyCorrectionTool.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ROOT<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TFile.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TSystem.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TROOT.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TRandom.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TDirectory.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TLorentzVector.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TH2.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Constant<sp/>declaration(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>commonSystMTSG<sp/>=<sp/>0.01;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>muon_barrel_endcap_boundary<sp/>=<sp/>1.05;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>electron_maximum_eta<sp/>=<sp/>2.47;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>GeVtoMeV<sp/>=<sp/>1000.;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"></codeline>
<codeline lineno="44"><highlight class="preprocessor">#define<sp/>ERROR_MESSAGE(<sp/>MESSAGE<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"><sp/><sp/><sp/>&quot;%s:%i<sp/>&quot;<sp/>MESSAGE,<sp/>__FILE__,<sp/>__LINE__</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*=================================================================*<sp/></highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>constructor/destructor</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*=================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><ref refid="d3/d83/classLeptonTriggerSF_1af449b49f38fa74d0be7650b47077f1f0" kindref="member">LeptonTriggerSF::LeptonTriggerSF</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>directory,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>directoryElectron,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>electronFileVersion)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>:<sp/>m_year(2011),</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>m_efficiencyMap(),</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>m_phiBoundaryBarrel(0.0),</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>m_phiBoundaryEndcap(0.0),</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>m_IsAFII(false)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>m_electronFileVersion<sp/>=<sp/>electronFileVersion;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>initialise(directory,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::vector&lt;std::string&gt;(),<sp/>directoryElectron);</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><ref refid="d3/d83/classLeptonTriggerSF_1af449b49f38fa74d0be7650b47077f1f0" kindref="member">LeptonTriggerSF::LeptonTriggerSF</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>year,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>directory,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fileName,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>directoryElectron,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>electronFileVersion)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>:<sp/>m_year(year),</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>m_efficiencyMap(),</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>m_phiBoundaryBarrel(0.0),</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>m_phiBoundaryEndcap(0.0),</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>m_IsAFII(false)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>m_electronFileVersion<sp/>=<sp/>electronFileVersion;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>initialise(directory,<sp/>fileName,<sp/>std::vector&lt;std::string&gt;(),<sp/>directoryElectron);</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><ref refid="d3/d83/classLeptonTriggerSF_1af449b49f38fa74d0be7650b47077f1f0" kindref="member">LeptonTriggerSF::LeptonTriggerSF</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>year,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>qualities,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>directory,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fileName,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>directoryElectron,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>electronFileVersion)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>:<sp/>m_year(year),</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>m_efficiencyMap(),</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>m_phiBoundaryBarrel(0.0),</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>m_phiBoundaryEndcap(0.0),</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>m_IsAFII(false)</highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>m_electronFileVersion<sp/>=<sp/>electronFileVersion;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>initialise(directory,<sp/>fileName,<sp/>qualities,<sp/>directoryElectron);</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><ref refid="d3/d83/classLeptonTriggerSF_1af78c7b03b7300a45e031aeacb638e3bb" kindref="member">LeptonTriggerSF::~LeptonTriggerSF</ref>()</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(EfficiencyMap::const_iterator<sp/>cit<sp/>=<sp/>m_efficiencyMap.begin();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cit<sp/>!=<sp/>m_efficiencyMap.end();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cit++)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>cit-&gt;second;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ElectronEfficiencyToolMap::const_iterator<sp/>cit<sp/>=<sp/>m_electronSF.begin();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cit<sp/>!=<sp/>m_electronSF.end();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cit++)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>cit-&gt;second;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">/*=================================================================*<sp/></highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>*<sp/>public<sp/>methods</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/>*=================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal">std::pair&lt;double,<sp/>double&gt;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><ref refid="d3/d83/classLeptonTriggerSF_1a42df88bb6fe134a528fcf3aa04461611" kindref="member">LeptonTriggerSF::GetTriggerSF</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>runNumber,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useGeV,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TLorentzVector&gt;&amp;<sp/>muons,<sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MuonQuality<sp/>muonQuality,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>systematicVariation,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d63/structTrigMuonEff_1_1Configuration" kindref="compound">TrigMuonEff::Configuration</ref>*<sp/>config)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="129"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>MuonQuality<sp/>&gt;<sp/>muonsQuality(muons.size(),<sp/>muonQuality);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>std::vector&lt;TLorentzVector&gt;<sp/>electrons;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>std::vector&lt;ElectronQuality&gt;<sp/>electronsQuality;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><ref refid="d1/d63/structTrigMuonEff_1_1Configuration" kindref="compound">TrigMuonEff::Configuration</ref><sp/>configuration;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ac7e00f10054006e03aa52073d85dd5ab" kindref="member">runNumber</ref><sp/>=<sp/>runNumber;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1af8d56232d671c3b42a0f6e954eaa4794" kindref="member">useGeV</ref><sp/>=<sp/>useGeV;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a3dbf4aa4afa096186a49751cae36ad47" kindref="member">setByUser</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a3e46f1b418fa41623f27a12a9019f235" kindref="member">isAFII</ref><sp/>=<sp/>m_IsAFII;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a90663caf0bf02147af414fa62cdc25e7" kindref="member">systematics</ref><sp/>=<sp/>systematicVariation;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a3dbf4aa4afa096186a49751cae36ad47" kindref="member">setByUser</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ab3e81f06dc7f278203a9086b14177c5d" kindref="member">trigger</ref><sp/>=<sp/>config-&gt;<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ab3e81f06dc7f278203a9086b14177c5d" kindref="member">trigger</ref>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1aa1ea2b3f4ca3d304445f903df40e1142" kindref="member">period</ref><sp/>=<sp/>config-&gt;<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1aa1ea2b3f4ca3d304445f903df40e1142" kindref="member">period</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a9096cd623777c445a83680ec81680f46" kindref="member">binning</ref><sp/>=<sp/>config-&gt;<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a9096cd623777c445a83680ec81680f46" kindref="member">binning</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d3/d83/classLeptonTriggerSF_1a42df88bb6fe134a528fcf3aa04461611" kindref="member">GetTriggerSF</ref>(configuration,<sp/>muons,<sp/>muonsQuality,<sp/>electrons,<sp/>electronsQuality);</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal">std::pair&lt;double,<sp/>double&gt;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><ref refid="d3/d83/classLeptonTriggerSF_1a42df88bb6fe134a528fcf3aa04461611" kindref="member">LeptonTriggerSF::GetTriggerSF</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>runNumber,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useGeV,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TLorentzVector&gt;&amp;<sp/>muons,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;MuonQuality&gt;&amp;<sp/>muonsQuality,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>systematicVariation,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d63/structTrigMuonEff_1_1Configuration" kindref="compound">TrigMuonEff::Configuration</ref>*<sp/>config)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="160"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>std::vector&lt;TLorentzVector&gt;<sp/>electrons;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>std::vector&lt;ElectronQuality&gt;<sp/>electronsQuality;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><ref refid="d1/d63/structTrigMuonEff_1_1Configuration" kindref="compound">TrigMuonEff::Configuration</ref><sp/>configuration;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ac7e00f10054006e03aa52073d85dd5ab" kindref="member">runNumber</ref><sp/>=<sp/>runNumber;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1af8d56232d671c3b42a0f6e954eaa4794" kindref="member">useGeV</ref><sp/>=<sp/>useGeV;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a3dbf4aa4afa096186a49751cae36ad47" kindref="member">setByUser</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a3e46f1b418fa41623f27a12a9019f235" kindref="member">isAFII</ref><sp/>=<sp/>m_IsAFII;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a90663caf0bf02147af414fa62cdc25e7" kindref="member">systematics</ref><sp/>=<sp/>systematicVariation;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a3dbf4aa4afa096186a49751cae36ad47" kindref="member">setByUser</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ab3e81f06dc7f278203a9086b14177c5d" kindref="member">trigger</ref><sp/>=<sp/>config-&gt;<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ab3e81f06dc7f278203a9086b14177c5d" kindref="member">trigger</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1aa1ea2b3f4ca3d304445f903df40e1142" kindref="member">period</ref><sp/>=<sp/>config-&gt;<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1aa1ea2b3f4ca3d304445f903df40e1142" kindref="member">period</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a9096cd623777c445a83680ec81680f46" kindref="member">binning</ref><sp/>=<sp/>config-&gt;<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a9096cd623777c445a83680ec81680f46" kindref="member">binning</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d3/d83/classLeptonTriggerSF_1a42df88bb6fe134a528fcf3aa04461611" kindref="member">GetTriggerSF</ref>(configuration,<sp/>muons,<sp/>muonsQuality,<sp/>electrons,<sp/>electronsQuality);</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal">std::pair&lt;double,<sp/>double&gt;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><ref refid="d3/d83/classLeptonTriggerSF_1a42df88bb6fe134a528fcf3aa04461611" kindref="member">LeptonTriggerSF::GetTriggerSF</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>runNumber,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useGeV,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TLorentzVector&gt;&amp;<sp/>muons,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;MuonQuality&gt;&amp;<sp/>muonsQuality,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>trigger,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>systematicVariation,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d63/structTrigMuonEff_1_1Configuration" kindref="compound">TrigMuonEff::Configuration</ref>*<sp/>config)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="191"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><ref refid="d1/d63/structTrigMuonEff_1_1Configuration" kindref="compound">TrigMuonEff::Configuration</ref><sp/>configuration;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ac7e00f10054006e03aa52073d85dd5ab" kindref="member">runNumber</ref><sp/>=<sp/>runNumber;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1af8d56232d671c3b42a0f6e954eaa4794" kindref="member">useGeV</ref><sp/>=<sp/>useGeV;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a90663caf0bf02147af414fa62cdc25e7" kindref="member">systematics</ref><sp/>=<sp/>systematicVariation;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a3dbf4aa4afa096186a49751cae36ad47" kindref="member">setByUser</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a3e46f1b418fa41623f27a12a9019f235" kindref="member">isAFII</ref><sp/>=<sp/>m_IsAFII;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a3dbf4aa4afa096186a49751cae36ad47" kindref="member">setByUser</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ab3e81f06dc7f278203a9086b14177c5d" kindref="member">trigger</ref><sp/>=<sp/>config-&gt;<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ab3e81f06dc7f278203a9086b14177c5d" kindref="member">trigger</ref>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1aa1ea2b3f4ca3d304445f903df40e1142" kindref="member">period</ref><sp/>=<sp/>config-&gt;<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1aa1ea2b3f4ca3d304445f903df40e1142" kindref="member">period</ref>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a9096cd623777c445a83680ec81680f46" kindref="member">binning</ref><sp/>=<sp/>config-&gt;<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a9096cd623777c445a83680ec81680f46" kindref="member">binning</ref>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d3/d83/classLeptonTriggerSF_1a42df88bb6fe134a528fcf3aa04461611" kindref="member">GetTriggerSF</ref>(configuration,<sp/>muons,<sp/>muonsQuality,<sp/>trigger);</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal">std::pair&lt;double,<sp/>double&gt;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><ref refid="d3/d83/classLeptonTriggerSF_1a42df88bb6fe134a528fcf3aa04461611" kindref="member">LeptonTriggerSF::GetTriggerSF</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>runNumber,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useGeV,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TLorentzVector&gt;&amp;<sp/>electrons,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;ElectronQuality&gt;&amp;<sp/>electronsQuality,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>trigger,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>systematicVariation,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d63/structTrigMuonEff_1_1Configuration" kindref="compound">TrigMuonEff::Configuration</ref>*<sp/>config)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="217"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><ref refid="d1/d63/structTrigMuonEff_1_1Configuration" kindref="compound">TrigMuonEff::Configuration</ref><sp/>configuration;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ac7e00f10054006e03aa52073d85dd5ab" kindref="member">runNumber</ref><sp/>=<sp/>runNumber;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1af8d56232d671c3b42a0f6e954eaa4794" kindref="member">useGeV</ref><sp/>=<sp/>useGeV;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a90663caf0bf02147af414fa62cdc25e7" kindref="member">systematics</ref><sp/>=<sp/>systematicVariation;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a3dbf4aa4afa096186a49751cae36ad47" kindref="member">setByUser</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a3e46f1b418fa41623f27a12a9019f235" kindref="member">isAFII</ref><sp/>=<sp/>m_IsAFII;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a3dbf4aa4afa096186a49751cae36ad47" kindref="member">setByUser</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ab3e81f06dc7f278203a9086b14177c5d" kindref="member">trigger</ref><sp/>=<sp/>config-&gt;<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ab3e81f06dc7f278203a9086b14177c5d" kindref="member">trigger</ref>;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1aa1ea2b3f4ca3d304445f903df40e1142" kindref="member">period</ref><sp/>=<sp/>config-&gt;<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1aa1ea2b3f4ca3d304445f903df40e1142" kindref="member">period</ref>;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a9096cd623777c445a83680ec81680f46" kindref="member">binning</ref><sp/>=<sp/>config-&gt;<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a9096cd623777c445a83680ec81680f46" kindref="member">binning</ref>;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d3/d83/classLeptonTriggerSF_1a42df88bb6fe134a528fcf3aa04461611" kindref="member">GetTriggerSF</ref>(configuration,<sp/>electrons,<sp/>electronsQuality,<sp/>trigger);</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal">std::pair&lt;double,<sp/>double&gt;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><ref refid="d3/d83/classLeptonTriggerSF_1a42df88bb6fe134a528fcf3aa04461611" kindref="member">LeptonTriggerSF::GetTriggerSF</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>runNumber,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useGeV,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TLorentzVector&gt;&amp;<sp/>muons,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MuonQuality<sp/>muonQuality,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TLorentzVector&gt;&amp;<sp/>electrons,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ElectronQuality<sp/>electronQuality,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>systematicVariation,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d63/structTrigMuonEff_1_1Configuration" kindref="compound">TrigMuonEff::Configuration</ref>*<sp/>config)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="246"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>std::vector&lt;MuonQuality&gt;<sp/>muonsQuality(muons.size(),<sp/>muonQuality);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>std::vector&lt;ElectronQuality&gt;<sp/>electronsQuality(electrons.size(),<sp/>electronQuality);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><ref refid="d1/d63/structTrigMuonEff_1_1Configuration" kindref="compound">TrigMuonEff::Configuration</ref><sp/>configuration;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ac7e00f10054006e03aa52073d85dd5ab" kindref="member">runNumber</ref><sp/>=<sp/>runNumber;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>configuration.useGeV<sp/>=<sp/>useGeV;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>configuration.setByUser<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>configuration.isAFII<sp/>=<sp/>m_IsAFII;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>configuration.systematics<sp/>=<sp/>systematicVariation;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>configuration.setByUser<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>configuration.trigger<sp/>=<sp/>config-&gt;<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ab3e81f06dc7f278203a9086b14177c5d" kindref="member">trigger</ref>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>configuration.period<sp/>=<sp/>config-&gt;<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1aa1ea2b3f4ca3d304445f903df40e1142" kindref="member">period</ref>;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>configuration.binning<sp/>=<sp/>config-&gt;<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a9096cd623777c445a83680ec81680f46" kindref="member">binning</ref>;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d3/d83/classLeptonTriggerSF_1a42df88bb6fe134a528fcf3aa04461611" kindref="member">GetTriggerSF</ref>(configuration,<sp/>muons,<sp/>muonsQuality,<sp/>electrons,<sp/>electronsQuality);</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal">std::pair&lt;double,<sp/>double&gt;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><ref refid="d3/d83/classLeptonTriggerSF_1a42df88bb6fe134a528fcf3aa04461611" kindref="member">LeptonTriggerSF::GetTriggerSF</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>runNumber,</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useGeV,</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TLorentzVector&gt;&amp;<sp/>muons,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;MuonQuality&gt;&amp;<sp/>muonsQuality,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TLorentzVector&gt;&amp;<sp/>electrons,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;ElectronQuality&gt;&amp;<sp/>electronsQuality,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>systematicVariation,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d63/structTrigMuonEff_1_1Configuration" kindref="compound">TrigMuonEff::Configuration</ref>*<sp/>config)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="278"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><ref refid="d1/d63/structTrigMuonEff_1_1Configuration" kindref="compound">TrigMuonEff::Configuration</ref><sp/>configuration;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ac7e00f10054006e03aa52073d85dd5ab" kindref="member">runNumber</ref><sp/>=<sp/>runNumber;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1af8d56232d671c3b42a0f6e954eaa4794" kindref="member">useGeV</ref><sp/>=<sp/>useGeV;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a90663caf0bf02147af414fa62cdc25e7" kindref="member">systematics</ref><sp/>=<sp/>systematicVariation;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a3dbf4aa4afa096186a49751cae36ad47" kindref="member">setByUser</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a3e46f1b418fa41623f27a12a9019f235" kindref="member">isAFII</ref><sp/>=<sp/>m_IsAFII;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a3dbf4aa4afa096186a49751cae36ad47" kindref="member">setByUser</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ab3e81f06dc7f278203a9086b14177c5d" kindref="member">trigger</ref><sp/>=<sp/>config-&gt;<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ab3e81f06dc7f278203a9086b14177c5d" kindref="member">trigger</ref>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1aa1ea2b3f4ca3d304445f903df40e1142" kindref="member">period</ref><sp/>=<sp/>config-&gt;<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1aa1ea2b3f4ca3d304445f903df40e1142" kindref="member">period</ref>;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a9096cd623777c445a83680ec81680f46" kindref="member">binning</ref><sp/>=<sp/>config-&gt;<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a9096cd623777c445a83680ec81680f46" kindref="member">binning</ref>;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d3/d83/classLeptonTriggerSF_1a42df88bb6fe134a528fcf3aa04461611" kindref="member">GetTriggerSF</ref>(configuration,<sp/>muons,<sp/>muonsQuality,<sp/>electrons,<sp/>electronsQuality);</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal">std::pair&lt;double,<sp/>double&gt;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><ref refid="d3/d83/classLeptonTriggerSF_1a42df88bb6fe134a528fcf3aa04461611" kindref="member">LeptonTriggerSF::GetTriggerSF</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>runNumber,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useGeV,</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TLorentzVector&gt;&amp;<sp/>muons,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;MuonQuality&gt;&amp;<sp/>muonsQuality,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TLorentzVector&gt;&amp;<sp/>electrons,</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;ElectronQuality&gt;&amp;<sp/>electronsQuality,</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>trigger,</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>systematicVariation,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d63/structTrigMuonEff_1_1Configuration" kindref="compound">TrigMuonEff::Configuration</ref>*<sp/>config)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="307"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><ref refid="d1/d63/structTrigMuonEff_1_1Configuration" kindref="compound">TrigMuonEff::Configuration</ref><sp/>configuration;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ac7e00f10054006e03aa52073d85dd5ab" kindref="member">runNumber</ref><sp/>=<sp/>runNumber;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1af8d56232d671c3b42a0f6e954eaa4794" kindref="member">useGeV</ref><sp/>=<sp/>useGeV;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a90663caf0bf02147af414fa62cdc25e7" kindref="member">systematics</ref><sp/>=<sp/>systematicVariation;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a3dbf4aa4afa096186a49751cae36ad47" kindref="member">setByUser</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a3e46f1b418fa41623f27a12a9019f235" kindref="member">isAFII</ref><sp/>=<sp/>m_IsAFII;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ab3e81f06dc7f278203a9086b14177c5d" kindref="member">trigger</ref><sp/>=<sp/>trigger;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a3dbf4aa4afa096186a49751cae36ad47" kindref="member">setByUser</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ab3e81f06dc7f278203a9086b14177c5d" kindref="member">trigger</ref><sp/>=<sp/>config-&gt;<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ab3e81f06dc7f278203a9086b14177c5d" kindref="member">trigger</ref>;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1aa1ea2b3f4ca3d304445f903df40e1142" kindref="member">period</ref><sp/>=<sp/>config-&gt;<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1aa1ea2b3f4ca3d304445f903df40e1142" kindref="member">period</ref>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a9096cd623777c445a83680ec81680f46" kindref="member">binning</ref><sp/>=<sp/>config-&gt;<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a9096cd623777c445a83680ec81680f46" kindref="member">binning</ref>;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d3/d83/classLeptonTriggerSF_1a42df88bb6fe134a528fcf3aa04461611" kindref="member">GetTriggerSF</ref>(configuration,<sp/>muons,<sp/>muonsQuality,<sp/>electrons,<sp/>electronsQuality);</highlight></codeline>
<codeline lineno="324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal">std::pair&lt;double,<sp/>double&gt;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><ref refid="d3/d83/classLeptonTriggerSF_1a42df88bb6fe134a528fcf3aa04461611" kindref="member">LeptonTriggerSF::GetTriggerSF</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/d63/structTrigMuonEff_1_1Configuration" kindref="compound">TrigMuonEff::Configuration</ref><sp/><sp/><sp/><sp/>&amp;<sp/>configuration,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>TLorentzVector<sp/>&gt;<sp/>&amp;<sp/>muons,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>MuonQuality<sp/>&gt;<sp/><sp/><sp/><sp/>&amp;<sp/>muonsQuality,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>TLorentzVector<sp/>&gt;<sp/>&amp;<sp/>electrons,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>ElectronQuality<sp/>&gt;&amp;<sp/>electronsQuality)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="333"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>offline<sp/>muon<sp/>and<sp/>electron<sp/>thresholds:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;<sp/>double,<sp/>double<sp/>&gt;<sp/>threshold<sp/>=<sp/>getThresholds(configuration);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rate_not_fired_data<sp/>=<sp/>1.;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rate_not_fired_mc<sp/><sp/><sp/>=<sp/>1.;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>needed<sp/>for<sp/>uncertainty<sp/>calculation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>inv_sq_eff_data<sp/><sp/><sp/><sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>inv_sq_eff_mc<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>inv_sq_eff_data_el<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>inv_sq_eff_mc_el<sp/><sp/><sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>inv_sq_eff_data_mu<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>inv_sq_eff_mc_mu<sp/><sp/><sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>DileptonTriggerName<sp/>dilep_name<sp/>=<sp/>kNoTrig;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_e12Tvh_medium1_mu8<sp/>=<sp/>(configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ab3e81f06dc7f278203a9086b14177c5d" kindref="member">trigger</ref>.find(</highlight><highlight class="stringliteral">&quot;e12Tvh_medium1_mu8&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(is_e12Tvh_medium1_mu8)<sp/>dilep_name<sp/>=<sp/>EF_e12Tvh_medium1_mu8;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ielec<sp/>=<sp/>0;<sp/>ielec<sp/>&lt;<sp/>electrons.size();<sp/>++ielec)<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>set_data<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a39ba2c399a909883bbc9ae72278ef002" kindref="member">getElectronQuality</ref>(configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ac7e00f10054006e03aa52073d85dd5ab" kindref="member">runNumber</ref>,<sp/>electronsQuality.at(ielec),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/>(dilep_name!=kNoTrig),<sp/>dilep_name);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>set_mc<sp/><sp/><sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a39ba2c399a909883bbc9ae72278ef002" kindref="member">getElectronQuality</ref>(configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ac7e00f10054006e03aa52073d85dd5ab" kindref="member">runNumber</ref>,<sp/>electronsQuality.at(ielec),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>(dilep_name!=kNoTrig),<sp/>dilep_name);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eff_data<sp/>=<sp/>0.,<sp/>eff_mc<sp/>=<sp/>0.;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>err_data<sp/>=<sp/>0.,<sp/>err_mc<sp/>=<sp/>0.;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((electrons.at(ielec)).Pt()<sp/>&lt;<sp/>threshold.second)<sp/>or</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fabs((electrons.at(ielec)).Eta())<sp/>&gt;=<sp/>electron_maximum_eta))<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eff_data<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eff_mc<sp/><sp/><sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err_data<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err_mc<sp/><sp/><sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>efficiency<sp/>from<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::pair&lt;double,<sp/>double&gt;<sp/>rc;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4f14b79116e9e10c812fcf0e6e4b7507" kindref="member">ElEff_Data</ref>(electrons.at(ielec),<sp/>set_mc,<sp/>set_data,<sp/>m_year,<sp/>configuration);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eff_data<sp/>=<sp/>rc.first;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err_data<sp/>=<sp/>rc.second;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>efficiency<sp/>from<sp/>MC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4c5063ec24c00b2be443c2db6803adbf" kindref="member">ElEff_MC</ref>(electrons.at(ielec),<sp/>set_mc,<sp/>m_year,<sp/>configuration);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eff_mc<sp/>=<sp/>rc.first;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err_mc<sp/>=<sp/>rc.second;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eff_data==1.0)<sp/>eff_data=1.0-1.0E-10;<sp/></highlight><highlight class="comment">//<sp/>to<sp/>avoid<sp/>division<sp/>by<sp/>0<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eff_mc==1.0)<sp/>eff_mc=1.0-1.0E-10;<sp/></highlight><highlight class="comment">//<sp/>to<sp/>avoid<sp/>division<sp/>by<sp/>0<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>rate_not_fired_data<sp/>*=<sp/>(1.<sp/>-<sp/>eff_data);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>rate_not_fired_mc<sp/><sp/><sp/>*=<sp/>(1.<sp/>-<sp/>eff_mc);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>needed<sp/>for<sp/>uncertainty<sp/>calculation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eff_data)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>err_data/(<sp/>1.<sp/>-<sp/>eff_data<sp/>);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>inv_sq_eff_data<sp/>+=<sp/>c*c;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>inv_sq_eff_data_el<sp/>+=<sp/>c*c;<sp/></highlight><highlight class="comment">//<sp/>contribution<sp/>only<sp/>due<sp/>to<sp/>electron<sp/>trigger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eff_mc)<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>err_mc/(<sp/>1.<sp/>-<sp/>eff_mc<sp/>);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>inv_sq_eff_mc<sp/>+=<sp/>c*c;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>inv_sq_eff_mc_el<sp/>+=<sp/>c*c;<sp/></highlight><highlight class="comment">//<sp/>contribution<sp/>only<sp/>due<sp/>to<sp/>electron<sp/>trigger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>imuon<sp/>=<sp/>0;<sp/>imuon<sp/>&lt;<sp/>muons.size();<sp/>++imuon)<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eff_data<sp/>=<sp/>0.,<sp/>eff_mc<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>err_data<sp/>=<sp/>0.,<sp/>err_mc<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((muons.at(imuon)).Pt()<sp/>&lt;<sp/>threshold.first)<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eff_data<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eff_mc<sp/><sp/><sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err_data<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err_mc<sp/><sp/><sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a3dbf4aa4afa096186a49751cae36ad47" kindref="member">setByUser</ref>)<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>setConfiguration(const_cast&lt;TrigMuonEff::Configuration&amp;&gt;(configuration)))<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(<sp/>0.,<sp/>0.<sp/>);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(muonsQuality.at(imuon)<sp/>==<sp/>CaloMuon)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>muon_trigger_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(is_e12Tvh_medium1_mu8)<sp/>muon_trigger_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;mu8&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>efficiency<sp/>from<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>configuration.isData<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::pair&lt;double,<sp/>double&gt;<sp/>rc;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4db7c81b2ef7ca3f9c904d2963867a55" kindref="member">getMuonEfficiency</ref>(configuration,<sp/>muons.at(imuon),<sp/>muonsQuality.at(imuon),<sp/>muon_trigger_name);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eff_data<sp/>=<sp/>rc.first;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err_data<sp/>=<sp/>rc.second;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>efficiency<sp/>from<sp/>MC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>configuration.isData<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4db7c81b2ef7ca3f9c904d2963867a55" kindref="member">getMuonEfficiency</ref>(configuration,<sp/>muons.at(imuon),<sp/>muonsQuality.at(imuon),<sp/>muon_trigger_name);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eff_mc<sp/>=<sp/>rc.first;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err_mc<sp/>=<sp/>rc.second;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>rate_not_fired_data<sp/>*=<sp/>(<sp/>1.<sp/>-<sp/>eff_data<sp/>);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>rate_not_fired_mc<sp/><sp/><sp/>*=<sp/>(<sp/>1.<sp/>-<sp/>eff_mc<sp/>);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>needed<sp/>for<sp/>uncertainty<sp/>calculation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eff_data)<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>err_data/(<sp/>1.<sp/>-<sp/>eff_data<sp/>);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>inv_sq_eff_data<sp/>+=<sp/>c*c;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>inv_sq_eff_data_mu<sp/>+=<sp/>c*c;<sp/></highlight><highlight class="comment">//<sp/>contribution<sp/>only<sp/>due<sp/>to<sp/>muon<sp/>trigger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eff_mc)<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>err_mc/(<sp/>1.<sp/>-<sp/>eff_mc<sp/>);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>inv_sq_eff_mc<sp/>+=<sp/>c*c;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>inv_sq_eff_mc_mu<sp/>+=<sp/>c*c;<sp/></highlight><highlight class="comment">//<sp/>contribution<sp/>only<sp/>due<sp/>to<sp/>muon<sp/>trigger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>event_SF<sp/>=<sp/>1.;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>event_SF_err<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>event_SF_err_el<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>event_SF_err_mu<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>prevent<sp/>events<sp/>with<sp/>no<sp/>triggered<sp/>electrons<sp/>or<sp/>muons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((electrons.size()<sp/>or<sp/>muons.size())<sp/>and</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(fabs(1.<sp/>-<sp/>rate_not_fired_mc)<sp/>&gt;<sp/>0.0001))<sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>event_SF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(<sp/>1.<sp/>-<sp/>rate_not_fired_data<sp/>)<sp/>/<sp/>(<sp/>1.<sp/>-<sp/>rate_not_fired_mc<sp/>);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>event_SF_err<sp/><sp/><sp/><sp/>=<sp/>getSfError(<sp/>rate_not_fired_data,<sp/>rate_not_fired_mc,</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inv_sq_eff_data,<sp/>inv_sq_eff_mc<sp/>);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>event_SF_err_el<sp/>=<sp/>getSfError(<sp/>rate_not_fired_data,<sp/>rate_not_fired_mc,</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inv_sq_eff_data_el,<sp/>inv_sq_eff_mc_el<sp/>);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>event_SF_err_mu<sp/>=<sp/>getSfError(<sp/>rate_not_fired_data,<sp/>rate_not_fired_mc,</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inv_sq_eff_data_mu,<sp/>inv_sq_eff_mc_mu<sp/>);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a90663caf0bf02147af414fa62cdc25e7" kindref="member">systematics</ref>)<sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>noVariation:</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>statisticalOnlyMuon:</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(<sp/>event_SF,<sp/>event_SF_err<sp/>);<sp/></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>plusOneSigma:</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(<sp/>event_SF<sp/>+<sp/>event_SF_err,<sp/>event_SF_err<sp/>);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>minusOneSigma:</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(<sp/>event_SF<sp/>-<sp/>event_SF_err,<sp/>event_SF_err<sp/>);<sp/></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>plusOneSigmaElectron:</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(<sp/>event_SF<sp/>+<sp/>event_SF_err_el,<sp/>event_SF_err<sp/>);<sp/></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>minusOneSigmaElectron:</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(<sp/>event_SF<sp/>-<sp/>event_SF_err_el,<sp/>event_SF_err<sp/>);<sp/></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>plusOneSigmaMuon:</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(<sp/>event_SF<sp/>+<sp/>event_SF_err_mu,<sp/>event_SF_err<sp/>);<sp/></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>minusOneSigmaMuon:</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(<sp/>event_SF<sp/>-<sp/>event_SF_err_mu,<sp/>event_SF_err<sp/>);<sp/></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::Warning(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::GetTriggerSF&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;unknown<sp/>systematics<sp/>option<sp/>&apos;%i&apos;<sp/>given:<sp/>no<sp/>systematic<sp/>variation<sp/>used&quot;</highlight><highlight class="normal">,<sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a90663caf0bf02147af414fa62cdc25e7" kindref="member">systematics</ref>);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(<sp/>event_SF,<sp/>event_SF_err<sp/>);<sp/></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal">}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal">std::pair&lt;double,<sp/>double&gt;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><ref refid="d3/d83/classLeptonTriggerSF_1a42df88bb6fe134a528fcf3aa04461611" kindref="member">LeptonTriggerSF::GetTriggerSF</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/d63/structTrigMuonEff_1_1Configuration" kindref="compound">TrigMuonEff::Configuration</ref>&amp;<sp/>configuration,</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TLorentzVector&gt;&amp;<sp/>muons,</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;MuonQuality&gt;&amp;<sp/>muonsQuality,</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>trigger)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="514"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(muons.size()<sp/>!=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>::Fatal(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::GetTriggerSF&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MESSAGE(</highlight><highlight class="stringliteral">&quot;Currently<sp/>dimuon<sp/>trigger<sp/>chains<sp/>only<sp/>implemented<sp/>for<sp/>events<sp/>with<sp/>exactly<sp/>2<sp/>muons.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Muon<sp/>vector<sp/>has<sp/>wrong<sp/>size&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eff_data<sp/>=<sp/>0.,<sp/>eff_mc<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eff_data_err<sp/>=<sp/>0.,<sp/>eff_mc_err<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a3dbf4aa4afa096186a49751cae36ad47" kindref="member">setByUser</ref>)<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>setConfiguration(const_cast&lt;TrigMuonEff::Configuration&amp;&gt;(configuration)))<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(<sp/>0.,<sp/>0.<sp/>);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_mu24i_tight_or_mu36_tight<sp/>=<sp/>(trigger.find(</highlight><highlight class="stringliteral">&quot;mu24i_tight_or_mu36_tight&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_mu18_tight_mu8_EFFS<sp/>=<sp/>(trigger.find(</highlight><highlight class="stringliteral">&quot;mu18_tight_mu8_EFFS&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_2mu13<sp/>=<sp/>(trigger.find(</highlight><highlight class="stringliteral">&quot;2mu13&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>efficiency<sp/>from<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/>configuration.isData<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((is_mu24i_tight_or_mu36_tight<sp/>and<sp/>is_mu18_tight_mu8_EFFS)<sp/>or</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(is_mu24i_tight_or_mu36_tight<sp/>and<sp/>is_2mu13))<sp/>{<sp/></highlight><highlight class="comment">//<sp/>single<sp/>OR<sp/>dimuon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>eff_data<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a3dfd200d9f2496c777951bd8326d0016" kindref="member">getSingleOrDimuonEfficiency</ref>(configuration,<sp/>muons,<sp/>muonsQuality,<sp/>trigger).first;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>eff_data_err<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a3dfd200d9f2496c777951bd8326d0016" kindref="member">getSingleOrDimuonEfficiency</ref>(configuration,<sp/>muons,<sp/>muonsQuality,<sp/>trigger).second;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_mu18_tight_mu8_EFFS<sp/>or<sp/>is_2mu13)<sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>eff_data<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a53683915755eb3f59608eccc1bbf366e" kindref="member">getDimuonEfficiency</ref>(configuration,<sp/>muons,<sp/>muonsQuality,<sp/>trigger).first;<sp/></highlight><highlight class="comment">//<sp/>dimuon<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>eff_data_err<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a53683915755eb3f59608eccc1bbf366e" kindref="member">getDimuonEfficiency</ref>(configuration,<sp/>muons,<sp/>muonsQuality,<sp/>trigger).second;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>::Fatal(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::GetTriggerSF&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MESSAGE(</highlight><highlight class="stringliteral">&quot;unknown<sp/>trigger<sp/>combination:<sp/>%s&quot;</highlight><highlight class="normal">),<sp/>trigger.c_str());</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;unknown<sp/>trigger<sp/>combination&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/>configuration.isData<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((is_mu24i_tight_or_mu36_tight<sp/>and<sp/>is_mu18_tight_mu8_EFFS)<sp/>or</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(is_mu24i_tight_or_mu36_tight<sp/>and<sp/>is_2mu13))<sp/>{<sp/></highlight><highlight class="comment">//<sp/>single<sp/>OR<sp/>dimuon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>eff_mc<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a3dfd200d9f2496c777951bd8326d0016" kindref="member">getSingleOrDimuonEfficiency</ref>(configuration,<sp/>muons,<sp/>muonsQuality,<sp/>trigger).first;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>eff_mc_err<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a3dfd200d9f2496c777951bd8326d0016" kindref="member">getSingleOrDimuonEfficiency</ref>(configuration,<sp/>muons,<sp/>muonsQuality,<sp/>trigger).second;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_mu18_tight_mu8_EFFS<sp/>or<sp/>is_2mu13)<sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>eff_mc<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a53683915755eb3f59608eccc1bbf366e" kindref="member">getDimuonEfficiency</ref>(configuration,<sp/>muons,<sp/>muonsQuality,<sp/>trigger).first;<sp/></highlight><highlight class="comment">//<sp/>dimuon<sp/>only<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>eff_mc_err<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a53683915755eb3f59608eccc1bbf366e" kindref="member">getDimuonEfficiency</ref>(configuration,<sp/>muons,<sp/>muonsQuality,<sp/>trigger).second;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>event_SF<sp/>=<sp/>1.;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>event_SF_err<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>prevent<sp/>events<sp/>with<sp/>no<sp/>triggered<sp/>muons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<sp/>muons.size())<sp/>and<sp/>(fabs(eff_mc)<sp/>&gt;<sp/>0.0001)){</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>eff_data;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>de<sp/>=<sp/>eff_data_err;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>eff_mc;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>me<sp/>=<sp/>eff_mc_err;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>event_SF<sp/>=<sp/>d<sp/>/<sp/>m;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>event_SF_err<sp/>=<sp/>sqrt(<sp/>(<sp/>de*de<sp/>/<sp/>m*m<sp/>)<sp/>+<sp/>(<sp/>d*d*me*me<sp/>/<sp/>m*m*m*m<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*std::cout<sp/>&lt;&lt;<sp/>&quot;eff_data<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>eff_data<sp/>&lt;&lt;<sp/>&quot;,<sp/>eff_mc<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>eff_mc<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="576"><highlight class="comment"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;Muon<sp/>1:<sp/>pT<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>muons[0].Pt()<sp/>&lt;&lt;<sp/>&quot;,<sp/>eta<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>muons[0].Eta()<sp/>&lt;&lt;<sp/>&quot;,<sp/>phi<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>muons[0].Phi()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="577"><highlight class="comment"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;Muon<sp/>2:<sp/>pT<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>muons[1].Pt()<sp/>&lt;&lt;<sp/>&quot;,<sp/>eta<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>muons[1].Eta()<sp/>&lt;&lt;<sp/>&quot;,<sp/>phi<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>muons[1].Phi()<sp/>&lt;&lt;<sp/>std::endl;*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a90663caf0bf02147af414fa62cdc25e7" kindref="member">systematics</ref>)<sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>noVariation:</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>statisticalOnlyMuon:</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(<sp/>event_SF,<sp/>event_SF_err<sp/>);<sp/></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>plusOneSigma:</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(<sp/>event_SF<sp/>+<sp/>event_SF_err,<sp/>event_SF_err<sp/>);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>minusOneSigma:</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(<sp/>event_SF<sp/>-<sp/>event_SF_err,<sp/>event_SF_err<sp/>);<sp/></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>::Warning(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::GetTriggerSF&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;unknown<sp/>systematics<sp/>option<sp/>&apos;%i&apos;<sp/>given:<sp/>no<sp/>systematic<sp/>variation<sp/>used&quot;</highlight><highlight class="normal">,<sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a90663caf0bf02147af414fa62cdc25e7" kindref="member">systematics</ref>);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(<sp/>event_SF,<sp/>event_SF_err<sp/>);<sp/></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal">}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal">std::pair&lt;double,<sp/>double&gt;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><ref refid="d3/d83/classLeptonTriggerSF_1a42df88bb6fe134a528fcf3aa04461611" kindref="member">LeptonTriggerSF::GetTriggerSF</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/d63/structTrigMuonEff_1_1Configuration" kindref="compound">TrigMuonEff::Configuration</ref>&amp;<sp/>configuration,</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TLorentzVector&gt;&amp;<sp/>electrons,</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;ElectronQuality&gt;&amp;<sp/>electronsQuality,</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>trigger)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="602"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(electrons.size()<sp/>!=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>::Fatal(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::GetTriggerSF&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MESSAGE(</highlight><highlight class="stringliteral">&quot;Currently<sp/>dielectron<sp/>trigger<sp/>chains<sp/>only<sp/>implemented<sp/>for<sp/>events<sp/>with<sp/>exactly<sp/>2<sp/>electrons.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Electron<sp/>vector<sp/>has<sp/>wrong<sp/>size&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eff_data<sp/>=<sp/>0.,<sp/>eff_mc<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eff_data_err<sp/>=<sp/>0.,<sp/>eff_mc_err<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a3dbf4aa4afa096186a49751cae36ad47" kindref="member">setByUser</ref>)<sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>setConfiguration(const_cast&lt;TrigMuonEff::Configuration&amp;&gt;(configuration)))<sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(<sp/>0.,<sp/>0.<sp/>);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_e24vhi_medium1_or_e60_medium1<sp/>=<sp/>(trigger.find(</highlight><highlight class="stringliteral">&quot;e24vhi_medium1_or_e60_medium1&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_2e12Tvh_loose1<sp/>=<sp/>(trigger.find(</highlight><highlight class="stringliteral">&quot;2e12Tvh_loose1&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>efficiency<sp/>from<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/>configuration.isData<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((is_e24vhi_medium1_or_e60_medium1<sp/>and<sp/>is_2e12Tvh_loose1))<sp/>{<sp/></highlight><highlight class="comment">//<sp/>single<sp/>OR<sp/>dielectron</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>eff_data<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a737364e3725c6ef879b6e24622d0e6aa" kindref="member">getSingleOrDielectronEfficiency</ref>(configuration,<sp/>electrons,<sp/>electronsQuality,<sp/>trigger).first;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>eff_data_err<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a737364e3725c6ef879b6e24622d0e6aa" kindref="member">getSingleOrDielectronEfficiency</ref>(configuration,<sp/>electrons,<sp/>electronsQuality,<sp/>trigger).second;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_2e12Tvh_loose1)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>dielectron<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>eff_data<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a57ba492d6dd7519cd740b7692c118673" kindref="member">getDielectronEfficiency</ref>(configuration,<sp/>electrons,<sp/>electronsQuality,<sp/>trigger).first;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>eff_data_err<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a57ba492d6dd7519cd740b7692c118673" kindref="member">getDielectronEfficiency</ref>(configuration,<sp/>electrons,<sp/>electronsQuality,<sp/>trigger).second;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>::Fatal(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::GetTriggerSF&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MESSAGE(</highlight><highlight class="stringliteral">&quot;unknown<sp/>trigger<sp/>combination:<sp/>%s&quot;</highlight><highlight class="normal">),<sp/>trigger.c_str());</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;unknown<sp/>trigger<sp/>combination&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/>configuration.isData<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((is_e24vhi_medium1_or_e60_medium1<sp/>and<sp/>is_2e12Tvh_loose1))<sp/>{<sp/></highlight><highlight class="comment">//<sp/>single<sp/>OR<sp/>dielectron</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>eff_mc<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a737364e3725c6ef879b6e24622d0e6aa" kindref="member">getSingleOrDielectronEfficiency</ref>(configuration,<sp/>electrons,<sp/>electronsQuality,<sp/>trigger).first;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>eff_mc_err<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a737364e3725c6ef879b6e24622d0e6aa" kindref="member">getSingleOrDielectronEfficiency</ref>(configuration,<sp/>electrons,<sp/>electronsQuality,<sp/>trigger).second;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_2e12Tvh_loose1)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>dimuon<sp/>only<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>eff_mc<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a57ba492d6dd7519cd740b7692c118673" kindref="member">getDielectronEfficiency</ref>(configuration,<sp/>electrons,<sp/>electronsQuality,<sp/>trigger).first;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>eff_mc_err<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a57ba492d6dd7519cd740b7692c118673" kindref="member">getDielectronEfficiency</ref>(configuration,<sp/>electrons,<sp/>electronsQuality,<sp/>trigger).second;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>event_SF<sp/>=<sp/>1.;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>event_SF_err<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>prevent<sp/>events<sp/>with<sp/>no<sp/>triggered<sp/>electrons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<sp/>electrons.size())<sp/>and<sp/>(fabs(eff_mc)<sp/>&gt;<sp/>0.0001)){</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>eff_data;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>de<sp/>=<sp/>eff_data_err;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>eff_mc;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>me<sp/>=<sp/>eff_mc_err;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>event_SF<sp/>=<sp/>d<sp/>/<sp/>m;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>event_SF_err<sp/>=<sp/>sqrt(<sp/>(<sp/>de*de<sp/>/<sp/>m*m<sp/>)<sp/>+<sp/>(<sp/>d*d*me*me<sp/>/<sp/>m*m*m*m<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*std::cout<sp/>&lt;&lt;<sp/>&quot;eff_data<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>eff_data<sp/>&lt;&lt;<sp/>&quot;,<sp/>eff_mc<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>eff_mc<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="661"><highlight class="comment"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;Electron<sp/>1:<sp/>pT<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>electrons[0].Pt()<sp/>&lt;&lt;<sp/>&quot;,<sp/>eta<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>electrons[0].Eta()<sp/>&lt;&lt;<sp/>&quot;,<sp/>phi<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>electrons[0].Phi()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="662"><highlight class="comment"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;Electron<sp/>2:<sp/>pT<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>electrons[1].Pt()<sp/>&lt;&lt;<sp/>&quot;,<sp/>eta<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>electrons[1].Eta()<sp/>&lt;&lt;<sp/>&quot;,<sp/>phi<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>electrons[1].Phi()<sp/>&lt;&lt;<sp/>std::endl;*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a90663caf0bf02147af414fa62cdc25e7" kindref="member">systematics</ref>)<sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>noVariation:</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(<sp/>event_SF,<sp/>event_SF_err<sp/>);<sp/></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>plusOneSigma:</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(<sp/>event_SF<sp/>+<sp/>event_SF_err,<sp/>event_SF_err<sp/>);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>minusOneSigma:</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(<sp/>event_SF<sp/>-<sp/>event_SF_err,<sp/>event_SF_err<sp/>);<sp/></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>::Warning(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::GetTriggerSF&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;unknown<sp/>systematics<sp/>option<sp/>&apos;%i&apos;<sp/>given:<sp/>no<sp/>systematic<sp/>variation<sp/>used&quot;</highlight><highlight class="normal">,<sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a90663caf0bf02147af414fa62cdc25e7" kindref="member">systematics</ref>);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(<sp/>event_SF,<sp/>event_SF_err<sp/>);<sp/></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal">}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal">std::pair&lt;double,<sp/>double&gt;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><ref refid="d3/d83/classLeptonTriggerSF_1a4db7c81b2ef7ca3f9c904d2963867a55" kindref="member">LeptonTriggerSF::getMuonEfficiency</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/d63/structTrigMuonEff_1_1Configuration" kindref="compound">TrigMuonEff::Configuration</ref>&amp;<sp/>configuration,</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector&amp;<sp/>muon,</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MuonQuality<sp/>muonQuality,</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>trigger)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="688"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(muonQuality<sp/>==<sp/>CaloMuon)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(0.0,<sp/>0.0);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mu_eta<sp/>=<sp/>muon.Eta();</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mu_phi<sp/>=<sp/>fixPhiRange(muon);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>type<sp/>=<sp/>(configuration.isData<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;_data&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;_mc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>region<sp/>=<sp/>((fabs(mu_eta)<sp/>&lt;<sp/>muon_barrel_endcap_boundary)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;_barrel&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;_endcap&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>quality<sp/>=<sp/>getMuonQuality(muonQuality);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>chain<sp/>=<sp/>(trigger.empty()<sp/>?<sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ab3e81f06dc7f278203a9086b14177c5d" kindref="member">trigger</ref><sp/>:<sp/>trigger);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>histname<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;_MuonTrigEff_&quot;</highlight><highlight class="normal"><sp/>+<sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1aa1ea2b3f4ca3d304445f903df40e1142" kindref="member">period</ref><sp/>+<sp/>((m_year<sp/>&gt;<sp/>2011)<sp/>?<sp/>chain<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>+<sp/>quality<sp/>+</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;_EtaPhi_&quot;</highlight><highlight class="normal"><sp/>+<sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a9096cd623777c445a83680ec81680f46" kindref="member">binning</ref><sp/>+<sp/>region<sp/>+<sp/>type;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EfficiencyMap*<sp/>map<sp/>=<sp/>&amp;m_efficiencyMap;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a7b8f7c43f39973d6b60e46fedf04b27f" kindref="member">replicaIndex</ref><sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a7b8f7c43f39973d6b60e46fedf04b27f" kindref="member">replicaIndex</ref><sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>m_efficiencyMapReplicaArray.size())<sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>map<sp/>=<sp/>&amp;m_efficiencyMapReplicaArray.at(configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a7b8f7c43f39973d6b60e46fedf04b27f" kindref="member">replicaIndex</ref>);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::Fatal(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::getMuonEfficiency&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MESSAGE(</highlight><highlight class="stringliteral">&quot;index<sp/>for<sp/>replicated<sp/>histograms<sp/>is<sp/>out<sp/>of<sp/>range.<sp/>%d&quot;</highlight><highlight class="normal">),<sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a7b8f7c43f39973d6b60e46fedf04b27f" kindref="member">replicaIndex</ref>);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<sp/></highlight><highlight class="stringliteral">&quot;Internal<sp/>coding<sp/>error<sp/>detected&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/>EfficiencyMap::const_iterator<sp/>cit<sp/>=<sp/>map-&gt;find(histname);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cit<sp/>==<sp/>map-&gt;end())<sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>::Fatal(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::getMuonEfficiency&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MESSAGE(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>what<sp/>you<sp/>are<sp/>looking<sp/>for<sp/>in<sp/>the<sp/>efficiency<sp/>map.<sp/>\&quot;%s\&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>either<sp/>a<sp/>bug<sp/>or<sp/>you<sp/>are<sp/>not<sp/>using<sp/>the<sp/>right<sp/>.root<sp/>file,<sp/>please<sp/>double<sp/>check.&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>histname.c_str()<sp/>);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<sp/></highlight><highlight class="stringliteral">&quot;Internal<sp/>coding<sp/>error<sp/>detected&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bin<sp/>=<sp/>(cit-&gt;second)-&gt;FindFixBin(mu_eta,<sp/>mu_phi);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>efficiency<sp/>=<sp/>(cit-&gt;second)-&gt;GetBinContent(bin);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>statisticalError<sp/>=<sp/>(cit-&gt;second)-&gt;GetBinError(bin);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>systematicError<sp/>=<sp/>commonSystMTSG<sp/>*<sp/>efficiency;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>uncertainty<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a90663caf0bf02147af414fa62cdc25e7" kindref="member">systematics</ref>)<sp/>{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>statisticalOnlyMuon:</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uncertainty<sp/>=<sp/>statisticalError;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>systematicOnlyMuon:</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uncertainty<sp/>=<sp/>systematicError;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uncertainty<sp/>=<sp/>sqrt(statisticalError*statisticalError<sp/>+<sp/>systematicError*systematicError);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;Error:<sp/>&quot;<sp/>&lt;&lt;<sp/>efficiency<sp/>&lt;&lt;<sp/>&quot;<sp/>Stat<sp/>error:<sp/>&quot;<sp/>&lt;&lt;<sp/>statisticalError<sp/>&lt;&lt;<sp/>&quot;<sp/>SYst:<sp/>&quot;<sp/>&lt;&lt;<sp/>systematicError<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(efficiency,<sp/>uncertainty);</highlight></codeline>
<codeline lineno="746"><highlight class="normal">}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal">std::pair&lt;double,<sp/>double&gt;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><ref refid="d3/d83/classLeptonTriggerSF_1a53683915755eb3f59608eccc1bbf366e" kindref="member">LeptonTriggerSF::getDimuonEfficiency</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/d63/structTrigMuonEff_1_1Configuration" kindref="compound">TrigMuonEff::Configuration</ref>&amp;<sp/>configuration,</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TLorentzVector&gt;&amp;<sp/>muons,</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;MuonQuality&gt;&amp;<sp/>muonsQuality,</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>chain)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="755"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/>DileptonThresholds<sp/>thresholds;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/>getDileptonThresholds(configuration,<sp/>thresholds);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>threshold_leg1<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>threshold_leg2<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chain.find(</highlight><highlight class="stringliteral">&quot;mu18_tight_mu8_EFFS&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>threshold_leg1<sp/>=<sp/>thresholds.mu18_tight;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>threshold_leg2<sp/>=<sp/>thresholds.mu8_EFFS;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chain.find(</highlight><highlight class="stringliteral">&quot;2mu13&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>threshold_leg1<sp/>=<sp/>thresholds.mu13;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>threshold_leg2<sp/>=<sp/>thresholds.mu13;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>::Error(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::getDimuonEfficiency&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MESSAGE(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>dimuon<sp/>or<sp/>combination<sp/>of<sp/>single<sp/>and<sp/>dimuon<sp/>trigger<sp/>chain<sp/>name<sp/>given&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eff_mu1_leg1<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eff_mu2_leg1<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eff_mu1_leg2<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eff_mu2_leg2<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eff_mu1_bothlegs<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eff_mu2_bothlegs<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eff_mu1_leg1_err<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eff_mu2_leg1_err<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eff_mu1_leg2_err<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eff_mu2_leg2_err<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eff_mu1_bothlegs_err<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eff_mu2_bothlegs_err<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/>DileptonTrigger<sp/>dimuon;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/>getDileptonLegs(chain,<sp/>dimuon);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>Leg1<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>Leg2<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((muons.at(Leg1)).Pt()<sp/>&gt;=<sp/>threshold_leg1)<sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>eff_mu1_leg1<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4db7c81b2ef7ca3f9c904d2963867a55" kindref="member">getMuonEfficiency</ref>(configuration,<sp/>muons.at(Leg1),<sp/>muonsQuality.at(Leg1),<sp/>dimuon.leg1).first;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>eff_mu1_leg1_err<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4db7c81b2ef7ca3f9c904d2963867a55" kindref="member">getMuonEfficiency</ref>(configuration,<sp/>muons.at(Leg1),<sp/>muonsQuality.at(Leg1),<sp/>dimuon.leg1).second;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>eff_mu1_bothlegs<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4db7c81b2ef7ca3f9c904d2963867a55" kindref="member">getMuonEfficiency</ref>(configuration,<sp/>muons.at(Leg1),<sp/>muonsQuality.at(Leg1),<sp/>dimuon.bothLegs).first;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>eff_mu1_bothlegs_err<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4db7c81b2ef7ca3f9c904d2963867a55" kindref="member">getMuonEfficiency</ref>(configuration,<sp/>muons.at(Leg1),<sp/>muonsQuality.at(Leg1),<sp/>dimuon.bothLegs).second;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((muons.at(Leg2)).Pt()<sp/>&gt;=<sp/>threshold_leg1)<sp/>{</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>eff_mu2_leg1<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4db7c81b2ef7ca3f9c904d2963867a55" kindref="member">getMuonEfficiency</ref>(configuration,<sp/>muons.at(Leg2),<sp/>muonsQuality.at(Leg2),<sp/>dimuon.leg1).first;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>eff_mu2_leg1_err<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4db7c81b2ef7ca3f9c904d2963867a55" kindref="member">getMuonEfficiency</ref>(configuration,<sp/>muons.at(Leg2),<sp/>muonsQuality.at(Leg2),<sp/>dimuon.leg1).second;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>eff_mu2_bothlegs<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4db7c81b2ef7ca3f9c904d2963867a55" kindref="member">getMuonEfficiency</ref>(configuration,<sp/>muons.at(Leg2),<sp/>muonsQuality.at(Leg2),<sp/>dimuon.bothLegs).first;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>eff_mu2_bothlegs_err<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4db7c81b2ef7ca3f9c904d2963867a55" kindref="member">getMuonEfficiency</ref>(configuration,<sp/>muons.at(Leg2),<sp/>muonsQuality.at(Leg2),<sp/>dimuon.bothLegs).second;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((muons.at(Leg1)).Pt()<sp/>&gt;=<sp/>threshold_leg2){</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>eff_mu1_leg2<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4db7c81b2ef7ca3f9c904d2963867a55" kindref="member">getMuonEfficiency</ref>(configuration,<sp/>muons.at(Leg1),<sp/>muonsQuality.at(Leg1),<sp/>dimuon.leg2).first;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>eff_mu1_leg2_err<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4db7c81b2ef7ca3f9c904d2963867a55" kindref="member">getMuonEfficiency</ref>(configuration,<sp/>muons.at(Leg1),<sp/>muonsQuality.at(Leg1),<sp/>dimuon.leg2).second;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((muons.at(Leg2)).Pt()<sp/>&gt;=<sp/>threshold_leg2){<sp/></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>eff_mu2_leg2<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4db7c81b2ef7ca3f9c904d2963867a55" kindref="member">getMuonEfficiency</ref>(configuration,<sp/>muons.at(Leg2),<sp/>muonsQuality.at(Leg2),<sp/>dimuon.leg2).first;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>eff_mu2_leg2_err<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4db7c81b2ef7ca3f9c904d2963867a55" kindref="member">getMuonEfficiency</ref>(configuration,<sp/>muons.at(Leg2),<sp/>muonsQuality.at(Leg2),<sp/>dimuon.leg2).second;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*if(configuration.isData){</highlight></codeline>
<codeline lineno="820"><highlight class="comment"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;DATA:<sp/>di_eff_mu1<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>eff_mu1_leg1<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="821"><highlight class="comment"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;DATA:<sp/>di_eff_mu2<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>eff_mu2_leg1<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="822"><highlight class="comment"><sp/><sp/>}<sp/>else{</highlight></codeline>
<codeline lineno="823"><highlight class="comment"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;MC:<sp/>di_eff_mu1<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>eff_mu1_leg1<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="824"><highlight class="comment"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;MC:<sp/>di_eff_mu2<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>eff_mu2_leg1<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="825"><highlight class="comment"><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>thedieff<sp/>=<sp/>eff_mu1_leg1*eff_mu2_leg2<sp/>+<sp/>eff_mu2_leg1*eff_mu1_leg2<sp/>-<sp/>eff_mu1_bothlegs*eff_mu2_bothlegs;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>thedieff_err<sp/>=<sp/>getDiError(eff_mu1_leg1,<sp/>eff_mu1_leg1_err,</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eff_mu2_leg1,<sp/>eff_mu2_leg1_err,</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eff_mu1_leg2,<sp/>eff_mu1_leg2_err,</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eff_mu2_leg2,<sp/>eff_mu2_leg2_err,</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eff_mu1_bothlegs,<sp/>eff_mu1_bothlegs_err,</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eff_mu2_bothlegs,<sp/>eff_mu2_bothlegs_err);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(thedieff,<sp/>thedieff_err);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal">}</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal">std::pair&lt;double,<sp/>double&gt;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><ref refid="d3/d83/classLeptonTriggerSF_1a57ba492d6dd7519cd740b7692c118673" kindref="member">LeptonTriggerSF::getDielectronEfficiency</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/d63/structTrigMuonEff_1_1Configuration" kindref="compound">TrigMuonEff::Configuration</ref>&amp;<sp/>configuration,</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TLorentzVector&gt;&amp;<sp/>electrons,</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;ElectronQuality&gt;&amp;<sp/>electronsQuality,</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>chain)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="844"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/>DileptonThresholds<sp/>thresholds;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/>getDileptonThresholds(configuration,<sp/>thresholds);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>threshold_leg1<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>threshold_leg2<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/>DileptonTriggerName<sp/>dilep_name<sp/>=<sp/>kNoTrig;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chain.find(</highlight><highlight class="stringliteral">&quot;2e12Tvh_loose1&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>threshold_leg1<sp/>=<sp/>thresholds.e12Tvh_loose1;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>threshold_leg2<sp/>=<sp/>thresholds.e12Tvh_loose1;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>dilep_name<sp/>=<sp/>EF_2e12Tvh_loose1;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>::Error(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::getDielectronEfficiency&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MESSAGE(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>dielectron<sp/>or<sp/>combination<sp/>of<sp/>single<sp/>and<sp/>dielectron<sp/>trigger<sp/>chain<sp/>name<sp/>given&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eff_el1_leg1<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eff_el2_leg1<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eff_el1_leg2<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eff_el2_leg2<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eff_el1_bothlegs<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eff_el2_bothlegs<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eff_el1_leg1_err<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eff_el2_leg1_err<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eff_el1_leg2_err<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eff_el2_leg2_err<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eff_el1_bothlegs_err<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eff_el2_bothlegs_err<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/>DileptonTrigger<sp/>dielectron;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/>getDileptonLegs(chain,<sp/>dielectron);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>Leg1<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>Leg2<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>set_data_leg1<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a39ba2c399a909883bbc9ae72278ef002" kindref="member">getElectronQuality</ref>(configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ac7e00f10054006e03aa52073d85dd5ab" kindref="member">runNumber</ref>,<sp/>electronsQuality.at(Leg1),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>dilep_name);</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>set_mc_leg1<sp/><sp/><sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a39ba2c399a909883bbc9ae72278ef002" kindref="member">getElectronQuality</ref>(configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ac7e00f10054006e03aa52073d85dd5ab" kindref="member">runNumber</ref>,<sp/>electronsQuality.at(Leg1),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>dilep_name);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>set_data_leg2<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a39ba2c399a909883bbc9ae72278ef002" kindref="member">getElectronQuality</ref>(configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ac7e00f10054006e03aa52073d85dd5ab" kindref="member">runNumber</ref>,<sp/>electronsQuality.at(Leg2),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>dilep_name);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>set_mc_leg2<sp/><sp/><sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a39ba2c399a909883bbc9ae72278ef002" kindref="member">getElectronQuality</ref>(configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ac7e00f10054006e03aa52073d85dd5ab" kindref="member">runNumber</ref>,<sp/>electronsQuality.at(Leg2),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>dilep_name);</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(configuration.isData){</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((electrons.at(Leg1)).Pt()<sp/>&gt;=<sp/>threshold_leg1)<sp/>{</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>these<sp/>two<sp/>lines<sp/>are<sp/>the<sp/>same<sp/>for<sp/>the<sp/>electron<sp/>case<sp/>for<sp/>now,<sp/>but<sp/>coded<sp/>so<sp/>that<sp/>implementation<sp/>of<sp/>asymmetric<sp/>dielectron<sp/>trigger<sp/>will<sp/>be<sp/>easier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eff_el1_leg1<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4f14b79116e9e10c812fcf0e6e4b7507" kindref="member">ElEff_Data</ref>(electrons.at(Leg1),<sp/>set_mc_leg1,<sp/>set_data_leg1,<sp/>m_year,<sp/>configuration).first;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eff_el1_leg1_err<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4f14b79116e9e10c812fcf0e6e4b7507" kindref="member">ElEff_Data</ref>(electrons.at(Leg1),<sp/>set_mc_leg1,<sp/>set_data_leg1,<sp/>m_year,<sp/>configuration).second;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eff_el1_bothlegs<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4f14b79116e9e10c812fcf0e6e4b7507" kindref="member">ElEff_Data</ref>(electrons.at(Leg1),<sp/>set_mc_leg1,<sp/>set_data_leg1,<sp/>m_year,<sp/>configuration).first;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eff_el1_bothlegs_err<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4f14b79116e9e10c812fcf0e6e4b7507" kindref="member">ElEff_Data</ref>(electrons.at(Leg1),<sp/>set_mc_leg1,<sp/>set_data_leg1,<sp/>m_year,<sp/>configuration).second;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((electrons.at(Leg2)).Pt()<sp/>&gt;=<sp/>threshold_leg1)<sp/>{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eff_el2_leg1<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4f14b79116e9e10c812fcf0e6e4b7507" kindref="member">ElEff_Data</ref>(electrons.at(Leg2),<sp/>set_mc_leg2,<sp/>set_data_leg2,<sp/>m_year,<sp/>configuration).first;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eff_el2_leg1_err<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4f14b79116e9e10c812fcf0e6e4b7507" kindref="member">ElEff_Data</ref>(electrons.at(Leg2),<sp/>set_mc_leg2,<sp/>set_data_leg2,<sp/>m_year,<sp/>configuration).second;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eff_el2_bothlegs<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4f14b79116e9e10c812fcf0e6e4b7507" kindref="member">ElEff_Data</ref>(electrons.at(Leg2),<sp/>set_mc_leg2,<sp/>set_data_leg2,<sp/>m_year,<sp/>configuration).first;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eff_el2_bothlegs_err<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4f14b79116e9e10c812fcf0e6e4b7507" kindref="member">ElEff_Data</ref>(electrons.at(Leg2),<sp/>set_mc_leg2,<sp/>set_data_leg2,<sp/>m_year,<sp/>configuration).second;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((electrons.at(Leg1)).Pt()<sp/>&gt;=<sp/>threshold_leg2){</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eff_el1_leg2<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4f14b79116e9e10c812fcf0e6e4b7507" kindref="member">ElEff_Data</ref>(electrons.at(Leg1),<sp/>set_mc_leg1,<sp/>set_data_leg1,<sp/>m_year,<sp/>configuration).first;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eff_el1_leg2_err<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4f14b79116e9e10c812fcf0e6e4b7507" kindref="member">ElEff_Data</ref>(electrons.at(Leg1),<sp/>set_mc_leg1,<sp/>set_data_leg1,<sp/>m_year,<sp/>configuration).second;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((electrons.at(Leg2)).Pt()<sp/>&gt;=<sp/>threshold_leg2){</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eff_el2_leg2<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4f14b79116e9e10c812fcf0e6e4b7507" kindref="member">ElEff_Data</ref>(electrons.at(Leg2),<sp/>set_mc_leg2,<sp/>set_data_leg2,<sp/>m_year,<sp/>configuration).first;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eff_el2_leg2_err<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4f14b79116e9e10c812fcf0e6e4b7507" kindref="member">ElEff_Data</ref>(electrons.at(Leg2),<sp/>set_mc_leg2,<sp/>set_data_leg2,<sp/>m_year,<sp/>configuration).second;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((electrons.at(Leg1)).Pt()<sp/>&gt;=<sp/>threshold_leg1)<sp/>{</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eff_el1_leg1<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4c5063ec24c00b2be443c2db6803adbf" kindref="member">ElEff_MC</ref>(electrons.at(Leg1),<sp/>set_mc_leg1,<sp/>m_year,<sp/>configuration).first;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eff_el1_leg1_err<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4c5063ec24c00b2be443c2db6803adbf" kindref="member">ElEff_MC</ref>(electrons.at(Leg1),<sp/>set_mc_leg1,<sp/>m_year,<sp/>configuration).second;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eff_el1_bothlegs<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4c5063ec24c00b2be443c2db6803adbf" kindref="member">ElEff_MC</ref>(electrons.at(Leg1),<sp/>set_mc_leg1,<sp/>m_year,<sp/>configuration).first;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eff_el1_bothlegs_err<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4c5063ec24c00b2be443c2db6803adbf" kindref="member">ElEff_MC</ref>(electrons.at(Leg1),<sp/>set_mc_leg1,<sp/>m_year,<sp/>configuration).second;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((electrons.at(Leg2)).Pt()<sp/>&gt;=<sp/>threshold_leg1)<sp/>{</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eff_el2_leg1<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4c5063ec24c00b2be443c2db6803adbf" kindref="member">ElEff_MC</ref>(electrons.at(Leg2),<sp/>set_mc_leg2,<sp/>m_year,<sp/>configuration).first;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eff_el2_leg1_err<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4c5063ec24c00b2be443c2db6803adbf" kindref="member">ElEff_MC</ref>(electrons.at(Leg2),<sp/>set_mc_leg2,<sp/>m_year,<sp/>configuration).second;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eff_el2_bothlegs<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4c5063ec24c00b2be443c2db6803adbf" kindref="member">ElEff_MC</ref>(electrons.at(Leg2),<sp/>set_mc_leg2,<sp/>m_year,<sp/>configuration).first;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eff_el2_bothlegs_err<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4c5063ec24c00b2be443c2db6803adbf" kindref="member">ElEff_MC</ref>(electrons.at(Leg2),<sp/>set_mc_leg2,<sp/>m_year,<sp/>configuration).second;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((electrons.at(Leg1)).Pt()<sp/>&gt;=<sp/>threshold_leg2){</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eff_el1_leg2<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4c5063ec24c00b2be443c2db6803adbf" kindref="member">ElEff_MC</ref>(electrons.at(Leg1),<sp/>set_mc_leg1,<sp/>m_year,<sp/>configuration).first;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eff_el1_leg2_err<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4c5063ec24c00b2be443c2db6803adbf" kindref="member">ElEff_MC</ref>(electrons.at(Leg1),<sp/>set_mc_leg1,<sp/>m_year,<sp/>configuration).second;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((electrons.at(Leg2)).Pt()<sp/>&gt;=<sp/>threshold_leg2){</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eff_el2_leg2<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4c5063ec24c00b2be443c2db6803adbf" kindref="member">ElEff_MC</ref>(electrons.at(Leg2),<sp/>set_mc_leg2,<sp/>m_year,<sp/>configuration).first;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eff_el2_leg2_err<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4c5063ec24c00b2be443c2db6803adbf" kindref="member">ElEff_MC</ref>(electrons.at(Leg2),<sp/>set_mc_leg2,<sp/>m_year,<sp/>configuration).second;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*if(configuration.isData){</highlight></codeline>
<codeline lineno="936"><highlight class="comment"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;DATA:<sp/>di_eff_el1<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>eff_el1_leg1<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="937"><highlight class="comment"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;DATA:<sp/>di_eff_el2<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>eff_el2_leg1<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="938"><highlight class="comment"><sp/><sp/>}<sp/>else{</highlight></codeline>
<codeline lineno="939"><highlight class="comment"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;MC:<sp/>di_eff_el1<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>eff_el1_leg1<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="940"><highlight class="comment"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;MC:<sp/>di_eff_el2<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>eff_el2_leg1<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="941"><highlight class="comment"><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>thedieff<sp/>=<sp/>eff_el1_leg1*eff_el2_leg2<sp/>+<sp/>eff_el2_leg1*eff_el1_leg2<sp/>-<sp/>eff_el1_bothlegs*eff_el2_bothlegs;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>thedieff_err<sp/>=<sp/>getDiError(eff_el1_leg1,<sp/>eff_el1_leg1_err,</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eff_el2_leg1,<sp/>eff_el2_leg1_err,</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eff_el1_leg2,<sp/>eff_el1_leg2_err,</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eff_el2_leg2,<sp/>eff_el2_leg2_err,</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eff_el1_bothlegs,<sp/>eff_el1_bothlegs_err,</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eff_el2_bothlegs,<sp/>eff_el2_bothlegs_err);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(thedieff,<sp/>thedieff_err);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal">}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal">std::pair&lt;double,<sp/>double&gt;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><ref refid="d3/d83/classLeptonTriggerSF_1a3dfd200d9f2496c777951bd8326d0016" kindref="member">LeptonTriggerSF::getSingleOrDimuonEfficiency</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/d63/structTrigMuonEff_1_1Configuration" kindref="compound">TrigMuonEff::Configuration</ref>&amp;<sp/>config,</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TLorentzVector&gt;&amp;<sp/>muons,</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;MuonQuality&gt;&amp;<sp/>muonsQuality,</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>chain)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="961"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ab3e81f06dc7f278203a9086b14177c5d" kindref="member">trigger</ref>.compare(</highlight><highlight class="stringliteral">&quot;mu24i_tight_or_EF_mu36_tight&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>::Fatal(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::getSingleOrDimuonEfficiency&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MESSAGE(</highlight><highlight class="stringliteral">&quot;Currently<sp/>dimuon<sp/>trigger<sp/>only<sp/>with<sp/>(mu24i_tight_or_mu_36_tight)<sp/>trigger<sp/>is<sp/>supported:<sp/>%s&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ab3e81f06dc7f278203a9086b14177c5d" kindref="member">trigger</ref>.c_str());</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Currently<sp/>dimuon<sp/>trigger<sp/>only<sp/>with<sp/>(mu24i_tight_or_mu_36_tight)<sp/>trigger<sp/>is<sp/>supported&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;double,<sp/>double&gt;<sp/>threshold<sp/>=<sp/>getThresholds(config);</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/>DileptonThresholds<sp/>thresholds;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/>getDileptonThresholds(config,<sp/>thresholds);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>threshold_leg1<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>threshold_leg2<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chain.find(</highlight><highlight class="stringliteral">&quot;mu18_tight_mu8_EFFS&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>threshold_leg1<sp/>=<sp/>thresholds.mu18_tight;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/>threshold_leg2<sp/>=<sp/>thresholds.mu8_EFFS;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chain.find(</highlight><highlight class="stringliteral">&quot;2mu13&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/>threshold_leg1<sp/>=<sp/>thresholds.mu13;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/>threshold_leg2<sp/>=<sp/>thresholds.mu13;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/>::Error(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::getDimuonEfficiency&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MESSAGE(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>dimuon<sp/>or<sp/>combination<sp/>of<sp/>single<sp/>and<sp/>dimuon<sp/>trigger<sp/>chain<sp/>name<sp/>given&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>single_eff_tmp<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dimuon_eff_tmp<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>overlap_term<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mu1_eff<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4db7c81b2ef7ca3f9c904d2963867a55" kindref="member">getMuonEfficiency</ref>(config,<sp/>muons.at(0),<sp/>muonsQuality.at(0)).first;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mu1_eff_err<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4db7c81b2ef7ca3f9c904d2963867a55" kindref="member">getMuonEfficiency</ref>(config,<sp/>muons.at(0),<sp/>muonsQuality.at(0)).second;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mu2_eff<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4db7c81b2ef7ca3f9c904d2963867a55" kindref="member">getMuonEfficiency</ref>(config,<sp/>muons.at(1),<sp/>muonsQuality.at(1)).first;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mu2_eff_err<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4db7c81b2ef7ca3f9c904d2963867a55" kindref="member">getMuonEfficiency</ref>(config,<sp/>muons.at(1),<sp/>muonsQuality.at(1)).second;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_mu18_tight_mu8_EFFS<sp/>=<sp/>(chain.find(</highlight><highlight class="stringliteral">&quot;mu18_tight_mu8_EFFS&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos);</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_2mu13<sp/>=<sp/>(chain.find(</highlight><highlight class="stringliteral">&quot;2mu13&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos);</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_mu18_tight_mu8_EFFS)<sp/>{</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/>dimuon_eff_tmp<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a53683915755eb3f59608eccc1bbf366e" kindref="member">getDimuonEfficiency</ref>(config,<sp/>muons,<sp/>muonsQuality,<sp/></highlight><highlight class="stringliteral">&quot;mu18_tight_mu8_EFFS&quot;</highlight><highlight class="normal">).first;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_2mu13)<sp/>{</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/>dimuon_eff_tmp<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a53683915755eb3f59608eccc1bbf366e" kindref="member">getDimuonEfficiency</ref>(config,<sp/>muons,<sp/>muonsQuality,<sp/></highlight><highlight class="stringliteral">&quot;2mu13&quot;</highlight><highlight class="normal">).first;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/>::Error(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::getSingleOrDimuonEfficiency&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MESSAGE(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>dimuon<sp/>chain<sp/>name<sp/>given:<sp/>%s&quot;</highlight><highlight class="normal">),<sp/>chain.c_str());</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(-1.,<sp/>-1.);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_mu1_above_threshold<sp/>=<sp/>((muons.at(0)).Pt()<sp/>&gt;=<sp/>threshold.first);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_mu2_above_threshold<sp/>=<sp/>((muons.at(1)).Pt()<sp/>&gt;=<sp/>threshold.first);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>above<sp/>threshold</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if<sp/>(is_mu1_above_threshold<sp/>and<sp/>is_mu2_above_threshold)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>if<sp/>(is_mu18_tight_mu8_EFFS)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>overlap_term<sp/>=<sp/>getMuonEfficiency(config,<sp/>muons.at(0),<sp/>muonsQuality.at(0),<sp/>&quot;mu18_tight&quot;).first*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getMuonEfficiency(config,<sp/>muons.at(1),<sp/>muonsQuality.at(1),<sp/>&quot;mu18_tight&quot;).first;<sp/>//<sp/>this<sp/>still<sp/>needs<sp/>to<sp/>be<sp/>checked!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>}<sp/>else<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>//<sp/>check<sp/>whether<sp/>mu13<sp/>or<sp/>mu24i_tight_or_mu36_tight<sp/>is<sp/>more<sp/>efficient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>double<sp/>higher_mu1<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>double<sp/>higher_mu2<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>double<sp/>eff<sp/>=<sp/>getMuonEfficiency(config,<sp/>muons.at(0),<sp/>muonsQuality.at(0),<sp/>&quot;mu13&quot;).first;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>higher_mu1<sp/>=<sp/>(mu1_eff<sp/>&gt;<sp/>eff)<sp/>?<sp/>mu1_eff<sp/>:<sp/>eff;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>eff<sp/>=<sp/>getMuonEfficiency(config,<sp/>muons.at(1),<sp/>muonsQuality.at(1),<sp/>&quot;mu13&quot;).first;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>higher_mu2<sp/>=<sp/>(mu2_eff<sp/>&gt;<sp/>eff)<sp/>?<sp/>mu2_eff<sp/>:<sp/>eff;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>overlap_term<sp/>=<sp/>higher_mu1*higher_mu2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="1038"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//}<sp/>else<sp/>if<sp/>(((not<sp/>is_mu1_above_threshold)<sp/>and<sp/>is_mu2_above_threshold)<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((not<sp/>is_mu2_above_threshold)<sp/>and<sp/>is_mu1_above_threshold))<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>if<sp/>(is_mu1_above_threshold){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>mu2_eff<sp/>=<sp/>0.;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>mu2_eff_err<sp/>=<sp/>0.;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>if<sp/>(is_mu2_above_threshold){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>mu1_eff<sp/>=<sp/>0.;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>mu1_eff_err<sp/>=<sp/>0.;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>if<sp/>(chain.find(&quot;mu18_tight_mu8_EFFS&quot;)<sp/>!=<sp/>std::string::npos<sp/>)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>overlap_term<sp/>=<sp/>getMuonEfficiency(config,<sp/>muons.at(0),<sp/>muonsQuality.at(0),<sp/>&quot;mu18_tight&quot;).first*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getMuonEfficiency(config,<sp/>muons.at(1),<sp/>muonsQuality.at(1),<sp/>&quot;mu18_tight&quot;).first;<sp/>//<sp/>this<sp/>still<sp/>needs<sp/>to<sp/>be<sp/>checked!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>}<sp/>else<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>overlap_term<sp/>=<sp/>single_eff_tmp*dimuon_eff_tmp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/>single_eff_tmp<sp/>=<sp/>mu1_eff<sp/>+<sp/>mu2_eff<sp/>-<sp/>mu1_eff*mu2_eff;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*if(config.isData){</highlight></codeline>
<codeline lineno="1059"><highlight class="comment"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;DATA:<sp/>single_eff<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>single_eff_tmp<sp/>&lt;&lt;<sp/>&quot;,<sp/>di_eff<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>dimuon_eff_tmp<sp/>&lt;&lt;<sp/>&quot;,<sp/>overlap_term<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>overlap_term<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1060"><highlight class="comment"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;DATA:<sp/>single_eff_mu1<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>mu1_eff<sp/>&lt;&lt;<sp/>&quot;<sp/>+-<sp/>&quot;<sp/>&lt;&lt;<sp/>getMuonEfficiency(config,<sp/>muons[0],<sp/>muonq[0]).second<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1061"><highlight class="comment"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;DATA:<sp/>single_eff_mu2<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>mu2_eff<sp/>&lt;&lt;<sp/>&quot;<sp/>+-<sp/>&quot;<sp/>&lt;&lt;<sp/>getMuonEfficiency(config,<sp/>muons[1],<sp/>muonq[1]).second<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1062"><highlight class="comment"><sp/><sp/>}<sp/>else{</highlight></codeline>
<codeline lineno="1063"><highlight class="comment"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;MC:<sp/>single_eff<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>single_eff_tmp<sp/>&lt;&lt;<sp/>&quot;,<sp/>di_eff<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>dimuon_eff_tmp<sp/>&lt;&lt;<sp/>&quot;,<sp/>overlap_term<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>overlap_term<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1064"><highlight class="comment"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;MC:<sp/>single_eff_mu1<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>mu1_eff<sp/>&lt;&lt;<sp/>&quot;<sp/>+-<sp/>&quot;<sp/>&lt;&lt;<sp/>getMuonEfficiency(config,<sp/>muons[0],<sp/>muonq[0]).second<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1065"><highlight class="comment"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;MC:<sp/>single_eff_mu2<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>mu2_eff<sp/>&lt;&lt;<sp/>&quot;<sp/>+-<sp/>&quot;<sp/>&lt;&lt;<sp/>getMuonEfficiency(config,<sp/>muons[1],<sp/>muonq[1]).second<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1066"><highlight class="comment"><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>thesingleordieff<sp/>=<sp/>single_eff_tmp<sp/>+<sp/>dimuon_eff_tmp<sp/>-<sp/>overlap_term;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>thesingleordieff_err<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/>DileptonTrigger<sp/>dimuon;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/>getDileptonLegs(chain,<sp/>dimuon);</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/>Leg1<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/>Leg2<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chain.find(</highlight><highlight class="stringliteral">&quot;mu18_tight_mu8_EFFS&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos<sp/>){</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;double,<sp/>double&gt;<sp/>mu1_leg1_pair,<sp/>mu2_leg1_pair,<sp/>mu1_leg2_pair,<sp/>mu2_leg2_pair;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((muons.at(Leg1)).Pt()<sp/>&gt;=<sp/>threshold_leg1)<sp/>{</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mu1_leg1_pair<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4db7c81b2ef7ca3f9c904d2963867a55" kindref="member">getMuonEfficiency</ref>(config,<sp/>muons.at(Leg1),<sp/>muonsQuality.at(Leg1),<sp/>dimuon.leg1);</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((muons.at(Leg2)).Pt()<sp/>&gt;=<sp/>threshold_leg1)<sp/>{</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mu2_leg1_pair<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4db7c81b2ef7ca3f9c904d2963867a55" kindref="member">getMuonEfficiency</ref>(config,<sp/>muons.at(Leg2),<sp/>muonsQuality.at(Leg2),<sp/>dimuon.leg1);</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((muons.at(Leg1)).Pt()<sp/>&gt;=<sp/>threshold_leg2){</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mu1_leg2_pair<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4db7c81b2ef7ca3f9c904d2963867a55" kindref="member">getMuonEfficiency</ref>(config,<sp/>muons.at(Leg1),<sp/>muonsQuality.at(Leg1),<sp/>dimuon.leg2);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((muons.at(Leg2)).Pt()<sp/>&gt;=<sp/>threshold_leg2){<sp/></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mu2_leg2_pair<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4db7c81b2ef7ca3f9c904d2963867a55" kindref="member">getMuonEfficiency</ref>(config,<sp/>muons.at(Leg2),<sp/>muonsQuality.at(Leg2),<sp/>dimuon.leg2);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>std::pair&lt;double,<sp/>double&gt;<sp/>mu1_leg1_pair<sp/>=<sp/>getMuonEfficiency(config,<sp/>muons.at(0),<sp/>muonsQuality.at(0),<sp/>&quot;mu18_tight&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>std::pair&lt;double,<sp/>double&gt;<sp/>mu2_leg1_pair<sp/>=<sp/>getMuonEfficiency(config,<sp/>muons.at(1),<sp/>muonsQuality.at(1),<sp/>&quot;mu18_tight&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>std::pair&lt;double,<sp/>double&gt;<sp/>mu1_leg2_pair<sp/>=<sp/>getMuonEfficiency(config,<sp/>muons.at(0),<sp/>muonsQuality.at(0),<sp/>&quot;mu8_EFFS&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>std::pair&lt;double,<sp/>double&gt;<sp/>mu2_leg2_pair<sp/>=<sp/>getMuonEfficiency(config,<sp/>muons.at(1),<sp/>muonsQuality.at(1),<sp/>&quot;mu8_EFFS&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/>thesingleordieff_err<sp/>=<sp/>getSingleOrDiError_asym(mu1_eff,<sp/>mu1_eff_err,<sp/></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mu2_eff,<sp/>mu2_eff_err,</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mu1_leg1_pair.first,<sp/>mu1_leg1_pair.second,</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mu2_leg1_pair.first,<sp/>mu2_leg1_pair.second,</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mu1_leg2_pair.first,<sp/>mu1_leg2_pair.second,</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mu2_leg2_pair.first,<sp/>mu2_leg2_pair.second,</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mu1_leg1_pair.first,<sp/>mu1_leg1_pair.second,<sp/></highlight><highlight class="comment">//<sp/>should<sp/>be<sp/>eff(bothlegs)<sp/>but<sp/>approximated<sp/>to<sp/>mu18_tight<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mu2_leg1_pair.first,<sp/>mu2_leg1_pair.second);<sp/></highlight><highlight class="comment">//<sp/>should<sp/>be<sp/>eff(bothlegs)<sp/>but<sp/>approximated<sp/>to<sp/>mu18_tight<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;double,<sp/>double&gt;<sp/>mu1_pair,<sp/>mu2_pair;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_mu1_above_threshold){</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mu1_pair<sp/><sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4db7c81b2ef7ca3f9c904d2963867a55" kindref="member">getMuonEfficiency</ref>(config,<sp/>muons.at(0),<sp/>muonsQuality.at(0),<sp/></highlight><highlight class="stringliteral">&quot;mu13&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(is_mu2_above_threshold){</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mu2_pair<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4db7c81b2ef7ca3f9c904d2963867a55" kindref="member">getMuonEfficiency</ref>(config,<sp/>muons.at(1),<sp/>muonsQuality.at(1),<sp/></highlight><highlight class="stringliteral">&quot;mu13&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/>thesingleordieff_err<sp/>=<sp/>getSingleOrDiError_sym(mu1_eff,<sp/>mu1_eff_err,<sp/></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mu2_eff,<sp/>mu2_eff_err,<sp/></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mu1_pair.first,<sp/>mu1_pair.second,</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mu2_pair.first,<sp/>mu2_pair.second,</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_mu1_above_threshold,<sp/>is_mu2_above_threshold);</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(thesingleordieff,<sp/>thesingleordieff_err);</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal">std::pair&lt;double,<sp/>double&gt;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><ref refid="d3/d83/classLeptonTriggerSF_1a737364e3725c6ef879b6e24622d0e6aa" kindref="member">LeptonTriggerSF::getSingleOrDielectronEfficiency</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/d63/structTrigMuonEff_1_1Configuration" kindref="compound">TrigMuonEff::Configuration</ref>&amp;<sp/>config,</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TLorentzVector&gt;&amp;<sp/>electrons,</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;ElectronQuality&gt;&amp;<sp/>electronsQuality,</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>chain)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1133"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(chain.find(</highlight><highlight class="stringliteral">&quot;e24vhi_medium1_or_e60_medium1&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos))<sp/>{</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/>::Fatal(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::getSingleOrDielectronEfficiency&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MESSAGE(</highlight><highlight class="stringliteral">&quot;Currently<sp/>dielectron<sp/>trigger<sp/>only<sp/>with<sp/>(e24vhi_medium1_or_e60_medium1)<sp/>trigger<sp/>is<sp/>supported.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Currently<sp/>dielectron<sp/>trigger<sp/>only<sp/>with<sp/>(e24vhi_medium1_or_e60_medium1)<sp/>trigger<sp/>is<sp/>supported&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;double,<sp/>double&gt;<sp/>threshold_singleLep<sp/>=<sp/>getThresholds(config);</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/>DileptonThresholds<sp/>thresholds;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/>getDileptonThresholds(config,<sp/>thresholds);</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>single_eff_tmp<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dielectron_eff_tmp<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>overlap_term<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>single<sp/>lepton<sp/>trigger<sp/>efficiencies<sp/>and<sp/>pt<sp/>plateau</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>set_data_el1<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a39ba2c399a909883bbc9ae72278ef002" kindref="member">getElectronQuality</ref>(config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ac7e00f10054006e03aa52073d85dd5ab" kindref="member">runNumber</ref>,<sp/>electronsQuality.at(0),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>kNoTrig);</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>set_mc_el1<sp/><sp/><sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a39ba2c399a909883bbc9ae72278ef002" kindref="member">getElectronQuality</ref>(config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ac7e00f10054006e03aa52073d85dd5ab" kindref="member">runNumber</ref>,<sp/>electronsQuality.at(0),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>kNoTrig);</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>set_data_el2<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a39ba2c399a909883bbc9ae72278ef002" kindref="member">getElectronQuality</ref>(config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ac7e00f10054006e03aa52073d85dd5ab" kindref="member">runNumber</ref>,<sp/>electronsQuality.at(1),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>kNoTrig);</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>set_mc_el2<sp/><sp/><sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a39ba2c399a909883bbc9ae72278ef002" kindref="member">getElectronQuality</ref>(config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ac7e00f10054006e03aa52073d85dd5ab" kindref="member">runNumber</ref>,<sp/>electronsQuality.at(1),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>kNoTrig);</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>el1_eff<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>el1_eff_err<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>el2_eff<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>el2_eff_err<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_el1_above_threshold<sp/>=<sp/>((electrons.at(0)).Pt()<sp/>&gt;=<sp/>threshold_singleLep.first);</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_el2_above_threshold<sp/>=<sp/>((electrons.at(1)).Pt()<sp/>&gt;=<sp/>threshold_singleLep.first);</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(config.isData){</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(is_el1_above_threshold){</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>el1_eff<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4f14b79116e9e10c812fcf0e6e4b7507" kindref="member">ElEff_Data</ref>(electrons.at(0),<sp/>set_mc_el1,<sp/>set_data_el1,<sp/>m_year,<sp/>config).first;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>el1_eff_err<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4f14b79116e9e10c812fcf0e6e4b7507" kindref="member">ElEff_Data</ref>(electrons.at(0),<sp/>set_mc_el1,<sp/>set_data_el1,<sp/>m_year,<sp/>config).second;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(is_el2_above_threshold){</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>el2_eff<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4f14b79116e9e10c812fcf0e6e4b7507" kindref="member">ElEff_Data</ref>(electrons.at(1),<sp/>set_mc_el2,<sp/>set_data_el2,<sp/>m_year,<sp/>config).first;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>el2_eff_err<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4f14b79116e9e10c812fcf0e6e4b7507" kindref="member">ElEff_Data</ref>(electrons.at(1),<sp/>set_mc_el2,<sp/>set_data_el2,<sp/>m_year,<sp/>config).second;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(is_el1_above_threshold){</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>el1_eff<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4c5063ec24c00b2be443c2db6803adbf" kindref="member">ElEff_MC</ref>(electrons.at(0),<sp/>set_mc_el1,<sp/>m_year,<sp/>config).first;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>el1_eff_err<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4c5063ec24c00b2be443c2db6803adbf" kindref="member">ElEff_MC</ref>(electrons.at(0),<sp/>set_mc_el1,<sp/>m_year,<sp/>config).second;</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(is_el2_above_threshold){</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>el2_eff<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4c5063ec24c00b2be443c2db6803adbf" kindref="member">ElEff_MC</ref>(electrons.at(1),<sp/>set_mc_el2,<sp/>m_year,<sp/>config).first;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>el2_eff_err<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4c5063ec24c00b2be443c2db6803adbf" kindref="member">ElEff_MC</ref>(electrons.at(1),<sp/>set_mc_el2,<sp/>m_year,<sp/>config).second;</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/>single_eff_tmp<sp/>=<sp/>el1_eff<sp/>+<sp/>el2_eff<sp/>-<sp/>el1_eff*el2_eff;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_2e12Tvh_loose1<sp/>=<sp/>(chain.find(</highlight><highlight class="stringliteral">&quot;2e12Tvh_loose1&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos);</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/>DileptonTriggerName<sp/>dilep_name<sp/>=<sp/>kNoTrig;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_2e12Tvh_loose1)<sp/>{</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/>dielectron_eff_tmp<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a57ba492d6dd7519cd740b7692c118673" kindref="member">getDielectronEfficiency</ref>(config,<sp/>electrons,<sp/>electronsQuality,<sp/></highlight><highlight class="stringliteral">&quot;2e12Tvh_loose1&quot;</highlight><highlight class="normal">).first;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/>dilep_name<sp/>=<sp/>EF_2e12Tvh_loose1;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/>::Error(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::getSingleOrDielectronEfficiency&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MESSAGE(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>dielectron<sp/>chain<sp/>name<sp/>given:<sp/>%s&quot;</highlight><highlight class="normal">),<sp/>chain.c_str());</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(-1.,<sp/>-1);</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>set_data_el1_low<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a39ba2c399a909883bbc9ae72278ef002" kindref="member">getElectronQuality</ref>(config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ac7e00f10054006e03aa52073d85dd5ab" kindref="member">runNumber</ref>,<sp/>electronsQuality.at(0),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>dilep_name);</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>set_mc_el1_low<sp/><sp/><sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a39ba2c399a909883bbc9ae72278ef002" kindref="member">getElectronQuality</ref>(config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ac7e00f10054006e03aa52073d85dd5ab" kindref="member">runNumber</ref>,<sp/>electronsQuality.at(0),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>dilep_name);</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>set_data_el2_low<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a39ba2c399a909883bbc9ae72278ef002" kindref="member">getElectronQuality</ref>(config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ac7e00f10054006e03aa52073d85dd5ab" kindref="member">runNumber</ref>,<sp/>electronsQuality.at(1),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>dilep_name);</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>set_mc_el2_low<sp/><sp/><sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a39ba2c399a909883bbc9ae72278ef002" kindref="member">getElectronQuality</ref>(config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ac7e00f10054006e03aa52073d85dd5ab" kindref="member">runNumber</ref>,<sp/>electronsQuality.at(1),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>dilep_name);</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if(thresholds.e12Tvh_loose1&gt;electrons.at(0).Pt()){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>if(config.isData){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>eff<sp/>=<sp/>ElEff_Data(electrons.at(0),<sp/>set_mc_el1_low,<sp/>set_data_el1_low,<sp/>m_year,<sp/>config).first;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>}<sp/>else{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>eff<sp/>=<sp/>ElEff_MC(electrons.at(0),<sp/>set_mc_el1_low,<sp/>m_year,<sp/>config).first;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//higher_el1<sp/>=<sp/>(el1_eff<sp/>&gt;<sp/>eff)<sp/>?<sp/>el1_eff<sp/>:<sp/>eff;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if(thresholds.e12Tvh_loose1&gt;electrons.at(1).Pt()){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>if(config.isData){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>eff<sp/>=<sp/>ElEff_Data(electrons.at(1),<sp/>set_mc_el2_low,<sp/>set_data_el2_low,<sp/>m_year,<sp/>config).first;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>}<sp/>else{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>eff<sp/>=<sp/>ElEff_MC(electrons.at(1),<sp/>set_mc_el2_low,<sp/>m_year,<sp/>config).first;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>above<sp/>threshold</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if<sp/>(is_el1_above_threshold<sp/>and<sp/>is_el2_above_threshold)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>//<sp/>check<sp/>whether<sp/>e12Tvh_loose1<sp/>or<sp/>e24vhi_medium1_or_e60_medium1<sp/>is<sp/>more<sp/>efficient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>double<sp/>higher_el1<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>double<sp/>higher_el2<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>double<sp/>eff<sp/>=<sp/>0.;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>if(thresholds.e12Tvh_loose1&gt;electrons.at(0).Pt()){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if(config.isData){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>eff<sp/>=<sp/>ElEff_Data(electrons.at(0),<sp/>set_mc_el1_low,<sp/>set_data_el1_low,<sp/>m_year,<sp/>config).first;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}<sp/>else{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>eff<sp/>=<sp/>ElEff_MC(electrons.at(0),<sp/>set_mc_el1_low,<sp/>m_year,<sp/>config).first;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>higher_el1<sp/>=<sp/>(el1_eff<sp/>&gt;<sp/>eff)<sp/>?<sp/>el1_eff<sp/>:<sp/>eff;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>if(thresholds.e12Tvh_loose1&gt;electrons.at(1).Pt()){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if(config.isData){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>eff<sp/>=<sp/>ElEff_Data(electrons.at(1),<sp/>set_mc_el2_low,<sp/>set_data_el2_low,<sp/>m_year,<sp/>config).first;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}<sp/>else{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>eff<sp/>=<sp/>ElEff_MC(electrons.at(1),<sp/>set_mc_el2_low,<sp/>m_year,<sp/>config).first;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>higher_el2<sp/>=<sp/>(el2_eff<sp/>&gt;<sp/>eff)<sp/>?<sp/>el2_eff<sp/>:<sp/>eff;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>overlap_term<sp/>=<sp/>higher_el1*higher_el2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/></highlight></codeline>
<codeline lineno="1242"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//}<sp/>else<sp/>if<sp/>(((not<sp/>is_el1_above_threshold)<sp/>and<sp/>is_el2_above_threshold)<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((not<sp/>is_el2_above_threshold)<sp/>and<sp/>is_el1_above_threshold))<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>if<sp/>(is_el1_above_threshold){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>el2_eff<sp/>=<sp/>0.;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>el2_eff_err<sp/>=<sp/>0.;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>if<sp/>(is_el2_above_threshold){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>el1_eff<sp/>=<sp/>0.;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>el1_eff_err<sp/>=<sp/>0.;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>overlap_term<sp/>=<sp/>single_eff_tmp*dielectron_eff_tmp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/>overlap_term<sp/>=<sp/>single_eff_tmp*dielectron_eff_tmp;</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>thesingleordieff<sp/>=<sp/>single_eff_tmp<sp/>+<sp/>dielectron_eff_tmp<sp/>-<sp/>overlap_term;</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>thesingleordieff_err<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/>std::pair&lt;double,<sp/>double&gt;<sp/>el1_pair<sp/>=<sp/>std::make_pair(0.,<sp/>0.);</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/>std::pair&lt;double,<sp/>double&gt;<sp/>el2_pair<sp/>=<sp/>std::make_pair(0.,<sp/>0.);</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(config.isData){</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(thresholds.e12Tvh_loose1&lt;electrons.at(0).Pt())</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>el1_pair<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4f14b79116e9e10c812fcf0e6e4b7507" kindref="member">ElEff_Data</ref>(electrons.at(0),<sp/>set_mc_el1_low,<sp/>set_data_el1_low,<sp/>m_year,<sp/>config);</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(thresholds.e12Tvh_loose1&lt;electrons.at(1).Pt())</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>el2_pair<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4f14b79116e9e10c812fcf0e6e4b7507" kindref="member">ElEff_Data</ref>(electrons.at(1),<sp/>set_mc_el2_low,<sp/>set_data_el2_low,<sp/>m_year,<sp/>config);</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(thresholds.e12Tvh_loose1&lt;electrons.at(0).Pt())</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>el1_pair<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4c5063ec24c00b2be443c2db6803adbf" kindref="member">ElEff_MC</ref>(electrons.at(0),<sp/>set_mc_el1_low,<sp/>m_year,<sp/>config);</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(thresholds.e12Tvh_loose1&lt;electrons.at(1).Pt())</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>el2_pair<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a4c5063ec24c00b2be443c2db6803adbf" kindref="member">ElEff_MC</ref>(electrons.at(1),<sp/>set_mc_el2_low,<sp/>m_year,<sp/>config);</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/>thesingleordieff_err<sp/>=<sp/>getSingleOrDiError_sym(el1_eff,<sp/>el1_eff_err,<sp/></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>el2_eff,<sp/>el2_eff_err,<sp/></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>el1_pair.first,<sp/>el1_pair.second,</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>el2_pair.first,<sp/>el2_pair.second,</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_el1_above_threshold,<sp/>is_el2_above_threshold);</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(thesingleordieff,<sp/>thesingleordieff_err);</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal">std::pair&lt;double,<sp/>double&gt;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><ref refid="d3/d83/classLeptonTriggerSF_1a591474966aaad85f02fe2b8f31cde6f6" kindref="member">LeptonTriggerSF::getElectronSF</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector&amp;<sp/>electron,</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>combination,</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>year<sp/>:<sp/>not<sp/>needed<sp/>for<sp/>ElectronEfficiencyCorrection<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/d63/structTrigMuonEff_1_1Configuration" kindref="compound">TrigMuonEff::Configuration</ref>&amp;<sp/>config)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1288"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eta<sp/>=<sp/>electron.Eta();</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pt<sp/>=<sp/>electron.Pt();</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1af8d56232d671c3b42a0f6e954eaa4794" kindref="member">useGeV</ref>)<sp/>pt<sp/>*=<sp/>GeVtoMeV;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>m_electronSF[combination])<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;getElectronSF:<sp/>m_electronSF[..]<sp/>is<sp/>not<sp/>initialised<sp/>for<sp/>the<sp/>given<sp/>combination.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/d94/classRoot_1_1TResult" kindref="compound">Root::TResult</ref>&amp;<sp/>rc<sp/>=<sp/>m_electronSF[combination]-&gt;calculate(config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a3e46f1b418fa41623f27a12a9019f235" kindref="member">isAFII</ref><sp/>?<sp/>PATCore::ParticleDataType::Fast<sp/>:<sp/>PATCore::ParticleDataType::Full,<sp/>config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ac7e00f10054006e03aa52073d85dd5ab" kindref="member">runNumber</ref>,<sp/>eta,<sp/>pt);</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::pair&lt;double,<sp/>double&gt;(rc.<ref refid="d1/d94/classRoot_1_1TResult_1a2f7e1cb2f25af6921f3be7affa0f48ef" kindref="member">getScaleFactor</ref>(),<sp/>rc.<ref refid="d1/d94/classRoot_1_1TResult_1a763a807d40e3583674810ca12514c298" kindref="member">getTotalUncertainty</ref>());</highlight></codeline>
<codeline lineno="1297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal">std::pair&lt;double,<sp/>double&gt;</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><ref refid="d3/d83/classLeptonTriggerSF_1a4f14b79116e9e10c812fcf0e6e4b7507" kindref="member">LeptonTriggerSF::ElEff_Data</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector&amp;<sp/>electron,</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>combinationSF,</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>combinationEfficiency,</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>year,</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/d63/structTrigMuonEff_1_1Configuration" kindref="compound">TrigMuonEff::Configuration</ref>&amp;<sp/>config)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1307"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/>std::pair&lt;double,<sp/>double&gt;<sp/>sf<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a591474966aaad85f02fe2b8f31cde6f6" kindref="member">getElectronSF</ref>(electron,<sp/>combinationSF,<sp/>year,<sp/>config);</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/>std::pair&lt;double,<sp/>double&gt;<sp/>mcEfficiency<sp/>=<sp/><ref refid="d3/d83/classLeptonTriggerSF_1a591474966aaad85f02fe2b8f31cde6f6" kindref="member">getElectronSF</ref>(electron,<sp/>combinationEfficiency,<sp/>year,<sp/>config);</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>efficiency<sp/>=<sp/>sf.first<sp/>*<sp/>mcEfficiency.first;</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>par1<sp/>=<sp/>sf.second<sp/>/<sp/>sf.first;</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>par2<sp/>=<sp/>mcEfficiency.second<sp/>/<sp/>mcEfficiency.first;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="da/d8a/namespaceAmg_1aa8598c3ab8774ed5c55a37e729a04dd7" kindref="member">error</ref><sp/>=<sp/>efficiency<sp/>*<sp/>sqrt(par1*par1<sp/>+<sp/>par2*par2);</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(efficiency,<sp/>error);</highlight></codeline>
<codeline lineno="1317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><ref refid="d3/d83/classLeptonTriggerSF_1a60cad8405994adb1f322ff71889804a8" kindref="member">LeptonTriggerSF::createMcReplicaMuon</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>trigger)</highlight></codeline>
<codeline lineno="1324"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>filter<sp/>=<sp/>not<sp/>trigger.empty();</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/>m_efficiencyMapReplicaArray.clear();</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>n<sp/>replica<sp/>maps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>n;<sp/>ii++)<sp/>{</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/>EfficiencyMap<sp/>map;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(EfficiencyMap::const_iterator<sp/>cit<sp/>=<sp/>m_efficiencyMap.begin();</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cit<sp/>!=<sp/>m_efficiencyMap.end();</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cit++)<sp/>{</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name<sp/>=<sp/>cit-&gt;first;</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TH2*<sp/>th2<sp/>=<sp/>cit-&gt;second;</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filter<sp/>and<sp/>(name.find(trigger)<sp/>==<sp/>std::string::npos))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>th2)<sp/>{</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Fatal(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::createMcReplicaMuon&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MESSAGE(</highlight><highlight class="stringliteral">&quot;An<sp/>internal<sp/>coding<sp/>error<sp/>detected&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;An<sp/>internal<sp/>coding<sp/>error<sp/>detected&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TH2*<sp/>hcopy<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">TH2*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(th2-&gt;Clone());</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>hcopy)<sp/>{</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Fatal(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::createMcReplicaMuon&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MESSAGE(</highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>make<sp/>copy<sp/>of<sp/>histogram<sp/>\&quot;%s\&quot;&quot;</highlight><highlight class="normal">),<sp/>name.c_str());</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error((</highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>make<sp/>copy<sp/>of<sp/>histogram<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>name<sp/>).c_str());</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::pair&lt;EfficiencyMap::iterator,<sp/>bool&gt;<sp/>rc<sp/>=<sp/>map.insert(EfficiencyPair(name,<sp/>hcopy));</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>rc.second)<sp/>{</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Fatal(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::createMcReplicaMuon&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MESSAGE(</highlight><highlight class="stringliteral">&quot;histogram<sp/>\&quot;%s\&quot;<sp/>duplicated&quot;</highlight><highlight class="normal">),<sp/>name.c_str());</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error((</highlight><highlight class="stringliteral">&quot;histogram<sp/>duplication:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>name).c_str());</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/>m_efficiencyMapReplicaArray.push_back(map);</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>n<sp/>replica<sp/>maps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(EfficiencyMap::const_iterator<sp/>cit<sp/>=<sp/>m_efficiencyMap.begin();</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cit<sp/>!=<sp/>m_efficiencyMap.end();</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cit++)<sp/>{</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name<sp/>=<sp/>cit-&gt;first;</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/>TH2*<sp/>th2<sp/>=<sp/>cit-&gt;second;</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filter<sp/>and<sp/>(name.find(trigger)<sp/>==<sp/>std::string::npos))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>th2)<sp/>{</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::Fatal(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::createMcReplicaMuon&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MESSAGE(</highlight><highlight class="stringliteral">&quot;An<sp/>internal<sp/>coding<sp/>error<sp/>detected&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;An<sp/>internal<sp/>coding<sp/>error<sp/>detected&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>1;<sp/>ii<sp/>&lt;=<sp/>th2-&gt;GetNbinsX();<sp/>ii++)<sp/>{</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jj<sp/>=<sp/>1;<sp/>jj<sp/>&lt;=<sp/>th2-&gt;GetNbinsY();<sp/>jj++)<sp/>{</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>efficiency<sp/>=<sp/>th2-&gt;GetBinContent(ii,<sp/>jj);</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>statisticalError<sp/>=<sp/>th2-&gt;GetBinError(ii,<sp/>jj);</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRandom<sp/>random<sp/>=<sp/>TRandom();</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kk<sp/>=<sp/>0;<sp/>kk<sp/>&lt;<sp/>n;<sp/>kk++)<sp/>{</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EfficiencyMap<sp/>&amp;map<sp/>=<sp/>m_efficiencyMapReplicaArray.at(kk);</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EfficiencyMap::const_iterator<sp/>itr<sp/>=<sp/>map.find(name);</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itr<sp/>==<sp/>map.end())<sp/>{</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Fatal(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::createMcReplicaMuon&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MESSAGE(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>what<sp/>you<sp/>are<sp/>looking<sp/>for<sp/>in<sp/>the<sp/>efficiency<sp/>map.<sp/>\&quot;%s\&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>either<sp/>a<sp/>bug<sp/>or<sp/>you<sp/>are<sp/>not<sp/>using<sp/>the<sp/>right<sp/>.root<sp/>file,<sp/>please<sp/>double<sp/>check.&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name.c_str());</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Internal<sp/>coding<sp/>error<sp/>detected&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>random.Gaus(efficiency,<sp/>statisticalError);</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(itr-&gt;second)-&gt;SetBinContent(ii,<sp/>jj,<sp/>v);</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal">std::pair&lt;double,<sp/>double&gt;</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><ref refid="d3/d83/classLeptonTriggerSF_1af041bb05449c128941afb99d8a4aa67b" kindref="member">LeptonTriggerSF::getSfReplicaMuon</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>runNumber,</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useGeV,</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TLorentzVector&gt;&amp;<sp/>muons,</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;MuonQuality&gt;&amp;<sp/>muonsQuality,</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d63/structTrigMuonEff_1_1Configuration" kindref="compound">TrigMuonEff::Configuration</ref>*<sp/>config)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1412"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/>std::vector&lt;TLorentzVector&gt;<sp/>electrons;</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/>std::vector&lt;ElectronQuality&gt;<sp/>electronsQuality;</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><ref refid="d1/d63/structTrigMuonEff_1_1Configuration" kindref="compound">TrigMuonEff::Configuration</ref><sp/>configuration;</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ac7e00f10054006e03aa52073d85dd5ab" kindref="member">runNumber</ref><sp/>=<sp/>runNumber;</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1af8d56232d671c3b42a0f6e954eaa4794" kindref="member">useGeV</ref><sp/>=<sp/>useGeV;</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a3dbf4aa4afa096186a49751cae36ad47" kindref="member">setByUser</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a7b8f7c43f39973d6b60e46fedf04b27f" kindref="member">replicaIndex</ref><sp/>=<sp/>index;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a3e46f1b418fa41623f27a12a9019f235" kindref="member">isAFII</ref><sp/>=<sp/>m_IsAFII;</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config)<sp/>{</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a3dbf4aa4afa096186a49751cae36ad47" kindref="member">setByUser</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ab3e81f06dc7f278203a9086b14177c5d" kindref="member">trigger</ref><sp/>=<sp/>config-&gt;<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ab3e81f06dc7f278203a9086b14177c5d" kindref="member">trigger</ref>;</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1aa1ea2b3f4ca3d304445f903df40e1142" kindref="member">period</ref><sp/>=<sp/>config-&gt;<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1aa1ea2b3f4ca3d304445f903df40e1142" kindref="member">period</ref>;</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/>configuration.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a9096cd623777c445a83680ec81680f46" kindref="member">binning</ref><sp/>=<sp/>config-&gt;<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a9096cd623777c445a83680ec81680f46" kindref="member">binning</ref>;</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d3/d83/classLeptonTriggerSF_1a42df88bb6fe134a528fcf3aa04461611" kindref="member">GetTriggerSF</ref>(configuration,<sp/>muons,<sp/>muonsQuality,<sp/>electrons,<sp/>electronsQuality);</highlight></codeline>
<codeline lineno="1431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight><highlight class="comment">/*=================================================================*<sp/></highlight></codeline>
<codeline lineno="1436"><highlight class="comment"><sp/>*<sp/>private<sp/>methods</highlight></codeline>
<codeline lineno="1437"><highlight class="comment"><sp/>*=================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal">LeptonTriggerSF::prepareForElectronSF(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>directory)</highlight></codeline>
<codeline lineno="1440"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/>std::string<sp/>path<sp/>=<sp/>directory;</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path.empty())<sp/>{</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tmparea<sp/>=<sp/>gSystem-&gt;Getenv(</highlight><highlight class="stringliteral">&quot;TestArea&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmparea)<sp/>{</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>=<sp/>std::string(tmparea)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/InstallArea/XML/ElectronEfficiencyCorrection/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::Info(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::prepareForElectronSF&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Using<sp/>default<sp/>directory:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>path.c_str());</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::Warning(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::prepareForElectronSF&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;You<sp/>are<sp/>not<sp/>running<sp/>in<sp/>Athena<sp/>but<sp/>also<sp/>did<sp/>not<sp/>set<sp/>a<sp/>directory<sp/>to<sp/>the<sp/>root<sp/>file.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/>::Info(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::prepareForElectronSF&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Using<sp/>user<sp/>defined<sp/>directory:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>path.c_str());</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/>m_fileNameMap.clear();</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>2011<sp/>Trigger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_electronFileVersion==</highlight><highlight class="stringliteral">&quot;rel17p0.v02&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>old<sp/>v01<sp/>version<sp/>since<sp/>we<sp/>don&apos;t<sp/>have<sp/>for<sp/>now<sp/>a<sp/>v02<sp/>version<sp/>!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fileNameMap[27]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiencySF.e20_medium.Loose.2011.7TeV.rel17p0.v01.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fileNameMap[20]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiency.e20_medium.Loose.2011.7TeV.rel17p0.v01.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fileNameMap[8]<sp/><sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiencySF.e20_medium.Medium.2011.7TeV.rel17p0.v01.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fileNameMap[9]<sp/><sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiency.e20_medium.Medium.2011.7TeV.rel17p0.v01.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fileNameMap[10]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiencySF.e20_medium.Tight.2011.7TeV.rel17p0.v01.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fileNameMap[11]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiency.e20_medium.Tight.2011.7TeV.rel17p0.v01.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fileNameMap[28]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiencySF.e22_medium1.Loose.2011.7TeV.rel17p0.v01.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fileNameMap[21]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiency.e22_medium1.Loose.2011.7TeV.rel17p0.v01.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fileNameMap[12]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiencySF.e22_medium.Medium.2011.7TeV.rel17p0.v01.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fileNameMap[13]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiency.e22_medium.Medium.2011.7TeV.rel17p0.v01.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fileNameMap[14]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiencySF.e22_medium.Tight.2011.7TeV.rel17p0.v01.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fileNameMap[15]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiency.e22_medium.Tight.2011.7TeV.rel17p0.v01.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fileNameMap[29]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiencySF.e22vh_medium1.Loose.2011.7TeV.rel17p0.v01.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fileNameMap[22]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiency.e22vh_medium1.Loose.2011.7TeV.rel17p0.v01.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fileNameMap[16]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiencySF.e22vh_medium1.Medium.2011.7TeV.rel17p0.v01.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fileNameMap[17]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiency.e22vh_medium1.Medium.2011.7TeV.rel17p0.v01.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fileNameMap[18]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiencySF.e22vh_medium1.Tight.2011.7TeV.rel17p0.v01.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fileNameMap[19]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiency.e22vh_medium1.Tight.2011.7TeV.rel17p0.v01.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fileNameMap[27]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiencySF.e20_medium.Loose.2011.7TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fileNameMap[20]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiency.e20_medium.Loose.2011.7TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fileNameMap[8]<sp/><sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiencySF.e20_medium.Medium.2011.7TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fileNameMap[9]<sp/><sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiency.e20_medium.Medium.2011.7TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fileNameMap[10]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiencySF.e20_medium.Tight.2011.7TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fileNameMap[11]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiency.e20_medium.Tight.2011.7TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fileNameMap[28]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiencySF.e22_medium1.Loose.2011.7TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fileNameMap[21]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiency.e22_medium1.Loose.2011.7TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fileNameMap[12]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiencySF.e22_medium.Medium.2011.7TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fileNameMap[13]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiency.e22_medium.Medium.2011.7TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fileNameMap[14]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiencySF.e22_medium.Tight.2011.7TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fileNameMap[15]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiency.e22_medium.Tight.2011.7TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fileNameMap[29]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiencySF.e22vh_medium1.Loose.2011.7TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fileNameMap[22]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiency.e22vh_medium1.Loose.2011.7TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fileNameMap[16]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiencySF.e22vh_medium1.Medium.2011.7TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fileNameMap[17]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiency.e22vh_medium1.Medium.2011.7TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fileNameMap[18]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiencySF.e22vh_medium1.Tight.2011.7TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fileNameMap[19]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiency.e22vh_medium1.Tight.2011.7TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"></highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>2012<sp/>Trigger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/>m_fileNameMap[31]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiencySF.e24vhi_medium1_e60_medium1.Loose.2012.8TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/>m_fileNameMap[32]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiency.e24vhi_medium1_e60_medium1.Loose.2012.8TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"></highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/>m_fileNameMap[33]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiencySF.e24vhi_medium1_e60_medium1.Medium.2012.8TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/>m_fileNameMap[34]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiency.e24vhi_medium1_e60_medium1.Medium.2012.8TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/>m_fileNameMap[35]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiencySF.e24vhi_medium1_e60_medium1.Tight.2012.8TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/>m_fileNameMap[36]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiency.e24vhi_medium1_e60_medium1.Tight.2012.8TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/>m_fileNameMap[37]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiencySF.e24vhi_medium1_e60_medium1.Multilepton.2012.8TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/>m_fileNameMap[38]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiency.e24vhi_medium1_e60_medium1.Multilepton.2012.8TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/>m_fileNameMap[39]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiencySF.e12Tvh_loose1.Loose.2012.8TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/>m_fileNameMap[40]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiency.e12Tvh_loose1.Loose.2012.8TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/>m_fileNameMap[41]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiencySF.e12Tvh_loose1.Medium.2012.8TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/>m_fileNameMap[42]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiency.e12Tvh_loose1.Medium.2012.8TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/>m_fileNameMap[43]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiencySF.e12Tvh_loose1.Tight.2012.8TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/>m_fileNameMap[44]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiency.e12Tvh_loose1.Tight.2012.8TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/>m_fileNameMap[45]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiencySF.e12Tvh_loose1.Multilepton.2012.8TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/>m_fileNameMap[46]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiency.e12Tvh_loose1.Multilepton.2012.8TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>new<sp/>egamma<sp/>likelihood<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>LLH<sp/>Loose</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/>m_fileNameMap[50]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiencySF.e24vhi_medium1_e60_medium1.LooseLLH.2012.8TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/>m_fileNameMap[51]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiency.e24vhi_medium1_e60_medium1.LooseLLH.2012.8TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/>m_fileNameMap[52]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiencySF.e12Tvh_loose1.LooseLLH.2012.8TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/>m_fileNameMap[53]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiency.e12Tvh_loose1.LooseLLH.2012.8TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>LLH<sp/>VeryTight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/>m_fileNameMap[54]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiencySF.e24vhi_medium1_e60_medium1.VeryTightLLH.2012.8TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/>m_fileNameMap[55]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiency.e24vhi_medium1_e60_medium1.VeryTightLLH.2012.8TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/>m_fileNameMap[56]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiencySF.e12Tvh_loose1.VeryTightLLH.2012.8TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/>m_fileNameMap[57]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiency.e12Tvh_loose1.VeryTightLLH.2012.8TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>medium1<sp/>e12Tvh_medium1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/>m_fileNameMap[70]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiencySF.e12Tvh_medium1.Loose.2012.8TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/>m_fileNameMap[71]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiency.e12Tvh_medium1.Loose.2012.8TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/>m_fileNameMap[72]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiencySF.e12Tvh_medium1.Medium.2012.8TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/>m_fileNameMap[73]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiency.e12Tvh_medium1.Medium.2012.8TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"></highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/>m_fileNameMap[74]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiencySF.e12Tvh_medium1.Tight.2012.8TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/>m_fileNameMap[75]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiency.e12Tvh_medium1.Tight.2012.8TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/>m_fileNameMap[76]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiencySF.e12Tvh_medium1.Multilepton.2012.8TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/>m_fileNameMap[77]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiency.e12Tvh_medium1.Multilepton.2012.8TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"></highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>LLH<sp/>Loose<sp/>e12Tvh_medium1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/>m_fileNameMap[78]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiencySF.e12Tvh_medium1.LooseLLH.2012.8TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/>m_fileNameMap[79]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiency.e12Tvh_medium1.LooseLLH.2012.8TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>LLH<sp/>VeryTight<sp/>e12Tvh_medium1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/>m_fileNameMap[80]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiencySF.e12Tvh_medium1.VeryTightLLH.2012.8TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/>m_fileNameMap[81]<sp/>=<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;efficiency.e12Tvh_medium1.VeryTightLLH.2012.8TeV.&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_electronFileVersion<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"></highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/>m_electronSF.clear();</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="normal">std::string</highlight></codeline>
<codeline lineno="1585"><highlight class="normal">LeptonTriggerSF::getPathName(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>directory,</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fileName)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1587"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>construct<sp/>a<sp/>path<sp/>to<sp/>a<sp/>root<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/>std::string<sp/>path<sp/>=<sp/>directory;</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path.empty())<sp/>{<sp/></highlight><highlight class="comment">//<sp/>default<sp/>to<sp/>InstallArea/share<sp/>for<sp/>the<sp/>files<sp/>if<sp/>running<sp/>in<sp/>Athena</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tmparea<sp/>=<sp/>gSystem-&gt;Getenv(</highlight><highlight class="stringliteral">&quot;TestArea&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmparea)<sp/>{</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>=<sp/>std::string(tmparea)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/InstallArea/share/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::Info(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::getPathName&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Using<sp/>default<sp/>directory:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>path.c_str());</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"></highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::Warning(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::getPathName&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;You<sp/>are<sp/>not<sp/>running<sp/>in<sp/>Athena<sp/>but<sp/>also<sp/>did<sp/>not<sp/>set<sp/>a<sp/>directory<sp/>to<sp/>the<sp/>root<sp/>file.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/>::Info(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::getPathName&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Using<sp/>user<sp/>defined<sp/>directory:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>path.c_str());</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/>std::string<sp/>name<sp/>=<sp/>fileName;</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fileName.empty())<sp/>{</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_year<sp/>==<sp/>2011)<sp/>{</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;muon_trigger_sf_mc11c.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::Info(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::getPathName&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Using<sp/>default<sp/>file<sp/>for<sp/>2011:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>name.c_str());</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"></highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_year<sp/>==<sp/>2012)<sp/>{</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;muon_trigger_sf_2012_AtoL.p1328.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::Info(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::getPathName&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Using<sp/>default<sp/>file<sp/>for<sp/>2012:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>name.c_str());</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::Error(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::getPathName&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;unknown<sp/>year<sp/>specified.<sp/>cannot<sp/>define<sp/>default<sp/>file.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>year:<sp/>cannot<sp/>define<sp/>default<sp/>file.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/>::Info(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::getPathName&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Using<sp/>user<sp/>defined<sp/>file<sp/>name:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>name.c_str());</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>name;</highlight></codeline>
<codeline lineno="1629"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1632"><highlight class="normal">LeptonTriggerSF::setStorage(Storage&amp;<sp/>storage)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1633"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Constants<sp/>used<sp/>in<sp/>the<sp/>file<sp/>reading:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>type_[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;data&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mc&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>type(type_,<sp/>type_<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(type_)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(std::string));</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>region_[]<sp/><sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;barrel&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;endcap&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>region(region_,<sp/>region_<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(region_)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(std::string));</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"></highlight></codeline>
<codeline lineno="1643"><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>quality2011,<sp/>quality2012;</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((not<sp/>m_qualities.empty())<sp/>and<sp/>((m_qualities.size()<sp/>!=<sp/>2)<sp/>and<sp/>(m_qualities.size()<sp/>!=<sp/>1)))<sp/>{</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/>::Fatal(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::setStorage&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MESSAGE(</highlight><highlight class="stringliteral">&quot;If<sp/>giving<sp/>a<sp/>muon<sp/>qualities<sp/>vector,<sp/>it<sp/>needs<sp/>to<sp/>be<sp/>of<sp/>size<sp/>2.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Muon<sp/>qualities<sp/>vector<sp/>has<sp/>wrong<sp/>size<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((m_qualities.size()<sp/>==<sp/>2)<sp/>or<sp/>(m_qualities.size()<sp/>==<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/>quality2011<sp/>=<sp/>m_qualities;</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/>quality2012<sp/>=<sp/>m_qualities;</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"></highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>multiple<sp/>instances<sp/>of<sp/>the<sp/>tool<sp/>are<sp/>initialized<sp/>within<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>process,<sp/>we<sp/>have<sp/>to<sp/>be<sp/>careful<sp/>not<sp/>to<sp/>fill<sp/>these<sp/>vectors<sp/>multiple</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>times:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/>quality2011.clear();</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/>quality2012.clear();</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/>quality2011.push_back(</highlight><highlight class="stringliteral">&quot;loose&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/>quality2011.push_back(</highlight><highlight class="stringliteral">&quot;combined&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/>quality2012.push_back(</highlight><highlight class="stringliteral">&quot;loose&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/>quality2012.push_back(</highlight><highlight class="stringliteral">&quot;combined&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"></highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>2011</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>bins2011_[]<sp/><sp/><sp/><sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;fine&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;coarse&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>bins2011(bins2011_,<sp/>bins2011_<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(bins2011_)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(std::string));</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"></highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>trigger2011_[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;mu18_MG&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu18_MG_medium&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu18_MG_medium&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;mu18_MG_medium&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu18_MG_medium&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu18_MG_medium&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu18_MG_medium&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu18_MG_medium&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>trigger2011(trigger2011_,<sp/>trigger2011_<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(trigger2011_)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(std::string));</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"></highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>period2011_[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;BtoI&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;JtoMwoL3toL4&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;L3toL4&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;J&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;K&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;JtoK&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;JtoM&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;LtoM&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>period2011(period2011_,<sp/>period2011_<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(period2011_)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(std::string));</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>2012</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>bins2012_[]<sp/><sp/><sp/><sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;fine&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;coarse&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>bins2012(bins2012_,<sp/>bins2012_<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(bins2012_)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(std::string));</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"></highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>trigger2012_[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;mu24i_tight_or_EF_mu36_tight&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu24i_tight_or_EF_mu36_tight&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu24i_tight_or_EF_mu36_tight&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu24i_tight_or_EF_mu36_tight&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu24i_tight_or_EF_mu36_tight&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;mu24i_tight&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu24i_tight&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu24i_tight&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu24i_tight&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu24i_tight&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;mu18_tight&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu18_tight&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu18_tight&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu18_tight&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu18_tight&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;mu36_tight&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu36_tight&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu36_tight&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu36_tight&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu36_tight&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;mu8_EFFS&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu8_EFFS&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu8_EFFS&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu8_EFFS&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu8_EFFS&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;mu8&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu8&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu8&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu8&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu8&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;mu13&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu13&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu13&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu13&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mu13&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>trigger2012(trigger2012_,<sp/>trigger2012_<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(trigger2012_)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(std::string));</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>period2012_[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CtoE&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;G&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HtoL&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CtoE&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;G&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HtoL&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CtoE&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;G&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HtoL&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CtoE&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;G&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HtoL&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CtoE&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;G&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HtoL&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CtoE&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;G&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HtoL&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CtoE&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;G&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HtoL&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>period2012(period2012_,<sp/>period2012_<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(period2012_)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(std::string));</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"></highlight></codeline>
<codeline lineno="1702"><highlight class="normal"></highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/>storage.type<sp/>=<sp/>&amp;type;</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/>storage.region<sp/>=<sp/>&amp;region;</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(m_year)<sp/>{</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2011:</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>storage.trigger<sp/>=<sp/>&amp;trigger2011;</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>storage.period<sp/>=<sp/>&amp;period2011;</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>storage.quality<sp/>=<sp/>&amp;quality2011;</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>storage.bins<sp/>=<sp/>&amp;bins2011;</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"></highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2012:</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>storage.trigger<sp/>=<sp/>&amp;trigger2012;</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>storage.period<sp/>=<sp/>&amp;period2012;</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>storage.quality<sp/>=<sp/>&amp;quality2012;</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>storage.bins<sp/>=<sp/>&amp;bins2012;</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"></highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::Fatal(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::setStorage&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MESSAGE(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>year:<sp/>%d&quot;</highlight><highlight class="normal">),<sp/>m_year);</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;unknown<sp/>year&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(storage.period-&gt;size()<sp/>!=<sp/>storage.trigger-&gt;size())<sp/>{</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/>::Fatal(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::setStorage&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MESSAGE(</highlight><highlight class="stringliteral">&quot;size<sp/>of<sp/>period<sp/>and<sp/>trigger<sp/>is<sp/>different:<sp/>check<sp/>configuration&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;size<sp/>of<sp/>period<sp/>and<sp/>trigger<sp/>is<sp/>different:<sp/>check<sp/>configuration&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"></highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/>::Info(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::setStorage&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Year<sp/>=<sp/>%d,<sp/>nperiods<sp/>=<sp/>%u&quot;</highlight><highlight class="normal">,<sp/>m_year,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)storage.period-&gt;size());</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/>::Info(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::setStorage&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;nquality<sp/>=<sp/>%u,<sp/>nbins<sp/>=<sp/>%u,<sp/>ntype<sp/>=<sp/>%u,<sp/>nregion<sp/>=<sp/>%u&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)storage.quality-&gt;size(),<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)storage.bins-&gt;size(),<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)storage.type-&gt;size(),<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)storage.region-&gt;size());</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"></highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1740"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="normal"></highlight></codeline>
<codeline lineno="1743"><highlight class="normal"></highlight></codeline>
<codeline lineno="1744"><highlight class="normal">TDirectory*</highlight></codeline>
<codeline lineno="1745"><highlight class="normal">LeptonTriggerSF::getTemporaryDirectory(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1746"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>unique<sp/>directory<sp/>in<sp/>memory<sp/>to<sp/>hold<sp/>the<sp/>histograms:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/>gROOT-&gt;cd();</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/>TDirectory*<sp/>tempDir<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(not<sp/>tempDir)<sp/>{</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First,<sp/>let&apos;s<sp/>find<sp/>a<sp/>directory<sp/>name<sp/>that<sp/>doesn&apos;t<sp/>exist<sp/>yet:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>dirname;</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/>dirname<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;LeptonTriggerSFTempDir_%i&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>counter;</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gROOT-&gt;GetDirectory((dirname.str()).c_str()))<sp/>{</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++counter;</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Let&apos;s<sp/>try<sp/>to<sp/>make<sp/>this<sp/>directory:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/>tempDir<sp/>=<sp/>gROOT-&gt;mkdir((dirname.str()).c_str());</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>tempDir)<sp/>{</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::Fatal(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::getTemporaryDirectory&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MESSAGE(</highlight><highlight class="stringliteral">&quot;Temporary<sp/>directory<sp/>could<sp/>not<sp/>be<sp/>created&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Temporary<sp/>directory<sp/>could<sp/>not<sp/>be<sp/>created&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tempDir;</highlight></codeline>
<codeline lineno="1771"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"></highlight></codeline>
<codeline lineno="1773"><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal">LeptonTriggerSF::initialise(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>directory,</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fileName,</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>qualities,</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>directoryElectron)</highlight></codeline>
<codeline lineno="1780"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/>prepareForElectronSF(directoryElectron);</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"></highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/>m_max_period<sp/>=<sp/>TrigMuonEff::period_undefined;</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"></highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/>m_qualities<sp/>=<sp/>qualities;</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"></highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Remember<sp/>which<sp/>TDirectory<sp/>the<sp/>system<sp/>is<sp/>in<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>method:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/>TDirectory*<sp/>origDir<sp/>=<sp/>gDirectory;</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"></highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>parameters<sp/>for<sp/>reading<sp/>a<sp/>root<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/>Storage<sp/>storage;</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/>setStorage(storage);</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Open<sp/>the<sp/>efficiency<sp/>file:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>filePath<sp/>=<sp/>getPathName(directory,<sp/>fileName);</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/>TFile*<sp/>file<sp/>=<sp/>TFile::Open(filePath.c_str());</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"></highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>file)<sp/>{</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/>::Fatal(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::initialise&quot;</highlight><highlight class="normal">,<sp/>ERROR_MESSAGE(</highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>open<sp/>file<sp/>\&quot;%s\&quot;&quot;</highlight><highlight class="normal">),<sp/>filePath.c_str());</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error((</highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>open<sp/>file<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/>filePath<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\&quot;.<sp/>input<sp/>root<sp/>files<sp/>are<sp/>available<sp/>at<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;https://twiki.cern.ch/twiki/bin/viewauth/Atlas/TrigMuonEfficiency<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;or<sp/>in<sp/>/afs/cern.ch/user/t/takashi/public/SF2012/&quot;</highlight><highlight class="normal">).c_str());</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"></highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/>::Info(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::initialise&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>\&quot;%s\&quot;<sp/>opened&quot;</highlight><highlight class="normal">,<sp/>file-&gt;GetName());</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"></highlight></codeline>
<codeline lineno="1807"><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>unique<sp/>directory<sp/>in<sp/>memory<sp/>to<sp/>hold<sp/>the<sp/>histograms:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/>TDirectory*<sp/>tempDir<sp/>=<sp/>getTemporaryDirectory();</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/>tempDir-&gt;cd();</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"></highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>in<sp/>the<sp/>histograms:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iqu<sp/>=<sp/>0;<sp/>iqu<sp/>&lt;<sp/>storage.quality-&gt;size();<sp/>++iqu)<sp/>{</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ibins<sp/>=<sp/>0;<sp/>ibins<sp/>&lt;<sp/>storage.bins-&gt;size();<sp/>++ibins)<sp/>{</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iperiod<sp/>=<sp/>0;<sp/>iperiod<sp/>&lt;<sp/>storage.period-&gt;size();<sp/>++iperiod)<sp/>{</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iregion<sp/>=<sp/>0;<sp/>iregion<sp/>&lt;<sp/>storage.region-&gt;size();<sp/>++iregion)<sp/>{</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>itype<sp/>=<sp/>0;<sp/>itype<sp/>&lt;<sp/>storage.type-&gt;size();<sp/>++itype)<sp/>{</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"></highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>the<sp/>histogram<sp/>name:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>histname<sp/>=<sp/>(</highlight><highlight class="stringliteral">&quot;_MuonTrigEff_&quot;</highlight><highlight class="normal"><sp/>+<sp/>storage.period-&gt;at(iperiod)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((m_year<sp/>&gt;<sp/>2011)<sp/>?<sp/>storage.trigger-&gt;at(iperiod)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage.quality-&gt;at(iqu)<sp/>+</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;_EtaPhi_&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage.bins-&gt;at(ibins)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage.region-&gt;at(iregion)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage.type-&gt;at(itype));</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>access<sp/>the<sp/>histogram:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>path<sp/>=<sp/>(storage.quality-&gt;at(iqu)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage.bins-&gt;at(ibins)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage.trigger-&gt;at(iperiod)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>storage.period-&gt;at(iperiod)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;etaphi_&quot;</highlight><highlight class="normal"><sp/>+<sp/>storage.region-&gt;at(iregion)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_eff_&quot;</highlight><highlight class="normal"><sp/>+<sp/>storage.type-&gt;at(itype)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_period&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage.period-&gt;at(iperiod)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_EF_&quot;</highlight><highlight class="normal"><sp/>+<sp/>storage.trigger-&gt;at(iperiod));</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TH2*<sp/>hist<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">TH2*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(file-&gt;Get(path.c_str()));</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>hist)<sp/>{</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Warning(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::initialise&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>not<sp/>available<sp/>in<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>path.c_str(),<sp/>filePath.c_str());</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>histogram<sp/>into<sp/>the<sp/>in-memory<sp/>directory:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TH2*<sp/>hcopy<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">TH2*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(hist-&gt;Clone());</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>hcopy)<sp/>{</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Fatal(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::initialise&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MESSAGE(</highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>make<sp/>copy<sp/>of<sp/>histogram<sp/>\&quot;%s\&quot;&quot;</highlight><highlight class="normal">),<sp/>histname.c_str());</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error((</highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>make<sp/>copy<sp/>of<sp/>histogram<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>histname<sp/>).c_str());</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"></highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now,<sp/>remember<sp/>this<sp/>histogram:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;DEBUG:<sp/>&quot;<sp/>&lt;&lt;<sp/>path<sp/>&lt;&lt;<sp/>&quot;<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>histname<sp/>&lt;&lt;<sp/>&quot;\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::pair&lt;EfficiencyMap::iterator,<sp/>bool&gt;<sp/>rc<sp/>=<sp/>m_efficiencyMap.insert(EfficiencyPair(histname,<sp/>hcopy));</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>rc.second)<sp/>{</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Fatal(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::initialise&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MESSAGE(</highlight><highlight class="stringliteral">&quot;histogram<sp/>\&quot;%s\&quot;<sp/>duplicated&quot;</highlight><highlight class="normal">),<sp/>histname.c_str());</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error((</highlight><highlight class="stringliteral">&quot;histogram<sp/>duplication:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>histname).c_str());</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"></highlight></codeline>
<codeline lineno="1863"><highlight class="normal"></highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>phi<sp/>boundaries:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_year<sp/>==<sp/>2011)<sp/>{</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/>setPhiBoundary2011(storage.period);</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"></highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/>setPhiBoundary(file);</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"></highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>we<sp/>can<sp/>close<sp/>the<sp/>file:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/>file-&gt;Close();</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"></highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>to<sp/>the<sp/>directory<sp/>we<sp/>were<sp/>in<sp/>before<sp/>the<sp/>function<sp/>call:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/>origDir-&gt;cd();</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"></highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/>::Info(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::initialise&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Initialization<sp/>successful&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"></highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1885"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"></highlight></codeline>
<codeline lineno="1887"><highlight class="normal">std::string</highlight></codeline>
<codeline lineno="1888"><highlight class="normal">LeptonTriggerSF::getMuonQuality(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MuonQuality<sp/>quality)</highlight></codeline>
<codeline lineno="1889"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/>std::string<sp/>name;</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(quality)<sp/>{</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>loose:</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;loose&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"></highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>combined:</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;combined&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"></highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::Error(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::getMuonQuality&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MESSAGE(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>muon<sp/>quality<sp/>(%i)<sp/>received;<sp/>Using<sp/>loose<sp/>muon<sp/>as<sp/>default&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quality<sp/>);</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;loose&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"></highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>name;</highlight></codeline>
<codeline lineno="1908"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><ref refid="d3/d83/classLeptonTriggerSF_1a39ba2c399a909883bbc9ae72278ef002" kindref="member">LeptonTriggerSF::getElectronQuality</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>runNumber,</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ElectronQuality<sp/>quality,</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isSF,</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isditrig,</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DileptonTriggerName<sp/>dilepName)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1916"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>combination<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"></highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(runNumber<sp/>&lt;=<sp/>186755)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>e20_medium</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(quality)<sp/>{</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>loosepp:</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>combination<sp/>=<sp/>isSF<sp/>?<sp/>27<sp/>:<sp/>20;</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"></highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(27);</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(20);</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"></highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>mediumpp:</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>combination<sp/>=<sp/>isSF<sp/>?<sp/>8<sp/>:<sp/>9;</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"></highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(8);</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(9);</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"></highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>tightpp:</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>combination<sp/>=<sp/>isSF<sp/>?<sp/>10<sp/>:<sp/>11;</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"></highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(10);</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(11);</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"></highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Error(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::getElectronQuality&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MESSAGE(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>electron<sp/>quality<sp/>(%i)<sp/>received;<sp/>Using<sp/>loose++<sp/>electron<sp/>as<sp/>default&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quality<sp/>);</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>combination<sp/>=<sp/>isSF<sp/>?<sp/>27<sp/>:<sp/>20;</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"></highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(27);</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(20);</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(runNumber<sp/>&lt;=<sp/>187815)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>e22_medium</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(quality)<sp/>{</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>loosepp:</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>combination<sp/>=<sp/>isSF<sp/>?<sp/>28<sp/>:<sp/>21;</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"></highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(28);</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(21);</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"></highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>mediumpp:</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>combination<sp/>=<sp/>isSF<sp/>?<sp/>12<sp/>:<sp/>13;</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"></highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(12);</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(13);</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"></highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>tightpp:</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>combination<sp/>=<sp/>isSF<sp/>?<sp/>14<sp/>:<sp/>15;</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"></highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(14);</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(15);</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"></highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Error(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::getElectronQuality&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MESSAGE(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>electron<sp/>quality<sp/>(%i)<sp/>received;<sp/>Using<sp/>loose++<sp/>electron<sp/>as<sp/>default&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quality<sp/>);</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>combination<sp/>=<sp/>isSF<sp/>?<sp/>28<sp/>:<sp/>21;</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"></highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(28);</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(21);</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"></highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(runNumber<sp/>&lt;=<sp/>191933<sp/>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>e22vh_medium1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(quality)<sp/>{</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>loosepp:</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>combination<sp/>=<sp/>isSF<sp/>?<sp/>29<sp/>:<sp/>22;</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"></highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(29);</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(22);</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"></highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>mediumpp:</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>combination<sp/>=<sp/>isSF<sp/>?<sp/>16<sp/>:<sp/>17;</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"></highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(16);</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(17);</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"></highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>tightpp:</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>combination<sp/>=<sp/>isSF<sp/>?<sp/>18<sp/>:<sp/>19;</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"></highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(18);</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(19);</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"></highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Error(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::getElectronQuality&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MESSAGE(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>electron<sp/>quality<sp/>(%i)<sp/>received;<sp/>Using<sp/>loose++<sp/>electron<sp/>as<sp/>default&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quality<sp/>);</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>combination<sp/>=<sp/>isSF<sp/>?<sp/>29<sp/>:<sp/>22;</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"></highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(29);</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(22);</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"></highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(runNumber<sp/>&lt;=<sp/><sp/>9999999)<sp/>{<sp/></highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!isditrig){<sp/></highlight><highlight class="comment">//<sp/>e24vhi_medium1<sp/>||<sp/>e60_medium1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(quality)<sp/>{</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>loosepp:</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>combination<sp/>=<sp/>isSF<sp/>?<sp/>31<sp/>:<sp/>32;</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(31);</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(32);</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>mediumpp:</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>combination<sp/>=<sp/>isSF<sp/>?<sp/>33<sp/>:<sp/>34;</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(33);</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(34);</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"></highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>tightpp:</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>combination<sp/>=<sp/>isSF<sp/>?<sp/>35<sp/>:<sp/>36;</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"></highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(35);</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(36);</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"></highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ML:</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>combination<sp/>=<sp/>isSF<sp/>?<sp/>37<sp/>:<sp/>38;</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"></highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(37);</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(38);</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"></highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LooseLLH:</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>combination<sp/>=<sp/>isSF<sp/>?<sp/>50<sp/>:<sp/>51;</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"></highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(50);</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(51);</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"></highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VeryTightLLH:</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>combination<sp/>=<sp/>isSF<sp/>?<sp/>54<sp/>:<sp/>55;</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"></highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(54);</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(55);</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"></highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Error(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::getElectronQuality&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MESSAGE(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>electron<sp/>quality<sp/>(%i)<sp/>received;<sp/>Using<sp/>loose++<sp/>electron<sp/>as<sp/>default&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quality<sp/>);</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>combination<sp/>=<sp/>isSF<sp/>?<sp/>31<sp/>:<sp/>32;</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"></highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(31);</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(32);</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dilepName==EF_e12Tvh_medium1_mu8){<sp/></highlight><highlight class="comment">//<sp/>e12Tvh_medium1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(quality)<sp/>{</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>loosepp:</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>combination<sp/>=<sp/>isSF<sp/>?<sp/>70<sp/>:<sp/>71;</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(70);</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(71);</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>mediumpp:</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>combination<sp/>=<sp/>isSF<sp/>?<sp/>72<sp/>:<sp/>73;</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(72);</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(73);</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"></highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>tightpp:</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>combination<sp/>=<sp/>isSF<sp/>?<sp/>74<sp/>:<sp/>75;</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"></highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(74);</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(75);</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"></highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ML:</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>combination<sp/>=<sp/>isSF<sp/>?<sp/>78<sp/>:<sp/>79;</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"></highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(78);</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(79);</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"></highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LooseLLH:</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>combination<sp/>=<sp/>isSF<sp/>?<sp/>80<sp/>:<sp/>81;</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"></highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(80);</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(81);</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"></highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VeryTightLLH:</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>combination<sp/>=<sp/>isSF<sp/>?<sp/>82<sp/>:<sp/>83;</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"></highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(82);</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(83);</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"></highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Error(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::getElectronQuality&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MESSAGE(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>electron<sp/>quality<sp/>(%i)<sp/>received;<sp/>Using<sp/>loose++<sp/>electron<sp/>as<sp/>default&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quality<sp/>);</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>combination<sp/>=<sp/>isSF<sp/>?<sp/>70<sp/>:<sp/>71;</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"></highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(70);</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialiseElectronTool(71);</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//else<sp/>if(dilepName==EF_2e12Tvh_loose1){<sp/>//<sp/>e12Tvh_loose1<sp/>--<sp/>default<sp/>for<sp/>backward<sp/>compatibility</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(quality)<sp/>{</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>loosepp:</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/>combination<sp/>=<sp/>isSF<sp/>?<sp/>39<sp/>:<sp/>40;</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/>initialiseElectronTool(39);</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/>initialiseElectronTool(40);</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>mediumpp:</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/>combination<sp/>=<sp/>isSF<sp/>?<sp/>41<sp/>:<sp/>42;</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/>initialiseElectronTool(41);</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/>initialiseElectronTool(42);</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>tightpp:</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/>combination<sp/>=<sp/>isSF<sp/>?<sp/>43<sp/>:<sp/>44;</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/>initialiseElectronTool(43);</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/>initialiseElectronTool(44);</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ML:</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/>combination<sp/>=<sp/>isSF<sp/>?<sp/>45<sp/>:<sp/>46;</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/>initialiseElectronTool(45);</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/>initialiseElectronTool(46);</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LooseLLH:</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/>combination<sp/>=<sp/>isSF<sp/>?<sp/>52<sp/>:<sp/>53;</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/>initialiseElectronTool(52);</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/>initialiseElectronTool(53);</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VeryTightLLH:</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>combination<sp/>=<sp/>isSF<sp/>?<sp/>56<sp/>:<sp/>57;</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/>initialiseElectronTool(56);</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/>initialiseElectronTool(57);</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/>::Error(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::getElectronQuality&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MESSAGE(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>electron<sp/>quality<sp/>(%i)<sp/>received;<sp/>Using<sp/>loose++<sp/>electron<sp/>as<sp/>default&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quality<sp/>);</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/>combination<sp/>=<sp/>isSF<sp/>?<sp/>39<sp/>:<sp/>40;</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/>initialiseElectronTool(39);</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/>initialiseElectronTool(40);</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/>::Error(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::getElectronQuality&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MESSAGE(<sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>run<sp/>number<sp/>(%i)<sp/>received&quot;</highlight><highlight class="normal"><sp/>),<sp/>runNumber);</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>combination;</highlight></codeline>
<codeline lineno="2186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"></highlight></codeline>
<codeline lineno="2188"><highlight class="normal"></highlight></codeline>
<codeline lineno="2189"><highlight class="normal"></highlight></codeline>
<codeline lineno="2190"><highlight class="normal"></highlight></codeline>
<codeline lineno="2191"><highlight class="normal">std::pair&lt;double,<sp/>double&gt;</highlight></codeline>
<codeline lineno="2192"><highlight class="normal">LeptonTriggerSF::getThresholds(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/d63/structTrigMuonEff_1_1Configuration" kindref="compound">TrigMuonEff::Configuration</ref>&amp;<sp/>config)</highlight></codeline>
<codeline lineno="2193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/>std::pair&lt;double,<sp/>double&gt;<sp/>result(20.,<sp/>21.);<sp/><sp/></highlight><highlight class="comment">//<sp/>(muon,<sp/>electron)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2195"><highlight class="normal"></highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ac7e00f10054006e03aa52073d85dd5ab" kindref="member">runNumber</ref><sp/>&lt;=<sp/>186755)<sp/>{</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/>result.second<sp/>=<sp/>21.;</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"></highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ac7e00f10054006e03aa52073d85dd5ab" kindref="member">runNumber</ref><sp/>&lt;=<sp/>191933)<sp/>{</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/>result.second<sp/>=<sp/>23.;</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"></highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((200804<sp/>&lt;=<sp/>config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ac7e00f10054006e03aa52073d85dd5ab" kindref="member">runNumber</ref>)<sp/>and<sp/>(config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ac7e00f10054006e03aa52073d85dd5ab" kindref="member">runNumber</ref><sp/>&lt;=<sp/>9999999))<sp/>{</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/>result.first<sp/>=<sp/>25.;<sp/><sp/></highlight><highlight class="comment">//<sp/>muon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/>result.second<sp/>=<sp/>25.;<sp/></highlight><highlight class="comment">//<sp/>electron</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2205"><highlight class="normal"></highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ab3e81f06dc7f278203a9086b14177c5d" kindref="member">trigger</ref>.find(</highlight><highlight class="stringliteral">&quot;e12Tvh_medium1_mu8&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos){</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.first<sp/>=<sp/>10.;<sp/><sp/></highlight><highlight class="comment">//<sp/>muon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.second<sp/>=<sp/>14.;<sp/></highlight><highlight class="comment">//<sp/>electron</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"></highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/>::Error(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::getThresholds&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MESSAGE(<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>run<sp/>number<sp/>(%i)<sp/>received&quot;</highlight><highlight class="normal"><sp/>),<sp/>config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ac7e00f10054006e03aa52073d85dd5ab" kindref="member">runNumber</ref>);</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"></highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1af8d56232d671c3b42a0f6e954eaa4794" kindref="member">useGeV</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/>result.first<sp/><sp/>*=<sp/>GeVtoMeV;</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/>result.second<sp/>*=<sp/>GeVtoMeV;</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"></highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"></highlight></codeline>
<codeline lineno="2225"><highlight class="normal"></highlight></codeline>
<codeline lineno="2226"><highlight class="normal"></highlight></codeline>
<codeline lineno="2227"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2228"><highlight class="normal">LeptonTriggerSF::getDileptonThresholds(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/d63/structTrigMuonEff_1_1Configuration" kindref="compound">TrigMuonEff::Configuration</ref>&amp;<sp/>config,</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DileptonThresholds&amp;<sp/>thresholds)</highlight></codeline>
<codeline lineno="2230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/>thresholds.mu18_tight<sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/>thresholds.mu8_EFFS<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/>thresholds.mu13<sp/>=<sp/>15;</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/>thresholds.e12Tvh_loose1<sp/>=<sp/>14;</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"></highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1af8d56232d671c3b42a0f6e954eaa4794" kindref="member">useGeV</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/>thresholds.mu18_tight<sp/>*=<sp/>GeVtoMeV;</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/>thresholds.mu8_EFFS<sp/>*=<sp/>GeVtoMeV;</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/>thresholds.mu13<sp/>*=<sp/>GeVtoMeV;</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/>thresholds.e12Tvh_loose1<sp/>*=<sp/>GeVtoMeV;</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"></highlight></codeline>
<codeline lineno="2244"><highlight class="normal"></highlight></codeline>
<codeline lineno="2245"><highlight class="normal"></highlight></codeline>
<codeline lineno="2246"><highlight class="normal">TrigMuonEff::DataPeriod</highlight></codeline>
<codeline lineno="2247"><highlight class="normal">LeptonTriggerSF::getDataPeriod(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>runNumber)</highlight></codeline>
<codeline lineno="2248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(runNumber<sp/>&lt;<sp/>178044)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TrigMuonEff::period_undefined;</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(runNumber<sp/>&lt;=<sp/>186493)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TrigMuonEff::period_2011_BtoI;</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((runNumber<sp/>&lt;=<sp/>189090)<sp/>or</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(runNumber<sp/>&gt;=<sp/>189639<sp/>and<sp/>runNumber<sp/>&lt;=<sp/>191933))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TrigMuonEff::period_2011_JtoMwithoutL3L4;</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((runNumber<sp/>&gt;=<sp/>189184)<sp/>and<sp/>(runNumber<sp/>&lt;=<sp/>189610))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TrigMuonEff::period_2011_L3toL4;</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((runNumber<sp/>&gt;=<sp/>200804)<sp/>and<sp/>(runNumber<sp/>&lt;=<sp/>201556))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TrigMuonEff::period_2012_A;</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((runNumber<sp/>&gt;=<sp/>202660)<sp/>and<sp/>(runNumber<sp/>&lt;=<sp/>205113))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TrigMuonEff::period_2012_B;</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((runNumber<sp/>&gt;=<sp/>206248)<sp/>and<sp/>(runNumber<sp/>&lt;=<sp/>210308))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TrigMuonEff::period_2012_CtoE;</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((runNumber<sp/>&gt;=<sp/>211522)<sp/>and<sp/>(runNumber<sp/>&lt;=<sp/>212272))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TrigMuonEff::period_2012_G;</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((runNumber<sp/>&gt;=<sp/>212619)<sp/>and<sp/>(runNumber<sp/>&lt;=<sp/>215643))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TrigMuonEff::period_2012_HtoL;</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"></highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/>::Error(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::getDataPeriod&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MESSAGE(<sp/></highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>associate<sp/>run<sp/>number<sp/>(%i)<sp/>to<sp/>a<sp/>period&quot;</highlight><highlight class="normal"><sp/>),<sp/>runNumber);</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TrigMuonEff::period_undefined;</highlight></codeline>
<codeline lineno="2263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"></highlight></codeline>
<codeline lineno="2265"><highlight class="normal"></highlight></codeline>
<codeline lineno="2266"><highlight class="normal"></highlight></codeline>
<codeline lineno="2267"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2268"><highlight class="normal">LeptonTriggerSF::getSfError(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b,</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c,</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d)</highlight></codeline>
<codeline lineno="2272"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a2<sp/>=<sp/>a*a;</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b2<sp/>=<sp/>b*b;</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p1<sp/>=<sp/>(1<sp/>-<sp/>a);</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p2<sp/>=<sp/>(1<sp/>-<sp/>b);</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p12<sp/>=<sp/>p1*p1;</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p22<sp/>=<sp/>p2*p2;</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p24<sp/>=<sp/>p22*p22;</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"></highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(<sp/>(<sp/>a2<sp/>/<sp/>p22<sp/>)<sp/>*<sp/>c<sp/>+<sp/>(<sp/>(<sp/>b2<sp/>*<sp/>p12<sp/>)<sp/>/<sp/>p24<sp/>)<sp/>*<sp/>d<sp/>);</highlight></codeline>
<codeline lineno="2282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"></highlight></codeline>
<codeline lineno="2284"><highlight class="normal"></highlight></codeline>
<codeline lineno="2285"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2286"><highlight class="normal">LeptonTriggerSF::getDiError(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a2,</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b2,</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2,</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d2,</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e2,</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>f1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>f2)</highlight></codeline>
<codeline lineno="2292"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>T1<sp/>=<sp/>(<sp/>d1<sp/>*<sp/>a2<sp/>)<sp/>*<sp/>(<sp/>d1<sp/>*<sp/>a2<sp/>);</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>T2<sp/>=<sp/>(<sp/>a1<sp/>*<sp/>d2<sp/>)<sp/>*<sp/>(<sp/>a1<sp/>*<sp/>d2<sp/>);</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>T3<sp/>=<sp/>(<sp/>c1<sp/>*<sp/>b2<sp/>)<sp/>*<sp/>(<sp/>c1<sp/>*<sp/>b2<sp/>);</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>T4<sp/>=<sp/>(<sp/>b1<sp/>*<sp/>c2<sp/>)<sp/>*<sp/>(<sp/>b1<sp/>*<sp/>c2<sp/>);</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>T5<sp/>=<sp/>(<sp/>f1<sp/>*<sp/>e2<sp/>)<sp/>*<sp/>(<sp/>f1<sp/>*<sp/>e2<sp/>);</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>T6<sp/>=<sp/>(<sp/>e1<sp/>*<sp/>f2<sp/>)<sp/>*<sp/>(<sp/>e1<sp/>*<sp/>f2<sp/>);</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"></highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(<sp/>T1<sp/>+<sp/>T2<sp/>+<sp/>T3<sp/>+<sp/>T4<sp/>+<sp/>T5<sp/>+<sp/>T6<sp/>);</highlight></codeline>
<codeline lineno="2301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"></highlight></codeline>
<codeline lineno="2303"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2304"><highlight class="normal">LeptonTriggerSF::getSingleOrDiError_asym(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a2,<sp/></highlight><highlight class="comment">//<sp/>lepton<sp/>1,<sp/>single<sp/>trigger<sp/>eff+unc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b2,<sp/></highlight><highlight class="comment">//<sp/>lepton<sp/>2,<sp/>single<sp/>trigger<sp/>eff+unc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2,<sp/></highlight><highlight class="comment">//<sp/>lepton<sp/>1,<sp/>single<sp/>trigger<sp/>leg1<sp/>for<sp/>dilepton<sp/>eff+unc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d2,<sp/></highlight><highlight class="comment">//<sp/>lepton<sp/>2,<sp/>single<sp/>trigger<sp/>leg1<sp/>for<sp/>dilepton<sp/>eff+unc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e2,<sp/></highlight><highlight class="comment">//<sp/>lepton<sp/>1,<sp/>single<sp/>trigger<sp/>leg2<sp/>for<sp/>dilepton<sp/>eff+unc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>f1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>f2,<sp/></highlight><highlight class="comment">//<sp/>lepton<sp/>2,<sp/>single<sp/>trigger<sp/>leg2<sp/>for<sp/>dilepton<sp/>eff+unc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>g1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>g2,<sp/></highlight><highlight class="comment">//<sp/>lepton<sp/>1,<sp/>single<sp/>trigger<sp/>leg1<sp/>and<sp/>leg2<sp/>for<sp/>dilepton<sp/>eff+unc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>h1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>h2)<sp/></highlight><highlight class="comment">//<sp/>lepton<sp/>2,<sp/>single<sp/>trigger<sp/>leg1<sp/>and<sp/>leg2<sp/>for<sp/>dilepton<sp/>eff+unc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eff_single<sp/>=<sp/>a1+b1<sp/>-a1*b1;</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//const<sp/>double<sp/>eff_double<sp/>=<sp/>c1*f1+d1*e1<sp/>-<sp/>c1*f1*d1*e1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//const<sp/>double<sp/>T1<sp/>=<sp/>(<sp/>(1.0-b1)<sp/>*<sp/>(1.0-eff_double)<sp/>*<sp/>a2<sp/>)*(<sp/>(1.0-b1)<sp/>*<sp/>(1.0-eff_double)<sp/>*<sp/>a2<sp/>)<sp/>+<sp/>(<sp/>(1.0-a1)<sp/>*<sp/>(1.0-eff_double)<sp/>*<sp/>b2<sp/>)*(<sp/>(1.0-a1)<sp/>*<sp/>(1.0-eff_double)<sp/>*<sp/>b2<sp/>);<sp/>//<sp/>vary<sp/>the<sp/>single<sp/>trigger<sp/>uncertainties</highlight></codeline>
<codeline lineno="2317"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//const<sp/>double<sp/>T2<sp/><sp/>=<sp/><sp/>(<sp/>(f1*(1.0-d1*e1))<sp/>*<sp/>(1.0<sp/>-<sp/>eff_single)<sp/>*<sp/>c2)*<sp/>(<sp/>(f1*(1.0-d1*e1))<sp/>*<sp/>(1.0<sp/>-<sp/>eff_single)<sp/>*<sp/>c2)<sp/>+<sp/><sp/>((c1*(1.0-e1*d1))<sp/>*<sp/>(1.0<sp/>-<sp/>eff_single)<sp/>*<sp/>f2)*((c1*(1.0-e1*d1))<sp/>*<sp/>(1.0<sp/>-<sp/>eff_single)<sp/>*<sp/>f2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//const<sp/>double<sp/>T2b<sp/>=<sp/><sp/>(<sp/>(d1*(1.0-c1*f1))<sp/>*<sp/>(1.0<sp/>-<sp/>eff_single)<sp/>*<sp/>e2)*(<sp/>(d1*(1.0-c1*f1))<sp/>*<sp/>(1.0<sp/>-<sp/>eff_single)<sp/>*<sp/>e2)<sp/>+<sp/><sp/>((e1*(1.0-c1*f1))<sp/>*<sp/>(1.0<sp/>-<sp/>eff_single)<sp/>*<sp/>d2)*<sp/>((e1*(1.0-c1*f1))<sp/>*<sp/>(1.0<sp/>-<sp/>eff_single)<sp/>*<sp/>d2);</highlight></codeline>
<codeline lineno="2321"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2323"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;a2:<sp/>&quot;<sp/>&lt;&lt;<sp/>a2<sp/>&lt;&lt;<sp/>&quot;<sp/>b2:<sp/>&quot;<sp/>&lt;&lt;<sp/>b2<sp/>&lt;&lt;<sp/>&quot;<sp/>c2:<sp/>&quot;<sp/>&lt;&lt;<sp/>c2<sp/>&lt;&lt;<sp/>&quot;<sp/>d2:<sp/>&quot;<sp/>&lt;&lt;<sp/>d2<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;e2:<sp/>&quot;<sp/>&lt;&lt;<sp/>e2<sp/>&lt;&lt;<sp/>&quot;<sp/>f2:<sp/>&quot;<sp/>&lt;&lt;<sp/>f2<sp/>&lt;&lt;<sp/>&quot;<sp/>g2:<sp/>&quot;<sp/>&lt;&lt;<sp/>g2<sp/>&lt;&lt;<sp/>&quot;<sp/>h2:<sp/>&quot;<sp/>&lt;&lt;<sp/>h2<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;a1:<sp/>&quot;<sp/>&lt;&lt;<sp/>a1<sp/>&lt;&lt;<sp/>&quot;<sp/>b1:<sp/>&quot;<sp/>&lt;&lt;<sp/>b1<sp/>&lt;&lt;<sp/>&quot;<sp/>c1:<sp/>&quot;<sp/>&lt;&lt;<sp/>c1<sp/>&lt;&lt;<sp/>&quot;<sp/>d1:<sp/>&quot;<sp/>&lt;&lt;<sp/>d1<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;e1:<sp/>&quot;<sp/>&lt;&lt;<sp/>e1<sp/>&lt;&lt;<sp/>&quot;<sp/>f1:<sp/>&quot;<sp/>&lt;&lt;<sp/>f1<sp/>&lt;&lt;<sp/>&quot;<sp/>g1:<sp/>&quot;<sp/>&lt;&lt;<sp/>g1<sp/>&lt;&lt;<sp/>&quot;<sp/>h1:<sp/>&quot;<sp/>&lt;&lt;<sp/>h1<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;&quot;error:<sp/>&quot;<sp/>&lt;&lt;<sp/>sqrt(<sp/>T1<sp/>+<sp/>T2<sp/>+<sp/>T2b)<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//return<sp/>sqrt(<sp/>T1<sp/>+<sp/>T2<sp/>+<sp/>T2b);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2329"><highlight class="normal"></highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>correlate<sp/>the<sp/>lead<sp/>lepton<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//double<sp/>T1<sp/>=<sp/>a2*(1-b1)+c2*f1*(1.0-d1*e1)-(a2*(1-b1)*eff_double+c2*eff_single*f1*(1.0-d1*e1));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//T1*=T1;<sp/>//<sp/>treat<sp/>mu18<sp/>and<sp/>mu24i/mu36<sp/>as<sp/>correlated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//double<sp/>T2<sp/>=<sp/>b2*(1-a1)+d2*e1*(1.0-c1*f1)-(b2*(1-a1)*eff_double+d2*eff_single*e1*(1.0-c1*f1));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//T2*=T2;<sp/>//<sp/>treat<sp/>mu18<sp/>and<sp/>mu24i/mu36<sp/>as<sp/>correlated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>T1<sp/>=<sp/>c2*(1.0-d1);</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/>T1*=T1;</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>T2<sp/>=<sp/>d2*(1.0-c1);</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/>T2*=T2;</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>T3<sp/>=<sp/>e2*d1*(1.0-c1*f1)*(1.0-eff_single);<sp/></highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/>T3*=T3;<sp/></highlight><highlight class="comment">//<sp/>treat<sp/>mu8<sp/>and<sp/>mu24i/mu36<sp/>as<sp/>uncorrelated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>T4<sp/>=<sp/>f2*c1*(1.0-d1*e1)*(1.0-eff_single);<sp/></highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/>T4*=T4;<sp/></highlight><highlight class="comment">//<sp/>treat<sp/>mu8<sp/>and<sp/>mu24i/mu36<sp/>as<sp/>uncorrelated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2343"><highlight class="normal"></highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;OR<sp/>error:<sp/>&quot;<sp/>&lt;&lt;<sp/>T1<sp/>&lt;&lt;<sp/>&quot;<sp/>T2:<sp/>&quot;<sp/>&lt;&lt;<sp/>T2<sp/>&lt;&lt;<sp/>&quot;<sp/>T3:<sp/>&quot;<sp/>&lt;&lt;<sp/>T3<sp/>&lt;&lt;<sp/>&quot;<sp/>T4:<sp/>&quot;<sp/>&lt;&lt;<sp/>T4<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;&quot;error:<sp/>&quot;<sp/>&lt;&lt;<sp/>sqrt(<sp/>T1<sp/>+<sp/>T2<sp/>+<sp/>T3<sp/>+<sp/>T4)<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(<sp/>T1<sp/>+<sp/>T2<sp/>+<sp/>T3<sp/>+<sp/>T4);</highlight></codeline>
<codeline lineno="2347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"></highlight></codeline>
<codeline lineno="2349"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2350"><highlight class="normal">LeptonTriggerSF::getSingleOrDiError_sym(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a2,<sp/></highlight><highlight class="comment">//<sp/>lepton<sp/>1,<sp/>single<sp/>trigger<sp/>eff+unc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b2,<sp/></highlight><highlight class="comment">//<sp/>lepton<sp/>2,<sp/>single<sp/>trigger<sp/>eff+unc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c2,<sp/></highlight><highlight class="comment">//<sp/>lepton<sp/>1,<sp/>single<sp/>trigger<sp/>leg<sp/>for<sp/>dilepton<sp/>eff+unc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d2,<sp/></highlight><highlight class="comment">//<sp/>lepton<sp/>2,<sp/>single<sp/>trigger<sp/>leg<sp/>for<sp/>dilepton<sp/>eff+unc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ispT1above,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ispT2above)</highlight></codeline>
<codeline lineno="2355"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"></highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//double<sp/>a1=0.0,<sp/>a2=0.0,<sp/>b1=0.0,<sp/>b2=0.0,<sp/>c1=0.0,<sp/>c2=0.0,<sp/>d1=0.0,<sp/>d2=0.0;<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if(ispT1above){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>a1=ai1;<sp/>a2=ai2;<sp/>c1=ci1;<sp/>c2=ci2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if(ispT2above){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>b1=bi1;<sp/>b2=bi2;<sp/>d1=di1;<sp/>d2=di2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2364"><highlight class="normal"></highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>single_eff<sp/>=<sp/>a1+b1-a1*b1;</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dil_eff<sp/><sp/><sp/><sp/>=<sp/>c1*d1;</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"></highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>T1<sp/>=<sp/>a2*(1.0-b1)*(1.0-dil_eff)<sp/>+<sp/>c2*d1*(1.0-single_eff);</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/>T1*=T1;</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>T2<sp/>=<sp/>b2*(1.0-a1)*(1.0-dil_eff)<sp/>+<sp/>d2*c1*(1.0-single_eff);</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/>T2*=T2;</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"></highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;a1:<sp/>&quot;<sp/>&lt;&lt;<sp/>a1<sp/>&lt;&lt;<sp/>&quot;<sp/>a2:<sp/>&quot;<sp/>&lt;&lt;<sp/>a2<sp/>&lt;&lt;<sp/>&quot;<sp/>b1:<sp/>&quot;<sp/>&lt;&lt;<sp/>b1<sp/>&lt;&lt;<sp/>&quot;<sp/>b2:<sp/>&quot;<sp/>&lt;&lt;<sp/>b2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;<sp/>c1:<sp/>&quot;<sp/>&lt;&lt;<sp/>c1<sp/>&lt;&lt;<sp/>&quot;<sp/>c2:<sp/>&quot;<sp/>&lt;&lt;<sp/>c2<sp/>&lt;&lt;<sp/>&quot;<sp/>d1:<sp/>&quot;<sp/>&lt;&lt;<sp/>d1<sp/>&lt;&lt;<sp/>&quot;<sp/>d2:<sp/>&quot;<sp/>&lt;&lt;<sp/>d2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;<sp/>T1:<sp/>&quot;<sp/>&lt;&lt;<sp/>T1<sp/>&lt;&lt;<sp/>&quot;<sp/>T2:<sp/>&quot;<sp/>&lt;&lt;<sp/>T2<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(<sp/>T1<sp/>+<sp/>T2<sp/>);</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if(ispT1above<sp/>and<sp/>ispT2above){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>if(a1<sp/>&gt;<sp/>c1){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if(b1<sp/>&gt;<sp/>d1){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>const<sp/>double<sp/>T1<sp/>=<sp/>(<sp/>(1-b1-b1)<sp/>*<sp/>a2<sp/>)<sp/>*<sp/>(<sp/>(1-b1-b1)<sp/>*<sp/>a2<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>const<sp/>double<sp/>T2<sp/>=<sp/>(<sp/>(1-a1-a1)<sp/>*<sp/>b2<sp/>)<sp/>*<sp/>(<sp/>(1-a1-a1)<sp/>*<sp/>b2<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>const<sp/>double<sp/>T3<sp/>=<sp/>(<sp/>d1*c2<sp/>)<sp/>*<sp/>(<sp/>d1*c2<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>const<sp/>double<sp/>T4<sp/>=<sp/>(<sp/>c1*d2<sp/>)<sp/>*<sp/>(<sp/>c1*d2<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>sqrt(<sp/>T1<sp/>+<sp/>T2<sp/>+<sp/>T3<sp/>+<sp/>T4<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}<sp/>else{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>const<sp/>double<sp/>T1<sp/>=<sp/>(<sp/>(1-b1-d1)<sp/>*<sp/>a2<sp/>)<sp/>*<sp/>(<sp/>(1-b1-d1)<sp/>*<sp/>a2<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>const<sp/>double<sp/>T2<sp/>=<sp/>(<sp/>(1-a1)<sp/>*<sp/>b2<sp/>)<sp/>*<sp/>(<sp/>(1-a1)<sp/>*<sp/>b2<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>const<sp/>double<sp/>T3<sp/>=<sp/>(<sp/>d1*c2<sp/>)<sp/>*<sp/>(<sp/>d1*c2<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>const<sp/>double<sp/>T4<sp/>=<sp/>(<sp/>(c1-a1)<sp/>*<sp/>d2<sp/>)<sp/>*<sp/>(<sp/>(c1-a1)<sp/>*<sp/>d2<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>sqrt(<sp/>T1<sp/>+<sp/>T2<sp/>+<sp/>T3<sp/>+<sp/>T4<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>}<sp/>else{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if(b1<sp/>&gt;<sp/>d1){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>const<sp/>double<sp/>T1<sp/>=<sp/>(<sp/>(1-b1)<sp/>*<sp/>a2<sp/>)<sp/>*<sp/>(<sp/>(1-b1)<sp/>*<sp/>a2<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>const<sp/>double<sp/>T2<sp/>=<sp/>(<sp/>(1-a1-c1)<sp/>*<sp/>b2<sp/>)<sp/>*<sp/>(<sp/>(1-a1-c1)<sp/>*<sp/>b2<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>const<sp/>double<sp/>T3<sp/>=<sp/>(<sp/>(d1-b1)<sp/>*<sp/>c2<sp/>)<sp/>*<sp/>(<sp/>(d1-b1)<sp/>*<sp/>c2<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>const<sp/>double<sp/>T4<sp/>=<sp/>(<sp/>c1*d2<sp/>)<sp/>*<sp/>(<sp/>c1*d2<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>sqrt(<sp/>T1<sp/>+<sp/>T2<sp/>+<sp/>T3<sp/>+<sp/>T4<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}<sp/>else{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>const<sp/>double<sp/>T1<sp/>=<sp/>(<sp/>(1-b1)<sp/>*<sp/>a2<sp/>)<sp/>*<sp/>(<sp/>(1-b1)<sp/>*<sp/>a2<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>const<sp/>double<sp/>T2<sp/>=<sp/>(<sp/>(1-a1)<sp/>*<sp/>b2<sp/>)<sp/>*<sp/>(<sp/>(1-a1)<sp/>*<sp/>b2<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>sqrt(<sp/>T1<sp/>+<sp/>T2<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//}<sp/>else<sp/>if(<sp/>((not<sp/>ispT1above)<sp/>and<sp/>ispT2above)<sp/>or<sp/>((not<sp/>ispT2above)<sp/>and<sp/>ispT1above)<sp/>){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>const<sp/>double<sp/>T1<sp/>=<sp/>(<sp/>(1-b1)<sp/>*<sp/>(<sp/>1-(c1<sp/>*<sp/>d1)<sp/>)<sp/>*<sp/>a2<sp/>)<sp/>*<sp/>(<sp/>(1-b1)<sp/>*<sp/>(<sp/>1-(c1<sp/>*<sp/>d1)<sp/>)<sp/>*<sp/>a2<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>const<sp/>double<sp/>T2<sp/>=<sp/>(<sp/>(1-a1)<sp/>*<sp/>(<sp/>1-(c1<sp/>*<sp/>d1)<sp/>)<sp/>*<sp/>b2<sp/>)<sp/>*<sp/>(<sp/>(1-a1)<sp/>*<sp/>(<sp/>1-(c1<sp/>*<sp/>d1)<sp/>)<sp/>*<sp/>b2<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>const<sp/>double<sp/>T3<sp/>=<sp/>(<sp/>d1<sp/>*<sp/>(<sp/>1-a1-b1+(a1*b1)<sp/>)<sp/>*<sp/>c2)<sp/>*<sp/>(<sp/>d1<sp/>*<sp/>(<sp/>1-a1-b1+(a1*b1)<sp/>)<sp/>*<sp/>c2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>const<sp/>double<sp/>T4<sp/>=<sp/>(<sp/>c1<sp/>*<sp/>(<sp/>1-a1-b1+(a1*b1)<sp/>)<sp/>*<sp/>d2)<sp/>*<sp/>(<sp/>c1<sp/>*<sp/>(<sp/>1-a1-b1+(a1*b1)<sp/>)<sp/>*<sp/>d2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>return<sp/>sqrt(<sp/>T1<sp/>+<sp/>T2<sp/>+<sp/>T3<sp/>+<sp/>T4<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//}<sp/>else{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>return<sp/>0.;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"></highlight></codeline>
<codeline lineno="2417"><highlight class="normal"></highlight></codeline>
<codeline lineno="2418"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2419"><highlight class="normal">LeptonTriggerSF::getDileptonLegs(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>chain,</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DileptonTrigger&amp;<sp/>dilepton)</highlight></codeline>
<codeline lineno="2421"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"></highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chain.find(</highlight><highlight class="stringliteral">&quot;mu18_tight_mu8_EFFS&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/>dilepton.leg1<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;mu18_tight&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/>dilepton.leg2<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;mu8_EFFS&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/>dilepton.bothLegs<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;mu18_tight&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>for<sp/>now,<sp/>eventually<sp/>should<sp/>be<sp/>mu18i_tight_or_mu8_EFFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2427"><highlight class="normal"></highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chain.find(</highlight><highlight class="stringliteral">&quot;2mu13&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/>dilepton.leg1<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;mu13&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/>dilepton.leg2<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;mu13&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/>dilepton.bothLegs<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;mu13&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"></highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chain.find(</highlight><highlight class="stringliteral">&quot;2e12Tvh_loose1&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/>dilepton.leg1<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;e12Tvh_loose1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/>dilepton.leg2<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;e12Tvh_loose1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/>dilepton.bothLegs<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;e12Tvh_loose1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"></highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chain.find(</highlight><highlight class="stringliteral">&quot;e12Tvh_medium1_mu8&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/>dilepton.leg1<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;e12Tvh_medium1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/>dilepton.leg2<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;mu8&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/>dilepton.bothLegs<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;e12Tvh_medium1&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>should<sp/>be<sp/>an<sp/>OR.<sp/>Not<sp/>implemented<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2442"><highlight class="normal"></highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/>dilepton.leg1<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/>dilepton.leg2<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/>dilepton.bothLegs<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/>::Error(<sp/></highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::getDileptonLegs&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MESSAGE(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>dilepton<sp/>or<sp/>combination<sp/>of<sp/>single<sp/>and<sp/>dilepton<sp/>trigger<sp/>chain<sp/>name<sp/>given&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"></highlight></codeline>
<codeline lineno="2452"><highlight class="normal"></highlight></codeline>
<codeline lineno="2453"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2454"><highlight class="normal">LeptonTriggerSF::setConfiguration(<ref refid="d1/d63/structTrigMuonEff_1_1Configuration" kindref="compound">TrigMuonEff::Configuration</ref>&amp;<sp/>config,</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TrigMuonEff::DataPeriod<sp/>period)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2456"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(period<sp/>==<sp/>TrigMuonEff::period_undefined)<sp/>{</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/>period<sp/>=<sp/>getDataPeriod(config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ac7e00f10054006e03aa52073d85dd5ab" kindref="member">runNumber</ref>);</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_max_period<sp/>!=<sp/>TrigMuonEff::period_undefined)<sp/>{</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(period<sp/>&gt;<sp/>m_max_period)<sp/>{</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasWarned<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>hasWarned)<sp/>{</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Warning(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::period<sp/>out<sp/>of<sp/>range:&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;setting<sp/>it<sp/>to<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>period);</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasWarned<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>period<sp/>=<sp/>m_max_period;</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"></highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(period<sp/>==<sp/>TrigMuonEff::period_undefined)<sp/>{</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::Error(<sp/></highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::setConfiguration&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MESSAGE(</highlight><highlight class="stringliteral">&quot;RunNumber<sp/>is<sp/>not<sp/>in<sp/>2011<sp/>or<sp/>2012<sp/>dataset.<sp/>No<sp/>scale<sp/>factors<sp/>calculated.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>use<sp/>RunNumber<sp/>between<sp/>178044-191933<sp/>for<sp/>2011<sp/>data,<sp/>or<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;above<sp/>200804<sp/>(upper<sp/>run<sp/>number<sp/>limit<sp/>removed<sp/>for<sp/>now)<sp/>for<sp/>2012<sp/>data.<sp/>%d&quot;</highlight><highlight class="normal"><sp/>),<sp/>config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ac7e00f10054006e03aa52073d85dd5ab" kindref="member">runNumber</ref><sp/>);</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"></highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(period)<sp/>{</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TrigMuonEff::period_2011_BtoI:</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1aa1ea2b3f4ca3d304445f903df40e1142" kindref="member">period</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;BtoI_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a9096cd623777c445a83680ec81680f46" kindref="member">binning</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;fine&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"></highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TrigMuonEff::period_2011_JtoMwithoutL3L4:</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1aa1ea2b3f4ca3d304445f903df40e1142" kindref="member">period</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;JtoMwoL3toL4_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a9096cd623777c445a83680ec81680f46" kindref="member">binning</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;fine&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"></highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TrigMuonEff::period_2011_L3toL4:</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1aa1ea2b3f4ca3d304445f903df40e1142" kindref="member">period</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;L3toL4_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a9096cd623777c445a83680ec81680f46" kindref="member">binning</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;coarse&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"></highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TrigMuonEff::per2012A:</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1aa1ea2b3f4ca3d304445f903df40e1142" kindref="member">period</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;A_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a9096cd623777c445a83680ec81680f46" kindref="member">binning</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;fine&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ab3e81f06dc7f278203a9086b14177c5d" kindref="member">trigger</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;mu24i_tight_or_EF_mu36_tight&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"></highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TrigMuonEff::per2012B:</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1aa1ea2b3f4ca3d304445f903df40e1142" kindref="member">period</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;B_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a9096cd623777c445a83680ec81680f46" kindref="member">binning</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;fine&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ab3e81f06dc7f278203a9086b14177c5d" kindref="member">trigger</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;mu24i_tight_or_EF_mu36_tight&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"></highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TrigMuonEff::per2012CtoE:</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1aa1ea2b3f4ca3d304445f903df40e1142" kindref="member">period</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;CtoE_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a9096cd623777c445a83680ec81680f46" kindref="member">binning</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;fine&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ab3e81f06dc7f278203a9086b14177c5d" kindref="member">trigger</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;mu24i_tight_or_EF_mu36_tight&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"></highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TrigMuonEff::per2012G:</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1aa1ea2b3f4ca3d304445f903df40e1142" kindref="member">period</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;G_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a9096cd623777c445a83680ec81680f46" kindref="member">binning</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;fine&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ab3e81f06dc7f278203a9086b14177c5d" kindref="member">trigger</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;mu24i_tight_or_EF_mu36_tight&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"></highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TrigMuonEff::per2012HtoL:</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1aa1ea2b3f4ca3d304445f903df40e1142" kindref="member">period</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;HtoL_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a9096cd623777c445a83680ec81680f46" kindref="member">binning</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;fine&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1ab3e81f06dc7f278203a9086b14177c5d" kindref="member">trigger</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;mu24i_tight_or_EF_mu36_tight&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"></highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>speical<sp/>cases</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TrigMuonEff::per2011J:</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1aa1ea2b3f4ca3d304445f903df40e1142" kindref="member">period</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;J_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a9096cd623777c445a83680ec81680f46" kindref="member">binning</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;coarse&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"></highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TrigMuonEff::per2011K:</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1aa1ea2b3f4ca3d304445f903df40e1142" kindref="member">period</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;K_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a9096cd623777c445a83680ec81680f46" kindref="member">binning</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;coarse&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"></highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TrigMuonEff::per2011J_K:</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1aa1ea2b3f4ca3d304445f903df40e1142" kindref="member">period</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;JtoK_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a9096cd623777c445a83680ec81680f46" kindref="member">binning</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;coarse&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"></highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TrigMuonEff::per2011J_M:</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1aa1ea2b3f4ca3d304445f903df40e1142" kindref="member">period</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;JtoM_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a9096cd623777c445a83680ec81680f46" kindref="member">binning</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;coarse&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"></highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TrigMuonEff::per2011L_M:</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1aa1ea2b3f4ca3d304445f903df40e1142" kindref="member">period</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;LtoM_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config.<ref refid="d1/d63/structTrigMuonEff_1_1Configuration_1a9096cd623777c445a83680ec81680f46" kindref="member">binning</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;coarse&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"></highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::Error(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::setConfiguration&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MESSAGE(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>data<sp/>period<sp/>(%i)<sp/>requested&quot;</highlight><highlight class="normal">),<sp/>period);</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"></highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"></highlight></codeline>
<codeline lineno="2560"><highlight class="normal"></highlight></codeline>
<codeline lineno="2561"><highlight class="normal"></highlight></codeline>
<codeline lineno="2562"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2563"><highlight class="normal">LeptonTriggerSF::setPhiBoundary2011(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>*period)</highlight></codeline>
<codeline lineno="2564"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/>m_phiBoundaryBarrel<sp/>=<sp/>M_PI;</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/>m_phiBoundaryEndcap<sp/>=<sp/>M_PI;</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"></highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/>EfficiencyMap::const_iterator<sp/>itr<sp/>=<sp/>m_efficiencyMap.begin();</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/>EfficiencyMap::const_iterator<sp/>end<sp/>=<sp/>m_efficiencyMap.end();</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"></highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>itr<sp/>!=<sp/>end;<sp/>++itr)<sp/>{</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>itr-&gt;second)<sp/>{</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::Fatal(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::setPhiBoundary2011&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MESSAGE(</highlight><highlight class="stringliteral">&quot;An<sp/>internal<sp/>coding<sp/>error<sp/>detected&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;An<sp/>internal<sp/>coding<sp/>error<sp/>detected&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"></highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setting<sp/>lower<sp/>phi<sp/>to<sp/>account<sp/>for<sp/>unusual<sp/>binning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;_MuonTrigEff_&quot;</highlight><highlight class="normal"><sp/>+<sp/>period-&gt;at(0)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_loose_EtaPhi_fine_barrel_data&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itr-&gt;first.find(<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_phiBoundaryBarrel<sp/>=<sp/>itr-&gt;second-&gt;GetYaxis()-&gt;GetXmin();</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;_MuonTrigEff_&quot;</highlight><highlight class="normal"><sp/>+<sp/>period-&gt;at(0)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_loose_EtaPhi_fine_endcap_data&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itr-&gt;first.find(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_phiBoundaryEndcap<sp/>=<sp/>itr-&gt;second-&gt;GetYaxis()-&gt;GetXmin();</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_phiBoundaryBarrel<sp/>&lt;<sp/>-M_PI)<sp/>m_phiBoundaryBarrel<sp/>+=<sp/>2.<sp/>*<sp/>M_PI;</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_phiBoundaryEndcap<sp/>&lt;<sp/>-M_PI)<sp/>m_phiBoundaryEndcap<sp/>+=<sp/>2.<sp/>*<sp/>M_PI;</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"></highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"></highlight></codeline>
<codeline lineno="2593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"></highlight></codeline>
<codeline lineno="2595"><highlight class="normal"></highlight></codeline>
<codeline lineno="2596"><highlight class="normal"></highlight></codeline>
<codeline lineno="2597"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2598"><highlight class="normal">LeptonTriggerSF::setPhiBoundary(TFile*<sp/>file)</highlight></codeline>
<codeline lineno="2599"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/>gROOT-&gt;cd();</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"></highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/>m_phiBoundaryBarrel<sp/>=<sp/>M_PI;</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/>m_phiBoundaryEndcap<sp/>=<sp/>M_PI;</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"></highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/>TH2*<sp/>hist<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"></highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>barrel<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;binning_barrel&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/>hist<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/>TH2*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(file-&gt;Get(barrel));</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>hist)<sp/>{</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/><sp/>::Warning(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::setPhiBoundary&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>not<sp/>available&quot;</highlight><highlight class="normal">,<sp/>barrel);</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"></highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><sp/>m_phiBoundaryBarrel<sp/>=<sp/>hist-&gt;GetYaxis()-&gt;GetXmin();</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"></highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>endcap<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;binning_endcap&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/>hist<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/>TH2*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(file-&gt;Get(endcap));</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>hist)<sp/>{</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/><sp/>::Warning(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::setPhiBoundary&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>not<sp/>available&quot;</highlight><highlight class="normal">,<sp/>endcap);</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"></highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/><sp/>m_phiBoundaryEndcap<sp/>=<sp/>hist-&gt;GetYaxis()-&gt;GetXmin();</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"></highlight></codeline>
<codeline lineno="2625"><highlight class="normal"></highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_phiBoundaryBarrel<sp/>&lt;<sp/>-M_PI)<sp/>m_phiBoundaryBarrel<sp/>+=<sp/>2.<sp/>*<sp/>M_PI;</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_phiBoundaryEndcap<sp/>&lt;<sp/>-M_PI)<sp/>m_phiBoundaryEndcap<sp/>+=<sp/>2.<sp/>*<sp/>M_PI;</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"></highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2630"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"></highlight></codeline>
<codeline lineno="2632"><highlight class="normal"></highlight></codeline>
<codeline lineno="2633"><highlight class="normal"></highlight></codeline>
<codeline lineno="2634"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2635"><highlight class="normal">LeptonTriggerSF::fixPhiRange(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TLorentzVector&amp;<sp/>muon)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2636"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phi<sp/>=<sp/>muon.Phi();</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"></highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(phi<sp/>&gt;<sp/>M_PI)<sp/>{</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/>::Warning(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::fixPhiRange&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Muon<sp/>phi<sp/>%4.2f<sp/>&gt;<sp/>pi!<sp/>Using<sp/>(phi-2*pi)&quot;</highlight><highlight class="normal">,<sp/>phi);</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/><sp/>phi<sp/>-=<sp/>2<sp/>*<sp/>M_PI;</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"></highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(phi<sp/>&lt;<sp/>-M_PI)<sp/>{</highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/><sp/><sp/>::Warning(</highlight><highlight class="stringliteral">&quot;LeptonTriggerSF::fixPhiRange&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Muon<sp/>phi<sp/>%4.2f<sp/>&lt;<sp/>-pi!<sp/>Using<sp/>(phi+2*pi)&quot;</highlight><highlight class="normal">,<sp/>phi);</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/><sp/>phi<sp/>+=<sp/>2<sp/>*<sp/>M_PI;</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"></highlight></codeline>
<codeline lineno="2650"><highlight class="normal"></highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(muon.Eta())<sp/>&lt;<sp/>muon_barrel_endcap_boundary)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>barrel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_phiBoundaryBarrel<sp/>&lt;<sp/>0.)<sp/>{</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(phi<sp/>&lt;<sp/>m_phiBoundaryBarrel)<sp/>{</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi<sp/>+=<sp/>2<sp/>*<sp/>M_PI;</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(phi<sp/>&gt;=<sp/>m_phiBoundaryBarrel)<sp/>{</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi<sp/>-=<sp/>2<sp/>*<sp/>M_PI;</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>endcap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_phiBoundaryEndcap<sp/>&lt;<sp/>0.)<sp/>{</highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(phi<sp/>&lt;<sp/>m_phiBoundaryEndcap)<sp/>{</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi<sp/>+=<sp/>2<sp/>*<sp/>M_PI;</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(phi<sp/>&gt;=<sp/>m_phiBoundaryEndcap<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi<sp/>-=<sp/>2<sp/>*<sp/>M_PI;</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"></highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>phi;</highlight></codeline>
<codeline lineno="2674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"></highlight></codeline>
<codeline lineno="2676"><highlight class="normal"></highlight></codeline>
<codeline lineno="2677"><highlight class="normal"></highlight></codeline>
<codeline lineno="2678"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2679"><highlight class="normal">LeptonTriggerSF::initialiseElectronTool(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2680"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_electronSF.find(key)<sp/>==<sp/>m_electronSF.end())<sp/>{</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d65/classRoot_1_1TElectronEfficiencyCorrectionTool" kindref="compound">Root::TElectronEfficiencyCorrectionTool</ref><sp/>*tool<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dd/d65/classRoot_1_1TElectronEfficiencyCorrectionTool" kindref="compound">Root::TElectronEfficiencyCorrectionTool</ref>;</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_fileNameMap.find(key)<sp/>==<sp/>m_fileNameMap.end())<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;initialiseElectronTool:<sp/>key<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/><sp/>tool-&gt;<ref refid="dd/d65/classRoot_1_1TElectronEfficiencyCorrectionTool_1ae9aacf0bdde21fe629dcd9c41e199805" kindref="member" tooltip="Add an input file.">addFileName</ref>(m_fileNameMap[key]);</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/><sp/>tool-&gt;<ref refid="dd/d65/classRoot_1_1TElectronEfficiencyCorrectionTool_1a7a7e8462a5d6c17b35cc08e33d770eab" kindref="member">initialize</ref>();</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/><sp/>m_electronSF.insert(ElectronEfficiencyToolPair(key,<sp/>tool));</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2688"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"></highlight><highlight class="comment">//<sp/>eof</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/Root/LeptonTriggerSF.cxx"/>
  </compounddef>
</doxygen>
