<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d6/dda/EulerAnglesHelpers_8h" kind="file">
    <compoundname>EulerAnglesHelpers.h</compoundname>
    <includes refid="d7/d87/GeoPrimitives_8h" local="yes">GeoPrimitives/GeoPrimitives.h</includes>
    <includes refid="d5/d66/CLHEPtoEigenEulerAnglesConverters_8h" local="yes">CLHEPtoEigenEulerAnglesConverters.h</includes>
    <incdepgraph>
      <node id="133851">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GeoPrimitives/GeoPrimitives/EulerAnglesHelpers.h</label>
        <link refid="EulerAnglesHelpers.h"/>
        <childnode refid="133852" relation="include">
        </childnode>
        <childnode refid="133855" relation="include">
        </childnode>
      </node>
      <node id="133854">
        <label>Eigen/Geometry</label>
      </node>
      <node id="133853">
        <label>unistd.h</label>
      </node>
      <node id="133852">
        <label>GeoPrimitives/GeoPrimitives.h</label>
        <link refid="d7/d87/GeoPrimitives_8h_source"/>
        <childnode refid="133853" relation="include">
        </childnode>
        <childnode refid="133854" relation="include">
        </childnode>
      </node>
      <node id="133856">
        <label>math.h</label>
      </node>
      <node id="133855">
        <label>CLHEPtoEigenEulerAnglesConverters.h</label>
        <link refid="d5/d66/CLHEPtoEigenEulerAnglesConverters_8h_source"/>
        <childnode refid="133852" relation="include">
        </childnode>
        <childnode refid="133856" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="da/d8a/namespaceAmg">Amg</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>eigen_migration</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>EulerAnglesHelpers.cpp</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>Feb<sp/>11,<sp/>2014</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>rbianchi<sp/>&lt;Riccardo.Maria.Bianchi@cern.ch&gt;</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_GEOPRIMITIVES_EULERANGLESHELPERS_H</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_GEOPRIMITIVES_EULERANGLESHELPERS_H</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GeoPrimitives/GeoPrimitives.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CLHEPtoEigenEulerAnglesConverters.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Amg<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="da/d8a/namespaceAmg_1a38d507769aaec283c6233cd1f8926f38" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Amg::Vector3D<sp/><ref refid="da/d8a/namespaceAmg_1a38d507769aaec283c6233cd1f8926f38" kindref="member">getPhiThetaPsi</ref>(Amg::RotationMatrix3D<sp/>mat,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>convention<sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phi;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theta;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>psi;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>Amg::Vector3D<sp/>ea;<sp/></highlight><highlight class="comment">//<sp/>euler<sp/>angles<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>using<sp/>Z-X-Z<sp/>convention:<sp/>(2,0,2)<sp/>==<sp/>&quot;Z,X,Z&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(convention<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ea<sp/>=<sp/>mat.eulerAngles(2,<sp/>0,<sp/>2);<sp/></highlight><highlight class="comment">//<sp/>(using<sp/>Z-X-Z<sp/>convention)<sp/>//<sp/>DEFAULT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>using<sp/>Z-Y-Z<sp/>convention:<sp/>(2,1,2)<sp/>==<sp/>&quot;Z,Y,Z&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ea<sp/>=<sp/>mat.eulerAngles(2,<sp/>1,<sp/>2);<sp/></highlight><highlight class="comment">//<sp/>(using<sp/>Z-Y-Z<sp/>convention)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>the<sp/>values<sp/>from<sp/>Eigen<sp/>convention<sp/>to<sp/>CLHEP<sp/>convention</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>ea<sp/>=<sp/><ref refid="da/d8a/namespaceAmg_1a3d168185febccc5c9e17094d650e277d" kindref="member">convert_EigenEulerAngles_to_CLHEPPhiThetaPsi</ref>(<sp/>ea,<sp/>convention<sp/>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>phi<sp/>=<sp/>ea[0];</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>theta<sp/>=<sp/>ea[1];</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>psi<sp/>=<sp/>ea[2];</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>Amg::Vector3D<sp/>phiThetaPsi_angles;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>phiThetaPsi_angles(0)<sp/>=<sp/>phi;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>phiThetaPsi_angles(1)<sp/>=<sp/>theta;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>phiThetaPsi_angles(2)<sp/>=<sp/>psi;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>phiThetaPsi_angles;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>getPhiThetaPsi()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>Phi<sp/>angle<sp/>of<sp/>a<sp/>rotation<sp/>matrix,</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/>leaving<sp/>Theta<sp/>and<sp/>Psi<sp/>unaltered.</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*<sp/>Actually<sp/>it<sp/>returns<sp/>a<sp/>new<sp/>rotation<sp/>matrix</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*<sp/>built<sp/>with<sp/>the<sp/>new<sp/>Phi<sp/>angle,<sp/>and<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*<sp/>Theta<sp/>and<sp/>Psi<sp/>angles<sp/>taken<sp/>from<sp/>the<sp/>original<sp/>matrix.</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*<sp/>N.B.</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/>if<sp/>&quot;convention<sp/>=<sp/>0&quot;<sp/>--&gt;<sp/>&quot;Z-X-Z&quot;<sp/>convention<sp/>==&gt;<sp/>DEFAULT!!</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*<sp/>if<sp/>&quot;convention<sp/>=<sp/>1&quot;<sp/>--&gt;<sp/>&quot;Z-Y-Z&quot;<sp/>convention</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*<sp/>N.B.!!</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*<sp/>for<sp/>normal<sp/>usage,<sp/>use<sp/>the<sp/>default<sp/>notation<sp/>(simply<sp/>leave<sp/>it<sp/>empty,<sp/>or<sp/>use<sp/>convention=0),</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*<sp/>or,<sp/>alternatively,<sp/>be<sp/>sure<sp/>to<sp/>use<sp/>the<sp/>same<sp/>convention<sp/>in<sp/>both<sp/>setPhi()<sp/>and<sp/>getPhiThetaPsi().</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Amg::RotationMatrix3D<sp/>setPhi(Amg::RotationMatrix3D<sp/>mat,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="da/d8a/namespaceAmg_1a9944b15b9d452c9c90e1b55d5d8f4547" kindref="member">angle</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>convention<sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>Amg::Vector3D<sp/>phi_theta_psi;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>using<sp/>Z-X-Z<sp/>convention:<sp/>(2,0,2)<sp/>==<sp/>&quot;Z,X,Z&quot;.<sp/>==&gt;<sp/><sp/>DEFAULT!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(convention<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi_theta_psi<sp/>=<sp/><ref refid="da/d8a/namespaceAmg_1a38d507769aaec283c6233cd1f8926f38" kindref="member">getPhiThetaPsi</ref>(mat,<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>using<sp/>Z-X-Z<sp/>((2,0,2)<sp/>convention<sp/>//<sp/>DEFAULT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>using<sp/>Z-Y-Z<sp/>convention:<sp/>(2,1,2)<sp/>==<sp/>&quot;Z,Y,Z&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi_theta_psi<sp/>=<sp/><ref refid="da/d8a/namespaceAmg_1a38d507769aaec283c6233cd1f8926f38" kindref="member">getPhiThetaPsi</ref>(mat,<sp/>1);<sp/></highlight><highlight class="comment">//<sp/>using<sp/>Z-Y-Z<sp/>((2,1,2)<sp/>convention</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phi<sp/>=<sp/>phi_theta_psi(0);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theta<sp/>=<sp/>phi_theta_psi(1);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>psi<sp/>=<sp/>phi_theta_psi(2);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>set<sp/>a<sp/>new<sp/>Phi<sp/>angle,<sp/>from<sp/>user&apos;s<sp/>settings</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>phi<sp/>=<sp/>angle;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>get<sp/>Eigen<sp/>Euler<sp/>angles<sp/>from<sp/>CLEHP<sp/>style<sp/>Phi,<sp/>Theta,<sp/>Psi</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>Amg::Vector3D<sp/>clhep_phiThetaPsi(phi,<sp/>theta,<sp/>psi);<sp/></highlight><highlight class="comment">//<sp/>a<sp/>vector<sp/>with<sp/>CLHEP<sp/>angles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>Amg::Vector3D<sp/>eigen_euler_angles;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>converting<sp/>the<sp/>CLHEP<sp/>angles<sp/>to<sp/>Eigen<sp/>angles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(convention<sp/>==<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>using<sp/>Z-X-Z<sp/>convention:<sp/>(2,0,2)<sp/>==<sp/>&quot;Z,X,Z&quot;.<sp/>==&gt;<sp/><sp/>DEFAULT!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eigen_euler_angles<sp/>=<sp/><ref refid="da/d8a/namespaceAmg_1a64e42f3b65b81df83b044906baf694ec" kindref="member">convert_CLHEPPhiThetaPsi_to_EigenEulerAngles</ref>(clhep_phiThetaPsi,<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>using<sp/>Z-X-Z<sp/>((2,0,2)<sp/>convention<sp/>//<sp/>DEFAULT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>using<sp/>Z-Y-Z<sp/>convention:<sp/>(2,1,2)<sp/>==<sp/>&quot;Z,Y,Z&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eigen_euler_angles<sp/>=<sp/><ref refid="da/d8a/namespaceAmg_1a64e42f3b65b81df83b044906baf694ec" kindref="member">convert_CLHEPPhiThetaPsi_to_EigenEulerAngles</ref>(clhep_phiThetaPsi,<sp/>1);<sp/></highlight><highlight class="comment">//<sp/>using<sp/>Z-Y-Z<sp/>((2,1,2)<sp/>convention</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>create<sp/>a<sp/>new<sp/>rotation<sp/>matrix<sp/>from<sp/>AngleAxis</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>N.B.!!</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>match<sp/>CLHEP<sp/>results,</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>we<sp/>have<sp/>to<sp/>invert<sp/>the<sp/>order<sp/>of<sp/>the<sp/>rotation<sp/>operations,</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>compared<sp/>to<sp/>the<sp/>order<sp/>in<sp/>CLHEP.</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>matrix<sp/>here<sp/>below<sp/>is<sp/>equal<sp/>to:</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>---</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>CLHEP::HepRotation<sp/>localRot;</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>localRot.rotateZ(angC);</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>localRot.rotateY(angB);</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>localRot.rotateZ(angA);</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>---</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(convention<sp/>==<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>using<sp/>Z-X-Z<sp/>convention:<sp/>(2,0,2)<sp/>==<sp/>&quot;Z,X,Z&quot;.<sp/>==&gt;<sp/><sp/>DEFAULT!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat<sp/>=<sp/>Amg::AngleAxis3D(eigen_euler_angles(0),<sp/>Amg::Vector3D::UnitZ())</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Amg::AngleAxis3D(eigen_euler_angles(1),<sp/>Amg::Vector3D::UnitX())</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Amg::AngleAxis3D(eigen_euler_angles(2),<sp/>Amg::Vector3D::UnitZ());</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>using<sp/>Z-Y-Z<sp/>convention:<sp/>(2,1,2)<sp/>==<sp/>&quot;Z,Y,Z&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat<sp/>=<sp/>Amg::AngleAxis3D(eigen_euler_angles(0),<sp/>Amg::Vector3D::UnitZ())</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Amg::AngleAxis3D(eigen_euler_angles(1),<sp/>Amg::Vector3D::UnitY())</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Amg::AngleAxis3D(eigen_euler_angles(2),<sp/>Amg::Vector3D::UnitZ());</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mat;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>SetPhi()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>namespace<sp/>Amg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="175"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GeoPrimitives/GeoPrimitives/EulerAnglesHelpers.h"/>
  </compounddef>
</doxygen>
