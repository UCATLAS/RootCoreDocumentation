<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool" kind="class" prot="public">
    <compoundname>Analysis::CalibrationDataInterfaceTool</compoundname>
    <basecompoundref refid="d5/d8a/classAnalysis_1_1ICalibrationDataInterfaceTool" prot="public" virt="virtual">Analysis::ICalibrationDataInterfaceTool</basecompoundref>
    <basecompoundref refid="d7/d79/classAnalysis_1_1CalibrationDataInterfaceBase" prot="public" virt="non-virtual">Analysis::CalibrationDataInterfaceBase</basecompoundref>
    <includes refid="d8/d17/CalibrationDataInterfaceROOT_8h" local="no">CalibrationDataInterfaceROOT.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1a135924bcf907b6279a47ff696f74ffb4" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Analysis::CalibrationDataInterfaceTool::m_EffcalibrationBName</definition>
        <argsstring></argsstring>
        <name>m_EffcalibrationBName</name>
        <briefdescription>
<para>calibration curves for b, c, and light-flavour jets </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/CalibrationDataInterface/CalibrationDataInterfaceTool.h" line="109" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/CalibrationDataInterface/CalibrationDataInterfaceTool.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1a909ea87a338dd857a670d27a84ee252c" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Analysis::CalibrationDataInterfaceTool::m_EffcalibrationCName</definition>
        <argsstring></argsstring>
        <name>m_EffcalibrationCName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/CalibrationDataInterface/CalibrationDataInterfaceTool.h" line="110" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/CalibrationDataInterface/CalibrationDataInterfaceTool.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1a48d21eb5c8360b313e29c2a0f8014de3" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Analysis::CalibrationDataInterfaceTool::m_EffcalibrationTName</definition>
        <argsstring></argsstring>
        <name>m_EffcalibrationTName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/CalibrationDataInterface/CalibrationDataInterfaceTool.h" line="111" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/CalibrationDataInterface/CalibrationDataInterfaceTool.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1aca4439942f568811dc88b1a30b2b0f56" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Analysis::CalibrationDataInterfaceTool::m_EffcalibrationLightName</definition>
        <argsstring></argsstring>
        <name>m_EffcalibrationLightName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/CalibrationDataInterface/CalibrationDataInterfaceTool.h" line="112" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/CalibrationDataInterface/CalibrationDataInterfaceTool.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1ab24efddb640d18205a106b54c265181f" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Analysis::CalibrationDataInterfaceTool::m_SFcalibrationBName</definition>
        <argsstring></argsstring>
        <name>m_SFcalibrationBName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/CalibrationDataInterface/CalibrationDataInterfaceTool.h" line="113" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/CalibrationDataInterface/CalibrationDataInterfaceTool.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1aff96edf7e4ec5860d973d5da12f4328d" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Analysis::CalibrationDataInterfaceTool::m_SFcalibrationCName</definition>
        <argsstring></argsstring>
        <name>m_SFcalibrationCName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/CalibrationDataInterface/CalibrationDataInterfaceTool.h" line="114" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/CalibrationDataInterface/CalibrationDataInterfaceTool.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1a93f3f89c77af91ef7eed0544a981556e" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Analysis::CalibrationDataInterfaceTool::m_SFcalibrationTName</definition>
        <argsstring></argsstring>
        <name>m_SFcalibrationTName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/CalibrationDataInterface/CalibrationDataInterfaceTool.h" line="115" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/CalibrationDataInterface/CalibrationDataInterfaceTool.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1a6a385971a7345746aa149fdb9743a1a0" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Analysis::CalibrationDataInterfaceTool::m_SFcalibrationLightName</definition>
        <argsstring></argsstring>
        <name>m_SFcalibrationLightName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/CalibrationDataInterface/CalibrationDataInterfaceTool.h" line="116" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/CalibrationDataInterface/CalibrationDataInterfaceTool.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1a105ffc1f51c911dabf65ac3ea1f1722a" prot="private" static="no" mutable="no">
        <type>ToolHandle&lt; CalibrationBroker &gt;</type>
        <definition>ToolHandle&lt;CalibrationBroker&gt; Analysis::CalibrationDataInterfaceTool::m_broker</definition>
        <argsstring></argsstring>
        <name>m_broker</name>
        <briefdescription>
<para>pointer to the performance broker </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/CalibrationDataInterface/CalibrationDataInterfaceTool.h" line="119" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/CalibrationDataInterface/CalibrationDataInterfaceTool.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1a0e17a29da3d64afc3c13ac63a4e8bd0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Analysis::CalibrationDataInterfaceTool::CalibrationDataInterfaceTool</definition>
        <argsstring>(const std::string &amp;, const std::string &amp;, const IInterface *)</argsstring>
        <name>CalibrationDataInterfaceTool</name>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <param>
          <type>const IInterface *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/CalibrationDataInterface/CalibrationDataInterfaceTool.h" line="64"/>
      </memberdef>
      <memberdef kind="function" id="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1ab1c26bb910c6db894e58991611b87e1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>Analysis::CalibrationDataInterfaceTool::~CalibrationDataInterfaceTool</definition>
        <argsstring>()</argsstring>
        <name>~CalibrationDataInterfaceTool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>default destructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/CalibrationDataInterface/CalibrationDataInterfaceTool.h" line="67" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/src/CalibrationDataInterfaceTool.cxx" bodystart="59" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1a2073c750abb54db0da1b4697fb70af7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>StatusCode</type>
        <definition>StatusCode Analysis::CalibrationDataInterfaceTool::queryInterface</definition>
        <argsstring>(const InterfaceID &amp;riid, void **ppvIf)</argsstring>
        <name>queryInterface</name>
        <param>
          <type>const InterfaceID &amp;</type>
          <declname>riid</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>ppvIf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>allow access to the <ref refid="d5/d8a/classAnalysis_1_1ICalibrationDataInterfaceTool" kindref="compound">ICalibrationDataInterfaceTool</ref> interface </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/CalibrationDataInterface/CalibrationDataInterfaceTool.h" line="70" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/src/CalibrationDataInterfaceTool.cxx" bodystart="64" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1a95b6a751fb8345eb9b2ffa9f3fda89ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>StatusCode</type>
        <definition>StatusCode Analysis::CalibrationDataInterfaceTool::initialize</definition>
        <argsstring>()</argsstring>
        <name>initialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>standard Athena-Algorithm method </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/CalibrationDataInterface/CalibrationDataInterfaceTool.h" line="73" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/src/CalibrationDataInterfaceTool.cxx" bodystart="77" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1ad1fa60d95e6e0e096bb84fa2e2d7ac92" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>StatusCode</type>
        <definition>StatusCode Analysis::CalibrationDataInterfaceTool::finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>standard Athena-Algorithm method </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/CalibrationDataInterface/CalibrationDataInterfaceTool.h" line="75" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/src/CalibrationDataInterfaceTool.cxx" bodystart="159" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1a9c1da19c5832baa9b9c96dce53fc99de" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>CalibResult</type>
        <definition>CalibResult Analysis::CalibrationDataInterfaceTool::getEfficiency</definition>
        <argsstring>(const Jet &amp;jet, const std::string &amp;label, const std::string &amp;OP, Uncertainty unc=None) const </argsstring>
        <name>getEfficiency</name>
        <reimplements refid="d5/d8a/classAnalysis_1_1ICalibrationDataInterfaceTool_1a889cdb7d20dbd38a3e13627b6d4ee130">getEfficiency</reimplements>
        <param>
          <type>const Jet &amp;</type>
          <declname>jet</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>OP</declname>
        </param>
        <param>
          <type><ref refid="d5/d8a/classAnalysis_1_1ICalibrationDataInterfaceTool_1aa20d1ba2acbc7774478f3aee87e41538" kindref="member">Uncertainty</ref></type>
          <declname>unc</declname>
          <defval>None</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Main interface methods accessing the flavour tagging performance information. Note that for both of the following, the label is assumed to adhere to the TruthInfo conventions (see package PhysicsAnalysis/JetTagging/JetTagInfo). efficiency retrieval </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/CalibrationDataInterface/CalibrationDataInterfaceTool.h" line="85"/>
      </memberdef>
      <memberdef kind="function" id="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1a2035ebb456b287cfb921409bc93119c4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>CalibResult</type>
        <definition>CalibResult Analysis::CalibrationDataInterfaceTool::getMCEfficiency</definition>
        <argsstring>(const Jet &amp;jet, const std::string &amp;label, const std::string &amp;OP, Uncertainty unc=None) const </argsstring>
        <name>getMCEfficiency</name>
        <reimplements refid="d5/d8a/classAnalysis_1_1ICalibrationDataInterfaceTool_1afc78b1129c69fd3582d46692c66adb42">getMCEfficiency</reimplements>
        <param>
          <type>const Jet &amp;</type>
          <declname>jet</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>OP</declname>
        </param>
        <param>
          <type><ref refid="d5/d8a/classAnalysis_1_1ICalibrationDataInterfaceTool_1aa20d1ba2acbc7774478f3aee87e41538" kindref="member">Uncertainty</ref></type>
          <declname>unc</declname>
          <defval>None</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&quot;MC&quot; efficiency retrieval </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/CalibrationDataInterface/CalibrationDataInterfaceTool.h" line="89"/>
      </memberdef>
      <memberdef kind="function" id="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1ae0a110fbf9a8ad4959fefe1a2953442a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>CalibResult</type>
        <definition>CalibResult Analysis::CalibrationDataInterfaceTool::getScaleFactor</definition>
        <argsstring>(const Jet &amp;jet, const std::string &amp;label, const std::string &amp;OP, Uncertainty unc=None) const </argsstring>
        <name>getScaleFactor</name>
        <reimplements refid="d5/d8a/classAnalysis_1_1ICalibrationDataInterfaceTool_1ade8ddfa58bc2b2a429778156be1971e3">getScaleFactor</reimplements>
        <param>
          <type>const Jet &amp;</type>
          <declname>jet</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>OP</declname>
        </param>
        <param>
          <type><ref refid="d5/d8a/classAnalysis_1_1ICalibrationDataInterfaceTool_1aa20d1ba2acbc7774478f3aee87e41538" kindref="member">Uncertainty</ref></type>
          <declname>unc</declname>
          <defval>None</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>efficiency scale factor retrieval </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/CalibrationDataInterface/CalibrationDataInterfaceTool.h" line="93"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1af89d8fb9a10094ac20c5bdcfa5adbb64" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Analysis::CalibrationDataInterfaceTool::registerObjects</definition>
        <argsstring>(const std::string &amp;folder, const std::string &amp;OP) const </argsstring>
        <name>registerObjects</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>folder</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>OP</declname>
        </param>
        <briefdescription>
<para>auxiliary function dealing with registration of objects </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/CalibrationDataInterface/CalibrationDataInterfaceTool.h" line="98"/>
      </memberdef>
      <memberdef kind="function" id="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1af38e4a42e88492bc84e0930ff0a396ad" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Analysis::CalibrationDataInterfaceTool::retrieveFunctionArguments</definition>
        <argsstring>(const Jet &amp;jet, const std::string &amp;object, Double_t *x) const </argsstring>
        <name>retrieveFunctionArguments</name>
        <param>
          <type>const Jet &amp;</type>
          <declname>jet</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>object</declname>
        </param>
        <param>
          <type>Double_t *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>auxiliary function to retrieve values of function arguments </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/CalibrationDataInterface/CalibrationDataInterfaceTool.h" line="101"/>
      </memberdef>
      <memberdef kind="function" id="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1aa81022ca2d080cedd57f8325da00d139" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Analysis::CalibrationDataInterfaceTool::makeVariables</definition>
        <argsstring>(const Jet &amp;jet, CalibrationDataVariables &amp;x) const </argsstring>
        <name>makeVariables</name>
        <param>
          <type>const Jet &amp;</type>
          <declname>jet</declname>
        </param>
        <param>
          <type><ref refid="d4/db4/structAnalysis_1_1CalibrationDataVariables" kindref="compound">CalibrationDataVariables</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>auxiliary function to create the intermediate struct needed for the data layer </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/CalibrationDataInterface/CalibrationDataInterfaceTool.h" line="104" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/src/CalibrationDataInterfaceTool.cxx" bodystart="335" bodyend="342"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>hold: in particular, &quot;channel&quot; (jet author) aliasing is possible. The difference is that run-time information is to be provided in a text file to be interpreted using ROOT&apos;s TEnv and</para><para>DB representation (all residing under a common root folder): .../&lt;jet author&gt;=&quot;&quot;&gt;/&lt;tagger&gt;/&lt;operating point&gt;=&quot;&quot;&gt;/&lt;flavour&gt;/&lt;object name&gt;=&quot;&quot;&gt; where &lt;operating point&gt;=&quot;&quot;&gt; can be a weight cut (represented as a string, with the period replaced with an underscore) or the string &quot;Continuous&quot; (for continuous calibration purposes).</para><para><simplesect kind="author"><para>Frank Filthaut &lt;<ulink url="mailto:F.Filthaut@science.ru.nl">F.Filthaut@science.ru.nl</ulink>&gt;</para></simplesect>
This tool provides an interface to flavour tagging performance estimates.</para><para><ref refid="d4/dc4/structA" kindref="compound">A</ref> separate instance should be used for each different tagging algorithm. For each instance, all appropriate jet collections and tagger operating points need to be specified.</para><para>The model:<itemizedlist>
<listitem><para>b-jets: data-MC scale factor (factorised 2D function of eta, pt) MC reference the product is the data efficiency; alternatively, the scale factor may be used</para></listitem><listitem><para>c-jets: as for b-jets, but with a different MC reference</para></listitem><listitem><para>light-flavour jets: data-MC scale factor (factorised 2D function of eta, pt) MC reference Besides the results, it is also possible to retrieve associated uncertainties. This need not be configured, and a choice as to the uncertainty component can be made on a case-by-case basis.</para></listitem></itemizedlist>
</para><para>To retrieve results from COOL, a CalibrationBroker instance is used (a separate one from the one used for tagger weight distributions). This allows to use the CalibrationBroker&apos;s channel aliasing (although possibly with different aliases). Of course it is up to the user to verify that the aliasing is appropriate!</para><para>DB representation (all residing under a common root folder): .../&lt;jet author&gt;=&quot;&quot;&gt;/&lt;tagger&gt;/&lt;operating point&gt;=&quot;&quot;&gt;/&lt;flavour&gt;/&lt;object name&gt;=&quot;&quot;&gt;</para><para><simplesect kind="author"><para>Frank Filthaut &lt;<ulink url="mailto:F.Filthaut@science.ru.nl">F.Filthaut@science.ru.nl</ulink>&gt; </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="2936">
        <label>Analysis::CalibrationDataInterfaceTool</label>
        <link refid="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool"/>
        <childnode refid="2937" relation="public-inheritance">
        </childnode>
        <childnode refid="2938" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2938">
        <label>Analysis::CalibrationDataInterfaceBase</label>
        <link refid="d7/d79/classAnalysis_1_1CalibrationDataInterfaceBase"/>
      </node>
      <node id="2937">
        <label>Analysis::ICalibrationDataInterfaceTool</label>
        <link refid="d5/d8a/classAnalysis_1_1ICalibrationDataInterfaceTool"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2939">
        <label>Analysis::CalibrationDataInterfaceTool</label>
        <link refid="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool"/>
        <childnode refid="2940" relation="public-inheritance">
        </childnode>
        <childnode refid="2941" relation="public-inheritance">
        </childnode>
        <childnode refid="2942" relation="usage">
          <edgelabel>m_SFcalibrationBName</edgelabel>
          <edgelabel>m_SFcalibrationCName</edgelabel>
          <edgelabel>m_EffcalibrationTName</edgelabel>
          <edgelabel>m_EffcalibrationLightName</edgelabel>
          <edgelabel>m_EffcalibrationBName</edgelabel>
          <edgelabel>m_SFcalibrationLightName</edgelabel>
          <edgelabel>m_SFcalibrationTName</edgelabel>
          <edgelabel>m_EffcalibrationCName</edgelabel>
        </childnode>
      </node>
      <node id="2942">
        <label>string</label>
      </node>
      <node id="2941">
        <label>Analysis::CalibrationDataInterfaceBase</label>
        <link refid="d7/d79/classAnalysis_1_1CalibrationDataInterfaceBase"/>
        <childnode refid="2942" relation="usage">
          <edgelabel>m_taggerName</edgelabel>
        </childnode>
      </node>
      <node id="2940">
        <label>Analysis::ICalibrationDataInterfaceTool</label>
        <link refid="d5/d8a/classAnalysis_1_1ICalibrationDataInterfaceTool"/>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/CalibrationDataInterface/CalibrationDataInterfaceTool.h" line="62" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CalibrationDataInterface/CalibrationDataInterface/CalibrationDataInterfaceTool.h" bodystart="60" bodyend="121"/>
    <listofallmembers>
      <member refid="d7/d79/classAnalysis_1_1CalibrationDataInterfaceBase_1a33272c3494e5adc11721f102874ba8a7" prot="public" virt="non-virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>CalibrationDataInterfaceBase</name></member>
      <member refid="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1a0e17a29da3d64afc3c13ac63a4e8bd0f" prot="public" virt="non-virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>CalibrationDataInterfaceTool</name></member>
      <member refid="d7/d79/classAnalysis_1_1CalibrationDataInterfaceBase_1a1de0612917be0100595b95023747aff4" prot="protected" virt="non-virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>combinedUncertainty</name></member>
      <member refid="d7/d79/classAnalysis_1_1CalibrationDataInterfaceBase_1a2f2161524ad7e30fcff74229ffa04eb9" prot="public" virt="non-virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>EffCalibrationName</name></member>
      <member refid="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1ad1fa60d95e6e0e096bb84fa2e2d7ac92" prot="public" virt="virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>finalize</name></member>
      <member refid="d7/d79/classAnalysis_1_1CalibrationDataInterfaceBase_1a176c1cc5a166749bdd34070a2312ec45" prot="protected" virt="non-virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>getBasename</name></member>
      <member refid="d7/d79/classAnalysis_1_1CalibrationDataInterfaceBase_1af746489cfc49e99bffe6841dfa44795d" prot="protected" virt="non-virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>getContainername</name></member>
      <member refid="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1a9c1da19c5832baa9b9c96dce53fc99de" prot="public" virt="virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>getEfficiency</name></member>
      <member refid="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1a2035ebb456b287cfb921409bc93119c4" prot="public" virt="virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>getMCEfficiency</name></member>
      <member refid="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1ae0a110fbf9a8ad4959fefe1a2953442a" prot="public" virt="virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>getScaleFactor</name></member>
      <member refid="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1a95b6a751fb8345eb9b2ffa9f3fda89ba" prot="public" virt="virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>initialize</name></member>
      <member refid="d5/d8a/classAnalysis_1_1ICalibrationDataInterfaceTool_1a1a28837f3052d52b482bbc3f5f493dad" prot="public" virt="non-virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>interfaceID</name></member>
      <member refid="d7/d79/classAnalysis_1_1CalibrationDataInterfaceBase_1aa50dccfee6a2d14d929f693642540964a07dd427b027dc6b695916706dbf5d54d" prot="public" virt="non-virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>kAbsEta</name></member>
      <member refid="d7/d79/classAnalysis_1_1CalibrationDataInterfaceBase_1aa50dccfee6a2d14d929f693642540964acef1d0b513512fa006035041054871a6" prot="public" virt="non-virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>kEta</name></member>
      <member refid="d7/d79/classAnalysis_1_1CalibrationDataInterfaceBase_1aa50dccfee6a2d14d929f693642540964ab86e922891732b2421e7edbf6c220309" prot="public" virt="non-virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>kPt</name></member>
      <member refid="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1a105ffc1f51c911dabf65ac3ea1f1722a" prot="private" virt="non-virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>m_broker</name></member>
      <member refid="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1a135924bcf907b6279a47ff696f74ffb4" prot="private" virt="non-virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>m_EffcalibrationBName</name></member>
      <member refid="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1a909ea87a338dd857a670d27a84ee252c" prot="private" virt="non-virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>m_EffcalibrationCName</name></member>
      <member refid="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1aca4439942f568811dc88b1a30b2b0f56" prot="private" virt="non-virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>m_EffcalibrationLightName</name></member>
      <member refid="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1a48d21eb5c8360b313e29c2a0f8014de3" prot="private" virt="non-virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>m_EffcalibrationTName</name></member>
      <member refid="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1ab24efddb640d18205a106b54c265181f" prot="private" virt="non-virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>m_SFcalibrationBName</name></member>
      <member refid="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1aff96edf7e4ec5860d973d5da12f4328d" prot="private" virt="non-virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>m_SFcalibrationCName</name></member>
      <member refid="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1a6a385971a7345746aa149fdb9743a1a0" prot="private" virt="non-virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>m_SFcalibrationLightName</name></member>
      <member refid="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1a93f3f89c77af91ef7eed0544a981556e" prot="private" virt="non-virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>m_SFcalibrationTName</name></member>
      <member refid="d7/d79/classAnalysis_1_1CalibrationDataInterfaceBase_1a18a603e78a1044c40db2ed183a7bd868" prot="protected" virt="non-virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>m_taggerName</name></member>
      <member refid="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1aa81022ca2d080cedd57f8325da00d139" prot="private" virt="non-virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>makeVariables</name></member>
      <member refid="d5/d8a/classAnalysis_1_1ICalibrationDataInterfaceTool_1aa20d1ba2acbc7774478f3aee87e41538ad3a022dcd76a69713f8573d48de576cb" prot="public" virt="non-virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>None</name></member>
      <member refid="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1a2073c750abb54db0da1b4697fb70af7f" prot="public" virt="non-virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>queryInterface</name></member>
      <member refid="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1af89d8fb9a10094ac20c5bdcfa5adbb64" prot="private" virt="non-virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>registerObjects</name></member>
      <member refid="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1af38e4a42e88492bc84e0930ff0a396ad" prot="private" virt="non-virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>retrieveFunctionArguments</name></member>
      <member refid="d7/d79/classAnalysis_1_1CalibrationDataInterfaceBase_1a5a1d2fe79737698442b37445d06a5d7c" prot="public" virt="non-virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>setEffCalibrationNames</name></member>
      <member refid="d7/d79/classAnalysis_1_1CalibrationDataInterfaceBase_1a7791fe6577f7f1f03f72aaf2da573f38" prot="public" virt="non-virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>setSFCalibrationNames</name></member>
      <member refid="d7/d79/classAnalysis_1_1CalibrationDataInterfaceBase_1a6175313f3e363300ae28338a02a1dee0" prot="public" virt="non-virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>SFCalibrationName</name></member>
      <member refid="d5/d8a/classAnalysis_1_1ICalibrationDataInterfaceTool_1aa20d1ba2acbc7774478f3aee87e41538ab5e8b9308b1f1eedb8a444283e2dafd4" prot="public" virt="non-virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>Statistical</name></member>
      <member refid="d5/d8a/classAnalysis_1_1ICalibrationDataInterfaceTool_1aa20d1ba2acbc7774478f3aee87e41538af2b305b932263c3c3ae5e1421af5536a" prot="public" virt="non-virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>Systematic</name></member>
      <member refid="d5/d8a/classAnalysis_1_1ICalibrationDataInterfaceTool_1aa20d1ba2acbc7774478f3aee87e41538ac5887c9db23014cd635af557b5728e87" prot="public" virt="non-virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>Total</name></member>
      <member refid="d5/d8a/classAnalysis_1_1ICalibrationDataInterfaceTool_1aa20d1ba2acbc7774478f3aee87e41538" prot="public" virt="non-virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>Uncertainty</name></member>
      <member refid="d7/d79/classAnalysis_1_1CalibrationDataInterfaceBase_1aa50dccfee6a2d14d929f693642540964" prot="public" virt="non-virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>variableType</name></member>
      <member refid="d7/d79/classAnalysis_1_1CalibrationDataInterfaceBase_1a9c18fe9b169bb9a3f48c6e1d4f848dfe" prot="public" virt="pure-virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>~CalibrationDataInterfaceBase</name></member>
      <member refid="d6/d97/classAnalysis_1_1CalibrationDataInterfaceTool_1ab1c26bb910c6db894e58991611b87e1e" prot="public" virt="virtual"><scope>Analysis::CalibrationDataInterfaceTool</scope><name>~CalibrationDataInterfaceTool</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
