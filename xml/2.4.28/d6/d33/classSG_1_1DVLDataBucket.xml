<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d6/d33/classSG_1_1DVLDataBucket" kind="class" prot="public">
    <compoundname>SG::DVLDataBucket</compoundname>
    <derivedcompoundref refid="de/d27/classSG_1_1DVLConstDataListBucket" prot="public" virt="non-virtual">SG::DVLConstDataListBucket&lt; T &gt;</derivedcompoundref>
    <includes refid="d4/d16/DVLDataBucket_8h" local="no">DVLDataBucket.h</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="d6/d33/classSG_1_1DVLDataBucket_1ad9ded1f25cf4566831846a7f5bdb648a" prot="private" static="no">
        <type>std::pair&lt; <ref refid="da/d8a/classDataModel__detail_1_1DVLInfoBase" kindref="compound">DataModel_detail::DVLInfoBase</ref> *, void * &gt;</type>
        <definition>typedef std::pair&lt;DataModel_detail::DVLInfoBase*, void*&gt; SG::DVLDataBucket&lt; T &gt;::ent_t</definition>
        <argsstring></argsstring>
        <name>ent_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/DVLDataBucket.h" line="111" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/DVLDataBucket.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d6/d33/classSG_1_1DVLDataBucket_1afdbe4b0c6630f4ba315be068e57905e1" prot="private" static="no">
        <type>std::vector&lt; ent_t &gt;</type>
        <definition>typedef std::vector&lt;ent_t&gt; SG::DVLDataBucket&lt; T &gt;::vec_t</definition>
        <argsstring></argsstring>
        <name>vec_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/DVLDataBucket.h" line="112" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/DVLDataBucket.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d6/d33/classSG_1_1DVLDataBucket_1ac919e98600170aeb71ee0141f330859e" prot="private" static="no" mutable="yes">
        <type>vec_t</type>
        <definition>vec_t SG::DVLDataBucket&lt; T &gt;::m_copies</definition>
        <argsstring></argsstring>
        <name>m_copies</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/DVLDataBucket.h" line="113" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/DVLDataBucket.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d6/d33/classSG_1_1DVLDataBucket_1aae335870e4f81940ad81a38c9b55fafa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SG::DVLDataBucket&lt; T &gt;::DVLDataBucket</definition>
        <argsstring>()</argsstring>
        <name>DVLDataBucket</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/DVLDataBucket.h" line="46" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/DVLDataBucket.h" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="d6/d33/classSG_1_1DVLDataBucket_1a23743696d7a66b7a4035c685a768123b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SG::DVLDataBucket&lt; T &gt;::DVLDataBucket</definition>
        <argsstring>(T *data)</argsstring>
        <name>DVLDataBucket</name>
        <param>
          <type><ref refid="d1/def/classT" kindref="compound">T</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Constructor from a payload object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Object to hold in the bucket. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/DVLDataBucket.h" line="53" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/DVLDataBucket.icc" bodystart="24" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="d6/d33/classSG_1_1DVLDataBucket_1ae0b51dfa3d55781bbdddfe59374f41f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SG::DVLDataBucket&lt; T &gt;::DVLDataBucket</definition>
        <argsstring>(const DVLDataBucket &amp;other)</argsstring>
        <name>DVLDataBucket</name>
        <param>
          <type>const <ref refid="d6/d33/classSG_1_1DVLDataBucket" kindref="compound">DVLDataBucket</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Bucket to copy. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/DVLDataBucket.h" line="69" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/DVLDataBucket.icc" bodystart="48" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="d6/d33/classSG_1_1DVLDataBucket_1a11d2c323a78680e01a6ef292ef548394" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SG::DVLDataBucket&lt; T &gt;::~DVLDataBucket</definition>
        <argsstring>()</argsstring>
        <name>~DVLDataBucket</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/DVLDataBucket.h" line="75" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/DVLDataBucket.icc" bodystart="64" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="d6/d33/classSG_1_1DVLDataBucket_1aef49c6cc821781ae9df143f08d29fa9e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void *</type>
        <definition>void * SG::DVLDataBucket&lt; T &gt;::cast</definition>
        <argsstring>(CLID clid, IRegisterTransient *irt=0, bool isConst=true) const </argsstring>
        <name>cast</name>
        <param>
          <type><ref refid="d0/d66/ClassID__traits_8h_1a2d7068444af754bf943f1dcbc5893801" kindref="member">CLID</ref></type>
          <declname>clid</declname>
        </param>
        <param>
          <type>IRegisterTransient *</type>
          <declname>irt</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>isConst</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Return the contents of the <computeroutput><ref refid="d7/d54/classSG_1_1DataBucket" kindref="compound">DataBucket</ref></computeroutput>, converted to type given by <emphasis>clid</emphasis>. Note that only derived-&gt;base conversions are allowed here. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>clid</parametername>
</parameternamelist>
<parameterdescription>
<para>The class ID to which to convert. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>irt</parametername>
</parameternamelist>
<parameterdescription>
<para>To be called if we make a new instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>isConst</parametername>
</parameternamelist>
<parameterdescription>
<para>True if the object being converted is regarded as const. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/DVLDataBucket.h" line="87" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/DVLDataBucket.icc" bodystart="84" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="d6/d33/classSG_1_1DVLDataBucket_1aa78756ca6a962af794243c115e595a9b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void *</type>
        <definition>void * SG::DVLDataBucket&lt; T &gt;::cast</definition>
        <argsstring>(const std::type_info &amp;tinfo, IRegisterTransient *irt=0, bool isConst=true) const </argsstring>
        <name>cast</name>
        <param>
          <type>const std::type_info &amp;</type>
          <declname>tinfo</declname>
        </param>
        <param>
          <type>IRegisterTransient *</type>
          <declname>irt</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>isConst</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Return the contents of the <computeroutput><ref refid="d7/d54/classSG_1_1DataBucket" kindref="compound">DataBucket</ref></computeroutput>, converted to type given by <emphasis>std::type_info</emphasis>. Note that only derived-&gt;base conversions are allowed here. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>clid</parametername>
</parameternamelist>
<parameterdescription>
<para>The <emphasis>std::type_info</emphasis> of the type to which to convert. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>irt</parametername>
</parameternamelist>
<parameterdescription>
<para>To be called if we make a new instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>isConst</parametername>
</parameternamelist>
<parameterdescription>
<para>True if the object being converted is regarded as const. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/DVLDataBucket.h" line="100" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/DVLDataBucket.icc" bodystart="129" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="d6/d33/classSG_1_1DVLDataBucket_1a29b9b50fbf6d1052ee2b4952f35c0b2f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="d6/d33/classSG_1_1DVLDataBucket" kindref="compound">DVLDataBucket</ref> *</type>
        <definition>DVLDataBucket&lt; T &gt; * SG::DVLDataBucket&lt; T &gt;::clone</definition>
        <argsstring>() const </argsstring>
        <name>clone</name>
        <briefdescription>
<para>Return a new <computeroutput><ref refid="d7/d54/classSG_1_1DataBucket" kindref="compound">DataBucket</ref></computeroutput> whose payload has been cloned from the original one. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/DVLDataBucket.h" line="107" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/DVLDataBucket.icc" bodystart="170" bodyend="173"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d6/d33/classSG_1_1DVLDataBucket_1a392ba5a0b0c26f89c0063377bc93de1f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d33/classSG_1_1DVLDataBucket" kindref="compound">DVLDataBucket</ref> &amp;</type>
        <definition>DVLDataBucket&amp; SG::DVLDataBucket&lt; T &gt;::operator=</definition>
        <argsstring>(const DVLDataBucket &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="d6/d33/classSG_1_1DVLDataBucket" kindref="compound">DVLDataBucket</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/DVLDataBucket.h" line="116"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="d4/dc4/structA" kindref="compound">A</ref> <computeroutput><ref refid="d7/d54/classSG_1_1DataBucket" kindref="compound">DataBucket</ref></computeroutput> specialized for <computeroutput>DataVector/<computeroutput><ref refid="d9/dfb/classDataList" kindref="compound">DataList</ref></computeroutput>.</computeroutput> </para>    </briefdescription>
    <detaileddescription>
<para><computeroutput><ref refid="d0/d4d/classDataVector" kindref="compound">DataVector</ref></computeroutput> and <computeroutput><ref refid="d9/dfb/classDataList" kindref="compound">DataList</ref></computeroutput> have some special conversion requirements.</para><para>In particular, we may have a situation where we&apos;re asked to convert from <computeroutput><ref refid="d0/d4d/classDataVector" kindref="compound">DataVector</ref>&lt;<ref refid="d7/db3/structD" kindref="compound">D</ref>&gt;</computeroutput> to <computeroutput><ref refid="d0/d4d/classDataVector" kindref="compound">DataVector</ref>&lt;<ref refid="d9/db3/structB" kindref="compound">B</ref>&gt;</computeroutput>, where these two classes are not related by inheritance, but <computeroutput><ref refid="d7/db3/structD" kindref="compound">D</ref></computeroutput> derived from . (In practice, this arises when one has multiple inheritance, and can&apos;t mirror both arms with <computeroutput>DataVector/<computeroutput><ref refid="d9/dfb/classDataList" kindref="compound">DataList</ref></computeroutput>.</computeroutput>)</para><para>This <computeroutput><ref refid="d7/d54/classSG_1_1DataBucket" kindref="compound">DataBucket</ref></computeroutput> allows such conversions to happen by making a copy of the container (as a view container) and converting the contained pointers. The new instance remains owned by the <computeroutput><ref refid="d7/d54/classSG_1_1DataBucket" kindref="compound">DataBucket</ref></computeroutput>. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="5344">
        <label>SG::DVLConstDataListBucket&lt; T &gt;</label>
        <link refid="de/d27/classSG_1_1DVLConstDataListBucket"/>
        <childnode refid="5343" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5343">
        <label>SG::DVLDataBucket&lt; T &gt;</label>
        <link refid="d6/d33/classSG_1_1DVLDataBucket"/>
      </node>
    </inheritancegraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/DVLDataBucket.h" line="41" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/DVLDataBucket.h" bodystart="39" bodyend="117"/>
    <listofallmembers>
      <member refid="d6/d33/classSG_1_1DVLDataBucket_1aef49c6cc821781ae9df143f08d29fa9e" prot="public" virt="virtual"><scope>SG::DVLDataBucket</scope><name>cast</name></member>
      <member refid="d6/d33/classSG_1_1DVLDataBucket_1aa78756ca6a962af794243c115e595a9b" prot="public" virt="virtual"><scope>SG::DVLDataBucket</scope><name>cast</name></member>
      <member refid="d6/d33/classSG_1_1DVLDataBucket_1a29b9b50fbf6d1052ee2b4952f35c0b2f" prot="public" virt="virtual"><scope>SG::DVLDataBucket</scope><name>clone</name></member>
      <member refid="d6/d33/classSG_1_1DVLDataBucket_1aae335870e4f81940ad81a38c9b55fafa" prot="public" virt="non-virtual"><scope>SG::DVLDataBucket</scope><name>DVLDataBucket</name></member>
      <member refid="d6/d33/classSG_1_1DVLDataBucket_1a23743696d7a66b7a4035c685a768123b" prot="public" virt="non-virtual"><scope>SG::DVLDataBucket</scope><name>DVLDataBucket</name></member>
      <member refid="d6/d33/classSG_1_1DVLDataBucket_1ae0b51dfa3d55781bbdddfe59374f41f3" prot="public" virt="non-virtual"><scope>SG::DVLDataBucket</scope><name>DVLDataBucket</name></member>
      <member refid="d6/d33/classSG_1_1DVLDataBucket_1ad9ded1f25cf4566831846a7f5bdb648a" prot="private" virt="non-virtual"><scope>SG::DVLDataBucket</scope><name>ent_t</name></member>
      <member refid="d6/d33/classSG_1_1DVLDataBucket_1ac919e98600170aeb71ee0141f330859e" prot="private" virt="non-virtual"><scope>SG::DVLDataBucket</scope><name>m_copies</name></member>
      <member refid="d6/d33/classSG_1_1DVLDataBucket_1a392ba5a0b0c26f89c0063377bc93de1f" prot="private" virt="non-virtual"><scope>SG::DVLDataBucket</scope><name>operator=</name></member>
      <member refid="d6/d33/classSG_1_1DVLDataBucket_1afdbe4b0c6630f4ba315be068e57905e1" prot="private" virt="non-virtual"><scope>SG::DVLDataBucket</scope><name>vec_t</name></member>
      <member refid="d6/d33/classSG_1_1DVLDataBucket_1a11d2c323a78680e01a6ef292ef548394" prot="public" virt="non-virtual"><scope>SG::DVLDataBucket</scope><name>~DVLDataBucket</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
