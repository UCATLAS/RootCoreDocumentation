<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d6/d59/classxAOD_1_1TAuxStore_1_1TBranchHandle" kind="class" prot="private">
    <compoundname>xAOD::TAuxStore::TBranchHandle</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d6/d59/classxAOD_1_1TAuxStore_1_1TBranchHandle_1a578c0ce44029bbf82c7dec0a6f810336" prot="private" static="no" mutable="no">
        <type>::TBranch *</type>
        <definition>::TBranch* xAOD::TAuxStore::TBranchHandle::m_branch</definition>
        <argsstring></argsstring>
        <name>m_branch</name>
        <briefdescription>
<para>The branch that this object is handling. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/TAuxStore.h" line="285" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/TAuxStore.h" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d59/classxAOD_1_1TAuxStore_1_1TBranchHandle_1aa84bd9c3356182e2513dec5ad9700208" prot="private" static="no" mutable="no">
        <type>void *</type>
        <definition>void* xAOD::TAuxStore::TBranchHandle::m_object</definition>
        <argsstring></argsstring>
        <name>m_object</name>
        <briefdescription>
<para>The pointer to the object in memory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/TAuxStore.h" line="287" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/TAuxStore.h" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d59/classxAOD_1_1TAuxStore_1_1TBranchHandle_1a5efca0e3544d1dc0cad448c8f4dbd0b1" prot="private" static="no" mutable="no">
        <type>::Bool_t</type>
        <definition>::Bool_t xAOD::TAuxStore::TBranchHandle::m_static</definition>
        <argsstring></argsstring>
        <name>m_static</name>
        <briefdescription>
<para>Is this a static variable in question? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/TAuxStore.h" line="289" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/TAuxStore.h" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d59/classxAOD_1_1TAuxStore_1_1TBranchHandle_1af881f32564bee693f43a4a16f6d8e451" prot="private" static="no" mutable="no">
        <type>::Bool_t</type>
        <definition>::Bool_t xAOD::TAuxStore::TBranchHandle::m_primitive</definition>
        <argsstring></argsstring>
        <name>m_primitive</name>
        <briefdescription>
<para>Is this a primitive variable? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/TAuxStore.h" line="291" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/TAuxStore.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d59/classxAOD_1_1TAuxStore_1_1TBranchHandle_1ac0fc52fa0e9b03c8497dbc8f09ac33a6" prot="private" static="no" mutable="no">
        <type>const std::type_info *</type>
        <definition>const std::type_info* xAOD::TAuxStore::TBranchHandle::m_typeInfo</definition>
        <argsstring></argsstring>
        <name>m_typeInfo</name>
        <briefdescription>
<para><ref refid="dd/dc8/namespacexAOD_1_1Type" kindref="compound">Type</ref> info for the variable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/TAuxStore.h" line="293" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/TAuxStore.h" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d59/classxAOD_1_1TAuxStore_1_1TBranchHandle_1ac078f76f48585850871a3192e9689fe3" prot="private" static="no" mutable="no">
        <type>::Bool_t</type>
        <definition>::Bool_t xAOD::TAuxStore::TBranchHandle::m_needsRead</definition>
        <argsstring></argsstring>
        <name>m_needsRead</name>
        <briefdescription>
<para>Read status flag. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/TAuxStore.h" line="295" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/TAuxStore.h" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d59/classxAOD_1_1TAuxStore_1_1TBranchHandle_1a7d410f532d500348c018a9ce3acba5c4" prot="private" static="no" mutable="no">
        <type><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member">SG::auxid_t</ref></type>
        <definition>SG::auxid_t xAOD::TAuxStore::TBranchHandle::m_auxid</definition>
        <argsstring></argsstring>
        <name>m_auxid</name>
        <briefdescription>
<para>The auxiliary ID of the branch. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/TAuxStore.h" line="297" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/TAuxStore.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d59/classxAOD_1_1TAuxStore_1_1TBranchHandle_1a1dca35fbc912fd20f317f29c40ce84d6" prot="private" static="no" mutable="no">
        <type>const std::string *</type>
        <definition>const std::string* xAOD::TAuxStore::TBranchHandle::m_prefix</definition>
        <argsstring></argsstring>
        <name>m_prefix</name>
        <briefdescription>
<para>Pointer to the m_prefix string of the parent object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/TAuxStore.h" line="299" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/TAuxStore.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d6/d59/classxAOD_1_1TAuxStore_1_1TBranchHandle_1a760711698ae6db56dc936c919b7a475e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xAOD::TAuxStore::TBranchHandle::TBranchHandle</definition>
        <argsstring>(::Bool_t staticBranch,::Bool_t primitiveBranch, const std::type_info *ti, void *obj, SG::auxid_t auxid, const std::string *prefix)</argsstring>
        <name>TBranchHandle</name>
        <param>
          <type>::Bool_t</type>
          <declname>staticBranch</declname>
        </param>
        <param>
          <type>::Bool_t</type>
          <declname>primitiveBranch</declname>
        </param>
        <param>
          <type>const std::type_info *</type>
          <declname>ti</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member">SG::auxid_t</ref></type>
          <declname>auxid</declname>
        </param>
        <param>
          <type>const std::string *</type>
          <declname>prefix</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/TAuxStore.h" line="266" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/Root/TAuxStore.cxx" bodystart="1707" bodyend="1717"/>
      </memberdef>
      <memberdef kind="function" id="d6/d59/classxAOD_1_1TAuxStore_1_1TBranchHandle_1abfb3849721b2c0e00fe78ab996f5d034" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>::Int_t</type>
        <definition>Int_t xAOD::TAuxStore::TBranchHandle::getEntry</definition>
        <argsstring>(::Long64_t entry)</argsstring>
        <name>getEntry</name>
        <param>
          <type>::Long64_t</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
<para>Get an entry from the branch. </para>        </briefdescription>
        <detaileddescription>
<para>This function takes care of implementing just-in-time reading of branches for us.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>entry</parametername>
</parameternamelist>
<parameterdescription>
<para>The entry to read in for the managed branch </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of bytes read. <ref refid="d4/dc4/structA" kindref="compound">A</ref> negative number in case of error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/TAuxStore.h" line="269" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/Root/TAuxStore.cxx" bodystart="1725" bodyend="1759"/>
      </memberdef>
      <memberdef kind="function" id="d6/d59/classxAOD_1_1TAuxStore_1_1TBranchHandle_1aaf1732c81a9f0ca2cf2f228ee46ea2e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>::TBranch **</type>
        <definition>TBranch ** xAOD::TAuxStore::TBranchHandle::branchPtr</definition>
        <argsstring>()</argsstring>
        <name>branchPtr</name>
        <briefdescription>
<para>Get a pointer to the branch being held. </para>        </briefdescription>
        <detaileddescription>
<para>No magic here. <computeroutput>TTree::SetBranchAddress</computeroutput> needs a pointer to a <computeroutput>TBranch</computeroutput> pointer. This function just makes sure that we can give it such a pointer, which will stay valid during the job.</para><para><simplesect kind="return"><para><ref refid="d4/dc4/structA" kindref="compound">A</ref> pointer to the branch object handled by this object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/TAuxStore.h" line="271" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/Root/TAuxStore.cxx" bodystart="1767" bodyend="1770"/>
      </memberdef>
      <memberdef kind="function" id="d6/d59/classxAOD_1_1TAuxStore_1_1TBranchHandle_1a68c6517d37ceb8a0d250c1c6260d8159" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * xAOD::TAuxStore::TBranchHandle::objectPtr</definition>
        <argsstring>()</argsstring>
        <name>objectPtr</name>
        <briefdescription>
<para>Get a pointer to the object. </para>        </briefdescription>
        <detaileddescription>
<para>This function is used in the implementation of the IAuxStoreIO interface. In there we just need a simple pointer to the object, we don&apos;t care about ROOT&apos;s idiosyncracies.</para><para><simplesect kind="return"><para><ref refid="d4/dc4/structA" kindref="compound">A</ref> pointer to the object in memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/TAuxStore.h" line="273" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/Root/TAuxStore.cxx" bodystart="1778" bodyend="1781"/>
      </memberdef>
      <memberdef kind="function" id="d6/d59/classxAOD_1_1TAuxStore_1_1TBranchHandle_1a63f9d2a0f6eccf0708e233f4342d7861" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * xAOD::TAuxStore::TBranchHandle::inputObjectPtr</definition>
        <argsstring>()</argsstring>
        <name>inputObjectPtr</name>
        <briefdescription>
<para>Get a pointer to the object (or its pointer) in memory for reading. </para>        </briefdescription>
        <detaileddescription>
<para>This is a tricky one. When reading a single sub-branch of a branch that was written using an auxiliary container with direct ROOT I/O, TTree expects us to give it a simple pointer to the object that it should fill with content. But when reading a top level branch, like the dynamically created branches that we make, TTree needs to receive a pointer to a pointer.</para><para>Also, when reading a primitive type, ROOT also expects a simple pointer to the primitive variable in memory.</para><para>This function returns the correct kind of pointer for <computeroutput>TTree::SetBranchAddress</computeroutput> in all situations.</para><para><simplesect kind="return"><para>The pointer to be given to <computeroutput>TTree::SetBranchAddress</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/TAuxStore.h" line="275" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/Root/TAuxStore.cxx" bodystart="1798" bodyend="1806"/>
      </memberdef>
      <memberdef kind="function" id="d6/d59/classxAOD_1_1TAuxStore_1_1TBranchHandle_1aa763c4c67146c44afc10ca5c309f733e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * xAOD::TAuxStore::TBranchHandle::outputObjectPtr</definition>
        <argsstring>()</argsstring>
        <name>outputObjectPtr</name>
        <briefdescription>
<para>Get a pointer to the object (or its pointer) in memory for writing. </para>        </briefdescription>
        <detaileddescription>
<para>This is a slightly simplified version of GetInputObjectPtr(), for the case when we need to write a branch, and have to pass a pointer to <computeroutput>TTree::Branch</computeroutput>. In this case we don&apos;t need to be mindful of whether the variable was read as a static or dynamic variable. The only interesting thing is if the variable is of a primitive or an object type.</para><para><simplesect kind="return"><para>The pointer to be given to <computeroutput>TTree::Branch</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/TAuxStore.h" line="277" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/Root/TAuxStore.cxx" bodystart="1817" bodyend="1825"/>
      </memberdef>
      <memberdef kind="function" id="d6/d59/classxAOD_1_1TAuxStore_1_1TBranchHandle_1a1d5a0eb98ab629b738de19371456d3f0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::type_info *</type>
        <definition>const std::type_info * xAOD::TAuxStore::TBranchHandle::typeInfo</definition>
        <argsstring>() const </argsstring>
        <name>typeInfo</name>
        <briefdescription>
<para>Get the type of the variable in memory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/TAuxStore.h" line="279" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/Root/TAuxStore.cxx" bodystart="1827" bodyend="1830"/>
      </memberdef>
      <memberdef kind="function" id="d6/d59/classxAOD_1_1TAuxStore_1_1TBranchHandle_1ab0f161821563bae9d07cdf5ba2877c35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::TAuxStore::TBranchHandle::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
<para>Tell the object that the branch contents need to be re-read. </para>        </briefdescription>
        <detaileddescription>
<para>After TEvent::Fill is called, the <ref refid="d7/d77/classxAOD_1_1TAuxStore" kindref="compound">TAuxStore</ref> objects used for data writing are cleared. Since <ref refid="de/d95/classxAOD_1_1TEvent" kindref="compound">TEvent</ref> doesn&apos;t know if the object is also used to read information or not. (If it&apos;s just used for writing, then this explicit clearing is mandatory.)</para><para>In case the user wants to continue processing the same event after the fill() call (because for instance the code is writing multiple trees), then we need to be aware that the variable needs to be re-read from the input to be in a good shape for the next write operation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/TAuxStore.h" line="281" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/Root/TAuxStore.cxx" bodystart="1843" bodyend="1847"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Class used internally to implement just-in-time reading</para><para>This is a much simplified version of the code that we used in the D3PDReader code to read variables just in time for the users. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="19435">
        <label>xAOD::TAuxStore::TBranchHandle</label>
        <childnode refid="19436" relation="usage">
          <edgelabel>m_object</edgelabel>
        </childnode>
      </node>
      <node id="19436">
        <label>void</label>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/TAuxStore.h" line="260" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/TAuxStore.h" bodystart="260" bodyend="301"/>
    <listofallmembers>
      <member refid="d6/d59/classxAOD_1_1TAuxStore_1_1TBranchHandle_1aaf1732c81a9f0ca2cf2f228ee46ea2e6" prot="public" virt="non-virtual"><scope>xAOD::TAuxStore::TBranchHandle</scope><name>branchPtr</name></member>
      <member refid="d6/d59/classxAOD_1_1TAuxStore_1_1TBranchHandle_1abfb3849721b2c0e00fe78ab996f5d034" prot="public" virt="non-virtual"><scope>xAOD::TAuxStore::TBranchHandle</scope><name>getEntry</name></member>
      <member refid="d6/d59/classxAOD_1_1TAuxStore_1_1TBranchHandle_1a63f9d2a0f6eccf0708e233f4342d7861" prot="public" virt="non-virtual"><scope>xAOD::TAuxStore::TBranchHandle</scope><name>inputObjectPtr</name></member>
      <member refid="d6/d59/classxAOD_1_1TAuxStore_1_1TBranchHandle_1a7d410f532d500348c018a9ce3acba5c4" prot="private" virt="non-virtual"><scope>xAOD::TAuxStore::TBranchHandle</scope><name>m_auxid</name></member>
      <member refid="d6/d59/classxAOD_1_1TAuxStore_1_1TBranchHandle_1a578c0ce44029bbf82c7dec0a6f810336" prot="private" virt="non-virtual"><scope>xAOD::TAuxStore::TBranchHandle</scope><name>m_branch</name></member>
      <member refid="d6/d59/classxAOD_1_1TAuxStore_1_1TBranchHandle_1ac078f76f48585850871a3192e9689fe3" prot="private" virt="non-virtual"><scope>xAOD::TAuxStore::TBranchHandle</scope><name>m_needsRead</name></member>
      <member refid="d6/d59/classxAOD_1_1TAuxStore_1_1TBranchHandle_1aa84bd9c3356182e2513dec5ad9700208" prot="private" virt="non-virtual"><scope>xAOD::TAuxStore::TBranchHandle</scope><name>m_object</name></member>
      <member refid="d6/d59/classxAOD_1_1TAuxStore_1_1TBranchHandle_1a1dca35fbc912fd20f317f29c40ce84d6" prot="private" virt="non-virtual"><scope>xAOD::TAuxStore::TBranchHandle</scope><name>m_prefix</name></member>
      <member refid="d6/d59/classxAOD_1_1TAuxStore_1_1TBranchHandle_1af881f32564bee693f43a4a16f6d8e451" prot="private" virt="non-virtual"><scope>xAOD::TAuxStore::TBranchHandle</scope><name>m_primitive</name></member>
      <member refid="d6/d59/classxAOD_1_1TAuxStore_1_1TBranchHandle_1a5efca0e3544d1dc0cad448c8f4dbd0b1" prot="private" virt="non-virtual"><scope>xAOD::TAuxStore::TBranchHandle</scope><name>m_static</name></member>
      <member refid="d6/d59/classxAOD_1_1TAuxStore_1_1TBranchHandle_1ac0fc52fa0e9b03c8497dbc8f09ac33a6" prot="private" virt="non-virtual"><scope>xAOD::TAuxStore::TBranchHandle</scope><name>m_typeInfo</name></member>
      <member refid="d6/d59/classxAOD_1_1TAuxStore_1_1TBranchHandle_1a68c6517d37ceb8a0d250c1c6260d8159" prot="public" virt="non-virtual"><scope>xAOD::TAuxStore::TBranchHandle</scope><name>objectPtr</name></member>
      <member refid="d6/d59/classxAOD_1_1TAuxStore_1_1TBranchHandle_1aa763c4c67146c44afc10ca5c309f733e" prot="public" virt="non-virtual"><scope>xAOD::TAuxStore::TBranchHandle</scope><name>outputObjectPtr</name></member>
      <member refid="d6/d59/classxAOD_1_1TAuxStore_1_1TBranchHandle_1ab0f161821563bae9d07cdf5ba2877c35" prot="public" virt="non-virtual"><scope>xAOD::TAuxStore::TBranchHandle</scope><name>reset</name></member>
      <member refid="d6/d59/classxAOD_1_1TAuxStore_1_1TBranchHandle_1a760711698ae6db56dc936c919b7a475e" prot="public" virt="non-virtual"><scope>xAOD::TAuxStore::TBranchHandle</scope><name>TBranchHandle</name></member>
      <member refid="d6/d59/classxAOD_1_1TAuxStore_1_1TBranchHandle_1a1d5a0eb98ab629b738de19371456d3f0" prot="public" virt="non-virtual"><scope>xAOD::TAuxStore::TBranchHandle</scope><name>typeInfo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
