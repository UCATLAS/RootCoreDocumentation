<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d6/d8c/classSG_1_1AuxTypeVectorFactory" kind="class" prot="public">
    <compoundname>SG::AuxTypeVectorFactory</compoundname>
    <basecompoundref refid="d9/d9f/classSG_1_1IAuxTypeVectorFactory" prot="public" virt="non-virtual">SG::IAuxTypeVectorFactory</basecompoundref>
    <includes refid="dc/d69/AuxTypeVectorFactory_8h" local="no">AuxTypeVectorFactory.h</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d6/d8c/classSG_1_1AuxTypeVectorFactory_1ab47c3c275994600e152416c6a821e3a8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="de/d12/classSG_1_1IAuxTypeVector" kindref="compound">IAuxTypeVector</ref> *</type>
        <definition>IAuxTypeVector * SG::AuxTypeVectorFactory&lt; T &gt;::create</definition>
        <argsstring>(size_t size, size_t capacity) const </argsstring>
        <name>create</name>
        <reimplements refid="d9/d9f/classSG_1_1IAuxTypeVectorFactory_1a41bb2ee5de5b7c173a9b87dbe7762b7a">create</reimplements>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>capacity</declname>
        </param>
        <briefdescription>
<para>Create a vector object of this type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial size of the new vector. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial capacity of the new vector. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/AuxTypeVectorFactory.h" line="38" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/AuxTypeVectorFactory.icc" bodystart="20" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="d6/d8c/classSG_1_1AuxTypeVectorFactory_1a469ab34956704968cd8018bdecd578a8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void SG::AuxTypeVectorFactory&lt; T &gt;::copy</definition>
        <argsstring>(void *dst, size_t dst_index, const void *src, size_t src_index) const </argsstring>
        <name>copy</name>
        <reimplements refid="d9/d9f/classSG_1_1IAuxTypeVectorFactory_1a454ef77bf0c5bd593575f1a3c7271ccf">copy</reimplements>
        <param>
          <type>void *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>dst_index</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>src_index</declname>
        </param>
        <briefdescription>
<para>Copy an element between vectors. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the start of the destination vector&apos;s data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of destination element in the vector. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the start of the source vector&apos;s data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of source element in the vector.</para></parameterdescription>
</parameteritem>
</parameterlist>
<computeroutput>dst</computeroutput> and @ src can be either the same or different. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/AuxTypeVectorFactory.h" line="51" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/AuxTypeVectorFactory.icc" bodystart="36" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="d6/d8c/classSG_1_1AuxTypeVectorFactory_1ac31d67660a985693d78f9d2b492a6932" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void SG::AuxTypeVectorFactory&lt; T &gt;::swap</definition>
        <argsstring>(void *a, size_t aindex, void *b, size_t bindex) const </argsstring>
        <name>swap</name>
        <reimplements refid="d9/d9f/classSG_1_1IAuxTypeVectorFactory_1af71b66184a8c3660589a7d21e915391e">swap</reimplements>
        <param>
          <type>void *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>aindex</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bindex</declname>
        </param>
        <briefdescription>
<para>Swap an element between vectors. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the start of the first vector&apos;s data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aindex</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the element in the first vector. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the start of the second vector&apos;s data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bindex</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the element in the second vector.</para></parameterdescription>
</parameteritem>
</parameterlist>
<computeroutput>a</computeroutput> and @ b can be either the same or different. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/AuxTypeVectorFactory.h" line="64" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/AuxTypeVectorFactory.icc" bodystart="53" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="d6/d8c/classSG_1_1AuxTypeVectorFactory_1a0a29946cda9a32357098aa9f5216a9c4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void SG::AuxTypeVectorFactory&lt; T &gt;::clear</definition>
        <argsstring>(void *dst, size_t dst_index) const </argsstring>
        <name>clear</name>
        <reimplements refid="d9/d9f/classSG_1_1IAuxTypeVectorFactory_1a347599cb7f89af31af8b2495d817969a">clear</reimplements>
        <param>
          <type>void *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>dst_index</declname>
        </param>
        <briefdescription>
<para>Clear an element within a vector (static method). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the start of the vector&apos;s data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the element in the vector. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/AuxTypeVectorFactory.h" line="72" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/AuxTypeVectorFactory.icc" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="d6/d8c/classSG_1_1AuxTypeVectorFactory_1a07669250585a0111db27e9bfc7788f33" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>size_t</type>
        <definition>size_t SG::AuxTypeVectorFactory&lt; T &gt;::getEltSize</definition>
        <argsstring>() const </argsstring>
        <name>getEltSize</name>
        <reimplements refid="d9/d9f/classSG_1_1IAuxTypeVectorFactory_1aa988289cb028117040ff6deef096c507">getEltSize</reimplements>
        <briefdescription>
<para>Return the size of an element of this vector type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/AuxTypeVectorFactory.h" line="78" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/AuxTypeVectorFactory.icc" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="d6/d8c/classSG_1_1AuxTypeVectorFactory_1a37166bcf5475d60c4029036156681375" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const std::type_info *</type>
        <definition>const std::type_info * SG::AuxTypeVectorFactory&lt; T &gt;::tiVec</definition>
        <argsstring>() const </argsstring>
        <name>tiVec</name>
        <reimplements refid="d9/d9f/classSG_1_1IAuxTypeVectorFactory_1a76a464148d5fc3a45f63f7d35d38b40a">tiVec</reimplements>
        <briefdescription>
<para>Return the <computeroutput>type_info</computeroutput> of the vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/AuxTypeVectorFactory.h" line="84" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/AuxTypeVectorFactory.icc" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="d6/d8c/classSG_1_1AuxTypeVectorFactory_1a113b8fcec227f5df75387bf66659198a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool SG::AuxTypeVectorFactory&lt; T &gt;::isDynamic</definition>
        <argsstring>() const </argsstring>
        <name>isDynamic</name>
        <reimplements refid="d9/d9f/classSG_1_1IAuxTypeVectorFactory_1ac4a325405ebbd00df2b5927aa25015e4">isDynamic</reimplements>
        <reimplementedby refid="dd/d0c/structFacTest2DynFac_1a62e83587faf44899b89a1b8c2b009320">isDynamic</reimplementedby>
        <reimplementedby refid="d4/db1/structFacTest1DynFac_1aaa7d7d0fdd0ee44d6957113a3a7170d5">isDynamic</reimplementedby>
        <briefdescription>
<para>True if the vectors created by this factory work by dynamic emulation (via <computeroutput>TVirtualCollectionProxy</computeroutput> or similar); false if the std::vector code is used directly. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/AuxTypeVectorFactory.h" line="92" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/AuxTypeVectorFactory.icc" bodystart="98" bodyend="101"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Factory objects that creates vectors using <computeroutput><ref refid="d5/d68/classSG_1_1AuxTypeVector" kindref="compound">AuxTypeVector</ref></computeroutput>. </para>    </briefdescription>
    <detaileddescription>
<para>This is an implementation of <computeroutput><ref refid="d9/d9f/classSG_1_1IAuxTypeVectorFactory" kindref="compound">IAuxTypeVectorFactory</ref></computeroutput> that makes vectors using the <computeroutput><ref refid="d5/d68/classSG_1_1AuxTypeVector" kindref="compound">AuxTypeVector</ref></computeroutput> implementation. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1993">
        <label>SG::IAuxTypeVectorFactory</label>
        <link refid="d9/d9f/classSG_1_1IAuxTypeVectorFactory"/>
      </node>
      <node id="1992">
        <label>SG::AuxTypeVectorFactory&lt; T &gt;</label>
        <link refid="d6/d8c/classSG_1_1AuxTypeVectorFactory"/>
        <childnode refid="1993" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1995">
        <label>SG::IAuxTypeVectorFactory</label>
        <link refid="d9/d9f/classSG_1_1IAuxTypeVectorFactory"/>
      </node>
      <node id="1994">
        <label>SG::AuxTypeVectorFactory&lt; T &gt;</label>
        <link refid="d6/d8c/classSG_1_1AuxTypeVectorFactory"/>
        <childnode refid="1995" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/AuxTypeVectorFactory.h" line="31" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/AuxTypeVectorFactory.h" bodystart="29" bodyend="93"/>
    <listofallmembers>
      <member refid="d6/d8c/classSG_1_1AuxTypeVectorFactory_1a0a29946cda9a32357098aa9f5216a9c4" prot="public" virt="virtual"><scope>SG::AuxTypeVectorFactory</scope><name>clear</name></member>
      <member refid="d6/d8c/classSG_1_1AuxTypeVectorFactory_1a469ab34956704968cd8018bdecd578a8" prot="public" virt="virtual"><scope>SG::AuxTypeVectorFactory</scope><name>copy</name></member>
      <member refid="d6/d8c/classSG_1_1AuxTypeVectorFactory_1ab47c3c275994600e152416c6a821e3a8" prot="public" virt="virtual"><scope>SG::AuxTypeVectorFactory</scope><name>create</name></member>
      <member refid="d6/d8c/classSG_1_1AuxTypeVectorFactory_1a07669250585a0111db27e9bfc7788f33" prot="public" virt="virtual"><scope>SG::AuxTypeVectorFactory</scope><name>getEltSize</name></member>
      <member refid="d6/d8c/classSG_1_1AuxTypeVectorFactory_1a113b8fcec227f5df75387bf66659198a" prot="public" virt="virtual"><scope>SG::AuxTypeVectorFactory</scope><name>isDynamic</name></member>
      <member refid="d6/d8c/classSG_1_1AuxTypeVectorFactory_1ac31d67660a985693d78f9d2b492a6932" prot="public" virt="virtual"><scope>SG::AuxTypeVectorFactory</scope><name>swap</name></member>
      <member refid="d6/d8c/classSG_1_1AuxTypeVectorFactory_1a37166bcf5475d60c4029036156681375" prot="public" virt="virtual"><scope>SG::AuxTypeVectorFactory</scope><name>tiVec</name></member>
      <member refid="d9/d9f/classSG_1_1IAuxTypeVectorFactory_1a12d0aca91a0afa511b44fa78271a7663" prot="public" virt="virtual"><scope>SG::AuxTypeVectorFactory</scope><name>~IAuxTypeVectorFactory</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
