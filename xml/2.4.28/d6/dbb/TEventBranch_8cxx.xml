<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d6/dbb/TEventBranch_8cxx" kind="file">
    <compoundname>TEventBranch.cxx</compoundname>
    <includes refid="d6/d90/TEventBranch_8h" local="yes">xAODRootAccess/tools/TEventBranch.h</includes>
    <includes refid="d6/d17/xAODRootAccess_2xAODRootAccess_2tools_2Message_8h" local="yes">xAODRootAccess/tools/Message.h</includes>
    <includes refid="de/d44/TEvent_8h" local="yes">xAODRootAccess/TEvent.h</includes>
    <incdepgraph>
      <node id="410640">
        <label>AthContainersInterfaces/IAuxStoreHolder.h</label>
        <link refid="d7/dab/IAuxStoreHolder_8h_source"/>
      </node>
      <node id="410625">
        <label>xAODRootAccess/tools/Message.h</label>
        <link refid="d6/d17/xAODRootAccess_2xAODRootAccess_2tools_2Message_8h_source"/>
      </node>
      <node id="410624">
        <label>TBranchObject.h</label>
      </node>
      <node id="410642">
        <label>xAODRootAccess/tools/TReturnCode.h</label>
        <link refid="df/d0a/TReturnCode_8h_source"/>
      </node>
      <node id="410635">
        <label>stdint.h</label>
      </node>
      <node id="410641">
        <label>xAODRootAccessInterfaces/TVirtualEvent.h</label>
        <link refid="d7/d85/TVirtualEvent_8h_source"/>
        <childnode refid="410635" relation="include">
        </childnode>
      </node>
      <node id="410626">
        <label>xAODRootAccess/TEvent.h</label>
        <link refid="de/d44/TEvent_8h_source"/>
        <childnode refid="410627" relation="include">
        </childnode>
        <childnode refid="410628" relation="include">
        </childnode>
        <childnode refid="410629" relation="include">
        </childnode>
        <childnode refid="410630" relation="include">
        </childnode>
        <childnode refid="410631" relation="include">
        </childnode>
        <childnode refid="410632" relation="include">
        </childnode>
        <childnode refid="410633" relation="include">
        </childnode>
        <childnode refid="410640" relation="include">
        </childnode>
        <childnode refid="410641" relation="include">
        </childnode>
        <childnode refid="410642" relation="include">
        </childnode>
      </node>
      <node id="410629">
        <label>string</label>
      </node>
      <node id="410627">
        <label>map</label>
      </node>
      <node id="410637">
        <label>xAODEventFormat/EventFormatElement.h</label>
        <link refid="dc/dc1/EventFormatElement_8h_source"/>
        <childnode refid="410635" relation="include">
        </childnode>
        <childnode refid="410629" relation="include">
        </childnode>
        <childnode refid="410636" relation="include">
        </childnode>
      </node>
      <node id="410623">
        <label>typeinfo</label>
      </node>
      <node id="410634">
        <label>xAODEventFormat/versions/EventFormat_v1.h</label>
        <link refid="d2/d41/EventFormat__v1_8h_source"/>
        <childnode refid="410635" relation="include">
        </childnode>
        <childnode refid="410630" relation="include">
        </childnode>
        <childnode refid="410629" relation="include">
        </childnode>
        <childnode refid="410627" relation="include">
        </childnode>
        <childnode refid="410636" relation="include">
        </childnode>
        <childnode refid="410637" relation="include">
        </childnode>
      </node>
      <node id="410621">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/Root/TEventBranch.cxx</label>
        <link refid="TEventBranch.cxx"/>
        <childnode refid="410622" relation="include">
        </childnode>
        <childnode refid="410625" relation="include">
        </childnode>
        <childnode refid="410626" relation="include">
        </childnode>
      </node>
      <node id="410639">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="410630">
        <label>vector</label>
      </node>
      <node id="410632">
        <label>Rtypes.h</label>
      </node>
      <node id="410633">
        <label>xAODEventFormat/EventFormat.h</label>
        <link refid="d8/d71/EventFormat_8h_source"/>
        <childnode refid="410634" relation="include">
        </childnode>
        <childnode refid="410638" relation="include">
        </childnode>
      </node>
      <node id="410636">
        <label>iosfwd</label>
      </node>
      <node id="410622">
        <label>xAODRootAccess/tools/TEventBranch.h</label>
        <link refid="d6/d90/TEventBranch_8h_source"/>
        <childnode refid="410623" relation="include">
        </childnode>
        <childnode refid="410624" relation="include">
        </childnode>
      </node>
      <node id="410628">
        <label>set</label>
      </node>
      <node id="410638">
        <label>xAODCore/CLASS_DEF.h</label>
        <link refid="d6/d20/xAODCore_2xAODCore_2CLASS__DEF_8h"/>
        <childnode refid="410639" relation="include">
        </childnode>
      </node>
      <node id="410631">
        <label>memory</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="d6/dbb/TEventBranch_8cxx_1ae406876bff6d975057255848d36e03c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ClassImp</definition>
        <argsstring>(xAOD::TEventBranch) namespace xAOD</argsstring>
        <name>ClassImp</name>
        <param>
          <type><ref refid="d0/d30/classxAOD_1_1TEventBranch" kindref="compound">xAOD::TEventBranch</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>This is the function doing the heavy lifting. It loads the interface object for the current entry requested. Only doing some minimal overhead in the meanwhile.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>entry</parametername>
</parameternamelist>
<parameterdescription>
<para>The entry to be read for this object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>getall</parametername>
</parameternamelist>
<parameterdescription>
<para>When set to 1, read all information about the branch (Not used.) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of bytes read, or a negative number if not successful</para></simplesect>
I took this from the ARA code directly. Apparenly TTree would not know how to handle this object if it reported its actual type. So we pretend that this is a TBranchObject object. That way TBrowser shows its contents nicely.</para><para><simplesect kind="return"><para>The class for TBranchObject</para></simplesect>
</para>        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/Root/TEventBranch.cxx" line="10" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/Root/TEventBranch.cxx" bodystart="8" bodyend="92"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>$Id:<sp/>TEventBranch.cxx<sp/>645208<sp/>2015-02-09<sp/>15:48:59Z<sp/>krasznaa<sp/>$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Local<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODRootAccess/tools/TEventBranch.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODRootAccess/tools/Message.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODRootAccess/TEvent.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal">ClassImp(<sp/><ref refid="d0/d30/classxAOD_1_1TEventBranch" kindref="compound">xAOD::TEventBranch</ref><sp/>)</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal">namespace<sp/>xAOD<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/>TEventBranch::TEventBranch(<sp/>::TTree*<sp/>parent,<sp/>TEvent*<sp/>event,</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::type_info*<sp/>ti,</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>brName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>brType<sp/>)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>::TBranchObject(),</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_event(<sp/>event<sp/>),<sp/>m_ti(<sp/>ti<sp/>),<sp/>m_object(<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>that<sp/>the<sp/>object<sp/>is<sp/>established<sp/>in<sp/>memory,<sp/>let&apos;s<sp/>initialise<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d44/namespacexAOD_1a2b6ff6013c964ff2254bd3540cd1738d" kindref="member">Init</ref>(<sp/>parent,<sp/>0,<sp/>brName,<sp/>brType,<sp/>&amp;m_object,<sp/>32000,<sp/>0,<sp/>-1,<sp/>kTRUE<sp/>);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>little<sp/>sanity<sp/>check:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>m_event<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(<sp/></highlight><highlight class="stringliteral">&quot;TEventBranch&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XAOD_MESSAGE(<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>valid<sp/>xAOD::TEvent<sp/>object<sp/>received!&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>m_ti<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(<sp/></highlight><highlight class="stringliteral">&quot;TEventBranch&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XAOD_MESSAGE(<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>valid<sp/>std::type_info<sp/>object<sp/>received!&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/>::Int_t<sp/><ref refid="d0/d30/classxAOD_1_1TEventBranch_1af9a0e3ee78245abb3b106ad41fe3b150" kindref="member" tooltip="Function getting the current entry for this branch.">TEventBranch::GetEntry</ref>(<sp/>::Long64_t<sp/>entry,<sp/>::Int_t<sp/></highlight><highlight class="comment">/*getall*/</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>branch<sp/>is<sp/>active:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>TestBit(<sp/>kDoNotProcess<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>whether<sp/>we<sp/>already<sp/>have<sp/>the<sp/>requested<sp/>entry:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>fReadEntry<sp/>==<sp/>entry<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>the<sp/>requested<sp/>entry:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_event-&gt;getEntry(<sp/>entry<sp/>)<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(<sp/></highlight><highlight class="stringliteral">&quot;GetEntry&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XAOD_MESSAGE(<sp/></highlight><highlight class="stringliteral">&quot;Problems<sp/>with<sp/>loading<sp/>entry<sp/>%i&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;<sp/>int<sp/>&gt;(<sp/>entry<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>internal<sp/>pointer:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_object<sp/>=<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>m_event-&gt;getInputObject(<sp/>GetName(),</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*m_ti<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>m_object<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(<sp/></highlight><highlight class="stringliteral">&quot;GetEntry&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XAOD_MESSAGE(<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>variable<sp/>of<sp/>type<sp/>\&quot;%s\&quot;<sp/>with<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;key<sp/>\&quot;%s\&quot;&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetClassName(),<sp/>GetName()<sp/>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>were<sp/>successful:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fReadEntry<sp/>=<sp/>entry;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/>::TClass*<sp/><ref refid="d0/d30/classxAOD_1_1TEventBranch_1a1f2c6a594abe781c8f2035eff5797c33" kindref="member" tooltip="Function returning the type of TBranchObject.">TEventBranch::IsA</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::TBranchObject::IsA();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>xAOD</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/Root/TEventBranch.cxx"/>
  </compounddef>
</doxygen>
