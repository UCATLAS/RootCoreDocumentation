<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d6/d70/AsgElectronChargeIDSelectorTool_8cxx" kind="file">
    <compoundname>AsgElectronChargeIDSelectorTool.cxx</compoundname>
    <includes refid="d0/d2c/AsgElectronChargeIDSelectorTool_8h" local="yes">ElectronPhotonSelectorTools/AsgElectronChargeIDSelectorTool.h</includes>
    <includes local="no">string</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">cmath</includes>
    <includes refid="dc/db4/Electron_8h" local="yes">xAODEgamma/Electron.h</includes>
    <includes refid="d9/d2d/Vertex_8h" local="yes">xAODTracking/Vertex.h</includes>
    <includes refid="d6/dd8/VertexContainer_8h" local="yes">xAODTracking/VertexContainer.h</includes>
    <includes refid="db/d88/CaloCluster_8h" local="yes">xAODCaloEvent/CaloCluster.h</includes>
    <includes local="yes">TEnv.h</includes>
    <includes local="yes">TFile.h</includes>
    <includes local="yes">TObjString.h</includes>
    <includes local="yes">TObjArray.h</includes>
    <includes refid="d3/d32/PathResolver_8h" local="yes">PathResolver/PathResolver.h</includes>
    <incdepgraph>
      <node id="123966">
        <label>list</label>
      </node>
      <node id="123975">
        <label>AthContainers/tools/DVL_algorithms.icc</label>
        <link refid="df/daa/DVL__algorithms_8icc"/>
        <childnode refid="123960" relation="include">
        </childnode>
        <childnode refid="123967" relation="include">
        </childnode>
        <childnode refid="123878" relation="include">
        </childnode>
        <childnode refid="123956" relation="include">
        </childnode>
        <childnode refid="123885" relation="include">
        </childnode>
      </node>
      <node id="123960">
        <label>AthContainers/tools/DVLNoBase.h</label>
        <link refid="d7/d92/DVLNoBase_8h"/>
      </node>
      <node id="123921">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="123860">
        <label>ElectronPhotonSelectorTools/IAsgElectronLikelihoodTool.h</label>
        <link refid="d1/da7/IAsgElectronLikelihoodTool_8h_source"/>
        <childnode refid="123861" relation="include">
        </childnode>
        <childnode refid="123862" relation="include">
        </childnode>
        <childnode refid="123863" relation="include">
        </childnode>
      </node>
      <node id="123981">
        <label>AthContainers/tools/DVLDataBucket.h</label>
        <link refid="d4/d16/DVLDataBucket_8h"/>
        <childnode refid="123982" relation="include">
        </childnode>
        <childnode refid="123961" relation="include">
        </childnode>
        <childnode refid="123891" relation="include">
        </childnode>
        <childnode refid="123983" relation="include">
        </childnode>
      </node>
      <node id="123923">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="123884" relation="include">
        </childnode>
        <childnode refid="123886" relation="include">
        </childnode>
        <childnode refid="123891" relation="include">
        </childnode>
        <childnode refid="123892" relation="include">
        </childnode>
      </node>
      <node id="123833">
        <label>AsgTools/IAsgTool.h</label>
        <link refid="df/dd4/IAsgTool_8h_source"/>
        <childnode refid="123834" relation="include">
        </childnode>
        <childnode refid="123832" relation="include">
        </childnode>
        <childnode refid="123835" relation="include">
        </childnode>
        <childnode refid="123836" relation="include">
        </childnode>
      </node>
      <node id="123924">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="123894">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="123880" relation="include">
        </childnode>
        <childnode refid="123882" relation="include">
        </childnode>
        <childnode refid="123895" relation="include">
        </childnode>
        <childnode refid="123893" relation="include">
        </childnode>
      </node>
      <node id="123840">
        <label>MVAUtils/BDT.h</label>
        <link refid="dc/dd3/BDT_8h_source"/>
        <childnode refid="123841" relation="include">
        </childnode>
        <childnode refid="123842" relation="include">
        </childnode>
        <childnode refid="123843" relation="include">
        </childnode>
      </node>
      <node id="123993">
        <label>EventPrimitives/EventPrimitives.h</label>
        <link refid="d1/d54/EventPrimitives_8h_source"/>
        <childnode refid="123994" relation="include">
        </childnode>
        <childnode refid="123995" relation="include">
        </childnode>
        <childnode refid="123996" relation="include">
        </childnode>
      </node>
      <node id="123890">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="123892">
        <label>functional</label>
      </node>
      <node id="123957">
        <label>boost/version.hpp</label>
      </node>
      <node id="123889">
        <label>limits</label>
      </node>
      <node id="123895">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="123919">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="123836">
        <label>GaudiKernel/IAlgTool.h</label>
      </node>
      <node id="123887">
        <label>iterator</label>
      </node>
      <node id="123945">
        <label>xAODCaloEvent/versions/CaloClusterBadChannelData_v1.h</label>
        <link refid="d5/d3a/CaloClusterBadChannelData__v1_8h_source"/>
        <childnode refid="123942" relation="include">
        </childnode>
        <childnode refid="123841" relation="include">
        </childnode>
      </node>
      <node id="123907">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="123834" relation="include">
        </childnode>
        <childnode refid="123908" relation="include">
        </childnode>
      </node>
      <node id="123947">
        <label>CaloEvent/CaloRecoStatus.h</label>
      </node>
      <node id="124027">
        <label>TObjArray.h</label>
      </node>
      <node id="123844">
        <label>cstdint</label>
      </node>
      <node id="123843">
        <label>MVAUtils/Node.h</label>
        <link refid="db/d92/Node_8h_source"/>
        <childnode refid="123841" relation="include">
        </childnode>
        <childnode refid="123844" relation="include">
        </childnode>
      </node>
      <node id="123997">
        <label>CxxUtils/final.h</label>
        <link refid="da/d9b/final_8h"/>
      </node>
      <node id="123980">
        <label>SGTools/ClassName.h</label>
      </node>
      <node id="123986">
        <label>AthContainers/DataVector.icc</label>
        <link refid="da/de6/DataVector_8icc"/>
        <childnode refid="123987" relation="include">
        </childnode>
        <childnode refid="123955" relation="include">
        </childnode>
        <childnode refid="123889" relation="include">
        </childnode>
        <childnode refid="123892" relation="include">
        </childnode>
        <childnode refid="123988" relation="include">
        </childnode>
      </node>
      <node id="123931">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="123881" relation="include">
        </childnode>
        <childnode refid="123932" relation="include">
        </childnode>
        <childnode refid="123933" relation="include">
        </childnode>
        <childnode refid="123900" relation="include">
        </childnode>
        <childnode refid="123834" relation="include">
        </childnode>
      </node>
      <node id="123904">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="123841" relation="include">
        </childnode>
        <childnode refid="123888" relation="include">
        </childnode>
      </node>
      <node id="123869">
        <label>stdint.h</label>
      </node>
      <node id="123967">
        <label>AthContainers/tools/DVLCast.h</label>
        <link refid="df/d5c/DVLCast_8h"/>
        <childnode refid="123889" relation="include">
        </childnode>
        <childnode refid="123968" relation="include">
        </childnode>
        <childnode refid="123900" relation="include">
        </childnode>
        <childnode refid="123888" relation="include">
        </childnode>
        <childnode refid="123882" relation="include">
        </childnode>
      </node>
      <node id="123953">
        <label>AthContainers/IndexTrackingPolicy.h</label>
        <link refid="d0/da5/IndexTrackingPolicy_8h"/>
      </node>
      <node id="123901">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="123882" relation="include">
        </childnode>
        <childnode refid="123900" relation="include">
        </childnode>
      </node>
      <node id="124012">
        <label>Eigen/Geometry</label>
      </node>
      <node id="123872">
        <label>RVersion.h</label>
      </node>
      <node id="123863">
        <label>xAODEgamma/EgammaFwd.h</label>
        <link refid="dc/d0f/EgammaFwd_8h_source"/>
      </node>
      <node id="123883">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="123884" relation="include">
        </childnode>
        <childnode refid="123891" relation="include">
        </childnode>
        <childnode refid="123892" relation="include">
        </childnode>
      </node>
      <node id="123859">
        <label>AthenaBaseComps/AthMsgStreamMacros.h</label>
      </node>
      <node id="123950">
        <label>xAODCaloEvent/versions/CaloClusterContainer_v1.h</label>
        <link refid="d8/dda/CaloClusterContainer__v1_8h_source"/>
        <childnode refid="123951" relation="include">
        </childnode>
        <childnode refid="123989" relation="include">
        </childnode>
        <childnode refid="123941" relation="include">
        </childnode>
      </node>
      <node id="123865">
        <label>cmath</label>
      </node>
      <node id="123935">
        <label>cassert</label>
      </node>
      <node id="123830">
        <label>ElectronPhotonSelectorTools/AsgElectronChargeIDSelectorTool.h</label>
        <link refid="d0/d2c/AsgElectronChargeIDSelectorTool_8h_source"/>
        <childnode refid="123831" relation="include">
        </childnode>
        <childnode refid="123840" relation="include">
        </childnode>
        <childnode refid="123845" relation="include">
        </childnode>
        <childnode refid="123860" relation="include">
        </childnode>
        <childnode refid="123864" relation="include">
        </childnode>
      </node>
      <node id="123958">
        <label>boost/mpl/if.hpp</label>
      </node>
      <node id="123977">
        <label>boost/static_assert.hpp</label>
      </node>
      <node id="123851">
        <label>PATCore/TSelectorToolBase.h</label>
        <link refid="d4/d82/TSelectorToolBase_8h_source"/>
        <childnode refid="123842" relation="include">
        </childnode>
        <childnode refid="123852" relation="include">
        </childnode>
      </node>
      <node id="123933">
        <label>stdexcept</label>
      </node>
      <node id="123837">
        <label>AsgTools/MsgLevel.h</label>
        <link refid="de/d80/MsgLevel_8h"/>
        <childnode refid="123834" relation="include">
        </childnode>
        <childnode refid="123832" relation="include">
        </childnode>
        <childnode refid="123838" relation="include">
        </childnode>
      </node>
      <node id="123922">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="123995">
        <label>Eigen/Core</label>
      </node>
      <node id="123964">
        <label>boost/type_traits/is_pointer.hpp</label>
      </node>
      <node id="124001">
        <label>xAODTracking/VertexContainerFwd.h</label>
        <link refid="d0/dc4/VertexContainerFwd_8h_source"/>
        <childnode refid="123951" relation="include">
        </childnode>
        <childnode refid="124002" relation="include">
        </childnode>
      </node>
      <node id="124007">
        <label>xAODTracking/TrackParticleContainerFwd.h</label>
        <link refid="de/dea/TrackParticleContainerFwd_8h_source"/>
        <childnode refid="123951" relation="include">
        </childnode>
        <childnode refid="123989" relation="include">
        </childnode>
        <childnode refid="124008" relation="include">
        </childnode>
      </node>
      <node id="123972">
        <label>boost/iterator/iterator_adaptor.hpp</label>
      </node>
      <node id="123877">
        <label>TLorentzVector.h</label>
      </node>
      <node id="123832">
        <label>AsgTools/AsgToolsConf.h</label>
        <link refid="df/db7/AsgToolsConf_8h_source"/>
      </node>
      <node id="123942">
        <label>CaloGeoHelpers/CaloSampling.h</label>
        <link refid="d7/d85/CaloSampling_8h_source"/>
        <childnode refid="123834" relation="include">
        </childnode>
        <childnode refid="123943" relation="include">
        </childnode>
      </node>
      <node id="123834">
        <label>string</label>
      </node>
      <node id="123925">
        <label>AthContainers/AuxVectorData.h</label>
        <link refid="d9/df2/AuxVectorData_8h"/>
        <childnode refid="123881" relation="include">
        </childnode>
        <childnode refid="123880" relation="include">
        </childnode>
        <childnode refid="123907" relation="include">
        </childnode>
        <childnode refid="123904" relation="include">
        </childnode>
        <childnode refid="123896" relation="include">
        </childnode>
        <childnode refid="123926" relation="include">
        </childnode>
        <childnode refid="123927" relation="include">
        </childnode>
        <childnode refid="123910" relation="include">
        </childnode>
        <childnode refid="123841" relation="include">
        </childnode>
        <childnode refid="123886" relation="include">
        </childnode>
        <childnode refid="123888" relation="include">
        </childnode>
        <childnode refid="123928" relation="include">
        </childnode>
        <childnode refid="123929" relation="include">
        </childnode>
        <childnode refid="123917" relation="include">
        </childnode>
        <childnode refid="123930" relation="include">
        </childnode>
      </node>
      <node id="123899">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="123882" relation="include">
        </childnode>
        <childnode refid="123900" relation="include">
        </childnode>
      </node>
      <node id="124000">
        <label>versions/TrackParticle_v1.h</label>
        <link refid="d2/d7f/TrackParticle__v1_8h_source"/>
        <childnode refid="123853" relation="include">
        </childnode>
        <childnode refid="123869" relation="include">
        </childnode>
        <childnode refid="123868" relation="include">
        </childnode>
        <childnode refid="123951" relation="include">
        </childnode>
        <childnode refid="123876" relation="include">
        </childnode>
        <childnode refid="123998" relation="include">
        </childnode>
        <childnode refid="124001" relation="include">
        </childnode>
        <childnode refid="124003" relation="include">
        </childnode>
        <childnode refid="124004" relation="include">
        </childnode>
      </node>
      <node id="123928">
        <label>AthContainers/tools/likely.h</label>
        <link refid="d6/dd6/likely_8h"/>
      </node>
      <node id="123969">
        <label>AthContainers/tools/DVLIterator.h</label>
        <link refid="d3/dc7/DVLIterator_8h_source"/>
        <childnode refid="123952" relation="include">
        </childnode>
        <childnode refid="123967" relation="include">
        </childnode>
        <childnode refid="123970" relation="include">
        </childnode>
        <childnode refid="123972" relation="include">
        </childnode>
        <childnode refid="123957" relation="include">
        </childnode>
        <childnode refid="123887" relation="include">
        </childnode>
        <childnode refid="123888" relation="include">
        </childnode>
      </node>
      <node id="123866">
        <label>xAODEgamma/Electron.h</label>
        <link refid="dc/db4/Electron_8h_source"/>
        <childnode refid="123867" relation="include">
        </childnode>
      </node>
      <node id="123982">
        <label>SGTools/DataBucket.h</label>
      </node>
      <node id="123991">
        <label>xAODPrimitives/IsolationType.h</label>
        <link refid="d2/d36/IsolationType_8h_source"/>
      </node>
      <node id="123850">
        <label>map</label>
      </node>
      <node id="123983">
        <label>AthContainers/tools/DVLDataBucket.icc</label>
        <link refid="d3/d21/DVLDataBucket_8icc"/>
        <childnode refid="123984" relation="include">
        </childnode>
      </node>
      <node id="123990">
        <label>xAODPrimitives/IsolationCorrection.h</label>
        <link refid="d3/de5/xAODPrimitives_2xAODPrimitives_2IsolationCorrection_8h_source"/>
        <childnode refid="123853" relation="include">
        </childnode>
        <childnode refid="123841" relation="include">
        </childnode>
      </node>
      <node id="123984">
        <label>SGTools/IRegisterTransient.h</label>
      </node>
      <node id="123873">
        <label>RootMetaSelection.h</label>
      </node>
      <node id="123914">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="124013">
        <label>VxVertex/VxTrackAtVertex.h</label>
      </node>
      <node id="123974">
        <label>AthContainers/tools/DVL_algorithms.h</label>
        <link refid="d0/d7a/DVL__algorithms_8h"/>
        <childnode refid="123969" relation="include">
        </childnode>
        <childnode refid="123887" relation="include">
        </childnode>
        <childnode refid="123885" relation="include">
        </childnode>
        <childnode refid="123975" relation="include">
        </childnode>
      </node>
      <node id="124026">
        <label>TObjString.h</label>
      </node>
      <node id="123846">
        <label>fstream</label>
      </node>
      <node id="123929">
        <label>AthContainers/tools/assume.h</label>
        <link refid="d2/d20/assume_8h"/>
      </node>
      <node id="123911">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="124022">
        <label>xAODTracking/VertexContainer.h</label>
        <link refid="d6/dd8/VertexContainer_8h_source"/>
        <childnode refid="124009" relation="include">
        </childnode>
        <childnode refid="124023" relation="include">
        </childnode>
        <childnode refid="123948" relation="include">
        </childnode>
      </node>
      <node id="123970">
        <label>AthContainers/tools/ElementProxy.h</label>
        <link refid="db/d26/ElementProxy_8h"/>
        <childnode refid="123952" relation="include">
        </childnode>
        <childnode refid="123871" relation="include">
        </childnode>
        <childnode refid="123891" relation="include">
        </childnode>
        <childnode refid="123971" relation="include">
        </childnode>
      </node>
      <node id="123879">
        <label>AthContainersInterfaces/IAuxElement.h</label>
        <link refid="dd/d7a/IAuxElement_8h"/>
      </node>
      <node id="123838">
        <label>GaudiKernel/IMessageSvc.h</label>
      </node>
      <node id="123871">
        <label>AthLinks/tools/selection_ns.h</label>
        <link refid="d3/dec/selection__ns_8h"/>
        <childnode refid="123872" relation="include">
        </childnode>
        <childnode refid="123873" relation="include">
        </childnode>
      </node>
      <node id="123927">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="123920">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="124008">
        <label>xAODTracking/TrackParticleFwd.h</label>
        <link refid="d1/dc4/TrackParticleFwd_8h_source"/>
      </node>
      <node id="123968">
        <label>limits.h</label>
      </node>
      <node id="123962">
        <label>AthContainers/tools/ClassID.h</label>
        <link refid="de/de2/ClassID_8h"/>
        <childnode refid="123963" relation="include">
        </childnode>
      </node>
      <node id="124023">
        <label>xAODTracking/versions/VertexContainer_v1.h</label>
        <link refid="d2/dda/VertexContainer__v1_8h_source"/>
        <childnode refid="123951" relation="include">
        </childnode>
        <childnode refid="124010" relation="include">
        </childnode>
      </node>
      <node id="123906">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="123907" relation="include">
        </childnode>
        <childnode refid="123889" relation="include">
        </childnode>
        <childnode refid="123869" relation="include">
        </childnode>
        <childnode refid="123909" relation="include">
        </childnode>
      </node>
      <node id="123848">
        <label>PATCore/TCalculatorToolBase.h</label>
        <link refid="de/d54/TCalculatorToolBase_8h_source"/>
        <childnode refid="123842" relation="include">
        </childnode>
        <childnode refid="123849" relation="include">
        </childnode>
      </node>
      <node id="123881">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="123882" relation="include">
        </childnode>
        <childnode refid="123883" relation="include">
        </childnode>
      </node>
      <node id="123870">
        <label>AthLinks/ElementLinkBase.h</label>
        <link refid="d0/d16/ElementLinkBase_8h_source"/>
        <childnode refid="123869" relation="include">
        </childnode>
      </node>
      <node id="123996">
        <label>Eigen/Dense</label>
      </node>
      <node id="123884">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="123885" relation="include">
        </childnode>
        <childnode refid="123886" relation="include">
        </childnode>
        <childnode refid="123887" relation="include">
        </childnode>
        <childnode refid="123882" relation="include">
        </childnode>
        <childnode refid="123888" relation="include">
        </childnode>
        <childnode refid="123865" relation="include">
        </childnode>
        <childnode refid="123889" relation="include">
        </childnode>
        <childnode refid="123834" relation="include">
        </childnode>
        <childnode refid="123890" relation="include">
        </childnode>
      </node>
      <node id="123955">
        <label>AthContainers/tools/ATHCONTAINERS_ASSERT.h</label>
        <link refid="de/d6b/ATHCONTAINERS__ASSERT_8h"/>
        <childnode refid="123935" relation="include">
        </childnode>
      </node>
      <node id="123876">
        <label>xAODBase/IParticle.h</label>
        <link refid="d5/dac/IParticle_8h_source"/>
        <childnode refid="123877" relation="include">
        </childnode>
        <childnode refid="123878" relation="include">
        </childnode>
        <childnode refid="123936" relation="include">
        </childnode>
        <childnode refid="123895" relation="include">
        </childnode>
      </node>
      <node id="123936">
        <label>ObjectType.h</label>
        <link refid="d8/d04/ObjectType_8h_source"/>
        <childnode refid="123937" relation="include">
        </childnode>
      </node>
      <node id="123845">
        <label>ElectronPhotonSelectorTools/TElectronLikelihoodTool.h</label>
        <link refid="dd/d2c/TElectronLikelihoodTool_8h_source"/>
        <childnode refid="123846" relation="include">
        </childnode>
        <childnode refid="123847" relation="include">
        </childnode>
        <childnode refid="123848" relation="include">
        </childnode>
        <childnode refid="123851" relation="include">
        </childnode>
        <childnode refid="123854" relation="include">
        </childnode>
        <childnode refid="123834" relation="include">
        </childnode>
        <childnode refid="123841" relation="include">
        </childnode>
      </node>
      <node id="123941">
        <label>xAODCaloEvent/versions/CaloCluster_v1.h</label>
        <link refid="dc/d4b/CaloCluster__v1_8h_source"/>
        <childnode refid="123869" relation="include">
        </childnode>
        <childnode refid="123853" relation="include">
        </childnode>
        <childnode refid="123876" relation="include">
        </childnode>
        <childnode refid="123942" relation="include">
        </childnode>
        <childnode refid="123944" relation="include">
        </childnode>
        <childnode refid="123868" relation="include">
        </childnode>
        <childnode refid="123946" relation="include">
        </childnode>
        <childnode refid="123947" relation="include">
        </childnode>
      </node>
      <node id="123971">
        <label>AthContainers/tools/ElementProxy.icc</label>
        <link refid="d6/d70/ElementProxy_8icc"/>
        <childnode refid="123967" relation="include">
        </childnode>
        <childnode refid="123955" relation="include">
        </childnode>
      </node>
      <node id="123867">
        <label>xAODEgamma/versions/Electron_v1.h</label>
        <link refid="df/d27/Electron__v1_8h_source"/>
        <childnode refid="123868" relation="include">
        </childnode>
        <childnode refid="123875" relation="include">
        </childnode>
        <childnode refid="123939" relation="include">
        </childnode>
        <childnode refid="123998" relation="include">
        </childnode>
        <childnode refid="123999" relation="include">
        </childnode>
        <childnode refid="124005" relation="include">
        </childnode>
        <childnode refid="123997" relation="include">
        </childnode>
        <childnode refid="123910" relation="include">
        </childnode>
      </node>
      <node id="123900">
        <label>typeinfo</label>
      </node>
      <node id="123998">
        <label>xAODTracking/TrackingPrimitives.h</label>
        <link refid="d2/d4c/TrackingPrimitives_8h_source"/>
        <childnode refid="123993" relation="include">
        </childnode>
      </node>
      <node id="123934">
        <label>AthContainers/AuxElement.icc</label>
        <link refid="d2/d37/AuxElement_8icc"/>
        <childnode refid="123928" relation="include">
        </childnode>
        <childnode refid="123935" relation="include">
        </childnode>
      </node>
      <node id="123940">
        <label>xAODCaloEvent/CaloCluster.h</label>
        <link refid="db/d88/CaloCluster_8h_source"/>
        <childnode refid="123941" relation="include">
        </childnode>
        <childnode refid="123948" relation="include">
        </childnode>
      </node>
      <node id="123951">
        <label>AthContainers/DataVector.h</label>
        <link refid="d7/dd6/DataVector_8h"/>
        <childnode refid="123931" relation="include">
        </childnode>
        <childnode refid="123952" relation="include">
        </childnode>
        <childnode refid="123953" relation="include">
        </childnode>
        <childnode refid="123954" relation="include">
        </childnode>
        <childnode refid="123960" relation="include">
        </childnode>
        <childnode refid="123961" relation="include">
        </childnode>
        <childnode refid="123967" relation="include">
        </childnode>
        <childnode refid="123969" relation="include">
        </childnode>
        <childnode refid="123973" relation="include">
        </childnode>
        <childnode refid="123974" relation="include">
        </childnode>
        <childnode refid="123970" relation="include">
        </childnode>
        <childnode refid="123976" relation="include">
        </childnode>
        <childnode refid="123871" relation="include">
        </childnode>
        <childnode refid="123977" relation="include">
        </childnode>
        <childnode refid="123978" relation="include">
        </childnode>
        <childnode refid="123972" relation="include">
        </childnode>
        <childnode refid="123841" relation="include">
        </childnode>
        <childnode refid="123900" relation="include">
        </childnode>
        <childnode refid="123892" relation="include">
        </childnode>
        <childnode refid="123847" relation="include">
        </childnode>
        <childnode refid="123885" relation="include">
        </childnode>
        <childnode refid="123933" relation="include">
        </childnode>
        <childnode refid="123887" relation="include">
        </childnode>
        <childnode refid="123895" relation="include">
        </childnode>
        <childnode refid="123979" relation="include">
        </childnode>
        <childnode refid="123981" relation="include">
        </childnode>
        <childnode refid="123985" relation="include">
        </childnode>
        <childnode refid="123986" relation="include">
        </childnode>
      </node>
      <node id="124015">
        <label>xAODTracking/NeutralParticle.h</label>
        <link refid="d4/daa/NeutralParticle_8h_source"/>
        <childnode refid="124016" relation="include">
        </childnode>
        <childnode refid="123948" relation="include">
        </childnode>
      </node>
      <node id="123853">
        <label>bitset</label>
      </node>
      <node id="123909">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="123874">
        <label>AthLinks/tools/TypeTools.h</label>
        <link refid="dd/db1/TypeTools_8h_source"/>
      </node>
      <node id="123926">
        <label>AthenaKernel/ILockable.h</label>
      </node>
      <node id="123858">
        <label>AsgTools/MsgStreamMacros.h</label>
        <link refid="d3/ded/AsgTools_2AsgTools_2MsgStreamMacros_8h_source"/>
        <childnode refid="123832" relation="include">
        </childnode>
        <childnode refid="123837" relation="include">
        </childnode>
        <childnode refid="123859" relation="include">
        </childnode>
      </node>
      <node id="123897">
        <label>AthLinks/DataLinkBase.h</label>
        <link refid="db/da8/DataLinkBase_8h_source"/>
        <childnode refid="123869" relation="include">
        </childnode>
      </node>
      <node id="124010">
        <label>xAODTracking/versions/Vertex_v1.h</label>
        <link refid="d7/dcc/Vertex__v1_8h_source"/>
        <childnode refid="123841" relation="include">
        </childnode>
        <childnode refid="123878" relation="include">
        </childnode>
        <childnode refid="123868" relation="include">
        </childnode>
        <childnode refid="123993" relation="include">
        </childnode>
        <childnode refid="124011" relation="include">
        </childnode>
        <childnode refid="124013" relation="include">
        </childnode>
        <childnode refid="123998" relation="include">
        </childnode>
        <childnode refid="124007" relation="include">
        </childnode>
        <childnode refid="124014" relation="include">
        </childnode>
        <childnode refid="123936" relation="include">
        </childnode>
        <childnode refid="124021" relation="include">
        </childnode>
      </node>
      <node id="123908">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="123913">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="123961">
        <label>AthContainers/tools/DVLInfo.h</label>
        <link refid="d3/d2e/DVLInfo_8h"/>
        <childnode refid="123962" relation="include">
        </childnode>
        <childnode refid="123954" relation="include">
        </childnode>
        <childnode refid="123900" relation="include">
        </childnode>
        <childnode refid="123882" relation="include">
        </childnode>
        <childnode refid="123890" relation="include">
        </childnode>
        <childnode refid="123964" relation="include">
        </childnode>
        <childnode refid="123912" relation="include">
        </childnode>
        <childnode refid="123965" relation="include">
        </childnode>
      </node>
      <node id="123893">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="123994">
        <label>unistd.h</label>
      </node>
      <node id="123979">
        <label>AthContainers/ClassName.h</label>
        <link refid="dd/d6b/AthContainers_2AthContainers_2ClassName_8h_source"/>
        <childnode refid="123980" relation="include">
        </childnode>
      </node>
      <node id="123898">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="123881" relation="include">
        </childnode>
        <childnode refid="123899" relation="include">
        </childnode>
        <childnode refid="123901" relation="include">
        </childnode>
        <childnode refid="123902" relation="include">
        </childnode>
        <childnode refid="123915" relation="include">
        </childnode>
        <childnode refid="123917" relation="include">
        </childnode>
        <childnode refid="123882" relation="include">
        </childnode>
        <childnode refid="123900" relation="include">
        </childnode>
        <childnode refid="123841" relation="include">
        </childnode>
        <childnode refid="123923" relation="include">
        </childnode>
        <childnode refid="123924" relation="include">
        </childnode>
      </node>
      <node id="123841">
        <label>vector</label>
      </node>
      <node id="123989">
        <label>xAODBase/IParticleContainer.h</label>
        <link refid="dd/d2d/IParticleContainer_8h_source"/>
        <childnode refid="123951" relation="include">
        </childnode>
        <childnode refid="123876" relation="include">
        </childnode>
        <childnode refid="123893" relation="include">
        </childnode>
      </node>
      <node id="123987">
        <label>AthContainers/tools/CompareAndPrint.h</label>
        <link refid="d5/da8/CompareAndPrint_8h_source"/>
        <childnode refid="123885" relation="include">
        </childnode>
        <childnode refid="123900" relation="include">
        </childnode>
      </node>
      <node id="124025">
        <label>TFile.h</label>
      </node>
      <node id="124009">
        <label>xAODTracking/Vertex.h</label>
        <link refid="d9/d2d/Vertex_8h_source"/>
        <childnode refid="124010" relation="include">
        </childnode>
      </node>
      <node id="124018">
        <label>xAODTracking/versions/NeutralParticleContainer_v1.h</label>
        <link refid="d6/d5f/NeutralParticleContainer__v1_8h_source"/>
        <childnode refid="123869" relation="include">
        </childnode>
        <childnode refid="123951" relation="include">
        </childnode>
        <childnode refid="124016" relation="include">
        </childnode>
        <childnode refid="124019" relation="include">
        </childnode>
      </node>
      <node id="123988">
        <label>AthContainers/tools/DVLEltBaseInfo.icc</label>
        <link refid="dd/d5e/DVLEltBaseInfo_8icc"/>
      </node>
      <node id="123944">
        <label>xAODCaloEvent/CaloClusterBadChannelData.h</label>
        <link refid="d1/d93/CaloClusterBadChannelData_8h_source"/>
        <childnode refid="123945" relation="include">
        </childnode>
      </node>
      <node id="123886">
        <label>utility</label>
      </node>
      <node id="123985">
        <label>SGTools/DataBucketTraitFwd.h</label>
      </node>
      <node id="123910">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="123875">
        <label>xAODEgamma/versions/Egamma_v1.h</label>
        <link refid="d9/d42/Egamma__v1_8h_source"/>
        <childnode refid="123868" relation="include">
        </childnode>
        <childnode refid="123876" relation="include">
        </childnode>
        <childnode refid="123938" relation="include">
        </childnode>
        <childnode refid="123939" relation="include">
        </childnode>
        <childnode refid="123940" relation="include">
        </childnode>
        <childnode refid="123949" relation="include">
        </childnode>
        <childnode refid="123990" relation="include">
        </childnode>
        <childnode refid="123991" relation="include">
        </childnode>
        <childnode refid="123992" relation="include">
        </childnode>
        <childnode refid="123993" relation="include">
        </childnode>
        <childnode refid="123997" relation="include">
        </childnode>
        <childnode refid="123910" relation="include">
        </childnode>
        <childnode refid="123869" relation="include">
        </childnode>
      </node>
      <node id="123856">
        <label>sstream</label>
      </node>
      <node id="123949">
        <label>xAODCaloEvent/CaloClusterContainer.h</label>
        <link refid="da/dc3/CaloClusterContainer_8h_source"/>
        <childnode refid="123940" relation="include">
        </childnode>
        <childnode refid="123950" relation="include">
        </childnode>
        <childnode refid="123948" relation="include">
        </childnode>
      </node>
      <node id="124011">
        <label>GeoPrimitives/GeoPrimitives.h</label>
        <link refid="d7/d87/GeoPrimitives_8h_source"/>
        <childnode refid="123994" relation="include">
        </childnode>
        <childnode refid="124012" relation="include">
        </childnode>
      </node>
      <node id="124002">
        <label>xAODTracking/VertexFwd.h</label>
        <link refid="d9/ddd/VertexFwd_8h_source"/>
      </node>
      <node id="123959">
        <label>AthContainers/AuxVectorBase.icc</label>
        <link refid="d4/d50/AuxVectorBase_8icc"/>
      </node>
      <node id="123918">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="124024">
        <label>TEnv.h</label>
      </node>
      <node id="123861">
        <label>PATCore/IAsgSelectionTool.h</label>
        <link refid="d9/dfd/IAsgSelectionTool_8h_source"/>
        <childnode refid="123833" relation="include">
        </childnode>
        <childnode refid="123852" relation="include">
        </childnode>
      </node>
      <node id="123903">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="123849">
        <label>TResult.h</label>
        <link refid="de/d64/TResult_8h_source"/>
        <childnode refid="123842" relation="include">
        </childnode>
        <childnode refid="123850" relation="include">
        </childnode>
        <childnode refid="123841" relation="include">
        </childnode>
      </node>
      <node id="123917">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="123918" relation="include">
        </childnode>
        <childnode refid="123919" relation="include">
        </childnode>
        <childnode refid="123920" relation="include">
        </childnode>
        <childnode refid="123921" relation="include">
        </childnode>
        <childnode refid="123922" relation="include">
        </childnode>
      </node>
      <node id="123943">
        <label>CaloGeoHelpers/CaloSampling.def</label>
      </node>
      <node id="123937">
        <label>iosfwd</label>
      </node>
      <node id="123888">
        <label>cstdlib</label>
      </node>
      <node id="123999">
        <label>xAODTracking/TrackParticle.h</label>
        <link refid="d2/d15/TrackParticle_8h_source"/>
        <childnode refid="124000" relation="include">
        </childnode>
        <childnode refid="123948" relation="include">
        </childnode>
      </node>
      <node id="123932">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="123847">
        <label>iostream</label>
      </node>
      <node id="124006">
        <label>xAODTracking/versions/TrackParticleContainer_v1.h</label>
        <link refid="d7/d3b/TrackParticleContainer__v1_8h_source"/>
        <childnode refid="123869" relation="include">
        </childnode>
        <childnode refid="123951" relation="include">
        </childnode>
        <childnode refid="124000" relation="include">
        </childnode>
        <childnode refid="124007" relation="include">
        </childnode>
      </node>
      <node id="123880">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="123881" relation="include">
        </childnode>
        <childnode refid="123882" relation="include">
        </childnode>
        <childnode refid="123893" relation="include">
        </childnode>
      </node>
      <node id="123882">
        <label>cstddef</label>
      </node>
      <node id="123864">
        <label>unordered_map</label>
      </node>
      <node id="123857">
        <label>GaudiKernel/MsgStream.h</label>
      </node>
      <node id="123855">
        <label>AsgTools/MsgStream.h</label>
        <link refid="d3/d95/AsgTools_2AsgTools_2MsgStream_8h_source"/>
        <childnode refid="123834" relation="include">
        </childnode>
        <childnode refid="123856" relation="include">
        </childnode>
        <childnode refid="123832" relation="include">
        </childnode>
        <childnode refid="123837" relation="include">
        </childnode>
        <childnode refid="123833" relation="include">
        </childnode>
        <childnode refid="123857" relation="include">
        </childnode>
      </node>
      <node id="123829">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/ElectronPhotonSelectorTools/Root/AsgElectronChargeIDSelectorTool.cxx</label>
        <link refid="AsgElectronChargeIDSelectorTool.cxx"/>
        <childnode refid="123830" relation="include">
        </childnode>
        <childnode refid="123834" relation="include">
        </childnode>
        <childnode refid="123844" relation="include">
        </childnode>
        <childnode refid="123865" relation="include">
        </childnode>
        <childnode refid="123866" relation="include">
        </childnode>
        <childnode refid="124009" relation="include">
        </childnode>
        <childnode refid="124022" relation="include">
        </childnode>
        <childnode refid="123940" relation="include">
        </childnode>
        <childnode refid="124024" relation="include">
        </childnode>
        <childnode refid="124025" relation="include">
        </childnode>
        <childnode refid="124026" relation="include">
        </childnode>
        <childnode refid="124027" relation="include">
        </childnode>
        <childnode refid="124028" relation="include">
        </childnode>
      </node>
      <node id="123852">
        <label>TAccept.h</label>
        <link refid="d0/dcf/TAccept_8h_source"/>
        <childnode refid="123842" relation="include">
        </childnode>
        <childnode refid="123850" relation="include">
        </childnode>
        <childnode refid="123853" relation="include">
        </childnode>
      </node>
      <node id="123930">
        <label>AthContainers/AuxVectorData.icc</label>
        <link refid="da/de7/AuxVectorData_8icc"/>
        <childnode refid="123898" relation="include">
        </childnode>
        <childnode refid="123894" relation="include">
        </childnode>
        <childnode refid="123880" relation="include">
        </childnode>
        <childnode refid="123928" relation="include">
        </childnode>
        <childnode refid="123929" relation="include">
        </childnode>
      </node>
      <node id="123835">
        <label>AsgTools/AsgToolMacros.h</label>
        <link refid="d1/d68/AsgToolMacros_8h_source"/>
      </node>
      <node id="124021">
        <label>xAODCore/BaseInfo.h</label>
        <link refid="d3/d17/BaseInfo_8h_source"/>
        <childnode refid="123895" relation="include">
        </childnode>
      </node>
      <node id="123939">
        <label>xAODEgamma/EgammaEnums.h</label>
        <link refid="d4/d8f/EgammaEnums_8h_source"/>
      </node>
      <node id="123842">
        <label>TString.h</label>
      </node>
      <node id="124017">
        <label>TrkNeutralParameters/NeutralParameters.h</label>
      </node>
      <node id="123965">
        <label>AthContainers/tools/DVLInfo.icc</label>
        <link refid="da/d83/DVLInfo_8icc"/>
        <childnode refid="123952" relation="include">
        </childnode>
        <childnode refid="123841" relation="include">
        </childnode>
        <childnode refid="123966" relation="include">
        </childnode>
        <childnode refid="123935" relation="include">
        </childnode>
        <childnode refid="123888" relation="include">
        </childnode>
        <childnode refid="123895" relation="include">
        </childnode>
      </node>
      <node id="123902">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="123899" relation="include">
        </childnode>
        <childnode refid="123903" relation="include">
        </childnode>
        <childnode refid="123904" relation="include">
        </childnode>
        <childnode refid="123905" relation="include">
        </childnode>
        <childnode refid="123910" relation="include">
        </childnode>
        <childnode refid="123900" relation="include">
        </childnode>
        <childnode refid="123841" relation="include">
        </childnode>
        <childnode refid="123885" relation="include">
        </childnode>
        <childnode refid="123869" relation="include">
        </childnode>
        <childnode refid="123912" relation="include">
        </childnode>
        <childnode refid="123913" relation="include">
        </childnode>
        <childnode refid="123914" relation="include">
        </childnode>
      </node>
      <node id="124003">
        <label>TrkParameters/TrackParameters.h</label>
      </node>
      <node id="124028">
        <label>PathResolver/PathResolver.h</label>
        <link refid="d3/d32/PathResolver_8h_source"/>
        <childnode refid="123854" relation="include">
        </childnode>
        <childnode refid="123834" relation="include">
        </childnode>
      </node>
      <node id="123938">
        <label>xAODEgamma/EgammaDefs.h</label>
        <link refid="dd/d34/EgammaDefs_8h_source"/>
        <childnode refid="123869" relation="include">
        </childnode>
      </node>
      <node id="124016">
        <label>versions/NeutralParticle_v1.h</label>
        <link refid="da/d85/NeutralParticle__v1_8h_source"/>
        <childnode refid="123868" relation="include">
        </childnode>
        <childnode refid="123951" relation="include">
        </childnode>
        <childnode refid="123876" relation="include">
        </childnode>
        <childnode refid="123998" relation="include">
        </childnode>
        <childnode refid="124001" relation="include">
        </childnode>
        <childnode refid="123853" relation="include">
        </childnode>
        <childnode refid="123869" relation="include">
        </childnode>
        <childnode refid="124017" relation="include">
        </childnode>
      </node>
      <node id="123854">
        <label>AsgTools/AsgMessaging.h</label>
        <link refid="d3/d61/AsgMessaging_8h_source"/>
        <childnode refid="123834" relation="include">
        </childnode>
        <childnode refid="123832" relation="include">
        </childnode>
        <childnode refid="123855" relation="include">
        </childnode>
        <childnode refid="123858" relation="include">
        </childnode>
      </node>
      <node id="124020">
        <label>xAODTracking/NeutralParticleFwd.h</label>
        <link refid="d4/d90/NeutralParticleFwd_8h_source"/>
      </node>
      <node id="123862">
        <label>xAODEgamma/ElectronFwd.h</label>
        <link refid="db/d18/ElectronFwd_8h_source"/>
      </node>
      <node id="123912">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="124014">
        <label>xAODTracking/NeutralParticleContainer.h</label>
        <link refid="da/d7f/NeutralParticleContainer_8h_source"/>
        <childnode refid="124015" relation="include">
        </childnode>
        <childnode refid="124018" relation="include">
        </childnode>
        <childnode refid="123948" relation="include">
        </childnode>
      </node>
      <node id="123954">
        <label>AthContainers/AuxVectorBase.h</label>
        <link refid="d7/d18/AuxVectorBase_8h"/>
        <childnode refid="123925" relation="include">
        </childnode>
        <childnode refid="123952" relation="include">
        </childnode>
        <childnode refid="123953" relation="include">
        </childnode>
        <childnode refid="123878" relation="include">
        </childnode>
        <childnode refid="123898" relation="include">
        </childnode>
        <childnode refid="123931" relation="include">
        </childnode>
        <childnode refid="123955" relation="include">
        </childnode>
        <childnode refid="123894" relation="include">
        </childnode>
        <childnode refid="123956" relation="include">
        </childnode>
        <childnode refid="123841" relation="include">
        </childnode>
        <childnode refid="123959" relation="include">
        </childnode>
      </node>
      <node id="123992">
        <label>xAODPrimitives/IsolationFlavour.h</label>
        <link refid="da/d23/IsolationFlavour_8h_source"/>
      </node>
      <node id="123948">
        <label>xAODCore/CLASS_DEF.h</label>
        <link refid="d6/d20/xAODCore_2xAODCore_2CLASS__DEF_8h"/>
        <childnode refid="123893" relation="include">
        </childnode>
      </node>
      <node id="123916">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="123905">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="123903" relation="include">
        </childnode>
        <childnode refid="123906" relation="include">
        </childnode>
        <childnode refid="123910" relation="include">
        </childnode>
        <childnode refid="123841" relation="include">
        </childnode>
        <childnode refid="123911" relation="include">
        </childnode>
      </node>
      <node id="123885">
        <label>algorithm</label>
      </node>
      <node id="123946">
        <label>CaloEvent/CaloClusterCellLinkContainer.h</label>
      </node>
      <node id="123976">
        <label>AthContainers/tools/IsMostDerivedFlag.h</label>
        <link refid="d5/dfa/IsMostDerivedFlag_8h"/>
      </node>
      <node id="124004">
        <label>TrkTrack/TrackCollection.h</label>
      </node>
      <node id="123878">
        <label>AthContainers/AuxElement.h</label>
        <link refid="d1/d6f/AuxElement_8h"/>
        <childnode refid="123879" relation="include">
        </childnode>
        <childnode refid="123880" relation="include">
        </childnode>
        <childnode refid="123894" relation="include">
        </childnode>
        <childnode refid="123896" relation="include">
        </childnode>
        <childnode refid="123898" relation="include">
        </childnode>
        <childnode refid="123925" relation="include">
        </childnode>
        <childnode refid="123904" relation="include">
        </childnode>
        <childnode refid="123931" relation="include">
        </childnode>
        <childnode refid="123928" relation="include">
        </childnode>
        <childnode refid="123882" relation="include">
        </childnode>
        <childnode refid="123934" relation="include">
        </childnode>
      </node>
      <node id="123831">
        <label>AsgTools/AsgTool.h</label>
        <link refid="d4/d29/AsgTool_8h_source"/>
        <childnode refid="123832" relation="include">
        </childnode>
        <childnode refid="123833" relation="include">
        </childnode>
        <childnode refid="123837" relation="include">
        </childnode>
        <childnode refid="123839" relation="include">
        </childnode>
      </node>
      <node id="123896">
        <label>AthLinks/DataLink.h</label>
        <link refid="da/de8/DataLink_8h_source"/>
        <childnode refid="123869" relation="include">
        </childnode>
        <childnode refid="123834" relation="include">
        </childnode>
        <childnode refid="123897" relation="include">
        </childnode>
        <childnode refid="123871" relation="include">
        </childnode>
      </node>
      <node id="123973">
        <label>AthContainers/tools/DVL_iter_swap.h</label>
        <link refid="d6/ddb/DVL__iter__swap_8h"/>
        <childnode refid="123969" relation="include">
        </childnode>
        <childnode refid="123955" relation="include">
        </childnode>
        <childnode refid="123887" relation="include">
        </childnode>
      </node>
      <node id="123952">
        <label>AthContainers/OwnershipPolicy.h</label>
        <link refid="d3/da4/OwnershipPolicy_8h_source"/>
      </node>
      <node id="123868">
        <label>AthLinks/ElementLink.h</label>
        <link refid="dc/d24/ElementLink_8h_source"/>
        <childnode refid="123869" relation="include">
        </childnode>
        <childnode refid="123834" relation="include">
        </childnode>
        <childnode refid="123870" relation="include">
        </childnode>
        <childnode refid="123871" relation="include">
        </childnode>
        <childnode refid="123874" relation="include">
        </childnode>
      </node>
      <node id="123839">
        <label>AsgTools/SetProperty.h</label>
        <link refid="df/db0/SetProperty_8h_source"/>
      </node>
      <node id="124005">
        <label>xAODTracking/TrackParticleContainer.h</label>
        <link refid="da/d31/TrackParticleContainer_8h_source"/>
        <childnode refid="123999" relation="include">
        </childnode>
        <childnode refid="124006" relation="include">
        </childnode>
        <childnode refid="123948" relation="include">
        </childnode>
      </node>
      <node id="123963">
        <label>GaudiKernel/ClassID.h</label>
      </node>
      <node id="123978">
        <label>boost/type_traits.hpp</label>
      </node>
      <node id="123891">
        <label>memory</label>
      </node>
      <node id="124019">
        <label>xAODTracking/NeutralParticleContainerFwd.h</label>
        <link refid="d2/db4/NeutralParticleContainerFwd_8h_source"/>
        <childnode refid="123951" relation="include">
        </childnode>
        <childnode refid="123989" relation="include">
        </childnode>
        <childnode refid="124020" relation="include">
        </childnode>
      </node>
      <node id="123915">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="123901" relation="include">
        </childnode>
        <childnode refid="123902" relation="include">
        </childnode>
        <childnode refid="123916" relation="include">
        </childnode>
      </node>
      <node id="123956">
        <label>AthContainersInterfaces/AuxStore_traits.h</label>
        <link refid="dd/d70/AuxStore__traits_8h"/>
        <childnode refid="123879" relation="include">
        </childnode>
        <childnode refid="123894" relation="include">
        </childnode>
        <childnode refid="123880" relation="include">
        </childnode>
        <childnode refid="123912" relation="include">
        </childnode>
        <childnode refid="123957" relation="include">
        </childnode>
        <childnode refid="123958" relation="include">
        </childnode>
        <childnode refid="123834" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="13"><highlight class="comment">//<sp/>Include<sp/>this<sp/>class&apos;s<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ElectronPhotonSelectorTools/AsgElectronChargeIDSelectorTool.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&quot;AsgElectronPhotonIsEMSelectorConfigHelper.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&quot;EGSelectorConfigurationMapping.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>STL<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//EDM<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODEgamma/Electron.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODTracking/Vertex.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODTracking/VertexContainer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODCaloEvent/CaloCluster.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TEnv.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TFile.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TObjString.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TObjArray.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;PathResolver/PathResolver.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Standard<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><ref refid="db/d40/classAsgElectronChargeIDSelectorTool_1a1942846dca8eaf4fc3d503543dbedb76" kindref="member">AsgElectronChargeIDSelectorTool::AsgElectronChargeIDSelectorTool</ref>(std::string<sp/>myname)<sp/>:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>AsgTool(myname)<sp/></highlight><highlight class="comment">//,m_cutOnBDT(0)//,m_configFile(&quot;&quot;)//,m_rootTool(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Declare<sp/>the<sp/>needed<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>declareProperty(</highlight><highlight class="stringliteral">&quot;WorkingPoint&quot;</highlight><highlight class="normal">,m_WorkingPoint=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;The<sp/>Working<sp/>Point&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//declareProperty(&quot;ConfigFile&quot;,m_configFile=&quot;&quot;,&quot;The<sp/>config<sp/>file<sp/>to<sp/>use&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>declareProperty(</highlight><highlight class="stringliteral">&quot;usePVContainer&quot;</highlight><highlight class="normal">,<sp/>m_usePVCont=</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Whether<sp/>to<sp/>use<sp/>the<sp/>PV<sp/>container&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>declareProperty(</highlight><highlight class="stringliteral">&quot;nPVdefault&quot;</highlight><highlight class="normal">,<sp/>m_nPVdefault<sp/>=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>default<sp/>number<sp/>of<sp/>PVs<sp/>if<sp/>not<sp/>counted&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>declareProperty(</highlight><highlight class="stringliteral">&quot;primaryVertexContainer&quot;</highlight><highlight class="normal">,<sp/>m_primVtxContName=</highlight><highlight class="stringliteral">&quot;PrimaryVertices&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>primary<sp/>vertex<sp/>container<sp/>name&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>declareProperty(</highlight><highlight class="stringliteral">&quot;TrainingFile&quot;</highlight><highlight class="normal">,<sp/><sp/>m_trainingFile=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>input<sp/>ROOT<sp/>file<sp/>name<sp/>holding<sp/>training&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>declareProperty(</highlight><highlight class="stringliteral">&quot;CutOnBDT&quot;</highlight><highlight class="normal">,m_cutOnBDT=0,</highlight><highlight class="stringliteral">&quot;Cut<sp/>on<sp/>BDT<sp/>discriminant&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>m_pid_name=myname.data();</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Standard<sp/>destructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><ref refid="db/d40/classAsgElectronChargeIDSelectorTool_1a960b488dad0579064c373340b4b77ee2" kindref="member">AsgElectronChargeIDSelectorTool::~AsgElectronChargeIDSelectorTool</ref>()</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="d6/d1b/classRoot_1_1TPhotonIsEMSelector_1ac68886fb64288f634f894f4fe6fb3e30" kindref="member">finalize</ref>().isFailure()){</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR<sp/>(<sp/></highlight><highlight class="stringliteral">&quot;Failure<sp/>in<sp/>AsgElectronChargeIDSelectorTool<sp/>finalize()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//delete<sp/>m_rootTool;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bdt:<sp/>m_v_bdts)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bdt)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>bdt;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Asgena<sp/>initialize<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">StatusCode<sp/><ref refid="db/d40/classAsgElectronChargeIDSelectorTool_1ae945f107e9fcae78ae7f20195671650e" kindref="member">AsgElectronChargeIDSelectorTool::initialize</ref>()</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>m_pid_name.ToLower();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(m_pid_name.Contains(</highlight><highlight class="stringliteral">&quot;recon&quot;</highlight><highlight class="normal">)<sp/>)<sp/>m_pid_name=</highlight><highlight class="stringliteral">&quot;recon&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pid_name.Contains(</highlight><highlight class="stringliteral">&quot;loose&quot;</highlight><highlight class="normal">)<sp/>)<sp/>m_pid_name=</highlight><highlight class="stringliteral">&quot;loose&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pid_name.Contains(</highlight><highlight class="stringliteral">&quot;medium&quot;</highlight><highlight class="normal">))<sp/>m_pid_name=</highlight><highlight class="stringliteral">&quot;medium&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pid_name.Contains(</highlight><highlight class="stringliteral">&quot;tight&quot;</highlight><highlight class="normal">)<sp/>)<sp/>m_pid_name=</highlight><highlight class="stringliteral">&quot;tight&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pid_name=</highlight><highlight class="stringliteral">&quot;tight&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(</highlight><highlight class="stringliteral">&quot;PID<sp/>menu<sp/>was<sp/>not<sp/>recognized,<sp/>using<sp/>default<sp/>PID<sp/>menu:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_pid_name<sp/>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>ATH_MSG_INFO(</highlight><highlight class="stringliteral">&quot;PID<sp/>menu<sp/>to<sp/>use:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_pid_name<sp/>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>std::string<sp/>TrainingFile;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_trainingFile.empty())<sp/>{<sp/><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>property<sp/>was<sp/>set<sp/>by<sp/>the<sp/>user,<sp/>take<sp/>that.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//KM:<sp/>below<sp/>should<sp/>be<sp/>uncommented<sp/>after<sp/>the<sp/>file<sp/>is<sp/>in<sp/>the<sp/>official<sp/>place!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>TrainingFile=<sp/>PathResolverFindCalibFile(<sp/>m_trainingFile<sp/>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(TrainingFile==</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">){</highlight><highlight class="comment">//Error<sp/>if<sp/>it<sp/>cant<sp/>find<sp/>the<sp/>conf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>locate<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_trainingFile<sp/>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>ATH_MSG_INFO(</highlight><highlight class="stringliteral">&quot;trainingfile<sp/>to<sp/>use<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>TrainingFile<sp/>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>configuration<sp/>file:<sp/>\&quot;&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>m_trainingFile&lt;&lt;</highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>TFile*<sp/>bdtfile<sp/>=<sp/>TFile::Open(TrainingFile.data());</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bdtfile)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;Input<sp/>file<sp/>found<sp/>to<sp/>be<sp/>empty!!<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>TrainingFile);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>TObjArray*<sp/>toa=<sp/>(TObjArray*)<sp/>bdtfile-&gt;Get(</highlight><highlight class="stringliteral">&quot;/ECIDS_&quot;</highlight><highlight class="normal">+m_pid_name+</highlight><highlight class="stringliteral">&quot;/variables&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>std::string<sp/>commaSepVars=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(toa)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>TObjString<sp/>*tos=<sp/>0;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(toa-&gt;GetEntries()&gt;0)<sp/>tos=<sp/>(TObjString*)<sp/>toa-&gt;At(0);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>commaSepVars=tos-&gt;GetString().Data();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_INFO(</highlight><highlight class="stringliteral">&quot;Variables<sp/>for<sp/>ECIDS=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;commaSepVars);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>ATH_MSG_FATAL(</highlight><highlight class="stringliteral">&quot;Training<sp/>file<sp/>does<sp/>not<sp/>contain<sp/>a<sp/>list<sp/>of<sp/>input<sp/>variables&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//prepare<sp/>m_inputVars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>m_inputVars.clear();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(commaSepVars.find(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">)!=std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>m_inputVars.push_back(commaSepVars.substr(0,commaSepVars.find(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>commaSepVars.erase(0,commaSepVars.find(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">)+1);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>m_inputVars.push_back(commaSepVars.substr(0,-1));</highlight><highlight class="comment">//push<sp/>back<sp/>the<sp/>last<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>std::vector&lt;float*&gt;<sp/>inputPointers;<sp/><sp/></highlight><highlight class="comment">//KM:<sp/>set<sp/>pointers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i_fold=0;<sp/>i_fold&lt;m_nfold;<sp/>i_fold++)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>TString<sp/>treename=</highlight><highlight class="stringliteral">&quot;/ECIDS_&quot;</highlight><highlight class="normal">+m_pid_name+</highlight><highlight class="stringliteral">&quot;/BDT&quot;</highlight><highlight class="normal">;</highlight><highlight class="comment">//=TString::Format(&quot;/CFK_tight/BDT_%do%d&quot;,i_fold,m_nfold);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;Trying<sp/>to<sp/>access<sp/>a<sp/>ttree<sp/>with<sp/>name:<sp/>&quot;&lt;&lt;treename&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>TTree*<sp/>tree<sp/>=<sp/>(TTree*)bdtfile-&gt;Get(treename);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>m_v_bdts.push_back(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d2/daa/classMVAUtils_1_1BDT" kindref="compound">MVAUtils::BDT</ref>(tree));</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>noBadVariableFound<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i_fold==0)<sp/>noBadVariableFound<sp/>=<sp/>SetVariableRefs(m_inputVars,inputPointers);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!noBadVariableFound)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;\tUnknown<sp/>input<sp/>variable<sp/>given,<sp/>disabling<sp/>the<sp/>algorithm....&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//KM:<sp/>disabling<sp/>feature<sp/>to<sp/>be<sp/>implemented.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>m_v_bdts.back()-&gt;SetPointers(inputPointers);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>name<sp/>of<sp/>the<sp/>current<sp/>operating<sp/>point,<sp/>and<sp/>massage<sp/>the<sp/>other<sp/>strings<sp/>accordingly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//ATH_MSG_VERBOSE(<sp/>&quot;Going<sp/>to<sp/>massage<sp/>the<sp/>labels<sp/>based<sp/>on<sp/>the<sp/>provided<sp/>operating<sp/>point...&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>m_cutPosition_bdt<sp/>=<sp/>m_acceptBDT.addCut(<sp/></highlight><highlight class="stringliteral">&quot;bdt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pass<sp/>bdt&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>m_resultPosition_bdt<sp/>=<sp/>m_resultBDT.addResult(<sp/></highlight><highlight class="stringliteral">&quot;bdt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ECIDS<sp/>bdt&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS<sp/>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Asgena<sp/>finalize<sp/>method<sp/>(now<sp/>called<sp/>by<sp/>destructor)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal">StatusCode<sp/><ref refid="db/d40/classAsgElectronChargeIDSelectorTool_1aa6318493c66dfc0a021f397b572fb5f2" kindref="member">AsgElectronChargeIDSelectorTool::finalize</ref>()</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>main<sp/>accept<sp/>method:<sp/>the<sp/>actual<sp/>cuts<sp/>are<sp/>applied<sp/>here<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d75/classRoot_1_1TAccept" kindref="compound">Root::TAccept</ref>&amp;<sp/><ref refid="db/d40/classAsgElectronChargeIDSelectorTool_1a477f8633b46005263a7f162a4e49a102" kindref="member">AsgElectronChargeIDSelectorTool::accept</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/da6/classxAOD_1_1Electron" kindref="compound" tooltip="Class describing an electron.">xAOD::Electron</ref>*<sp/>eg,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mu<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="167"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bdt=calculate(eg,mu);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;\t<sp/>accept(<sp/>const<sp/>xAOD::Electron*<sp/>eg,<sp/>double<sp/>mu<sp/>),<sp/>bdt=&quot;</highlight><highlight class="normal">&lt;&lt;bdt);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>m_acceptBDT.clear();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>m_acceptBDT.setCutResult(m_cutPosition_bdt,bdt&gt;m_cutOnBDT);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_acceptBDT;</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Accept<sp/>method<sp/>for<sp/>EFCaloLH<sp/>in<sp/>the<sp/>trigger;<sp/>do<sp/>full<sp/>LH<sp/>if<sp/>!CaloCutsOnly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d75/classRoot_1_1TAccept" kindref="compound">Root::TAccept</ref>&amp;<sp/><ref refid="db/d40/classAsgElectronChargeIDSelectorTool_1a477f8633b46005263a7f162a4e49a102" kindref="member">AsgElectronChargeIDSelectorTool::accept</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d2b/classxAOD_1_1Egamma" kindref="compound" tooltip="Class describing an e/gamma.">xAOD::Egamma</ref>*<sp/>eg,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mu)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="184"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bdt=calculate(eg,mu);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;\t<sp/>accept(<sp/>const<sp/>xAOD::Egamma*<sp/>eg,<sp/>double<sp/>mu<sp/>),<sp/>bdt=&quot;</highlight><highlight class="normal">&lt;&lt;bdt);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>m_acceptBDT.clear();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>m_acceptBDT.setCutResult(m_cutPosition_bdt,bdt&gt;m_cutOnBDT);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_acceptBDT;</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>main<sp/>result<sp/>method:<sp/>the<sp/>actual<sp/>likelihood<sp/>is<sp/>calculated<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/d94/classRoot_1_1TResult" kindref="compound">Root::TResult</ref>&amp;<sp/><ref refid="db/d40/classAsgElectronChargeIDSelectorTool_1a47964b5c6e36dc14bb461e1b6216324b" kindref="member">AsgElectronChargeIDSelectorTool::calculate</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/da6/classxAOD_1_1Electron" kindref="compound" tooltip="Class describing an electron.">xAOD::Electron</ref>*<sp/>eg,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mu<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="200"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;\t<sp/>AsgElectronChargeIDSelectorTool::calculate(<sp/>const<sp/>xAOD::Electron*<sp/>eg,<sp/>double<sp/>mu=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;mu&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!eg<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR<sp/>(</highlight><highlight class="stringliteral">&quot;Failed,<sp/>no<sp/>egamma<sp/>object.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_resultDummy;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d91/classxAOD_1_1CaloCluster__v1" kindref="compound">xAOD::CaloCluster</ref>*<sp/>cluster<sp/>=<sp/>eg-&gt;caloCluster();</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!cluster<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR<sp/>(</highlight><highlight class="stringliteral">&quot;Failed,<sp/>no<sp/>cluster.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_resultDummy;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>energy<sp/>=<sp/><sp/>cluster-&gt;<ref refid="dd/d91/classxAOD_1_1CaloCluster__v1_1a48cb5e55ecfd3a2a77e1ba2afe4ab5d3" kindref="member" tooltip="The total energy of the particle.">e</ref>();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>eta<sp/>=<sp/>cluster-&gt;<ref refid="dd/d91/classxAOD_1_1CaloCluster__v1_1ab4ac5c364b9d7da754464b61eef9779b" kindref="member" tooltip="Get the eta in one layer of the EM Calo.">etaBE</ref>(2);<sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>fabs(eta)<sp/>&gt;<sp/>300.0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR<sp/>(</highlight><highlight class="stringliteral">&quot;Failed,<sp/>eta<sp/>range.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_resultDummy;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>et<sp/>=<sp/>0.;</highlight><highlight class="comment">//<sp/>transverse<sp/>energy<sp/>of<sp/>the<sp/>electron<sp/>(using<sp/>the<sp/>track<sp/>eta)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eg-&gt;trackParticle()<sp/>)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>et<sp/><sp/><sp/><sp/><sp/>=<sp/>(<sp/>cosh(eg-&gt;trackParticle()-&gt;eta())<sp/>!=<sp/>0.)<sp/>?<sp/>energy/cosh(eg-&gt;trackParticle()-&gt;eta())<sp/>:<sp/>0.;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>et<sp/><sp/>=<sp/>(<sp/>cosh(eta)<sp/>!=<sp/>0.)<sp/>?<sp/>energy/cosh(eta)<sp/>:<sp/>0.;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>track<sp/>hits<sp/>and<sp/>other<sp/>track<sp/>quantities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>uint8_t<sp/>nSCT(0);<sp/></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>uint8_t<sp/>nTRThigh(0);<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>uint8_t<sp/>nTRThighOutliers(0);<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>uint8_t<sp/>nTRT(0);<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>uint8_t<sp/>nTRTOutliers(0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>uint8_t<sp/>nTRTXenon(0);<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>trackqoverp(0.0);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>trackqoverpsig(0.0);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>charge(0.0);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>lifeSign(0.0);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>trackchi2(0.0);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d0(0.0);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z0(0.0);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>phi0(0.0);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>theta(0.0);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>EoverP(0.0);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d0sigma(0.0);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dpOverp(0.0);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>TRT_PID(0.0);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//double<sp/>trans_TRT_PID(0.0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>deltaPhi1=0,<sp/>deltaPhi2=0;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>deltaPhiFromLM=0;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>deltaPhiRescaled2=0;</highlight><highlight class="comment">//deltaEta=0,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//double<sp/>rTRT(0.0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>TVector2<sp/>el_cluster;<sp/>el_cluster.SetMagPhi(cluster-&gt;<ref refid="dd/d91/classxAOD_1_1CaloCluster__v1_1a443c16eb7a013ea5abedecc99c3a951e" kindref="member" tooltip="Get the energy in one layer of the EM Calo.">energyBE</ref>(2)/cosh(eta),cluster-&gt;<ref refid="dd/d91/classxAOD_1_1CaloCluster__v1_1a68abf58e648793d020693b8b1b0e8743" kindref="member" tooltip="Get the phi in one layer of the EM Calo.">phiBE</ref>(2));</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allFound<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>retrieve<sp/>associated<sp/>TrackParticle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref>*<sp/>t<sp/>=<sp/>eg-&gt;trackParticle();<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>trackqoverp<sp/>=<sp/>t-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a5444da1e68e74f59657b0b3bbd5113f5" kindref="member" tooltip="Returns the  parameter.">qOverP</ref>();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>charge=<sp/>t-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a034186ea39ba84a3040213dd96f6ab9e" kindref="member" tooltip="Returns the charge.">charge</ref>();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>d0<sp/>=<sp/>t-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a11e93c8f396a3ae6f0d9ae9257983312" kindref="member" tooltip="Returns the  parameter.">d0</ref>();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_map_inputs.find(</highlight><highlight class="stringliteral">&quot;z0sinTheta&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)!=<sp/>m_map_inputs.end())<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>z0<sp/>=<sp/>t-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a17b0af19adc8a9e13083248aba0b023e" kindref="member" tooltip="Returns the  parameter.">z0</ref>();</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>theta<sp/>=<sp/>t-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1ab5db486ec9a6ccb7a882fc8fe3cef999" kindref="member" tooltip="Returns the  parameter, which has range 0 to .">theta</ref>();</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_map_inputs.find(</highlight><highlight class="stringliteral">&quot;chi2oftrackfit&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)!=<sp/>m_map_inputs.end())</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>trackchi2<sp/>=<sp/>t-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a3331c22fec75c21743726b0560867e18" kindref="member" tooltip="Returns the  of the overall track fit.">chiSquared</ref>();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>phi0<sp/>=<sp/>t-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a772eca8615366991d7b6686f31bba0ca" kindref="member" tooltip="The azimuthal angle () of the particle (has range  to .).">phi</ref>()<sp/>+<sp/>(d0&gt;=0?<sp/>M_PI/2<sp/>:<sp/>-M_PI/2);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>TVector2<sp/>d0_direction;<sp/><sp/>d0_direction.SetMagPhi(fabs(d0),phi0);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>inner_product<sp/>=<sp/>el_cluster.X()*d0_direction.X()<sp/>+<sp/>el_cluster.Y()*d0_direction.Y();</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>lifeSign<sp/>=<sp/>inner_product&gt;=0?<sp/>1<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>EoverP<sp/><sp/><sp/>=<sp/>energy<sp/>*<sp/>fabs(t-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a5444da1e68e74f59657b0b3bbd5113f5" kindref="member" tooltip="Returns the  parameter.">qOverP</ref>());</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_map_inputs.find(</highlight><highlight class="stringliteral">&quot;d0Err&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)!=<sp/>m_map_inputs.end()<sp/>or</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_map_inputs.find(</highlight><highlight class="stringliteral">&quot;d0Sig&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)!=<sp/>m_map_inputs.end()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>vard0<sp/>=<sp/>t-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a6216520cb9c2f1c3dfc3996221006ba1" kindref="member" tooltip="Returns the 5x5 symmetric matrix containing the defining parameters covariance matrix...">definingParametersCovMatrix</ref>()(0,0);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vard0<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>d0sigma=sqrtf(vard0);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;&amp;cov=<sp/>t-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a71ff3d1e19adda80f96181c5994e5d85" kindref="member" tooltip="Returns the length 6 vector containing the elements of defining parameters covariance...">definingParametersCovMatrixVec</ref>();</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>trackqoverpsig=<sp/>cov[14];</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_map_inputs.find(</highlight><highlight class="stringliteral">&quot;nSctHits&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)!=<sp/>m_map_inputs.end())</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>allFound<sp/>=<sp/>allFound<sp/>&amp;&amp;<sp/>t-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a356dee9b1911c93d3673a9b791f9df5c" kindref="member">summaryValue</ref>(nSCT,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aab24f8cfe1b239d03666babf80ec9bee2" kindref="member" tooltip="number of hits in SCT [unit8_t].">xAOD::numberOfSCTHits</ref>);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allFound<sp/>=<sp/>allFound<sp/>&amp;&amp;<sp/>t-&gt;summaryValue(nTRThigh,<sp/>xAOD::numberOfTRTHighThresholdHits);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allFound<sp/>=<sp/>allFound<sp/>&amp;&amp;<sp/>t-&gt;summaryValue(nTRThighOutliers,<sp/>xAOD::numberOfTRTHighThresholdOutliers);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allFound<sp/>=<sp/>allFound<sp/>&amp;&amp;<sp/>t-&gt;summaryValue(nTRT,<sp/>xAOD::numberOfTRTHits);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allFound<sp/>=<sp/>allFound<sp/>&amp;&amp;<sp/>t-&gt;summaryValue(nTRTOutliers,<sp/>xAOD::numberOfTRTOutliers);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allFound<sp/>=<sp/>allFound<sp/>&amp;&amp;<sp/>t-&gt;summaryValue(nTRTXenon,<sp/>xAOD::numberOfTRTXenonHits);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allFound<sp/>=<sp/>allFound<sp/>&amp;&amp;<sp/>t-&gt;summaryValue(TRT_PID,<sp/>xAOD::eProbabilityHT);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Transform<sp/>the<sp/>TRT<sp/>PID<sp/>output<sp/>for<sp/>use<sp/>in<sp/>the<sp/>LH<sp/>tool.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fEpsilon<sp/>=<sp/>1.0e-30;<sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>avoid<sp/>zero<sp/>division</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pid_tmp<sp/>=<sp/>TRT_PID;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pid_tmp<sp/>&gt;=<sp/>1.0)<sp/>pid_tmp<sp/>=<sp/>1.0<sp/>-<sp/>1.0e-15;<sp/><sp/></highlight><highlight class="comment">//this<sp/>number<sp/>comes<sp/>from<sp/>TMVA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pid_tmp<sp/>&lt;=<sp/>fEpsilon)<sp/>pid_tmp<sp/>=<sp/>fEpsilon;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>double<sp/>tau<sp/>=<sp/>15.0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//trans_TRT_PID<sp/>=<sp/>-<sp/>log(1.0/pid_tmp<sp/>-<sp/>1.0)*(1./double(tau));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_map_inputs.find(</highlight><highlight class="stringliteral">&quot;deltaPoverP&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)!=<sp/>m_map_inputs.end())<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>t-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1af33d4b5f2487f1287a48d5627b103bb4" kindref="member" tooltip="Function to determine if this TrackParticle contains track parameters at a certain...">indexOfParameterAtPosition</ref>(index,<sp/><ref refid="dd/d44/namespacexAOD_1af1f41a465c80c364db070f606afe5c4eaf60ef702c09a4e2bd193fec1fe37a6ab" kindref="member" tooltip="Parameter defined at the position of the last measurement.">xAOD::LastMeasurement</ref>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>refittedTrack_LMqoverp<sp/><sp/>=<sp/></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a034186ea39ba84a3040213dd96f6ab9e" kindref="member" tooltip="Returns the charge.">charge</ref>()<sp/>/<sp/>sqrt(std::pow(t-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a8f4a468844babafe3edd06cd4f8cfd12" kindref="member" tooltip="Returns the parameter x momentum component, for &amp;#39;index&amp;#39;.">parameterPX</ref>(index),<sp/>2)<sp/>+</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::pow(t-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1aed110d5ef1c1e330366b7d04fe6516e0" kindref="member" tooltip="Returns the parameter y momentum component, for &amp;#39;index&amp;#39;.">parameterPY</ref>(index),<sp/>2)<sp/>+</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::pow(t-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a4efd2e3fa5ffa429f7c9d31cf35c3859" kindref="member" tooltip="Returns the parameter z momentum component, for &amp;#39;index&amp;#39;.">parameterPZ</ref>(index),<sp/>2));</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>dpOverp<sp/>=<sp/>1<sp/>-<sp/>trackqoverp/(refittedTrack_LMqoverp);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>allFound*=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_WARNING<sp/>(<sp/></highlight><highlight class="stringliteral">&quot;Failed,<sp/>no<sp/>track<sp/>particle:<sp/>et=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>et<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;eta=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>eta<sp/>);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Rphi(0);</highlight><highlight class="comment">//float<sp/>Reta(0),<sp/>Rphi(0),<sp/><sp/>Rhad1(0),<sp/>Rhad(0),<sp/>ws3(0),<sp/>w2(0),<sp/>f1(0),<sp/>Eratio(0),<sp/>f3(0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>allFound<sp/>=<sp/>allFound<sp/>&amp;&amp;<sp/>eg-&gt;showerShapeValue(Rphi,<sp/>xAOD::EgammaParameters::Rphi);</highlight><highlight class="comment">//<sp/>rphi<sp/>e233/e237</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>allFound<sp/>=<sp/>allFound<sp/>&amp;&amp;<sp/>eg-&gt;trackCaloMatchValue(deltaEta,<sp/>xAOD::EgammaParameters::deltaEta1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>difference<sp/>between<sp/>the<sp/>cluster<sp/>phi<sp/>(sampling<sp/>2)<sp/>and<sp/>the<sp/>eta<sp/>of<sp/>the<sp/>track<sp/>extrapolated<sp/>from<sp/>the<sp/>last<sp/>measurement<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>allFound<sp/>=<sp/>allFound<sp/>&amp;&amp;<sp/>eg-&gt;trackCaloMatchValue(deltaPhiRescaled2,<sp/>xAOD::EgammaParameters::deltaPhiRescaled2);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_map_inputs.find(</highlight><highlight class="stringliteral">&quot;deltaphi1&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)!=<sp/>m_map_inputs.end())</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>allFound<sp/>=<sp/>allFound<sp/>&amp;&amp;<sp/>eg-&gt;trackCaloMatchValue(deltaPhi1,<sp/>xAOD::EgammaParameters::deltaPhi1);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_map_inputs.find(</highlight><highlight class="stringliteral">&quot;deltaphi2&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)!=<sp/>m_map_inputs.end()<sp/>or<sp/></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>m_map_inputs.find(</highlight><highlight class="stringliteral">&quot;deltaDeltaPhiFirstAndLM&quot;</highlight><highlight class="normal">)!=<sp/>m_map_inputs.end())</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>allFound<sp/>=<sp/>allFound<sp/>&amp;&amp;<sp/>eg-&gt;trackCaloMatchValue(deltaPhi2,<sp/>xAOD::EgammaParameters::deltaPhi2);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_map_inputs.find(</highlight><highlight class="stringliteral">&quot;deltaDeltaPhiFirstAndLM&quot;</highlight><highlight class="normal">)!=<sp/>m_map_inputs.end())</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>allFound<sp/>=<sp/>allFound<sp/>&amp;&amp;<sp/>eg-&gt;trackCaloMatchValue(deltaPhiFromLM,<sp/>xAOD::EgammaParameters::deltaPhiFromLastMeasurement);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TRT<sp/>high-to-low<sp/>threshold<sp/>hits<sp/>ratio</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(<sp/>nTRTXenon<sp/>&gt;<sp/>0<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>rTRT<sp/>=<sp/>((double)(nTRThigh+nTRThighOutliers))<sp/>/<sp/>((double)(nTRTXenon))<sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>else<sp/>if<sp/>(<sp/>nTRTXenon<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>(nTRT+nTRTOutliers)<sp/>&gt;<sp/>0<sp/>)<sp/>//<sp/>this<sp/>is<sp/>always<sp/>false<sp/>as<sp/>given</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>rTRT<sp/>=<sp/>((double)(nTRThigh+nTRThighOutliers))<sp/>/<sp/>((double)(nTRT+nTRTOutliers))<sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>number<sp/>of<sp/>primary<sp/>vertices<sp/>in<sp/>this<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>double<sp/>ip<sp/>=<sp/>static_cast&lt;double&gt;(m_nPVdefault);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if(mu<sp/>&lt;<sp/>0)<sp/>//<sp/>use<sp/>npv<sp/>if<sp/>mu<sp/>is<sp/>negative<sp/>(not<sp/>given)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>ip<sp/>=<sp/>static_cast&lt;double&gt;(m_usePVCont<sp/>?<sp/>this-&gt;getNPrimVertices()<sp/>:<sp/>m_nPVdefault);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>else<sp/>ip<sp/>=<sp/>mu;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ATH_MSG_VERBOSE(&quot;xAOD<sp/>variables:<sp/>pt<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;&lt;&lt;<sp/>et<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ATH_MSG_VERBOSE(&quot;xAOD<sp/>variables:<sp/>eta<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;&lt;&lt;<sp/>eta<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ATH_MSG_VERBOSE(&quot;xAOD<sp/>variables:<sp/>abs_eta<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;&lt;&lt;<sp/>fabs(eta)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ATH_MSG_VERBOSE(&quot;xAOD<sp/>variables:<sp/>d0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;&lt;&lt;<sp/>d0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ATH_MSG_VERBOSE(&quot;xAOD<sp/>variables:<sp/>ld0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;&lt;&lt;<sp/>lifeSign*d0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ATH_MSG_VERBOSE(&quot;xAOD<sp/>variables:<sp/>cd0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;&lt;&lt;<sp/>charge*d0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ATH_MSG_VERBOSE(&quot;xAOD<sp/>variables:<sp/>EoverP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;&lt;&lt;<sp/>EoverP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ATH_MSG_VERBOSE(&quot;xAOD<sp/>variables:<sp/>deltaphi1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;&lt;&lt;<sp/>deltaPhi1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ATH_MSG_VERBOSE(&quot;xAOD<sp/>variables:<sp/>deltaphiRes<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;&lt;&lt;<sp/>deltaPhiRescaled2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ATH_MSG_VERBOSE(&quot;xAOD<sp/>variables:<sp/>Rphi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;&lt;&lt;<sp/>Rphi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ATH_MSG_VERBOSE(&quot;xAOD<sp/>variables:<sp/>qoverpSig<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;&lt;&lt;<sp/>trackqoverpsig<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ATH_MSG_VERBOSE(&quot;xAOD<sp/>variables:<sp/>nSctHits<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;&lt;&lt;<sp/>nSCT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ATH_MSG_VERBOSE(&quot;xAOD<sp/>variables:<sp/>z0sinTheta<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;&lt;&lt;<sp/>z0*sin(theta)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ATH_MSG_VERBOSE(&quot;xAOD<sp/>variables:<sp/>d0Err<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;&lt;&lt;<sp/>d0sigma<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ATH_MSG_VERBOSE(&quot;xAOD<sp/>variables:<sp/>d0Sig<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;&lt;&lt;<sp/>d0/d0sigma<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ATH_MSG_VERBOSE(&quot;xAOD<sp/>variables:<sp/>deltaphi2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;&lt;&lt;<sp/>deltaPhi2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ATH_MSG_VERBOSE(&quot;xAOD<sp/>variables:<sp/>chi2oftrackfit<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;&lt;&lt;<sp/>trackchi2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ATH_MSG_VERBOSE(&quot;xAOD<sp/>variables:<sp/>deltaPoverP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;&lt;&lt;<sp/>dpOverp<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ATH_MSG_VERBOSE(&quot;xAOD<sp/>variables:<sp/>deltaDeltaPhiFirstandLM<sp/>=<sp/>&quot;&lt;&lt;<sp/>deltaPhi2-deltaPhiFromLM<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;xAOD<sp/>variables:<sp/>pt<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>et<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;std::endl&lt;&lt;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;xAOD<sp/>variables:<sp/>eta<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>eta<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;std::endl&lt;&lt;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;xAOD<sp/>variables:<sp/>abs_eta<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>fabs(eta)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;std::endl&lt;&lt;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;xAOD<sp/>variables:<sp/>d0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>d0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;std::endl&lt;&lt;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;xAOD<sp/>variables:<sp/>ld0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>lifeSign*d0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;std::endl&lt;&lt;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;xAOD<sp/>variables:<sp/>cd0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>charge*d0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;std::endl&lt;&lt;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;xAOD<sp/>variables:<sp/>EoverP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>EoverP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;std::endl&lt;&lt;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;xAOD<sp/>variables:<sp/>deltaphi1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>deltaPhi1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;std::endl&lt;&lt;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;xAOD<sp/>variables:<sp/>deltaphiRes<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>deltaPhiRescaled2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;std::endl&lt;&lt;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;xAOD<sp/>variables:<sp/>Rphi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>Rphi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;std::endl&lt;&lt;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;xAOD<sp/>variables:<sp/>qoverpSig<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>trackqoverpsig<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;std::endl&lt;&lt;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;xAOD<sp/>variables:<sp/>nSctHits<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>nSCT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;std::endl&lt;&lt;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;xAOD<sp/>variables:<sp/>z0sinTheta<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>z0*sin(theta)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;std::endl&lt;&lt;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;xAOD<sp/>variables:<sp/>d0Err<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>d0sigma<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;std::endl&lt;&lt;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;xAOD<sp/>variables:<sp/>d0Sig<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>d0/d0sigma<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;std::endl&lt;&lt;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;xAOD<sp/>variables:<sp/>deltaphi2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>deltaPhi2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;std::endl&lt;&lt;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;xAOD<sp/>variables:<sp/>chi2oftrackfit<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>trackchi2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;std::endl&lt;&lt;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;xAOD<sp/>variables:<sp/>deltaPoverP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>dpOverp<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;std::endl&lt;&lt;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;xAOD<sp/>variables:<sp/>deltaDeltaPhiFirstandLM<sp/>=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>deltaPhi2-deltaPhiFromLM<sp/>);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_map_inputs.find(</highlight><highlight class="stringliteral">&quot;pt&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)!=<sp/>m_map_inputs.end())<sp/>m_map_inputs[</highlight><highlight class="stringliteral">&quot;pt&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]<sp/>=<sp/>et<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_map_inputs.find(</highlight><highlight class="stringliteral">&quot;eta&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)!=<sp/>m_map_inputs.end())<sp/>m_map_inputs[</highlight><highlight class="stringliteral">&quot;eta&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]<sp/>=<sp/>eta<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_map_inputs.find(</highlight><highlight class="stringliteral">&quot;abs_eta&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)!=<sp/>m_map_inputs.end())<sp/>m_map_inputs[</highlight><highlight class="stringliteral">&quot;abs_eta&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]<sp/>=<sp/>fabs(eta)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_map_inputs.find(</highlight><highlight class="stringliteral">&quot;d0&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)!=<sp/>m_map_inputs.end())<sp/>m_map_inputs[</highlight><highlight class="stringliteral">&quot;d0&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]<sp/>=<sp/>d0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_map_inputs.find(</highlight><highlight class="stringliteral">&quot;ld0&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)!=<sp/>m_map_inputs.end())<sp/>m_map_inputs[</highlight><highlight class="stringliteral">&quot;ld0&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]<sp/>=<sp/>lifeSign*d0<sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_map_inputs.find(</highlight><highlight class="stringliteral">&quot;cd0&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)!=<sp/>m_map_inputs.end())<sp/>m_map_inputs[</highlight><highlight class="stringliteral">&quot;cd0&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]<sp/>=<sp/>charge*d0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_map_inputs.find(</highlight><highlight class="stringliteral">&quot;EoverP&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)!=<sp/>m_map_inputs.end())<sp/>m_map_inputs[</highlight><highlight class="stringliteral">&quot;EoverP&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]<sp/>=<sp/>EoverP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_map_inputs.find(</highlight><highlight class="stringliteral">&quot;deltaphi1&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)!=<sp/>m_map_inputs.end())<sp/>m_map_inputs[</highlight><highlight class="stringliteral">&quot;deltaphi1&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]<sp/>=<sp/>deltaPhi1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_map_inputs.find(</highlight><highlight class="stringliteral">&quot;deltaphiRes&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)!=<sp/>m_map_inputs.end())<sp/>m_map_inputs[</highlight><highlight class="stringliteral">&quot;deltaphiRes&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]<sp/>=<sp/>deltaPhiRescaled2;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_map_inputs.find(</highlight><highlight class="stringliteral">&quot;Rphi&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)!=<sp/>m_map_inputs.end())<sp/>m_map_inputs[</highlight><highlight class="stringliteral">&quot;Rphi&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]<sp/>=<sp/>Rphi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_map_inputs.find(</highlight><highlight class="stringliteral">&quot;qoverpSig&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)!=<sp/>m_map_inputs.end())<sp/>m_map_inputs[</highlight><highlight class="stringliteral">&quot;qoverpSig&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]<sp/>=<sp/>trackqoverpsig<sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_map_inputs.find(</highlight><highlight class="stringliteral">&quot;nSctHits&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)!=<sp/>m_map_inputs.end())<sp/>m_map_inputs[</highlight><highlight class="stringliteral">&quot;nSctHits&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]<sp/>=<sp/>nSCT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_map_inputs.find(</highlight><highlight class="stringliteral">&quot;z0sinTheta&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)!=<sp/>m_map_inputs.end())<sp/>m_map_inputs[</highlight><highlight class="stringliteral">&quot;z0sinTheta&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]<sp/>=<sp/>z0*sin(theta)<sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_map_inputs.find(</highlight><highlight class="stringliteral">&quot;d0Err&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)!=<sp/>m_map_inputs.end())<sp/>m_map_inputs[</highlight><highlight class="stringliteral">&quot;d0Err&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]<sp/>=<sp/>d0sigma<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_map_inputs.find(</highlight><highlight class="stringliteral">&quot;d0Sig&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)!=<sp/>m_map_inputs.end())<sp/>m_map_inputs[</highlight><highlight class="stringliteral">&quot;d0Sig&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]<sp/>=<sp/>d0/d0sigma<sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_map_inputs.find(</highlight><highlight class="stringliteral">&quot;deltaphi2&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)!=<sp/>m_map_inputs.end())<sp/>m_map_inputs[</highlight><highlight class="stringliteral">&quot;deltaphi2&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]<sp/>=<sp/>deltaPhi2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_map_inputs.find(</highlight><highlight class="stringliteral">&quot;chi2oftrackfit&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)!=<sp/>m_map_inputs.end())<sp/>m_map_inputs[</highlight><highlight class="stringliteral">&quot;chi2oftrackfit&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]<sp/>=<sp/>trackchi2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_map_inputs.find(</highlight><highlight class="stringliteral">&quot;deltaPoverP&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)!=<sp/>m_map_inputs.end())<sp/>m_map_inputs[</highlight><highlight class="stringliteral">&quot;deltaPoverP&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]<sp/>=<sp/>dpOverp<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_map_inputs.find(</highlight><highlight class="stringliteral">&quot;deltaDeltaPhiFirstAndLM&quot;</highlight><highlight class="normal">)!=<sp/>m_map_inputs.end())<sp/>m_map_inputs[</highlight><highlight class="stringliteral">&quot;deltaDeltaPhiFirstAndLM&quot;</highlight><highlight class="normal">]<sp/>=<sp/>deltaPhi2-deltaPhiFromLM;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//m_map_inputs[&quot;PtErr&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]<sp/>=<sp/>;//to<sp/>be<sp/>implemented</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!allFound)<sp/>ATH_MSG_FATAL(</highlight><highlight class="stringliteral">&quot;Missing<sp/>input<sp/>variable<sp/>for<sp/>ECIDS<sp/>BDT<sp/>calculation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//long<sp/>unsigned<sp/>event_number=0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//unsigned<sp/>bdt_index=event_number%2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>input:<sp/>m_map_inputs)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;\t<sp/>input:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;input.first&lt;&lt;</highlight><highlight class="stringliteral">&quot;\t=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;input.second);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>unsigned<sp/>i=0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>(auto<sp/>pointer:<sp/>m_v_bdts.at(bdt_index)-&gt;GetPointers())<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>std::cout&lt;&lt;&quot;\t<sp/>kmdebug:<sp/>&quot;&lt;&lt;m_inputVars.at(i)&lt;&lt;&quot;\t(&quot;&lt;&lt;pointer&lt;&lt;&quot;)\t<sp/>=<sp/>&quot;&lt;&lt;*pointer&lt;&lt;std::endl;<sp/>i++;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bdt_output<sp/>=<sp/>m_v_bdts.at(bdt_index)-&gt;GetGradBoostMVA(m_v_bdts.at(bdt_index)-&gt;GetPointers());</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;ECIDS-BDT=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;bdt_output);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>m_resultBDT.setResult(m_resultPosition_bdt,bdt_output);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_resultBDT;</highlight></codeline>
<codeline lineno="431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Calculate<sp/>method<sp/>for<sp/>EFCaloLH<sp/>in<sp/>the<sp/>trigger;<sp/>do<sp/>full<sp/>LH<sp/>if<sp/>!CaloCutsOnly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/d94/classRoot_1_1TResult" kindref="compound">Root::TResult</ref>&amp;<sp/><ref refid="db/d40/classAsgElectronChargeIDSelectorTool_1a47964b5c6e36dc14bb461e1b6216324b" kindref="member">AsgElectronChargeIDSelectorTool::calculate</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d2b/classxAOD_1_1Egamma" kindref="compound" tooltip="Class describing an e/gamma.">xAOD::Egamma</ref>*<sp/>eg,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mu<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="437"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;AsgElectronChargeIDSelectorTool::calculate(<sp/>const<sp/>xAOD::Egamma*<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;eg&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>double<sp/>mu=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;mu&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>)<sp/>const&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>ATH_MSG_WARNING(</highlight><highlight class="stringliteral">&quot;Method<sp/>not<sp/>implemented<sp/>for<sp/>egamma<sp/>object!<sp/>Reurning<sp/>-1!!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>m_resultBDT.setResult(m_resultPosition_bdt,-1);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_resultBDT;</highlight></codeline>
<codeline lineno="443"><highlight class="normal">}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d75/classRoot_1_1TAccept" kindref="compound">Root::TAccept</ref>&amp;<sp/><ref refid="db/d40/classAsgElectronChargeIDSelectorTool_1a477f8633b46005263a7f162a4e49a102" kindref="member">AsgElectronChargeIDSelectorTool::accept</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">xAOD::IParticle</ref>*<sp/>part)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="447"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;Entering<sp/>accept(<sp/>const<sp/>IParticle*<sp/>part<sp/>)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/da6/classxAOD_1_1Electron" kindref="compound" tooltip="Class describing an electron.">xAOD::Electron</ref>*<sp/>eg<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="dd/da6/classxAOD_1_1Electron" kindref="compound" tooltip="Class describing an electron.">xAOD::Electron</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(part);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(eg)</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d6/d1b/classRoot_1_1TPhotonIsEMSelector_1a907530be9e9bef1f932af60dbb7e7c7a" kindref="member">accept</ref>(eg);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;AsgElectronChargeIDSelectorTool::could<sp/>not<sp/>cast<sp/>to<sp/>const<sp/>Electron&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_acceptDummy;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/d94/classRoot_1_1TResult" kindref="compound">Root::TResult</ref>&amp;<sp/><ref refid="db/d40/classAsgElectronChargeIDSelectorTool_1a47964b5c6e36dc14bb461e1b6216324b" kindref="member">AsgElectronChargeIDSelectorTool::calculate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">xAOD::IParticle</ref>*<sp/>part)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="461"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/da6/classxAOD_1_1Electron" kindref="compound" tooltip="Class describing an electron.">xAOD::Electron</ref>*<sp/>eg<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="dd/da6/classxAOD_1_1Electron" kindref="compound" tooltip="Class describing an electron.">xAOD::Electron</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(part);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eg)</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>calculate(eg);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR<sp/>(<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Could<sp/>not<sp/>cast<sp/>to<sp/>const<sp/>Electron<sp/>&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_resultDummy;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal">}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>method<sp/>to<sp/>get<sp/>the<sp/>number<sp/>of<sp/>primary<sp/>vertices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(<sp/>This<sp/>is<sp/>horrible!<sp/>We<sp/>don&apos;t<sp/>want<sp/>to<sp/>iterate<sp/>over<sp/>all<sp/>vertices<sp/>in<sp/>the<sp/>event<sp/>for<sp/>each<sp/>electron!!!<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>This<sp/>is<sp/>slow!)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>AsgElectronChargeIDSelectorTool::getNPrimVertices()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="483"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>PVExists<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVtx(0);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::VertexContainer</ref>*<sp/>vxContainer(0);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(PVExists)</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>StatusCode::SUCCESS<sp/>!=<sp/>evtStore()-&gt;retrieve(<sp/>vxContainer,<sp/>m_primVtxContName<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_WARNING<sp/>(<sp/></highlight><highlight class="stringliteral">&quot;Vertex<sp/>container<sp/>not<sp/>found<sp/>with<sp/>name:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_primVtxContName<sp/>);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PVExists<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>if<sp/>retrieve<sp/>failed,<sp/>don&apos;t<sp/>try<sp/>to<sp/>retrieve<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nVtx;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;vxContainer-&gt;size();<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref>*<sp/>vxcand<sp/>=<sp/>vxContainer-&gt;at(i);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>vxcand-&gt;<ref refid="db/dd1/classxAOD_1_1Vertex__v1_1a24fcd904109cdb65100d8087d7d2caf1" kindref="member" tooltip="Get the number of tracks associated with this vertex.">nTrackParticles</ref>()<sp/>&gt;=<sp/>2<sp/>)<sp/>nVtx++;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nVtx;</highlight></codeline>
<codeline lineno="502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>AsgElectronChargeIDSelectorTool::SetVariableRefs(std::vector&lt;std::string&gt;<sp/>inputs,<sp/>std::vector&lt;float*&gt;<sp/>&amp;inputPointers)<sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>unknownVarFound<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>nVars<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>inputName:<sp/>inputs)<sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//KM:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>create<sp/>elements<sp/>by<sp/>assigning<sp/>default<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(inputName==</highlight><highlight class="stringliteral">&quot;pt&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;\t<sp/>Setting<sp/>up<sp/>BDT<sp/>using<sp/>variable:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;inputName);<sp/>m_map_inputs[inputName]=0;<sp/>inputPointers.push_back(&amp;m_map_inputs[inputName]);<sp/>nVars++;}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputName==</highlight><highlight class="stringliteral">&quot;eta&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;\t<sp/>Setting<sp/>up<sp/>BDT<sp/>using<sp/>variable:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;inputName);<sp/>m_map_inputs[inputName]=0;<sp/>inputPointers.push_back(&amp;m_map_inputs[inputName]);<sp/>nVars++;}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputName==</highlight><highlight class="stringliteral">&quot;abs_eta&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;\t<sp/>Setting<sp/>up<sp/>BDT<sp/>using<sp/>variable:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;inputName);<sp/>m_map_inputs[inputName]=0;<sp/>inputPointers.push_back(&amp;m_map_inputs[inputName]);<sp/>nVars++;}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputName==</highlight><highlight class="stringliteral">&quot;d0&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;\t<sp/>Setting<sp/>up<sp/>BDT<sp/>using<sp/>variable:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;inputName);<sp/>m_map_inputs[inputName]=0;<sp/>inputPointers.push_back(&amp;m_map_inputs[inputName]);<sp/>nVars++;}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputName==</highlight><highlight class="stringliteral">&quot;ld0&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;\t<sp/>Setting<sp/>up<sp/>BDT<sp/>using<sp/>variable:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;inputName);<sp/>m_map_inputs[inputName]=0;<sp/>inputPointers.push_back(&amp;m_map_inputs[inputName]);<sp/>nVars++;}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputName==</highlight><highlight class="stringliteral">&quot;cd0&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;\t<sp/>Setting<sp/>up<sp/>BDT<sp/>using<sp/>variable:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;inputName);<sp/>m_map_inputs[inputName]=0;<sp/>inputPointers.push_back(&amp;m_map_inputs[inputName]);<sp/>nVars++;}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputName==</highlight><highlight class="stringliteral">&quot;EoverP&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;\t<sp/>Setting<sp/>up<sp/>BDT<sp/>using<sp/>variable:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;inputName);<sp/>m_map_inputs[inputName]=0;<sp/>inputPointers.push_back(&amp;m_map_inputs[inputName]);<sp/>nVars++;}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputName==</highlight><highlight class="stringliteral">&quot;deltaphi1&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;\t<sp/>Setting<sp/>up<sp/>BDT<sp/>using<sp/>variable:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;inputName);<sp/>m_map_inputs[inputName]=0;<sp/>inputPointers.push_back(&amp;m_map_inputs[inputName]);<sp/>nVars++;}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputName==</highlight><highlight class="stringliteral">&quot;deltaphiRes&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;\t<sp/>Setting<sp/>up<sp/>BDT<sp/>using<sp/>variable:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;inputName);<sp/>m_map_inputs[inputName]=0;<sp/>inputPointers.push_back(&amp;m_map_inputs[inputName]);<sp/>nVars++;}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputName==</highlight><highlight class="stringliteral">&quot;Rphi&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;\t<sp/>Setting<sp/>up<sp/>BDT<sp/>using<sp/>variable:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;inputName);<sp/>m_map_inputs[inputName]=0;<sp/>inputPointers.push_back(&amp;m_map_inputs[inputName]);<sp/>nVars++;}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputName==</highlight><highlight class="stringliteral">&quot;qoverpSig&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;\t<sp/>Setting<sp/>up<sp/>BDT<sp/>using<sp/>variable:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;inputName);<sp/>m_map_inputs[inputName]=0;<sp/>inputPointers.push_back(&amp;m_map_inputs[inputName]);<sp/>nVars++;}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputName==</highlight><highlight class="stringliteral">&quot;nSctHits&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;\t<sp/>Setting<sp/>up<sp/>BDT<sp/>using<sp/>variable:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;inputName);<sp/>m_map_inputs[inputName]=0;<sp/>inputPointers.push_back(&amp;m_map_inputs[inputName]);<sp/>nVars++;}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputName==</highlight><highlight class="stringliteral">&quot;z0sinTheta&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;\t<sp/>Setting<sp/>up<sp/>BDT<sp/>using<sp/>variable:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;inputName);<sp/>m_map_inputs[inputName]=0;<sp/>inputPointers.push_back(&amp;m_map_inputs[inputName]);<sp/>nVars++;}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputName==</highlight><highlight class="stringliteral">&quot;d0Err&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;\t<sp/>Setting<sp/>up<sp/>BDT<sp/>using<sp/>variable:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;inputName);<sp/>m_map_inputs[inputName]=0;<sp/>inputPointers.push_back(&amp;m_map_inputs[inputName]);<sp/>nVars++;}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputName==</highlight><highlight class="stringliteral">&quot;d0Sig&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;\t<sp/>Setting<sp/>up<sp/>BDT<sp/>using<sp/>variable:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;inputName);<sp/>m_map_inputs[inputName]=0;<sp/>inputPointers.push_back(&amp;m_map_inputs[inputName]);<sp/>nVars++;}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputName==</highlight><highlight class="stringliteral">&quot;deltaphi2&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;\t<sp/>Setting<sp/>up<sp/>BDT<sp/>using<sp/>variable:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;inputName);<sp/>m_map_inputs[inputName]=0;<sp/>inputPointers.push_back(&amp;m_map_inputs[inputName]);<sp/>nVars++;}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputName==</highlight><highlight class="stringliteral">&quot;chi2oftrackfit&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;\t<sp/>Setting<sp/>up<sp/>BDT<sp/>using<sp/>variable:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;inputName);<sp/>m_map_inputs[inputName]=0;<sp/>inputPointers.push_back(&amp;m_map_inputs[inputName]);<sp/>nVars++;}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputName==</highlight><highlight class="stringliteral">&quot;deltaPoverP&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;\t<sp/>Setting<sp/>up<sp/>BDT<sp/>using<sp/>variable:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;inputName);<sp/>m_map_inputs[inputName]=0;<sp/>inputPointers.push_back(&amp;m_map_inputs[inputName]);<sp/>nVars++;}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputName==</highlight><highlight class="stringliteral">&quot;deltaDeltaPhiFirstAndLM&quot;</highlight><highlight class="normal">)<sp/>{ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;\t<sp/>Setting<sp/>up<sp/>BDT<sp/>using<sp/>variable:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;inputName);<sp/>m_map_inputs[inputName]=0;<sp/>inputPointers.push_back(&amp;m_map_inputs[inputName]);<sp/>nVars++;}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>variables<sp/>found<sp/>with<sp/>name:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;inputName);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unknownVarFound<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inputs.size()==nVars<sp/>and<sp/>!unknownVarFound;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="539"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/ElectronPhotonSelectorTools/Root/AsgElectronChargeIDSelectorTool.cxx"/>
  </compounddef>
</doxygen>
