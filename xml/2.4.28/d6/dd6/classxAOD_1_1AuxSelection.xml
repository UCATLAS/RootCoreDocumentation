<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d6/dd6/classxAOD_1_1AuxSelection" kind="class" prot="public">
    <compoundname>xAOD::AuxSelection</compoundname>
    <includes refid="d3/dd4/AuxSelection_8h" local="no">AuxSelection.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="d6/dd6/classxAOD_1_1AuxSelection_1a076b5fe8839bc5ed0d69dde67d980b94" prot="protected" static="no" mutable="no">
        <type>std::set&lt; std::string &gt;</type>
        <definition>std::set&lt; std::string &gt; xAOD::AuxSelection::m_names</definition>
        <argsstring></argsstring>
        <name>m_names</name>
        <briefdescription>
<para>Properties following the variable selection convention. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxSelection.h" line="40" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxSelection.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/dd6/classxAOD_1_1AuxSelection_1a20ba173c75a3b4c4768ad571805c33df" prot="protected" static="no" mutable="yes">
        <type><ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">SG::auxid_set_t</ref></type>
        <definition>SG::auxid_set_t xAOD::AuxSelection::m_auxids</definition>
        <argsstring></argsstring>
        <name>m_auxids</name>
        <briefdescription>
<para>Auxiliary IDs of the variables that were selected from the last list. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxSelection.h" line="42" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxSelection.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d6/dd6/classxAOD_1_1AuxSelection_1ae447c47249fce9012b7e373615d4cecb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xAOD::AuxSelection::AuxSelection</definition>
        <argsstring>()</argsstring>
        <name>AuxSelection</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxSelection.h" line="30" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxSelection.cxx" bodystart="22" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="d6/dd6/classxAOD_1_1AuxSelection_1a4cc5c075a7fd3bb5d151e1883878ed5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void xAOD::AuxSelection::selectAux</definition>
        <argsstring>(const std::set&lt; std::string &gt; &amp;attributes)</argsstring>
        <name>selectAux</name>
        <param>
          <type>const std::set&lt; std::string &gt; &amp;</type>
          <declname>attributes</declname>
        </param>
        <briefdescription>
<para>Select which variables should be written out. </para>        </briefdescription>
        <detaileddescription>
<para>Sets which variables should be selected from a store object. The formalism is the following:<itemizedlist>
<listitem><para>An empty set, or a set containing &quot;*&quot; will select all the dynamic attributes passed to the object.</para></listitem><listitem><para><ref refid="d4/dc4/structA" kindref="compound">A</ref> single &quot;-&quot; attribute will not select any of the dynamic attributes.</para></listitem><listitem><para><ref refid="d4/dc4/structA" kindref="compound">A</ref> set of variables (without &quot;-&quot; as the first character of the variable names) will select just the variables listed.</para></listitem><listitem><para><ref refid="d4/dc4/structA" kindref="compound">A</ref> set of variable names, each prefixed by &quot;-&quot;, will select all variables but the ones listed.</para></listitem></itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attributes</parametername>
</parameternamelist>
<parameterdescription>
<para>The attributes from ItemList or <ref refid="de/d95/classxAOD_1_1TEvent" kindref="compound">TEvent</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxSelection.h" line="33" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxSelection.cxx" bodystart="40" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="d6/dd6/classxAOD_1_1AuxSelection_1a263c3809091ab37fe06c70b59142c05d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">SG::auxid_set_t</ref> &amp;</type>
        <definition>const SG::auxid_set_t &amp; xAOD::AuxSelection::getSelectedAuxIDs</definition>
        <argsstring>(const SG::auxid_set_t &amp;fullset) const </argsstring>
        <name>getSelectedAuxIDs</name>
        <param>
          <type>const <ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">SG::auxid_set_t</ref> &amp;</type>
          <declname>fullset</declname>
        </param>
        <briefdescription>
<para>Return which variables were selected to be written out. </para>        </briefdescription>
        <detaileddescription>
<para>This function takes care of interpreting the options passed to ItemList in <ref refid="d5/dc5/namespaceAthena" kindref="compound">Athena</ref>, and <ref refid="de/d95/classxAOD_1_1TEvent" kindref="compound">TEvent</ref> in ROOT. It filters the list of variables passed to it, and returns the IDs of just the variables that should be written out.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fullset</parametername>
</parameternamelist>
<parameterdescription>
<para>The variables to be filtered based on the rules received </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The list of variables to be written out </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxSelection.h" line="36" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxSelection.cxx" bodystart="55" bodyend="130"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Class helping in dealing with dynamic branch selection</para><para>This class is used by the code internally to select which of the dynamic branches should be written out into an output file.</para><para><simplesect kind="author"><para>Marcin Nowak &lt;<ulink url="mailto:Marcin.Nowak@cern.ch">Marcin.Nowak@cern.ch</ulink>&gt; </para><simplesectsep/><para>Attila Krasznahorkay &lt;<ulink url="mailto:Attila.Krasznahorkay@cern.ch">Attila.Krasznahorkay@cern.ch</ulink>&gt;</para></simplesect>
<simplesect kind="rcs"><title>Revision</title><para>583607 </para></simplesect>
<simplesect kind="rcs"><title>Date</title><para>2014-02-17 12:02:08 +0100 (Mon, 17 Feb 2014) </para></simplesect>
</para>    </detaileddescription>
    <collaborationgraph>
      <node id="1881">
        <label>Internal::hash_code_base&lt;size_t , size_t , Internal::identity&lt; size_t &gt; , std::equal_to&lt; size_t &gt; , hash&lt; size_t &gt; , Internal::mod_range_hashing , Internal::default_ranged_hash , cache_hash_code&gt;</label>
        <link refid="d0/d2e/classInternal_1_1hash__code__base"/>
      </node>
      <node id="1882">
        <label>Internal::map_base&lt;size_t , size_t , Internal::identity&lt; size_t &gt; , unique_keys, hashtable&lt;size_t , size_t , std::allocator&lt; size_t &gt; , Internal::identity&lt; size_t &gt; , std::equal_to&lt; size_t &gt; , hash&lt; size_t &gt; , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="d1/d54/classInternal_1_1map__base"/>
      </node>
      <node id="1877">
        <label>xAOD::AuxSelection</label>
        <link refid="d6/dd6/classxAOD_1_1AuxSelection"/>
        <childnode refid="1878" relation="usage">
          <edgelabel>m_auxids</edgelabel>
        </childnode>
      </node>
      <node id="1879">
        <label>SG::hashtable&lt; size_t, size_t, std::allocator&lt; size_t &gt;, Internal::identity&lt; size_t &gt;, std::equal_to&lt; size_t &gt;, hash&lt; size_t &gt;, Internal::mod_range_hashing, Internal::default_ranged_hash, Internal::prime_rehash_policy, false, true, true &gt;</label>
        <link refid="de/d63/classSG_1_1hashtable"/>
        <childnode refid="1880" relation="public-inheritance">
        </childnode>
        <childnode refid="1881" relation="public-inheritance">
        </childnode>
        <childnode refid="1882" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1880">
        <label>Internal::rehash_base&lt;Internal::prime_rehash_policy , hashtable&lt;size_t , size_t , std::allocator&lt; size_t &gt; , Internal::identity&lt; size_t &gt; , std::equal_to&lt; size_t &gt; , hash&lt; size_t &gt; , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="db/d2b/classInternal_1_1rehash__base"/>
      </node>
      <node id="1878">
        <label>SG::unordered_set&lt; size_t &gt;</label>
        <link refid="dd/dac/classSG_1_1unordered__set"/>
        <childnode refid="1879" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxSelection.h" line="26" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxSelection.h" bodystart="26" bodyend="44"/>
    <listofallmembers>
      <member refid="d6/dd6/classxAOD_1_1AuxSelection_1ae447c47249fce9012b7e373615d4cecb" prot="public" virt="non-virtual"><scope>xAOD::AuxSelection</scope><name>AuxSelection</name></member>
      <member refid="d6/dd6/classxAOD_1_1AuxSelection_1a263c3809091ab37fe06c70b59142c05d" prot="public" virt="virtual"><scope>xAOD::AuxSelection</scope><name>getSelectedAuxIDs</name></member>
      <member refid="d6/dd6/classxAOD_1_1AuxSelection_1a20ba173c75a3b4c4768ad571805c33df" prot="protected" virt="non-virtual"><scope>xAOD::AuxSelection</scope><name>m_auxids</name></member>
      <member refid="d6/dd6/classxAOD_1_1AuxSelection_1a076b5fe8839bc5ed0d69dde67d980b94" prot="protected" virt="non-virtual"><scope>xAOD::AuxSelection</scope><name>m_names</name></member>
      <member refid="d6/dd6/classxAOD_1_1AuxSelection_1a4cc5c075a7fd3bb5d151e1883878ed5e" prot="public" virt="virtual"><scope>xAOD::AuxSelection</scope><name>selectAux</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
