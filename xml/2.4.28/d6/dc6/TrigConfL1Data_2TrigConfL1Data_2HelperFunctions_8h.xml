<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d6/dc6/TrigConfL1Data_2TrigConfL1Data_2HelperFunctions_8h" kind="file">
    <compoundname>HelperFunctions.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">vector</includes>
    <includes local="no">string</includes>
    <includes local="no">stdexcept</includes>
    <includes local="no">inttypes.h</includes>
    <includes local="no">sys/types.h</includes>
    <includedby refid="d6/d05/HLTChain_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfHLTData/Root/HLTChain.cxx</includedby>
    <includedby refid="d3/de3/HLTChainList_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfHLTData/Root/HLTChainList.cxx</includedby>
    <includedby refid="dc/d66/HLTUtils_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfHLTData/Root/HLTUtils.cxx</includedby>
    <includedby refid="dc/dbe/ClusterThresholdValue_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/Root/ClusterThresholdValue.cxx</includedby>
    <includedby refid="dd/db8/TrigConfL1Data_2Root_2HelperFunctions_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/Root/HelperFunctions.cxx</includedby>
    <includedby refid="d0/dde/Menu_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/Root/Menu.cxx</includedby>
    <includedby refid="d8/daf/TriggerItem_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/Root/TriggerItem.cxx</includedby>
    <incdepgraph>
      <node id="280032">
        <label>stdint.h</label>
      </node>
      <node id="280036">
        <label>stdexcept</label>
      </node>
      <node id="280035">
        <label>string</label>
      </node>
      <node id="280038">
        <label>sys/types.h</label>
      </node>
      <node id="280031">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/TrigConfL1Data/HelperFunctions.h</label>
        <link refid="TrigConfL1Data/TrigConfL1Data/HelperFunctions.h"/>
        <childnode refid="280032" relation="include">
        </childnode>
        <childnode refid="280033" relation="include">
        </childnode>
        <childnode refid="280034" relation="include">
        </childnode>
        <childnode refid="280035" relation="include">
        </childnode>
        <childnode refid="280036" relation="include">
        </childnode>
        <childnode refid="280037" relation="include">
        </childnode>
        <childnode refid="280038" relation="include">
        </childnode>
      </node>
      <node id="280034">
        <label>vector</label>
      </node>
      <node id="280033">
        <label>cstdlib</label>
      </node>
      <node id="280037">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="d4/d08/namespaceTrigConf">TrigConf</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;inttypes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">TrigConf<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TriggerThreshold;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TriggerItemNode;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>like<sp/>PERL<sp/>split</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;std::string&gt;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/>split(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>line,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>del=</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>like<sp/>PERL<sp/>strip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>strip(std::string&amp;<sp/>str);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>replaceTabs(std::string&amp;<sp/>str);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>toLower(std::string&amp;);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>removeAllSpaces(std::string&amp;);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/>uint32_t<sp/>bin2uint(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>binary);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/>std::string<sp/>uint2bin(uint32_t<sp/>uinteger,<sp/>uint16_t<sp/>width);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>builds<sp/>a<sp/>tree<sp/>of<sp/>TriggerItemNode&apos;s<sp/>and<sp/>returns<sp/>top<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>input<sp/>is:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>logic<sp/>string<sp/>like<sp/>&quot;!(1&amp;2)|3&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><ref refid="df/d45/classTrigConf_1_1TriggerItemNode" kindref="compound">TrigConf::TriggerItemNode</ref>*</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/>parse(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>logic,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>conditions,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TrigConf::TriggerThreshold*&gt;&amp;<sp/>thrs)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>(std::logic_error);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>returns<sp/>position<sp/>of<sp/>corresponding<sp/>&apos;)&apos;<sp/>parenthesis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>opening<sp/>parenthisis<sp/>is<sp/>at<sp/>pos<sp/>(or<sp/>before)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/>std::string::size_type</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/>findClosingBracket(std::string::size_type<sp/>pos,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>logic)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>(std::logic_error);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>builds<sp/>an<sp/>TriggerItemNode(OBJ),<sp/>set&apos;s<sp/>the<sp/>TriggerThreshold,<sp/>multiplicity,<sp/>and<sp/>InternalTrigger<sp/>(if<sp/>applicable)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>condition<sp/>contains<sp/>threshold<sp/>name<sp/>and<sp/>multiplicity,<sp/>or<sp/>name<sp/>of<sp/>internal<sp/>trigger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>threshold<sp/>is<sp/>looked<sp/>for<sp/>in<sp/>thrs<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><ref refid="df/d45/classTrigConf_1_1TriggerItemNode" kindref="compound">TrigConf::TriggerItemNode</ref>*</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/>buildObjNode(uint32_t<sp/>condIdx,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>conditions,<sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TrigConf::TriggerThreshold*&gt;&amp;<sp/>thrs)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>(std::logic_error);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/>std::string<sp/>insertParenthesis(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>givenlogic);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/TrigConfL1Data/HelperFunctions.h"/>
  </compounddef>
</doxygen>
