<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d2/d4b/classxAOD_1_1AuxPersVector" kind="class" prot="public">
    <compoundname>xAOD::AuxPersVector</compoundname>
    <basecompoundref refid="de/d12/classSG_1_1IAuxTypeVector" prot="public" virt="non-virtual">SG::IAuxTypeVector</basecompoundref>
    <includes refid="d9/d8a/AuxPersVector_8h" local="no">AuxPersVector.h</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
      <param>
        <type>class</type>
        <declname>VEC</declname>
        <defname>VEC</defname>
        <defval>std::vector&lt; <ref refid="d1/def/classT" kindref="compound">T</ref> &gt;</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="d2/d4b/classxAOD_1_1AuxPersVector_1ad9da6f9f6e06a507d523f4cc2d8a4d84" prot="public" static="no">
        <type>VEC &amp;</type>
        <definition>typedef VEC&amp; xAOD::AuxPersVector&lt; T, VEC &gt;::vector_type</definition>
        <argsstring></argsstring>
        <name>vector_type</name>
        <briefdescription>
<para>Convenience type definition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/AuxPersVector.h" line="29" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/AuxPersVector.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d2/d4b/classxAOD_1_1AuxPersVector_1a10b5040820d34c494e4b39154e75720f" prot="private" static="no" mutable="no">
        <type><ref refid="d2/d4b/classxAOD_1_1AuxPersVector_1ad9da6f9f6e06a507d523f4cc2d8a4d84" kindref="member">vector_type</ref></type>
        <definition>vector_type xAOD::AuxPersVector&lt; T, VEC &gt;::m_vec</definition>
        <argsstring></argsstring>
        <name>m_vec</name>
        <briefdescription>
<para>Reference to the vector being handled. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/AuxPersVector.h" line="86" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/AuxPersVector.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d2/d4b/classxAOD_1_1AuxPersVector_1a4794353fdee4d01666cad3f52f49d45f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>xAOD::AuxPersVector&lt; T, VEC &gt;::AuxPersVector</definition>
        <argsstring>(vector_type vec)</argsstring>
        <name>AuxPersVector</name>
        <param>
          <type><ref refid="d2/d4b/classxAOD_1_1AuxPersVector_1ad9da6f9f6e06a507d523f4cc2d8a4d84" kindref="member">vector_type</ref></type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/AuxPersVector.h" line="32" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/AuxPersVector.h" bodystart="32" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="d2/d4b/classxAOD_1_1AuxPersVector_1aa8264a2729e7199f39c7a57d0a34b5aa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="de/d12/classSG_1_1IAuxTypeVector" kindref="compound">SG::IAuxTypeVector</ref> *</type>
        <definition>virtual SG::IAuxTypeVector* xAOD::AuxPersVector&lt; T, VEC &gt;::clone</definition>
        <argsstring>() const </argsstring>
        <name>clone</name>
        <reimplements refid="de/d12/classSG_1_1IAuxTypeVector_1aaacc3e3c1dcc1e46f4ec8148c901d065">clone</reimplements>
        <briefdescription>
<para>Make a copy of this vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/AuxPersVector.h" line="34" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/AuxPersVector.h" bodystart="34" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="d2/d4b/classxAOD_1_1AuxPersVector_1a5c71ee696ca3563054687c13b207a560" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void *</type>
        <definition>virtual void* xAOD::AuxPersVector&lt; T, VEC &gt;::toPtr</definition>
        <argsstring>()</argsstring>
        <name>toPtr</name>
        <reimplements refid="de/d12/classSG_1_1IAuxTypeVector_1a31a1ff0ce19ebaf7af7a183d7a3209ff">toPtr</reimplements>
        <briefdescription>
<para>Return a pointer to the start of the vector&apos;s data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/AuxPersVector.h" line="38" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/AuxPersVector.h" bodystart="38" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="d2/d4b/classxAOD_1_1AuxPersVector_1a962efd2dabcaae8921ba529f1aa5ac58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void *</type>
        <definition>virtual void* xAOD::AuxPersVector&lt; T, VEC &gt;::toVector</definition>
        <argsstring>()</argsstring>
        <name>toVector</name>
        <reimplements refid="de/d12/classSG_1_1IAuxTypeVector_1afed4af45990e7670d930c265d779b80c">toVector</reimplements>
        <briefdescription>
<para>Return a pointer to the STL vector itself. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/AuxPersVector.h" line="43" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/AuxPersVector.h" bodystart="43" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="d2/d4b/classxAOD_1_1AuxPersVector_1a1408bc4f8724bb46806e1698966b6581" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>size_t</type>
        <definition>virtual size_t xAOD::AuxPersVector&lt; T, VEC &gt;::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <reimplements refid="de/d12/classSG_1_1IAuxTypeVector_1a62b69917936ea8302fa3a4689c4fa636">size</reimplements>
        <briefdescription>
<para>Return the size of the vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/AuxPersVector.h" line="46" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/AuxPersVector.h" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="d2/d4b/classxAOD_1_1AuxPersVector_1a82b77f4af0750646dcbdc1fe25f6e080" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void xAOD::AuxPersVector&lt; T, VEC &gt;::resize</definition>
        <argsstring>(size_t sz)</argsstring>
        <name>resize</name>
        <reimplements refid="de/d12/classSG_1_1IAuxTypeVector_1ab193d7841a46c020e54cd83eeefaa6fb">resize</reimplements>
        <param>
          <type>size_t</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
<para>Change the size of the vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sz</parametername>
</parameternamelist>
<parameterdescription>
<para>The new vector size. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/AuxPersVector.h" line="49" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/AuxPersVector.h" bodystart="49" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="d2/d4b/classxAOD_1_1AuxPersVector_1af24583055a9c5fc545fd7e840f7801ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void xAOD::AuxPersVector&lt; T, VEC &gt;::reserve</definition>
        <argsstring>(size_t sz)</argsstring>
        <name>reserve</name>
        <reimplements refid="de/d12/classSG_1_1IAuxTypeVector_1afa8e2ee061b050019960c326f28b343e">reserve</reimplements>
        <param>
          <type>size_t</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
<para>Change the capacity of the vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sz</parametername>
</parameternamelist>
<parameterdescription>
<para>The new vector capacity. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/AuxPersVector.h" line="52" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/AuxPersVector.h" bodystart="52" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="d2/d4b/classxAOD_1_1AuxPersVector_1aa02dd1f293456852c38c600ac4ac90c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void xAOD::AuxPersVector&lt; T, VEC &gt;::shift</definition>
        <argsstring>(size_t pos, ptrdiff_t offs)</argsstring>
        <name>shift</name>
        <reimplements refid="de/d12/classSG_1_1IAuxTypeVector_1a056c9481088c3c4155d4802db7e8a69e">shift</reimplements>
        <param>
          <type>size_t</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>ptrdiff_t</type>
          <declname>offs</declname>
        </param>
        <briefdescription>
<para>Shift the elements of the vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting index for the shift. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offs</parametername>
</parameternamelist>
<parameterdescription>
<para>The (signed) amount of the shift.</para></parameterdescription>
</parameteritem>
</parameterlist>
This operation shifts the elements in the vectors for all aux data items, to implement an insertion or deletion. <computeroutput>offs</computeroutput> may be either positive or negative.</para><para>If <computeroutput>offs</computeroutput> is positive, then the container is growing. The container size should be increased by <computeroutput>offs</computeroutput>, the element at <computeroutput>pos</computeroutput> moved to <computeroutput>pos</computeroutput> + <computeroutput>offs</computeroutput>, and similarly for following elements. The elements between <computeroutput>pos</computeroutput> and <computeroutput>pos</computeroutput> + <computeroutput>offs</computeroutput> should be default-initialized.</para><para>If <computeroutput>offs</computeroutput> is negative, then the container is shrinking. The element at <computeroutput>pos</computeroutput> should be moved to <computeroutput>pos</computeroutput> + <computeroutput>offs</computeroutput>, and similarly for following elements. The container should then be shrunk by <computeroutput>-offs</computeroutput> elements (running destructors as appropriate). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/AuxPersVector.h" line="55" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/AuxPersVector.h" bodystart="55" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="d2/d4b/classxAOD_1_1AuxPersVector_1aa195d433ea003661032b8ac4a0a15272" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool xAOD::AuxPersVector&lt; T, VEC &gt;::setOption</definition>
        <argsstring>(const SG::AuxDataOption &amp;option)</argsstring>
        <name>setOption</name>
        <reimplements refid="de/d12/classSG_1_1IAuxTypeVector_1a480e9245717e14b86cf326f8be4d2dad">setOption</reimplements>
        <param>
          <type>const <ref refid="d7/d31/classSG_1_1AuxDataOption" kindref="compound">SG::AuxDataOption</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Set an option for this variable. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>option</parametername>
</parameternamelist>
<parameterdescription>
<para>The option to set.</para></parameterdescription>
</parameteritem>
</parameterlist>
The interpretation of the option depends on the particular representation of the variable provided by the concrete class.</para><para>Returns true if the option setting was successful; false otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/AuxPersVector.h" line="70" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/AuxPersVector.h" bodystart="70" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="d2/d4b/classxAOD_1_1AuxPersVector_1ae5c8d1b2955efeb32e9d51720b50362e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const std::type_info *</type>
        <definition>virtual const std::type_info* xAOD::AuxPersVector&lt; T, VEC &gt;::objType</definition>
        <argsstring>() const </argsstring>
        <name>objType</name>
        <reimplements refid="de/d12/classSG_1_1IAuxTypeVector_1a2b585440095feb65b1b3512f16e6490f">objType</reimplements>
        <briefdescription>
<para>Return the type of the complete object to be saved. </para>        </briefdescription>
        <detaileddescription>
<para>For example, if the object is a <computeroutput>std::vector</computeroutput>, then we return the <computeroutput>type_info</computeroutput> of the vector. But if we&apos;re holding a <computeroutput>PackedContainer</computeroutput>, then we return the <computeroutput>type_info</computeroutput> of the <computeroutput>PackedContainer</computeroutput>.</para><para>Can return null if the operation is not supported. In that case, I/O will use the type found from the variable registry. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/AuxPersVector.h" line="80" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/AuxPersVector.h" bodystart="80" bodyend="82"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Class managing concrete vector variables</para><para>This class is used internally by the &quot;special&quot; auxiliary store objects to manage the auxiliary variables handled by them. User code probably doesn&apos;t want to touch it directly...</para><para><simplesect kind="author"><para>Attila Krasznahorkay &lt;<ulink url="mailto:Attila.Krasznahorkay@cern.ch">Attila.Krasznahorkay@cern.ch</ulink>&gt;</para></simplesect>
<simplesect kind="rcs"><title>Revision</title><para>785202 </para></simplesect>
<simplesect kind="rcs"><title>Date</title><para>2016-11-18 19:42:53 +0100 (Fri, 18 Nov 2016) </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="1871">
        <label>SG::IAuxTypeVector</label>
        <link refid="de/d12/classSG_1_1IAuxTypeVector"/>
      </node>
      <node id="1870">
        <label>xAOD::AuxPersVector&lt; T, VEC &gt;</label>
        <link refid="d2/d4b/classxAOD_1_1AuxPersVector"/>
        <childnode refid="1871" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1873">
        <label>SG::IAuxTypeVector</label>
        <link refid="de/d12/classSG_1_1IAuxTypeVector"/>
      </node>
      <node id="1872">
        <label>xAOD::AuxPersVector&lt; T, VEC &gt;</label>
        <link refid="d2/d4b/classxAOD_1_1AuxPersVector"/>
        <childnode refid="1873" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/AuxPersVector.h" line="25" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/AuxPersVector.h" bodystart="25" bodyend="88"/>
    <listofallmembers>
      <member refid="d2/d4b/classxAOD_1_1AuxPersVector_1a4794353fdee4d01666cad3f52f49d45f" prot="public" virt="non-virtual"><scope>xAOD::AuxPersVector</scope><name>AuxPersVector</name></member>
      <member refid="d2/d4b/classxAOD_1_1AuxPersVector_1aa8264a2729e7199f39c7a57d0a34b5aa" prot="public" virt="virtual"><scope>xAOD::AuxPersVector</scope><name>clone</name></member>
      <member refid="d2/d4b/classxAOD_1_1AuxPersVector_1a10b5040820d34c494e4b39154e75720f" prot="private" virt="non-virtual"><scope>xAOD::AuxPersVector</scope><name>m_vec</name></member>
      <member refid="d2/d4b/classxAOD_1_1AuxPersVector_1ae5c8d1b2955efeb32e9d51720b50362e" prot="public" virt="virtual"><scope>xAOD::AuxPersVector</scope><name>objType</name></member>
      <member refid="d2/d4b/classxAOD_1_1AuxPersVector_1af24583055a9c5fc545fd7e840f7801ab" prot="public" virt="virtual"><scope>xAOD::AuxPersVector</scope><name>reserve</name></member>
      <member refid="d2/d4b/classxAOD_1_1AuxPersVector_1a82b77f4af0750646dcbdc1fe25f6e080" prot="public" virt="virtual"><scope>xAOD::AuxPersVector</scope><name>resize</name></member>
      <member refid="d2/d4b/classxAOD_1_1AuxPersVector_1aa195d433ea003661032b8ac4a0a15272" prot="public" virt="virtual"><scope>xAOD::AuxPersVector</scope><name>setOption</name></member>
      <member refid="d2/d4b/classxAOD_1_1AuxPersVector_1aa02dd1f293456852c38c600ac4ac90c2" prot="public" virt="virtual"><scope>xAOD::AuxPersVector</scope><name>shift</name></member>
      <member refid="d2/d4b/classxAOD_1_1AuxPersVector_1a1408bc4f8724bb46806e1698966b6581" prot="public" virt="virtual"><scope>xAOD::AuxPersVector</scope><name>size</name></member>
      <member refid="de/d12/classSG_1_1IAuxTypeVector_1a3226c7c2e703aeb2b8c7736ae3663a52" prot="public" virt="virtual"><scope>xAOD::AuxPersVector</scope><name>toPacked</name></member>
      <member refid="d2/d4b/classxAOD_1_1AuxPersVector_1a5c71ee696ca3563054687c13b207a560" prot="public" virt="virtual"><scope>xAOD::AuxPersVector</scope><name>toPtr</name></member>
      <member refid="d2/d4b/classxAOD_1_1AuxPersVector_1a962efd2dabcaae8921ba529f1aa5ac58" prot="public" virt="virtual"><scope>xAOD::AuxPersVector</scope><name>toVector</name></member>
      <member refid="d2/d4b/classxAOD_1_1AuxPersVector_1ad9da6f9f6e06a507d523f4cc2d8a4d84" prot="public" virt="non-virtual"><scope>xAOD::AuxPersVector</scope><name>vector_type</name></member>
      <member refid="de/d12/classSG_1_1IAuxTypeVector_1ac39506959d2b852f78e8aeda22e6651e" prot="public" virt="virtual"><scope>xAOD::AuxPersVector</scope><name>~IAuxTypeVector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
