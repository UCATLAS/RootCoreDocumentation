<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d2/dbd/L1DataDef_8cxx" kind="file">
    <compoundname>L1DataDef.cxx</compoundname>
    <includes refid="da/d67/L1DataDef_8h" local="yes">TrigConfL1Data/L1DataDef.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">stdexcept</includes>
    <includes local="no">iomanip</includes>
    <incdepgraph>
      <node id="310130">
        <label>iomanip</label>
      </node>
      <node id="310129">
        <label>stdexcept</label>
      </node>
      <node id="310125">
        <label>string</label>
      </node>
      <node id="310126">
        <label>map</label>
      </node>
      <node id="310127">
        <label>vector</label>
      </node>
      <node id="310123">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/Root/L1DataDef.cxx</label>
        <link refid="L1DataDef.cxx"/>
        <childnode refid="310124" relation="include">
        </childnode>
        <childnode refid="310128" relation="include">
        </childnode>
        <childnode refid="310129" relation="include">
        </childnode>
        <childnode refid="310130" relation="include">
        </childnode>
      </node>
      <node id="310128">
        <label>iostream</label>
      </node>
      <node id="310124">
        <label>TrigConfL1Data/L1DataDef.h</label>
        <link refid="da/d67/L1DataDef_8h_source"/>
        <childnode refid="310125" relation="include">
        </childnode>
        <childnode refid="310126" relation="include">
        </childnode>
        <childnode refid="310127" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="d2/dbd/L1DataDef_8cxx_1a204892803ff8f117bae39cc5c4ed0038" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>registerTriggerType</definition>
        <argsstring>(EM, 16) registerTriggerType(TAU</argsstring>
        <name>registerTriggerType</name>
        <param>
          <type>EM</type>
        </param>
        <param>
          <type>16</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/Root/L1DataDef.cxx" line="15"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbd/L1DataDef_8cxx_1a1d294c4d1cfdef4e38859bc26cd12581" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>registerTriggerType</definition>
        <argsstring>(MUON, 6) registerTriggerType(TH</argsstring>
        <name>registerTriggerType</name>
        <param>
          <type>MUON</type>
        </param>
        <param>
          <type>6</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/Root/L1DataDef.cxx" line="17"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbd/L1DataDef_8cxx_1ab20f2f3cf049bfaa076ea8293a93bcfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>registerTriggerType</definition>
        <argsstring>(JET, 8) registerTriggerType(FJET</argsstring>
        <name>registerTriggerType</name>
        <param>
          <type>JET</type>
        </param>
        <param>
          <type>8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/Root/L1DataDef.cxx" line="19"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbd/L1DataDef_8cxx_1ad6e886eeb0797a20a072300adf7cffad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>registerTriggerType</definition>
        <argsstring>(FJ, 8) registerTriggerType(JF</argsstring>
        <name>registerTriggerType</name>
        <param>
          <type>FJ</type>
        </param>
        <param>
          <type>8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/Root/L1DataDef.cxx" line="21"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbd/L1DataDef_8cxx_1a5ce53743afce97a9e608d51c50988add" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>registerTriggerType</definition>
        <argsstring>(JB, 4) registerTriggerType(JE</argsstring>
        <name>registerTriggerType</name>
        <param>
          <type>JB</type>
        </param>
        <param>
          <type>4</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/Root/L1DataDef.cxx" line="23"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbd/L1DataDef_8cxx_1aaae52298262d11f6b0a79ddb1b0450dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>registerTriggerType</definition>
        <argsstring>(M, 6) registerTriggerType(TE</argsstring>
        <name>registerTriggerType</name>
        <param>
          <type><ref refid="d8/d55/structM" kindref="compound">M</ref></type>
        </param>
        <param>
          <type>6</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/Root/L1DataDef.cxx" line="25"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbd/L1DataDef_8cxx_1aea6e7d2cd697e929da8825ea7c201e72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>registerTriggerType</definition>
        <argsstring>(XE, 8) registerTriggerType(XS</argsstring>
        <name>registerTriggerType</name>
        <param>
          <type>XE</type>
        </param>
        <param>
          <type>8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/Root/L1DataDef.cxx" line="27"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbd/L1DataDef_8cxx_1afea8c4945911ea3515c1897765bad440" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>registerInternalTriggerType</definition>
        <argsstring>(RNDM, 2) registerInternalTriggerType(PCLK</argsstring>
        <name>registerInternalTriggerType</name>
        <param>
          <type>RNDM</type>
        </param>
        <param>
          <type>2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/Root/L1DataDef.cxx" line="31"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbd/L1DataDef_8cxx_1a8808b312d20655dfeb15d780b9f112c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>registerInternalTriggerType</definition>
        <argsstring>(BGRP, 8) registerTriggerType(MBTS</argsstring>
        <name>registerInternalTriggerType</name>
        <param>
          <type>BGRP</type>
        </param>
        <param>
          <type>8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/Root/L1DataDef.cxx" line="35"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbd/L1DataDef_8cxx_1a6308f59fee30c988a8a2ae5d77e47d94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>registerTriggerType</definition>
        <argsstring>(MBTSSI, 32) registerTriggerType(NIM</argsstring>
        <name>registerTriggerType</name>
        <param>
          <type>MBTSSI</type>
        </param>
        <param>
          <type>32</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/Root/L1DataDef.cxx" line="37"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbd/L1DataDef_8cxx_1a14e87772b21697baf5c959d8fe1dd91e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>registerTriggerType</definition>
        <argsstring>(BCMCMB, 1) registerTriggerType(CALREQ</argsstring>
        <name>registerTriggerType</name>
        <param>
          <type>BCMCMB</type>
        </param>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/Root/L1DataDef.cxx" line="39"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbd/L1DataDef_8cxx_1a96fbc6f63e05428b2bbee2faa4bbdcae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>registerTriggerType</definition>
        <argsstring>(BPTX, 2) registerTriggerType(LUCID</argsstring>
        <name>registerTriggerType</name>
        <param>
          <type>BPTX</type>
        </param>
        <param>
          <type>2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/Root/L1DataDef.cxx" line="41"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbd/L1DataDef_8cxx_1ae7870a1725101f2ba91b0b20207fe865" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>registerTriggerType</definition>
        <argsstring>(TRT, 1) registerTriggerType(BCM</argsstring>
        <name>registerTriggerType</name>
        <param>
          <type>TRT</type>
        </param>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/Root/L1DataDef.cxx" line="43"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbd/L1DataDef_8cxx_1a9721e6fb546214bff37431decba183dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>registerTriggerType</definition>
        <argsstring>(ZDC, 3) registerTriggerType(ZB</argsstring>
        <name>registerTriggerType</name>
        <param>
          <type>ZDC</type>
        </param>
        <param>
          <type>3</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/Root/L1DataDef.cxx" line="46"/>
      </memberdef>
      <memberdef kind="function" id="d2/dbd/L1DataDef_8cxx_1ae2f5c770a244b30e431910287ecbb3b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>registerTriggerType</definition>
        <argsstring>(TOPO, 128) registerTriggerType(ALFA</argsstring>
        <name>registerTriggerType</name>
        <param>
          <type>TOPO</type>
        </param>
        <param>
          <type>128</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/Root/L1DataDef.cxx" line="49"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;TrigConfL1Data/L1DataDef.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">TrigConf::L1DataDef::TypeConfigMap_t<sp/>TrigConf::L1DataDef::g_typeConfigs;</highlight></codeline>
<codeline lineno="10"><highlight class="normal">TrigConf::L1DataDef::STypeTypeMap_t<sp/>TrigConf::L1DataDef::g_sTypeType;</highlight></codeline>
<codeline lineno="11"><highlight class="normal">std::vector&lt;TrigConf::L1DataDef::TriggerType&gt;<sp/>TrigConf::L1DataDef::g_Types;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TrigConf::L1DataDef::g_l1Version<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal">registerTriggerType(EM,<sp/>16)</highlight></codeline>
<codeline lineno="15"><highlight class="normal">registerTriggerType(TAU,<sp/>8)</highlight></codeline>
<codeline lineno="16"><highlight class="normal">registerTriggerType(MUON,6)</highlight></codeline>
<codeline lineno="17"><highlight class="normal">registerTriggerType(TH,<sp/><sp/>8)</highlight></codeline>
<codeline lineno="18"><highlight class="normal">registerTriggerType(JET,<sp/>8)</highlight></codeline>
<codeline lineno="19"><highlight class="normal">registerTriggerType(FJET,0)</highlight></codeline>
<codeline lineno="20"><highlight class="normal">registerTriggerType(FJ,<sp/><sp/>8)</highlight></codeline>
<codeline lineno="21"><highlight class="normal">registerTriggerType(JF,<sp/><sp/>4)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">registerTriggerType(JB,<sp/><sp/>4)</highlight></codeline>
<codeline lineno="23"><highlight class="normal">registerTriggerType(JE,<sp/><sp/>4)</highlight></codeline>
<codeline lineno="24"><highlight class="normal">registerTriggerType(<ref refid="d8/d55/structM" kindref="compound">M</ref>,<sp/><sp/><sp/>6)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">registerTriggerType(TE,<sp/><sp/>8)</highlight></codeline>
<codeline lineno="26"><highlight class="normal">registerTriggerType(XE,<sp/><sp/>8)</highlight></codeline>
<codeline lineno="27"><highlight class="normal">registerTriggerType(XS,<sp/><sp/>8)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">registerInternalTriggerType(RNDM,<sp/>2)</highlight></codeline>
<codeline lineno="31"><highlight class="normal">registerInternalTriggerType(PCLK,<sp/>2)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">registerInternalTriggerType(BGRP,<sp/>8)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">registerTriggerType(MBTS,<sp/><sp/><sp/><sp/>2)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">registerTriggerType(MBTSSI,<sp/>32)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">registerTriggerType(NIM,<sp/><sp/><sp/><sp/>37)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">registerTriggerType(BCMCMB,<sp/><sp/>1)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">registerTriggerType(CALREQ,<sp/><sp/>3)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">registerTriggerType(BPTX,<sp/><sp/><sp/><sp/>2)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">registerTriggerType(LUCID,<sp/><sp/><sp/>2)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">registerTriggerType(TRT,<sp/><sp/><sp/><sp/><sp/>1)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">registerTriggerType(BCM,<sp/><sp/><sp/><sp/><sp/>3)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">registerTriggerType(ZDC,<sp/><sp/><sp/><sp/><sp/>3)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>zero<sp/>bias</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">registerTriggerType(ZB,<sp/><sp/><sp/>10)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NEW:<sp/>Topo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">registerTriggerType(TOPO,<sp/>128)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">registerTriggerType(ALFA,<sp/>64)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">TrigConf::L1DataDef::printMaxThresholds()<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;L1<sp/>Version:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>g_l1Version<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>x:<sp/>typeConfigs())<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Maximum<sp/>number<sp/>of<sp/>thresholds<sp/>for<sp/>type<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>setw(6)<sp/>&lt;&lt;<sp/>x.second.name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>x.second.max<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">TrigConf::L1DataDef::setMaxThresholdsFromL1Version(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l1version)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>has<sp/>to<sp/>come<sp/>from<sp/>L1Common/L1CommonVersion.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(l1version==0)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(EM).max<sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>16;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(TAU).max<sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>8;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(MUON).max<sp/><sp/><sp/>=<sp/><sp/><sp/>6;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(TH).max<sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>8;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(JET).max<sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>8;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(FJET).max<sp/><sp/><sp/>=<sp/><sp/><sp/>0;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(FJ).max<sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>8;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(JF).max<sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>4;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(JB).max<sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>4;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(JE).max<sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>4;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(M).max<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>6;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(TE).max<sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>8;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(XE).max<sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>8;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(XS).max<sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>8;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(RNDM).max<sp/><sp/><sp/>=<sp/><sp/><sp/>2;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(PCLK).max<sp/><sp/><sp/>=<sp/><sp/><sp/>2;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(BGRP).max<sp/><sp/><sp/>=<sp/><sp/><sp/>8;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(MBTS).max<sp/><sp/><sp/>=<sp/><sp/><sp/>2;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(MBTSSI).max<sp/>=<sp/><sp/>32;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(NIM).max<sp/><sp/><sp/><sp/>=<sp/><sp/>37;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(BCMCMB).max<sp/>=<sp/><sp/><sp/>1;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(CALREQ).max<sp/>=<sp/><sp/><sp/>3;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(BPTX).max<sp/><sp/><sp/>=<sp/><sp/><sp/>2;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(LUCID).max<sp/><sp/>=<sp/><sp/><sp/>2;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(TRT).max<sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>1;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(BCM).max<sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>3;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(ZDC).max<sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>3;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(ZB).max<sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>10;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(TOPO).max<sp/><sp/><sp/>=<sp/><sp/><sp/>0;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(ALFA).max<sp/><sp/><sp/>=<sp/><sp/><sp/>0;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l1version==1)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(EM).max<sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>16;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(TAU).max<sp/><sp/><sp/><sp/>=<sp/><sp/>16;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(MUON).max<sp/><sp/><sp/>=<sp/><sp/><sp/>6;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(TH).max<sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>8;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(JET).max<sp/><sp/><sp/><sp/>=<sp/><sp/>25;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(FJET).max<sp/><sp/><sp/>=<sp/><sp/><sp/>0;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(FJ).max<sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>0;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(JF).max<sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>0;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(JB).max<sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>0;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(JE).max<sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>0;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(M).max<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>6;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(TE).max<sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>16;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(XE).max<sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>16;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(XS).max<sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>8;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(RNDM).max<sp/><sp/><sp/>=<sp/><sp/><sp/>4;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(PCLK).max<sp/><sp/><sp/>=<sp/><sp/><sp/>0;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(BGRP).max<sp/><sp/><sp/>=<sp/><sp/>16;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(MBTS).max<sp/><sp/><sp/>=<sp/><sp/><sp/>3;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(MBTSSI).max<sp/>=<sp/><sp/>24;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(NIM).max<sp/><sp/><sp/><sp/>=<sp/><sp/>37;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(BCMCMB).max<sp/>=<sp/><sp/><sp/>1;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(CALREQ).max<sp/>=<sp/><sp/><sp/>3;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(BPTX).max<sp/><sp/><sp/>=<sp/><sp/><sp/>2;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(LUCID).max<sp/><sp/>=<sp/><sp/><sp/>6;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(TRT).max<sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>1;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(BCM).max<sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>6;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(ZDC).max<sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>3;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(ZB).max<sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>10;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(TOPO).max<sp/><sp/><sp/>=<sp/>128;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>typeConfig(ALFA).max<sp/><sp/><sp/>=<sp/><sp/>64;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>TrigConf::L1DataDef::setMaxThresholdsFromL1Version()<sp/>L1Version<sp/>not<sp/>known:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>l1version<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(std::runtime_error(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>L1<sp/>Version&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/>g_l1Version=l1version;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><ref refid="d2/d5e/structTrigConf_1_1L1DataDef_1_1TriggerTypeConfig" kindref="compound">TrigConf::L1DataDef::TriggerTypeConfig</ref>&amp;</highlight></codeline>
<codeline lineno="141"><highlight class="normal">TrigConf::L1DataDef::typeConfig(TriggerType<sp/>tt)<sp/>{<sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/>TypeConfigMap_t::iterator<sp/>c<sp/>=<sp/>g_typeConfigs.find(tt);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;tt<sp/>&quot;<sp/>&lt;&lt;<sp/>tt<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>c==g_typeConfigs.end()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Trigger<sp/>type<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tt<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>defined<sp/>in<sp/>L1DataDef.h<sp/>but<sp/>not<sp/>registered<sp/>in<sp/>L1DataDef.cxx&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;TriggerType<sp/>not<sp/>registered&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c-&gt;second;</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/>can<sp/>enable<sp/>old<sp/>JEP3<sp/>cabling<sp/>(SLOT8,<sp/>CON0):<sp/>4TE,<sp/>8XE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal">TrigConf::L1DataDef::setOldJEP3Cabling()<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/>typeConfig(TE).max<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/>typeConfig(XE).max<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/>typeConfig(XS).max<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">//<sp/>new<sp/>JEP3<sp/>cabling<sp/>(SLOT8,<sp/>CON0):<sp/>8TE,<sp/>8XE,<sp/>8XS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal">TrigConf::L1DataDef::setNewJEP3Cabling()<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/>typeConfig(TE).max<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/>typeConfig(XE).max<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/>typeConfig(XS).max<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/Root/L1DataDef.cxx"/>
  </compounddef>
</doxygen>
