<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d2/d30/classxAOD_1_1Muon__v1" kind="class" prot="public">
    <compoundname>xAOD::Muon_v1</compoundname>
    <basecompoundref refid="d5/d4c/classxAOD_1_1IParticle" prot="public" virt="non-virtual">xAOD::IParticle</basecompoundref>
    <includes refid="da/dde/Muon__v1_8h" local="no">Muon_v1.h</includes>
      <sectiondef kind="user-defined">
      <header>Author</header>
      <description><para><anchor id="_1amgrpa517747c3d12f99244ae598910d979c5"/> Methods to query the author(s) of this Muon</para><para><xrefsect id="todo_1_todo000035"><xreftitle>Todo</xreftitle><xrefdescription><para><itemizedlist>
<listitem><para>update and add documentation. </para></listitem></itemizedlist>
</para></xrefdescription></xrefsect></para></description>
      <memberdef kind="enum" id="d2/d30/classxAOD_1_1Muon__v1_1afc23b9e457c3866a7587a41621340507" prot="public" static="no">
        <name>Author</name>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1afc23b9e457c3866a7587a41621340507a58734ca3e8d060c3e8ace04cd6b4a25c" prot="public">
          <name>unknown</name>
          <initializer>0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1afc23b9e457c3866a7587a41621340507ab58a6e2e07a007f9d4f550ed58f0f18b" prot="public">
          <name>MuidCo</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1afc23b9e457c3866a7587a41621340507ae3a5624ecb4442612ef930d116a48c59" prot="public">
          <name>STACO</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1afc23b9e457c3866a7587a41621340507a785b199d4bccf2b4af570906af692e7a" prot="public">
          <name>MuTag</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1afc23b9e457c3866a7587a41621340507a4cdc5043a10d6da548d350d471baebf2" prot="public">
          <name>MuTagIMO</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1afc23b9e457c3866a7587a41621340507a8f6dc911a2df2812c86e7f4064a74462" prot="public">
          <name>MuidSA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1afc23b9e457c3866a7587a41621340507a35c4c47c6f82f99a01dc394499e9e7f4" prot="public">
          <name>MuGirl</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1afc23b9e457c3866a7587a41621340507a0f60a7e1da65196a3b4173ba2d646fb8" prot="public">
          <name>MuGirlLowBeta</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1afc23b9e457c3866a7587a41621340507a3e6f6de43bfacb0684bbe5bc72fe1d02" prot="public">
          <name>CaloTag</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1afc23b9e457c3866a7587a41621340507ab99a3eb7f28e4094872871e8f8f2b23f" prot="public">
          <name>CaloLikelihood</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1afc23b9e457c3866a7587a41621340507a6a9e218d93d5c958b65a2fa4c1fbe2de" prot="public">
          <name>ExtrapolateMuonToIP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1afc23b9e457c3866a7587a41621340507a3a1edb8ef7cf484ba1f1b0793ab329e2" prot="public">
          <name>NumberOfMuonAuthors</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="75" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" bodystart="75" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1ae510b9f46068aa223d2c8505085cf82b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Author</type>
        <definition>Author xAOD::Muon_v1::author</definition>
        <argsstring>() const </argsstring>
        <name>author</name>
        <briefdescription>
<para>Returns the primary author of this Muon. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="90"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1aa4ae256d37f65d753f696256dd1d8ba2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::Muon_v1::isAuthor</definition>
        <argsstring>(const Author author) const </argsstring>
        <name>isAuthor</name>
        <param>
          <type>const Author</type>
          <declname>author</declname>
        </param>
        <briefdescription>
<para>Returns &apos;true&apos; if &apos;author&apos; is the an author of this muon. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="92" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="91" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1aa9677bbd2f9b159c8b8cb47946baf9cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Muon_v1::setAuthor</definition>
        <argsstring>(Author auth)</argsstring>
        <name>setAuthor</name>
        <param>
          <type>Author</type>
          <declname>auth</declname>
        </param>
        <briefdescription>
<para>set author </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="94"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a9c3db211b1d2cf21de719d16f1adbf11" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t xAOD::Muon_v1::allAuthors</definition>
        <argsstring>() const </argsstring>
        <name>allAuthors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get all the authors of this Muon. For example during overlap checking, the same Muon may have been reconstructed by many different algorithms. This method returns a 16bit number, where each bit represents a muon algorithm, defined as follows (the lowest bit is indicates that something has gone wrong): unknown | MuidCo | STACO | MuTag | MuTagIMO | MuidSA | MuGirl | MuGirlLowBeta | CaloTag | CaloLikelihood | ExtrapolateMuonToIP | MuonCombinedRefit | ExtrapolateMuonToIP <simplesect kind="return"><para>16-bit word, 1-bit reserved for each muon Algorithm: </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="100"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a9a968e650bd21589b5b4435176751e9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Muon_v1::setAllAuthors</definition>
        <argsstring>(uint16_t authors)</argsstring>
        <name>setAllAuthors</name>
        <param>
          <type>uint16_t</type>
          <declname>authors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="101"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a3955e066e80610eb31254cd53aa05716" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Muon_v1::addAllAuthor</definition>
        <argsstring>(const Author author)</argsstring>
        <name>addAllAuthor</name>
        <param>
          <type>const Author</type>
          <declname>author</declname>
        </param>
        <briefdescription>
<para>add author to all authors </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="103" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="86" bodyend="89"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Summary information</header>
      <description><para><anchor id="_1amgrpd1247c6efc6b0dea184d8d14131eca3c"/> Return summary information about the muon, such as its MuonType, and the TrackSumary values of the primary TrackParticle.</para><para><xrefsect id="todo_1_todo000036"><xreftitle>Todo</xreftitle><xrefdescription><para>Add documentation. </para></xrefdescription></xrefsect></para></description>
      <memberdef kind="enum" id="d2/d30/classxAOD_1_1Muon__v1_1a5dce926bf4eb4f671913954ec3e05e02" prot="public" static="no">
        <name>MuonType</name>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a5dce926bf4eb4f671913954ec3e05e02a8991d1862d8237097394883f95d20379" prot="public">
          <name>Combined</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a5dce926bf4eb4f671913954ec3e05e02aa1565573b8bd2e0e2b997100899cb88c" prot="public">
          <name>MuonStandAlone</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a5dce926bf4eb4f671913954ec3e05e02a3b150b67560c4649446b47596d4bf24b" prot="public">
          <name>SegmentTagged</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a5dce926bf4eb4f671913954ec3e05e02a88dd01aac6d8d7af1cdb388c25b42d82" prot="public">
          <name>CaloTagged</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a5dce926bf4eb4f671913954ec3e05e02adb88289ea068aeb872e5d95c1730a926" prot="public">
          <name>SiliconAssociatedForwardMuon</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="111" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" bodystart="111" bodyend="113"/>
      </memberdef>
      <memberdef kind="enum" id="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366" prot="public" static="no">
        <name>ParamDef</name>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366acb6d2b042c9f995e87895b0cc1c0eda1" prot="public">
          <name>spectrometerFieldIntegral</name>
          <initializer>0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Discriminators and further variables </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366a7d08df5642e8a943a1bef64c146534fe" prot="public">
          <name>scatteringCurvatureSignificance</name>
          <initializer>1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366aadd36ddfc13d9c43bac90a7d9355c3ef" prot="public">
          <name>scatteringNeighbourSignificance</name>
          <initializer>2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366aa58742ada86f44ab4e0142527df6ba27" prot="public">
          <name>momentumBalanceSignificance</name>
          <initializer>3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366ab3216d2b4a2119cbe721ffaf4e1887cc" prot="public">
          <name>segmentDeltaEta</name>
          <initializer>4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>MuTag parameters </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366a9cf1bfe15ea22f11616d7ac0ffb0258a" prot="public">
          <name>segmentDeltaPhi</name>
          <initializer>5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366aa98ff9dd93dfea33d3be2e1b9bbd943c" prot="public">
          <name>segmentChi2OverDoF</name>
          <initializer>6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366ac6356ae090231455aa8dbf8645bc584f" prot="public">
          <name>t0</name>
          <initializer>7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>MuGirl parameter </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366acc1092cc5595651668a58a43e970168c" prot="public">
          <name>beta</name>
          <initializer>8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366a8adc6a1e4a5e6a3e96aaf023eaff0905" prot="public">
          <name>annBarrel</name>
          <initializer>9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366aba51186dab54222e0cfc890b696e33bb" prot="public">
          <name>annEndCap</name>
          <initializer>10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366a11e4dce04ed3b1c3fab9f43a57c17dab" prot="public">
          <name>innAngle</name>
          <initializer>11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>common MuGirl and MuTag parameters </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366a3b3fdee99e6c4cea112489921fc57a51" prot="public">
          <name>midAngle</name>
          <initializer>12</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366aa82f24f63fe7dd01a2643802b0e45f2d" prot="public">
          <name>msInnerMatchChi2</name>
          <initializer>13</initializer>
          <briefdescription>
<para>The chi^2 for the match of Inner detector (ID) and standalone (SA) tracks at the entrance to the spectrometer (MS). </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366a0c78a4bb3dc004a2d60fea899669e2b6" prot="public">
          <name>msInnerMatchDOF</name>
          <initializer>14</initializer>
          <briefdescription>
<para>The &apos;degrees of freedom&apos; (DOF) for the match of Inner detector (ID) and standalone (SA) tracks at the entrance to the spectrometer (MS). </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366aca8c9680bfd448579ccc4c810bf9e79e" prot="public">
          <name>msOuterMatchChi2</name>
          <initializer>15</initializer>
          <briefdescription>
<para>The chi^2 for the match of Inner detector (ID) and standalone (SA) tracks at the exit of the spectrometer (MS). </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366a92b54ab0fc22847f50d9f3c7b4eaee05" prot="public">
          <name>msOuterMatchDOF</name>
          <initializer>16</initializer>
          <briefdescription>
<para>The &apos;degrees of freedom&apos; (DOF) for the match of Inner detector (ID) and standalone (SA) tracks at the exit of the spectrometer (MS). </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366a8b15e2279db555916313abc984328f98" prot="public">
          <name>meanDeltaADCCountsMDT</name>
          <initializer>17</initializer>
          <briefdescription>
<para>Difference between mean number of ADC count for given track and mean number of ADC for all muons from DATA. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366a3ca7406a2055f052466f6383df8ba1d0" prot="public">
          <name>CaloLRLikelihood</name>
          <initializer>18</initializer>
          <briefdescription>
<para>Calo Muon ID likelihood. </para>          </briefdescription>
          <detaileddescription>
<para>CaloMuon variables (EnergyLossType is stored separately and retrieved using <ref refid="d2/d30/classxAOD_1_1Muon__v1_1a230d4fcbc4ab042b0f66bc1f81c12147" kindref="member">energyLossType()</ref> </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366aadf522eb60eaf6dde4ac7b66c0012c7b" prot="public">
          <name>CaloMuonIDTag</name>
          <initializer>19</initializer>
          <briefdescription>
<para>Calo Muon Identification tag. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366a65564a9aa06ca30eb1268198eca2d7ff" prot="public">
          <name>FSR_CandidateEnergy</name>
          <initializer>20</initializer>
          <briefdescription>
<para>FSR candidate energy [MeV]. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366a2ca9679ea4118d65f59572abfa9fc086" prot="public">
          <name>EnergyLoss</name>
          <initializer>21</initializer>
          <briefdescription>
<para>Fitted energy loss (either param or meas depending on track isolation and calo meas) [Mev]. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366ab0658337205f6cb76056f311d7250c4d" prot="public">
          <name>ParamEnergyLoss</name>
          <initializer>22</initializer>
          <briefdescription>
<para>Parametrised energy loss [Mev]. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366a46534b4a87b507950cdd1c7ec806f312" prot="public">
          <name>MeasEnergyLoss</name>
          <initializer>23</initializer>
          <briefdescription>
<para>Measured energy loss [Mev]. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366aaa26633db6f5047560b83e4edab12659" prot="public">
          <name>EnergyLossSigma</name>
          <initializer>24</initializer>
          <briefdescription>
<para>Sigma of Measured or parametrised energy loss used in the track fit [Mev]. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366ab77462124e625d37a538c17e5cd2d192" prot="public">
          <name>ParamEnergyLossSigmaPlus</name>
          <initializer>25</initializer>
          <briefdescription>
<para>Sigma plus of Parametrised energy loss [Mev]. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366a1d0f9acd95a065d3ebdb4768f9a39a6c" prot="public">
          <name>ParamEnergyLossSigmaMinus</name>
          <initializer>26</initializer>
          <briefdescription>
<para>Sigma minus of Parametrised energy loss [Mev]. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366aa239573122d211179217c4dab7563378" prot="public">
          <name>MeasEnergyLossSigma</name>
          <initializer>27</initializer>
          <briefdescription>
<para>Sigma of Measured energy loss [Mev]. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366a24c54970991955f41343939515d81c4d" prot="public">
          <name>d0_sa</name>
          <initializer>28</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366a4ca8fe77f93518e1c90abea1fb7956df" prot="public">
          <name>z0_sa</name>
          <initializer>29</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366a2409202bf06cf6446de0c0d652fde1f4" prot="public">
          <name>phi0_sa</name>
          <initializer>30</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366a31d27829affe5c2756ce8e43ad2a0bc4" prot="public">
          <name>theta_sa</name>
          <initializer>31</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366a4d43341b9b91acf1d062fc56179fcfc3" prot="public">
          <name>qOverP_sa</name>
          <initializer>32</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366a030a7691f544e730ea7c54f942352912" prot="public">
          <name>Eloss_sa</name>
          <initializer>33</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enum for parameter indexes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="158" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" bodystart="158" bodyend="200"/>
      </memberdef>
      <memberdef kind="enum" id="d2/d30/classxAOD_1_1Muon__v1_1a7e5ffbaa3180106746511159341722b8" prot="public" static="no">
        <name>Quality</name>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a7e5ffbaa3180106746511159341722b8a5cdfbd4a24179db30738070de44d54ba" prot="public">
          <name>Tight</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a7e5ffbaa3180106746511159341722b8a20c71bc4255ebb251040093b3d329e6a" prot="public">
          <name>Medium</name>
          <briefdescription>
<para>Highest purity, but lower efficiency. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a7e5ffbaa3180106746511159341722b8a691114915a3518e79edd302b0454b8ec" prot="public">
          <name>Loose</name>
          <briefdescription>
<para>Usual recommended working point - a good balance between purity and efficiency. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a7e5ffbaa3180106746511159341722b8aac0acb81d4d063694c13a720e15e9c0d" prot="public">
          <name>VeryLoose</name>
          <briefdescription>
<para>Adds segment tagged and calo tagged muons. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The Muon Quality information is defined on the MCP twiki: <ulink url="https://twiki.cern.ch/twiki/bin/view/Atlas/MuonSelectionTool#Quality_definition">https://twiki.cern.ch/twiki/bin/view/Atlas/MuonSelectionTool#Quality_definition</ulink> <xrefsect id="todo_1_todo000039"><xreftitle>Todo</xreftitle><xrefdescription><para>Finish documentation </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="227" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" bodystart="227" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1ada4059382e0f2ad3f6c3ed3293165275" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>MuonType</type>
        <definition>MuonType xAOD::Muon_v1::muonType</definition>
        <argsstring>() const </argsstring>
        <name>muonType</name>
        <briefdescription>
<para>Generic accessor to type information. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="115"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a4f1e88d321627c0d2db2c0d574416045" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Muon_v1::setMuonType</definition>
        <argsstring>(MuonType type)</argsstring>
        <name>setMuonType</name>
        <param>
          <type>MuonType</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000037"><xreftitle>Todo</xreftitle><xrefdescription><para><itemizedlist>
<listitem><para>do we actually need this? Deduce it from other information? </para></listitem></itemizedlist>
</para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="117"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1ae8b2a42201894df83702e750e37105d1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::Muon_v1::summaryValue</definition>
        <argsstring>(uint8_t &amp;value, const SummaryType information) const </argsstring>
        <name>summaryValue</name>
        <param>
          <type>uint8_t &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286a" kindref="member">SummaryType</ref></type>
          <declname>information</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Accessor for TrackSummary values (in most cases, retrieved from the &apos;primary&apos; TrackParticle - though it could be stored on the Muon, depending on the job configuration) If &apos;information&apos; is stored in the primary TrackParticle/Muon and is of the correct templated type <ref refid="d1/def/classT" kindref="compound">T</ref>, then the function fills &apos;value&apos; and returns &apos;true&apos;, otherwise it returns &apos;false&apos;, and does not touch &apos;value&apos;. See below for an example of how this is intended to be used. <programlisting><codeline><highlight class="normal"><sp/>uint8_t<sp/>numberOfBLayerHits=0;</highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>myParticle.summaryValue&lt;uint8_t&gt;(numberOfBLayerHits,numberOfBLayerHits)<sp/>){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>ATH_MSG_INFO(</highlight><highlight class="stringliteral">&quot;Successfully<sp/>retrieved<sp/>the<sp/>integer<sp/>value,<sp/>numberOfBLayerHits&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>numberOfCscPhiHits=0.0;<sp/></highlight><highlight class="comment">//Wrong!<sp/>This<sp/>is<sp/>actually<sp/>an<sp/>int<sp/>too.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!myParticle.summaryValue&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(numberOfCscPhiHits,numberOfCscPhiHits)<sp/>){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>ATH_MSG_INFO(</highlight><highlight class="stringliteral">&quot;Types<sp/>must<sp/>match!&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/>}</highlight></codeline>
</programlisting> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">information</parametername>
</parameternamelist>
<parameterdescription>
<para>The information being requested. This is not guaranteed to be stored in all Muons (or primary TrackParticle). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Only filled if this Muon (or its primary TrackParticle) contains &apos;information&apos;, and the types match. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns &apos;true&apos; if the Muon contains &apos;information&apos;, and its concrete type matches &apos;value&apos; (templated type <ref refid="d1/def/classT" kindref="compound">T</ref>). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="137" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="99" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1affd32fc1ebb820034b9e075652b41a77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Muon_v1::setSummaryValue</definition>
        <argsstring>(uint8_t value, const SummaryType information)</argsstring>
        <name>setSummaryValue</name>
        <param>
          <type>uint8_t</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286a" kindref="member">SummaryType</ref></type>
          <declname>information</declname>
        </param>
        <briefdescription>
<para>Set method for storing TrackSummary SummaryType information on the Muon (see Aux to see which is already defined as static). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>FIXME! </para>        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="139" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="115" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a9758369018bb785712eed4785748c5dd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::Muon_v1::summaryValue</definition>
        <argsstring>(float &amp;value, const SummaryType information) const </argsstring>
        <name>summaryValue</name>
        <param>
          <type>float &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286a" kindref="member">SummaryType</ref></type>
          <declname>information</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><copydoc link="bool"></copydoc>
 <ref refid="d2/d30/classxAOD_1_1Muon__v1_1ae8b2a42201894df83702e750e37105d1" kindref="member">summaryValue(uint8_t&amp; value, const SummaryType information) const</ref>; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="141" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="123" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a61ac17698ec28ea6549ca0ee286ee335" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::Muon_v1::summaryValue</definition>
        <argsstring>(uint8_t &amp;value, const MuonSummaryType information) const </argsstring>
        <name>summaryValue</name>
        <param>
          <type>uint8_t &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="dd/d44/namespacexAOD_1afe1aa7030d6a8b6ec3b9bc62a903c702" kindref="member">MuonSummaryType</ref></type>
          <declname>information</declname>
        </param>
        <briefdescription>
<para>Accessor for MuonSummaryType. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="143" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="139" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a2572159f8456a2309bb6d42567a15d46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Muon_v1::setSummaryValue</definition>
        <argsstring>(uint8_t value, const MuonSummaryType information)</argsstring>
        <name>setSummaryValue</name>
        <param>
          <type>uint8_t</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="dd/d44/namespacexAOD_1afe1aa7030d6a8b6ec3b9bc62a903c702" kindref="member">MuonSummaryType</ref></type>
          <declname>information</declname>
        </param>
        <briefdescription>
<para>Set method for MuonSummaryType. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="145" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="155" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1ae4e7724e098dc146048a550feb563f31" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float xAOD::Muon_v1::floatSummaryValue</definition>
        <argsstring>(const SummaryType information) const </argsstring>
        <name>floatSummaryValue</name>
        <param>
          <type>const <ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286a" kindref="member">SummaryType</ref></type>
          <declname>information</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Same as bool summaryValue(float&amp; value, const SummaryType &amp;information) const , but without check (will throw exception if value isn&apos;t there) Primarily for use in Python. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="149" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="129" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a6fe7cee0c47b4f5982e25edd02a4a103" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t xAOD::Muon_v1::uint8SummaryValue</definition>
        <argsstring>(const SummaryType information) const </argsstring>
        <name>uint8SummaryValue</name>
        <param>
          <type>const <ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286a" kindref="member">SummaryType</ref></type>
          <declname>information</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Same as bool summaryValue(uint8_t&amp; value, const SummaryType &amp;information) const, but without check (will throw exception if value isn&apos;t there) Primarily for use in Python. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="152" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="134" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a5957729420800bd4e9783c0b56180bf8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float xAOD::Muon_v1::uint8MuonSummaryValue</definition>
        <argsstring>(const MuonSummaryType information) const </argsstring>
        <name>uint8MuonSummaryValue</name>
        <param>
          <type>const <ref refid="dd/d44/namespacexAOD_1afe1aa7030d6a8b6ec3b9bc62a903c702" kindref="member">MuonSummaryType</ref></type>
          <declname>information</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Same as bool summaryValue(uint8_t&amp; value, const MuonSummaryType &amp;information) const, but without check (will throw exception if value isn&apos;t there) Primarily for use in Python. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="155" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="149" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1afbca0a7c8e3ad29973552fbc23c9ed70" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::Muon_v1::parameter</definition>
        <argsstring>(float &amp;value, const ParamDef parameter) const </argsstring>
        <name>parameter</name>
        <param>
          <type>float &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366" kindref="member">ParamDef</ref></type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a parameter for this Muon - momentumBalanceSignificance for example <xrefsect id="todo_1_todo000038"><xreftitle>Todo</xreftitle><xrefdescription><para>Finish documentation include matchChi2, muonentrancechi2 (instead of outerMatchChi2). Store chi2/dof instead of two? fitChi2 comes from TrackParticle. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="206" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="161" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a65f56c91b09fe76c345bcb32d79470bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Muon_v1::setParameter</definition>
        <argsstring>(float value, const ParamDef parameter)</argsstring>
        <name>setParameter</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366" kindref="member">ParamDef</ref></type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set method for parameter values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="209" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="176" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1afd5b989635ac4f367b7360e51f7f4e25" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float xAOD::Muon_v1::floatParameter</definition>
        <argsstring>(const ParamDef parameter) const </argsstring>
        <name>floatParameter</name>
        <param>
          <type>const <ref refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366" kindref="member">ParamDef</ref></type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Same as bool parameter(float&amp; value, const ParamDef &amp;parameter) const, but without check (will throw exception if value isn&apos;t there). Primarily for use in Python. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="213" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="171" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1ada74b754ee2bd068f244e42bf05ee2a6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::Muon_v1::parameter</definition>
        <argsstring>(int &amp;value, const ParamDef parameter) const </argsstring>
        <name>parameter</name>
        <param>
          <type>int &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366" kindref="member">ParamDef</ref></type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get an integer parameter for this Muon - msInnerMatchDOF for example. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="216" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="184" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a96985324198e657926a2ae645ecdeda7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Muon_v1::setParameter</definition>
        <argsstring>(int value, const ParamDef parameter)</argsstring>
        <name>setParameter</name>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366" kindref="member">ParamDef</ref></type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set method for parameter values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="219" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="199" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1aa5aa1c8718a6109f52e74b02f33fb3f8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xAOD::Muon_v1::intParameter</definition>
        <argsstring>(const ParamDef parameter) const </argsstring>
        <name>intParameter</name>
        <param>
          <type>const <ref refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366" kindref="member">ParamDef</ref></type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Same as bool parameter(float&amp; value, const ParamDef &amp;parameter) const, but without check (will throw exception if value isn&apos;t there). Primarily for use in Python. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="223" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="194" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a28e0c8821654aca0b6d71a0b25e6f0fe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a7e5ffbaa3180106746511159341722b8" kindref="member">Quality</ref></type>
        <definition>xAOD::Muon_v1::Quality xAOD::Muon_v1::quality</definition>
        <argsstring>() const </argsstring>
        <name>quality</name>
        <briefdescription>
<para>Low purity. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="231" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="207" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a97a1be038a2cbcf049b3f70107422112" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Muon_v1::setQuality</definition>
        <argsstring>(Quality)</argsstring>
        <name>setQuality</name>
        <param>
          <type><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a7e5ffbaa3180106746511159341722b8" kindref="member">Quality</ref></type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="232" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="213" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a0226a091aabc064041fbb941c9b186d6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::Muon_v1::passesIDCuts</definition>
        <argsstring>() const </argsstring>
        <name>passesIDCuts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if this Muon passes the MCP ID hit cuts (see the MCP twiki for definitions: <ulink url="https://twiki.cern.ch/twiki/bin/view/AtlasProtected/MuonPerformance">https://twiki.cern.ch/twiki/bin/view/AtlasProtected/MuonPerformance</ulink>) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="236" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="221" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a0f1a196ad5394c0d313ecc9b5ea91ce0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Muon_v1::setPassesIDCuts</definition>
        <argsstring>(bool)</argsstring>
        <name>setPassesIDCuts</name>
        <param>
          <type>bool</type>
          <defname>value</defname>
        </param>
        <briefdescription>
<para>Set whether passes the MCP ID hit cuts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="239" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="228" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a2a73bba4cdefafd7d0174bf060a4d5ec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::Muon_v1::passesHighPtCuts</definition>
        <argsstring>() const </argsstring>
        <name>passesHighPtCuts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if this Muon passes the MCP high pT cuts (see the MCP twiki for definitions: <ulink url="https://twiki.cern.ch/twiki/bin/view/AtlasProtected/MuonPerformance">https://twiki.cern.ch/twiki/bin/view/AtlasProtected/MuonPerformance</ulink>) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="243" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="236" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a5415c57234a7893cddbde96a8ae4235d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Muon_v1::setPassesHighPtCuts</definition>
        <argsstring>(bool)</argsstring>
        <name>setPassesHighPtCuts</name>
        <param>
          <type>bool</type>
          <defname>value</defname>
        </param>
        <briefdescription>
<para>Set whether passes the MCP ID hit cuts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="246" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="243" bodyend="249"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Links</header>
      <description><para><anchor id="_1amgrpbd908db5ccb07777ced8023dffc802f4"/>Returns an <ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref> to the primary TrackParticle corresponding to the MuonType of this muon. This is determined in the following order: 1. CombinedTrackParticle 2. InnerDetectorTrackParticle 3. (Extrapolated)MuonSpectrometerTrackParticle This method can throw a std::runtime_error exception if either the &apos;muontype&apos; is unknown, or if the type is MuonStandAlone, but there is no available extrapolatedMuonSpectrometerTrackParticleLink or muonSpectrometerTrackParticleLink to return.</para><para>With the following methods you can retrieve links to the objects used to identify this muon - depending on how the muon was built the link may or may not be valid (i.e. a muon built from a standalone MS track won&apos;t have an ID TrackParticle associated to it). <xrefsect id="todo_1_todo000040"><xreftitle>Todo</xreftitle><xrefdescription><para>finish documentation </para></xrefdescription></xrefsect><programlisting><codeline><highlight class="normal"><sp/>Add<sp/>some<sp/>code<sp/>here,<sp/>showing<sp/>how<sp/>to<sp/>properly<sp/>use<sp/>the<sp/>element<sp/>links</highlight></codeline>
</programlisting> <simplesect kind="note"><para>Some links were removed from the &quot;Run-1&quot; AOD::muon, in particular </para></simplesect>
</para></description>
      <memberdef kind="enum" id="d2/d30/classxAOD_1_1Muon__v1_1a1e785fc163902fa6035fa76760e83a2b" prot="public" static="no">
        <name>TrackParticleType</name>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a1e785fc163902fa6035fa76760e83a2ba331c209ef51f8e72c7a069483dbc6a4e" prot="public">
          <name>Primary</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a1e785fc163902fa6035fa76760e83a2baf4a494f85a65702b433a1deb6074f488" prot="public">
          <name>InnerDetectorTrackParticle</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a1e785fc163902fa6035fa76760e83a2babc3138879fd733c15a176b5267171357" prot="public">
          <name>MuonSpectrometerTrackParticle</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a1e785fc163902fa6035fa76760e83a2baadaa945c0d3aed3fcb4383cd88517c4b" prot="public">
          <name>CombinedTrackParticle</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a1e785fc163902fa6035fa76760e83a2ba8247947ebbe3abc84c2bfa10ffe89212" prot="public">
          <name>ExtrapolatedMuonSpectrometerTrackParticle</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="340" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" bodystart="340" bodyend="342"/>
      </memberdef>
      <memberdef kind="enum" id="d2/d30/classxAOD_1_1Muon__v1_1a768218f2e35118e0e074a8ccbb315772" prot="public" static="no">
        <name>EnergyLossType</name>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a768218f2e35118e0e074a8ccbb315772af26b2252d08f4e9147fb22aa92485da6" prot="public">
          <name>Parametrized</name>
          <initializer>0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a768218f2e35118e0e074a8ccbb315772a6a64c3c386e1d0c8513cfed59e45cab4" prot="public">
          <name>NotIsolated</name>
          <initializer>1</initializer>
          <briefdescription>
<para>Reconstruction configured to use the parametrization w/o looking in the calo (eg calo off). </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a768218f2e35118e0e074a8ccbb315772ab4075c69fee7767c01e02fdad3909a37" prot="public">
          <name>MOP</name>
          <initializer>2</initializer>
          <briefdescription>
<para>Measurement found to be compatible with most probable value --&gt; mop used as more reliable at this region of the eloss. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a768218f2e35118e0e074a8ccbb315772a5f504cc06cf9d747773402decae05a10" prot="public">
          <name>Tail</name>
          <initializer>3</initializer>
          <briefdescription>
<para>Measured eloss significantly higher than mop --&gt; the calo measurement used. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d30/classxAOD_1_1Muon__v1_1a768218f2e35118e0e074a8ccbb315772a5ba6b54145fccfe57b721fb31161b2fb" prot="public">
          <name>FSRcandidate</name>
          <initializer>4</initializer>
          <briefdescription>
<para>In standalone reconstruction the Tail option was used. but an imbalance is observed when comparing Pstandalone and Pinnerdetector (Pstandalone&gt;Pinnerdetector) --&gt; if using the mop resolves the imbalance the excess energy loss is stored as fsrEnergy and the mop is used as the eloss. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Defines how the energy loss was handled for this muon. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="359" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" bodystart="359" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a4a6d255f33b486343f87f490df29c1e9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref>&lt; <ref refid="d0/d4d/classDataVector" kindref="compound">TrackParticleContainer</ref> &gt; &amp;</type>
        <definition>const ElementLink&lt; TrackParticleContainer &gt; &amp; xAOD::Muon_v1::primaryTrackParticleLink</definition>
        <argsstring>() const </argsstring>
        <name>primaryTrackParticleLink</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="321" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="365" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a1b7244dbb300c878e1c63998a35c3a56" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">TrackParticle</ref> *</type>
        <definition>const xAOD::TrackParticle * xAOD::Muon_v1::primaryTrackParticle</definition>
        <argsstring>() const </argsstring>
        <name>primaryTrackParticle</name>
        <briefdescription>
<para>Returns a pointer (which should not usually be NULL, but might be if the muon has been stripped of information) to the primary TrackParticle corresponding to the MuonType of this muon. This is determined in the following order: 1. CombinedTrackParticle 2. InnerDetectorTrackParticle 3. (Extrapolated)MuonSpectrometerTrackParticle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="329" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="400" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a2524a9b1483ec61cf49d9c54e021d4f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref>&lt; <ref refid="d0/d4d/classDataVector" kindref="compound">TrackParticleContainer</ref> &gt; &amp;</type>
        <definition>const ElementLink&lt; TrackParticleContainer &gt;&amp; xAOD::Muon_v1::inDetTrackParticleLink</definition>
        <argsstring>() const </argsstring>
        <name>inDetTrackParticleLink</name>
        <briefdescription>
<para>Returns an <ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref> to the InnerDetector TrackParticle used in identification of this muon. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="332"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a579267a41224ca26e3cd655ce0ff9bb9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref>&lt; <ref refid="d0/d4d/classDataVector" kindref="compound">TrackParticleContainer</ref> &gt; &amp;</type>
        <definition>const ElementLink&lt; TrackParticleContainer &gt;&amp; xAOD::Muon_v1::muonSpectrometerTrackParticleLink</definition>
        <argsstring>() const </argsstring>
        <name>muonSpectrometerTrackParticleLink</name>
        <briefdescription>
<para>Returns an <ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref> to the InnerDetector TrackParticle used in identification of this muon. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="334"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a1f9c75fa5d7926d2dfab3db33ded2a15" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref>&lt; <ref refid="d0/d4d/classDataVector" kindref="compound">TrackParticleContainer</ref> &gt; &amp;</type>
        <definition>const ElementLink&lt; TrackParticleContainer &gt;&amp; xAOD::Muon_v1::combinedTrackParticleLink</definition>
        <argsstring>() const </argsstring>
        <name>combinedTrackParticleLink</name>
        <briefdescription>
<para>Returns an <ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref> to the InnerDetector TrackParticle used in identification of this muon. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="336"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1ad65c58dd62a33d8126bc6457ef6b0dff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref>&lt; <ref refid="d0/d4d/classDataVector" kindref="compound">TrackParticleContainer</ref> &gt; &amp;</type>
        <definition>const ElementLink&lt; TrackParticleContainer &gt;&amp; xAOD::Muon_v1::extrapolatedMuonSpectrometerTrackParticleLink</definition>
        <argsstring>() const </argsstring>
        <name>extrapolatedMuonSpectrometerTrackParticleLink</name>
        <briefdescription>
<para>Returns an <ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref> to the Extrapolated Muon Spectrometer TrackParticle used in identification of this muon. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="338"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1acdeb48622347dc4a88deb05f16897e18" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref>&lt; <ref refid="d0/d4d/classDataVector" kindref="compound">TrackParticleContainer</ref> &gt; &amp;</type>
        <definition>const ElementLink&lt; TrackParticleContainer &gt; &amp; xAOD::Muon_v1::trackParticleLink</definition>
        <argsstring>(TrackParticleType type) const </argsstring>
        <name>trackParticleLink</name>
        <param>
          <type>TrackParticleType</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Returns an <ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref> to the TrackParticle used in identification of this muon. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="344" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="450" bodyend="472"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a2a58e82b1fb8d6b08bda537d9228b39e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Muon_v1::setTrackParticleLink</definition>
        <argsstring>(TrackParticleType type, const ElementLink&lt; TrackParticleContainer &gt; &amp;link)</argsstring>
        <name>setTrackParticleLink</name>
        <param>
          <type>TrackParticleType</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const <ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref>&lt; <ref refid="d0/d4d/classDataVector" kindref="compound">TrackParticleContainer</ref> &gt; &amp;</type>
          <declname>link</declname>
        </param>
        <briefdescription>
<para>Set method for TrackParticle links. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="346" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="493" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1abcdc246b3fdb40008c18e5a797c132af" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">TrackParticle</ref> *</type>
        <definition>const xAOD::TrackParticle * xAOD::Muon_v1::trackParticle</definition>
        <argsstring>(TrackParticleType type) const </argsstring>
        <name>trackParticle</name>
        <param>
          <type>TrackParticleType</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Returns a pointer (which can be NULL) to the TrackParticle used in identification of this muon. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="348" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="474" bodyend="491"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a5f2145d9e3dce91d7dd91c333aec8c35" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref>&lt; <ref refid="d0/d4d/classDataVector" kindref="compound">CaloClusterContainer</ref> &gt; &amp;</type>
        <definition>const ElementLink&lt;CaloClusterContainer&gt;&amp; xAOD::Muon_v1::clusterLink</definition>
        <argsstring>() const </argsstring>
        <name>clusterLink</name>
        <briefdescription>
<para>Returns an ElementLinkto the cluster associated to this muon. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000041"><xreftitle>Todo</xreftitle><xrefdescription><para>Why just one? </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="352"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1adc79eb78fdc6ee9c456bab9968b6031e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Muon_v1::setClusterLink</definition>
        <argsstring>(const ElementLink&lt; CaloClusterContainer &gt; &amp;link)</argsstring>
        <name>setClusterLink</name>
        <param>
          <type>const <ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref>&lt; <ref refid="d0/d4d/classDataVector" kindref="compound">CaloClusterContainer</ref> &gt; &amp;</type>
          <declname>link</declname>
        </param>
        <briefdescription>
<para>Set method for cluster links. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="354"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a2b9498c9f9a76b3fd148f2f23bf3f14e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="dd/d91/classxAOD_1_1CaloCluster__v1" kindref="compound">CaloCluster</ref> *</type>
        <definition>const CaloCluster * xAOD::Muon_v1::cluster</definition>
        <argsstring>() const </argsstring>
        <name>cluster</name>
        <briefdescription>
<para>Retrieve the associated cluster with a bare pointer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="356" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="518" bodyend="537"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a230d4fcbc4ab042b0f66bc1f81c12147" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a768218f2e35118e0e074a8ccbb315772" kindref="member">EnergyLossType</ref></type>
        <definition>EnergyLossType xAOD::Muon_v1::energyLossType</definition>
        <argsstring>(void) const </argsstring>
        <name>energyLossType</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Energy determined from parametrization or not (measured). The actual energy loss is returned via <programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>etCore;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasEnergyLoss<sp/>=<sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1afbca0a7c8e3ad29973552fbc23c9ed70" kindref="member">parameter</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366" kindref="member" tooltip="Enum for parameter indexes.">ParamDef</ref><sp/>parameter)<sp/><sp/><sp/><sp/></highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="371"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a70f936dc945cd6b4747355d9c12e1421" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Muon_v1::setEnergyLossType</definition>
        <argsstring>(EnergyLossType type)</argsstring>
        <name>setEnergyLossType</name>
        <param>
          <type><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a768218f2e35118e0e074a8ccbb315772" kindref="member">EnergyLossType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Set method for the type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="373"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a700c7daa9740e62313d5ecf291d819af" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref>&lt; <ref refid="d0/d4d/classDataVector" kindref="compound">MuonSegmentContainer</ref> &gt; &gt; &amp;</type>
        <definition>const std::vector&lt; ElementLink&lt; MuonSegmentContainer &gt; &gt;&amp; xAOD::Muon_v1::muonSegmentLinks</definition>
        <argsstring>() const </argsstring>
        <name>muonSegmentLinks</name>
        <briefdescription>
<para>Returns a vector of ElementLinks to the MuonSegments used to create this Muon. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000042"><xreftitle>Todo</xreftitle><xrefdescription><para>complete the various calo energy additions (i.e. depositInCalo etc) </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="378"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1acf15aa79c80632c748fcf867d0b47393" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Muon_v1::setMuonSegmentLinks</definition>
        <argsstring>(const std::vector&lt; ElementLink&lt; MuonSegmentContainer &gt; &gt; &amp;segments)</argsstring>
        <name>setMuonSegmentLinks</name>
        <param>
          <type>const std::vector&lt; <ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref>&lt; <ref refid="d0/d4d/classDataVector" kindref="compound">MuonSegmentContainer</ref> &gt; &gt; &amp;</type>
          <declname>segments</declname>
        </param>
        <briefdescription>
<para>Set the vector of ElementLinks to the MuonSegments used to create this Muon. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="380"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a86c0bb3cfcd0d26fd342178fa4e415e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t xAOD::Muon_v1::nMuonSegments</definition>
        <argsstring>() const </argsstring>
        <name>nMuonSegments</name>
        <briefdescription>
<para>Number of MuonSegments linked to by this Muon. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="382" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="547" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a118d1dadbc7dc02e2404572acc66791d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d8/d3e/classxAOD_1_1MuonSegment__v1" kindref="compound">MuonSegment</ref> *</type>
        <definition>const MuonSegment * xAOD::Muon_v1::muonSegment</definition>
        <argsstring>(size_t i) const </argsstring>
        <name>muonSegment</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Returns a pointer to the specified MuonSegment. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the MuonSegment requested. If i is not in range (0&lt;i&lt;<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a86c0bb3cfcd0d26fd342178fa4e415e8" kindref="member">nMuonSegments()</ref>) an exception will be thrown. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="385" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="565" bodyend="575"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1abbcaa6be91e238b54b3fd3587ef4cc69" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref>&lt; <ref refid="d0/d4d/classDataVector" kindref="compound">MuonSegmentContainer</ref> &gt; &amp;</type>
        <definition>const ElementLink&lt; MuonSegmentContainer &gt; &amp; xAOD::Muon_v1::muonSegmentLink</definition>
        <argsstring>(size_t i) const </argsstring>
        <name>muonSegmentLink</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Returns a link to the specified MuonSegment. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the MuonSegment requested. If i is not in range (0&lt;i&lt;<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a86c0bb3cfcd0d26fd342178fa4e415e8" kindref="member">nMuonSegments()</ref>) an exception will be thrown. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="388" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="555" bodyend="563"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>IParticle functions</header>
      <description><para><anchor id="_1amgrp025a93a6c3f4ae178bf8e2995c06b35a"/> The transverse momentum (<formula id="11">$p_T$</formula>) of the particle. </para></description>
      <memberdef kind="typedef" id="d2/d30/classxAOD_1_1Muon__v1_1a3a09d24c04e7d3fbad4bf2fb48b294b6" prot="public" static="no">
        <type><ref refid="d5/d4c/classxAOD_1_1IParticle_1ab10b2abb617a3e1a745de3a4a9d8721e" kindref="member">IParticle::FourMom_t</ref></type>
        <definition>typedef IParticle::FourMom_t xAOD::Muon_v1::FourMom_t</definition>
        <argsstring></argsstring>
        <name>FourMom_t</name>
        <reimplements refid="d5/d4c/classxAOD_1_1IParticle_1ab10b2abb617a3e1a745de3a4a9d8721e">FourMom_t</reimplements>
        <briefdescription>
<para>Definition of the 4-momentum type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="55" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a3238b87f70c5f7bb9aefdd0acf888c4a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double xAOD::Muon_v1::pt</definition>
        <argsstring>() const </argsstring>
        <name>pt</name>
        <reimplements refid="d5/d4c/classxAOD_1_1IParticle_1a79ea3de671f898eef634aa9104cd15d5">pt</reimplements>
        <briefdescription>
<para>The transverse momentum (<formula id="11">$p_T$</formula>) of the particle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="39"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a9e1ec26e1cfde09690d8305e80877157" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double xAOD::Muon_v1::eta</definition>
        <argsstring>() const </argsstring>
        <name>eta</name>
        <reimplements refid="d5/d4c/classxAOD_1_1IParticle_1a4c912bbd5baf31fa18602586c6e42692">eta</reimplements>
        <briefdescription>
<para>The pseudorapidity (<formula id="12">$\eta$</formula>) of the particle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="41"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a10606744f788b78c1af47391bf7744d6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double xAOD::Muon_v1::phi</definition>
        <argsstring>() const </argsstring>
        <name>phi</name>
        <reimplements refid="d5/d4c/classxAOD_1_1IParticle_1adbe89863622f629d468556e8dcc5bcf8">phi</reimplements>
        <briefdescription>
<para>The azimuthal angle (<formula id="13">$\phi$</formula>) of the particle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="43"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a5fd8cf4dc89cdaa87fa4564bb327ad48" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double xAOD::Muon_v1::m</definition>
        <argsstring>() const </argsstring>
        <name>m</name>
        <reimplements refid="d5/d4c/classxAOD_1_1IParticle_1a8fcac9e6531f0273345c37bfc8deca5b">m</reimplements>
        <briefdescription>
<para>The invariant mass of the particle.. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="45" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="41" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a6fefc26bacd64afd589d2f4b16b0f655" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double xAOD::Muon_v1::e</definition>
        <argsstring>() const </argsstring>
        <name>e</name>
        <reimplements refid="d5/d4c/classxAOD_1_1IParticle_1afb494c89a607da5fb6e74b908867a9ab">e</reimplements>
        <briefdescription>
<para>The total energy of the particle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="47" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a20ae49e73c87258a6932a294a2bef4d2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double xAOD::Muon_v1::rapidity</definition>
        <argsstring>() const </argsstring>
        <name>rapidity</name>
        <reimplements refid="d5/d4c/classxAOD_1_1IParticle_1a95491311d0c6e988ec13a8506cdb31e5">rapidity</reimplements>
        <briefdescription>
<para>The true rapidity (y) of the particle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="49" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="55" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1ad77a32fbb5a8605b6db68483b58497fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Muon_v1::setP4</definition>
        <argsstring>(double pt, double eta, double phi)</argsstring>
        <name>setP4</name>
        <param>
          <type>double</type>
          <declname>pt</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eta</declname>
        </param>
        <param>
          <type>double</type>
          <declname>phi</declname>
        </param>
        <briefdescription>
<para>Set method for <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref> values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="52" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="45" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1ae5a3bb9d9614df29d73dff8cb7a8475d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="d2/d30/classxAOD_1_1Muon__v1_1a3a09d24c04e7d3fbad4bf2fb48b294b6" kindref="member">FourMom_t</ref> &amp;</type>
        <definition>const Muon_v1::FourMom_t &amp; xAOD::Muon_v1::p4</definition>
        <argsstring>() const </argsstring>
        <name>p4</name>
        <reimplements refid="d5/d4c/classxAOD_1_1IParticle_1a996aa0974b322a612e89b70fd870ba35">p4</reimplements>
        <briefdescription>
<para>The full 4-momentum of the particle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="58" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="59" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a987079b3f81af0b3766f7b3a40614dd5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="dd/dc8/namespacexAOD_1_1Type_1a96c48d2d85466ace623036af49f84434" kindref="member">Type::ObjectType</ref></type>
        <definition>Type::ObjectType xAOD::Muon_v1::type</definition>
        <argsstring>() const </argsstring>
        <name>type</name>
        <reimplements refid="d5/d4c/classxAOD_1_1IParticle_1a852e62cdcea85eb9f99461898c301e02">type</reimplements>
        <briefdescription>
<para>The type of the object as a simple enumeration. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="61" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="76" bodyend="78"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Charge</header>
      <description><para><anchor id="_1amgrp517349a3cdc1acf50617693e3ba33988"/> Returns the charge. </para></description>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a2e0b6ba6717429c94fbe12b0ddc48ba2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float xAOD::Muon_v1::charge</definition>
        <argsstring>() const </argsstring>
        <name>charge</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="66"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1af1a07b995d17f851b9804d3f37f4118b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Muon_v1::setCharge</definition>
        <argsstring>(float charge)</argsstring>
        <name>setCharge</name>
        <param>
          <type>float</type>
          <declname>charge</declname>
        </param>
        <briefdescription>
<para>Set the charge (*must* be the same as <ref refid="d2/d30/classxAOD_1_1Muon__v1_1a1b7244dbb300c878e1c63998a35c3a56" kindref="member">primaryTrackParticle()</ref> ). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="69"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Isolation information.</header>
      <description><para><anchor id="_1amgrp9457224206d909d726e3321c969c535e"/> </para></description>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a0f955a0deee65306b56220533b4d7cd9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::Muon_v1::isolation</definition>
        <argsstring>(float &amp;value, const Iso::IsolationType information) const </argsstring>
        <name>isolation</name>
        <param>
          <type>float &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1a64cf14cc53f00d0342ccc89131a3ab8f" kindref="member">Iso::IsolationType</ref></type>
          <declname>information</declname>
        </param>
        <briefdescription>
<para>Accessor for Isolation values. If &apos;information&apos; is stored in this <ref refid="dd/d44/namespacexAOD_1ab0e1f14e75ada3ccf2b11331c803b97d" kindref="member">xAOD::Muon</ref> and is of the correct type, then the function fills &apos;value&apos; and returns &apos;true&apos;, otherwise it returns &apos;false&apos;, and does not touch &apos;value&apos;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="257" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="259" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a57549ad2caf0d7eb5ca45dcca34f06da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float xAOD::Muon_v1::isolation</definition>
        <argsstring>(const Iso::IsolationType information) const </argsstring>
        <name>isolation</name>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1a64cf14cc53f00d0342ccc89131a3ab8f" kindref="member">Iso::IsolationType</ref></type>
          <declname>information</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Accessor to Isolation values , this just returns the value without internaly checking if it exists. Will lead to an exception if the information is not available </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="261" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="270" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1adabfd97fae0cf16e412f32802d2f838e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::Muon_v1::setIsolation</definition>
        <argsstring>(float value, const Iso::IsolationType information)</argsstring>
        <name>setIsolation</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1a64cf14cc53f00d0342ccc89131a3ab8f" kindref="member">Iso::IsolationType</ref></type>
          <declname>information</declname>
        </param>
        <briefdescription>
<para>Set method for Isolation values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="264" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="276" bodyend="280"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d2/d30/classxAOD_1_1Muon__v1_1a30dc9138db856b4376068ebc17ffa909" prot="private" static="no" mutable="yes">
        <type><ref refid="d2/d30/classxAOD_1_1Muon__v1_1a3a09d24c04e7d3fbad4bf2fb48b294b6" kindref="member">FourMom_t</ref></type>
        <definition>FourMom_t xAOD::Muon_v1::m_p4</definition>
        <argsstring></argsstring>
        <name>m_p4</name>
        <briefdescription>
<para>Cached 4-momentum object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="393" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" bodystart="393" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d30/classxAOD_1_1Muon__v1_1a0913fbec3fdb3f20cae7d739736ab361" prot="private" static="no" mutable="yes">
        <type>bool</type>
        <definition>bool xAOD::Muon_v1::m_p4Cached1</definition>
        <argsstring></argsstring>
        <name>m_p4Cached1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cache state of the internal 4-momentum (reset from the streamer).</para><para>The name has the &quot;1&quot; as a post-fix because of an issue with the ROOT read rule that I can&apos;t understand. In standalone mode ROOT confuses the read rule of this class with something else as it seems, and starts complaining about duplicate read rules for this variable. But with this modified name the problem disappears. Will have to debug later on with the ROOT developers... </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="403" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" bodystart="403" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a5996418d951dab377bee818244e0f35d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xAOD::Muon_v1::Muon_v1</definition>
        <argsstring>()</argsstring>
        <name>Muon_v1</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="35" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="25" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1ac7a276c8b1256186edc0cdad6c2a9ea9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::Muon_v1::isolationCaloCorrection</definition>
        <argsstring>(float &amp;value, const Iso::IsolationFlavour flavour, const Iso::IsolationCaloCorrection type, const Iso::IsolationCorrectionParameter param) const </argsstring>
        <name>isolationCaloCorrection</name>
        <param>
          <type>float &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1a7efe235f93c604b06856e397129fdb86" kindref="member">Iso::IsolationFlavour</ref></type>
          <declname>flavour</declname>
        </param>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1ae465287a132699088d47001124c72ec8" kindref="member">Iso::IsolationCaloCorrection</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1ae3ff6c71df01b30ae787cfd544e01eed" kindref="member">Iso::IsolationCorrectionParameter</ref></type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Accessor for Isolation Calo correction. If &apos;information&apos; is stored in this <ref refid="dd/d44/namespacexAOD_1ab0e1f14e75ada3ccf2b11331c803b97d" kindref="member">xAOD::Muon</ref> and is of the correct type, then the function fills &apos;value&apos; and returns &apos;true&apos;, otherwise it returns &apos;false&apos;, and does not touch &apos;value&apos;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="271" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="282" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1aff12f24319cbc7fcaa8312e3b617ed8f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float xAOD::Muon_v1::isolationCaloCorrection</definition>
        <argsstring>(const Iso::IsolationFlavour flavour, const Iso::IsolationCaloCorrection type, const Iso::IsolationCorrectionParameter param) const </argsstring>
        <name>isolationCaloCorrection</name>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1a7efe235f93c604b06856e397129fdb86" kindref="member">Iso::IsolationFlavour</ref></type>
          <declname>flavour</declname>
        </param>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1ae465287a132699088d47001124c72ec8" kindref="member">Iso::IsolationCaloCorrection</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1ae3ff6c71df01b30ae787cfd544e01eed" kindref="member">Iso::IsolationCorrectionParameter</ref></type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Accessor to Isolation Calo corrections , this just returns the correction without internaly checking if it exists. Will lead to an exception if the information is not available </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="276" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="294" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a2af44e2633cdc2d2a4c87d6bcf644bd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::Muon_v1::setIsolationCaloCorrection</definition>
        <argsstring>(float value, const Iso::IsolationFlavour flavour, const Iso::IsolationCaloCorrection type, const Iso::IsolationCorrectionParameter param)</argsstring>
        <name>setIsolationCaloCorrection</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1a7efe235f93c604b06856e397129fdb86" kindref="member">Iso::IsolationFlavour</ref></type>
          <declname>flavour</declname>
        </param>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1ae465287a132699088d47001124c72ec8" kindref="member">Iso::IsolationCaloCorrection</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1ae3ff6c71df01b30ae787cfd544e01eed" kindref="member">Iso::IsolationCorrectionParameter</ref></type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>set method for Isolation Calo Corrections. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="280" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="302" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a53d87d478a96d09cd29dbc1f52d5eb5d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::Muon_v1::isolationTrackCorrection</definition>
        <argsstring>(float &amp;value, const Iso::IsolationFlavour flavour, const Iso::IsolationTrackCorrection type) const </argsstring>
        <name>isolationTrackCorrection</name>
        <param>
          <type>float &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1a7efe235f93c604b06856e397129fdb86" kindref="member">Iso::IsolationFlavour</ref></type>
          <declname>flavour</declname>
        </param>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1ac0f0dbe9ac669e6afc9a0ac55e84f249" kindref="member">Iso::IsolationTrackCorrection</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Accessor for Isolation Track correction. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="284" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="312" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a43fbfd6734595b719e605244fa68b35f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float xAOD::Muon_v1::isolationTrackCorrection</definition>
        <argsstring>(const Iso::IsolationFlavour flavour, const Iso::IsolationTrackCorrection type) const </argsstring>
        <name>isolationTrackCorrection</name>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1a7efe235f93c604b06856e397129fdb86" kindref="member">Iso::IsolationFlavour</ref></type>
          <declname>flavour</declname>
        </param>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1ac0f0dbe9ac669e6afc9a0ac55e84f249" kindref="member">Iso::IsolationTrackCorrection</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Accessor to Isolation Track corrections , this just returns the correction without internaly checking if it exists. Will lead to an exception if the information is not available </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="288" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="321" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1ae8f5e9e2583ed6c6960daa527ca95687" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::Muon_v1::setIsolationTrackCorrection</definition>
        <argsstring>(float value, const Iso::IsolationFlavour flavour, const Iso::IsolationTrackCorrection type)</argsstring>
        <name>setIsolationTrackCorrection</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1a7efe235f93c604b06856e397129fdb86" kindref="member">Iso::IsolationFlavour</ref></type>
          <declname>flavour</declname>
        </param>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1ac0f0dbe9ac669e6afc9a0ac55e84f249" kindref="member">Iso::IsolationTrackCorrection</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Set method for Isolation Track Corrections. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="291" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="328" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1ae9114e4ccb99d4e2aea576070ccd1869" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::Muon_v1::isolationCorrectionBitset</definition>
        <argsstring>(std::bitset&lt; 32 &gt; &amp;value, const Iso::IsolationFlavour flavour) const </argsstring>
        <name>isolationCorrectionBitset</name>
        <param>
          <type>std::bitset&lt; 32 &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1a7efe235f93c604b06856e397129fdb86" kindref="member">Iso::IsolationFlavour</ref></type>
          <declname>flavour</declname>
        </param>
        <briefdescription>
<para>Accessor for Isolation corection Bitset. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="295" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="337" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a8ddc3892394efcb8035d091b01f2e0fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::bitset&lt; 32 &gt;</type>
        <definition>std::bitset&lt; 32 &gt; xAOD::Muon_v1::isolationCorrectionBitset</definition>
        <argsstring>(const Iso::IsolationFlavour flavour) const </argsstring>
        <name>isolationCorrectionBitset</name>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1a7efe235f93c604b06856e397129fdb86" kindref="member">Iso::IsolationFlavour</ref></type>
          <declname>flavour</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Accessor to Isolation corection Bitset , this just returns the bitset without internaly checking if it exists. Will lead to an exception if the information is not available </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="299" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="346" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="d2/d30/classxAOD_1_1Muon__v1_1a0346afec53edc64259c2583fdfbd921b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::Muon_v1::setIsolationCorrectionBitset</definition>
        <argsstring>(uint32_t value, const Iso::IsolationFlavour flavour)</argsstring>
        <name>setIsolationCorrectionBitset</name>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="db/d3d/namespacexAOD_1_1Iso_1a7efe235f93c604b06856e397129fdb86" kindref="member">Iso::IsolationFlavour</ref></type>
          <declname>flavour</declname>
        </param>
        <briefdescription>
<para>Set method for Isolation corection Bitset. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="302" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx" bodystart="352" bodyend="358"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Class describing a Muon.</para><para><simplesect kind="author"><para>Edward Moyse &lt;<ulink url="mailto:Edward.Moyse@cern.ch">Edward.Moyse@cern.ch</ulink>&gt; </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="14511">
        <label>SG::IAuxElement</label>
        <link refid="df/dca/classSG_1_1IAuxElement"/>
      </node>
      <node id="14508">
        <label>xAOD::Muon_v1</label>
        <link refid="d2/d30/classxAOD_1_1Muon__v1"/>
        <childnode refid="14509" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14509">
        <label>xAOD::IParticle</label>
        <link refid="d5/d4c/classxAOD_1_1IParticle"/>
        <childnode refid="14510" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14510">
        <label>SG::AuxElement</label>
        <link refid="dc/db0/classSG_1_1AuxElement"/>
        <childnode refid="14511" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="14526">
        <label>Internal::rehash_base&lt;Internal::prime_rehash_policy , hashtable&lt;Value , Value , Alloc , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="db/d2b/classInternal_1_1rehash__base"/>
      </node>
      <node id="14527">
        <label>Internal::hash_code_base&lt;Value , Value , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , cache_hash_code&gt;</label>
        <link refid="d0/d2e/classInternal_1_1hash__code__base"/>
      </node>
      <node id="14522">
        <label>xAOD::TVirtualEvent</label>
        <link refid="de/daf/classxAOD_1_1TVirtualEvent"/>
      </node>
      <node id="14531">
        <label>SG::AuxElementData</label>
        <link refid="dc/dfb/classSG_1_1AuxElementData"/>
        <childnode refid="14516" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14525">
        <label>SG::hashtable&lt; Value, Value, Alloc, Internal::identity&lt; Value &gt;, Pred, Hash, Internal::mod_range_hashing, Internal::default_ranged_hash, Internal::prime_rehash_policy, cache_hash_code, true, true &gt;</label>
        <link refid="de/d63/classSG_1_1hashtable"/>
        <childnode refid="14526" relation="public-inheritance">
        </childnode>
        <childnode refid="14527" relation="public-inheritance">
        </childnode>
        <childnode refid="14528" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14520">
        <label>SelectNoInstance</label>
        <link refid="d9/dec/classSelectNoInstance"/>
      </node>
      <node id="14521">
        <label>DataLinkBase</label>
        <link refid="dd/d9d/classDataLinkBase"/>
      </node>
      <node id="14515">
        <label>SG::IAuxElement</label>
        <link refid="df/dca/classSG_1_1IAuxElement"/>
      </node>
      <node id="14512">
        <label>xAOD::Muon_v1</label>
        <link refid="d2/d30/classxAOD_1_1Muon__v1"/>
        <childnode refid="14513" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14513">
        <label>xAOD::IParticle</label>
        <link refid="d5/d4c/classxAOD_1_1IParticle"/>
        <childnode refid="14514" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14518">
        <label>SG::IConstAuxStore</label>
        <link refid="d3/dd5/classSG_1_1IConstAuxStore"/>
      </node>
      <node id="14519">
        <label>DataLink&lt; SG::IConstAuxStore &gt;</label>
        <link refid="da/da2/classDataLink"/>
        <childnode refid="14520" relation="public-inheritance">
        </childnode>
        <childnode refid="14521" relation="public-inheritance">
        </childnode>
        <childnode refid="14522" relation="usage">
          <edgelabel>m_event</edgelabel>
        </childnode>
        <childnode refid="14518" relation="usage">
          <edgelabel>m_object</edgelabel>
        </childnode>
      </node>
      <node id="14517">
        <label>SG::IAuxStore</label>
        <link refid="dc/d05/classSG_1_1IAuxStore"/>
        <childnode refid="14518" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14524">
        <label>SG::unordered_set&lt; Value, Hash, Pred, Alloc, cache_hash_code &gt;</label>
        <link refid="dd/dac/classSG_1_1unordered__set"/>
        <childnode refid="14525" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14528">
        <label>Internal::map_base&lt;Value , Value , Internal::identity&lt; Value &gt; , unique_keys, hashtable&lt;Value , Value , Alloc , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="d1/d54/classInternal_1_1map__base"/>
      </node>
      <node id="14529">
        <label>SG::AuxVectorData::Cache</label>
        <childnode refid="14530" relation="usage">
          <edgelabel>m_cache</edgelabel>
        </childnode>
      </node>
      <node id="14523">
        <label>mutex</label>
      </node>
      <node id="14514">
        <label>SG::AuxElement</label>
        <link refid="dc/db0/classSG_1_1AuxElement"/>
        <childnode refid="14515" relation="public-inheritance">
        </childnode>
        <childnode refid="14516" relation="usage">
          <edgelabel>m_container</edgelabel>
        </childnode>
        <childnode refid="14531" relation="usage">
          <edgelabel>m_privateData</edgelabel>
          <edgelabel>s_privatePlaceholder</edgelabel>
        </childnode>
      </node>
      <node id="14530">
        <label>void</label>
      </node>
      <node id="14516">
        <label>SG::AuxVectorData</label>
        <link refid="db/dd6/classSG_1_1AuxVectorData"/>
        <childnode refid="14517" relation="usage">
          <edgelabel>m_store</edgelabel>
        </childnode>
        <childnode refid="14519" relation="usage">
          <edgelabel>m_constStoreLink</edgelabel>
        </childnode>
        <childnode refid="14518" relation="usage">
          <edgelabel>m_constStore</edgelabel>
        </childnode>
        <childnode refid="14523" relation="usage">
          <edgelabel>m_mutex</edgelabel>
        </childnode>
        <childnode refid="14524" relation="usage">
          <edgelabel>s_emptySet</edgelabel>
        </childnode>
        <childnode refid="14529" relation="usage">
          <edgelabel>m_cache</edgelabel>
          <edgelabel>m_constCache</edgelabel>
          <edgelabel>m_decorCache</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" line="31" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/xAODMuon/versions/Muon_v1.h" bodystart="31" bodyend="404"/>
    <listofallmembers>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a3955e066e80610eb31254cd53aa05716" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>addAllAuthor</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a9c3db211b1d2cf21de719d16f1adbf11" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>allAuthors</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366a8adc6a1e4a5e6a3e96aaf023eaff0905" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>annBarrel</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366aba51186dab54222e0cfc890b696e33bb" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>annEndCap</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1afc23b9e457c3866a7587a41621340507" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>Author</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1ae510b9f46068aa223d2c8505085cf82b" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>author</name></member>
      <member refid="d5/d4c/classxAOD_1_1IParticle_1a27c59a50a203be500dae35e8ab217c75" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>auxdata</name></member>
      <member refid="d5/d4c/classxAOD_1_1IParticle_1a523f65a37d801b93f9334dc555257ef6" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>auxdata</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ace84dc4cbb05aa996bc0bb12ea0580b0" prot="public" virt="non-virtual" ambiguityscope="SG::AuxElement::"><scope>xAOD::Muon_v1</scope><name>auxdata</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1acd13909ea46d99e1b502834f133a159c" prot="public" virt="non-virtual" ambiguityscope="SG::AuxElement::"><scope>xAOD::Muon_v1</scope><name>auxdata</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a1fc119dd13bd2c74f2ce4f2ba19c8898" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>auxdataConst</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1afa20cbd90cdb931e16c2751709e35271" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>auxdataConst</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1af85b897bffef87879e0ed6a58428a60b" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>auxdecor</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a6c8fc3d315a5ec0633e7ae6a2b26a432" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>auxdecor</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1aef247a3ae0d53cd8c4f90702c7501d2f" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>AuxElement</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ac8345167ba85a0788d804a39b8325a36" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>AuxElement</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366acc1092cc5595651668a58a43e970168c" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>beta</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1afc23b9e457c3866a7587a41621340507ab99a3eb7f28e4094872871e8f8f2b23f" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>CaloLikelihood</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366a3ca7406a2055f052466f6383df8ba1d0" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>CaloLRLikelihood</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366aadf522eb60eaf6dde4ac7b66c0012c7b" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>CaloMuonIDTag</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1afc23b9e457c3866a7587a41621340507a3e6f6de43bfacb0684bbe5bc72fe1d02" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>CaloTag</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a5dce926bf4eb4f671913954ec3e05e02a88dd01aac6d8d7af1cdb388c25b42d82" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>CaloTagged</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a2e0b6ba6717429c94fbe12b0ddc48ba2" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>charge</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a127c2c4839333f537cb83ecdc82ad99d" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>clearCache</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a71044a012a37af1bb0b6fab3d3ea1230" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>clearDecorations</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a2b9498c9f9a76b3fd148f2f23bf3f14e" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>cluster</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a5f2145d9e3dce91d7dd91c333aec8c35" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>clusterLink</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a5dce926bf4eb4f671913954ec3e05e02a8991d1862d8237097394883f95d20379" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>Combined</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a1e785fc163902fa6035fa76760e83a2baadaa945c0d3aed3fcb4383cd88517c4b" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>CombinedTrackParticle</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a1f9c75fa5d7926d2dfab3db33ded2a15" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>combinedTrackParticleLink</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a9004b51bd3619cab56c3d52e290c09b9" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>container</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a45f6f3563f9c8f088e4b840f81103588" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>container</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366a24c54970991955f41343939515d81c4d" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>d0_sa</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a6fefc26bacd64afd589d2f4b16b0f655" prot="public" virt="virtual"><scope>xAOD::Muon_v1</scope><name>e</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366a030a7691f544e730ea7c54f942352912" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>Eloss_sa</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366a2ca9679ea4118d65f59572abfa9fc086" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>EnergyLoss</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366aaa26633db6f5047560b83e4edab12659" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>EnergyLossSigma</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a230d4fcbc4ab042b0f66bc1f81c12147" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>energyLossType</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a768218f2e35118e0e074a8ccbb315772" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>EnergyLossType</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a9e1ec26e1cfde09690d8305e80877157" prot="public" virt="virtual"><scope>xAOD::Muon_v1</scope><name>eta</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a1e785fc163902fa6035fa76760e83a2ba8247947ebbe3abc84c2bfa10ffe89212" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>ExtrapolatedMuonSpectrometerTrackParticle</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1ad65c58dd62a33d8126bc6457ef6b0dff" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>extrapolatedMuonSpectrometerTrackParticleLink</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1afc23b9e457c3866a7587a41621340507a6a9e218d93d5c958b65a2fa4c1fbe2de" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>ExtrapolateMuonToIP</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1afd5b989635ac4f367b7360e51f7f4e25" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>floatParameter</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1ae4e7724e098dc146048a550feb563f31" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>floatSummaryValue</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a3a09d24c04e7d3fbad4bf2fb48b294b6" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>FourMom_t</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366a65564a9aa06ca30eb1268198eca2d7ff" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>FSR_CandidateEnergy</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a768218f2e35118e0e074a8ccbb315772a5ba6b54145fccfe57b721fb31161b2fb" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>FSRcandidate</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a607ee93fe8081d2bd3aa1745f0cbbb50" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>getAuxIDs</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a324d8fccbfe274b6ff91d6a19de35caf" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>getConstStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1afc4602cf2edeb01c3350367f5985f49b" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>getStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ac4bc75a2f7b1ed984ffae1bba6de58ba" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>hasNonConstStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a2d354faac53b7a003d29c0f7b95f3672" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>hasStore</name></member>
      <member refid="df/dca/classSG_1_1IAuxElement_1afdd6ee3469014a690d257119d34ec598" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>IAuxElement</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a2524a9b1483ec61cf49d9c54e021d4f3" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>inDetTrackParticleLink</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1aba555afb4547fbe96fbdc4b266f75f16" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>index</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366a11e4dce04ed3b1c3fab9f43a57c17dab" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>innAngle</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a1e785fc163902fa6035fa76760e83a2baf4a494f85a65702b433a1deb6074f488" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>InnerDetectorTrackParticle</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1aa5aa1c8718a6109f52e74b02f33fb3f8" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>intParameter</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1aa4ae256d37f65d753f696256dd1d8ba2" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>isAuthor</name></member>
      <member refid="d5/d4c/classxAOD_1_1IParticle_1a73d35d149fce4bcc1ce55da0faf8e0d5" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>isAvailable</name></member>
      <member refid="d5/d4c/classxAOD_1_1IParticle_1a0b30769b501e807f246424b3a8fa20da" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>isAvailableWritable</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a5c56e0b548ba0f0fa6eba200defaa44d" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>isAvailableWritableAsDecoration</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a0f955a0deee65306b56220533b4d7cd9" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>isolation</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a57549ad2caf0d7eb5ca45dcca34f06da" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>isolation</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1ac7a276c8b1256186edc0cdad6c2a9ea9" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>isolationCaloCorrection</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1aff12f24319cbc7fcaa8312e3b617ed8f" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>isolationCaloCorrection</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1ae9114e4ccb99d4e2aea576070ccd1869" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>isolationCorrectionBitset</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a8ddc3892394efcb8035d091b01f2e0fd" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>isolationCorrectionBitset</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a53d87d478a96d09cd29dbc1f52d5eb5d" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>isolationTrackCorrection</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a43fbfd6734595b719e605244fa68b35f" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>isolationTrackCorrection</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a7e5ffbaa3180106746511159341722b8a691114915a3518e79edd302b0454b8ec" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>Loose</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a5fd8cf4dc89cdaa87fa4564bb327ad48" prot="public" virt="virtual"><scope>xAOD::Muon_v1</scope><name>m</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a30dc9138db856b4376068ebc17ffa909" prot="private" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>m_p4</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a0913fbec3fdb3f20cae7d739736ab361" prot="private" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>m_p4Cached1</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a197bf9fc579d49e25a850a4b3a5c14e8" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>makePrivateStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ad2eaf2e38536e93c05aebaf1218516a2" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>makePrivateStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a164f94b3ddbbc773ba8beefdb7cb8677" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>makePrivateStore</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366a8b15e2279db555916313abc984328f98" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>meanDeltaADCCountsMDT</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366a46534b4a87b507950cdd1c7ec806f312" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>MeasEnergyLoss</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366aa239573122d211179217c4dab7563378" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>MeasEnergyLossSigma</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a7e5ffbaa3180106746511159341722b8a20c71bc4255ebb251040093b3d329e6a" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>Medium</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366a3b3fdee99e6c4cea112489921fc57a51" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>midAngle</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366aa58742ada86f44ab4e0142527df6ba27" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>momentumBalanceSignificance</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a768218f2e35118e0e074a8ccbb315772ab4075c69fee7767c01e02fdad3909a37" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>MOP</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366aa82f24f63fe7dd01a2643802b0e45f2d" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>msInnerMatchChi2</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366a0c78a4bb3dc004a2d60fea899669e2b6" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>msInnerMatchDOF</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366aca8c9680bfd448579ccc4c810bf9e79e" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>msOuterMatchChi2</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366a92b54ab0fc22847f50d9f3c7b4eaee05" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>msOuterMatchDOF</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1afc23b9e457c3866a7587a41621340507a35c4c47c6f82f99a01dc394499e9e7f4" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>MuGirl</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1afc23b9e457c3866a7587a41621340507a0f60a7e1da65196a3b4173ba2d646fb8" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>MuGirlLowBeta</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1afc23b9e457c3866a7587a41621340507ab58a6e2e07a007f9d4f550ed58f0f18b" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>MuidCo</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1afc23b9e457c3866a7587a41621340507a8f6dc911a2df2812c86e7f4064a74462" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>MuidSA</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a5996418d951dab377bee818244e0f35d" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>Muon_v1</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a118d1dadbc7dc02e2404572acc66791d" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>muonSegment</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1abbcaa6be91e238b54b3fd3587ef4cc69" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>muonSegmentLink</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a700c7daa9740e62313d5ecf291d819af" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>muonSegmentLinks</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a1e785fc163902fa6035fa76760e83a2babc3138879fd733c15a176b5267171357" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>MuonSpectrometerTrackParticle</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a579267a41224ca26e3cd655ce0ff9bb9" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>muonSpectrometerTrackParticleLink</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a5dce926bf4eb4f671913954ec3e05e02aa1565573b8bd2e0e2b997100899cb88c" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>MuonStandAlone</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a5dce926bf4eb4f671913954ec3e05e02" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>MuonType</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1ada4059382e0f2ad3f6c3ed3293165275" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>muonType</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1afc23b9e457c3866a7587a41621340507a785b199d4bccf2b4af570906af692e7a" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>MuTag</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1afc23b9e457c3866a7587a41621340507a4cdc5043a10d6da548d350d471baebf2" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>MuTagIMO</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a86c0bb3cfcd0d26fd342178fa4e415e8" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>nMuonSegments</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a768218f2e35118e0e074a8ccbb315772a6a64c3c386e1d0c8513cfed59e45cab4" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>NotIsolated</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1afc23b9e457c3866a7587a41621340507a3a1edb8ef7cf484ba1f1b0793ab329e2" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>NumberOfMuonAuthors</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a1ecd49ad16cba61c3131046d8e068650" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>operator=</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1ae5a3bb9d9614df29d73dff8cb7a8475d" prot="public" virt="virtual"><scope>xAOD::Muon_v1</scope><name>p4</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>ParamDef</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366ab0658337205f6cb76056f311d7250c4d" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>ParamEnergyLoss</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366a1d0f9acd95a065d3ebdb4768f9a39a6c" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>ParamEnergyLossSigmaMinus</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366ab77462124e625d37a538c17e5cd2d192" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>ParamEnergyLossSigmaPlus</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1afbca0a7c8e3ad29973552fbc23c9ed70" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>parameter</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1ada74b754ee2bd068f244e42bf05ee2a6" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>parameter</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a768218f2e35118e0e074a8ccbb315772af26b2252d08f4e9147fb22aa92485da6" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>Parametrized</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a2a73bba4cdefafd7d0174bf060a4d5ec" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>passesHighPtCuts</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a0226a091aabc064041fbb941c9b186d6" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>passesIDCuts</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a10606744f788b78c1af47391bf7744d6" prot="public" virt="virtual"><scope>xAOD::Muon_v1</scope><name>phi</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366a2409202bf06cf6446de0c0d652fde1f4" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>phi0_sa</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a1e785fc163902fa6035fa76760e83a2ba331c209ef51f8e72c7a069483dbc6a4e" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>Primary</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a1b7244dbb300c878e1c63998a35c3a56" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>primaryTrackParticle</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a4a6d255f33b486343f87f490df29c1e9" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>primaryTrackParticleLink</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a3238b87f70c5f7bb9aefdd0acf888c4a" prot="public" virt="virtual"><scope>xAOD::Muon_v1</scope><name>pt</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366a4d43341b9b91acf1d062fc56179fcfc3" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>qOverP_sa</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a7e5ffbaa3180106746511159341722b8" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>Quality</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a28e0c8821654aca0b6d71a0b25e6f0fe" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>quality</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a20ae49e73c87258a6932a294a2bef4d2" prot="public" virt="virtual"><scope>xAOD::Muon_v1</scope><name>rapidity</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1aab2f280f3c832e285fe020365bb3ac1e" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>releasePrivateStore</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366a7d08df5642e8a943a1bef64c146534fe" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>scatteringCurvatureSignificance</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366aadd36ddfc13d9c43bac90a7d9355c3ef" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>scatteringNeighbourSignificance</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366aa98ff9dd93dfea33d3be2e1b9bbd943c" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>segmentChi2OverDoF</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366ab3216d2b4a2119cbe721ffaf4e1887cc" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>segmentDeltaEta</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366a9cf1bfe15ea22f11616d7ac0ffb0258a" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>segmentDeltaPhi</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a5dce926bf4eb4f671913954ec3e05e02a3b150b67560c4649446b47596d4bf24b" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>SegmentTagged</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a9a968e650bd21589b5b4435176751e9e" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>setAllAuthors</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1aa9677bbd2f9b159c8b8cb47946baf9cd" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>setAuthor</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1af1a07b995d17f851b9804d3f37f4118b" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>setCharge</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1adc79eb78fdc6ee9c456bab9968b6031e" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>setClusterLink</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a3079709e44e8ac7452c05454f4994ce9" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>setConstStore</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a70f936dc945cd6b4747355d9c12e1421" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>setEnergyLossType</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1adabfd97fae0cf16e412f32802d2f838e" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>setIsolation</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a2af44e2633cdc2d2a4c87d6bcf644bd1" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>setIsolationCaloCorrection</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a0346afec53edc64259c2583fdfbd921b" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>setIsolationCorrectionBitset</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1ae8f5e9e2583ed6c6960daa527ca95687" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>setIsolationTrackCorrection</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1acf15aa79c80632c748fcf867d0b47393" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>setMuonSegmentLinks</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a4f1e88d321627c0d2db2c0d574416045" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>setMuonType</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a68b13428943609fd2b56c35c9dec85b3" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>setNonConstStore</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1ad77a32fbb5a8605b6db68483b58497fd" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>setP4</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a65f56c91b09fe76c345bcb32d79470bf" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>setParameter</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a96985324198e657926a2ae645ecdeda7" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>setParameter</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a5415c57234a7893cddbde96a8ae4235d" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>setPassesHighPtCuts</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a0f1a196ad5394c0d313ecc9b5ea91ce0" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>setPassesIDCuts</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a97a1be038a2cbcf049b3f70107422112" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>setQuality</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a57b602d3ec1c0129811375f46c18c049" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>setStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a9cc58e245a417833f297e836d9559a32" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>setStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a4bdca4ef5f1df892b5dc9742644444b8" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>setStore</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1affd32fc1ebb820034b9e075652b41a77" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>setSummaryValue</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a2572159f8456a2309bb6d42567a15d46" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>setSummaryValue</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a2a58e82b1fb8d6b08bda537d9228b39e" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>setTrackParticleLink</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a6a154ec406bc6531a348a80e679da31f" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>SG::AuxVectorBase</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a4573c8a5a16556f7a1826c502a8a1577" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>SG::AuxVectorBase_test</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a5dce926bf4eb4f671913954ec3e05e02adb88289ea068aeb872e5d95c1730a926" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>SiliconAssociatedForwardMuon</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366acb6d2b042c9f995e87895b0cc1c0eda1" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>spectrometerFieldIntegral</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1afc23b9e457c3866a7587a41621340507ae3a5624ecb4442612ef930d116a48c59" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>STACO</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1ae8b2a42201894df83702e750e37105d1" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>summaryValue</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a9758369018bb785712eed4785748c5dd" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>summaryValue</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a61ac17698ec28ea6549ca0ee286ee335" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>summaryValue</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366ac6356ae090231455aa8dbf8645bc584f" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>t0</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a768218f2e35118e0e074a8ccbb315772a5f504cc06cf9d747773402decae05a10" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>Tail</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366a31d27829affe5c2756ce8e43ad2a0bc4" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>theta_sa</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a7e5ffbaa3180106746511159341722b8a5cdfbd4a24179db30738070de44d54ba" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>Tight</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1abcdc246b3fdb40008c18e5a797c132af" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>trackParticle</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1acdeb48622347dc4a88deb05f16897e18" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>trackParticleLink</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a1e785fc163902fa6035fa76760e83a2b" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>TrackParticleType</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a987079b3f81af0b3766f7b3a40614dd5" prot="public" virt="virtual"><scope>xAOD::Muon_v1</scope><name>type</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a5957729420800bd4e9783c0b56180bf8" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>uint8MuonSummaryValue</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a6fe7cee0c47b4f5982e25edd02a4a103" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>uint8SummaryValue</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1afc23b9e457c3866a7587a41621340507a58734ca3e8d060c3e8ace04cd6b4a25c" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>unknown</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ad7f08e277b177f9dd74924e7d635034e" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>usingPrivateStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1af97c2ef167b0d66ada327a0ada1015e7" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>usingStandaloneStore</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a7e5ffbaa3180106746511159341722b8aac0acb81d4d063694c13a720e15e9c0d" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>VeryLoose</name></member>
      <member refid="d2/d30/classxAOD_1_1Muon__v1_1a98b966aa4ba02d4185ccbb9e15c0d366a4ca8fe77f93518e1c90abea1fb7956df" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>z0_sa</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a0b6a5f12eb826137b6d218f5738bb0b1" prot="public" virt="non-virtual"><scope>xAOD::Muon_v1</scope><name>~AuxElement</name></member>
      <member refid="d5/d4c/classxAOD_1_1IParticle_1ac395fa36a91d7e4e6533cafd92a1f29e" prot="public" virt="virtual"><scope>xAOD::Muon_v1</scope><name>~IParticle</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
