<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d2/d1f/namespaceCxxUtils_1_1StringUtils" kind="namespace">
    <compoundname>CxxUtils::StringUtils</compoundname>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1a274de4e7b92730e8139008f645f8fe62" prot="public" static="no">
        <name>SPECIALSCRIPT</name>
        <enumvalue id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1a274de4e7b92730e8139008f645f8fe62ae7dd7331b1c3acdd8895e2cd38e8d815" prot="public">
          <name>NORMALSCRIPT</name>
          <initializer> 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1a274de4e7b92730e8139008f645f8fe62a426e0b0bde2e7f41966761ced0562940" prot="public">
          <name>SUPERSCRIPT</name>
          <initializer> 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1a274de4e7b92730e8139008f645f8fe62a5d2d1eda8cc4b17523b328064905aeeb" prot="public">
          <name>SUBSCRIPT</name>
          <initializer> 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" line="61" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" bodystart="61" bodyend="65"/>
      </memberdef>
      <memberdef kind="enum" id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1aeca1cc8fc7f31c8844c18aab5b9c2418" prot="public" static="no">
        <name>FORMAT</name>
        <enumvalue id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1aeca1cc8fc7f31c8844c18aab5b9c2418aab2c39202dc88656a3633377d015d0fd" prot="public">
          <name>ASCII</name>
          <initializer> 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1aeca1cc8fc7f31c8844c18aab5b9c2418a3b043109ab947621d89d8304838b95d1" prot="public">
          <name>UNICODE</name>
          <initializer> 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1aeca1cc8fc7f31c8844c18aab5b9c2418a3df96a20943154394145c2b756e30fd4" prot="public">
          <name>LATEX</name>
          <initializer> 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1aeca1cc8fc7f31c8844c18aab5b9c2418a36c83dcc26ac12294b40872a7916e23a" prot="public">
          <name>HTML</name>
          <initializer> 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" line="67" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" bodystart="67" bodyend="72"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1a6d9b9c0455a97050e30df0ebe1a45045" prot="public" static="no">
        <type>std::string::size_type</type>
        <definition>typedef std::string::size_type CxxUtils::StringUtils::size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" line="38" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1a08e3644389c064c39fa29e728bfc393a" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string CxxUtils::StringUtils::beginNormal</definition>
        <argsstring></argsstring>
        <name>beginNormal</name>
        <initializer> &quot;\033[0m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" line="40" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1a423497c2c103aee9b7af7dc415da2f1e" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string CxxUtils::StringUtils::beginBoldWhite</definition>
        <argsstring></argsstring>
        <name>beginBoldWhite</name>
        <initializer> &quot;\033[1m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" line="41" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1a2ed70be778ad9e5bd2ced7a79548ae36" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string CxxUtils::StringUtils::beginBoldPink</definition>
        <argsstring></argsstring>
        <name>beginBoldPink</name>
        <initializer> &quot;\033[1;35m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" line="42" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1a14621fd5e4855cbb7e641f1344ad1fd6" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string CxxUtils::StringUtils::beginBoldBlue</definition>
        <argsstring></argsstring>
        <name>beginBoldBlue</name>
        <initializer> &quot;\033[1;34m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" line="43" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1a7f349087b5f8e0407d10c759b225b274" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string CxxUtils::StringUtils::beginBoldYellow</definition>
        <argsstring></argsstring>
        <name>beginBoldYellow</name>
        <initializer> &quot;\033[1;33m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" line="44" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1a94588f0296fdfcedcbcfd98ef8ef3d7c" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string CxxUtils::StringUtils::beginBoldGreen</definition>
        <argsstring></argsstring>
        <name>beginBoldGreen</name>
        <initializer> &quot;\033[1;32m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" line="45" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1a69e43a30a9abb1c3be9d2979466d2325" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string CxxUtils::StringUtils::beginBoldRed</definition>
        <argsstring></argsstring>
        <name>beginBoldRed</name>
        <initializer> &quot;\033[1;31m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" line="46" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1a0dc5e65bec4763be1ccef71f6f191bc8" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string CxxUtils::StringUtils::beginPink</definition>
        <argsstring></argsstring>
        <name>beginPink</name>
        <initializer> &quot;\033[35m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" line="47" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1a2cc9bb64a987ce997c280d0d0b565012" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string CxxUtils::StringUtils::beginBlue</definition>
        <argsstring></argsstring>
        <name>beginBlue</name>
        <initializer> &quot;\033[34m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" line="48" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1a6f987d68feaad70fc5e9e5e15ab400e7" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string CxxUtils::StringUtils::beginYellow</definition>
        <argsstring></argsstring>
        <name>beginYellow</name>
        <initializer> &quot;\033[33m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" line="49" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1a3c47317b8131e0db7ebd4553abee052b" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string CxxUtils::StringUtils::beginGreen</definition>
        <argsstring></argsstring>
        <name>beginGreen</name>
        <initializer> &quot;\033[32m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" line="50" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1a064020e55cb9048ad2716d0cfa14c0a2" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string CxxUtils::StringUtils::beginRed</definition>
        <argsstring></argsstring>
        <name>beginRed</name>
        <initializer> &quot;\033[31m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" line="51" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1abdaf0fe98b4f32358d99b5064500379b" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string CxxUtils::StringUtils::letters</definition>
        <argsstring></argsstring>
        <name>letters</name>
        <initializer> &quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" line="54" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1a4744137c4f12bf44891523e29649d03e" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string CxxUtils::StringUtils::whitespace</definition>
        <argsstring></argsstring>
        <name>whitespace</name>
        <initializer> &quot; \t\n\r&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" line="55" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1ac451c50c9445a8d6347ad0008c297735" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const boost::regex</type>
        <definition>const boost::regex CxxUtils::StringUtils::generic_latex_regex</definition>
        <argsstring>(&quot;\\\\([abcdefghijklnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ]+)[ ]*&quot;)</argsstring>
        <name>generic_latex_regex</name>
        <param>
          <type>&quot;\\\\([abcdefghijklnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ]+)*&quot;</type>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" line="57"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1ae6f5b80aae0c2c7f43f23a98ead6c4e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const boost::regex</type>
        <definition>const boost::regex CxxUtils::StringUtils::generic_xml_regex</definition>
        <argsstring>(&quot;&lt;\\s*([abcdefghijklnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ]+)([^&gt;])*&gt;&quot;)</argsstring>
        <name>generic_xml_regex</name>
        <param>
          <type>&quot;&lt;\\s*([abcdefghijklnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ]+)([^&gt;]</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" line="58"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1aad9eea7d2d7994fc9a73463024a34e83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const boost::regex</type>
        <definition>const boost::regex CxxUtils::StringUtils::generic_html_entity_regex</definition>
        <argsstring>(&quot;&amp;[abcdefghijklnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ]+;&quot;)</argsstring>
        <name>generic_html_entity_regex</name>
        <param>
          <type>&quot;&amp;+;&quot;</type>
          <array>[abcdefghijklnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" line="59"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1a2ed76748fe713b4eca6744b97f154f62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t CxxUtils::StringUtils::getStringWidth</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>getStringWidth</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>calculate the width of a string </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>input string to be analyzed </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of &apos;characters&apos; (printable entities) in this string</para></simplesect>
this function will return the number of &apos;characters&apos; (printable entities) in any string. for well-behaved strings, this will be identical to std::string::size(). however,<itemizedlist>
<listitem><para>non-printable-characters will not be counted</para></listitem></itemizedlist>
</para><para>control sequences will not be counted<itemizedlist>
<listitem><para>multi-byte characters will only be counted once </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" line="74" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/StringUtils.cxx" bodystart="32" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1a268b419cc47718ffbb1f46488e219bb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CxxUtils::StringUtils::writeFixedWidth</definition>
        <argsstring>(std::ostream &amp;os, const std::string &amp;input, size_t width, const std::string &amp;align)</argsstring>
        <name>writeFixedWidth</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>align</declname>
        </param>
        <briefdescription>
<para>writes a string to a given stream with a fixed width </para>        </briefdescription>
        <detaileddescription>
<para>short strings will be supplemented with spaces, long strings will be truncated. this function respects and supports std::strings with wchar_t UTF8 entries</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>os</parametername>
</parameternamelist>
<parameterdescription>
<para>output stream to be used </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>string to be written </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the target string in &apos;characters&apos; (printable entities) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>option string controlling the alignment.</para></parameterdescription>
</parameteritem>
</parameterlist>
the alignment string will be searched for the following characters: &apos;l&apos;: triggers left-align (flushleft) &apos;r&apos;: triggers right-align (flushright) &apos;c&apos; or &apos;m&apos;: triggers middle-align (center) &apos;.&apos;: annotate strings with &apos;...&apos; where truncated </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" line="75" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/StringUtils.cxx" bodystart="75" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1a8e7fe564a5889b6f420a17eea470a59f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_type</type>
        <definition>size_type CxxUtils::StringUtils::findParenthesisMatch</definition>
        <argsstring>(const std::string &amp;str, size_type nextpos, const std::string &amp;paropen, const std::string &amp;parclose)</argsstring>
        <name>findParenthesisMatch</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>size_type</type>
          <declname>nextpos</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>paropen</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>parclose</declname>
        </param>
        <briefdescription>
<para>finds the nearest matching parenthesis in a string from a given position </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>string to search </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nextpos</parametername>
</parameternamelist>
<parameterdescription>
<para>starting position of parenthesis check </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>paropen</parametername>
</parameternamelist>
<parameterdescription>
<para>opening parenthesis (arbitrary string) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parclose</parametername>
</parameternamelist>
<parameterdescription>
<para>closing parenthesis (arbitrary string) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>position of matching parenthesis close in the string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" line="80" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/StringUtils.cxx" bodystart="189" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1afd1aeb4c5adff1bdffa9fbb303bdfccb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_type</type>
        <definition>size_type CxxUtils::StringUtils::rfindParenthesisMatch</definition>
        <argsstring>(const std::string &amp;str, size_type nextpos, const std::string &amp;paropen, const std::string &amp;parclose)</argsstring>
        <name>rfindParenthesisMatch</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>size_type</type>
          <declname>nextpos</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>paropen</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>parclose</declname>
        </param>
        <briefdescription>
<para>reverse-finds the nearest matching parenthesis in a string from a given position </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>string to search </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nextpos</parametername>
</parameternamelist>
<parameterdescription>
<para>starting position of parenthesis check </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>paropen</parametername>
</parameternamelist>
<parameterdescription>
<para>opening parenthesis (arbitrary string) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parclose</parametername>
</parameternamelist>
<parameterdescription>
<para>closing parenthesis (arbitrary string) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>position of matching parenthesis close in the string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" line="84" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/StringUtils.cxx" bodystart="220" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1a9db31d39f254081a773e2b879957a16b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_type</type>
        <definition>size_type CxxUtils::StringUtils::findFree</definition>
        <argsstring>(const std::string &amp;haystack, const std::string &amp;needle, const std::string &amp;paropen, const std::string &amp;parclose, size_type startpos)</argsstring>
        <name>findFree</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>haystack</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>needle</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>paropen</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>parclose</declname>
        </param>
        <param>
          <type>size_type</type>
          <declname>startpos</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>finds the next &quot;free&quot; occurrence of needle in haystack </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>haystack</parametername>
</parameternamelist>
<parameterdescription>
<para>string to search </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>needle</parametername>
</parameternamelist>
<parameterdescription>
<para>string to search for </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>paropen</parametername>
</parameternamelist>
<parameterdescription>
<para>opening parenthesis, denoting the beginning of a &quot;closed block&quot; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parclose</parametername>
</parameternamelist>
<parameterdescription>
<para>closing parenthesis, denoting the end of a &quot;closed block&quot; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>startpos</parametername>
</parameternamelist>
<parameterdescription>
<para>position to start searching at </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>position of the next free occurrence </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" line="90" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/StringUtils.cxx" bodystart="255" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1a41cbf92cf3248a2bff49aa160b6c4272" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_type</type>
        <definition>size_type CxxUtils::StringUtils::rfindFree</definition>
        <argsstring>(const std::string &amp;haystack, const std::string &amp;needle, const std::string &amp;paropen, const std::string &amp;parclose, size_type startpos)</argsstring>
        <name>rfindFree</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>haystack</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>needle</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>paropen</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>parclose</declname>
        </param>
        <param>
          <type>size_type</type>
          <declname>startpos</declname>
        </param>
        <briefdescription>
<para>reverse-finds the next &quot;free&quot; occurrence of needle in haystack </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>haystack</parametername>
</parameternamelist>
<parameterdescription>
<para>string to search </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>needle</parametername>
</parameternamelist>
<parameterdescription>
<para>string to search for </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>paropen</parametername>
</parameternamelist>
<parameterdescription>
<para>opening parenthesis, denoting the beginning of a &quot;closed block&quot; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parclose</parametername>
</parameternamelist>
<parameterdescription>
<para>closing parenthesis, denoting the end of a &quot;closed block&quot; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>startpos</parametername>
</parameternamelist>
<parameterdescription>
<para>position to start searching at </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>position of the previous free occurrence </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" line="95" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/StringUtils.cxx" bodystart="280" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1a974efdd3cd246b5dbabcfe51401abb6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_type</type>
        <definition>size_type CxxUtils::StringUtils::findFreeOf</definition>
        <argsstring>(const std::string &amp;haystack, const std::string &amp;needles, const std::string &amp;paropen, const std::string &amp;parclose, size_type startpos)</argsstring>
        <name>findFreeOf</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>haystack</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>needles</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>paropen</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>parclose</declname>
        </param>
        <param>
          <type>size_type</type>
          <declname>startpos</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>finds the next &quot;free&quot; occurrence of any needle in haystack </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>haystack</parametername>
</parameternamelist>
<parameterdescription>
<para>string to search </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>needles</parametername>
</parameternamelist>
<parameterdescription>
<para>string with characters to search for </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>paropen</parametername>
</parameternamelist>
<parameterdescription>
<para>opening parenthesis, denoting the beginning of a &quot;closed block&quot; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parclose</parametername>
</parameternamelist>
<parameterdescription>
<para>closing parenthesis, denoting the end of a &quot;closed block&quot; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>startpos</parametername>
</parameternamelist>
<parameterdescription>
<para>position to start searching at </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>position of the next free occurrence </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" line="101" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/StringUtils.cxx" bodystart="308" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1acb28cac77654a6d24edb07b623cd8f6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_type</type>
        <definition>size_type CxxUtils::StringUtils::rfindFreeOf</definition>
        <argsstring>(const std::string &amp;haystack, const std::string &amp;needles, const std::string &amp;paropen, const std::string &amp;parclose, size_type startpos)</argsstring>
        <name>rfindFreeOf</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>haystack</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>needles</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>paropen</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>parclose</declname>
        </param>
        <param>
          <type>size_type</type>
          <declname>startpos</declname>
        </param>
        <briefdescription>
<para>reverse-finds the next &quot;free&quot; occurrence of any needle in haystack </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>haystack</parametername>
</parameternamelist>
<parameterdescription>
<para>string to search </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>needles</parametername>
</parameternamelist>
<parameterdescription>
<para>string with characters to search for </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>paropen</parametername>
</parameternamelist>
<parameterdescription>
<para>opening parenthesis, denoting the beginning of a &quot;closed block&quot; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parclose</parametername>
</parameternamelist>
<parameterdescription>
<para>closing parenthesis, denoting the end of a &quot;closed block&quot; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>startpos</parametername>
</parameternamelist>
<parameterdescription>
<para>position to start searching at </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>position of the previous free occurrence </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" line="106" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/StringUtils.cxx" bodystart="333" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1ac5598eb51846f96de268376e1f4ebe84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string CxxUtils::StringUtils::replaceSymbols</definition>
        <argsstring>(const std::string &amp;str, StringUtils::FORMAT inputFormat, StringUtils::FORMAT outputFormat)</argsstring>
        <name>replaceSymbols</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>StringUtils::FORMAT</type>
          <declname>inputFormat</declname>
        </param>
        <param>
          <type>StringUtils::FORMAT</type>
          <declname>outputFormat</declname>
        </param>
        <briefdescription>
<para>replaces unicode, latex and html symbols with one another as desired </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>input string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputFormat</parametername>
</parameternamelist>
<parameterdescription>
<para>format of the input string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outputFormat</parametername>
</parameternamelist>
<parameterdescription>
<para>format of the output string </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>new string with replaced symbols </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" line="108" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/StringUtils.cxx" bodystart="363" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1a837bb471da14d58945786c860052bb85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_type</type>
        <definition>size_type CxxUtils::StringUtils::findBeginSpecialScript</definition>
        <argsstring>(const std::string &amp;str, StringUtils::SPECIALSCRIPT scripttype, size_type pos)</argsstring>
        <name>findBeginSpecialScript</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>StringUtils::SPECIALSCRIPT</type>
          <declname>scripttype</declname>
        </param>
        <param>
          <type>size_type</type>
          <declname>pos</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>finds the next entity of a certain type of special script </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>input string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scripttype</parametername>
</parameternamelist>
<parameterdescription>
<para>type of script to be found </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>starting position for the search </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>position of next special script entity of the given type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" line="111" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/StringUtils.cxx" bodystart="462" bodyend="472"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1ab50972710670ef298b27813fb356135e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_type</type>
        <definition>size_type CxxUtils::StringUtils::findEndSpecialScript</definition>
        <argsstring>(const std::string &amp;str, StringUtils::SPECIALSCRIPT scripttype, size_type pos)</argsstring>
        <name>findEndSpecialScript</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>StringUtils::SPECIALSCRIPT</type>
          <declname>scripttype</declname>
        </param>
        <param>
          <type>size_type</type>
          <declname>pos</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>finds the next entity not belonging to a certain type of special script </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>input string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scripttype</parametername>
</parameternamelist>
<parameterdescription>
<para>type of script to be ignored </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>starting position for the search </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>position of next entity not belonging to the given type of special script </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" line="114" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/StringUtils.cxx" bodystart="481" bodyend="494"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1a56d04e49c462d593b338877fef5a9114" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>StringUtils::FORMAT</type>
        <definition>StringUtils::FORMAT CxxUtils::StringUtils::guessFormat</definition>
        <argsstring>(const std::string &amp;input)</argsstring>
        <name>guessFormat</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>guesses the format of a string </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>input string </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>supposed StringUtils::FORMAT </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" line="116" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/StringUtils.cxx" bodystart="538" bodyend="549"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1a04cae4e6f82bde775bfb3c8d954c29e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string CxxUtils::StringUtils::convertText</definition>
        <argsstring>(const std::string &amp;input, StringUtils::FORMAT inputFormat, StringUtils::FORMAT outputFormat)</argsstring>
        <name>convertText</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>StringUtils::FORMAT</type>
          <declname>inputFormat</declname>
        </param>
        <param>
          <type>StringUtils::FORMAT</type>
          <declname>outputFormat</declname>
        </param>
        <briefdescription>
<para>converts a string from one format into another </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>input string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputFormat</parametername>
</parameternamelist>
<parameterdescription>
<para>alleged input format (one of HTML, LATEX, UNICODE, ASCII) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outputFormat</parametername>
</parameternamelist>
<parameterdescription>
<para>desired output format (one of HTML, LATEX, UNICODE, ASCII) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>converted string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" line="117" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/StringUtils.cxx" bodystart="578" bodyend="787"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1a9ef0a8d73a838b36d756a741d996625c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string CxxUtils::StringUtils::convertText</definition>
        <argsstring>(const std::string &amp;input, StringUtils::FORMAT outputFormat)</argsstring>
        <name>convertText</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>StringUtils::FORMAT</type>
          <declname>outputFormat</declname>
        </param>
        <briefdescription>
<para>converts a string into any format </para>        </briefdescription>
        <detaileddescription>
<para>This variant guesses the input format via StringUtils::guessFormat;</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>input string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outputFormat</parametername>
</parameternamelist>
<parameterdescription>
<para>desired output format </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>converted string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" line="118" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/StringUtils.cxx" bodystart="797" bodyend="799"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1a1d51cc89a18b4bfb257c21f330a51c37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string CxxUtils::StringUtils::stripUnprintableCharacters</definition>
        <argsstring>(const std::string &amp;str, bool allowNonAscii)</argsstring>
        <name>stripUnprintableCharacters</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>allowNonAscii</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>removes all non-printable characters from a string </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>input string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allowNonAscii</parametername>
</parameternamelist>
<parameterdescription>
<para>true will allow non-ascii characters, falls will remove them (default true) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>modified string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" line="120" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/StringUtils.cxx" bodystart="502" bodyend="531"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1ae29a1811f3fff44d6e430d0279b2c303" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string CxxUtils::StringUtils::replaceSpecialScript</definition>
        <argsstring>(const std::string &amp;str, StringUtils::SPECIALSCRIPT inputType, StringUtils::SPECIALSCRIPT outputType)</argsstring>
        <name>replaceSpecialScript</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>StringUtils::SPECIALSCRIPT</type>
          <declname>inputType</declname>
        </param>
        <param>
          <type>StringUtils::SPECIALSCRIPT</type>
          <declname>outputType</declname>
        </param>
        <briefdescription>
<para>replaces unicode superscript and subscript with the corresponding ascii characters and vice-versa </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>input string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputType</parametername>
</parameternamelist>
<parameterdescription>
<para>type of script to be removed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outputType</parametername>
</parameternamelist>
<parameterdescription>
<para>type of script to be inserted </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>new string with replaced characters </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" line="121" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/StringUtils.cxx" bodystart="422" bodyend="452"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1abca4bcd2082a17e02228c9155e8ac138" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CxxUtils::StringUtils::isOnlyWhitespace</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>isOnlyWhitespace</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" line="123" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" bodystart="123" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1add02ab9eaa394e736d71c74931410d5e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string CxxUtils::StringUtils::trim</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>trim</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" line="127" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" bodystart="127" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="d2/d1f/namespaceCxxUtils_1_1StringUtils_1a9ff7a70fb06e268e9b86783d4c6abf95" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t CxxUtils::StringUtils::readLaTeXToken</definition>
        <argsstring>(const std::string &amp;latex, std::string &amp;token, size_t start)</argsstring>
        <name>readLaTeXToken</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>latex</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>token</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>start</declname>
        </param>
        <briefdescription>
<para>reads the next LaTeX token </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>latex</parametername>
</parameternamelist>
<parameterdescription>
<para>input string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the string where the token will be stored </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>starting position </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/StringUtils.cxx" line="558" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/StringUtils.cxx" bodystart="558" bodyend="569"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/StringUtils.h" line="36"/>
  </compounddef>
</doxygen>
