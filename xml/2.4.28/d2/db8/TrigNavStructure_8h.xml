<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d2/db8/TrigNavStructure_8h" kind="file">
    <compoundname>TrigNavStructure.h</compoundname>
    <includes local="no">vector</includes>
    <includes refid="d7/d71/TriggerElement_8h" local="yes">TrigNavStructure/TriggerElement.h</includes>
    <includes refid="d1/dc0/TriggerElementFactory_8h" local="yes">TrigNavStructure/TriggerElementFactory.h</includes>
    <includes refid="df/d37/BaseHolder_8h" local="yes">TrigNavStructure/BaseHolder.h</includes>
    <includes refid="df/ded/TrigHolderStructure_8h" local="yes">TrigNavStructure/TrigHolderStructure.h</includes>
    <includedby refid="df/d51/DecisionUnpackerStandalone_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/Root/DecisionUnpackerStandalone.cxx</includedby>
    <includedby refid="de/dc9/FeatureCollectStandalone_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/Root/FeatureCollectStandalone.cxx</includedby>
    <includedby refid="db/d59/DecisionUnpackerAthena_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/src/DecisionUnpackerAthena.cxx</includedby>
    <includedby refid="d6/d8b/DecisionUnpackerEventInfo_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/src/DecisionUnpackerEventInfo.cxx</includedby>
    <includedby refid="dd/daf/Combination_8h" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Combination.h</includedby>
    <includedby refid="d9/d17/FeatureCollectStandalone_8h" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureCollectStandalone.h</includedby>
    <includedby refid="d5/de8/FeatureContainer_8h" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureContainer.h</includedby>
    <includedby refid="de/d50/ComboIterator_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/Root/ComboIterator.cxx</includedby>
    <includedby refid="d3/de9/TrigNavStructure_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/Root/TrigNavStructure.cxx</includedby>
    <includedby refid="da/dfe/StandaloneNavigation_8h" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/StandaloneNavigation.h</includedby>
    <incdepgraph>
      <node id="328925">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/TrigNavStructure.h</label>
        <link refid="TrigNavStructure.h"/>
        <childnode refid="328926" relation="include">
        </childnode>
        <childnode refid="328927" relation="include">
        </childnode>
        <childnode refid="328934" relation="include">
        </childnode>
        <childnode refid="328935" relation="include">
        </childnode>
        <childnode refid="328936" relation="include">
        </childnode>
      </node>
      <node id="328944">
        <label>AsgTools/IAsgTool.h</label>
        <link refid="df/dd4/IAsgTool_8h_source"/>
        <childnode refid="328929" relation="include">
        </childnode>
        <childnode refid="328939" relation="include">
        </childnode>
        <childnode refid="328945" relation="include">
        </childnode>
        <childnode refid="328946" relation="include">
        </childnode>
      </node>
      <node id="328946">
        <label>GaudiKernel/IAlgTool.h</label>
      </node>
      <node id="328935">
        <label>TrigNavStructure/BaseHolder.h</label>
        <link refid="df/d37/BaseHolder_8h_source"/>
        <childnode refid="328929" relation="include">
        </childnode>
        <childnode refid="328926" relation="include">
        </childnode>
        <childnode refid="328932" relation="include">
        </childnode>
      </node>
      <node id="328930">
        <label>stdint.h</label>
      </node>
      <node id="328949">
        <label>AthenaBaseComps/AthMsgStreamMacros.h</label>
      </node>
      <node id="328942">
        <label>AsgTools/MsgLevel.h</label>
        <link refid="de/d80/MsgLevel_8h"/>
        <childnode refid="328929" relation="include">
        </childnode>
        <childnode refid="328939" relation="include">
        </childnode>
        <childnode refid="328943" relation="include">
        </childnode>
      </node>
      <node id="328939">
        <label>AsgTools/AsgToolsConf.h</label>
        <link refid="df/db7/AsgToolsConf_8h_source"/>
      </node>
      <node id="328934">
        <label>TrigNavStructure/TriggerElementFactory.h</label>
        <link refid="d1/dc0/TriggerElementFactory_8h_source"/>
        <childnode refid="328926" relation="include">
        </childnode>
        <childnode refid="328932" relation="include">
        </childnode>
        <childnode refid="328927" relation="include">
        </childnode>
      </node>
      <node id="328929">
        <label>string</label>
      </node>
      <node id="328928">
        <label>map</label>
      </node>
      <node id="328933">
        <label>boost/variant.hpp</label>
      </node>
      <node id="328943">
        <label>GaudiKernel/IMessageSvc.h</label>
      </node>
      <node id="328932">
        <label>TrigNavStructure/Types.h</label>
        <link refid="d5/d81/TrigNavStructure_2Types_8h_source"/>
        <childnode refid="328930" relation="include">
        </childnode>
        <childnode refid="328933" relation="include">
        </childnode>
      </node>
      <node id="328936">
        <label>TrigNavStructure/TrigHolderStructure.h</label>
        <link refid="df/ded/TrigHolderStructure_8h_source"/>
        <childnode refid="328937" relation="include">
        </childnode>
        <childnode refid="328928" relation="include">
        </childnode>
        <childnode refid="328929" relation="include">
        </childnode>
        <childnode refid="328933" relation="include">
        </childnode>
        <childnode refid="328938" relation="include">
        </childnode>
        <childnode refid="328932" relation="include">
        </childnode>
        <childnode refid="328935" relation="include">
        </childnode>
        <childnode refid="328927" relation="include">
        </childnode>
      </node>
      <node id="328927">
        <label>TrigNavStructure/TriggerElement.h</label>
        <link refid="d7/d71/TriggerElement_8h_source"/>
        <childnode refid="328928" relation="include">
        </childnode>
        <childnode refid="328926" relation="include">
        </childnode>
        <childnode refid="328929" relation="include">
        </childnode>
        <childnode refid="328930" relation="include">
        </childnode>
        <childnode refid="328931" relation="include">
        </childnode>
        <childnode refid="328932" relation="include">
        </childnode>
      </node>
      <node id="328948">
        <label>AsgTools/MsgStreamMacros.h</label>
        <link refid="d3/ded/AsgTools_2AsgTools_2MsgStreamMacros_8h_source"/>
        <childnode refid="328939" relation="include">
        </childnode>
        <childnode refid="328942" relation="include">
        </childnode>
        <childnode refid="328949" relation="include">
        </childnode>
      </node>
      <node id="328926">
        <label>vector</label>
      </node>
      <node id="328941">
        <label>sstream</label>
      </node>
      <node id="328931">
        <label>iostream</label>
      </node>
      <node id="328947">
        <label>GaudiKernel/MsgStream.h</label>
      </node>
      <node id="328940">
        <label>AsgTools/MsgStream.h</label>
        <link refid="d3/d95/AsgTools_2AsgTools_2MsgStream_8h_source"/>
        <childnode refid="328929" relation="include">
        </childnode>
        <childnode refid="328941" relation="include">
        </childnode>
        <childnode refid="328939" relation="include">
        </childnode>
        <childnode refid="328942" relation="include">
        </childnode>
        <childnode refid="328944" relation="include">
        </childnode>
        <childnode refid="328947" relation="include">
        </childnode>
      </node>
      <node id="328945">
        <label>AsgTools/AsgToolMacros.h</label>
        <link refid="d1/d68/AsgToolMacros_8h_source"/>
      </node>
      <node id="328938">
        <label>AsgTools/AsgMessaging.h</label>
        <link refid="d3/d61/AsgMessaging_8h_source"/>
        <childnode refid="328929" relation="include">
        </childnode>
        <childnode refid="328939" relation="include">
        </childnode>
        <childnode refid="328940" relation="include">
        </childnode>
        <childnode refid="328948" relation="include">
        </childnode>
      </node>
      <node id="328937">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="328951">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Combination.h</label>
        <link refid="dd/daf/Combination_8h_source"/>
        <childnode refid="328952" relation="include">
        </childnode>
        <childnode refid="328969" relation="include">
        </childnode>
        <childnode refid="328970" relation="include">
        </childnode>
        <childnode refid="328962" relation="include">
        </childnode>
        <childnode refid="328963" relation="include">
        </childnode>
      </node>
      <node id="328950">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/TrigNavStructure.h</label>
        <link refid="TrigNavStructure.h"/>
        <childnode refid="328951" relation="include">
        </childnode>
        <childnode refid="328979" relation="include">
        </childnode>
        <childnode refid="328970" relation="include">
        </childnode>
        <childnode refid="328980" relation="include">
        </childnode>
      </node>
      <node id="328955">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CPAnalysisExamples/CPAnalysisExamples/ToolExamplesAlg.h</label>
        <link refid="d4/d75/ToolExamplesAlg_8h_source"/>
      </node>
      <node id="328970">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureContainer.h</label>
        <link refid="d5/de8/FeatureContainer_8h_source"/>
        <childnode refid="328971" relation="include">
        </childnode>
        <childnode refid="328952" relation="include">
        </childnode>
        <childnode refid="328969" relation="include">
        </childnode>
        <childnode refid="328962" relation="include">
        </childnode>
      </node>
      <node id="328976">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SUSYTools/SUSYTools/SUSYToolsDict.h</label>
        <link refid="dc/ded/SUSYToolsDict_8h_source"/>
      </node>
      <node id="328975">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SUSYTools/SUSYTools/SUSYObjDef_xAOD.h</label>
        <link refid="d0/daf/SUSYObjDef__xAOD_8h_source"/>
        <childnode refid="328976" relation="include">
        </childnode>
      </node>
      <node id="328953">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/TrigDecisionToolCore.h</label>
        <link refid="de/d03/TrigDecisionToolCore_8h_source"/>
        <childnode refid="328954" relation="include">
        </childnode>
        <childnode refid="328962" relation="include">
        </childnode>
      </node>
      <node id="328957">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigAnalysisTest/TrigAnalysisTest/ITest.h</label>
        <link refid="dd/d82/ITest_8h_source"/>
        <childnode refid="328956" relation="include">
        </childnode>
        <childnode refid="328958" relation="include">
        </childnode>
        <childnode refid="328959" relation="include">
        </childnode>
        <childnode refid="328960" relation="include">
        </childnode>
      </node>
      <node id="328965">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TriggerMatchingTool/TriggerMatchingTool/TriggerMatchingToolDict.h</label>
        <link refid="de/db3/TriggerMatchingToolDict_8h_source"/>
      </node>
      <node id="328954">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/TrigDecisionTool.h</label>
        <link refid="d7/df7/TrigDecisionTool_8h_source"/>
        <childnode refid="328955" relation="include">
        </childnode>
        <childnode refid="328956" relation="include">
        </childnode>
        <childnode refid="328957" relation="include">
        </childnode>
        <childnode refid="328961" relation="include">
        </childnode>
        <childnode refid="328962" relation="include">
        </childnode>
        <childnode refid="328963" relation="include">
        </childnode>
        <childnode refid="328966" relation="include">
        </childnode>
        <childnode refid="328967" relation="include">
        </childnode>
      </node>
      <node id="328980">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/StandaloneNavigation.h</label>
        <link refid="da/dfe/StandaloneNavigation_8h_source"/>
      </node>
      <node id="328977">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/ChainGroupFunctions.h</label>
        <link refid="d3/d14/ChainGroupFunctions_8h_source"/>
        <childnode refid="328953" relation="include">
        </childnode>
        <childnode refid="328962" relation="include">
        </childnode>
      </node>
      <node id="328972">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SUSYTools/SUSYTools/ISUSYObjDef_xAODTool.h</label>
        <link refid="d1/d7a/ISUSYObjDef__xAODTool_8h_source"/>
        <childnode refid="328973" relation="include">
        </childnode>
        <childnode refid="328974" relation="include">
        </childnode>
        <childnode refid="328975" relation="include">
        </childnode>
      </node>
      <node id="328960">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigAnalysisTest/TrigAnalysisTest/TestFactory.h</label>
        <link refid="d7/d5f/TestFactory_8h_source"/>
      </node>
      <node id="328961">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigAnalysisTest/TrigAnalysisTest/TriggersFiredTest.h</label>
        <link refid="da/d06/TriggersFiredTest_8h_source"/>
      </node>
      <node id="328968">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigTauMatching/TrigTauMatching/TrigTauMatchingDict.h</label>
        <link refid="dc/d01/TrigTauMatchingDict_8h_source"/>
      </node>
      <node id="328973">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SUSYTools/src/ApplySUSYTools.h</label>
        <link refid="dd/dcc/ApplySUSYTools_8h_source"/>
      </node>
      <node id="328958">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigAnalysisTest/TrigAnalysisTest/BasicTriggerFired.h</label>
        <link refid="d5/dd0/BasicTriggerFired_8h_source"/>
      </node>
      <node id="328979">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureCollectStandalone.h</label>
        <link refid="d9/d17/FeatureCollectStandalone_8h_source"/>
        <childnode refid="328951" relation="include">
        </childnode>
        <childnode refid="328970" relation="include">
        </childnode>
      </node>
      <node id="328971">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/ChainGroup.h</label>
        <link refid="d2/dd8/ChainGroup_8h_source"/>
        <childnode refid="328972" relation="include">
        </childnode>
        <childnode refid="328977" relation="include">
        </childnode>
        <childnode refid="328978" relation="include">
        </childnode>
        <childnode refid="328952" relation="include">
        </childnode>
        <childnode refid="328969" relation="include">
        </childnode>
        <childnode refid="328953" relation="include">
        </childnode>
        <childnode refid="328962" relation="include">
        </childnode>
      </node>
      <node id="328969">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/ExpertMethods.h</label>
        <link refid="dd/d57/ExpertMethods_8h_source"/>
        <childnode refid="328953" relation="include">
        </childnode>
        <childnode refid="328962" relation="include">
        </childnode>
      </node>
      <node id="328974">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SUSYTools/src/SUSYToolsAlg.h</label>
        <link refid="d4/dd2/SUSYToolsAlg_8h_source"/>
      </node>
      <node id="328959">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigAnalysisTest/TrigAnalysisTest/Run1BStoxAODTrigger.h</label>
        <link refid="dd/d41/Run1BStoxAODTrigger_8h_source"/>
      </node>
      <node id="328956">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigAnalysisTest/TrigAnalysisTest/AthenaTestHarness.h</label>
        <link refid="d5/d93/AthenaTestHarness_8h_source"/>
      </node>
      <node id="328964">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TriggerMatchingTool/TriggerMatchingTool/MatchingImplementation.h</label>
        <link refid="d1/d9b/MatchingImplementation_8h_source"/>
      </node>
      <node id="328978">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/ConfigurationAccess.h</label>
        <link refid="df/d4d/ConfigurationAccess_8h_source"/>
        <childnode refid="328953" relation="include">
        </childnode>
        <childnode refid="328962" relation="include">
        </childnode>
      </node>
      <node id="328967">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigTauMatching/TrigTauMatching/TrigTauMatching.h</label>
        <link refid="dc/d5a/TrigTauMatching_8h_source"/>
        <childnode refid="328968" relation="include">
        </childnode>
      </node>
      <node id="328962">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/TrigDecisionToolDict.h</label>
        <link refid="d4/df1/TrigDecisionToolDict_8h_source"/>
      </node>
      <node id="328966">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigTauMatching/src/TrigTauMatching_example.h</label>
        <link refid="d7/d96/TrigTauMatching__example_8h_source"/>
      </node>
      <node id="328952">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/DecisionAccess.h</label>
        <link refid="d7/d07/DecisionAccess_8h_source"/>
        <childnode refid="328953" relation="include">
        </childnode>
        <childnode refid="328962" relation="include">
        </childnode>
      </node>
      <node id="328963">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TriggerMatchingTool/TriggerMatchingTool/MatchingTool.h</label>
        <link refid="df/d10/MatchingTool_8h_source"/>
        <childnode refid="328964" relation="include">
        </childnode>
        <childnode refid="328965" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="d1/da9/structHLTNavDetails_1_1FillSize" prot="public">HLTNavDetails::FillSize</innerclass>
    <innerclass refid="d9/d08/classHLT_1_1TrigNavStructure" prot="public">HLT::TrigNavStructure</innerclass>
    <innernamespace refid="dd/d7f/namespaceHLTNavDetails">HLTNavDetails</innernamespace>
    <innernamespace refid="dc/d8d/namespaceHLT">HLT</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Dear<sp/>emacs,<sp/>this<sp/>is<sp/>-*-<sp/>c++<sp/>-*-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TRIGNAVSTRUCTURE_TRIGNAVSTRUCTURE_H</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TRIGNAVSTRUCTURE_TRIGNAVSTRUCTURE_H</highlight></codeline>
<codeline lineno="5"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigNavStructure/TriggerElement.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigNavStructure/TriggerElementFactory.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigNavStructure/BaseHolder.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigNavStructure/TrigHolderStructure.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">HLTNavDetails<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>RAII<sp/>trick<sp/>to<sp/>fill<sp/>sizes<sp/>at<sp/>the<sp/>exit<sp/>of<sp/>the<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>construction<sp/>the<sp/>extra<sp/>word<sp/>is<sp/>reserved<sp/>and<sp/>the<sp/>current<sp/>size<sp/>remembered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>destruction<sp/>the<sp/>current<sp/>size<sp/>is<sp/>filled<sp/>at<sp/>the<sp/>previously<sp/>reserved<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="d1/da9/structHLTNavDetails_1_1FillSize" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d1/da9/structHLTNavDetails_1_1FillSize" kindref="compound">FillSize</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint32_t&gt;&amp;<sp/>m_output;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>m_index;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/da9/structHLTNavDetails_1_1FillSize" kindref="compound">FillSize</ref>(std::vector&lt;uint32_t&gt;&amp;<sp/>o)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_output(o),<sp/>m_index(m_output.size())<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_output.push_back(0);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="d1/da9/structHLTNavDetails_1_1FillSize" kindref="compound">FillSize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_output[m_index]<sp/><sp/>=<sp/>m_output.size();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">HLT<sp/>{</highlight></codeline>
<codeline lineno="32" refid="d9/d08/classHLT_1_1TrigNavStructure" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d9/d08/classHLT_1_1TrigNavStructure" kindref="compound">TrigNavStructure</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="d9/d08/classHLT_1_1TrigNavStructure" kindref="compound">TrigNavStructure</ref>();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a23f79a5e2e5b4c5e5d0d5523d3465083" kindref="member" tooltip="resets all the navigation, goes to the factory and asks to withdraw all produced...">reset</ref>();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1ac0b79bae687efe8d3e4ec6939d68b65e" kindref="member" tooltip="gets initial node, if node is not there then it is created on fly">getInitialNode</ref>();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1ac0b79bae687efe8d3e4ec6939d68b65e" kindref="member" tooltip="gets initial node, if node is not there then it is created on fly">getInitialNode</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a7d9af1a3c226fb3aa776e1d71901b537" kindref="member" tooltip="gets RoI node (attached to initial)">addRoINode</ref>(<sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>initial<sp/>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerElement*&gt;&amp;<sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1ad3b3893fa11f9103e28a8a0d7f099b74" kindref="member" tooltip="gets all RoI type nodes seeding indirectly this TriggerElement">getRoINodes</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>somenode<sp/>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a75a745d3b075ae38e18c75eae3f566db" kindref="member" tooltip="adds nodes seeded form the one given as an argument,">addNode</ref>(<sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>seed,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a75a745d3b075ae38e18c75eae3f566db" kindref="member" tooltip="adds nodes seeded form the one given as an argument,">addNode</ref>(<sp/>std::vector&lt;TriggerElement*<sp/>&gt;&amp;<sp/>seeds,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ghost=</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>nofwd=</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerElement*&gt;&amp;<sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1ad9ef66b52d6a11e57887bf4b3525b61e" kindref="member" tooltip="returns list of direct predecessors (nodes seeding me)">getDirectPredecessors</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>te<sp/>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerElement*&gt;&amp;<sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1ade5ea71e8ff725583e5797398b514b33" kindref="member" tooltip="returns list of direct predecessors (nodes I seed)">getDirectSuccessors</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>te<sp/>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a667a5a985a39d0e214f07000da6d5e17" kindref="member" tooltip="returns successor of given type beeing seeded from this TE">getSuccessor</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>te,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a361e11326ab8f3751ede118edd058196" kindref="member" tooltip="queries if node is an initial one">isInitialNode</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>te<sp/>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1aead7239a8cd007da174eb0b813427bce" kindref="member" tooltip="queries if node is an RoI type one">isRoINode</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>te<sp/>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1adcc465668f62383dc2665eeb38dc7968" kindref="member" tooltip="queries if node is terminal (no more TriggerElement are seeded by it)">isTerminalNode</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>te<sp/>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1ad53aa4090286e454f093c8388a2bfb0a" kindref="member" tooltip="pretty printing of the navigational structure (heavy)">printASCIIArt</ref>(<sp/>std::string&amp;<sp/>str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>te<sp/>=<sp/>0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>0<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a5250b903e822670b8bfa72c8df2ffb15" kindref="member" tooltip="method serizlizes the navigation structure">serializeTEs</ref>(<sp/>std::vector&lt;uint32_t&gt;&amp;<sp/>output<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>deserializeTEs(<sp/>std::vector&lt;uint32_t&gt;::const_iterator&amp;<sp/>start,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>totalSize);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a63358d17ea66b12849ecf2564ae2c304" kindref="member" tooltip="method serizlizes entire navigation">serialize</ref>(<sp/>std::vector&lt;uint32_t&gt;&amp;)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>deserialize(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint32_t&gt;&amp;)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d62/classHLT_1_1TriggerElement_1_1FeatureAccessHelper" kindref="compound" tooltip="the FeatureAccessHelper is a class used to keep track of features attached to this...">TriggerElement::FeatureAccessHelper</ref><sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a39a7a11f23cb6aba63f0e47b63aedc23" kindref="member" tooltip="typeless feature access metod">getFeature</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>te,<sp/>class_id_type<sp/>clid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>index_or_label_type&amp;<sp/>index_or_label)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d62/classHLT_1_1TriggerElement_1_1FeatureAccessHelper" kindref="compound" tooltip="the FeatureAccessHelper is a class used to keep track of features attached to this...">TriggerElement::FeatureAccessHelper</ref><sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1ac0a01b892f2170773ba260d1aa990e34" kindref="member" tooltip="recursive search for features the function is similar to the above butif th features...">getFeatureRecursively</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>startTE,<sp/>class_id_type<sp/>clid,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>index_or_label_type&amp;<sp/>index_or_label,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*&amp;<sp/>sourceTE)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1aec41f8e98b6ee31924eafbfde0632424" kindref="member" tooltip="The query returns a vector of all TriggerElements that represent a LVL1 RoI threshold...">getAllRoIThresholdTEs</ref>(<sp/>std::vector&lt;<sp/>TriggerElement*<sp/>&gt;&amp;<sp/>output<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1afcabcd4847b6d6fabce69b6e4d8d836c" kindref="member" tooltip="The query returning a collection of all TriggerElements.">getAll</ref>(<sp/>std::vector&lt;<sp/>TriggerElement*<sp/>&gt;&amp;<sp/>output,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>activeOnly<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="d9/d08/classHLT_1_1TrigNavStructure_1ae650286918584005312f998f582a6cdd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;TriggerElement*&gt;&amp;<sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1ae650286918584005312f998f582a6cdd" kindref="member" tooltip="access needed by slimming tools.">getAllTEs</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a52a2a58ebbf13872559b534ee280f918" kindref="member" tooltip="factory of trigger elements">m_factory</ref>.listOfProduced();<sp/>}<sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a311c58edad4dbe23f12bec046283c82d" kindref="member" tooltip="The query returning a collection of all TriggerElements if name is given.">getAllOfType</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>te_id_type<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>std::vector&lt;<sp/>TriggerElement*<sp/>&gt;&amp;<sp/>output,<sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>activeOnly<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a8a6974de20b8dc486ffb64484dcb3ded" kindref="member" tooltip="The query counting a collection of all TriggerElement of a given type.">countAllOfType</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>te_id_type<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>activeOnly<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a778994c352935511fd177632cd6b6679" kindref="member" tooltip="does this 2 share RoI">haveCommonRoI</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>te1,<sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>te2<sp/>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a0c84441607c72a8040dbd9bf39ea75f3" kindref="member" tooltip="inversion of haveCommonRoI">haveDistinctRoI</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>te1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>te2<sp/>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveAllCommonRoIs<sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">HLT::TriggerElement</ref>*<sp/>te1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">HLT::TriggerElement</ref>*<sp/>te2<sp/>);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a03b8982034f27d2215d35f3f24d4eb24" kindref="member" tooltip="checks that there is any common predecessor of two TriggerElements">haveCommonSeed</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>te1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>te2<sp/>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1adb4367f028c31868015cf8889841dfbc" kindref="member">haveDistinctSeed</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>te1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>te2<sp/>);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1acb192f49358cf34be527342bdc3acaa3" kindref="member" tooltip="for sorting TriggerElements according to their id">increasingOrderByTEId</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>te1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>te2<sp/>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>decreasingOrderByTEId(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>te1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>te2<sp/>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a8a6bb7b8505736eb054b5f5639d48062" kindref="member">hasIdFromTheSet</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>te,<sp/>std::vector&lt;unsigned<sp/>int&gt;<sp/>ids<sp/>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="d9/d08/classHLT_1_1TrigNavStructure_1aa9dc5ca3156c52ea97de417e270ff030" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1aa9dc5ca3156c52ea97de417e270ff030" kindref="member">isNotActive</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>te<sp/>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!te-&gt;<ref refid="dd/db8/classHLT_1_1TriggerElement_1aa1014a6dcf9da0fd26301b9ee6d6bb7b" kindref="member" tooltip="get state of the TriggerElement">getActiveState</ref>();<sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isTopological(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>te)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1ad9ef66b52d6a11e57887bf4b3525b61e" kindref="member" tooltip="returns list of direct predecessors (nodes seeding me)">getDirectPredecessors</ref>(te).size()<sp/>&gt;<sp/>1<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a0a90add052e10055cd4ca644c54f214e" kindref="member" tooltip="check compatibility of 2 navigation structures">isCompatibleTree</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TriggerElement*<sp/>te1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TriggerElement*<sp/>te2<sp/>);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a4e25f0499260f4b71dddeee555db7ef9" kindref="member" tooltip="propagates deactivation of TE state This finction should be used after Trigger is...">propagateDeactivation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrigNavStructure*<sp/>nav);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a854128f34ec3cef89659dbc3ab847be1" kindref="member" tooltip="For Algorithms: return all the possible n-tuples of TE* objects (te0, te1..., ten)...">combine</ref>(std::vector&lt;unsigned<sp/>int&gt;&amp;<sp/>types,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::vector&lt;TriggerElement*&gt;<sp/>&gt;&amp;<sp/>output,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxResults<sp/>=<sp/>1000,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlyActive<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1aa285e2f31a46b26857356f3022752d32" kindref="member" tooltip="Check overlap between trigger elements (pointer equality or RoI overlap).">overlaps</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TriggerElement*<sp/>t1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TriggerElement*<sp/>t2)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1aa285e2f31a46b26857356f3022752d32" kindref="member" tooltip="Check overlap between trigger elements (pointer equality or RoI overlap).">overlaps</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TriggerElement*<sp/>t1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TriggerElement*&gt;&amp;<sp/>teVec)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a7ae7547c73e9ffad7870bc3e6d32ba89" kindref="member" tooltip="gets the TEs whose predecessors were used to built a given topological TE">getTopologicallySpannedBy</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TriggerElement*<sp/>te,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;unsigned<sp/>int&gt;&amp;<sp/>types,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;TriggerElement*&gt;&amp;<sp/>children,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>activeOnly<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a9fb1d4548091143938611eed17b5d278" kindref="member" tooltip="gets all features from the sourceTE and copies a reference (FeatureAccessHelper)...">copyAllFeatures</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TriggerElement*<sp/>sourceTE,<sp/>TriggerElement*<sp/>destTE);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BaseHolder*<sp/>getHolder(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TriggerElement::FeatureAccessHelper&amp;<sp/>fea)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>sub_index_type<sp/>subType(class_id_type<sp/>clid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>index_or_label_type&amp;<sp/>sti_or_label)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>label(class_id_type<sp/>clid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>index_or_label_type&amp;<sp/>sti_or_label)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>getFeatureAccessors(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TriggerElement*<sp/>te,<sp/>class_id_type<sp/>clid,</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>index_or_label_type&amp;<sp/>index_or_label,</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>only_single_feature,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TriggerElement::FeatureVec&amp;<sp/>features,<sp/></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>with_cache_recording,</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>travel_backward_recursively,</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TriggerElement*&amp;<sp/>source<sp/>=<sp/>m_unspecifiedTE,<sp/></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string&amp;<sp/>sourcelabel<sp/><sp/>=<sp/>m_unspecifiedLabel)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>getFeatureAccessorsSingleTE(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TriggerElement*<sp/>te,<sp/>class_id_type<sp/>clid,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>index_or_label_type&amp;<sp/>index_or_label,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>only_single_feature,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TriggerElement::FeatureVec&amp;<sp/>features,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>with_cache_recording,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TriggerElement*&amp;<sp/>source,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string&amp;<sp/>sourcelabel<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//method<sp/>to<sp/>see<sp/>if<sp/>feature<sp/>matches<sp/>by<sp/>clid<sp/>and<sp/>either<sp/>index<sp/>or<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>matchFeature(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TriggerElement::FeatureAccessHelper&amp;<sp/>fea,<sp/>class_id_type<sp/>clid,<sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>index_or_label_type&amp;<sp/>index_or_label)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a7f1d70a41ff519b61641c11af8cca069" kindref="member" tooltip="rebuilds the sameRoIRelation between trigger elements (used internally by deserialize)...">fillSameRoIRelation</ref><sp/>(<sp/>TriggerElement*<sp/>roi,<sp/>TriggerElement*<sp/>te<sp/>);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a4513556ade1b9ea77fec6509329266ff" kindref="member" tooltip="Helper method for &amp;quot;combine&amp;quot;: add one &amp;quot;level&amp;quot; of multiplicity...">addOneLevel</ref>(std::vector&lt;<sp/>std::vector&lt;TriggerElement*&gt;<sp/>&gt;&amp;<sp/>currentCombs,</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::vector&lt;std::pair&lt;unsigned<sp/>int,<sp/>unsigned<sp/>int&gt;<sp/>&gt;<sp/>&gt;&amp;<sp/>currentIdxs,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::vector&lt;TriggerElement*&gt;<sp/>&gt;&amp;<sp/>newCombs,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::vector&lt;std::pair&lt;unsigned<sp/>int,<sp/>unsigned<sp/>int&gt;<sp/>&gt;<sp/>&gt;&amp;<sp/>newIdxs,</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxResults<sp/>=<sp/>1000,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlyActive<sp/>=<sp/>1);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359" refid="d9/d08/classHLT_1_1TrigNavStructure_1a52a2a58ebbf13872559b534ee280f918" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/de9/classHLT_1_1TriggerElementFactory" kindref="compound" tooltip="The factory of TriggerElements Creation in controlled way.">TriggerElementFactory</ref><sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a52a2a58ebbf13872559b534ee280f918" kindref="member" tooltip="factory of trigger elements">m_factory</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="360" refid="d9/d08/classHLT_1_1TrigNavStructure_1ad5b7156154b1a4272cf7e9e4c3b174a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d94/classHLT_1_1TrigHolderStructure" kindref="compound">TrigHolderStructure</ref><sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure_1ad5b7156154b1a4272cf7e9e4c3b174a2" kindref="member" tooltip="structure for feature holders">m_holderstorage</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>m_unspecifiedTE;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>m_unspecifiedLabel;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="366"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>HLT<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>TRIGNAVSTRUCTURE_TRIGNAVSTRUCTURE_H</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/TrigNavStructure.h"/>
  </compounddef>
</doxygen>
