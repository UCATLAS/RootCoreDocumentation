<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d2/dda/classHLT_1_1ComboIterator" kind="class" prot="public">
    <compoundname>HLT::ComboIterator</compoundname>
    <basecompoundref refid="db/d54/classHLT_1_1ComboIteratorBase" prot="public" virt="non-virtual">HLT::ComboIteratorBase</basecompoundref>
    <derivedcompoundref refid="d7/d6b/classHLT_1_1ComboIteratorTopo" prot="public" virt="non-virtual">HLT::ComboIteratorTopo</derivedcompoundref>
    <includes refid="da/da2/ComboIterator_8h" local="no">ComboIterator.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="d2/dda/classHLT_1_1ComboIterator_1a9c8396341e7d44e25404ae5dbbfcae82" prot="protected" static="no" mutable="no">
        <type>TEVec</type>
        <definition>TEVec HLT::ComboIterator::m_comb</definition>
        <argsstring></argsstring>
        <name>m_comb</name>
        <briefdescription>
<para>Current combination of TEs. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/ComboIterator.h" line="136" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/ComboIterator.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/dda/classHLT_1_1ComboIterator_1a9efcd90bb2540bdc9eb8bd70d947f4e0" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; HLT::ComboIterator::m_idx</definition>
        <argsstring></argsstring>
        <name>m_idx</name>
        <briefdescription>
<para>Vector of indexes keeping track of the loop over combinations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/ComboIterator.h" line="139" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/ComboIterator.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/dda/classHLT_1_1ComboIterator_1a053975c028b54ba313342d86f983c25e" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; TEVec &gt;</type>
        <definition>std::vector&lt;TEVec&gt; HLT::ComboIterator::m_tes</definition>
        <argsstring></argsstring>
        <name>m_tes</name>
        <briefdescription>
<para>Vector of vectors of TEs to be combined. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/ComboIterator.h" line="142" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/ComboIterator.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/dda/classHLT_1_1ComboIterator_1a51abe5a618e777730467111df583aaca" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool HLT::ComboIterator::m_valid</definition>
        <argsstring></argsstring>
        <name>m_valid</name>
        <briefdescription>
<para>Validity status variable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/ComboIterator.h" line="145" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/ComboIterator.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/dda/classHLT_1_1ComboIterator_1a25954d8f882f37ac7a1e7b87fbe25a14" prot="protected" static="no" mutable="no">
        <type>const <ref refid="d9/d08/classHLT_1_1TrigNavStructure" kindref="compound">TrigNavStructure</ref> *</type>
        <definition>const TrigNavStructure* HLT::ComboIterator::m_nav</definition>
        <argsstring></argsstring>
        <name>m_nav</name>
        <briefdescription>
<para>Pointer to the navigation service. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/ComboIterator.h" line="148" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/ComboIterator.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d2/dda/classHLT_1_1ComboIterator_1a591c41d2ef2abdf62d256e12c0530d0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HLT::ComboIterator::ComboIterator</definition>
        <argsstring>(const std::vector&lt; TEVec &gt; &amp;tes, const TrigNavStructure *nav)</argsstring>
        <name>ComboIterator</name>
        <param>
          <type>const std::vector&lt; TEVec &gt; &amp;</type>
          <declname>tes</declname>
        </param>
        <param>
          <type>const <ref refid="d9/d08/classHLT_1_1TrigNavStructure" kindref="compound">TrigNavStructure</ref> *</type>
          <declname>nav</declname>
        </param>
        <briefdescription>
<para>Constructor; gets a vector of TE vectors and a pointer to Navigation as arguments. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tes</parametername>
</parameternamelist>
<parameterdescription>
<para>vector of subvectors of TEs, one for each input type. Each subvector is the list of all TEs of a given type in the event. The same type may appear multiple times in the case of identical input particle types. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nav</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the navigation service. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/ComboIterator.h" line="80" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/Root/ComboIterator.cxx" bodystart="11" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="d2/dda/classHLT_1_1ComboIterator_1a976b57f9bbd8b8beef38cdd79302a07f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool HLT::ComboIterator::rewind</definition>
        <argsstring>()</argsstring>
        <name>rewind</name>
        <reimplements refid="db/d54/classHLT_1_1ComboIteratorBase_1a4c9a951e5b3c51ce5a5d7723cd53699c">rewind</reimplements>
        <briefdescription>
<para>Rewind method, resetting the iterator to the first element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/ComboIterator.h" line="83" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/Root/ComboIterator.cxx" bodystart="23" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="d2/dda/classHLT_1_1ComboIterator_1ac2542fe05f83c7f88a084c43b3aeae6c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>TEVec &amp;</type>
        <definition>TEVec&amp; HLT::ComboIterator::operator*</definition>
        <argsstring>()</argsstring>
        <name>operator*</name>
        <reimplements refid="db/d54/classHLT_1_1ComboIteratorBase_1a95df050d33420c39c3c5c5f6895290f3">operator*</reimplements>
        <briefdescription>
<para>Unary * operator, used to recover the current combination. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/ComboIterator.h" line="86" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/ComboIterator.h" bodystart="86" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="d2/dda/classHLT_1_1ComboIterator_1a3c04bcd05974e826201233ce7363b82d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool HLT::ComboIterator::isValid</definition>
        <argsstring>() const </argsstring>
        <name>isValid</name>
        <reimplements refid="db/d54/classHLT_1_1ComboIteratorBase_1a51847d075d40b0fb69e397ac3949f1d3">isValid</reimplements>
        <briefdescription>
<para>Validity check for the iterator. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>result of the validity check; returns false if iterator is at end, true otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/ComboIterator.h" line="91" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/ComboIterator.h" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="d2/dda/classHLT_1_1ComboIterator_1a4acb180b01a1cac8b60935f2df42615e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>TEVec &amp;</type>
        <definition>TEVec&amp; HLT::ComboIterator::combination</definition>
        <argsstring>()</argsstring>
        <name>combination</name>
        <reimplements refid="db/d54/classHLT_1_1ComboIteratorBase_1a4abdb9b0ceac911d9e67c1ee82df8d7e">combination</reimplements>
        <briefdescription>
<para>Accessor method for the current combination. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/ComboIterator.h" line="94" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/ComboIterator.h" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="d2/dda/classHLT_1_1ComboIterator_1aeff518b8165b77701455d13d4262b556" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="d2/dda/classHLT_1_1ComboIterator" kindref="compound">ComboIterator</ref> &amp;</type>
        <definition>ComboIterator&amp; HLT::ComboIterator::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <reimplements refid="db/d54/classHLT_1_1ComboIteratorBase_1a0bc70cfd80fb10239b05e5c10976aac0">operator++</reimplements>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>Post increment operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/ComboIterator.h" line="97" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/ComboIterator.h" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="d2/dda/classHLT_1_1ComboIterator_1aae309bb41ead2c8fa6a6345dbbc39d07" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d2/dda/classHLT_1_1ComboIterator" kindref="compound">ComboIterator</ref> &amp;</type>
        <definition>HLT::ComboIterator &amp; HLT::ComboIterator::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <reimplements refid="db/d54/classHLT_1_1ComboIteratorBase_1a618155bc2f11561b96cd487a70fa0301">operator++</reimplements>
        <briefdescription>
<para>Pre increment operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/ComboIterator.h" line="100" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/Root/ComboIterator.cxx" bodystart="54" bodyend="62"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="d2/dda/classHLT_1_1ComboIterator_1aa2f3778cbbba906894755a8069550808" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool HLT::ComboIterator::overlaps</definition>
        <argsstring>(const TriggerElement *t1, const TriggerElement *t2) const </argsstring>
        <name>overlaps</name>
        <reimplementedby refid="d7/d6b/classHLT_1_1ComboIteratorTopo_1ad7054ae4ce4615822f08ed16099c7611">overlaps</reimplementedby>
        <param>
          <type>const <ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound">TriggerElement</ref> *</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>const <ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound">TriggerElement</ref> *</type>
          <declname>t2</declname>
        </param>
        <briefdescription>
<para>Method used to test overlaps between two TEs. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>result of the overlap test; returns true if the two TEs correspond to the same RoI, false otherwise. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t1</parametername>
</parameternamelist>
<parameterdescription>
<para>first TE to check. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t2</parametername>
</parameternamelist>
<parameterdescription>
<para>second TE to check. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/ComboIterator.h" line="109" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/Root/ComboIterator.cxx" bodystart="156" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="d2/dda/classHLT_1_1ComboIterator_1ac4667d44d15ae9cec21220f7ec118218" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool HLT::ComboIterator::overlaps</definition>
        <argsstring>(const TriggerElement *t1, const TEVec &amp;teVec, int idx=-1) const </argsstring>
        <name>overlaps</name>
        <param>
          <type>const <ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound">TriggerElement</ref> *</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>const TEVec &amp;</type>
          <declname>teVec</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Method used to test overlaps between a TE and a vector of TEs. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>result of the overlap test; returns true if the TE corresponds to the same RoI as one of the TEs in the vector, false otherwise. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t1</parametername>
</parameternamelist>
<parameterdescription>
<para>TE to check. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>teVec</parametername>
</parameternamelist>
<parameterdescription>
<para>TE vector to check. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>optional integer parameter, limiting the check over the 0..idx-1 range of the vector. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/ComboIterator.h" line="118" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/Root/ComboIterator.cxx" bodystart="142" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="d2/dda/classHLT_1_1ComboIterator_1a51ebb8ab86f9d5c757a2442f665c1f36" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool HLT::ComboIterator::incrementByOne</definition>
        <argsstring>(int pos, bool &amp;ok)</argsstring>
        <name>incrementByOne</name>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>ok</declname>
        </param>
        <briefdescription>
<para>Private increment method. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/ComboIterator.h" line="121" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/Root/ComboIterator.cxx" bodystart="76" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="d2/dda/classHLT_1_1ComboIterator_1aff78336b9be49a70d8f101bcb28d1dbf" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool HLT::ComboIterator::increment</definition>
        <argsstring>(int pos)</argsstring>
        <name>increment</name>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Private increment method. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/ComboIterator.h" line="124" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/Root/ComboIterator.cxx" bodystart="65" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="d2/dda/classHLT_1_1ComboIterator_1a4711ff7d9a43328a6127ecea214f21b9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool HLT::ComboIterator::reset</definition>
        <argsstring>(int pos)</argsstring>
        <name>reset</name>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Private reset method. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/ComboIterator.h" line="127" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/Root/ComboIterator.cxx" bodystart="113" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="d2/dda/classHLT_1_1ComboIterator_1a34e6771e79433cabb5d59e839e81050e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HLT::ComboIterator::invalidate</definition>
        <argsstring>()</argsstring>
        <name>invalidate</name>
        <briefdescription>
<para>Method used to invalidate the current combination. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/ComboIterator.h" line="130" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/Root/ComboIterator.cxx" bodystart="185" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="d2/dda/classHLT_1_1ComboIterator_1aa6a13afc691e7a6dd429271834cec122" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HLT::ComboIterator::print</definition>
        <argsstring>() const </argsstring>
        <name>print</name>
        <briefdescription>
<para>Debug dump to std::cout. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/ComboIterator.h" line="133" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/Root/ComboIterator.cxx" bodystart="166" bodyend="182"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Iterator used to loop over multi-particle combinations. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Nicolas Berger &lt;<ulink url="mailto:Nicolas.Berger@cern.ch">Nicolas.Berger@cern.ch</ulink>&gt; - CERN</para></simplesect>
This iterator class is used by <ref refid="dc/d8d/namespaceHLT" kindref="compound">HLT</ref> algorithms to iterate over multi-particle combinations. Given a set of TEs, passed in the constructor, the iterator can be used to move over all the possible combinations of TEs. These combinations are built taking one TE from each of the vector of TEs passed in the constructor. So, as an example, to build all possible couples of TEs of the same type, the starting point will be a vector containing twice the same vector of TEs. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="3965">
        <label>HLT::ComboIteratorTopo</label>
        <link refid="d7/d6b/classHLT_1_1ComboIteratorTopo"/>
        <childnode refid="3963" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3964">
        <label>HLT::ComboIteratorBase</label>
        <link refid="db/d54/classHLT_1_1ComboIteratorBase"/>
      </node>
      <node id="3963">
        <label>HLT::ComboIterator</label>
        <link refid="d2/dda/classHLT_1_1ComboIterator"/>
        <childnode refid="3964" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3972">
        <label>asg::AsgMessaging</label>
        <link refid="d1/d97/classasg_1_1AsgMessaging"/>
      </node>
      <node id="3971">
        <label>HLT::TrigHolderStructure</label>
        <link refid="da/d94/classHLT_1_1TrigHolderStructure"/>
        <childnode refid="3972" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3967">
        <label>HLT::ComboIteratorBase</label>
        <link refid="db/d54/classHLT_1_1ComboIteratorBase"/>
      </node>
      <node id="3970">
        <label>HLT::TriggerElementFactory</label>
        <link refid="d2/de9/classHLT_1_1TriggerElementFactory"/>
      </node>
      <node id="3969">
        <label>HLT::TriggerElement</label>
        <link refid="dd/db8/classHLT_1_1TriggerElement"/>
      </node>
      <node id="3968">
        <label>HLT::TrigNavStructure</label>
        <link refid="d9/d08/classHLT_1_1TrigNavStructure"/>
        <childnode refid="3969" relation="usage">
          <edgelabel>m_unspecifiedTE</edgelabel>
        </childnode>
        <childnode refid="3970" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="3971" relation="usage">
          <edgelabel>m_holderstorage</edgelabel>
        </childnode>
      </node>
      <node id="3966">
        <label>HLT::ComboIterator</label>
        <link refid="d2/dda/classHLT_1_1ComboIterator"/>
        <childnode refid="3967" relation="public-inheritance">
        </childnode>
        <childnode refid="3968" relation="usage">
          <edgelabel>m_nav</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/ComboIterator.h" line="70" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/ComboIterator.h" bodystart="70" bodyend="149"/>
    <listofallmembers>
      <member refid="d2/dda/classHLT_1_1ComboIterator_1a4acb180b01a1cac8b60935f2df42615e" prot="public" virt="virtual"><scope>HLT::ComboIterator</scope><name>combination</name></member>
      <member refid="d2/dda/classHLT_1_1ComboIterator_1a591c41d2ef2abdf62d256e12c0530d0d" prot="public" virt="non-virtual"><scope>HLT::ComboIterator</scope><name>ComboIterator</name></member>
      <member refid="db/d54/classHLT_1_1ComboIteratorBase_1ab11b0d98a8e123b209d9049a772f4368" prot="public" virt="non-virtual"><scope>HLT::ComboIterator</scope><name>ComboIteratorBase</name></member>
      <member refid="d2/dda/classHLT_1_1ComboIterator_1aff78336b9be49a70d8f101bcb28d1dbf" prot="protected" virt="non-virtual"><scope>HLT::ComboIterator</scope><name>increment</name></member>
      <member refid="d2/dda/classHLT_1_1ComboIterator_1a51ebb8ab86f9d5c757a2442f665c1f36" prot="protected" virt="non-virtual"><scope>HLT::ComboIterator</scope><name>incrementByOne</name></member>
      <member refid="d2/dda/classHLT_1_1ComboIterator_1a34e6771e79433cabb5d59e839e81050e" prot="protected" virt="non-virtual"><scope>HLT::ComboIterator</scope><name>invalidate</name></member>
      <member refid="d2/dda/classHLT_1_1ComboIterator_1a3c04bcd05974e826201233ce7363b82d" prot="public" virt="virtual"><scope>HLT::ComboIterator</scope><name>isValid</name></member>
      <member refid="d2/dda/classHLT_1_1ComboIterator_1a9c8396341e7d44e25404ae5dbbfcae82" prot="protected" virt="non-virtual"><scope>HLT::ComboIterator</scope><name>m_comb</name></member>
      <member refid="d2/dda/classHLT_1_1ComboIterator_1a9efcd90bb2540bdc9eb8bd70d947f4e0" prot="protected" virt="non-virtual"><scope>HLT::ComboIterator</scope><name>m_idx</name></member>
      <member refid="d2/dda/classHLT_1_1ComboIterator_1a25954d8f882f37ac7a1e7b87fbe25a14" prot="protected" virt="non-virtual"><scope>HLT::ComboIterator</scope><name>m_nav</name></member>
      <member refid="d2/dda/classHLT_1_1ComboIterator_1a053975c028b54ba313342d86f983c25e" prot="protected" virt="non-virtual"><scope>HLT::ComboIterator</scope><name>m_tes</name></member>
      <member refid="d2/dda/classHLT_1_1ComboIterator_1a51abe5a618e777730467111df583aaca" prot="protected" virt="non-virtual"><scope>HLT::ComboIterator</scope><name>m_valid</name></member>
      <member refid="d2/dda/classHLT_1_1ComboIterator_1ac2542fe05f83c7f88a084c43b3aeae6c" prot="public" virt="virtual"><scope>HLT::ComboIterator</scope><name>operator*</name></member>
      <member refid="d2/dda/classHLT_1_1ComboIterator_1aeff518b8165b77701455d13d4262b556" prot="public" virt="virtual"><scope>HLT::ComboIterator</scope><name>operator++</name></member>
      <member refid="d2/dda/classHLT_1_1ComboIterator_1aae309bb41ead2c8fa6a6345dbbc39d07" prot="public" virt="virtual"><scope>HLT::ComboIterator</scope><name>operator++</name></member>
      <member refid="d2/dda/classHLT_1_1ComboIterator_1aa2f3778cbbba906894755a8069550808" prot="protected" virt="virtual"><scope>HLT::ComboIterator</scope><name>overlaps</name></member>
      <member refid="d2/dda/classHLT_1_1ComboIterator_1ac4667d44d15ae9cec21220f7ec118218" prot="protected" virt="non-virtual"><scope>HLT::ComboIterator</scope><name>overlaps</name></member>
      <member refid="d2/dda/classHLT_1_1ComboIterator_1aa6a13afc691e7a6dd429271834cec122" prot="protected" virt="non-virtual"><scope>HLT::ComboIterator</scope><name>print</name></member>
      <member refid="d2/dda/classHLT_1_1ComboIterator_1a4711ff7d9a43328a6127ecea214f21b9" prot="protected" virt="non-virtual"><scope>HLT::ComboIterator</scope><name>reset</name></member>
      <member refid="d2/dda/classHLT_1_1ComboIterator_1a976b57f9bbd8b8beef38cdd79302a07f" prot="public" virt="virtual"><scope>HLT::ComboIterator</scope><name>rewind</name></member>
      <member refid="db/d54/classHLT_1_1ComboIteratorBase_1a2fd908ebdd135f475a087ac3b187e25f" prot="public" virt="virtual"><scope>HLT::ComboIterator</scope><name>~ComboIteratorBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
