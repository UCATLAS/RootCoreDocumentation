<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d2/dcc/APReweightND_8cxx" kind="file">
    <compoundname>APReweightND.cxx</compoundname>
    <includes refid="dd/d0f/APReweightND_8h" local="yes">ReweightUtils/APReweightND.h</includes>
    <includes refid="d5/d5c/APWeightEntry_8h" local="yes">ReweightUtils/APWeightEntry.h</includes>
    <includes refid="de/df3/MathTools_8h" local="yes">ReweightUtils/MathTools.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">cstdlib</includes>
    <includes local="yes">TTree.h</includes>
    <includes local="yes">THnSparse.h</includes>
    <includes local="yes">TAxis.h</includes>
    <incdepgraph>
      <node id="261639">
        <label>THnSparse.h</label>
      </node>
      <node id="261640">
        <label>TAxis.h</label>
      </node>
      <node id="261629">
        <label>APReweightBase.h</label>
        <link refid="d3/d99/APReweightBase_8h_source"/>
        <childnode refid="261630" relation="include">
        </childnode>
      </node>
      <node id="261633">
        <label>ReweightUtils/APWeightEntry.h</label>
        <link refid="d5/d5c/APWeightEntry_8h_source"/>
        <childnode refid="261634" relation="include">
        </childnode>
      </node>
      <node id="261632">
        <label>map</label>
      </node>
      <node id="261627">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/ReweightUtils/Root/APReweightND.cxx</label>
        <link refid="APReweightND.cxx"/>
        <childnode refid="261628" relation="include">
        </childnode>
        <childnode refid="261633" relation="include">
        </childnode>
        <childnode refid="261635" relation="include">
        </childnode>
        <childnode refid="261636" relation="include">
        </childnode>
        <childnode refid="261637" relation="include">
        </childnode>
        <childnode refid="261638" relation="include">
        </childnode>
        <childnode refid="261639" relation="include">
        </childnode>
        <childnode refid="261640" relation="include">
        </childnode>
      </node>
      <node id="261631">
        <label>vector</label>
      </node>
      <node id="261628">
        <label>ReweightUtils/APReweightND.h</label>
        <link refid="dd/d0f/APReweightND_8h_source"/>
        <childnode refid="261629" relation="include">
        </childnode>
        <childnode refid="261631" relation="include">
        </childnode>
        <childnode refid="261632" relation="include">
        </childnode>
      </node>
      <node id="261634">
        <label>Rtypes.h</label>
      </node>
      <node id="261637">
        <label>cstdlib</label>
      </node>
      <node id="261636">
        <label>iostream</label>
      </node>
      <node id="261630">
        <label>TNamed.h</label>
      </node>
      <node id="261638">
        <label>TTree.h</label>
      </node>
      <node id="261635">
        <label>ReweightUtils/MathTools.h</label>
        <link refid="de/df3/MathTools_8h_source"/>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="d2/dcc/APReweightND_8cxx_1a4ab310fec2157e093f1f3a0ab209a97b" prot="public" static="no">
        <name>APReweightND_cxx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/ReweightUtils/Root/APReweightND.cxx" line="1" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/ReweightUtils/Root/APReweightND.cxx" bodystart="1" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#define<sp/>APReweightND_cxx</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;ReweightUtils/APReweightND.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ReweightUtils/APWeightEntry.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ReweightUtils/MathTools.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TTree.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;THnSparse.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TAxis.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><ref refid="d9/dc5/classAPReweightND_1a8559624f7097cc63c2eaec5cf6888d04" kindref="member">APReweightND::APReweightND</ref>()</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="d5/d8d/classAPReweightBase" kindref="compound">APReweightBase</ref>(),</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>_n_dim(0),</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>_denominator_hist(0),</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>_numerator_hist(0)</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>_isQuiet<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><ref refid="d9/dc5/classAPReweightND_1a8559624f7097cc63c2eaec5cf6888d04" kindref="member">APReweightND::APReweightND</ref>(THnSparse*<sp/>denominator_in,<sp/>THnSparse*<sp/>numerator_in,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isTrig)<sp/>:<sp/><ref refid="d5/d8d/classAPReweightBase" kindref="compound">APReweightBase</ref>()<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>_empty_weight<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d1/d16/classAPWeightEntry" kindref="compound">APWeightEntry</ref>(0,0,1.);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>_denominator_hist<sp/>=<sp/>(THnSparse*)denominator_in-&gt;Clone(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>_numerator_hist<sp/>=<sp/>(THnSparse*)numerator_in-&gt;Clone(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>_n_dim<sp/>=<sp/>_denominator_hist-&gt;GetNdimensions();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>_n_dim;<sp/>++i)<sp/>_axes.push_back(<sp/>(TAxis*)_denominator_hist-&gt;GetAxis(i)-&gt;Clone(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>_scale<sp/>=<sp/>(double)denominator_in-&gt;GetEntries()<sp/>/<sp/>(double)numerator_in-&gt;GetEntries();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>_isTrig<sp/>=<sp/>isTrig;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>_isQuiet<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>_syst_uncert_global<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>_isTrig<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>coords(_n_dim);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>_n_dim;<sp/>++i<sp/>)<sp/>coords[i]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>checkComplete<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>_numerator_hist-&gt;GetBinContent(coords.data())<sp/>&gt;<sp/>_denominator_hist-&gt;GetBinContent(coords.data())<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;WARNING<sp/>in<sp/>APReweightND::~APReweightND(THnSparse*<sp/>denominator_in,<sp/>THnSparse*<sp/>numerator_in,<sp/>bool<sp/>isTrig)<sp/>:<sp/>Using<sp/>histograms<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>_numerator_hist-&gt;GetName()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>_denominator_hist-&gt;GetName()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>the<sp/>efficiency<sp/>is<sp/>larger<sp/>than<sp/>1<sp/>for<sp/>coordinates<sp/>[<sp/>&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>_n_dim;<sp/>++j<sp/>)<sp/>{<sp/>std::cout<sp/>&lt;&lt;<sp/>coords[j]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;<sp/>}<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>]!<sp/>This<sp/>is<sp/>inconsisten<sp/>and<sp/>can<sp/>lead<sp/>to<sp/>unwanted<sp/>behaviour<sp/>(weights<sp/>&gt;<sp/>1,<sp/>variance<sp/>&lt;<sp/>0<sp/>)!<sp/>Please<sp/>check<sp/>your<sp/>input<sp/>histograms!<sp/>In<sp/>order<sp/>to<sp/>avoid<sp/>negative<sp/>variances,<sp/>the<sp/>efficiency<sp/>in<sp/>this<sp/>bin<sp/>will<sp/>be<sp/>set<sp/>to<sp/>0.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_numerator_hist-&gt;SetBinContent(coords.data(),<sp/>0);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>checkComplete<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>_n_dim;<sp/>++j<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>coords[j]<sp/>!=<sp/>_numerator_hist-&gt;GetAxis(j)-&gt;GetNbins()<sp/>)<sp/>checkComplete<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>checkComplete<sp/>)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>completeDimension<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>_n_dim;<sp/>++j<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>coords[j]<sp/>==<sp/>_numerator_hist-&gt;GetAxis(j)-&gt;GetNbins()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isComplete<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)j-1;<sp/>k<sp/>&gt;=<sp/>0;<sp/>--k<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>coords[k]<sp/>!=<sp/>_numerator_hist-&gt;GetAxis(k)-&gt;GetNbins()<sp/>)<sp/>isComplete<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>isComplete<sp/>)<sp/>completeDimension<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>completeDimension<sp/>!=<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;=<sp/>completeDimension;<sp/>++j<sp/>)<sp/>coords[j]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coords[completeDimension+1]<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coords[0]<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/dc5/classAPReweightND_1aaf2f20f7beafecbe14782a084d7ecbd3" kindref="member">APReweightND::ReadEfficiency</ref>(THnSparse*<sp/>efficiency_in,<sp/>THnSparse*<sp/>err_low_in,<sp/>THnSparse*<sp/>err_high_in)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err_high_in<sp/>==<sp/>0)<sp/>err_high_in<sp/>=<sp/>err_low_in;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><ref refid="d5/d8d/classAPReweightBase_1ad15d436b3818e80a88cd9dd7ddbac6c8" kindref="member">_empty_weight</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d1/d16/classAPWeightEntry" kindref="compound">APWeightEntry</ref>(0,0,1.);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>_denominator_hist<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>THnSparseD();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>_numerator_hist<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>THnSparseD();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>_n_dim<sp/>=<sp/>efficiency_in-&gt;GetNdimensions();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>_n_dim;<sp/>++i)<sp/>_axes.push_back(<sp/>(TAxis*)efficiency_in-&gt;GetAxis(i)-&gt;Clone(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><ref refid="d5/d8d/classAPReweightBase_1a33b2bc5e6e743b11af4a79c15d024a40" kindref="member">_scale</ref><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="d5/d8d/classAPReweightBase_1aaa9eeec4436a6d116d26ee3987cf0fc8" kindref="member">_isTrig</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><ref refid="d5/d8d/classAPReweightBase_1a25eebdd0c6c79c4a8a9d54f834fc64b9" kindref="member">_syst_uncert_global</ref><sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>vector&lt;int&gt;<sp/>temp_vec_axes(_n_dim,0);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>_n_dim;<sp/>++j)<sp/>temp_vec_axes[j]<sp/>=<sp/>efficiency_in-&gt;GetAxis(j)-&gt;GetNbins();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>I<sp/>=<sp/>efficiency_in-&gt;GetNbins();<sp/>i<sp/>&lt;<sp/>I;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>coords<sp/>(_n_dim);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>efficiency<sp/>=<sp/>efficiency_in-&gt;GetBinContent(<sp/>i,coords.data()<sp/>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d16/classAPWeightEntry" kindref="compound">APWeightEntry</ref><sp/>*temp_entry<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d1/d16/classAPWeightEntry" kindref="compound">APWeightEntry</ref>();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>temp_entry-&gt;<ref refid="d1/d16/classAPWeightEntry_1a263117cc573f120b9833f3dc2fa87a0c" kindref="member">ReadEfficiency</ref>(efficiency,err_low_in-&gt;GetBinContent(err_low_in-&gt;GetBin(coords.data())),err_high_in-&gt;GetBinContent(err_high_in-&gt;GetBin(coords.data())));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>temp_entry-&gt;SetCoordinates(coords,temp_vec_axes);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>temp_entry-&gt;<ref refid="d1/d16/classAPWeightEntry_1a14f659558878599eb4711c1f77ad271e" kindref="member">SetID</ref>(<ref refid="d5/d8d/classAPReweightBase_1a3257ca3dca895cb399a11226a5edb508" kindref="member">_ID</ref>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>_weights[coords]<sp/>=<sp/>temp_entry;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><ref refid="d9/dc5/classAPReweightND_1a79d420fe472ee1c913837149e33bd2b6" kindref="member">APReweightND::~APReweightND</ref>()<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>_denominator_hist;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>_numerator_hist;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="d5/d8d/classAPReweightBase_1ad15d436b3818e80a88cd9dd7ddbac6c8" kindref="member">_empty_weight</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(vector&lt;TAxis*&gt;::reverse_iterator<sp/>it=_axes.rbegin();<sp/>it<sp/>!=<sp/>_axes.rend();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>*it;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(map&lt;<sp/>vector&lt;int&gt;,<sp/><ref refid="d1/d16/classAPWeightEntry" kindref="compound">APWeightEntry</ref>*<sp/>&gt;::reverse_iterator<sp/>it=_weights.rbegin();<sp/>it<sp/>!=<sp/>_weights.rend();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>_weights.clear();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>_axes.clear();</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><ref refid="d1/d16/classAPWeightEntry" kindref="compound">APWeightEntry</ref>*<sp/><ref refid="d9/dc5/classAPReweightND_1a513e055f3e6495f4e59380f8ed913581" kindref="member">APReweightND::GetBinWeight</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bin[])<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>vector&lt;int&gt;<sp/>temp_vec(&amp;bin[0],&amp;bin[_n_dim]);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>map&lt;<sp/>vector&lt;int&gt;<sp/>,<sp/><ref refid="d1/d16/classAPWeightEntry" kindref="compound">APWeightEntry</ref>*<sp/>&gt;::iterator<sp/>temp_it<sp/>=<sp/>_weights.find(temp_vec);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>temp_it<sp/>==<sp/>_weights.end()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d16/classAPWeightEntry" kindref="compound">APWeightEntry</ref>*<sp/>temp_weight<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d1/d16/classAPWeightEntry" kindref="compound">APWeightEntry</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)_denominator_hist-&gt;GetBinContent(_denominator_hist-&gt;GetBin(bin)),(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)_numerator_hist-&gt;GetBinContent(_numerator_hist-&gt;GetBin(bin)),<ref refid="d5/d8d/classAPReweightBase_1a33b2bc5e6e743b11af4a79c15d024a40" kindref="member">_scale</ref>,<sp/><ref refid="d5/d8d/classAPReweightBase_1aaa9eeec4436a6d116d26ee3987cf0fc8" kindref="member">_isTrig</ref>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;int&gt;<sp/>temp_vec_axes(_n_dim,0);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>_n_dim;<sp/>++i)<sp/>temp_vec_axes[i]<sp/>=<sp/>_denominator_hist-&gt;GetAxis(i)-&gt;GetNbins();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>temp_weight-&gt;SetCoordinates(temp_vec,temp_vec_axes);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>temp_weight-&gt;<ref refid="d1/d16/classAPWeightEntry_1ada0f0515884c4262406a13c558bef135" kindref="member">SetSystUncert</ref>(<ref refid="d5/d8d/classAPReweightBase_1a25eebdd0c6c79c4a8a9d54f834fc64b9" kindref="member">_syst_uncert_global</ref>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>temp_weight-&gt;<ref refid="d1/d16/classAPWeightEntry_1a14f659558878599eb4711c1f77ad271e" kindref="member">SetID</ref>(<ref refid="d5/d8d/classAPReweightBase_1a3257ca3dca895cb399a11226a5edb508" kindref="member">_ID</ref>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_weights[temp_vec]<sp/>=<sp/>temp_weight;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp_weight;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*temp_it).second;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><ref refid="d1/d16/classAPWeightEntry" kindref="compound">APWeightEntry</ref>*<sp/><ref refid="d9/dc5/classAPReweightND_1acffa64bae6d55a24135ab079475bfc65" kindref="member">APReweightND::GetWeight</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value[])<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>vector&lt;int&gt;<sp/>temp_bin;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>_n_dim;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>value[i]<sp/>&lt;<sp/>(_axes[i])-&gt;GetXmin()<sp/>||<sp/>value[i]<sp/>&gt;<sp/>(_axes[i])-&gt;GetXmax()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d5/d8d/classAPReweightBase_1a7662580ec2cef7f62400ce5b7a915487" kindref="member">_isQuiet</ref>)<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;WARNING<sp/>in<sp/>APReweightND::GetBin:<sp/>Value<sp/>out<sp/>of<sp/>range!<sp/>Dim:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>value:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>value[i]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>return<sp/>value:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(_axes[i])-&gt;FindFixBin(value[i])<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>temp_bin.push_back((_axes[i])-&gt;FindFixBin(value[i]));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d9/dc5/classAPReweightND_1a513e055f3e6495f4e59380f8ed913581" kindref="member">GetBinWeight</ref>(&amp;temp_bin[0]);</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal">THnSparse*<sp/><ref refid="d9/dc5/classAPReweightND_1a7e5ca2b07a4dd30542dfe338c20ce93d" kindref="member">APReweightND::GetDenominatorHist</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_denominator_hist;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">THnSparse*<sp/><ref refid="d9/dc5/classAPReweightND_1a92b67e33a347eea088105b502a4b03e8" kindref="member">APReweightND::GetNumeratorHist</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_numerator_hist;</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d9/dc5/classAPReweightND_1a65933a104022d38e1ec3f0be618528a3" kindref="member">APReweightND::GetSampleScale</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d5/d8d/classAPReweightBase_1a33b2bc5e6e743b11af4a79c15d024a40" kindref="member">_scale</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d9/dc5/classAPReweightND_1a8575e333c652ee6d92ee76fc68bc6973" kindref="member">APReweightND::NBins</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>_n_dim;<sp/>++i)<sp/>ret<sp/>+=<sp/>(_axes[i])-&gt;GetNbins();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/dc5/classAPReweightND_1a6c995bcb7539fd7686e5f5fe2ddf2273" kindref="member">APReweightND::SetSystUncert</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rel_uncert)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><ref refid="d5/d8d/classAPReweightBase_1a25eebdd0c6c79c4a8a9d54f834fc64b9" kindref="member">_syst_uncert_global</ref><sp/>=<sp/>rel_uncert;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>map&lt;<sp/>vector&lt;int&gt;<sp/>,<sp/><ref refid="d1/d16/classAPWeightEntry" kindref="compound">APWeightEntry</ref>*<sp/>&gt;::const_iterator<sp/>temp_it<sp/>=<sp/>_weights.begin();<sp/>temp_it<sp/>!=<sp/>_weights.end();<sp/>++temp_it<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>((*temp_it).second)-&gt;<ref refid="d9/dc5/classAPReweightND_1a6c995bcb7539fd7686e5f5fe2ddf2273" kindref="member">SetSystUncert</ref>(rel_uncert);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/dc5/classAPReweightND_1a03755a71d213b165a9aa00d6e669d03c" kindref="member">APReweightND::SetQuietMode</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isQuiet)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><ref refid="d5/d8d/classAPReweightBase_1a7662580ec2cef7f62400ce5b7a915487" kindref="member">_isQuiet</ref><sp/>=<sp/>isQuiet;</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/ReweightUtils/Root/APReweightND.cxx"/>
  </compounddef>
</doxygen>
