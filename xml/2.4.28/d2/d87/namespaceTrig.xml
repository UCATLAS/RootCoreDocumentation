<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d2/d87/namespaceTrig" kind="namespace">
    <compoundname>Trig</compoundname>
    <innerclass refid="dd/d43/classTrig_1_1TestTrigSF" prot="public">Trig::TestTrigSF</innerclass>
    <innerclass refid="d5/ddc/classTrig_1_1IBunchCrossingConfProvider" prot="public">Trig::IBunchCrossingConfProvider</innerclass>
    <innerclass refid="d0/d67/classTrig_1_1IBunchCrossingTool" prot="public">Trig::IBunchCrossingTool</innerclass>
    <innerclass refid="db/dc3/classTrig_1_1binary__compose" prot="public">Trig::binary_compose</innerclass>
    <innerclass refid="d6/d56/classTrig_1_1unary__compose" prot="public">Trig::unary_compose</innerclass>
    <innerclass refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase" prot="public">Trig::BunchCrossingConfProviderBase</innerclass>
    <innerclass refid="d0/d98/classTrig_1_1LHCBunchCrossingTool" prot="public">Trig::LHCBunchCrossingTool</innerclass>
    <innerclass refid="da/dfc/classTrig_1_1MCBunchCrossingTool" prot="public">Trig::MCBunchCrossingTool</innerclass>
    <innerclass refid="df/d24/classTrig_1_1TrigConfBunchCrossingTool" prot="public">Trig::TrigConfBunchCrossingTool</innerclass>
    <innerclass refid="dd/d70/structTrig_1_1BunchConfig" prot="public">Trig::BunchConfig</innerclass>
    <innerclass refid="d6/db1/classTrig_1_1BunchCrossing" prot="public">Trig::BunchCrossing</innerclass>
    <innerclass refid="db/df3/classTrig_1_1BunchCrossingToolBase" prot="public">Trig::BunchCrossingToolBase</innerclass>
    <innerclass refid="d2/d3e/classTrig_1_1BunchTrain" prot="public">Trig::BunchTrain</innerclass>
    <innerclass refid="df/d21/classTrig_1_1D3PDBunchCrossingTool" prot="public">Trig::D3PDBunchCrossingTool</innerclass>
    <innerclass refid="d9/dd8/classTrig_1_1StaticBunchCrossingTool" prot="public">Trig::StaticBunchCrossingTool</innerclass>
    <innerclass refid="d6/d13/classTrig_1_1WebBunchCrossingTool" prot="public">Trig::WebBunchCrossingTool</innerclass>
    <innerclass refid="db/d39/classTrig_1_1xAODBunchCrossingTool" prot="public">Trig::xAODBunchCrossingTool</innerclass>
    <innerclass refid="d6/dad/classTrig_1_1ITrigDecisionTool" prot="public">Trig::ITrigDecisionTool</innerclass>
    <innerclass refid="d2/df9/classTrig_1_1CacheGlobalMemory" prot="public">Trig::CacheGlobalMemory</innerclass>
    <innerclass refid="d8/d5b/classTrig_1_1ChainGroup" prot="public">Trig::ChainGroup</innerclass>
    <innerclass refid="d7/dd2/classTrig_1_1ChainGroupFunctions" prot="public">Trig::ChainGroupFunctions</innerclass>
    <innerclass refid="da/d08/classTrig_1_1Combination" prot="public">Trig::Combination</innerclass>
    <innerclass refid="dd/d96/classTrig_1_1ConfigurationAccess" prot="public">Trig::ConfigurationAccess</innerclass>
    <innerclass refid="d7/dbb/classTrig_1_1DecisionAccess" prot="public">Trig::DecisionAccess</innerclass>
    <innerclass refid="d1/de9/classTrig_1_1DecisionObjectHandle" prot="public">Trig::DecisionObjectHandle</innerclass>
    <innerclass refid="d9/d41/classTrig_1_1DecisionObjectHandleAthena" prot="public">Trig::DecisionObjectHandleAthena</innerclass>
    <innerclass refid="d6/d3a/classTrig_1_1DecisionObjectHandleEventInfo" prot="public">Trig::DecisionObjectHandleEventInfo</innerclass>
    <innerclass refid="d4/d8a/classTrig_1_1DecisionObjectHandleStandalone" prot="public">Trig::DecisionObjectHandleStandalone</innerclass>
    <innerclass refid="d3/d71/classTrig_1_1DecisionUnpackerAthena" prot="public">Trig::DecisionUnpackerAthena</innerclass>
    <innerclass refid="de/d0b/classTrig_1_1DecisionUnpackerEventInfo" prot="public">Trig::DecisionUnpackerEventInfo</innerclass>
    <innerclass refid="d0/d7c/classTrig_1_1DecisionUnpackerStandalone" prot="public">Trig::DecisionUnpackerStandalone</innerclass>
    <innerclass refid="d1/da4/classTrig_1_1ExpertMethods" prot="public">Trig::ExpertMethods</innerclass>
    <innerclass refid="d1/d47/structTrig_1_1is__storable__type" prot="public">Trig::is_storable_type</innerclass>
    <innerclass refid="d1/d18/structTrig_1_1link__or__not_3_01T_00_01true_01_4" prot="public">Trig::link_or_not&lt; T, true &gt;</innerclass>
    <innerclass refid="d8/d2f/structTrig_1_1ElementLink__is__not__available__for__non__storable__types" prot="public">Trig::ElementLink_is_not_available_for_non_storable_types</innerclass>
    <innerclass refid="da/d32/structTrig_1_1link__or__not_3_01T_00_01false_01_4" prot="public">Trig::link_or_not&lt; T, false &gt;</innerclass>
    <innerclass refid="d3/da6/classTrig_1_1Feature" prot="public">Trig::Feature</innerclass>
    <innerclass refid="d9/d6f/classTrig_1_1FeatureContainer" prot="public">Trig::FeatureContainer</innerclass>
    <innerclass refid="de/daa/classTrig_1_1IDecisionUnpacker" prot="public">Trig::IDecisionUnpacker</innerclass>
    <innerclass refid="da/d3f/classTrig_1_1Logger" prot="public">Trig::Logger</innerclass>
    <innerclass refid="d6/dc4/classTrig_1_1TrigDecisionTool" prot="public">Trig::TrigDecisionTool</innerclass>
    <innerclass refid="d1/d94/classTrig_1_1TrigDecisionToolCore" prot="public">Trig::TrigDecisionToolCore</innerclass>
    <innerclass refid="de/dd5/classTrig_1_1TypelessFeature" prot="public">Trig::TypelessFeature</innerclass>
    <innerclass refid="d5/d05/classTrig_1_1IMatchingTool" prot="public">Trig::IMatchingTool</innerclass>
    <innerclass refid="d6/dfe/classTrig_1_1MatchingImplementation" prot="public">Trig::MatchingImplementation</innerclass>
    <innerclass refid="d8/d62/classTrig_1_1MatchingTool" prot="public">Trig::MatchingTool</innerclass>
    <innerclass refid="d3/d6b/classTrig_1_1ITrigTauMatchingTool" prot="public">Trig::ITrigTauMatchingTool</innerclass>
    <innerclass refid="d1/d92/classTrig_1_1TrigTauMatchingTool" prot="public">Trig::TrigTauMatchingTool</innerclass>
    <innernamespace refid="de/d34/namespaceTrig_1_1FeatureAccessImpl">Trig::FeatureAccessImpl</innernamespace>
    <innernamespace refid="d4/d09/namespaceTrig_1_1MatchingStrategy">Trig::MatchingStrategy</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="d2/d87/namespaceTrig_1ac05b4f565fb4d985b4e0d5093a97d038" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* Trig::TRIGCONF_ADDRESS</definition>
        <argsstring></argsstring>
        <name>TRIGCONF_ADDRESS</name>
        <initializer> &quot;atlas-trigconf.cern.ch&quot;</initializer>
        <briefdescription>
<para>Address of the default trigger configuration server. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/WebBunchCrossingTool.cxx" line="24" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/WebBunchCrossingTool.cxx" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d87/namespaceTrig_1a29a4e5688fa6c7abf0d3bc39d573644e" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* Trig::TRIGCONF_BGFOLDER</definition>
        <argsstring></argsstring>
        <name>TRIGCONF_BGFOLDER</name>
        <initializer> &quot;bunchgroups&quot;</initializer>
        <briefdescription>
<para>Folder for the bunchgroup configuration. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/WebBunchCrossingTool.cxx" line="26" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/WebBunchCrossingTool.cxx" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d87/namespaceTrig_1a0f43289bfa1bcabf446b50f7613e45d5" prot="public" static="yes" mutable="no">
        <type>const Int_t</type>
        <definition>const Int_t Trig::TRIGCONF_PORT</definition>
        <argsstring></argsstring>
        <name>TRIGCONF_PORT</name>
        <initializer> 80</initializer>
        <briefdescription>
<para>Port of the trigger configuration web server. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/WebBunchCrossingTool.cxx" line="28" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/WebBunchCrossingTool.cxx" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d87/namespaceTrig_1a2c2fec9621e3103672fd0d6d1eed9258" prot="public" static="yes" mutable="no">
        <type>const Long_t</type>
        <definition>const Long_t Trig::TRIGCONF_TIMEOUT</definition>
        <argsstring></argsstring>
        <name>TRIGCONF_TIMEOUT</name>
        <initializer> 20000</initializer>
        <briefdescription>
<para>Default timeout in miliseconds for reading the webpages. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/WebBunchCrossingTool.cxx" line="30" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/WebBunchCrossingTool.cxx" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d87/namespaceTrig_1a3f17c7f972b4d78d4fe40d025187b2b9" prot="public" static="yes" mutable="no">
        <type>const Int_t</type>
        <definition>const Int_t Trig::COLLISION_BUNCHGROUP_INDEX</definition>
        <argsstring></argsstring>
        <name>COLLISION_BUNCHGROUP_INDEX</name>
        <initializer> 1</initializer>
        <briefdescription>
<para>Code of the collision bunch crossings. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/WebBunchCrossingTool.cxx" line="32" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/WebBunchCrossingTool.cxx" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d87/namespaceTrig_1a52b3b9eabce85318ae11d8e7717158a5" prot="public" static="yes" mutable="no">
        <type>const Int_t</type>
        <definition>const Int_t Trig::UNPAIRED_BUNCHGROUP_1_INDEX</definition>
        <argsstring></argsstring>
        <name>UNPAIRED_BUNCHGROUP_1_INDEX</name>
        <initializer> 4</initializer>
        <briefdescription>
<para>First index of the unpaired bunch crossings. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/WebBunchCrossingTool.cxx" line="34" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/WebBunchCrossingTool.cxx" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d87/namespaceTrig_1a79cd926f23953eee3c1013dda96743c6" prot="public" static="yes" mutable="no">
        <type>const Int_t</type>
        <definition>const Int_t Trig::UNPAIRED_BUNCHGROUP_2_INDEX</definition>
        <argsstring></argsstring>
        <name>UNPAIRED_BUNCHGROUP_2_INDEX</name>
        <initializer> 5</initializer>
        <briefdescription>
<para>Second index of the unpaired bunch crossings. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/WebBunchCrossingTool.cxx" line="36" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/WebBunchCrossingTool.cxx" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d87/namespaceTrig_1aa4c499612be6b59e5f908657580ca9ed" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string Trig::LHC_FILLPARAMS_FOLDER</definition>
        <argsstring></argsstring>
        <name>LHC_FILLPARAMS_FOLDER</name>
        <initializer> &quot;/TDAQ/OLC/LHC/FILLPARAMS&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/LHCBunchCrossingTool.cxx" line="26" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/LHCBunchCrossingTool.cxx" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d87/namespaceTrig_1a42ae08960d357d3e679d4ba24bfc9b81" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string Trig::LHC_BUNCHDATA_FOLDER</definition>
        <argsstring></argsstring>
        <name>LHC_BUNCHDATA_FOLDER</name>
        <initializer> &quot;/TDAQ/OLC/LHC/BUNCHDATA&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/LHCBunchCrossingTool.cxx" line="27" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/LHCBunchCrossingTool.cxx" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d87/namespaceTrig_1af72f4b07f61a9a9bf2dcfa2b04d91dbc" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string Trig::MC_DIGI_PARAM</definition>
        <argsstring></argsstring>
        <name>MC_DIGI_PARAM</name>
        <initializer> &quot;/Digitization/Parameters&quot;</initializer>
        <briefdescription>
<para>Folder in the MC MetaData that we need to read. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.cxx" line="20" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.cxx" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d87/namespaceTrig_1adc634310c79a2cd76ae95677a3aad8d0" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string Trig::BEAM_INTENSITY_PATTERN</definition>
        <argsstring></argsstring>
        <name>BEAM_INTENSITY_PATTERN</name>
        <initializer> &quot;BeamIntensityPattern&quot;</initializer>
        <briefdescription>
<para>The parameter in the MetaData that we&apos;re interested in. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.cxx" line="22" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/MCBunchCrossingTool.cxx" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d87/namespaceTrig_1a1a171d85b442ca1cddb147ef0b2f5e7b" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string Trig::TRIGCONF_INCIDENT_NAME</definition>
        <argsstring></argsstring>
        <name>TRIGCONF_INCIDENT_NAME</name>
        <initializer> &quot;TrigConf&quot;</initializer>
        <briefdescription>
<para>Name of the trigger configuration incidents. </para>        </briefdescription>
        <detaileddescription>
<para>Unfortunately the name of the trigger configuration incidents is not published the same way as for the event incidents. So the easiest is just to create a variable locally. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/TrigConfBunchCrossingTool.cxx" line="24" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/TrigConfBunchCrossingTool.cxx" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="d2/d87/namespaceTrig_1a46a0740aeb2d765e48c4f477a1ca4b5d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class BinaryFunction</type>
          </param>
          <param>
            <type>class UnaryFunction1</type>
          </param>
          <param>
            <type>class UnaryFunction2</type>
          </param>
        </templateparamlist>
        <type><ref refid="db/dc3/classTrig_1_1binary__compose" kindref="compound">binary_compose</ref>&lt; BinaryFunction, UnaryFunction1, UnaryFunction2 &gt;</type>
        <definition>binary_compose&lt; BinaryFunction, UnaryFunction1, UnaryFunction2 &gt; Trig::compose2</definition>
        <argsstring>(BinaryFunction bfn, UnaryFunction1 ufn1, UnaryFunction2 ufn2)</argsstring>
        <name>compose2</name>
        <param>
          <type>BinaryFunction</type>
          <declname>bfn</declname>
        </param>
        <param>
          <type>UnaryFunction1</type>
          <declname>ufn1</declname>
        </param>
        <param>
          <type>UnaryFunction2</type>
          <declname>ufn2</declname>
        </param>
        <briefdescription>
<para>Helper function for creating <ref refid="db/dc3/classTrig_1_1binary__compose" kindref="compound">binary_compose</ref> function objects. </para>        </briefdescription>
        <detaileddescription>
<para>This function is here because when you call it, you don&apos;t need to explicitly specify the template parameter types. When you create a <ref refid="db/dc3/classTrig_1_1binary__compose" kindref="compound">binary_compose</ref> object directly, you do have to.</para><para><simplesect kind="author"><para>Attila Krasznahorkay &lt;<ulink url="mailto:Attila.Krasznahorkay@cern.ch">Attila.Krasznahorkay@cern.ch</ulink>&gt;</para></simplesect>
<simplesect kind="rcs"><title>Revision</title><para>457114 </para></simplesect>
<simplesect kind="rcs"><title>Date</title><para>2011-09-05 11:35:49 +0200 (Mon, 05 Sep 2011) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/binary_compose.h" line="70" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/binary_compose.h" bodystart="70" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="d2/d87/namespaceTrig_1a8039086c88ddd8ff3267d8abffedf97f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/db1/classTrig_1_1BunchCrossing" kindref="compound">BunchCrossing</ref></type>
        <definition>BunchCrossing Trig::operator+</definition>
        <argsstring>(const BunchCrossing &amp;bc1, const BunchCrossing &amp;bc2)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="d6/db1/classTrig_1_1BunchCrossing" kindref="compound">BunchCrossing</ref> &amp;</type>
          <declname>bc1</declname>
        </param>
        <param>
          <type>const <ref refid="d6/db1/classTrig_1_1BunchCrossing" kindref="compound">BunchCrossing</ref> &amp;</type>
          <declname>bc2</declname>
        </param>
        <briefdescription>
<para>Operator summing two <ref refid="d6/db1/classTrig_1_1BunchCrossing" kindref="compound">BunchCrossing</ref> objects. </para>        </briefdescription>
        <detaileddescription>
<para>Convenience operator taking advantage of the += operator defined in the <ref refid="d6/db1/classTrig_1_1BunchCrossing" kindref="compound">BunchCrossing</ref> class. Note that using += is much quicker.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bc1</parametername>
</parameternamelist>
<parameterdescription>
<para>One bunch crossing object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bc2</parametername>
</parameternamelist>
<parameterdescription>
<para>Another bunch crossing object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The sum of the two bunch crossings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/BunchCrossing.cxx" line="363"/>
      </memberdef>
      <memberdef kind="function" id="d2/d87/namespaceTrig_1aaf11d18ffd6c3a03f24d57cf29743c40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/db1/classTrig_1_1BunchCrossing" kindref="compound">BunchCrossing</ref></type>
        <definition>BunchCrossing Trig::operator-</definition>
        <argsstring>(const BunchCrossing &amp;bc1, const BunchCrossing &amp;bc2)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="d6/db1/classTrig_1_1BunchCrossing" kindref="compound">BunchCrossing</ref> &amp;</type>
          <declname>bc1</declname>
        </param>
        <param>
          <type>const <ref refid="d6/db1/classTrig_1_1BunchCrossing" kindref="compound">BunchCrossing</ref> &amp;</type>
          <declname>bc2</declname>
        </param>
        <briefdescription>
<para>Operator subtracting two <ref refid="d6/db1/classTrig_1_1BunchCrossing" kindref="compound">BunchCrossing</ref> objects. </para>        </briefdescription>
        <detaileddescription>
<para>Convenience operator taking advantage of the -= operator defined in the <ref refid="d6/db1/classTrig_1_1BunchCrossing" kindref="compound">BunchCrossing</ref> class. Note that using -= is much quicker.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bc1</parametername>
</parameternamelist>
<parameterdescription>
<para>One bunch crossing object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bc2</parametername>
</parameternamelist>
<parameterdescription>
<para>Another bunch crossing object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The difference of the two bunch crossings (absolute value depends on order!) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/BunchCrossing.cxx" line="379"/>
      </memberdef>
      <memberdef kind="function" id="d2/d87/namespaceTrig_1a021da3e49552c2925f67aaba3ae1be71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Trig::distance</definition>
        <argsstring>(const BunchCrossing bc1, const BunchCrossing bc2)</argsstring>
        <name>distance</name>
        <param>
          <type>const <ref refid="d6/db1/classTrig_1_1BunchCrossing" kindref="compound">BunchCrossing</ref></type>
          <declname>bc1</declname>
        </param>
        <param>
          <type>const <ref refid="d6/db1/classTrig_1_1BunchCrossing" kindref="compound">BunchCrossing</ref></type>
          <declname>bc2</declname>
        </param>
        <briefdescription>
<para>Function calculating the distance of two bunch crossings. </para>        </briefdescription>
        <detaileddescription>
<para>I need this function only for technical reasons. It just calls <ref refid="d6/db1/classTrig_1_1BunchCrossing_1a476370df85c535f83aa890efa9e56037" kindref="member">BunchCrossing::distance</ref> under the hood...</para><para>Unfortunately the function can&apos;t receive constant references because of the way some of STL is written. :-/</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bc1</parametername>
</parameternamelist>
<parameterdescription>
<para>One <ref refid="d6/db1/classTrig_1_1BunchCrossing" kindref="compound">BunchCrossing</ref> object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bc2</parametername>
</parameternamelist>
<parameterdescription>
<para>Another <ref refid="d6/db1/classTrig_1_1BunchCrossing" kindref="compound">BunchCrossing</ref> object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The absolute distance of the two objects </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/BunchCrossing.cxx" line="398"/>
      </memberdef>
      <memberdef kind="function" id="d2/d87/namespaceTrig_1ac76c19bc6d29c9ff2b64beaf5ab3b918" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Trig::operator&lt;</definition>
        <argsstring>(const BunchTrain &amp;bt1, const BunchTrain &amp;bt2)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="d2/d3e/classTrig_1_1BunchTrain" kindref="compound">BunchTrain</ref> &amp;</type>
          <declname>bt1</declname>
        </param>
        <param>
          <type>const <ref refid="d2/d3e/classTrig_1_1BunchTrain" kindref="compound">BunchTrain</ref> &amp;</type>
          <declname>bt2</declname>
        </param>
        <briefdescription>
<para>Comparison operator for <ref refid="d2/d3e/classTrig_1_1BunchTrain" kindref="compound">BunchTrain</ref> objects. </para>        </briefdescription>
        <detaileddescription>
<para>This operator is here to be able to put <ref refid="d2/d3e/classTrig_1_1BunchTrain" kindref="compound">BunchTrain</ref> objects into ordered containers like <computeroutput>std::set</computeroutput> and friends.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bt1</parametername>
</parameternamelist>
<parameterdescription>
<para>One bunch train object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bt2</parametername>
</parameternamelist>
<parameterdescription>
<para>Another bunch train object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if bt1 is considered &quot;lower&quot; than bt2, or <computeroutput>false</computeroutput> otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/BunchTrain.cxx" line="275"/>
      </memberdef>
      <memberdef kind="function" id="d2/d87/namespaceTrig_1ac6a22855f3f580ff15d64a04287bd4ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class UnaryFunction1</type>
          </param>
          <param>
            <type>class UnaryFunction2</type>
          </param>
        </templateparamlist>
        <type><ref refid="d6/d56/classTrig_1_1unary__compose" kindref="compound">unary_compose</ref>&lt; UnaryFunction1, UnaryFunction2 &gt;</type>
        <definition>unary_compose&lt; UnaryFunction1, UnaryFunction2 &gt; Trig::compose1</definition>
        <argsstring>(UnaryFunction1 ufn1, UnaryFunction2 ufn2)</argsstring>
        <name>compose1</name>
        <param>
          <type>UnaryFunction1</type>
          <declname>ufn1</declname>
        </param>
        <param>
          <type>UnaryFunction2</type>
          <declname>ufn2</declname>
        </param>
        <briefdescription>
<para>Helper function for creating <ref refid="d6/d56/classTrig_1_1unary__compose" kindref="compound">unary_compose</ref> function objects. </para>        </briefdescription>
        <detaileddescription>
<para>This function is here because when you call it, you don&apos;t need to explicitly specify the template parameter types. When you create a <ref refid="d6/d56/classTrig_1_1unary__compose" kindref="compound">unary_compose</ref> object directly, you do have to.</para><para><simplesect kind="author"><para>Attila Krasznahorkay &lt;<ulink url="mailto:Attila.Krasznahorkay@cern.ch">Attila.Krasznahorkay@cern.ch</ulink>&gt;</para></simplesect>
<simplesect kind="rcs"><title>Revision</title><para>457114 </para></simplesect>
<simplesect kind="rcs"><title>Date</title><para>2011-09-05 11:35:49 +0200 (Mon, 05 Sep 2011) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/unary_compose.h" line="64" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/unary_compose.h" bodystart="64" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="d2/d87/namespaceTrig_1a17f05695e86a8332a9a6ccdae4833324" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>MsgStream &amp;</type>
        <definition>MsgStream &amp; Trig::operator&lt;&lt;</definition>
        <argsstring>(MsgStream &amp;stream, const WebBunchCrossingTool::IOV &amp;iov)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>MsgStream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const <ref refid="dc/dc2/classTrig_1_1WebBunchCrossingTool_1_1IOV" kindref="compound">WebBunchCrossingTool::IOV</ref> &amp;</type>
          <declname>iov</declname>
        </param>
        <briefdescription>
<para>Output operator for IOV objects. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/WebBunchCrossingTool.cxx" line="40" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/Root/WebBunchCrossingTool.cxx" bodystart="633" bodyend="638"/>
      </memberdef>
      <memberdef kind="function" id="d2/d87/namespaceTrig_1a0d8014d5f99d60c90bb4a6ec111f360f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Trig::sameObject</definition>
        <argsstring>(const Feature&lt; T &gt; &amp;a, const Feature&lt; T &gt; &amp;b)</argsstring>
        <name>sameObject</name>
        <param>
          <type>const <ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Feature</ref>&lt; <ref refid="d1/def/classT" kindref="compound">T</ref> &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Feature</ref>&lt; <ref refid="d1/def/classT" kindref="compound">T</ref> &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>comarison </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Feature.h" line="207" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Feature.h" bodystart="207" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="d2/d87/namespaceTrig_1a1603ef3999da9799870e1bb433932ed1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; Trig::convertStringToVector</definition>
        <argsstring>(const std::string &amp;triggerNames)</argsstring>
        <name>convertStringToVector</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>triggerNames</declname>
        </param>
        <briefdescription>
<para>makes a split of list of chains into the vector of chains </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/TDTUtilities.h" line="26" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/Root/TDTUtilities.cxx" bodystart="40" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="d2/d87/namespaceTrig_1a6ca77302aef6d33ad12b0ba1ccb3b0ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; Trig::keyWrap</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;triggerNames)</argsstring>
        <name>keyWrap</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>triggerNames</declname>
        </param>
        <briefdescription>
<para>normalizes the list of triggers (patterns) by sorting and uniquing them </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/TDTUtilities.h" line="31" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/Root/TDTUtilities.cxx" bodystart="51" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="d2/d87/namespaceTrig_1a3efe46febb7d2ce92135cebc8ea83cf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Trig::BuildTransientTrees</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;PoolFileList, TTree *&amp;eventTree, TTree *&amp;metadataTree)</argsstring>
        <name>BuildTransientTrees</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>PoolFileList</declname>
        </param>
        <param>
          <type>TTree *&amp;</type>
          <declname>eventTree</declname>
        </param>
        <param>
          <type>TTree *&amp;</type>
          <declname>metadataTree</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/TDTUtilities.h" line="35" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/Root/TDTUtilities.cxx" bodystart="61" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="d2/d87/namespaceTrig_1a26d67f8ca0bcb5b548d229b112999a2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Trig::DestroyTransientTrees</definition>
        <argsstring>()</argsstring>
        <name>DestroyTransientTrees</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/TDTUtilities.h" line="37" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/Root/TDTUtilities.cxx" bodystart="86" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="d2/d87/namespaceTrig_1a283b99d494125fc3c7c68f465c25f237" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Trig::getTEName</definition>
        <argsstring>(const HLT::TriggerElement &amp;te)</argsstring>
        <name>getTEName</name>
        <param>
          <type>const <ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound">HLT::TriggerElement</ref> &amp;</type>
          <declname>te</declname>
        </param>
        <briefdescription>
<para>converts TEid to TE name (this may not always work, it depends on the availability of config) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/TDTUtilities.h" line="42" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/Root/TDTUtilities.cxx" bodystart="95" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="d2/d87/namespaceTrig_1ab4d2781ff48ae65fb2e4dbafa5f79f75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; Trig::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const Trig::TypelessFeature &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>o</defname>
        </param>
        <param>
          <type>const <ref refid="de/dd5/classTrig_1_1TypelessFeature" kindref="compound">Trig::TypelessFeature</ref> &amp;</type>
          <defname>feat</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/TypelessFeature.h" line="14" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/Root/FeatureCollectStandalone.cxx" bodystart="13" bodyend="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The common trigger namespace for trigger analysis tools. </para>    </briefdescription>
    <detaileddescription>
<para>collection of classes which care about invalidating TDT after event is finished</para><para>This is the common namespace that all trigger analysis tools use by convention.</para><para><simplesect kind="rcs"><title>Revision</title><para>618301 </para></simplesect>
<simplesect kind="rcs"><title>Date</title><para>2014-09-24 10:53:05 +0200 (Wed, 24 Sep 2014) </para></simplesect>
</para>    </detaileddescription>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MuonEfficiencyCorrections/src/TestTrigSF.h" line="29"/>
  </compounddef>
</doxygen>
