<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d2/d36/UnitTestAlg1_8cxx" kind="file">
    <compoundname>UnitTestAlg1.cxx</compoundname>
    <includes refid="d9/d13/UnitTestAlg1_8h" local="no">EventLoop/UnitTestAlg1.h</includes>
    <includes refid="d5/d80/Job_8h" local="no">EventLoop/Job.h</includes>
    <includes refid="da/d9f/OutputStream_8h" local="no">EventLoop/OutputStream.h</includes>
    <includes refid="dc/db3/Worker_8h" local="no">EventLoop/Worker.h</includes>
    <includes local="no">RootCore/Packages.h</includes>
    <includes refid="d3/dac/Assert_8h" local="no">RootCoreUtils/Assert.h</includes>
    <includes refid="dd/db7/ThrowMsg_8h" local="no">RootCoreUtils/ThrowMsg.h</includes>
    <includes local="no">TFile.h</includes>
    <includes local="no">TH1.h</includes>
    <includes local="no">TTree.h</includes>
    <incdepgraph>
      <node id="128635">
        <label>RootCore/Packages.h</label>
      </node>
      <node id="128638">
        <label>SampleHandler/SampleHandler.h</label>
        <link refid="d2/da1/SampleHandler_8h_source"/>
        <childnode refid="128639" relation="include">
        </childnode>
        <childnode refid="128640" relation="include">
        </childnode>
        <childnode refid="128641" relation="include">
        </childnode>
        <childnode refid="128642" relation="include">
        </childnode>
        <childnode refid="128637" relation="include">
        </childnode>
        <childnode refid="128643" relation="include">
        </childnode>
      </node>
      <node id="128636">
        <label>EventLoop/Job.h</label>
        <link refid="d5/d80/Job_8h_source"/>
        <childnode refid="128631" relation="include">
        </childnode>
        <childnode refid="128637" relation="include">
        </childnode>
        <childnode refid="128638" relation="include">
        </childnode>
        <childnode refid="128644" relation="include">
        </childnode>
      </node>
      <node id="128653">
        <label>TList.h</label>
      </node>
      <node id="128634">
        <label>EventLoop/StatusCode.h</label>
        <link refid="d0/d16/EventLoop_2EventLoop_2StatusCode_8h_source"/>
        <childnode refid="128631" relation="include">
        </childnode>
      </node>
      <node id="128647">
        <label>RootCoreUtils/Deprecated.h</label>
        <link refid="d1/d0f/RootCoreUtils_2RootCoreUtils_2Deprecated_8h_source"/>
        <childnode refid="128646" relation="include">
        </childnode>
      </node>
      <node id="128648">
        <label>string</label>
      </node>
      <node id="128629">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/Root/UnitTestAlg1.cxx</label>
        <link refid="UnitTestAlg1.cxx"/>
        <childnode refid="128630" relation="include">
        </childnode>
        <childnode refid="128636" relation="include">
        </childnode>
        <childnode refid="128650" relation="include">
        </childnode>
        <childnode refid="128651" relation="include">
        </childnode>
        <childnode refid="128635" relation="include">
        </childnode>
        <childnode refid="128645" relation="include">
        </childnode>
        <childnode refid="128654" relation="include">
        </childnode>
        <childnode refid="128657" relation="include">
        </childnode>
        <childnode refid="128658" relation="include">
        </childnode>
        <childnode refid="128659" relation="include">
        </childnode>
      </node>
      <node id="128642">
        <label>map</label>
      </node>
      <node id="128644">
        <label>SampleHandler/MetaObject.h</label>
        <link refid="d7/d50/MetaObject_8h_source"/>
        <childnode refid="128639" relation="include">
        </childnode>
        <childnode refid="128645" relation="include">
        </childnode>
        <childnode refid="128647" relation="include">
        </childnode>
        <childnode refid="128648" relation="include">
        </childnode>
        <childnode refid="128649" relation="include">
        </childnode>
      </node>
      <node id="128658">
        <label>TH1.h</label>
      </node>
      <node id="128631">
        <label>EventLoop/Global.h</label>
        <link refid="d1/daf/EventLoop_2EventLoop_2Global_8h_source"/>
      </node>
      <node id="128643">
        <label>TObject.h</label>
      </node>
      <node id="128637">
        <label>vector</label>
      </node>
      <node id="128657">
        <label>TFile.h</label>
      </node>
      <node id="128646">
        <label>RootCoreUtils/Global.h</label>
        <link refid="d6/d7f/RootCoreUtils_2RootCoreUtils_2Global_8h_source"/>
      </node>
      <node id="128656">
        <label>RootCoreUtils/MessageType.h</label>
        <link refid="dd/d02/MessageType_8h_source"/>
        <childnode refid="128646" relation="include">
        </childnode>
      </node>
      <node id="128652">
        <label>Rtypes.h</label>
      </node>
      <node id="128641">
        <label>iosfwd</label>
      </node>
      <node id="128651">
        <label>EventLoop/Worker.h</label>
        <link refid="dc/db3/Worker_8h_source"/>
        <childnode refid="128631" relation="include">
        </childnode>
        <childnode refid="128642" relation="include">
        </childnode>
        <childnode refid="128640" relation="include">
        </childnode>
        <childnode refid="128637" relation="include">
        </childnode>
        <childnode refid="128652" relation="include">
        </childnode>
        <childnode refid="128653" relation="include">
        </childnode>
        <childnode refid="128639" relation="include">
        </childnode>
      </node>
      <node id="128632">
        <label>EventLoop/Algorithm.h</label>
        <link refid="d7/d36/Algorithm_8h_source"/>
        <childnode refid="128631" relation="include">
        </childnode>
        <childnode refid="128633" relation="include">
        </childnode>
        <childnode refid="128634" relation="include">
        </childnode>
      </node>
      <node id="128633">
        <label>TNamed.h</label>
      </node>
      <node id="128655">
        <label>RootCoreUtils/PrintMsg.h</label>
        <link refid="d2/d5f/PrintMsg_8h_source"/>
        <childnode refid="128646" relation="include">
        </childnode>
        <childnode refid="128648" relation="include">
        </childnode>
        <childnode refid="128656" relation="include">
        </childnode>
      </node>
      <node id="128659">
        <label>TTree.h</label>
      </node>
      <node id="128654">
        <label>RootCoreUtils/ThrowMsg.h</label>
        <link refid="dd/db7/ThrowMsg_8h_source"/>
        <childnode refid="128646" relation="include">
        </childnode>
        <childnode refid="128655" relation="include">
        </childnode>
      </node>
      <node id="128645">
        <label>RootCoreUtils/Assert.h</label>
        <link refid="d3/dac/Assert_8h_source"/>
        <childnode refid="128646" relation="include">
        </childnode>
      </node>
      <node id="128639">
        <label>SampleHandler/Global.h</label>
        <link refid="d3/df9/SampleHandler_2SampleHandler_2Global_8h_source"/>
      </node>
      <node id="128630">
        <label>EventLoop/UnitTestAlg1.h</label>
        <link refid="d9/d13/UnitTestAlg1_8h_source"/>
        <childnode refid="128631" relation="include">
        </childnode>
        <childnode refid="128632" relation="include">
        </childnode>
        <childnode refid="128635" relation="include">
        </childnode>
      </node>
      <node id="128640">
        <label>memory</label>
      </node>
      <node id="128650">
        <label>EventLoop/OutputStream.h</label>
        <link refid="da/d9f/OutputStream_8h_source"/>
        <childnode refid="128631" relation="include">
        </childnode>
        <childnode refid="128637" relation="include">
        </childnode>
        <childnode refid="128643" relation="include">
        </childnode>
        <childnode refid="128644" relation="include">
        </childnode>
        <childnode refid="128638" relation="include">
        </childnode>
      </node>
      <node id="128649">
        <label>TCollection.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="d2/d36/UnitTestAlg1_8cxx_1a909ca3295ff6414122f1f2cb6b7137cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ClassImp</definition>
        <argsstring>(EL::UnitTestAlg1) namespace EL</argsstring>
        <name>ClassImp</name>
        <param>
          <type><ref refid="d5/da0/classEL_1_1UnitTestAlg1" kindref="compound">EL::UnitTestAlg1</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/Root/UnitTestAlg1.cxx" line="42" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/Root/UnitTestAlg1.cxx" bodystart="39" bodyend="254"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>Nils<sp/>Krumnack<sp/>2011.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>(See<sp/>accompanying<sp/>file<sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Please<sp/>feel<sp/>free<sp/>to<sp/>contact<sp/>me<sp/>(krumnack@iastate.edu)<sp/>for<sp/>bug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>reports,<sp/>feature<sp/>suggestions,<sp/>praise<sp/>and<sp/>complaints.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EventLoop/UnitTestAlg1.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EventLoop/Job.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EventLoop/OutputStream.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EventLoop/Worker.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;RootCore/Packages.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;RootCoreUtils/Assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;RootCoreUtils/ThrowMsg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TFile.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TH1.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TTree.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ROOTCORE_PACKAGE_D3PDReader</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;D3PDReader/Event.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ROOTCORE_PACKAGE_AsgTools</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;AsgTools/MsgStream.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AsgTools/MsgStreamMacros.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>method<sp/>implementations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">ClassImp<sp/>(<ref refid="d5/da0/classEL_1_1UnitTestAlg1" kindref="compound">EL::UnitTestAlg1</ref>)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">namespace<sp/>EL</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnitTestAlg1<sp/>::</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>testInvariant<sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="45"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><ref refid="d5/da0/classEL_1_1UnitTestAlg1_1ad36cd9122e9d6d74fe35ee3d2e5eede3" kindref="member">UnitTestAlg1 ::</ref></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><ref refid="d5/da0/classEL_1_1UnitTestAlg1_1ad36cd9122e9d6d74fe35ee3d2e5eede3" kindref="member">  UnitTestAlg1</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>branchName)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>makeOutput<sp/>(true),</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_name<sp/>(branchName),</highlight></codeline>
<codeline lineno="55"><highlight class="normal">#ifdef<sp/>ROOTCORE_PACKAGE_D3PDReader</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_event<sp/>(0),</highlight></codeline>
<codeline lineno="57"><highlight class="normal">#else</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_branch<sp/>(0),</highlight></codeline>
<codeline lineno="59"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_value<sp/>(0),</highlight><highlight class="comment">//<sp/>m_hist<sp/>(0),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_tree<sp/>(0),</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_hasInitialize<sp/>(false),</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_hasHistInitialize<sp/>(false)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_NEW_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>StatusCode<sp/>UnitTestAlg1<sp/>::</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>setupJob<sp/>(Job&amp;<sp/>job)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_CHANGE_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ROOTCORE_PACKAGE_D3PDReader</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>job.useD3PDReader<sp/>();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d5/da0/classEL_1_1UnitTestAlg1_1aa5de81ca804a6454961c6a97bc63b7d2" kindref="member" tooltip="description: whether I create an output n-tuple">makeOutput</ref>)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OutputStream<sp/>out<sp/>(</highlight><highlight class="stringliteral">&quot;out&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>job.outputAdd<sp/>(out);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OutputStream<sp/>out<sp/>(</highlight><highlight class="stringliteral">&quot;out_empty&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>job.outputAdd<sp/>(out);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>StatusCode<sp/>UnitTestAlg1<sp/>::</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>changeInput<sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>firstFile)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_CHANGE_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(firstFile)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getCallbacks()-&gt;Fill<sp/>(CB_CHANGE_INPUT_FIRST);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getCallbacks()-&gt;Fill<sp/>(CB_CHANGE_INPUT_OTHER);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_ASSERT<sp/>(<ref refid="de/ddb/classEL_1_1Algorithm_1a36e05186cb50cc0e5929121d3f6b6053" kindref="member">wk</ref>()-&gt;tree()<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ROOTCORE_PACKAGE_D3PDReader</highlight></codeline>
<codeline lineno="105"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>m_event<sp/>=<sp/><ref refid="de/ddb/classEL_1_1Algorithm_1a36e05186cb50cc0e5929121d3f6b6053" kindref="member">wk</ref>()-&gt;d3pdreader();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="107"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>m_branch<sp/>=<sp/><ref refid="de/ddb/classEL_1_1Algorithm_1a36e05186cb50cc0e5929121d3f6b6053" kindref="member">wk</ref>()-&gt;tree()-&gt;GetBranch<sp/>(m_name.c_str());</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_branch<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RCU_THROW_MSG<sp/>(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>find<sp/>branch<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_name);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>m_branch-&gt;SetAddress<sp/>(&amp;m_value);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="112"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_ASSERT_SOFT<sp/>(firstFile<sp/>==<sp/>m_fileName.empty());</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fileName<sp/>=<sp/><ref refid="de/ddb/classEL_1_1Algorithm_1a36e05186cb50cc0e5929121d3f6b6053" kindref="member">wk</ref>()-&gt;inputFile()-&gt;GetName();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>StatusCode<sp/>UnitTestAlg1<sp/>::</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>histInitialize<sp/>()</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_CHANGE_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>getCallbacks()-&gt;Fill<sp/>(CB_HIST_INITIALIZE);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_ASSERT_SOFT<sp/>(!m_hasHistInitialize);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/ddb/classEL_1_1Algorithm_1a9e2072bd4fdda18ebc86f847b691d9b9" kindref="member" tooltip="book the given histogram">book</ref><sp/>(TH1F<sp/>((m_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">).c_str(),<sp/>m_name.c_str(),<sp/>50,<sp/>0,<sp/>50));</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/ddb/classEL_1_1Algorithm_1a9e2072bd4fdda18ebc86f847b691d9b9" kindref="member" tooltip="book the given histogram">book</ref><sp/>(TH1F<sp/>(</highlight><highlight class="stringliteral">&quot;file_executes&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;file<sp/>executes&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>0,<sp/>1));</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>m_hasHistInitialize<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>StatusCode<sp/>UnitTestAlg1<sp/>::</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>initialize<sp/>()</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_CHANGE_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>getCallbacks()-&gt;Fill<sp/>(CB_INITIALIZE);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_ASSERT_SOFT<sp/>(m_hasHistInitialize);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_ASSERT_SOFT<sp/>(!m_hasInitialize);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_ASSERT_SOFT<sp/>(<ref refid="de/ddb/classEL_1_1Algorithm_1a36e05186cb50cc0e5929121d3f6b6053" kindref="member">wk</ref>()-&gt;tree()-&gt;GetEntries()<sp/>&gt;<sp/><ref refid="de/ddb/classEL_1_1Algorithm_1a36e05186cb50cc0e5929121d3f6b6053" kindref="member">wk</ref>()-&gt;treeEntry());</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_ASSERT_SOFT<sp/>(m_fileName<sp/>==<sp/><ref refid="de/ddb/classEL_1_1Algorithm_1a36e05186cb50cc0e5929121d3f6b6053" kindref="member">wk</ref>()-&gt;inputFile()-&gt;GetName());</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(wk()-&gt;metaData()-&gt;castDouble<sp/>(&quot;jobOpt&quot;)<sp/>!=<sp/>42)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>RCU_THROW_MSG<sp/>(&quot;failed<sp/>to<sp/>read<sp/>meta-data<sp/>from<sp/>job<sp/>options&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(wk()-&gt;metaData()-&gt;castString<sp/>(&quot;mymeta&quot;)<sp/>!=<sp/>&quot;test&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>RCU_THROW_MSG<sp/>(&quot;failed<sp/>to<sp/>read<sp/>meta-data<sp/>from<sp/>worker&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/ddb/classEL_1_1Algorithm_1a36e05186cb50cc0e5929121d3f6b6053" kindref="member">wk</ref>()-&gt;addOutput<sp/>(</highlight><highlight class="comment">/*m_hist<sp/>=<sp/>*/</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F<sp/>(m_name.c_str(),<sp/>m_name.c_str(),</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>50,<sp/>0,<sp/>50));</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d5/da0/classEL_1_1UnitTestAlg1_1aa5de81ca804a6454961c6a97bc63b7d2" kindref="member" tooltip="description: whether I create an output n-tuple">makeOutput</ref>)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TFile<sp/>*file<sp/>=<sp/><ref refid="de/ddb/classEL_1_1Algorithm_1a36e05186cb50cc0e5929121d3f6b6053" kindref="member">wk</ref>()-&gt;getOutputFile<sp/>(</highlight><highlight class="stringliteral">&quot;out&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_tree<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TTree<sp/>(</highlight><highlight class="stringliteral">&quot;tree&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;test<sp/>output&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_tree-&gt;SetDirectory<sp/>(file);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_tree-&gt;Branch<sp/>(m_name.c_str(),<sp/>&amp;m_value,<sp/>(m_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/I&quot;</highlight><highlight class="normal">).c_str());</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>m_hasInitialize<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>StatusCode<sp/>UnitTestAlg1<sp/>::</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>fileExecute<sp/>()</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_CHANGE_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>getCallbacks()-&gt;Fill<sp/>(CB_FILE_EXECUTE);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_ASSERT_SOFT<sp/>(m_hasHistInitialize);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/ddb/classEL_1_1Algorithm_1a03872c24f8a637ba069b61d847ad557e" kindref="member" tooltip="get the histogram with the given name">hist</ref><sp/>(</highlight><highlight class="stringliteral">&quot;file_executes&quot;</highlight><highlight class="normal">)-&gt;Fill<sp/>(0);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>StatusCode<sp/>UnitTestAlg1<sp/>::</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>execute<sp/>()</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_CHANGE_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>getCallbacks()-&gt;Fill<sp/>(CB_EXECUTE);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_ASSERT_SOFT<sp/>(m_hasInitialize);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ROOTCORE_PACKAGE_D3PDReader</highlight></codeline>
<codeline lineno="194"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>m_value<sp/>=<sp/>m_event-&gt;el.n();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="196"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>m_branch-&gt;GetEntry<sp/>(<ref refid="de/ddb/classEL_1_1Algorithm_1a36e05186cb50cc0e5929121d3f6b6053" kindref="member">wk</ref>()-&gt;treeEntry());</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="198"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/ddb/classEL_1_1Algorithm_1a03872c24f8a637ba069b61d847ad557e" kindref="member" tooltip="get the histogram with the given name">hist</ref>(m_name)-&gt;Fill<sp/>(m_value);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d5/da0/classEL_1_1UnitTestAlg1_1aa5de81ca804a6454961c6a97bc63b7d2" kindref="member" tooltip="description: whether I create an output n-tuple">makeOutput</ref>)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_tree-&gt;Fill<sp/>();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ROOTCORE_PACKAGE_AsgTools</highlight></codeline>
<codeline lineno="203"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/ddb/classEL_1_1Algorithm_1a767c1725616f14d347b79002d755bf55" kindref="member" tooltip="set the message level for the message stream for this object">setMsgLevel</ref><sp/>(MSG::INFO);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++<sp/>m_calls<sp/>&lt;<sp/>3)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_INFO<sp/>(</highlight><highlight class="stringliteral">&quot;message<sp/>test&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="207"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>StatusCode<sp/>UnitTestAlg1<sp/>::</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>finalize<sp/>()</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_CHANGE_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>getCallbacks()-&gt;Fill<sp/>(CB_FINALIZE);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_ASSERT_SOFT<sp/>(m_hasInitialize);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/ddb/classEL_1_1Algorithm_1a36e05186cb50cc0e5929121d3f6b6053" kindref="member">wk</ref>()-&gt;addOutput<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F<sp/>(</highlight><highlight class="stringliteral">&quot;beta/dir/hist&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;directory<sp/>test&quot;</highlight><highlight class="normal">,<sp/>10,<sp/>0,<sp/>10));</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/ddb/classEL_1_1Algorithm_1a36e05186cb50cc0e5929121d3f6b6053" kindref="member">wk</ref>()-&gt;addOutputList<sp/>(</highlight><highlight class="stringliteral">&quot;alpha&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TObjString<sp/>(</highlight><highlight class="stringliteral">&quot;alpha&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>StatusCode<sp/>UnitTestAlg1<sp/>::</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>histFinalize<sp/>()</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_CHANGE_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>getCallbacks()-&gt;Fill<sp/>(CB_HIST_FINALIZE);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_ASSERT_SOFT<sp/>(m_hasHistInitialize);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/ddb/classEL_1_1Algorithm_1a36e05186cb50cc0e5929121d3f6b6053" kindref="member">wk</ref>()-&gt;addOutput<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F<sp/>(</highlight><highlight class="stringliteral">&quot;beta/dir/hist&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;directory<sp/>test&quot;</highlight><highlight class="normal">,<sp/>10,<sp/>0,<sp/>10));</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/ddb/classEL_1_1Algorithm_1a36e05186cb50cc0e5929121d3f6b6053" kindref="member">wk</ref>()-&gt;addOutputList<sp/>(</highlight><highlight class="stringliteral">&quot;alpha&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TObjString<sp/>(</highlight><highlight class="stringliteral">&quot;alpha&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>TH1<sp/>*UnitTestAlg1<sp/>::</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>getCallbacks<sp/>()</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_callbacks<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_callbacks<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F<sp/>(</highlight><highlight class="stringliteral">&quot;callbacks&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;callbacks&quot;</highlight><highlight class="normal">,<sp/>CB_HIST_FINALIZE<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>CB_HIST_FINALIZE<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/ddb/classEL_1_1Algorithm_1a36e05186cb50cc0e5929121d3f6b6053" kindref="member">wk</ref>()-&gt;addOutput<sp/>(m_callbacks);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_callbacks;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/Root/UnitTestAlg1.cxx"/>
  </compounddef>
</doxygen>
