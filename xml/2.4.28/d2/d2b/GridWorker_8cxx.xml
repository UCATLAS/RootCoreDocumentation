<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d2/d2b/GridWorker_8cxx" kind="file">
    <compoundname>GridWorker.cxx</compoundname>
    <includes refid="d3/d16/GridWorker_8h" local="yes">EventLoopGrid/GridWorker.h</includes>
    <includes local="no">memory</includes>
    <includes local="no">iostream</includes>
    <includes local="no">exception</includes>
    <includes local="no">TFile.h</includes>
    <includes local="no">TTree.h</includes>
    <includes local="no">TCollection.h</includes>
    <includes refid="d3/dac/Assert_8h" local="yes">RootCoreUtils/Assert.h</includes>
    <includes refid="dd/db7/ThrowMsg_8h" local="yes">RootCoreUtils/ThrowMsg.h</includes>
    <includes refid="df/d9d/Sample_8h" local="yes">SampleHandler/Sample.h</includes>
    <includes refid="d7/d36/Algorithm_8h" local="yes">EventLoop/Algorithm.h</includes>
    <includes refid="d5/d80/Job_8h" local="yes">EventLoop/Job.h</includes>
    <includes refid="da/d9f/OutputStream_8h" local="yes">EventLoop/OutputStream.h</includes>
    <incdepgraph>
      <node id="130175">
        <label>SampleHandler/SampleHandler.h</label>
        <link refid="d2/da1/SampleHandler_8h_source"/>
        <childnode refid="130143" relation="include">
        </childnode>
        <childnode refid="130151" relation="include">
        </childnode>
        <childnode refid="130176" relation="include">
        </childnode>
        <childnode refid="130150" relation="include">
        </childnode>
        <childnode refid="130152" relation="include">
        </childnode>
        <childnode refid="130168" relation="include">
        </childnode>
      </node>
      <node id="130174">
        <label>EventLoop/Job.h</label>
        <link refid="d5/d80/Job_8h_source"/>
        <childnode refid="130149" relation="include">
        </childnode>
        <childnode refid="130152" relation="include">
        </childnode>
        <childnode refid="130175" relation="include">
        </childnode>
        <childnode refid="130142" relation="include">
        </childnode>
      </node>
      <node id="130139">
        <label>EventLoopGrid/GridWorker.h</label>
        <link refid="d3/d16/GridWorker_8h_source"/>
        <childnode refid="130140" relation="include">
        </childnode>
        <childnode refid="130141" relation="include">
        </childnode>
        <childnode refid="130142" relation="include">
        </childnode>
        <childnode refid="130148" relation="include">
        </childnode>
        <childnode refid="130149" relation="include">
        </childnode>
        <childnode refid="130154" relation="include">
        </childnode>
      </node>
      <node id="130141">
        <label>TList.h</label>
      </node>
      <node id="130173">
        <label>EventLoop/StatusCode.h</label>
        <link refid="d0/d16/EventLoop_2EventLoop_2StatusCode_8h_source"/>
        <childnode refid="130149" relation="include">
        </childnode>
      </node>
      <node id="130146">
        <label>RootCoreUtils/Deprecated.h</label>
        <link refid="d1/d0f/RootCoreUtils_2RootCoreUtils_2Deprecated_8h_source"/>
        <childnode refid="130145" relation="include">
        </childnode>
      </node>
      <node id="130140">
        <label>string</label>
      </node>
      <node id="130150">
        <label>map</label>
      </node>
      <node id="130162">
        <label>exception</label>
      </node>
      <node id="130156">
        <label>fstream</label>
      </node>
      <node id="130138">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopGrid/Root/GridWorker.cxx</label>
        <link refid="GridWorker.cxx"/>
        <childnode refid="130139" relation="include">
        </childnode>
        <childnode refid="130151" relation="include">
        </childnode>
        <childnode refid="130155" relation="include">
        </childnode>
        <childnode refid="130162" relation="include">
        </childnode>
        <childnode refid="130161" relation="include">
        </childnode>
        <childnode refid="130163" relation="include">
        </childnode>
        <childnode refid="130147" relation="include">
        </childnode>
        <childnode refid="130144" relation="include">
        </childnode>
        <childnode refid="130164" relation="include">
        </childnode>
        <childnode refid="130167" relation="include">
        </childnode>
        <childnode refid="130171" relation="include">
        </childnode>
        <childnode refid="130174" relation="include">
        </childnode>
        <childnode refid="130177" relation="include">
        </childnode>
      </node>
      <node id="130142">
        <label>SampleHandler/MetaObject.h</label>
        <link refid="d7/d50/MetaObject_8h_source"/>
        <childnode refid="130143" relation="include">
        </childnode>
        <childnode refid="130144" relation="include">
        </childnode>
        <childnode refid="130146" relation="include">
        </childnode>
        <childnode refid="130140" relation="include">
        </childnode>
        <childnode refid="130147" relation="include">
        </childnode>
      </node>
      <node id="130167">
        <label>SampleHandler/Sample.h</label>
        <link refid="df/d9d/Sample_8h_source"/>
        <childnode refid="130143" relation="include">
        </childnode>
        <childnode refid="130140" relation="include">
        </childnode>
        <childnode refid="130152" relation="include">
        </childnode>
        <childnode refid="130168" relation="include">
        </childnode>
        <childnode refid="130146" relation="include">
        </childnode>
        <childnode refid="130169" relation="include">
        </childnode>
      </node>
      <node id="130149">
        <label>EventLoop/Global.h</label>
        <link refid="d1/daf/EventLoop_2EventLoop_2Global_8h_source"/>
      </node>
      <node id="130158">
        <label>TROOT.h</label>
      </node>
      <node id="130168">
        <label>TObject.h</label>
      </node>
      <node id="130159">
        <label>TSystem.h</label>
      </node>
      <node id="130152">
        <label>vector</label>
      </node>
      <node id="130161">
        <label>TFile.h</label>
      </node>
      <node id="130157">
        <label>sstream</label>
      </node>
      <node id="130145">
        <label>RootCoreUtils/Global.h</label>
        <link refid="d6/d7f/RootCoreUtils_2RootCoreUtils_2Global_8h_source"/>
      </node>
      <node id="130166">
        <label>RootCoreUtils/MessageType.h</label>
        <link refid="dd/d02/MessageType_8h_source"/>
        <childnode refid="130145" relation="include">
        </childnode>
      </node>
      <node id="130153">
        <label>Rtypes.h</label>
      </node>
      <node id="130176">
        <label>iosfwd</label>
      </node>
      <node id="130155">
        <label>iostream</label>
      </node>
      <node id="130154">
        <label>EventLoopGrid/PandaRootTools.h</label>
        <link refid="db/d27/PandaRootTools_8h_source"/>
        <childnode refid="130152" relation="include">
        </childnode>
        <childnode refid="130140" relation="include">
        </childnode>
        <childnode refid="130155" relation="include">
        </childnode>
        <childnode refid="130156" relation="include">
        </childnode>
        <childnode refid="130157" relation="include">
        </childnode>
        <childnode refid="130158" relation="include">
        </childnode>
        <childnode refid="130159" relation="include">
        </childnode>
        <childnode refid="130160" relation="include">
        </childnode>
        <childnode refid="130161" relation="include">
        </childnode>
      </node>
      <node id="130169">
        <label>SampleHandler/TagList.h</label>
        <link refid="d2/de6/TagList_8h_source"/>
        <childnode refid="130143" relation="include">
        </childnode>
        <childnode refid="130170" relation="include">
        </childnode>
        <childnode refid="130140" relation="include">
        </childnode>
      </node>
      <node id="130148">
        <label>EventLoop/Worker.h</label>
        <link refid="dc/db3/Worker_8h_source"/>
        <childnode refid="130149" relation="include">
        </childnode>
        <childnode refid="130150" relation="include">
        </childnode>
        <childnode refid="130151" relation="include">
        </childnode>
        <childnode refid="130152" relation="include">
        </childnode>
        <childnode refid="130153" relation="include">
        </childnode>
        <childnode refid="130141" relation="include">
        </childnode>
        <childnode refid="130143" relation="include">
        </childnode>
      </node>
      <node id="130171">
        <label>EventLoop/Algorithm.h</label>
        <link refid="d7/d36/Algorithm_8h_source"/>
        <childnode refid="130149" relation="include">
        </childnode>
        <childnode refid="130172" relation="include">
        </childnode>
        <childnode refid="130173" relation="include">
        </childnode>
      </node>
      <node id="130172">
        <label>TNamed.h</label>
      </node>
      <node id="130160">
        <label>TString.h</label>
      </node>
      <node id="130165">
        <label>RootCoreUtils/PrintMsg.h</label>
        <link refid="d2/d5f/PrintMsg_8h_source"/>
        <childnode refid="130145" relation="include">
        </childnode>
        <childnode refid="130140" relation="include">
        </childnode>
        <childnode refid="130166" relation="include">
        </childnode>
      </node>
      <node id="130163">
        <label>TTree.h</label>
      </node>
      <node id="130164">
        <label>RootCoreUtils/ThrowMsg.h</label>
        <link refid="dd/db7/ThrowMsg_8h_source"/>
        <childnode refid="130145" relation="include">
        </childnode>
        <childnode refid="130165" relation="include">
        </childnode>
      </node>
      <node id="130170">
        <label>set</label>
      </node>
      <node id="130144">
        <label>RootCoreUtils/Assert.h</label>
        <link refid="d3/dac/Assert_8h_source"/>
        <childnode refid="130145" relation="include">
        </childnode>
      </node>
      <node id="130143">
        <label>SampleHandler/Global.h</label>
        <link refid="d3/df9/SampleHandler_2SampleHandler_2Global_8h_source"/>
      </node>
      <node id="130151">
        <label>memory</label>
      </node>
      <node id="130177">
        <label>EventLoop/OutputStream.h</label>
        <link refid="da/d9f/OutputStream_8h_source"/>
        <childnode refid="130149" relation="include">
        </childnode>
        <childnode refid="130152" relation="include">
        </childnode>
        <childnode refid="130168" relation="include">
        </childnode>
        <childnode refid="130142" relation="include">
        </childnode>
        <childnode refid="130175" relation="include">
        </childnode>
      </node>
      <node id="130147">
        <label>TCollection.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="d2/d2b/GridWorker_8cxx_1a4177205eb5572b67428e02d074bfed04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ClassImp</definition>
        <argsstring>(EL::GridWorker) namespace EL</argsstring>
        <name>ClassImp</name>
        <param>
          <type><ref refid="d3/d7a/classEL_1_1GridWorker" kindref="compound">EL::GridWorker</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopGrid/Root/GridWorker.cxx" line="22" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopGrid/Root/GridWorker.cxx" bodystart="19" bodyend="128"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;EventLoopGrid/GridWorker.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;exception&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TFile.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TTree.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TCollection.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;RootCoreUtils/Assert.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;RootCoreUtils/ThrowMsg.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SampleHandler/Sample.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;EventLoop/Algorithm.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;EventLoop/Job.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;EventLoop/OutputStream.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">ClassImp(<ref refid="d3/d7a/classEL_1_1GridWorker" kindref="compound">EL::GridWorker</ref>)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">namespace<sp/>EL</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GridWorker::testInvariant()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>GridWorker::GridWorker<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3a/classSH_1_1MetaObject" kindref="compound" tooltip="A class that manages meta-data to be associated with an object.">SH::MetaObject</ref><sp/>*meta,<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TList<sp/>*output,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TList&amp;<sp/>bigOutputs,<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TList&amp;<sp/>algs,<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>location,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/ddf/classPandaRootTools" kindref="compound">PandaRootTools</ref>&amp;<sp/>pandaTools)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>Worker(meta,<sp/>output),<sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_meta(meta),<sp/>m_location(location),<sp/>m_pandaTools(pandaTools)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">//Create<sp/>and<sp/>register<sp/>the<sp/>&quot;big&quot;<sp/>output<sp/>files<sp/>with<sp/>base<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TIter<sp/>itr(&amp;bigOutputs);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TObject<sp/>*obj<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((obj<sp/>=<sp/>itr()))<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/dfe/classEL_1_1OutputStream" kindref="compound">EL::OutputStream</ref><sp/>*os<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="d5/dfe/classEL_1_1OutputStream" kindref="compound">EL::OutputStream</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(obj);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(os)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>name</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>location<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>os-&gt;<ref refid="d5/dfe/classEL_1_1OutputStream_1a9ef5507e9336b95aace7e2086bc369d2" kindref="member">label</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addOutputFile<sp/>(os-&gt;<ref refid="d5/dfe/classEL_1_1OutputStream_1a9ef5507e9336b95aace7e2086bc369d2" kindref="member">label</ref>(),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TFile<sp/>(name.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;RECREATE&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>Bad<sp/>input&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">//Register<sp/>the<sp/>algorithms<sp/>with<sp/>base<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TIter<sp/>itr(&amp;algs);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TObject<sp/>*obj<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((obj<sp/>=<sp/>itr()))<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj-&gt;InheritsFrom(</highlight><highlight class="stringliteral">&quot;EL::Algorithm&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/ddb/classEL_1_1Algorithm" kindref="compound">EL::Algorithm</ref><sp/>*<sp/>alg<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="de/ddb/classEL_1_1Algorithm" kindref="compound">EL::Algorithm</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(obj);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alg)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addAlg(alg);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>Bad<sp/>input&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>Bad<sp/>input&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_NEW_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GridWorker::run()<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_CHANGE_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(TFile*<sp/>f<sp/>=<sp/>m_pandaTools.OpenNextFile();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>f<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>m_pandaTools.OpenNextFile())<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/d12/classEL_1_1Worker_1a967f58afb058264f474cca98d77350b9" kindref="member" tooltip="set the value of inputFile">setInputFile</ref><sp/>(f);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/d12/classEL_1_1Worker_1a5822faaac316f06b0b74b60a59d132c3" kindref="member">treeEntry</ref>(0);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/d12/classEL_1_1Worker_1a551253c77c0fbeaf9c4eb30f5d78db6e" kindref="member">algsChangeInput</ref>();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Long64_t<sp/>nEvents<sp/>=<sp/><ref refid="da/d12/classEL_1_1Worker_1a73f9bca159d9fd97d7052dd860d04350" kindref="member" tooltip="the number of events in the input file">inputFileNumEntries</ref>();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Running<sp/>loop<sp/>over<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nEvents<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>events\n&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Long64_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nEvents;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pandaTools.NotifyNewEvent();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d12/classEL_1_1Worker_1a5822faaac316f06b0b74b60a59d132c3" kindref="member">treeEntry</ref>(i);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/d12/classEL_1_1Worker_1a51d9eea50fe32a30805d40938c44a0ff" kindref="member">algsExecute</ref>();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Caught<sp/>exception<sp/>while<sp/>executing<sp/>algorithm:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>e.what()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_pandaTools.Fail();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Caught<sp/>exception<sp/>while<sp/>executing<sp/>algorithm:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>e<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_pandaTools.Fail();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Caught<sp/>unknown<sp/>exception<sp/>while<sp/>executing<sp/>algorithm&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_pandaTools.Fail();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f-&gt;Close();<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d12/classEL_1_1Worker_1aca4f6f0e6aa4702331963ca168d540a4" kindref="member">algsFinalize</ref>();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nEvents<sp/>=<sp/>m_pandaTools.GetEventsRead();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nFiles<sp/>=<sp/>m_pandaTools.GetFilesRead();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nLoop<sp/>finished.<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Read<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nEvents<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>events<sp/>in<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nFiles<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>files.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pandaTools.NotifyJobFinished();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoopGrid/Root/GridWorker.cxx"/>
  </compounddef>
</doxygen>
