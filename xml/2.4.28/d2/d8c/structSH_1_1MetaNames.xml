<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d2/d8c/structSH_1_1MetaNames" kind="struct" prot="public">
    <compoundname>SH::MetaNames</compoundname>
    <includes refid="d3/de7/MetaNames_8h" local="no">MetaNames.h</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="d2/d8c/structSH_1_1MetaNames_1a02124ff3df072047080118bfeb9ee93e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; SH::MetaNames::openRetries</definition>
        <argsstring>()</argsstring>
        <name>openRetries</name>
        <briefdescription>
<para>the number of retries for opening a file </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/MetaNames.h" line="29" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/MetaNames.cxx" bodystart="26" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="d2/d8c/structSH_1_1MetaNames_1a37e92baa5b456ab09dd1f7ff6a5da11c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned SH::MetaNames::openRetries_default</definition>
        <argsstring>()</argsstring>
        <name>openRetries_default</name>
        <briefdescription>
<para>the default value of <ref refid="d2/d8c/structSH_1_1MetaNames_1a02124ff3df072047080118bfeb9ee93e" kindref="member">openRetries</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/MetaNames.h" line="32" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/MetaNames.cxx" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="d2/d8c/structSH_1_1MetaNames_1a987582e32ab60af21b7378f09a72fed8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; SH::MetaNames::openRetriesWait</definition>
        <argsstring>()</argsstring>
        <name>openRetriesWait</name>
        <briefdescription>
<para>the amount of time (in seconds) to wait when doing retries </para>        </briefdescription>
        <detaileddescription>
<para>when an open fails this is the maximum number of seconds to wait, the actual time will be randomized. the rationale is that if the open failed because a hundred batch jobs try to open a file at the same time, then it is not very helpful if those hundred batch jobs retry all at the same time. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/MetaNames.h" line="43" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/MetaNames.cxx" bodystart="43" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="d2/d8c/structSH_1_1MetaNames_1a15de351ca91fbe89da7ccad0b05a6ebd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double SH::MetaNames::openRetriesWait_default</definition>
        <argsstring>()</argsstring>
        <name>openRetriesWait_default</name>
        <briefdescription>
<para>the default value of <ref refid="d2/d8c/structSH_1_1MetaNames_1a987582e32ab60af21b7378f09a72fed8" kindref="member">openRetriesWait</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/MetaNames.h" line="46" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/MetaNames.cxx" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="d2/d8c/structSH_1_1MetaNames_1ae554daf362699c9f386bef256f30ff7f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; SH::MetaNames::sampleName</definition>
        <argsstring>()</argsstring>
        <name>sampleName</name>
        <briefdescription>
<para>the name of the sample being processed </para>        </briefdescription>
        <detaileddescription>
<para>this gets set inside the <ref refid="dd/d5f/classSH_1_1Sample" kindref="compound">Sample</ref> accessor methods for the name. the point here is that normally you would access the sample name via the accessors, but if all you have is the sample meta-data you can use that to extract the name </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/MetaNames.h" line="55" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/MetaNames.cxx" bodystart="60" bodyend="64"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>the names of common meta-data </para>    </briefdescription>
    <detaileddescription>
<para>This is supposed to feed into the names in <ref refid="d7/d06/structSH_1_1MetaFields" kindref="compound">SH::MetaFields</ref> and <ref refid="da/dbb/classEL_1_1Job" kindref="compound">EL::Job</ref> as this uses static functions which have no load order dependencies. Over time it may also replace them. </para>    </detaileddescription>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/MetaNames.h" line="27" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/MetaNames.h" bodystart="26" bodyend="56"/>
    <listofallmembers>
      <member refid="d2/d8c/structSH_1_1MetaNames_1a02124ff3df072047080118bfeb9ee93e" prot="public" virt="non-virtual"><scope>SH::MetaNames</scope><name>openRetries</name></member>
      <member refid="d2/d8c/structSH_1_1MetaNames_1a37e92baa5b456ab09dd1f7ff6a5da11c" prot="public" virt="non-virtual"><scope>SH::MetaNames</scope><name>openRetries_default</name></member>
      <member refid="d2/d8c/structSH_1_1MetaNames_1a987582e32ab60af21b7378f09a72fed8" prot="public" virt="non-virtual"><scope>SH::MetaNames</scope><name>openRetriesWait</name></member>
      <member refid="d2/d8c/structSH_1_1MetaNames_1a15de351ca91fbe89da7ccad0b05a6ebd" prot="public" virt="non-virtual"><scope>SH::MetaNames</scope><name>openRetriesWait_default</name></member>
      <member refid="d2/d8c/structSH_1_1MetaNames_1ae554daf362699c9f386bef256f30ff7f" prot="public" virt="non-virtual"><scope>SH::MetaNames</scope><name>sampleName</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
