<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1" kind="class" prot="public">
    <compoundname>xAOD::ByteStreamAuxContainer_v1</compoundname>
    <basecompoundref refid="dc/d05/classSG_1_1IAuxStore" prot="public" virt="non-virtual">SG::IAuxStore</basecompoundref>
    <derivedcompoundref refid="d1/d46/classxAOD_1_1JetTrigAuxContainer__v1" prot="public" virt="non-virtual">xAOD::JetTrigAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d9/dd3/classxAOD_1_1TrigCompositeAuxContainer__v1" prot="public" virt="non-virtual">xAOD::TrigCompositeAuxContainer_v1</derivedcompoundref>
    <includes refid="d6/de0/ByteStreamAuxContainer__v1_8h" local="no">ByteStreamAuxContainer_v1.h</includes>
    <innerclass refid="d5/d57/structxAOD_1_1ByteStreamAuxContainer__v1_1_1TSAuxidSet" prot="private">xAOD::ByteStreamAuxContainer_v1::TSAuxidSet</innerclass>
      <sectiondef kind="user-defined">
      <header>Transient variables used to implement the IAuxStore interface</header>
      <description><para><anchor id="_1amgrp83189ca3c7b9c5ecbe76f0efd60167af"/> </para></description>
      <memberdef kind="typedef" id="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1aa6fe04ce7476182ea7ada22fedd5b533" prot="private" static="no">
        <type>AthContainers_detail::mutex</type>
        <definition>typedef AthContainers_detail::mutex xAOD::ByteStreamAuxContainer_v1::mutex_t</definition>
        <argsstring></argsstring>
        <name>mutex_t</name>
        <briefdescription>
<para>Mutex for multithread synchronization. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" line="169" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1aedbff1a20bd0f86bd1c33f57cf7450ea" prot="private" static="no">
        <type>AthContainers_detail::lock_guard&lt; mutex_t &gt;</type>
        <definition>typedef AthContainers_detail::lock_guard&lt;mutex_t&gt; xAOD::ByteStreamAuxContainer_v1::guard_t</definition>
        <argsstring></argsstring>
        <name>guard_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" line="170" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1a0b127fb89b920ed7a4a097b7877c2c35" prot="private" static="no" mutable="yes">
        <type><ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">auxid_set_t</ref></type>
        <definition>auxid_set_t xAOD::ByteStreamAuxContainer_v1::m_auxids</definition>
        <argsstring></argsstring>
        <name>m_auxids</name>
        <briefdescription>
<para>Internal list of auxiliary variables. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" line="155" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1a5c488304048751260990eac04692ed98" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="de/d12/classSG_1_1IAuxTypeVector" kindref="compound">SG::IAuxTypeVector</ref> * &gt;</type>
        <definition>std::vector&lt; SG::IAuxTypeVector* &gt; xAOD::ByteStreamAuxContainer_v1::m_staticVecs</definition>
        <argsstring></argsstring>
        <name>m_staticVecs</name>
        <briefdescription>
<para>Internal list of static managed variables. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" line="157" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1a0dd4eefe041def6caa69cf17b727a409" prot="private" static="no" mutable="yes">
        <type>std::vector&lt; <ref refid="de/d12/classSG_1_1IAuxTypeVector" kindref="compound">SG::IAuxTypeVector</ref> * &gt;</type>
        <definition>std::vector&lt; SG::IAuxTypeVector* &gt; xAOD::ByteStreamAuxContainer_v1::m_dynamicVecs</definition>
        <argsstring></argsstring>
        <name>m_dynamicVecs</name>
        <briefdescription>
<para>Internal list of dynamic managed variables. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" line="159" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1a75108cc46570eac763fa35e86c0b141c" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool xAOD::ByteStreamAuxContainer_v1::m_locked</definition>
        <argsstring></argsstring>
        <name>m_locked</name>
        <briefdescription>
<para>Has the container been locked? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" line="161" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1aab7dfff5fe29ed2eb37d093c516f301a" prot="private" static="no" mutable="no">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt;bool&gt; xAOD::ByteStreamAuxContainer_v1::m_isDecoration</definition>
        <argsstring></argsstring>
        <name>m_isDecoration</name>
        <briefdescription>
<para>Mark variables as decorations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" line="163" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1a576100236e2d39ba95cbfce2b76f724f" prot="private" static="no" mutable="yes">
        <type>size_t</type>
        <definition>size_t xAOD::ByteStreamAuxContainer_v1::m_tick</definition>
        <argsstring></argsstring>
        <name>m_tick</name>
        <briefdescription>
<para>Count changes to <computeroutput>m_auxids</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" line="166" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1a17bff509287047340e99d93240b767e8" prot="private" static="no" mutable="yes">
        <type>mutex_t</type>
        <definition>mutex_t xAOD::ByteStreamAuxContainer_v1::m_mutex</definition>
        <argsstring></argsstring>
        <name>m_mutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" line="171" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1a781592e3f12504321796d30b6e59d929" prot="private" static="no" mutable="yes">
        <type>AthContainers_detail::thread_specific_ptr&lt; TSAuxidSet &gt;</type>
        <definition>AthContainers_detail::thread_specific_ptr&lt;TSAuxidSet&gt; xAOD::ByteStreamAuxContainer_v1::m_tsAuxids</definition>
        <argsstring></argsstring>
        <name>m_tsAuxids</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" line="181" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Variables persisified into the ByteStream</header>
      <description><para><anchor id="_1amgrp2e5c17ff5acf799e083da39c9af48989"/> </para></description>
      <memberdef kind="variable" id="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1ae27f2cf9b15c97705cd653b4bca39d7e" prot="private" static="no" mutable="yes">
        <type>std::map&lt; std::string, std::vector&lt; int &gt; &gt;</type>
        <definition>std::map&lt; std::string, std::vector&lt; int &gt; &gt; xAOD::ByteStreamAuxContainer_v1::m_int</definition>
        <argsstring></argsstring>
        <name>m_int</name>
        <briefdescription>
<para>Variable holding integer auxiliary variables. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" line="141" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1a804ecb5e65286e63a6dbc8ad34437e56" prot="private" static="no" mutable="yes">
        <type>std::map&lt; std::string, std::vector&lt; float &gt; &gt;</type>
        <definition>std::map&lt; std::string, std::vector&lt; float &gt; &gt; xAOD::ByteStreamAuxContainer_v1::m_float</definition>
        <argsstring></argsstring>
        <name>m_float</name>
        <briefdescription>
<para>Variable holding float auxiliary variables. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" line="143" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1aa0c01d6d7fc93e18a7fe4637c6e7e3a1" prot="private" static="no" mutable="yes">
        <type>std::map&lt; std::string, std::vector&lt; std::vector&lt; int &gt; &gt; &gt;</type>
        <definition>std::map&lt; std::string, std::vector&lt; std::vector&lt; int &gt; &gt; &gt; xAOD::ByteStreamAuxContainer_v1::m_vecInt</definition>
        <argsstring></argsstring>
        <name>m_vecInt</name>
        <briefdescription>
<para>Variable holding vector of integer auxiliary variables. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" line="145" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1affa5b261645da6125c5dee9ccca14167" prot="private" static="no" mutable="yes">
        <type>std::map&lt; std::string, std::vector&lt; std::vector&lt; float &gt; &gt; &gt;</type>
        <definition>std::map&lt; std::string, std::vector&lt; std::vector&lt; float &gt; &gt; &gt; xAOD::ByteStreamAuxContainer_v1::m_vecFloat</definition>
        <argsstring></argsstring>
        <name>m_vecFloat</name>
        <briefdescription>
<para>Variable holding vector of float auxiliary variables. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" line="147" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Functions implementing the SG::IConstAuxStore interface</header>
      <description><para><anchor id="_1amgrp923490749c1bddf7b538181b97b1ea70"/> </para></description>
      <memberdef kind="function" id="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1acb09a73eb810b96f28b9c656252a2617" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const void *</type>
        <definition>const void * xAOD::ByteStreamAuxContainer_v1::getData</definition>
        <argsstring>(auxid_t auxid) const </argsstring>
        <name>getData</name>
        <param>
          <type><ref refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1adea2c09eda2c63736a7dfd7bba81a91d" kindref="member">auxid_t</ref></type>
          <declname>auxid</declname>
        </param>
        <briefdescription>
<para>Get a pointer to a given array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" line="67" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/Root/ByteStreamAuxContainer_v1.cxx" bodystart="87" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1aac8036aab82ad707e007dfc5a002a177" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">auxid_set_t</ref> &amp;</type>
        <definition>const ByteStreamAuxContainer_v1::auxid_set_t &amp; xAOD::ByteStreamAuxContainer_v1::getAuxIDs</definition>
        <argsstring>() const </argsstring>
        <name>getAuxIDs</name>
        <reimplements refid="d3/dd5/classSG_1_1IConstAuxStore_1a3be9ddcb2b1198c3cab03c7b94764a3d">getAuxIDs</reimplements>
        <briefdescription>
<para>Get the types(names) of variables handled by this container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" line="70" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/Root/ByteStreamAuxContainer_v1.cxx" bodystart="110" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1ab95842c5cd106ba74ac11546794cabb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void *</type>
        <definition>void * xAOD::ByteStreamAuxContainer_v1::getDecoration</definition>
        <argsstring>(auxid_t auxid, size_t size, size_t capacity)</argsstring>
        <name>getDecoration</name>
        <param>
          <type><ref refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1adea2c09eda2c63736a7dfd7bba81a91d" kindref="member">auxid_t</ref></type>
          <declname>auxid</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>capacity</declname>
        </param>
        <briefdescription>
<para>Get a pointer to a given array, as a decoration. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" line="73" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/Root/ByteStreamAuxContainer_v1.cxx" bodystart="117" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1a108f8a20ae313c2892d5634fb57c26a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void xAOD::ByteStreamAuxContainer_v1::lock</definition>
        <argsstring>()</argsstring>
        <name>lock</name>
        <reimplements refid="d3/dd5/classSG_1_1IConstAuxStore_1a6bf19cb8961665a0d4672e2d4f719aa5">lock</reimplements>
        <briefdescription>
<para>Lock the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" line="76" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/Root/ByteStreamAuxContainer_v1.cxx" bodystart="160" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1afbbc69f37ea3deeb325ee75c333a0691" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void xAOD::ByteStreamAuxContainer_v1::clearDecorations</definition>
        <argsstring>()</argsstring>
        <name>clearDecorations</name>
        <reimplements refid="d3/dd5/classSG_1_1IConstAuxStore_1ab3dec2e6bc75789344ec9d31c8b8a3c3">clearDecorations</reimplements>
        <briefdescription>
<para>Clear all decorations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" line="79" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/Root/ByteStreamAuxContainer_v1.cxx" bodystart="166" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1aff67d3e193675e3db96b061d55731e9d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>size_t xAOD::ByteStreamAuxContainer_v1::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <reimplements refid="d3/dd5/classSG_1_1IConstAuxStore_1af71be6076fcf09fd0f8c1d53e704548d">size</reimplements>
        <briefdescription>
<para>Get the size of the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" line="82" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/Root/ByteStreamAuxContainer_v1.cxx" bodystart="198" bodyend="217"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Functions implementing the SG::IAuxStore interface</header>
      <description><para><anchor id="_1amgrp44b120bee999133a29277c27a0f31e6d"/> </para></description>
      <memberdef kind="function" id="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1ad53b3de37cb608bd614ead141ae258ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void *</type>
        <definition>void * xAOD::ByteStreamAuxContainer_v1::getData</definition>
        <argsstring>(auxid_t auxid, size_t size, size_t capacity)</argsstring>
        <name>getData</name>
        <param>
          <type><ref refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1adea2c09eda2c63736a7dfd7bba81a91d" kindref="member">auxid_t</ref></type>
          <declname>auxid</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>capacity</declname>
        </param>
        <briefdescription>
<para>Get a pointer to a given array, creating the array if necessary. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" line="91" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/Root/ByteStreamAuxContainer_v1.cxx" bodystart="219" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1aab40d3e32288c275c03f765b22f4a1f9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">auxid_set_t</ref> &amp;</type>
        <definition>const ByteStreamAuxContainer_v1::auxid_set_t &amp; xAOD::ByteStreamAuxContainer_v1::getWritableAuxIDs</definition>
        <argsstring>() const </argsstring>
        <name>getWritableAuxIDs</name>
        <reimplements refid="dc/d05/classSG_1_1IAuxStore_1a691e17d3a91d2733af73a4c5ae17e625">getWritableAuxIDs</reimplements>
        <briefdescription>
<para>Return a set of writable data identifiers. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" line="94" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/Root/ByteStreamAuxContainer_v1.cxx" bodystart="246" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1a34e293b8697f457296c5139e34df5525" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void xAOD::ByteStreamAuxContainer_v1::resize</definition>
        <argsstring>(size_t size)</argsstring>
        <name>resize</name>
        <reimplements refid="dc/d05/classSG_1_1IAuxStore_1a3e35266b4688361e2c804b68b73892e0">resize</reimplements>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Resize the arrays to a given size. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" line="97" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/Root/ByteStreamAuxContainer_v1.cxx" bodystart="260" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1a1d1bd62ff30b8787ec94272a46ace83c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void xAOD::ByteStreamAuxContainer_v1::reserve</definition>
        <argsstring>(size_t size)</argsstring>
        <name>reserve</name>
        <reimplements refid="dc/d05/classSG_1_1IAuxStore_1a76c099cf5b1e88b8bdfebf4c014e4d1b">reserve</reimplements>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Reserve a given size for the arrays. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" line="99" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/Root/ByteStreamAuxContainer_v1.cxx" bodystart="281" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1a523b3bb76112af7ed31de312bb6dfed5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void xAOD::ByteStreamAuxContainer_v1::shift</definition>
        <argsstring>(size_t pos, ptrdiff_t offs)</argsstring>
        <name>shift</name>
        <reimplements refid="dc/d05/classSG_1_1IAuxStore_1abd4ea23e3b5eb58f8e747daaf2279068">shift</reimplements>
        <param>
          <type>size_t</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>ptrdiff_t</type>
          <declname>offs</declname>
        </param>
        <briefdescription>
<para>Shift the contents of the stored arrays. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" line="101" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/Root/ByteStreamAuxContainer_v1.cxx" bodystart="302" bodyend="321"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Functions managing the instance name of the container</header>
      <description><para><anchor id="_1amgrp7ac7d0ae987769343410b8f8ebd39e5a"/> </para></description>
      <memberdef kind="function" id="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1af130087b9f33d874ff163f5e4fb4c296" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * xAOD::ByteStreamAuxContainer_v1::name</definition>
        <argsstring>() const </argsstring>
        <name>name</name>
        <briefdescription>
<para>Get the name of the container instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" line="112" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/Root/ByteStreamAuxContainer_v1.cxx" bodystart="346" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1a33a77d04e43c0f6ced42e6932e16bd35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::ByteStreamAuxContainer_v1::setName</definition>
        <argsstring>(const char *name)</argsstring>
        <name>setName</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Set the name of the container instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" line="114" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/Root/ByteStreamAuxContainer_v1.cxx" bodystart="351" bodyend="355"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1adea2c09eda2c63736a7dfd7bba81a91d" prot="public" static="no">
        <type><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member">SG::auxid_t</ref></type>
        <definition>typedef SG::auxid_t xAOD::ByteStreamAuxContainer_v1::auxid_t</definition>
        <argsstring></argsstring>
        <name>auxid_t</name>
        <briefdescription>
<para>The aux ID type definition from IConstAuxStore. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" line="48" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1a070f5c11c6529144c92fcc4d8bfbdfba" prot="public" static="no">
        <type><ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">SG::auxid_set_t</ref></type>
        <definition>typedef SG::auxid_set_t xAOD::ByteStreamAuxContainer_v1::auxid_set_t</definition>
        <argsstring></argsstring>
        <name>auxid_set_t</name>
        <briefdescription>
<para>The aux ID set type definition from IConstAuxStore. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" line="50" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1a9aafedb84440345bb3d4466e8a7fd389" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string xAOD::ByteStreamAuxContainer_v1::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <briefdescription>
<para>Name of the container in memory. Set externally. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" line="186" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1a81ffe9fed0fdf9a4ffc73b61e8675831" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xAOD::ByteStreamAuxContainer_v1::ByteStreamAuxContainer_v1</definition>
        <argsstring>()</argsstring>
        <name>ByteStreamAuxContainer_v1</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" line="53" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/Root/ByteStreamAuxContainer_v1.cxx" bodystart="17" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1afc140177c985835c1759a55b7867b2a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xAOD::ByteStreamAuxContainer_v1::ByteStreamAuxContainer_v1</definition>
        <argsstring>(const ByteStreamAuxContainer_v1 &amp;parent)</argsstring>
        <name>ByteStreamAuxContainer_v1</name>
        <param>
          <type>const <ref refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1" kindref="compound">ByteStreamAuxContainer_v1</ref> &amp;</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" line="55" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/Root/ByteStreamAuxContainer_v1.cxx" bodystart="28" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1ab7fd9b0e8e39bf3aa97914baccddfa71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xAOD::ByteStreamAuxContainer_v1::~ByteStreamAuxContainer_v1</definition>
        <argsstring>()</argsstring>
        <name>~ByteStreamAuxContainer_v1</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" line="57" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/Root/ByteStreamAuxContainer_v1.cxx" bodystart="42" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1a4c82c3565e1509b816849982deb4c958" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1" kindref="compound">ByteStreamAuxContainer_v1</ref> &amp;</type>
        <definition>ByteStreamAuxContainer_v1 &amp; xAOD::ByteStreamAuxContainer_v1::operator=</definition>
        <argsstring>(const ByteStreamAuxContainer_v1 &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1" kindref="compound">ByteStreamAuxContainer_v1</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Assignment operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" line="61" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/Root/ByteStreamAuxContainer_v1.cxx" bodystart="59" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1aa5c8b6960e31c70df62357f5783685a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::ByteStreamAuxContainer_v1::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
<para>Function resetting the internal (cached) state of the object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" line="106" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/Root/ByteStreamAuxContainer_v1.cxx" bodystart="323" bodyend="344"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1ae493bcc31c59f8dc2de693c518df4793" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void xAOD::ByteStreamAuxContainer_v1::regAuxVar</definition>
        <argsstring>(const std::string &amp;name, std::vector&lt; T &gt; &amp;vec)</argsstring>
        <name>regAuxVar</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="d1/def/classT" kindref="compound">T</ref> &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Register one of the user defined persistent variables internally. </para>        </briefdescription>
        <detaileddescription>
<para>The user is expected to use this function inside the constructor of the derived class.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the variable. Same as the C++ variable&apos;s name. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vec</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d4/dc4/structA" kindref="compound">A</ref> reference to the auxiliary variable inside the object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" line="122" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.icc" bodystart="34" bodyend="62"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1aa61e51ca7846151f3d63f99a49bad464" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
        </templateparamlist>
        <type>void *</type>
        <definition>void * xAOD::ByteStreamAuxContainer_v1::getData1</definition>
        <argsstring>(auxid_t auxid, std::map&lt; std::string, std::vector&lt; T &gt; &gt; &amp;pers, size_t size, size_t capacity, bool quiet, bool forDecor) const </argsstring>
        <name>getData1</name>
        <param>
          <type><ref refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1adea2c09eda2c63736a7dfd7bba81a91d" kindref="member">auxid_t</ref></type>
          <declname>auxid</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, std::vector&lt; <ref refid="d1/def/classT" kindref="compound">T</ref> &gt; &gt; &amp;</type>
          <declname>pers</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>capacity</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>quiet</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forDecor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function retrieving a simple dynamic variable. If capacity &gt; 0, a new verable will be created if necessary.</para><para>Look for variable auxid in pers. If not found, create it if capacity != 0. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" line="131" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/Root/ByteStreamAuxContainer_v1.cxx" bodystart="361" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1a26873b0005ed5a697bc1e3e13d6c8400" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * xAOD::ByteStreamAuxContainer_v1::getData1</definition>
        <argsstring>(auxid_t auxid, size_t size, size_t capacity, bool quiet, bool forDecor) const </argsstring>
        <name>getData1</name>
        <param>
          <type><ref refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1adea2c09eda2c63736a7dfd7bba81a91d" kindref="member">auxid_t</ref></type>
          <declname>auxid</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>capacity</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>quiet</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forDecor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" line="135" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/Root/ByteStreamAuxContainer_v1.cxx" bodystart="427" bodyend="462"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Base class for dynamic auxiliary stores saved into ByteStream</para><para>The point of this class is to behave similarly to <ref refid="de/d65/classxAOD_1_1AuxContainerBase" kindref="compound">xAOD::AuxContainerBase</ref>. The trigger developers can develop their specific auxiliary store classes on top of this class. The base class can manage the storage of simple variable types, while the classes inheriting from it need to manage any specific variables that they want to store.</para><para><simplesect kind="author"><para>Attila Krasznahorkay &lt;<ulink url="mailto:Attila.Krasznahorkay@cern.ch">Attila.Krasznahorkay@cern.ch</ulink>&gt;</para></simplesect>
<simplesect kind="rcs"><title>Revision</title><para>645967 </para></simplesect>
<simplesect kind="rcs"><title>Date</title><para>2015-02-11 13:29:36 +0100 (Wed, 11 Feb 2015) </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="2809">
        <label>xAOD::JetTrigAuxContainer_v1</label>
        <link refid="d1/d46/classxAOD_1_1JetTrigAuxContainer__v1"/>
        <childnode refid="2806" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2806">
        <label>xAOD::ByteStreamAuxContainer_v1</label>
        <link refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1"/>
        <childnode refid="2807" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2808">
        <label>SG::IConstAuxStore</label>
        <link refid="d3/dd5/classSG_1_1IConstAuxStore"/>
      </node>
      <node id="2807">
        <label>SG::IAuxStore</label>
        <link refid="dc/d05/classSG_1_1IAuxStore"/>
        <childnode refid="2808" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2810">
        <label>xAOD::TrigCompositeAuxContainer_v1</label>
        <link refid="d9/dd3/classxAOD_1_1TrigCompositeAuxContainer__v1"/>
        <childnode refid="2806" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2818">
        <label>Internal::rehash_base&lt;Internal::prime_rehash_policy , hashtable&lt;Value , Value , Alloc , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="db/d2b/classInternal_1_1rehash__base"/>
      </node>
      <node id="2819">
        <label>Internal::hash_code_base&lt;Value , Value , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , cache_hash_code&gt;</label>
        <link refid="d0/d2e/classInternal_1_1hash__code__base"/>
      </node>
      <node id="2817">
        <label>SG::hashtable&lt; Value, Value, Alloc, Internal::identity&lt; Value &gt;, Pred, Hash, Internal::mod_range_hashing, Internal::default_ranged_hash, Internal::prime_rehash_policy, cache_hash_code, true, true &gt;</label>
        <link refid="de/d63/classSG_1_1hashtable"/>
        <childnode refid="2818" relation="public-inheritance">
        </childnode>
        <childnode refid="2819" relation="public-inheritance">
        </childnode>
        <childnode refid="2820" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2814">
        <label>string</label>
      </node>
      <node id="2811">
        <label>xAOD::ByteStreamAuxContainer_v1</label>
        <link refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1"/>
        <childnode refid="2812" relation="public-inheritance">
        </childnode>
        <childnode refid="2814" relation="usage">
          <edgelabel>m_name</edgelabel>
        </childnode>
        <childnode refid="2815" relation="usage">
          <edgelabel>m_mutex</edgelabel>
        </childnode>
        <childnode refid="2816" relation="usage">
          <edgelabel>m_auxids</edgelabel>
        </childnode>
      </node>
      <node id="2813">
        <label>SG::IConstAuxStore</label>
        <link refid="d3/dd5/classSG_1_1IConstAuxStore"/>
      </node>
      <node id="2812">
        <label>SG::IAuxStore</label>
        <link refid="dc/d05/classSG_1_1IAuxStore"/>
        <childnode refid="2813" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2816">
        <label>SG::unordered_set&lt; Value, Hash, Pred, Alloc, cache_hash_code &gt;</label>
        <link refid="dd/dac/classSG_1_1unordered__set"/>
        <childnode refid="2817" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2820">
        <label>Internal::map_base&lt;Value , Value , Internal::identity&lt; Value &gt; , unique_keys, hashtable&lt;Value , Value , Alloc , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="d1/d54/classInternal_1_1map__base"/>
      </node>
      <node id="2815">
        <label>mutex</label>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" line="44" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/xAODTrigger/versions/ByteStreamAuxContainer_v1.h" bodystart="39" bodyend="188"/>
    <listofallmembers>
      <member refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1a070f5c11c6529144c92fcc4d8bfbdfba" prot="public" virt="non-virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>auxid_set_t</name></member>
      <member refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1adea2c09eda2c63736a7dfd7bba81a91d" prot="public" virt="non-virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>auxid_t</name></member>
      <member refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1a81ffe9fed0fdf9a4ffc73b61e8675831" prot="public" virt="non-virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>ByteStreamAuxContainer_v1</name></member>
      <member refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1afc140177c985835c1759a55b7867b2a1" prot="public" virt="non-virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>ByteStreamAuxContainer_v1</name></member>
      <member refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1afbbc69f37ea3deeb325ee75c333a0691" prot="public" virt="virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>clearDecorations</name></member>
      <member refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1aac8036aab82ad707e007dfc5a002a177" prot="public" virt="virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>getAuxIDs</name></member>
      <member refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1acb09a73eb810b96f28b9c656252a2617" prot="public" virt="virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>getData</name></member>
      <member refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1ad53b3de37cb608bd614ead141ae258ea" prot="public" virt="virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>getData</name></member>
      <member refid="dc/d05/classSG_1_1IAuxStore_1a0a6b90ed812993712727c76b64953c48" prot="public" virt="pure-virtual" ambiguityscope="SG::IAuxStore::"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>getData</name></member>
      <member refid="d3/dd5/classSG_1_1IConstAuxStore_1aa73e6e5474cdc0d38fe3367740876c59" prot="public" virt="pure-virtual" ambiguityscope="SG::IConstAuxStore::"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>getData</name></member>
      <member refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1aa61e51ca7846151f3d63f99a49bad464" prot="private" virt="non-virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>getData1</name></member>
      <member refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1a26873b0005ed5a697bc1e3e13d6c8400" prot="private" virt="non-virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>getData1</name></member>
      <member refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1ab95842c5cd106ba74ac11546794cabb5" prot="public" virt="virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>getDecoration</name></member>
      <member refid="d3/dd5/classSG_1_1IConstAuxStore_1a96728593e3bc1da60d3bdd28291969f0" prot="public" virt="pure-virtual" ambiguityscope="SG::IAuxStore::"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>getDecoration</name></member>
      <member refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1aab40d3e32288c275c03f765b22f4a1f9" prot="public" virt="virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>getWritableAuxIDs</name></member>
      <member refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1aedbff1a20bd0f86bd1c33f57cf7450ea" prot="private" virt="non-virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>guard_t</name></member>
      <member refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1a108f8a20ae313c2892d5634fb57c26a4" prot="public" virt="virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>lock</name></member>
      <member refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1a0b127fb89b920ed7a4a097b7877c2c35" prot="private" virt="non-virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>m_auxids</name></member>
      <member refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1a0dd4eefe041def6caa69cf17b727a409" prot="private" virt="non-virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>m_dynamicVecs</name></member>
      <member refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1a804ecb5e65286e63a6dbc8ad34437e56" prot="private" virt="non-virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>m_float</name></member>
      <member refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1ae27f2cf9b15c97705cd653b4bca39d7e" prot="private" virt="non-virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>m_int</name></member>
      <member refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1aab7dfff5fe29ed2eb37d093c516f301a" prot="private" virt="non-virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>m_isDecoration</name></member>
      <member refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1a75108cc46570eac763fa35e86c0b141c" prot="private" virt="non-virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>m_locked</name></member>
      <member refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1a17bff509287047340e99d93240b767e8" prot="private" virt="non-virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>m_mutex</name></member>
      <member refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1a9aafedb84440345bb3d4466e8a7fd389" prot="private" virt="non-virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>m_name</name></member>
      <member refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1a5c488304048751260990eac04692ed98" prot="private" virt="non-virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>m_staticVecs</name></member>
      <member refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1a576100236e2d39ba95cbfce2b76f724f" prot="private" virt="non-virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>m_tick</name></member>
      <member refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1a781592e3f12504321796d30b6e59d929" prot="private" virt="non-virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>m_tsAuxids</name></member>
      <member refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1affa5b261645da6125c5dee9ccca14167" prot="private" virt="non-virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>m_vecFloat</name></member>
      <member refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1aa0c01d6d7fc93e18a7fe4637c6e7e3a1" prot="private" virt="non-virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>m_vecInt</name></member>
      <member refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1aa6fe04ce7476182ea7ada22fedd5b533" prot="private" virt="non-virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>mutex_t</name></member>
      <member refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1af130087b9f33d874ff163f5e4fb4c296" prot="public" virt="non-virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>name</name></member>
      <member refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1a4c82c3565e1509b816849982deb4c958" prot="public" virt="non-virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>operator=</name></member>
      <member refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1ae493bcc31c59f8dc2de693c518df4793" prot="protected" virt="non-virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>regAuxVar</name></member>
      <member refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1a1d1bd62ff30b8787ec94272a46ace83c" prot="public" virt="virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>reserve</name></member>
      <member refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1aa5c8b6960e31c70df62357f5783685a4" prot="public" virt="non-virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>reset</name></member>
      <member refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1a34e293b8697f457296c5139e34df5525" prot="public" virt="virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>resize</name></member>
      <member refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1a33a77d04e43c0f6ced42e6932e16bd35" prot="public" virt="non-virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>setName</name></member>
      <member refid="dc/d05/classSG_1_1IAuxStore_1a371646fff1258a9f81b35d26eca3ac45" prot="public" virt="virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>setOption</name></member>
      <member refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1a523b3bb76112af7ed31de312bb6dfed5" prot="public" virt="virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>shift</name></member>
      <member refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1aff67d3e193675e3db96b061d55731e9d" prot="public" virt="virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>size</name></member>
      <member refid="d2/d18/classxAOD_1_1ByteStreamAuxContainer__v1_1ab7fd9b0e8e39bf3aa97914baccddfa71" prot="public" virt="non-virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>~ByteStreamAuxContainer_v1</name></member>
      <member refid="d3/dd5/classSG_1_1IConstAuxStore_1a2acc9ded5fe9a64c8f508d3c0d7431a5" prot="public" virt="virtual"><scope>xAOD::ByteStreamAuxContainer_v1</scope><name>~IConstAuxStore</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
