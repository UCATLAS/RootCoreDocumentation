<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d2/d61/InDetTrackCut_8h" kind="file">
    <compoundname>InDetTrackCut.h</compoundname>
    <includes refid="d6/d4b/InDetTrackAccessor_8h" local="yes">InDetTrackAccessor.h</includes>
    <includes local="no">map</includes>
    <includes local="no">array</includes>
    <includedby refid="d4/da9/InDetTrackCut_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/InDetTrackSelectionTool/Root/InDetTrackCut.cxx</includedby>
    <includedby refid="db/dd4/InDetTrackSelectionTool_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/InDetTrackSelectionTool/Root/InDetTrackSelectionTool.cxx</includedby>
    <incdepgraph>
      <node id="137214">
        <label>list</label>
      </node>
      <node id="137223">
        <label>AthContainers/tools/DVL_algorithms.icc</label>
        <link refid="df/daa/DVL__algorithms_8icc"/>
        <childnode refid="137208" relation="include">
        </childnode>
        <childnode refid="137215" relation="include">
        </childnode>
        <childnode refid="137199" relation="include">
        </childnode>
        <childnode refid="137204" relation="include">
        </childnode>
        <childnode refid="137145" relation="include">
        </childnode>
      </node>
      <node id="137208">
        <label>AthContainers/tools/DVLNoBase.h</label>
        <link refid="d7/d92/DVLNoBase_8h"/>
      </node>
      <node id="137178">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="137230">
        <label>AthContainers/tools/DVLDataBucket.h</label>
        <link refid="d4/d16/DVLDataBucket_8h"/>
        <childnode refid="137231" relation="include">
        </childnode>
        <childnode refid="137209" relation="include">
        </childnode>
        <childnode refid="137152" relation="include">
        </childnode>
        <childnode refid="137232" relation="include">
        </childnode>
      </node>
      <node id="137195">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="137144" relation="include">
        </childnode>
        <childnode refid="137146" relation="include">
        </childnode>
        <childnode refid="137152" relation="include">
        </childnode>
        <childnode refid="137153" relation="include">
        </childnode>
      </node>
      <node id="137120">
        <label>AsgTools/IAsgTool.h</label>
        <link refid="df/dd4/IAsgTool_8h_source"/>
        <childnode refid="137113" relation="include">
        </childnode>
        <childnode refid="137109" relation="include">
        </childnode>
        <childnode refid="137121" relation="include">
        </childnode>
        <childnode refid="137122" relation="include">
        </childnode>
      </node>
      <node id="137197">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="137161" relation="include">
        </childnode>
        <childnode refid="137142" relation="include">
        </childnode>
        <childnode refid="137198" relation="include">
        </childnode>
        <childnode refid="137162" relation="include">
        </childnode>
      </node>
      <node id="137196">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="137125">
        <label>EventPrimitives/EventPrimitives.h</label>
        <link refid="d1/d54/EventPrimitives_8h_source"/>
        <childnode refid="137126" relation="include">
        </childnode>
        <childnode refid="137127" relation="include">
        </childnode>
        <childnode refid="137128" relation="include">
        </childnode>
      </node>
      <node id="137151">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="137153">
        <label>functional</label>
      </node>
      <node id="137205">
        <label>boost/version.hpp</label>
      </node>
      <node id="137150">
        <label>limits</label>
      </node>
      <node id="137198">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="137176">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="137122">
        <label>GaudiKernel/IAlgTool.h</label>
      </node>
      <node id="137147">
        <label>iterator</label>
      </node>
      <node id="137163">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="137113" relation="include">
        </childnode>
        <childnode refid="137164" relation="include">
        </childnode>
      </node>
      <node id="137229">
        <label>SGTools/ClassName.h</label>
      </node>
      <node id="137235">
        <label>AthContainers/DataVector.icc</label>
        <link refid="da/de6/DataVector_8icc"/>
        <childnode refid="137236" relation="include">
        </childnode>
        <childnode refid="137203" relation="include">
        </childnode>
        <childnode refid="137150" relation="include">
        </childnode>
        <childnode refid="137153" relation="include">
        </childnode>
        <childnode refid="137237" relation="include">
        </childnode>
      </node>
      <node id="137140">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="137141" relation="include">
        </childnode>
        <childnode refid="137154" relation="include">
        </childnode>
        <childnode refid="137155" relation="include">
        </childnode>
        <childnode refid="137156" relation="include">
        </childnode>
        <childnode refid="137113" relation="include">
        </childnode>
      </node>
      <node id="137165">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="137166" relation="include">
        </childnode>
        <childnode refid="137148" relation="include">
        </childnode>
      </node>
      <node id="137132">
        <label>stdint.h</label>
      </node>
      <node id="137215">
        <label>AthContainers/tools/DVLCast.h</label>
        <link refid="df/d5c/DVLCast_8h"/>
        <childnode refid="137150" relation="include">
        </childnode>
        <childnode refid="137216" relation="include">
        </childnode>
        <childnode refid="137156" relation="include">
        </childnode>
        <childnode refid="137148" relation="include">
        </childnode>
        <childnode refid="137142" relation="include">
        </childnode>
      </node>
      <node id="137183">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="137142" relation="include">
        </childnode>
        <childnode refid="137156" relation="include">
        </childnode>
      </node>
      <node id="137158">
        <label>AthContainers/IndexTrackingPolicy.h</label>
        <link refid="d0/da5/IndexTrackingPolicy_8h"/>
      </node>
      <node id="137250">
        <label>Eigen/Geometry</label>
      </node>
      <node id="137136">
        <label>RVersion.h</label>
      </node>
      <node id="137143">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="137144" relation="include">
        </childnode>
        <childnode refid="137152" relation="include">
        </childnode>
        <childnode refid="137153" relation="include">
        </childnode>
      </node>
      <node id="137115">
        <label>AthenaBaseComps/AthMsgStreamMacros.h</label>
      </node>
      <node id="137149">
        <label>cmath</label>
      </node>
      <node id="137202">
        <label>cassert</label>
      </node>
      <node id="137206">
        <label>boost/mpl/if.hpp</label>
      </node>
      <node id="137225">
        <label>boost/static_assert.hpp</label>
      </node>
      <node id="137155">
        <label>stdexcept</label>
      </node>
      <node id="137112">
        <label>AsgTools/MsgLevel.h</label>
        <link refid="de/d80/MsgLevel_8h"/>
        <childnode refid="137113" relation="include">
        </childnode>
        <childnode refid="137109" relation="include">
        </childnode>
        <childnode refid="137114" relation="include">
        </childnode>
      </node>
      <node id="137179">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="137127">
        <label>Eigen/Core</label>
      </node>
      <node id="137212">
        <label>boost/type_traits/is_pointer.hpp</label>
      </node>
      <node id="137242">
        <label>xAODTracking/VertexContainerFwd.h</label>
        <link refid="d0/dc4/VertexContainerFwd_8h_source"/>
        <childnode refid="137139" relation="include">
        </childnode>
        <childnode refid="137243" relation="include">
        </childnode>
      </node>
      <node id="137252">
        <label>xAODTracking/TrackParticleContainerFwd.h</label>
        <link refid="de/dea/TrackParticleContainerFwd_8h_source"/>
        <childnode refid="137139" relation="include">
        </childnode>
        <childnode refid="137253" relation="include">
        </childnode>
        <childnode refid="137254" relation="include">
        </childnode>
      </node>
      <node id="137106">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/InDetTrackSelectionTool/src/InDetTrackCut.h</label>
        <link refid="InDetTrackCut.h"/>
        <childnode refid="137107" relation="include">
        </childnode>
        <childnode refid="137264" relation="include">
        </childnode>
        <childnode refid="137265" relation="include">
        </childnode>
      </node>
      <node id="137220">
        <label>boost/iterator/iterator_adaptor.hpp</label>
      </node>
      <node id="137239">
        <label>TLorentzVector.h</label>
      </node>
      <node id="137109">
        <label>AsgTools/AsgToolsConf.h</label>
        <link refid="df/db7/AsgToolsConf_8h_source"/>
      </node>
      <node id="137113">
        <label>string</label>
      </node>
      <node id="137160">
        <label>AthContainers/AuxVectorData.h</label>
        <link refid="d9/df2/AuxVectorData_8h"/>
        <childnode refid="137141" relation="include">
        </childnode>
        <childnode refid="137161" relation="include">
        </childnode>
        <childnode refid="137163" relation="include">
        </childnode>
        <childnode refid="137165" relation="include">
        </childnode>
        <childnode refid="137167" relation="include">
        </childnode>
        <childnode refid="137169" relation="include">
        </childnode>
        <childnode refid="137170" relation="include">
        </childnode>
        <childnode refid="137171" relation="include">
        </childnode>
        <childnode refid="137166" relation="include">
        </childnode>
        <childnode refid="137146" relation="include">
        </childnode>
        <childnode refid="137148" relation="include">
        </childnode>
        <childnode refid="137172" relation="include">
        </childnode>
        <childnode refid="137173" relation="include">
        </childnode>
        <childnode refid="137174" relation="include">
        </childnode>
        <childnode refid="137180" relation="include">
        </childnode>
      </node>
      <node id="137182">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="137142" relation="include">
        </childnode>
        <childnode refid="137156" relation="include">
        </childnode>
      </node>
      <node id="137130">
        <label>versions/TrackParticle_v1.h</label>
        <link refid="d2/d7f/TrackParticle__v1_8h_source"/>
        <childnode refid="137131" relation="include">
        </childnode>
        <childnode refid="137132" relation="include">
        </childnode>
        <childnode refid="137133" relation="include">
        </childnode>
        <childnode refid="137139" relation="include">
        </childnode>
        <childnode refid="137238" relation="include">
        </childnode>
        <childnode refid="137124" relation="include">
        </childnode>
        <childnode refid="137242" relation="include">
        </childnode>
        <childnode refid="137244" relation="include">
        </childnode>
        <childnode refid="137245" relation="include">
        </childnode>
      </node>
      <node id="137172">
        <label>AthContainers/tools/likely.h</label>
        <link refid="d6/dd6/likely_8h"/>
      </node>
      <node id="137217">
        <label>AthContainers/tools/DVLIterator.h</label>
        <link refid="d3/dc7/DVLIterator_8h_source"/>
        <childnode refid="137157" relation="include">
        </childnode>
        <childnode refid="137215" relation="include">
        </childnode>
        <childnode refid="137218" relation="include">
        </childnode>
        <childnode refid="137220" relation="include">
        </childnode>
        <childnode refid="137205" relation="include">
        </childnode>
        <childnode refid="137147" relation="include">
        </childnode>
        <childnode refid="137148" relation="include">
        </childnode>
      </node>
      <node id="137231">
        <label>SGTools/DataBucket.h</label>
      </node>
      <node id="137264">
        <label>map</label>
      </node>
      <node id="137232">
        <label>AthContainers/tools/DVLDataBucket.icc</label>
        <link refid="d3/d21/DVLDataBucket_8icc"/>
        <childnode refid="137233" relation="include">
        </childnode>
      </node>
      <node id="137233">
        <label>SGTools/IRegisterTransient.h</label>
      </node>
      <node id="137137">
        <label>RootMetaSelection.h</label>
      </node>
      <node id="137192">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="137251">
        <label>VxVertex/VxTrackAtVertex.h</label>
      </node>
      <node id="137222">
        <label>AthContainers/tools/DVL_algorithms.h</label>
        <link refid="d0/d7a/DVL__algorithms_8h"/>
        <childnode refid="137217" relation="include">
        </childnode>
        <childnode refid="137147" relation="include">
        </childnode>
        <childnode refid="137145" relation="include">
        </childnode>
        <childnode refid="137223" relation="include">
        </childnode>
      </node>
      <node id="137173">
        <label>AthContainers/tools/assume.h</label>
        <link refid="d2/d20/assume_8h"/>
      </node>
      <node id="137110">
        <label>AsgTools/Check.h</label>
        <link refid="da/d02/Check_8h_source"/>
        <childnode refid="137109" relation="include">
        </childnode>
        <childnode refid="137111" relation="include">
        </childnode>
      </node>
      <node id="137189">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="137218">
        <label>AthContainers/tools/ElementProxy.h</label>
        <link refid="db/d26/ElementProxy_8h"/>
        <childnode refid="137157" relation="include">
        </childnode>
        <childnode refid="137135" relation="include">
        </childnode>
        <childnode refid="137152" relation="include">
        </childnode>
        <childnode refid="137219" relation="include">
        </childnode>
      </node>
      <node id="137200">
        <label>AthContainersInterfaces/IAuxElement.h</label>
        <link refid="dd/d7a/IAuxElement_8h"/>
      </node>
      <node id="137114">
        <label>GaudiKernel/IMessageSvc.h</label>
      </node>
      <node id="137135">
        <label>AthLinks/tools/selection_ns.h</label>
        <link refid="d3/dec/selection__ns_8h"/>
        <childnode refid="137136" relation="include">
        </childnode>
        <childnode refid="137137" relation="include">
        </childnode>
      </node>
      <node id="137170">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="137177">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="137254">
        <label>xAODTracking/TrackParticleFwd.h</label>
        <link refid="d1/dc4/TrackParticleFwd_8h_source"/>
      </node>
      <node id="137216">
        <label>limits.h</label>
      </node>
      <node id="137210">
        <label>AthContainers/tools/ClassID.h</label>
        <link refid="de/de2/ClassID_8h"/>
        <childnode refid="137211" relation="include">
        </childnode>
      </node>
      <node id="137187">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="137163" relation="include">
        </childnode>
        <childnode refid="137150" relation="include">
        </childnode>
        <childnode refid="137132" relation="include">
        </childnode>
        <childnode refid="137188" relation="include">
        </childnode>
      </node>
      <node id="137141">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="137142" relation="include">
        </childnode>
        <childnode refid="137143" relation="include">
        </childnode>
      </node>
      <node id="137134">
        <label>AthLinks/ElementLinkBase.h</label>
        <link refid="d0/d16/ElementLinkBase_8h_source"/>
        <childnode refid="137132" relation="include">
        </childnode>
      </node>
      <node id="137128">
        <label>Eigen/Dense</label>
      </node>
      <node id="137144">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="137145" relation="include">
        </childnode>
        <childnode refid="137146" relation="include">
        </childnode>
        <childnode refid="137147" relation="include">
        </childnode>
        <childnode refid="137142" relation="include">
        </childnode>
        <childnode refid="137148" relation="include">
        </childnode>
        <childnode refid="137149" relation="include">
        </childnode>
        <childnode refid="137150" relation="include">
        </childnode>
        <childnode refid="137113" relation="include">
        </childnode>
        <childnode refid="137151" relation="include">
        </childnode>
      </node>
      <node id="137203">
        <label>AthContainers/tools/ATHCONTAINERS_ASSERT.h</label>
        <link refid="de/d6b/ATHCONTAINERS__ASSERT_8h"/>
        <childnode refid="137202" relation="include">
        </childnode>
      </node>
      <node id="137238">
        <label>xAODBase/IParticle.h</label>
        <link refid="d5/dac/IParticle_8h_source"/>
        <childnode refid="137239" relation="include">
        </childnode>
        <childnode refid="137199" relation="include">
        </childnode>
        <childnode refid="137240" relation="include">
        </childnode>
        <childnode refid="137198" relation="include">
        </childnode>
      </node>
      <node id="137240">
        <label>ObjectType.h</label>
        <link refid="d8/d04/ObjectType_8h_source"/>
        <childnode refid="137241" relation="include">
        </childnode>
      </node>
      <node id="137219">
        <label>AthContainers/tools/ElementProxy.icc</label>
        <link refid="d6/d70/ElementProxy_8icc"/>
        <childnode refid="137215" relation="include">
        </childnode>
        <childnode refid="137203" relation="include">
        </childnode>
      </node>
      <node id="137108">
        <label>AsgTools/StatusCode.h</label>
        <link refid="d4/d5c/AsgTools_2AsgTools_2StatusCode_8h_source"/>
        <childnode refid="137109" relation="include">
        </childnode>
        <childnode refid="137110" relation="include">
        </childnode>
        <childnode refid="137116" relation="include">
        </childnode>
      </node>
      <node id="137156">
        <label>typeinfo</label>
      </node>
      <node id="137201">
        <label>AthContainers/AuxElement.icc</label>
        <link refid="d2/d37/AuxElement_8icc"/>
        <childnode refid="137172" relation="include">
        </childnode>
        <childnode refid="137202" relation="include">
        </childnode>
      </node>
      <node id="137124">
        <label>xAODTracking/TrackingPrimitives.h</label>
        <link refid="d2/d4c/TrackingPrimitives_8h_source"/>
        <childnode refid="137125" relation="include">
        </childnode>
      </node>
      <node id="137139">
        <label>AthContainers/DataVector.h</label>
        <link refid="d7/dd6/DataVector_8h"/>
        <childnode refid="137140" relation="include">
        </childnode>
        <childnode refid="137157" relation="include">
        </childnode>
        <childnode refid="137158" relation="include">
        </childnode>
        <childnode refid="137159" relation="include">
        </childnode>
        <childnode refid="137208" relation="include">
        </childnode>
        <childnode refid="137209" relation="include">
        </childnode>
        <childnode refid="137215" relation="include">
        </childnode>
        <childnode refid="137217" relation="include">
        </childnode>
        <childnode refid="137221" relation="include">
        </childnode>
        <childnode refid="137222" relation="include">
        </childnode>
        <childnode refid="137218" relation="include">
        </childnode>
        <childnode refid="137224" relation="include">
        </childnode>
        <childnode refid="137135" relation="include">
        </childnode>
        <childnode refid="137225" relation="include">
        </childnode>
        <childnode refid="137226" relation="include">
        </childnode>
        <childnode refid="137220" relation="include">
        </childnode>
        <childnode refid="137166" relation="include">
        </childnode>
        <childnode refid="137156" relation="include">
        </childnode>
        <childnode refid="137153" relation="include">
        </childnode>
        <childnode refid="137227" relation="include">
        </childnode>
        <childnode refid="137145" relation="include">
        </childnode>
        <childnode refid="137155" relation="include">
        </childnode>
        <childnode refid="137147" relation="include">
        </childnode>
        <childnode refid="137198" relation="include">
        </childnode>
        <childnode refid="137228" relation="include">
        </childnode>
        <childnode refid="137230" relation="include">
        </childnode>
        <childnode refid="137234" relation="include">
        </childnode>
        <childnode refid="137235" relation="include">
        </childnode>
      </node>
      <node id="137256">
        <label>xAODTracking/NeutralParticle.h</label>
        <link refid="d4/daa/NeutralParticle_8h_source"/>
        <childnode refid="137257" relation="include">
        </childnode>
        <childnode refid="137246" relation="include">
        </childnode>
      </node>
      <node id="137131">
        <label>bitset</label>
      </node>
      <node id="137188">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="137138">
        <label>AthLinks/tools/TypeTools.h</label>
        <link refid="dd/db1/TypeTools_8h_source"/>
      </node>
      <node id="137169">
        <label>AthenaKernel/ILockable.h</label>
      </node>
      <node id="137111">
        <label>AsgTools/MsgStreamMacros.h</label>
        <link refid="d3/ded/AsgTools_2AsgTools_2MsgStreamMacros_8h_source"/>
        <childnode refid="137109" relation="include">
        </childnode>
        <childnode refid="137112" relation="include">
        </childnode>
        <childnode refid="137115" relation="include">
        </childnode>
      </node>
      <node id="137168">
        <label>AthLinks/DataLinkBase.h</label>
        <link refid="db/da8/DataLinkBase_8h_source"/>
        <childnode refid="137132" relation="include">
        </childnode>
      </node>
      <node id="137248">
        <label>xAODTracking/versions/Vertex_v1.h</label>
        <link refid="d7/dcc/Vertex__v1_8h_source"/>
        <childnode refid="137166" relation="include">
        </childnode>
        <childnode refid="137199" relation="include">
        </childnode>
        <childnode refid="137133" relation="include">
        </childnode>
        <childnode refid="137125" relation="include">
        </childnode>
        <childnode refid="137249" relation="include">
        </childnode>
        <childnode refid="137251" relation="include">
        </childnode>
        <childnode refid="137124" relation="include">
        </childnode>
        <childnode refid="137252" relation="include">
        </childnode>
        <childnode refid="137255" relation="include">
        </childnode>
        <childnode refid="137240" relation="include">
        </childnode>
        <childnode refid="137262" relation="include">
        </childnode>
      </node>
      <node id="137263">
        <label>TrkTrackSummary/TrackSummary.h</label>
      </node>
      <node id="137164">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="137191">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="137209">
        <label>AthContainers/tools/DVLInfo.h</label>
        <link refid="d3/d2e/DVLInfo_8h"/>
        <childnode refid="137210" relation="include">
        </childnode>
        <childnode refid="137159" relation="include">
        </childnode>
        <childnode refid="137156" relation="include">
        </childnode>
        <childnode refid="137142" relation="include">
        </childnode>
        <childnode refid="137151" relation="include">
        </childnode>
        <childnode refid="137212" relation="include">
        </childnode>
        <childnode refid="137190" relation="include">
        </childnode>
        <childnode refid="137213" relation="include">
        </childnode>
      </node>
      <node id="137162">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="137126">
        <label>unistd.h</label>
      </node>
      <node id="137228">
        <label>AthContainers/ClassName.h</label>
        <link refid="dd/d6b/AthContainers_2AthContainers_2ClassName_8h_source"/>
        <childnode refid="137229" relation="include">
        </childnode>
      </node>
      <node id="137181">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="137141" relation="include">
        </childnode>
        <childnode refid="137182" relation="include">
        </childnode>
        <childnode refid="137183" relation="include">
        </childnode>
        <childnode refid="137184" relation="include">
        </childnode>
        <childnode refid="137193" relation="include">
        </childnode>
        <childnode refid="137174" relation="include">
        </childnode>
        <childnode refid="137142" relation="include">
        </childnode>
        <childnode refid="137156" relation="include">
        </childnode>
        <childnode refid="137166" relation="include">
        </childnode>
        <childnode refid="137195" relation="include">
        </childnode>
        <childnode refid="137196" relation="include">
        </childnode>
      </node>
      <node id="137166">
        <label>vector</label>
      </node>
      <node id="137253">
        <label>xAODBase/IParticleContainer.h</label>
        <link refid="dd/d2d/IParticleContainer_8h_source"/>
        <childnode refid="137139" relation="include">
        </childnode>
        <childnode refid="137238" relation="include">
        </childnode>
        <childnode refid="137162" relation="include">
        </childnode>
      </node>
      <node id="137236">
        <label>AthContainers/tools/CompareAndPrint.h</label>
        <link refid="d5/da8/CompareAndPrint_8h_source"/>
        <childnode refid="137145" relation="include">
        </childnode>
        <childnode refid="137156" relation="include">
        </childnode>
      </node>
      <node id="137247">
        <label>xAODTracking/Vertex.h</label>
        <link refid="d9/d2d/Vertex_8h_source"/>
        <childnode refid="137248" relation="include">
        </childnode>
      </node>
      <node id="137259">
        <label>xAODTracking/versions/NeutralParticleContainer_v1.h</label>
        <link refid="d6/d5f/NeutralParticleContainer__v1_8h_source"/>
        <childnode refid="137132" relation="include">
        </childnode>
        <childnode refid="137139" relation="include">
        </childnode>
        <childnode refid="137257" relation="include">
        </childnode>
        <childnode refid="137260" relation="include">
        </childnode>
      </node>
      <node id="137237">
        <label>AthContainers/tools/DVLEltBaseInfo.icc</label>
        <link refid="dd/d5e/DVLEltBaseInfo_8icc"/>
      </node>
      <node id="137146">
        <label>utility</label>
      </node>
      <node id="137234">
        <label>SGTools/DataBucketTraitFwd.h</label>
      </node>
      <node id="137265">
        <label>array</label>
      </node>
      <node id="137171">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="137119">
        <label>sstream</label>
      </node>
      <node id="137249">
        <label>GeoPrimitives/GeoPrimitives.h</label>
        <link refid="d7/d87/GeoPrimitives_8h_source"/>
        <childnode refid="137126" relation="include">
        </childnode>
        <childnode refid="137250" relation="include">
        </childnode>
      </node>
      <node id="137243">
        <label>xAODTracking/VertexFwd.h</label>
        <link refid="d9/ddd/VertexFwd_8h_source"/>
      </node>
      <node id="137207">
        <label>AthContainers/AuxVectorBase.icc</label>
        <link refid="d4/d50/AuxVectorBase_8icc"/>
      </node>
      <node id="137175">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="137185">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="137174">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="137175" relation="include">
        </childnode>
        <childnode refid="137176" relation="include">
        </childnode>
        <childnode refid="137177" relation="include">
        </childnode>
        <childnode refid="137178" relation="include">
        </childnode>
        <childnode refid="137179" relation="include">
        </childnode>
      </node>
      <node id="137241">
        <label>iosfwd</label>
      </node>
      <node id="137148">
        <label>cstdlib</label>
      </node>
      <node id="137129">
        <label>xAODTracking/TrackParticle.h</label>
        <link refid="d2/d15/TrackParticle_8h_source"/>
        <childnode refid="137130" relation="include">
        </childnode>
        <childnode refid="137246" relation="include">
        </childnode>
      </node>
      <node id="137227">
        <label>iostream</label>
      </node>
      <node id="137154">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="137161">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="137141" relation="include">
        </childnode>
        <childnode refid="137142" relation="include">
        </childnode>
        <childnode refid="137162" relation="include">
        </childnode>
      </node>
      <node id="137142">
        <label>cstddef</label>
      </node>
      <node id="137123">
        <label>GaudiKernel/MsgStream.h</label>
      </node>
      <node id="137118">
        <label>AsgTools/MsgStream.h</label>
        <link refid="d3/d95/AsgTools_2AsgTools_2MsgStream_8h_source"/>
        <childnode refid="137113" relation="include">
        </childnode>
        <childnode refid="137119" relation="include">
        </childnode>
        <childnode refid="137109" relation="include">
        </childnode>
        <childnode refid="137112" relation="include">
        </childnode>
        <childnode refid="137120" relation="include">
        </childnode>
        <childnode refid="137123" relation="include">
        </childnode>
      </node>
      <node id="137180">
        <label>AthContainers/AuxVectorData.icc</label>
        <link refid="da/de7/AuxVectorData_8icc"/>
        <childnode refid="137181" relation="include">
        </childnode>
        <childnode refid="137197" relation="include">
        </childnode>
        <childnode refid="137161" relation="include">
        </childnode>
        <childnode refid="137172" relation="include">
        </childnode>
        <childnode refid="137173" relation="include">
        </childnode>
      </node>
      <node id="137121">
        <label>AsgTools/AsgToolMacros.h</label>
        <link refid="d1/d68/AsgToolMacros_8h_source"/>
      </node>
      <node id="137262">
        <label>xAODCore/BaseInfo.h</label>
        <link refid="d3/d17/BaseInfo_8h_source"/>
        <childnode refid="137198" relation="include">
        </childnode>
      </node>
      <node id="137107">
        <label>InDetTrackAccessor.h</label>
        <link refid="d6/d4b/InDetTrackAccessor_8h_source"/>
        <childnode refid="137108" relation="include">
        </childnode>
        <childnode refid="137117" relation="include">
        </childnode>
        <childnode refid="137124" relation="include">
        </childnode>
        <childnode refid="137129" relation="include">
        </childnode>
        <childnode refid="137247" relation="include">
        </childnode>
        <childnode refid="137263" relation="include">
        </childnode>
      </node>
      <node id="137258">
        <label>TrkNeutralParameters/NeutralParameters.h</label>
      </node>
      <node id="137213">
        <label>AthContainers/tools/DVLInfo.icc</label>
        <link refid="da/d83/DVLInfo_8icc"/>
        <childnode refid="137157" relation="include">
        </childnode>
        <childnode refid="137166" relation="include">
        </childnode>
        <childnode refid="137214" relation="include">
        </childnode>
        <childnode refid="137202" relation="include">
        </childnode>
        <childnode refid="137148" relation="include">
        </childnode>
        <childnode refid="137198" relation="include">
        </childnode>
      </node>
      <node id="137184">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="137182" relation="include">
        </childnode>
        <childnode refid="137185" relation="include">
        </childnode>
        <childnode refid="137165" relation="include">
        </childnode>
        <childnode refid="137186" relation="include">
        </childnode>
        <childnode refid="137171" relation="include">
        </childnode>
        <childnode refid="137156" relation="include">
        </childnode>
        <childnode refid="137166" relation="include">
        </childnode>
        <childnode refid="137145" relation="include">
        </childnode>
        <childnode refid="137132" relation="include">
        </childnode>
        <childnode refid="137190" relation="include">
        </childnode>
        <childnode refid="137191" relation="include">
        </childnode>
        <childnode refid="137192" relation="include">
        </childnode>
      </node>
      <node id="137244">
        <label>TrkParameters/TrackParameters.h</label>
      </node>
      <node id="137257">
        <label>versions/NeutralParticle_v1.h</label>
        <link refid="da/d85/NeutralParticle__v1_8h_source"/>
        <childnode refid="137133" relation="include">
        </childnode>
        <childnode refid="137139" relation="include">
        </childnode>
        <childnode refid="137238" relation="include">
        </childnode>
        <childnode refid="137124" relation="include">
        </childnode>
        <childnode refid="137242" relation="include">
        </childnode>
        <childnode refid="137131" relation="include">
        </childnode>
        <childnode refid="137132" relation="include">
        </childnode>
        <childnode refid="137258" relation="include">
        </childnode>
      </node>
      <node id="137117">
        <label>AsgTools/AsgMessaging.h</label>
        <link refid="d3/d61/AsgMessaging_8h_source"/>
        <childnode refid="137113" relation="include">
        </childnode>
        <childnode refid="137109" relation="include">
        </childnode>
        <childnode refid="137118" relation="include">
        </childnode>
        <childnode refid="137111" relation="include">
        </childnode>
      </node>
      <node id="137261">
        <label>xAODTracking/NeutralParticleFwd.h</label>
        <link refid="d4/d90/NeutralParticleFwd_8h_source"/>
      </node>
      <node id="137116">
        <label>GaudiKernel/StatusCode.h</label>
      </node>
      <node id="137190">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="137255">
        <label>xAODTracking/NeutralParticleContainer.h</label>
        <link refid="da/d7f/NeutralParticleContainer_8h_source"/>
        <childnode refid="137256" relation="include">
        </childnode>
        <childnode refid="137259" relation="include">
        </childnode>
        <childnode refid="137246" relation="include">
        </childnode>
      </node>
      <node id="137159">
        <label>AthContainers/AuxVectorBase.h</label>
        <link refid="d7/d18/AuxVectorBase_8h"/>
        <childnode refid="137160" relation="include">
        </childnode>
        <childnode refid="137157" relation="include">
        </childnode>
        <childnode refid="137158" relation="include">
        </childnode>
        <childnode refid="137199" relation="include">
        </childnode>
        <childnode refid="137181" relation="include">
        </childnode>
        <childnode refid="137140" relation="include">
        </childnode>
        <childnode refid="137203" relation="include">
        </childnode>
        <childnode refid="137197" relation="include">
        </childnode>
        <childnode refid="137204" relation="include">
        </childnode>
        <childnode refid="137166" relation="include">
        </childnode>
        <childnode refid="137207" relation="include">
        </childnode>
      </node>
      <node id="137246">
        <label>xAODCore/CLASS_DEF.h</label>
        <link refid="d6/d20/xAODCore_2xAODCore_2CLASS__DEF_8h"/>
        <childnode refid="137162" relation="include">
        </childnode>
      </node>
      <node id="137194">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="137186">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="137185" relation="include">
        </childnode>
        <childnode refid="137187" relation="include">
        </childnode>
        <childnode refid="137171" relation="include">
        </childnode>
        <childnode refid="137166" relation="include">
        </childnode>
        <childnode refid="137189" relation="include">
        </childnode>
      </node>
      <node id="137145">
        <label>algorithm</label>
      </node>
      <node id="137224">
        <label>AthContainers/tools/IsMostDerivedFlag.h</label>
        <link refid="d5/dfa/IsMostDerivedFlag_8h"/>
      </node>
      <node id="137245">
        <label>TrkTrack/TrackCollection.h</label>
      </node>
      <node id="137199">
        <label>AthContainers/AuxElement.h</label>
        <link refid="d1/d6f/AuxElement_8h"/>
        <childnode refid="137200" relation="include">
        </childnode>
        <childnode refid="137161" relation="include">
        </childnode>
        <childnode refid="137197" relation="include">
        </childnode>
        <childnode refid="137167" relation="include">
        </childnode>
        <childnode refid="137181" relation="include">
        </childnode>
        <childnode refid="137160" relation="include">
        </childnode>
        <childnode refid="137165" relation="include">
        </childnode>
        <childnode refid="137140" relation="include">
        </childnode>
        <childnode refid="137172" relation="include">
        </childnode>
        <childnode refid="137142" relation="include">
        </childnode>
        <childnode refid="137201" relation="include">
        </childnode>
      </node>
      <node id="137167">
        <label>AthLinks/DataLink.h</label>
        <link refid="da/de8/DataLink_8h_source"/>
        <childnode refid="137132" relation="include">
        </childnode>
        <childnode refid="137113" relation="include">
        </childnode>
        <childnode refid="137168" relation="include">
        </childnode>
        <childnode refid="137135" relation="include">
        </childnode>
      </node>
      <node id="137221">
        <label>AthContainers/tools/DVL_iter_swap.h</label>
        <link refid="d6/ddb/DVL__iter__swap_8h"/>
        <childnode refid="137217" relation="include">
        </childnode>
        <childnode refid="137203" relation="include">
        </childnode>
        <childnode refid="137147" relation="include">
        </childnode>
      </node>
      <node id="137157">
        <label>AthContainers/OwnershipPolicy.h</label>
        <link refid="d3/da4/OwnershipPolicy_8h_source"/>
      </node>
      <node id="137133">
        <label>AthLinks/ElementLink.h</label>
        <link refid="dc/d24/ElementLink_8h_source"/>
        <childnode refid="137132" relation="include">
        </childnode>
        <childnode refid="137113" relation="include">
        </childnode>
        <childnode refid="137134" relation="include">
        </childnode>
        <childnode refid="137135" relation="include">
        </childnode>
        <childnode refid="137138" relation="include">
        </childnode>
      </node>
      <node id="137211">
        <label>GaudiKernel/ClassID.h</label>
      </node>
      <node id="137226">
        <label>boost/type_traits.hpp</label>
      </node>
      <node id="137152">
        <label>memory</label>
      </node>
      <node id="137260">
        <label>xAODTracking/NeutralParticleContainerFwd.h</label>
        <link refid="d2/db4/NeutralParticleContainerFwd_8h_source"/>
        <childnode refid="137139" relation="include">
        </childnode>
        <childnode refid="137253" relation="include">
        </childnode>
        <childnode refid="137261" relation="include">
        </childnode>
      </node>
      <node id="137193">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="137183" relation="include">
        </childnode>
        <childnode refid="137184" relation="include">
        </childnode>
        <childnode refid="137194" relation="include">
        </childnode>
      </node>
      <node id="137204">
        <label>AthContainersInterfaces/AuxStore_traits.h</label>
        <link refid="dd/d70/AuxStore__traits_8h"/>
        <childnode refid="137200" relation="include">
        </childnode>
        <childnode refid="137197" relation="include">
        </childnode>
        <childnode refid="137161" relation="include">
        </childnode>
        <childnode refid="137190" relation="include">
        </childnode>
        <childnode refid="137205" relation="include">
        </childnode>
        <childnode refid="137206" relation="include">
        </childnode>
        <childnode refid="137113" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="d0/d6e/classInDet_1_1TrackCut" prot="public">InDet::TrackCut</innerclass>
    <innerclass refid="df/d59/classInDet_1_1OrCut" prot="public">InDet::OrCut</innerclass>
    <innerclass refid="d4/d2e/classInDet_1_1MaxSummaryValueCut" prot="public">InDet::MaxSummaryValueCut</innerclass>
    <innerclass refid="df/d9a/classInDet_1_1MinSummaryValueCut" prot="public">InDet::MinSummaryValueCut</innerclass>
    <innerclass refid="da/d66/classInDet_1_1FuncSummaryValueCut" prot="public">InDet::FuncSummaryValueCut</innerclass>
    <innerclass refid="d3/d13/classInDet_1_1MaxSummaryValueRatioCut" prot="public">InDet::MaxSummaryValueRatioCut</innerclass>
    <innerclass refid="db/d62/classInDet_1_1MinTrtHitCut" prot="public">InDet::MinTrtHitCut</innerclass>
    <innerclass refid="de/de9/classInDet_1_1MaxTrtHitRatioCut" prot="public">InDet::MaxTrtHitRatioCut</innerclass>
    <innerclass refid="da/d26/classInDet_1_1D0Cut" prot="public">InDet::D0Cut</innerclass>
    <innerclass refid="d5/d5a/classInDet_1_1D0SigmaCut" prot="public">InDet::D0SigmaCut</innerclass>
    <innerclass refid="d2/dcd/classInDet_1_1D0SignificanceCut" prot="public">InDet::D0SignificanceCut</innerclass>
    <innerclass refid="d3/d22/classInDet_1_1Z0Cut" prot="public">InDet::Z0Cut</innerclass>
    <innerclass refid="d5/d99/classInDet_1_1Z0SigmaCut" prot="public">InDet::Z0SigmaCut</innerclass>
    <innerclass refid="d8/dff/classInDet_1_1Z0SignificanceCut" prot="public">InDet::Z0SignificanceCut</innerclass>
    <innerclass refid="d1/d68/classInDet_1_1Z0SinThetaCut" prot="public">InDet::Z0SinThetaCut</innerclass>
    <innerclass refid="d3/dbe/classInDet_1_1Z0SinThetaSigmaCut" prot="public">InDet::Z0SinThetaSigmaCut</innerclass>
    <innerclass refid="dd/d13/classInDet_1_1Z0SinThetaSignificanceCut" prot="public">InDet::Z0SinThetaSignificanceCut</innerclass>
    <innerclass refid="de/d31/classInDet_1_1MinCut" prot="public">InDet::MinCut</innerclass>
    <innerclass refid="dd/db2/classInDet_1_1MaxCut" prot="public">InDet::MaxCut</innerclass>
    <innerclass refid="d1/d75/classInDet_1_1MinAbsCut" prot="public">InDet::MinAbsCut</innerclass>
    <innerclass refid="dc/d86/classInDet_1_1MaxAbsCut" prot="public">InDet::MaxAbsCut</innerclass>
    <innerclass refid="d9/d67/classInDet_1_1EtaDependentChiSqCut" prot="public">InDet::EtaDependentChiSqCut</innerclass>
    <innerclass refid="d2/de4/classInDet_1_1MinNSiHitsAboveEta" prot="public">InDet::MinNSiHitsAboveEta</innerclass>
    <innerclass refid="d9/d49/classInDet_1_1MaxChiSq" prot="public">InDet::MaxChiSq</innerclass>
    <innerclass refid="d0/d6b/classInDet_1_1MaxChiSqPerNdf" prot="public">InDet::MaxChiSqPerNdf</innerclass>
    <innerclass refid="d7/dd3/classInDet_1_1MinProb" prot="public">InDet::MinProb</innerclass>
    <innerclass refid="de/dbf/classInDet_1_1MinEProbHTCut" prot="public">InDet::MinEProbHTCut</innerclass>
    <innerclass refid="d0/d8f/classInDet_1_1EtaDependentSiliconHitsCut" prot="public">InDet::EtaDependentSiliconHitsCut</innerclass>
    <innerclass refid="d8/d0f/classInDet_1_1EtaDependentPtCut" prot="public">InDet::EtaDependentPtCut</innerclass>
    <innerclass refid="dd/d97/classInDet_1_1PtDependentSctHitsCut" prot="public">InDet::PtDependentSctHitsCut</innerclass>
    <innerclass refid="d9/d46/classInDet_1_1MinSiHitsModTopBottomCut" prot="public">InDet::MinSiHitsModTopBottomCut</innerclass>
    <innernamespace refid="dd/dff/namespaceInDet">InDet</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>-*-<sp/>c++<sp/>-*-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>InDetTrackCut.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Declarations<sp/>of<sp/>objects<sp/>to<sp/>perform<sp/>cuts<sp/>for<sp/>InDetTrackSelectionTool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INDETTRACKSELECTIONTOOL_INDETTRACKCUT_H</highlight></codeline>
<codeline lineno="6"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>INDETTRACKSELECTIONTOOL_INDETTRACKCUT_H</highlight></codeline>
<codeline lineno="7"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;InDetTrackAccessor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">InDet<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">InDetTrackSelectionTool;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------<sp/>TrackCut<sp/>----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="d0/d6e/classInDet_1_1TrackCut" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d0/d6e/classInDet_1_1TrackCut" kindref="compound">TrackCut</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>asg::AsgMessaging<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>abstract<sp/>interface<sp/>class<sp/>for<sp/>all<sp/>cuts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d6e/classInDet_1_1TrackCut" kindref="compound">TrackCut</ref>(<ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDetTrackSelectionTool</ref>*);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="d0/d6e/classInDet_1_1TrackCut" kindref="compound">TrackCut</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>should<sp/>find<sp/>the<sp/>accessor(s)<sp/>or<sp/>create<sp/>them<sp/>if<sp/>they<sp/>don&apos;t<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StatusCode<sp/>initialize();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>whether<sp/>the<sp/>cut<sp/>passes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>operator<sp/>bool()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;result();}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>function<sp/>that<sp/>gets<sp/>the<sp/>accessor<sp/>labelled<sp/>by<sp/>&quot;name&quot;,<sp/>adding<sp/>it<sp/>if<sp/>it<sp/>needs<sp/>to.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>AccessorType&gt;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>StatusCode<sp/>getAccessor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/>std::shared_ptr&lt;AccessorType&gt;&amp;<sp/>accessor);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>tool&apos;s<sp/>accessors<sp/>so<sp/>we<sp/>can<sp/>modify<sp/>it<sp/>in<sp/>initialize()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_map&lt;<sp/>std::string,<sp/>std::shared_ptr&lt;TrackAccessor&gt;<sp/>&gt;*<sp/>m_trackAccessors;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>tool<sp/>so<sp/>that<sp/>we<sp/>can<sp/>create<sp/>the<sp/>accessors<sp/>when<sp/>need<sp/>be,<sp/>as<sp/>they<sp/>inherit<sp/>from<sp/>AsgMessaging<sp/>and<sp/>need<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDetTrackSelectionTool</ref>*<sp/>m_selectionTool;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>TrackCut</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------<sp/>OrCut<sp/>----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>cut<sp/>that<sp/>passes<sp/>if<sp/>any<sp/>of<sp/>its<sp/>N<sp/>cuts<sp/>do.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="42" refid="df/d59/classInDet_1_1OrCut" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="df/d59/classInDet_1_1OrCut" kindref="compound">OrCut</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="d0/d6e/classInDet_1_1TrackCut" kindref="compound">TrackCut</ref><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/d59/classInDet_1_1OrCut" kindref="compound">OrCut</ref>(<ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDetTrackSelectionTool</ref>*);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StatusCode<sp/>initialize();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setCut(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/>std::unique_ptr&lt;TrackCut&gt;&amp;&amp;<sp/>cut)<sp/>{m_cuts.at(i).swap(cut);}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>std::unique_ptr&lt;TrackCut&gt;&amp;<sp/>operator[](size_t<sp/>i)<sp/>{return<sp/>m_cuts.at(i);}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;TrackCut&gt;&amp;<sp/>Cut(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_cuts.at(i);}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;<sp/>std::unique_ptr&lt;TrackCut&gt;<sp/>,<sp/><ref refid="da/deb/structN" kindref="compound">N</ref><sp/>&gt;<sp/>m_cuts;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>OrCut</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------<sp/>MaxSummaryValueCut<sp/>----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="d4/d2e/classInDet_1_1MaxSummaryValueCut" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d4/d2e/classInDet_1_1MaxSummaryValueCut" kindref="compound">MaxSummaryValueCut</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d0/d6e/classInDet_1_1TrackCut" kindref="compound">TrackCut</ref><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d2e/classInDet_1_1MaxSummaryValueCut" kindref="compound">MaxSummaryValueCut</ref>(<ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDetTrackSelectionTool</ref>*,<sp/>Int_t<sp/>max=0);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d2e/classInDet_1_1MaxSummaryValueCut" kindref="compound">MaxSummaryValueCut</ref>(<ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDetTrackSelectionTool</ref>*,<sp/>Int_t<sp/>max,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;xAOD::SummaryType&gt;&amp;);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMaxValue(Int_t<sp/>max)<sp/>{m_maxValue<sp/>=<sp/>max;}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addSummaryType(<ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286a" kindref="member">xAOD::SummaryType</ref><sp/>type)<sp/>{m_summaryTypes.push_back(type);}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StatusCode<sp/>initialize();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>Int_t<sp/>m_maxValue;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>check<sp/>the<sp/>sum<sp/>of<sp/>all<sp/>its<sp/>accessors<sp/>and<sp/>compare<sp/>to<sp/>the<sp/>max<sp/>allowed<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>xAOD::SummaryType<sp/>&gt;<sp/>m_summaryTypes;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::shared_ptr&lt;SummaryAccessor&gt;<sp/>&gt;<sp/>m_summaryAccessors;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>MaxSummaryValueCut</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------<sp/>MinSummaryValueCut<sp/>----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="df/d9a/classInDet_1_1MinSummaryValueCut" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="df/d9a/classInDet_1_1MinSummaryValueCut" kindref="compound">MinSummaryValueCut</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d0/d6e/classInDet_1_1TrackCut" kindref="compound">TrackCut</ref><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/d9a/classInDet_1_1MinSummaryValueCut" kindref="compound">MinSummaryValueCut</ref>(<ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDetTrackSelectionTool</ref>*,<sp/>Int_t<sp/>min=0);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/d9a/classInDet_1_1MinSummaryValueCut" kindref="compound">MinSummaryValueCut</ref>(<ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDetTrackSelectionTool</ref>*,<sp/>Int_t<sp/>min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;xAOD::SummaryType&gt;&amp;);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMinValue(Int_t<sp/>min)<sp/>{m_minValue<sp/>=<sp/>min;}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addSummaryType(<ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286a" kindref="member">xAOD::SummaryType</ref><sp/>type)<sp/>{m_summaryTypes.push_back(type);}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StatusCode<sp/>initialize();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>Int_t<sp/>m_minValue;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>xAOD::SummaryType<sp/>&gt;<sp/>m_summaryTypes;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>check<sp/>the<sp/>sum<sp/>of<sp/>all<sp/>its<sp/>accessors<sp/>and<sp/>compare<sp/>to<sp/>the<sp/>max<sp/>allowed<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::shared_ptr&lt;SummaryAccessor&gt;<sp/>&gt;<sp/>m_summaryAccessors;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>MinSummaryValueCut</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------<sp/>FuncSummaryValueCut<sp/>----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="89" refid="da/d66/classInDet_1_1FuncSummaryValueCut" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="da/d66/classInDet_1_1FuncSummaryValueCut" kindref="compound">FuncSummaryValueCut</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d0/d6e/classInDet_1_1TrackCut" kindref="compound">TrackCut</ref><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d66/classInDet_1_1FuncSummaryValueCut" kindref="compound">FuncSummaryValueCut</ref>(<ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDetTrackSelectionTool</ref>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::array&lt;xAOD::SummaryType,N&gt;&amp;&amp;);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setFunction(std::function&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::array&lt;uint8_t,N&gt;&amp;)&gt;<sp/>func)<sp/>{m_func<sp/>=<sp/>func;}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StatusCode<sp/>initialize();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>std::function&lt;bool(const<sp/>std::array&lt;uint8_t,N&gt;&amp;)&gt;<sp/>m_func;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;<sp/>xAOD::SummaryType,<sp/>N&gt;<sp/>m_summaryTypes;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;<sp/>std::shared_ptr&lt;SummaryAccessor&gt;,<ref refid="da/deb/structN" kindref="compound">N</ref><sp/>&gt;<sp/>m_summaryAccessors;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>std::array&lt;uint8_t,N&gt;<sp/>m_results;<sp/></highlight><highlight class="comment">//<sp/>member<sp/>variable<sp/>to<sp/>store<sp/>the<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>FuncSummaryValueCut</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------<sp/>MaxSummaryValueRatioCut<sp/>----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="d3/d13/classInDet_1_1MaxSummaryValueRatioCut" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d3/d13/classInDet_1_1MaxSummaryValueRatioCut" kindref="compound">MaxSummaryValueRatioCut</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d0/d6e/classInDet_1_1TrackCut" kindref="compound">TrackCut</ref><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d13/classInDet_1_1MaxSummaryValueRatioCut" kindref="compound">MaxSummaryValueRatioCut</ref>(<ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDetTrackSelectionTool</ref>*,<sp/>Double_t<sp/>max);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMaxValue(Double_t<sp/>max)<sp/>{m_maxValue<sp/>=<sp/>max;}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addSummaryTypeNumerator(<ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286a" kindref="member">xAOD::SummaryType</ref><sp/>type)<sp/>{m_summaryTypesNum.push_back(type);}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addSummaryTypeDenominator(<ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286a" kindref="member">xAOD::SummaryType</ref><sp/>type)<sp/>{m_summaryTypesDen.push_back(type);}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StatusCode<sp/>initialize();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>Double_t<sp/>m_maxValue;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>check<sp/>the<sp/>sum<sp/>of<sp/>all<sp/>its<sp/>accessors<sp/>and<sp/>compare<sp/>to<sp/>the<sp/>max<sp/>allowed<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>xAOD::SummaryType<sp/>&gt;<sp/>m_summaryTypesNum;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>xAOD::SummaryType<sp/>&gt;<sp/>m_summaryTypesDen;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::shared_ptr&lt;SummaryAccessor&gt;<sp/>&gt;<sp/>m_summaryAccessorsNum;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::shared_ptr&lt;SummaryAccessor&gt;<sp/>&gt;<sp/>m_summaryAccessorsDen;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>MaxSummaryValueCut</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------<sp/>MinTrtHitCut<sp/>----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="db/d62/classInDet_1_1MinTrtHitCut" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="db/d62/classInDet_1_1MinTrtHitCut" kindref="compound">MinTrtHitCut</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="df/d9a/classInDet_1_1MinSummaryValueCut" kindref="compound">MinSummaryValueCut</ref><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d62/classInDet_1_1MinTrtHitCut" kindref="compound">MinTrtHitCut</ref>(<ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDetTrackSelectionTool</ref>*,<sp/>Int_t<sp/>min=0,<sp/>Double_t<sp/>etaLow=0,<sp/>Double_t<sp/>etaHigh=0);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMaxEtaAcceptance(Double_t<sp/>eta)<sp/>{m_maxTrtEtaAcceptance<sp/>=<sp/>eta;}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMaxEtaForCut(Double_t<sp/>eta)<sp/>{m_maxEtaForCut<sp/>=<sp/>eta;}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StatusCode<sp/>initialize();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>Double_t<sp/>m_maxTrtEtaAcceptance;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>Double_t<sp/>m_maxEtaForCut;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;<sp/>FuncAccessor&lt;double,<sp/>&amp;xAOD::TrackParticle::eta&gt;<sp/>&gt;<sp/>m_etaAccessor;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>MinTrtHitCut</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------<sp/>MaxTrtHitRatioCut<sp/>----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="de/de9/classInDet_1_1MaxTrtHitRatioCut" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="de/de9/classInDet_1_1MaxTrtHitRatioCut" kindref="compound">MaxTrtHitRatioCut</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d3/d13/classInDet_1_1MaxSummaryValueRatioCut" kindref="compound">MaxSummaryValueRatioCut</ref><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/de9/classInDet_1_1MaxTrtHitRatioCut" kindref="compound">MaxTrtHitRatioCut</ref>(<ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDetTrackSelectionTool</ref>*,<sp/>Double_t<sp/>ratio=0,<sp/>Double_t<sp/>etaLow=0,<sp/>Double_t<sp/>etaHigh=0);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMaxEtaAcceptance(Double_t<sp/>eta)<sp/>{m_maxTrtEtaAcceptance<sp/>=<sp/>eta;}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMaxEtaForCut(Double_t<sp/>eta)<sp/>{m_maxEtaForCut<sp/>=<sp/>eta;}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StatusCode<sp/>initialize();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>Double_t<sp/>m_maxTrtEtaAcceptance;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>Double_t<sp/>m_maxEtaForCut;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;<sp/>FuncAccessor&lt;double,<sp/>&amp;xAOD::TrackParticle::eta&gt;<sp/>&gt;<sp/>m_etaAccessor;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>MaxTrtHitRatioCut</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------<sp/>D0Cut<sp/>----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="da/d26/classInDet_1_1D0Cut" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="da/d26/classInDet_1_1D0Cut" kindref="compound">D0Cut</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d0/d6e/classInDet_1_1TrackCut" kindref="compound">TrackCut</ref><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d26/classInDet_1_1D0Cut" kindref="compound">D0Cut</ref>(<ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDetTrackSelectionTool</ref>*,<sp/>Double_t<sp/>max=0);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMaxValue(Double_t<sp/>max)<sp/>{m_maxValue<sp/>=<sp/>max;}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StatusCode<sp/>initialize();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>Double_t<sp/>m_maxValue;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;<sp/>ParamAccessor&lt;0&gt;<sp/>&gt;<sp/>m_paramAccessor;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>D0Cut</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------<sp/>D0SigmaCut<sp/>----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="d5/d5a/classInDet_1_1D0SigmaCut" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d5/d5a/classInDet_1_1D0SigmaCut" kindref="compound">D0SigmaCut</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d0/d6e/classInDet_1_1TrackCut" kindref="compound">TrackCut</ref><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/d5a/classInDet_1_1D0SigmaCut" kindref="compound">D0SigmaCut</ref>(<ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDetTrackSelectionTool</ref>*,<sp/>Double_t<sp/>max=0);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMaxValue(Double_t<sp/>max)<sp/>{m_maxValueSq<sp/>=<sp/>max*max;}<sp/></highlight><highlight class="comment">//<sp/>cut<sp/>is<sp/>on<sp/>variance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StatusCode<sp/>initialize();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>Double_t<sp/>m_maxValueSq;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;<sp/>ParamCovAccessor&lt;0,0&gt;<sp/>&gt;<sp/>m_paramCovAccessor;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>D0SigmaCut</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------<sp/>D0SignificanceCut<sp/>----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="d2/dcd/classInDet_1_1D0SignificanceCut" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d2/dcd/classInDet_1_1D0SignificanceCut" kindref="compound">D0SignificanceCut</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d0/d6e/classInDet_1_1TrackCut" kindref="compound">TrackCut</ref><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/dcd/classInDet_1_1D0SignificanceCut" kindref="compound">D0SignificanceCut</ref>(<ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDetTrackSelectionTool</ref>*,<sp/>Double_t<sp/>max=0);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMaxValue(Double_t<sp/>max)<sp/>{m_maxValueSq<sp/>=<sp/>max*max;}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StatusCode<sp/>initialize();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>Double_t<sp/>m_maxValueSq;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;<sp/>ParamAccessor&lt;0&gt;<sp/>&gt;<sp/>m_paramAccessor;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;<sp/>ParamCovAccessor&lt;0,0&gt;<sp/>&gt;<sp/>m_paramCovAccessor;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>D0SignificanceCut</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------<sp/>Z0Cut<sp/>----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="d3/d22/classInDet_1_1Z0Cut" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d3/d22/classInDet_1_1Z0Cut" kindref="compound">Z0Cut</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d0/d6e/classInDet_1_1TrackCut" kindref="compound">TrackCut</ref><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d22/classInDet_1_1Z0Cut" kindref="compound">Z0Cut</ref>(<ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDetTrackSelectionTool</ref>*,<sp/>Double_t<sp/>max=0);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMaxValue(Double_t<sp/>max)<sp/>{m_maxValue<sp/>=<sp/>max;}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StatusCode<sp/>initialize();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>Double_t<sp/>m_maxValue;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;<sp/>ParamAccessor&lt;1&gt;<sp/>&gt;<sp/>m_paramAccessor;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>Z0Cut</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------<sp/>Z0SigmaCut<sp/>----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="d5/d99/classInDet_1_1Z0SigmaCut" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d5/d99/classInDet_1_1Z0SigmaCut" kindref="compound">Z0SigmaCut</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d0/d6e/classInDet_1_1TrackCut" kindref="compound">TrackCut</ref><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/d99/classInDet_1_1Z0SigmaCut" kindref="compound">Z0SigmaCut</ref>(<ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDetTrackSelectionTool</ref>*,<sp/>Double_t<sp/>max=0);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMaxValue(Double_t<sp/>max)<sp/>{m_maxValueSq<sp/>=<sp/>max*max;}<sp/></highlight><highlight class="comment">//<sp/>cut<sp/>is<sp/>on<sp/>variance<sp/>so<sp/>we<sp/>will<sp/>save<sp/>the<sp/>squared<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StatusCode<sp/>initialize();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>Double_t<sp/>m_maxValueSq;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;<sp/>ParamCovAccessor&lt;1,1&gt;<sp/>&gt;<sp/>m_paramCovAccessor;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>Z0SigmaCut</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------<sp/>Z0SignificanceCut<sp/>----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="d8/dff/classInDet_1_1Z0SignificanceCut" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d8/dff/classInDet_1_1Z0SignificanceCut" kindref="compound">Z0SignificanceCut</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d0/d6e/classInDet_1_1TrackCut" kindref="compound">TrackCut</ref><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/dff/classInDet_1_1Z0SignificanceCut" kindref="compound">Z0SignificanceCut</ref>(<ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDetTrackSelectionTool</ref>*,<sp/>Double_t<sp/>max=0);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMaxValue(Double_t<sp/>max)<sp/>{m_maxValueSq<sp/>=<sp/>max*max;}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StatusCode<sp/>initialize();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>Double_t<sp/>m_maxValueSq;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;<sp/>ParamAccessor&lt;1&gt;<sp/>&gt;<sp/>m_paramAccessor;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;<sp/>ParamCovAccessor&lt;1,1&gt;<sp/>&gt;<sp/>m_paramCovAccessor;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>Z0SignificanceCut</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------<sp/>Z0SinThetaCut<sp/>----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226" refid="d1/d68/classInDet_1_1Z0SinThetaCut" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d1/d68/classInDet_1_1Z0SinThetaCut" kindref="compound">Z0SinThetaCut</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d0/d6e/classInDet_1_1TrackCut" kindref="compound">TrackCut</ref><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d68/classInDet_1_1Z0SinThetaCut" kindref="compound">Z0SinThetaCut</ref>(<ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDetTrackSelectionTool</ref>*,<sp/>Double_t<sp/>max=0);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMaxValue(Double_t<sp/>max)<sp/>{m_maxValue<sp/>=<sp/>max;}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StatusCode<sp/>initialize();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>Double_t<sp/>m_maxValue;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;<sp/>ParamAccessor&lt;1&gt;<sp/>&gt;<sp/>m_Z0Accessor;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;<sp/>ParamAccessor&lt;3&gt;<sp/>&gt;<sp/>m_ThetaAccessor;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>Z0SinThetaCut</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------<sp/>Z0SinThetaSigmaCut<sp/>----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="d3/dbe/classInDet_1_1Z0SinThetaSigmaCut" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d3/dbe/classInDet_1_1Z0SinThetaSigmaCut" kindref="compound">Z0SinThetaSigmaCut</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d0/d6e/classInDet_1_1TrackCut" kindref="compound">TrackCut</ref><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/dbe/classInDet_1_1Z0SinThetaSigmaCut" kindref="compound">Z0SinThetaSigmaCut</ref>(<ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDetTrackSelectionTool</ref>*,<sp/>Double_t<sp/>maxSigma=0);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMaxValue(Double_t<sp/>max)<sp/>{m_maxValueSq<sp/>=<sp/>max*max;}<sp/></highlight><highlight class="comment">//<sp/>cut<sp/>is<sp/>on<sp/>variance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StatusCode<sp/>initialize();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>Double_t<sp/>m_maxValueSq;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;<sp/>ParamAccessor&lt;1&gt;<sp/>&gt;<sp/>m_Z0Accessor;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;<sp/>ParamCovAccessor&lt;1,1&gt;<sp/>&gt;<sp/>m_Z0VarAccessor;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;<sp/>ParamAccessor&lt;3&gt;<sp/>&gt;<sp/>m_ThetaAccessor;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;<sp/>ParamCovAccessor&lt;3,3&gt;<sp/>&gt;<sp/>m_ThetaVarAccessor;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;<sp/>ParamCovAccessor&lt;1,3&gt;<sp/>&gt;<sp/>m_CovAccessor;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>Z0SinThetaSigmaCut</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------<sp/>Z0SinThetaSignificanceCut<sp/>----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="dd/d13/classInDet_1_1Z0SinThetaSignificanceCut" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="dd/d13/classInDet_1_1Z0SinThetaSignificanceCut" kindref="compound">Z0SinThetaSignificanceCut</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d0/d6e/classInDet_1_1TrackCut" kindref="compound">TrackCut</ref><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d13/classInDet_1_1Z0SinThetaSignificanceCut" kindref="compound">Z0SinThetaSignificanceCut</ref>(<ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDetTrackSelectionTool</ref>*,<sp/>Double_t<sp/>maxSig=0);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMaxValue(Double_t<sp/>max)<sp/>{m_maxValueSq<sp/>=<sp/>max*max;}<sp/></highlight><highlight class="comment">//<sp/>cut<sp/>is<sp/>on<sp/>variance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StatusCode<sp/>initialize();</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>Double_t<sp/>m_maxValueSq;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;<sp/>ParamAccessor&lt;1&gt;<sp/>&gt;<sp/>m_Z0Accessor;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;<sp/>ParamCovAccessor&lt;1,1&gt;<sp/>&gt;<sp/>m_Z0VarAccessor;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;<sp/>ParamAccessor&lt;3&gt;<sp/>&gt;<sp/>m_ThetaAccessor;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;<sp/>ParamCovAccessor&lt;3,3&gt;<sp/>&gt;<sp/>m_ThetaVarAccessor;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;<sp/>ParamCovAccessor&lt;1,3&gt;<sp/>&gt;<sp/>m_CovAccessor;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>Z0SinThetaSignificanceCut</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------<sp/>MinCut<sp/>----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>T<sp/>(xAOD::TrackParticle::*Func)()<sp/>const&gt;</highlight></codeline>
<codeline lineno="272" refid="de/d31/classInDet_1_1MinCut" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="de/d31/classInDet_1_1MinCut" kindref="compound">MinCut</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d0/d6e/classInDet_1_1TrackCut" kindref="compound">TrackCut</ref><sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/d31/classInDet_1_1MinCut" kindref="compound">MinCut</ref>(<ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDetTrackSelectionTool</ref>*,<sp/><ref refid="d1/def/classT" kindref="compound">T</ref><sp/>min,<sp/>std::string<sp/>accName);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMinValue(<ref refid="d1/def/classT" kindref="compound">T</ref><sp/>min)<sp/>{m_minValue<sp/>=<sp/>min;}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StatusCode<sp/>initialize();</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/def/classT" kindref="compound">T</ref><sp/>m_minValue;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>m_accName;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;<sp/>FuncAccessor&lt;T,<sp/>Func&gt;<sp/>&gt;<sp/>m_accessor;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------<sp/>MaxCut<sp/>----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>T<sp/>(xAOD::TrackParticle::*Func)()<sp/>const&gt;</highlight></codeline>
<codeline lineno="286" refid="dd/db2/classInDet_1_1MaxCut" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="dd/db2/classInDet_1_1MaxCut" kindref="compound">MaxCut</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d0/d6e/classInDet_1_1TrackCut" kindref="compound">TrackCut</ref><sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/db2/classInDet_1_1MaxCut" kindref="compound">MaxCut</ref>(<ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDetTrackSelectionTool</ref>*,<sp/><ref refid="d1/def/classT" kindref="compound">T</ref><sp/>max,<sp/>std::string<sp/>accName);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMaxValue(<ref refid="d1/def/classT" kindref="compound">T</ref><sp/>max)<sp/>{m_maxValue<sp/>=<sp/>max;}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StatusCode<sp/>initialize();</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/def/classT" kindref="compound">T</ref><sp/>m_maxValue;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>m_accName;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;<sp/>FuncAccessor&lt;T,<sp/>Func&gt;<sp/>&gt;<sp/>m_accessor;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------<sp/>MinAbsCut<sp/>----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>T<sp/>(xAOD::TrackParticle::*Func)()<sp/>const&gt;</highlight></codeline>
<codeline lineno="300" refid="d1/d75/classInDet_1_1MinAbsCut" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d1/d75/classInDet_1_1MinAbsCut" kindref="compound">MinAbsCut</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d0/d6e/classInDet_1_1TrackCut" kindref="compound">TrackCut</ref><sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d75/classInDet_1_1MinAbsCut" kindref="compound">MinAbsCut</ref>(<ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDetTrackSelectionTool</ref>*,<sp/><ref refid="d1/def/classT" kindref="compound">T</ref><sp/>min,<sp/>std::string<sp/>accName);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMinValue(<ref refid="d1/def/classT" kindref="compound">T</ref><sp/>min)<sp/>{m_minValue<sp/>=<sp/>min;}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StatusCode<sp/>initialize();</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/def/classT" kindref="compound">T</ref><sp/>m_minValue;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>m_accName;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;<sp/>FuncAccessor&lt;T,<sp/>Func&gt;<sp/>&gt;<sp/>m_accessor;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------<sp/>MaxAbsCut<sp/>----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>T<sp/>(xAOD::TrackParticle::*Func)()<sp/>const&gt;</highlight></codeline>
<codeline lineno="314" refid="dc/d86/classInDet_1_1MaxAbsCut" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="dc/d86/classInDet_1_1MaxAbsCut" kindref="compound">MaxAbsCut</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d0/d6e/classInDet_1_1TrackCut" kindref="compound">TrackCut</ref><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/d86/classInDet_1_1MaxAbsCut" kindref="compound">MaxAbsCut</ref>(<ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDetTrackSelectionTool</ref>*,<sp/><ref refid="d1/def/classT" kindref="compound">T</ref><sp/>max,<sp/>std::string<sp/>accName);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMaxValue(<ref refid="d1/def/classT" kindref="compound">T</ref><sp/>max)<sp/>{m_maxValue<sp/>=<sp/>max;}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StatusCode<sp/>initialize();</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/def/classT" kindref="compound">T</ref><sp/>m_maxValue;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>m_accName;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;<sp/>FuncAccessor&lt;T,<sp/>Func&gt;<sp/>&gt;<sp/>m_accessor;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------<sp/>EtaDependentChiSqCut<sp/>----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327" refid="d9/d67/classInDet_1_1EtaDependentChiSqCut" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d9/d67/classInDet_1_1EtaDependentChiSqCut" kindref="compound">EtaDependentChiSqCut</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d0/d6e/classInDet_1_1TrackCut" kindref="compound">TrackCut</ref><sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d67/classInDet_1_1EtaDependentChiSqCut" kindref="compound">EtaDependentChiSqCut</ref>(<ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDetTrackSelectionTool</ref>*);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StatusCode<sp/>initialize();</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;<sp/>FuncAccessor&lt;double,<sp/>&amp;xAOD::TrackParticle::eta&gt;<sp/>&gt;<sp/>m_etaAccessor;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;FitQualityAccessor&gt;<sp/>m_fitAccessor;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------<sp/>MinNSiHitsAboveEta<sp/>----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="d2/de4/classInDet_1_1MinNSiHitsAboveEta" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d2/de4/classInDet_1_1MinNSiHitsAboveEta" kindref="compound">MinNSiHitsAboveEta</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d0/d6e/classInDet_1_1TrackCut" kindref="compound">TrackCut</ref><sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/de4/classInDet_1_1MinNSiHitsAboveEta" kindref="compound">MinNSiHitsAboveEta</ref>(<ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDetTrackSelectionTool</ref>*,<sp/>Int_t<sp/>hits=0,<sp/>Double_t<sp/>eta=0);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setEtaCutoff(Double_t<sp/>eta)<sp/>{m_etaCutoff<sp/>=<sp/>eta;}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMinSiHits(Int_t<sp/>hits)<sp/>{m_minSiHits<sp/>=<sp/>hits;}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StatusCode<sp/>initialize();</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>Double_t<sp/>m_etaCutoff;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>Int_t<sp/>m_minSiHits;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;SummaryAccessor&gt;<sp/>m_pixAccessor;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;SummaryAccessor&gt;<sp/>m_pixDeadAccessor;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;SummaryAccessor&gt;<sp/>m_sctAccessor;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;SummaryAccessor&gt;<sp/>m_sctDeadAccessor;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;<sp/>FuncAccessor&lt;double,<sp/>&amp;xAOD::TrackParticle::eta&gt;<sp/>&gt;<sp/>m_etaAccessor;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------<sp/>MaxChiSq<sp/>----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356" refid="d9/d49/classInDet_1_1MaxChiSq" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d9/d49/classInDet_1_1MaxChiSq" kindref="compound">MaxChiSq</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d0/d6e/classInDet_1_1TrackCut" kindref="compound">TrackCut</ref><sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d49/classInDet_1_1MaxChiSq" kindref="compound">MaxChiSq</ref>(<ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDetTrackSelectionTool</ref>*,<sp/>Double_t<sp/>max=0);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMaxValue(Double_t<sp/>max)<sp/>{m_maxValue<sp/>=<sp/>max;}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StatusCode<sp/>initialize();</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>Double_t<sp/>m_maxValue;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;FitQualityAccessor&gt;<sp/>m_accessor;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------<sp/>MaxChiSqPerNdf<sp/>----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="d0/d6b/classInDet_1_1MaxChiSqPerNdf" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d0/d6b/classInDet_1_1MaxChiSqPerNdf" kindref="compound">MaxChiSqPerNdf</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d0/d6e/classInDet_1_1TrackCut" kindref="compound">TrackCut</ref><sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d6b/classInDet_1_1MaxChiSqPerNdf" kindref="compound">MaxChiSqPerNdf</ref>(<ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDetTrackSelectionTool</ref>*,<sp/>Double_t<sp/>max=0);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMaxValue(Double_t<sp/>max)<sp/>{m_maxValue<sp/>=<sp/>max;}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StatusCode<sp/>initialize();</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>Double_t<sp/>m_maxValue;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;FitQualityAccessor&gt;<sp/>m_accessor;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------<sp/>MinProb<sp/>----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380" refid="d7/dd3/classInDet_1_1MinProb" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d7/dd3/classInDet_1_1MinProb" kindref="compound">MinProb</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d0/d6e/classInDet_1_1TrackCut" kindref="compound">TrackCut</ref><sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/dd3/classInDet_1_1MinProb" kindref="compound">MinProb</ref>(<ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDetTrackSelectionTool</ref>*,<sp/>Double_t<sp/>min=0);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMinValue(Double_t<sp/>min)<sp/>{m_minValue<sp/>=<sp/>min;}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StatusCode<sp/>initialize();</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>Double_t<sp/>m_minValue;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;FitQualityAccessor&gt;<sp/>m_accessor;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------<sp/>MinEProbHT<sp/>----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>unfortunately<sp/>not<sp/>yet<sp/>a<sp/>summary<sp/>value<sp/>in<sp/>Trk::Tracks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>so<sp/>we<sp/>can&apos;t<sp/>call<sp/>this<sp/>a<sp/>summary<sp/>value<sp/>cut</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394" refid="de/dbf/classInDet_1_1MinEProbHTCut" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="de/dbf/classInDet_1_1MinEProbHTCut" kindref="compound">MinEProbHTCut</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d0/d6e/classInDet_1_1TrackCut" kindref="compound">TrackCut</ref><sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/dbf/classInDet_1_1MinEProbHTCut" kindref="compound">MinEProbHTCut</ref>(<ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDetTrackSelectionTool</ref>*,<sp/>Double_t<sp/>min=0);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMin(Double_t<sp/>min)<sp/>{m_minValue<sp/>=<sp/>min;}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StatusCode<sp/>initialize();</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>Double_t<sp/>m_minValue;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;eProbabilityHTAccessor&gt;<sp/>m_accessor;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>MinEProbHT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>----------------<sp/>EtaDependentSiliconHitsCut<sp/>----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406" refid="d0/d8f/classInDet_1_1EtaDependentSiliconHitsCut" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d0/d8f/classInDet_1_1EtaDependentSiliconHitsCut" kindref="compound">EtaDependentSiliconHitsCut</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d0/d6e/classInDet_1_1TrackCut" kindref="compound">TrackCut</ref><sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d8f/classInDet_1_1EtaDependentSiliconHitsCut" kindref="compound">EtaDependentSiliconHitsCut</ref>(<ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDetTrackSelectionTool</ref>*,<sp/>std::vector&lt;Double_t&gt;<sp/>eta,<sp/>std::vector&lt;Int_t&gt;<sp/>hits);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setEta(std::vector&lt;Double_t&gt;<sp/>eta)<sp/>{m_etaCutoffs<sp/>=<sp/>eta;}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setHits(std::vector&lt;Int_t&gt;<sp/>hits)<sp/>{m_siHitCuts<sp/>=<sp/>hits;}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StatusCode<sp/>initialize();</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Double_t&gt;<sp/>m_etaCutoffs;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Int_t&gt;<sp/>m_siHitCuts;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;<sp/>FuncAccessor&lt;<sp/>double,<sp/>&amp;xAOD::TrackParticle::eta&gt;<sp/>&gt;<sp/>m_etaAccessor;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;SummaryAccessor&gt;<sp/>m_sctAccessor;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;SummaryAccessor&gt;<sp/>m_pixAccessor;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;SummaryAccessor&gt;<sp/>m_sctDeadAccessor;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;SummaryAccessor&gt;<sp/>m_pixDeadAccessor;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------<sp/>EtaDependentPtCut<sp/>----------------<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423" refid="d8/d0f/classInDet_1_1EtaDependentPtCut" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d8/d0f/classInDet_1_1EtaDependentPtCut" kindref="compound">EtaDependentPtCut</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d0/d6e/classInDet_1_1TrackCut" kindref="compound">TrackCut</ref><sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d0f/classInDet_1_1EtaDependentPtCut" kindref="compound">EtaDependentPtCut</ref>(<ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDetTrackSelectionTool</ref>*,<sp/>std::vector&lt;Double_t&gt;<sp/>eta,<sp/>std::vector&lt;Double_t&gt;<sp/>pt);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setEta(std::vector&lt;Double_t&gt;<sp/>eta)<sp/>{m_etaCutoffs<sp/>=<sp/>eta;}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPt(std::vector&lt;Double_t&gt;<sp/>pt)<sp/>{m_ptCuts<sp/>=<sp/>pt;}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StatusCode<sp/>initialize();</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Double_t&gt;<sp/>m_etaCutoffs;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Double_t&gt;<sp/>m_ptCuts;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;<sp/>FuncAccessor&lt;<sp/>double,<sp/>&amp;xAOD::TrackParticle::eta&gt;<sp/>&gt;<sp/>m_etaAccessor;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;<sp/>FuncAccessor&lt;<sp/>double,<sp/>&amp;xAOD::TrackParticle::pt&gt;<sp/>&gt;<sp/>m_ptAccessor;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------<sp/>PtDependentSctHitsCut<sp/>----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>cut<sp/>could<sp/>in<sp/>principle<sp/>be<sp/>constructed<sp/>out<sp/>of<sp/>others,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>but<sp/>it<sp/>might<sp/>not<sp/>be<sp/>so<sp/>clean.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>maybe<sp/>as<sp/>a<sp/>FuncSummaryValueCut<sp/>if<sp/>the<sp/>lambda<sp/>function<sp/>capture<sp/>of<sp/>the<sp/>vectors<sp/>works<sp/>in<sp/>a<sp/>performant<sp/>manner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443" refid="dd/d97/classInDet_1_1PtDependentSctHitsCut" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="dd/d97/classInDet_1_1PtDependentSctHitsCut" kindref="compound">PtDependentSctHitsCut</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d0/d6e/classInDet_1_1TrackCut" kindref="compound">TrackCut</ref><sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d97/classInDet_1_1PtDependentSctHitsCut" kindref="compound">PtDependentSctHitsCut</ref>(<ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDetTrackSelectionTool</ref>*,<sp/>std::vector&lt;Double_t&gt;<sp/>pt,<sp/>std::vector&lt;Int_t&gt;<sp/>sct);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPt(std::vector&lt;Double_t&gt;<sp/>pt)<sp/>{m_ptCutoffs<sp/>=<sp/>pt;}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSct(std::vector&lt;Int_t&gt;<sp/>sct)<sp/>{m_sctHitCuts<sp/>=<sp/>sct;}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StatusCode<sp/>initialize();</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Double_t&gt;<sp/>m_ptCutoffs;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Int_t&gt;<sp/>m_sctHitCuts;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;<sp/>FuncAccessor&lt;<sp/>double,<sp/>&amp;xAOD::TrackParticle::pt&gt;<sp/>&gt;<sp/>m_ptAccessor;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;SummaryAccessor&gt;<sp/>m_sctAccessor;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;SummaryAccessor&gt;<sp/>m_sctDeadAccessor;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>XAOD_ANALYSIS</highlight></codeline>
<codeline lineno="459"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------<sp/>MinSiHitsModTopBottomCut<sp/>----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460" refid="d9/d46/classInDet_1_1MinSiHitsModTopBottomCut" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d9/d46/classInDet_1_1MinSiHitsModTopBottomCut" kindref="compound">MinSiHitsModTopBottomCut</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d0/d6e/classInDet_1_1TrackCut" kindref="compound">TrackCut</ref><sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d46/classInDet_1_1MinSiHitsModTopBottomCut" kindref="compound">MinSiHitsModTopBottomCut</ref>(<ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDetTrackSelectionTool</ref>*,<sp/>Int_t<sp/>top=0,<sp/>Int_t<sp/>bottom=0);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMinTop(uint8_t<sp/>min)<sp/>{m_minTop<sp/>=<sp/>min;}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMinBottom(uint8_t<sp/>min)<sp/>{m_minBottom<sp/>=<sp/>min;}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>StatusCode<sp/>initialize();</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>m_minTop;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>m_minBottom;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;SiHitsTopBottomAccessor&gt;<sp/>m_accessor;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="473"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>InDet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------<sp/>template<sp/>definitions<sp/>-----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>AccessorType&gt;</highlight></codeline>
<codeline lineno="483"><highlight class="normal">StatusCode<sp/>InDet::TrackCut::getAccessor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>accessorName,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;AccessorType&gt;&amp;<sp/>accessor)</highlight></codeline>
<codeline lineno="485"><highlight class="normal">{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>function<sp/>looks<sp/>for<sp/>the<sp/>accessor<sp/>indicated<sp/>by<sp/>&quot;name&quot;<sp/>in<sp/>the<sp/>tool&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>track<sp/>accessors<sp/>and<sp/>assigns<sp/>&quot;accessor&quot;<sp/>to<sp/>it<sp/>if<sp/>it<sp/>exists,<sp/>creating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>accessor<sp/>if<sp/>it<sp/>does<sp/>not.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;<sp/>std::string,<sp/>std::shared_ptr&lt;TrackAccessor&gt;<sp/>&gt;::const_iterator<sp/>it<sp/>=</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>std::find_if(m_trackAccessors-&gt;begin(),<sp/>m_trackAccessors-&gt;end(),</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;]<sp/>(std::pair&lt;<sp/>std::string,<sp/>std::shared_ptr&lt;TrackAccessor&gt;<sp/>&gt;<sp/>acc)</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>acc.first<sp/>==<sp/>accessorName;}<sp/>);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>m_trackAccessors-&gt;end())<sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>can&apos;t<sp/>find<sp/>the<sp/>accessor,<sp/>add<sp/>one<sp/>to<sp/>the<sp/>tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_selectionTool)<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(<sp/></highlight><highlight class="stringliteral">&quot;Must<sp/>initialize<sp/>TrackCut<sp/>with<sp/>pointer<sp/>to<sp/>the<sp/>selection<sp/>tool<sp/>before<sp/>adding<sp/>accessors.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>accessor<sp/>=<sp/>std::make_shared&lt;AccessorType&gt;(m_selectionTool);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>(*m_trackAccessors)[accessorName]<sp/>=<sp/>accessor;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(<sp/></highlight><highlight class="stringliteral">&quot;Adding<sp/>accessor<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>accessorName<sp/>);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>accessor<sp/>=<sp/>std::dynamic_pointer_cast&lt;AccessorType&gt;(it-&gt;second);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(accessor==</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(<sp/></highlight><highlight class="stringliteral">&quot;Logic<sp/>error:<sp/>could<sp/>not<sp/>cast<sp/>accessor<sp/>to<sp/>type<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(AccessorType).name()<sp/>);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!accessor)<sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>could<sp/>happen<sp/>if<sp/>the<sp/>accessor<sp/>indicated<sp/>by<sp/>&quot;name&quot;<sp/>is<sp/>not<sp/>of<sp/>type<sp/>&quot;AccessorType&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>instantiate<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>accessorName<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>accessor.<sp/>Pointer<sp/>to<sp/>accessor<sp/>is<sp/>to<sp/>type<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(AccessorType).name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>Is<sp/>this<sp/>correct?&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------<sp/>MinCut<sp/>----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>T<sp/>(xAOD::TrackParticle::*Func)()<sp/>const&gt;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><ref refid="de/d31/classInDet_1_1MinCut" kindref="compound">InDet::MinCut&lt;T,Func&gt;::MinCut</ref>(<ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDet::InDetTrackSelectionTool</ref>*<sp/>tool,<sp/><ref refid="d1/def/classT" kindref="compound">T</ref><sp/>min,<sp/>std::string<sp/>accName)</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>:<sp/>InDet::TrackCut(tool)</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/>,<sp/>m_minValue(min)</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>,<sp/>m_accName(accName)</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/>,<sp/>m_accessor(nullptr)</highlight></codeline>
<codeline lineno="529"><highlight class="normal">{</highlight></codeline>
<codeline lineno="530"><highlight class="normal">}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>T<sp/>(xAOD::TrackParticle::*Func)()<sp/>const&gt;</highlight></codeline>
<codeline lineno="533"><highlight class="normal">StatusCode<sp/><ref refid="de/d31/classInDet_1_1MinCut" kindref="compound">InDet::MinCut&lt;T,Func&gt;::initialize</ref>()</highlight></codeline>
<codeline lineno="534"><highlight class="normal">{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/>ATH_CHECK(<sp/>TrackCut::initialize()<sp/>);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_accName.empty())<sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(<sp/></highlight><highlight class="stringliteral">&quot;Accessor<sp/>name<sp/>string<sp/>is<sp/>empty!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>ATH_CHECK(<sp/>getAccessor(m_accName,<sp/>m_accessor)<sp/>);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>T<sp/>(xAOD::TrackParticle::*Func)()<sp/>const&gt;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d31/classInDet_1_1MinCut" kindref="compound">InDet::MinCut&lt;T,Func&gt;::result</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="546"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_accessor)<sp/>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(<sp/>m_accName<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>accessor<sp/>not<sp/>valid.<sp/>Track<sp/>will<sp/>not<sp/>pass.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_accessor-&gt;getValue()<sp/>&gt;=<sp/>m_minValue;</highlight></codeline>
<codeline lineno="552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------<sp/>MaxCut<sp/>----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>T<sp/>(xAOD::TrackParticle::*Func)()<sp/>const&gt;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><ref refid="dd/db2/classInDet_1_1MaxCut" kindref="compound">InDet::MaxCut&lt;T,Func&gt;::MaxCut</ref>(<ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDet::InDetTrackSelectionTool</ref>*<sp/>tool,<sp/><ref refid="d1/def/classT" kindref="compound">T</ref><sp/>max,<sp/>std::string<sp/>accName)</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/>:<sp/>InDet::TrackCut(tool)</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/>,<sp/>m_maxValue(max)</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/>,<sp/>m_accName(accName)</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/>,<sp/>m_accessor(nullptr)</highlight></codeline>
<codeline lineno="561"><highlight class="normal">{</highlight></codeline>
<codeline lineno="562"><highlight class="normal">}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>T<sp/>(xAOD::TrackParticle::*Func)()<sp/>const&gt;</highlight></codeline>
<codeline lineno="565"><highlight class="normal">StatusCode<sp/><ref refid="dd/db2/classInDet_1_1MaxCut" kindref="compound">InDet::MaxCut&lt;T,Func&gt;::initialize</ref>()</highlight></codeline>
<codeline lineno="566"><highlight class="normal">{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/>ATH_CHECK(<sp/>TrackCut::initialize()<sp/>);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_accName.empty())<sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(<sp/></highlight><highlight class="stringliteral">&quot;Accessor<sp/>name<sp/>string<sp/>is<sp/>empty!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>ATH_CHECK(<sp/>getAccessor(m_accName,<sp/>m_accessor)<sp/>);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="574"><highlight class="normal">}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>T<sp/>(xAOD::TrackParticle::*Func)()<sp/>const&gt;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/db2/classInDet_1_1MaxCut" kindref="compound">InDet::MaxCut&lt;T,Func&gt;::result</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="578"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_accessor)<sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(<sp/>m_accName<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>accessor<sp/>not<sp/>valid.<sp/>Track<sp/>will<sp/>not<sp/>pass.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_accessor-&gt;getValue()<sp/>&lt;=<sp/>m_maxValue;</highlight></codeline>
<codeline lineno="584"><highlight class="normal">}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------<sp/>MinAbsCut<sp/>----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>T<sp/>(xAOD::TrackParticle::*Func)()<sp/>const&gt;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><ref refid="d1/d75/classInDet_1_1MinAbsCut" kindref="compound">InDet::MinAbsCut&lt;T,Func&gt;::MinAbsCut</ref>(<ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDet::InDetTrackSelectionTool</ref>*<sp/>tool,<sp/><ref refid="d1/def/classT" kindref="compound">T</ref><sp/>min,<sp/>std::string<sp/>accName)</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/>:<sp/>InDet::TrackCut(tool)</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/>,<sp/>m_minValue(min)</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/>,<sp/>m_accName(accName)</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/>,<sp/>m_accessor(nullptr)</highlight></codeline>
<codeline lineno="594"><highlight class="normal">{</highlight></codeline>
<codeline lineno="595"><highlight class="normal">}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>T<sp/>(xAOD::TrackParticle::*Func)()<sp/>const&gt;</highlight></codeline>
<codeline lineno="598"><highlight class="normal">StatusCode<sp/><ref refid="d1/d75/classInDet_1_1MinAbsCut" kindref="compound">InDet::MinAbsCut&lt;T,Func&gt;::initialize</ref>()</highlight></codeline>
<codeline lineno="599"><highlight class="normal">{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/>ATH_CHECK(<sp/>TrackCut::initialize()<sp/>);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_accName.empty())<sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(<sp/></highlight><highlight class="stringliteral">&quot;Accessor<sp/>name<sp/>string<sp/>is<sp/>empty!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/>ATH_CHECK(<sp/>getAccessor(m_accName,<sp/>m_accessor)<sp/>);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="607"><highlight class="normal">}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>T<sp/>(xAOD::TrackParticle::*Func)()<sp/>const&gt;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d1/d75/classInDet_1_1MinAbsCut" kindref="compound">InDet::MinAbsCut&lt;T,Func&gt;::result</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="611"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_accessor)<sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(<sp/>m_accName<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>accessor<sp/>not<sp/>valid.<sp/>Track<sp/>will<sp/>not<sp/>pass.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::fabs(m_accessor)-&gt;getValue()<sp/>&gt;=<sp/>m_minValue;</highlight></codeline>
<codeline lineno="617"><highlight class="normal">}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------<sp/>MaxAbsCut<sp/>----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>T<sp/>(xAOD::TrackParticle::*Func)()<sp/>const&gt;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><ref refid="dc/d86/classInDet_1_1MaxAbsCut" kindref="compound">InDet::MaxAbsCut&lt;T,Func&gt;::MaxAbsCut</ref>(<ref refid="d3/d8c/classInDet_1_1InDetTrackSelectionTool" kindref="compound">InDet::InDetTrackSelectionTool</ref>*<sp/>tool,<sp/><ref refid="d1/def/classT" kindref="compound">T</ref><sp/>max,<sp/>std::string<sp/>accName)</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/>:<sp/>InDet::TrackCut(tool)</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/>,<sp/>m_maxValue(max)</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/>,<sp/>m_accName(accName)</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/>,<sp/>m_accessor(nullptr)</highlight></codeline>
<codeline lineno="626"><highlight class="normal">{</highlight></codeline>
<codeline lineno="627"><highlight class="normal">}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>T<sp/>(xAOD::TrackParticle::*Func)()<sp/>const&gt;</highlight></codeline>
<codeline lineno="630"><highlight class="normal">StatusCode<sp/><ref refid="dc/d86/classInDet_1_1MaxAbsCut" kindref="compound">InDet::MaxAbsCut&lt;T,Func&gt;::initialize</ref>()</highlight></codeline>
<codeline lineno="631"><highlight class="normal">{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/>ATH_CHECK(<sp/>TrackCut::initialize()<sp/>);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_accName.empty())<sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(<sp/></highlight><highlight class="stringliteral">&quot;Accessor<sp/>name<sp/>string<sp/>is<sp/>empty!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/>ATH_CHECK(<sp/>getAccessor(m_accName,<sp/>m_accessor)<sp/>);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>T<sp/>(xAOD::TrackParticle::*Func)()<sp/>const&gt;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dc/d86/classInDet_1_1MaxAbsCut" kindref="compound">InDet::MaxAbsCut&lt;T,Func&gt;::result</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="643"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_accessor)<sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(<sp/>m_accName<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>accessor<sp/>not<sp/>valid.<sp/>Track<sp/>will<sp/>not<sp/>pass.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::fabs(m_accessor-&gt;getValue())<sp/>&lt;=<sp/>m_maxValue;</highlight></codeline>
<codeline lineno="649"><highlight class="normal">}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>INDETTRACKSELECTIONTOOL_INDETTRACKCUT_H</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/InDetTrackSelectionTool/src/InDetTrackCut.h"/>
  </compounddef>
</doxygen>
