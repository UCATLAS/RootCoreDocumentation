<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d2/dcb/exceptions__test_8cxx" kind="file">
    <compoundname>exceptions_test.cxx</compoundname>
    <includes refid="d4/d03/exceptions_8h" local="yes">AthContainers/exceptions.h</includes>
    <includes refid="db/d7f/AuxTypeRegistry_8h" local="yes">AthContainers/AuxTypeRegistry.h</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="74044">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="74046">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="74006" relation="include">
        </childnode>
        <childnode refid="74008" relation="include">
        </childnode>
        <childnode refid="74015" relation="include">
        </childnode>
        <childnode refid="74016" relation="include">
        </childnode>
      </node>
      <node id="74047">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="74014">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="74016">
        <label>functional</label>
      </node>
      <node id="74012">
        <label>limits</label>
      </node>
      <node id="74042">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="74009">
        <label>iterator</label>
      </node>
      <node id="74029">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="74013" relation="include">
        </childnode>
        <childnode refid="74030" relation="include">
        </childnode>
      </node>
      <node id="74002">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="74003" relation="include">
        </childnode>
        <childnode refid="74017" relation="include">
        </childnode>
        <childnode refid="74018" relation="include">
        </childnode>
        <childnode refid="74019" relation="include">
        </childnode>
        <childnode refid="74013" relation="include">
        </childnode>
      </node>
      <node id="74025">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="74026" relation="include">
        </childnode>
        <childnode refid="74010" relation="include">
        </childnode>
      </node>
      <node id="74031">
        <label>stdint.h</label>
      </node>
      <node id="74022">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="74004" relation="include">
        </childnode>
        <childnode refid="74019" relation="include">
        </childnode>
      </node>
      <node id="74005">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="74006" relation="include">
        </childnode>
        <childnode refid="74015" relation="include">
        </childnode>
        <childnode refid="74016" relation="include">
        </childnode>
      </node>
      <node id="74001">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/exceptions_test.cxx</label>
        <link refid="exceptions_test.cxx"/>
        <childnode refid="74002" relation="include">
        </childnode>
        <childnode refid="74020" relation="include">
        </childnode>
        <childnode refid="74048" relation="include">
        </childnode>
      </node>
      <node id="74011">
        <label>cmath</label>
      </node>
      <node id="74018">
        <label>stdexcept</label>
      </node>
      <node id="74045">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="74013">
        <label>string</label>
      </node>
      <node id="74021">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="74004" relation="include">
        </childnode>
        <childnode refid="74019" relation="include">
        </childnode>
      </node>
      <node id="74037">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="74034">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="74043">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="74028">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="74029" relation="include">
        </childnode>
        <childnode refid="74012" relation="include">
        </childnode>
        <childnode refid="74031" relation="include">
        </childnode>
        <childnode refid="74032" relation="include">
        </childnode>
      </node>
      <node id="74003">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="74004" relation="include">
        </childnode>
        <childnode refid="74005" relation="include">
        </childnode>
      </node>
      <node id="74006">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="74007" relation="include">
        </childnode>
        <childnode refid="74008" relation="include">
        </childnode>
        <childnode refid="74009" relation="include">
        </childnode>
        <childnode refid="74004" relation="include">
        </childnode>
        <childnode refid="74010" relation="include">
        </childnode>
        <childnode refid="74011" relation="include">
        </childnode>
        <childnode refid="74012" relation="include">
        </childnode>
        <childnode refid="74013" relation="include">
        </childnode>
        <childnode refid="74014" relation="include">
        </childnode>
      </node>
      <node id="74019">
        <label>typeinfo</label>
      </node>
      <node id="74032">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="74030">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="74036">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="74020">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="74003" relation="include">
        </childnode>
        <childnode refid="74021" relation="include">
        </childnode>
        <childnode refid="74022" relation="include">
        </childnode>
        <childnode refid="74023" relation="include">
        </childnode>
        <childnode refid="74038" relation="include">
        </childnode>
        <childnode refid="74040" relation="include">
        </childnode>
        <childnode refid="74004" relation="include">
        </childnode>
        <childnode refid="74019" relation="include">
        </childnode>
        <childnode refid="74026" relation="include">
        </childnode>
        <childnode refid="74046" relation="include">
        </childnode>
        <childnode refid="74047" relation="include">
        </childnode>
      </node>
      <node id="74026">
        <label>vector</label>
      </node>
      <node id="74008">
        <label>utility</label>
      </node>
      <node id="74033">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="74041">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="74024">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="74040">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="74041" relation="include">
        </childnode>
        <childnode refid="74042" relation="include">
        </childnode>
        <childnode refid="74043" relation="include">
        </childnode>
        <childnode refid="74044" relation="include">
        </childnode>
        <childnode refid="74045" relation="include">
        </childnode>
      </node>
      <node id="74010">
        <label>cstdlib</label>
      </node>
      <node id="74048">
        <label>iostream</label>
      </node>
      <node id="74017">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="74004">
        <label>cstddef</label>
      </node>
      <node id="74023">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="74021" relation="include">
        </childnode>
        <childnode refid="74024" relation="include">
        </childnode>
        <childnode refid="74025" relation="include">
        </childnode>
        <childnode refid="74027" relation="include">
        </childnode>
        <childnode refid="74033" relation="include">
        </childnode>
        <childnode refid="74019" relation="include">
        </childnode>
        <childnode refid="74026" relation="include">
        </childnode>
        <childnode refid="74007" relation="include">
        </childnode>
        <childnode refid="74031" relation="include">
        </childnode>
        <childnode refid="74035" relation="include">
        </childnode>
        <childnode refid="74036" relation="include">
        </childnode>
        <childnode refid="74037" relation="include">
        </childnode>
      </node>
      <node id="74035">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="74039">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="74027">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="74024" relation="include">
        </childnode>
        <childnode refid="74028" relation="include">
        </childnode>
        <childnode refid="74033" relation="include">
        </childnode>
        <childnode refid="74026" relation="include">
        </childnode>
        <childnode refid="74034" relation="include">
        </childnode>
      </node>
      <node id="74007">
        <label>algorithm</label>
      </node>
      <node id="74015">
        <label>memory</label>
      </node>
      <node id="74038">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="74022" relation="include">
        </childnode>
        <childnode refid="74023" relation="include">
        </childnode>
        <childnode refid="74039" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="d2/dcb/exceptions__test_8cxx_1a1440a7779ac56f47a3f355ce4a8c7da0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test1</definition>
        <argsstring>()</argsstring>
        <name>test1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/exceptions_test.cxx" line="17" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/exceptions_test.cxx" bodystart="16" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="d2/dcb/exceptions__test_8cxx_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/exceptions_test.cxx" line="53" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/exceptions_test.cxx" bodystart="52" bodyend="56"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Regression tests for exceptions. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>scott snyder &lt;<ulink url="mailto:snyder@bnl.gov">snyder@bnl.gov</ulink>&gt; </para></simplesect>
<simplesect kind="date"><para>Sep, 2013 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>$Id$</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight><highlight class="preprocessor">#undef<sp/>NDEBUG</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d4/d03/exceptions_8h" kindref="compound" tooltip="Exceptions that can be thrown from AthContainers.">AthContainers/exceptions.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="db/d7f/AuxTypeRegistry_8h" kindref="compound" tooltip="Handle mappings between names and auxid_t.">AthContainers/AuxTypeRegistry.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test1()</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;test1\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry" kindref="compound" tooltip="Handle mappings between names and auxid_t.">SG::AuxTypeRegistry</ref>&amp;<sp/>r<sp/>=<sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry_1ab22c247525e0883b46012f14b6f5a048" kindref="member" tooltip="Return the singleton registry instance.">SG::AuxTypeRegistry::instance</ref>();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/>id1<sp/>=<sp/>r.<ref refid="db/d33/classSG_1_1AuxTypeRegistry_1a5b1f2839e2695b9f56494d2b9dbc5057" kindref="member" tooltip="Look up a name -&amp;gt; auxid_t mapping.">getAuxID</ref>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/>id2<sp/>=<sp/>r.<ref refid="db/d33/classSG_1_1AuxTypeRegistry_1a5b1f2839e2695b9f56494d2b9dbc5057" kindref="member" tooltip="Look up a name -&amp;gt; auxid_t mapping.">getAuxID</ref>&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;bar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cl&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="d0/d45/classSG_1_1ExcNoAuxStore" kindref="compound" tooltip="Exception --- Aux data requested from object with no store.">SG::ExcNoAuxStore</ref>(id1).what()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="d0/d45/classSG_1_1ExcNoAuxStore" kindref="compound" tooltip="Exception --- Aux data requested from object with no store.">SG::ExcNoAuxStore</ref>(id2).what()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="d0/d45/classSG_1_1ExcNoAuxStore" kindref="compound" tooltip="Exception --- Aux data requested from object with no store.">SG::ExcNoAuxStore</ref>(SG::null_auxid).what()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="d0/d45/classSG_1_1ExcNoAuxStore" kindref="compound" tooltip="Exception --- Aux data requested from object with no store.">SG::ExcNoAuxStore</ref>(</highlight><highlight class="stringliteral">&quot;op&quot;</highlight><highlight class="normal">).what()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="d8/da7/classSG_1_1ExcBadAuxVar" kindref="compound" tooltip="Exception --- Attempt to retrieve nonexistent aux data item.">SG::ExcBadAuxVar</ref>(id1).what()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="da/ddd/classSG_1_1ExcConstAuxData" kindref="compound" tooltip="Exception --- Non-const operation performed on const aux data.">SG::ExcConstAuxData</ref>(</highlight><highlight class="stringliteral">&quot;someop&quot;</highlight><highlight class="normal">,<sp/>id1).what()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="da/ddd/classSG_1_1ExcConstAuxData" kindref="compound" tooltip="Exception --- Non-const operation performed on const aux data.">SG::ExcConstAuxData</ref>(</highlight><highlight class="stringliteral">&quot;otherop&quot;</highlight><highlight class="normal">).what()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="d4/d77/classSG_1_1ExcUntrackedSetStore" kindref="compound" tooltip="Exception --- Attempt to set aux data store on container that doesn&amp;#39;t track indices...">SG::ExcUntrackedSetStore</ref>().what()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="d8/ded/classSG_1_1ExcBadPrivateStore" kindref="compound" tooltip="Exception --- Bad use of private store.">SG::ExcBadPrivateStore</ref>(</highlight><highlight class="stringliteral">&quot;op&quot;</highlight><highlight class="normal">).what()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="df/d74/classSG_1_1ExcAuxTypeMismatch" kindref="compound" tooltip="Exception --- Type mismatch for aux variable.">SG::ExcAuxTypeMismatch</ref>(id1,<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)).what()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="df/d74/classSG_1_1ExcAuxTypeMismatch" kindref="compound" tooltip="Exception --- Type mismatch for aux variable.">SG::ExcAuxTypeMismatch</ref>(id2,<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)).what()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="df/dde/classSG_1_1ExcInsertionInBaseClass" kindref="compound" tooltip="Exception --- Attempted to do OP on a BASE base class of COMPLETE; can only be done...">SG::ExcInsertionInBaseClass</ref>(</highlight><highlight class="stringliteral">&quot;op&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)).what()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="d5/d41/classSG_1_1ExcStoreLocked" kindref="compound" tooltip="Exception --- Attempted to modify auxiliary data in a locked store.">SG::ExcStoreLocked</ref>(id1).what()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="d5/d41/classSG_1_1ExcStoreLocked" kindref="compound" tooltip="Exception --- Attempted to modify auxiliary data in a locked store.">SG::ExcStoreLocked</ref>(</highlight><highlight class="stringliteral">&quot;op&quot;</highlight><highlight class="normal">).what()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="db/db6/classSG_1_1ExcNonowningContainer" kindref="compound" tooltip="Exception --- Attempted to insert a unique_ptr to a non-owning container.">SG::ExcNonowningContainer</ref>().what()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="d9/d63/classSG_1_1ExcUnknownAuxItem" kindref="compound" tooltip="Exception --- Unknown aux data item.">SG::ExcUnknownAuxItem</ref>(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">).what()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="d9/d63/classSG_1_1ExcUnknownAuxItem" kindref="compound" tooltip="Exception --- Unknown aux data item.">SG::ExcUnknownAuxItem</ref>(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bar&quot;</highlight><highlight class="normal">).what()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="d9/d63/classSG_1_1ExcUnknownAuxItem" kindref="compound" tooltip="Exception --- Unknown aux data item.">SG::ExcUnknownAuxItem</ref>(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bar&quot;</highlight><highlight class="normal">,<sp/>&amp;</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)).what()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>test1();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/exceptions_test.cxx"/>
  </compounddef>
</doxygen>
