<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d2/d60/MakeUncertaintyPlots_8cxx" kind="file">
    <compoundname>MakeUncertaintyPlots.cxx</compoundname>
    <includes refid="d9/d58/JetUncertaintiesTool_8h" local="yes">JetUncertainties/JetUncertaintiesTool.h</includes>
    <includes refid="dc/d18/JetUncertainties_2JetUncertainties_2Helpers_8h" local="yes">JetUncertainties/Helpers.h</includes>
    <includes refid="d8/d4c/UncertaintyEnum_8h" local="yes">JetUncertainties/UncertaintyEnum.h</includes>
    <includes refid="da/db7/Jet_8h" local="yes">xAODJet/Jet.h</includes>
    <includes refid="d5/d55/JetContainer_8h" local="yes">xAODJet/JetContainer.h</includes>
    <includes refid="d6/d1b/JetAuxContainer_8h" local="yes">xAODJet/JetAuxContainer.h</includes>
    <includes refid="d9/d60/EventInfo_8h" local="yes">xAODEventInfo/EventInfo.h</includes>
    <includes refid="d7/d31/EventInfoContainer_8h" local="yes">xAODEventInfo/EventInfoContainer.h</includes>
    <includes refid="d2/db0/EventInfoAuxContainer_8h" local="yes">xAODEventInfo/EventInfoAuxContainer.h</includes>
    <includes local="yes">../testingMacros/atlasstyle/AtlasStyle.C</includes>
    <includes local="yes">../testingMacros/atlasstyle/AtlasLabels.C</includes>
    <includes local="yes">TString.h</includes>
    <includes local="yes">TCanvas.h</includes>
    <includes local="yes">TH1D.h</includes>
    <includes local="yes">TGraphErrors.h</includes>
    <includes local="yes">TColor.h</includes>
    <includes local="yes">TBox.h</includes>
    <includes local="yes">math.h</includes>
    <includes local="no">vector</includes>
    <includes refid="d3/d27/OptionHelper_8h" local="yes">OptionHelper.h</includes>
    <incdepgraph>
      <node id="200503">
        <label>list</label>
      </node>
      <node id="200512">
        <label>AthContainers/tools/DVL_algorithms.icc</label>
        <link refid="df/daa/DVL__algorithms_8icc"/>
        <childnode refid="200497" relation="include">
        </childnode>
        <childnode refid="200504" relation="include">
        </childnode>
        <childnode refid="200425" relation="include">
        </childnode>
        <childnode refid="200493" relation="include">
        </childnode>
        <childnode refid="200432" relation="include">
        </childnode>
      </node>
      <node id="200497">
        <label>AthContainers/tools/DVLNoBase.h</label>
        <link refid="d7/d92/DVLNoBase_8h"/>
      </node>
      <node id="200470">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="200519">
        <label>AthContainers/tools/DVLDataBucket.h</label>
        <link refid="d4/d16/DVLDataBucket_8h"/>
        <childnode refid="200520" relation="include">
        </childnode>
        <childnode refid="200498" relation="include">
        </childnode>
        <childnode refid="200439" relation="include">
        </childnode>
        <childnode refid="200521" relation="include">
        </childnode>
      </node>
      <node id="200472">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="200431" relation="include">
        </childnode>
        <childnode refid="200433" relation="include">
        </childnode>
        <childnode refid="200439" relation="include">
        </childnode>
        <childnode refid="200440" relation="include">
        </childnode>
      </node>
      <node id="200408">
        <label>AsgTools/IAsgTool.h</label>
        <link refid="df/dd4/IAsgTool_8h_source"/>
        <childnode refid="200409" relation="include">
        </childnode>
        <childnode refid="200410" relation="include">
        </childnode>
        <childnode refid="200411" relation="include">
        </childnode>
        <childnode refid="200412" relation="include">
        </childnode>
      </node>
      <node id="200575">
        <label>xAODEventInfo/EventInfo.h</label>
        <link refid="d9/d60/EventInfo_8h_source"/>
        <childnode refid="200576" relation="include">
        </childnode>
        <childnode refid="200544" relation="include">
        </childnode>
      </node>
      <node id="200473">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="200442">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="200427" relation="include">
        </childnode>
        <childnode refid="200429" relation="include">
        </childnode>
        <childnode refid="200443" relation="include">
        </childnode>
        <childnode refid="200441" relation="include">
        </childnode>
      </node>
      <node id="200536">
        <label>EventPrimitives/EventPrimitives.h</label>
        <link refid="d1/d54/EventPrimitives_8h_source"/>
        <childnode refid="200537" relation="include">
        </childnode>
        <childnode refid="200538" relation="include">
        </childnode>
        <childnode refid="200539" relation="include">
        </childnode>
      </node>
      <node id="200438">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="200440">
        <label>functional</label>
      </node>
      <node id="200578">
        <label>PATInterfaces/ISystematicsTool.h</label>
        <link refid="d6/db3/ISystematicsTool_8h_source"/>
        <childnode refid="200408" relation="include">
        </childnode>
        <childnode refid="200579" relation="include">
        </childnode>
        <childnode refid="200580" relation="include">
        </childnode>
        <childnode refid="200582" relation="include">
        </childnode>
      </node>
      <node id="200494">
        <label>boost/version.hpp</label>
      </node>
      <node id="200437">
        <label>limits</label>
      </node>
      <node id="200406">
        <label>JetCPInterfaces/ICPJetUncertaintiesTool.h</label>
        <link refid="d4/d70/ICPJetUncertaintiesTool_8h_source"/>
        <childnode refid="200407" relation="include">
        </childnode>
        <childnode refid="200578" relation="include">
        </childnode>
        <childnode refid="200583" relation="include">
        </childnode>
      </node>
      <node id="200443">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="200606">
        <label>xAODEventInfo/versions/EventInfoContainer_v1.h</label>
        <link refid="de/d6a/EventInfoContainer__v1_8h_source"/>
        <childnode refid="200488" relation="include">
        </childnode>
        <childnode refid="200576" relation="include">
        </childnode>
      </node>
      <node id="200567">
        <label>xAODBTagging/versions/BTaggingContainer_v1.h</label>
        <link refid="d9/d93/BTaggingContainer__v1_8h_source"/>
        <childnode refid="200488" relation="include">
        </childnode>
        <childnode refid="200529" relation="include">
        </childnode>
      </node>
      <node id="200468">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="200412">
        <label>GaudiKernel/IAlgTool.h</label>
      </node>
      <node id="200434">
        <label>iterator</label>
      </node>
      <node id="200601">
        <label>xAODCore/AuxContainerBase.h</label>
        <link refid="d0/d70/AuxContainerBase_8h_source"/>
        <childnode refid="200453" relation="include">
        </childnode>
        <childnode refid="200409" relation="include">
        </childnode>
        <childnode refid="200442" relation="include">
        </childnode>
        <childnode refid="200602" relation="include">
        </childnode>
        <childnode refid="200603" relation="include">
        </childnode>
        <childnode refid="200466" relation="include">
        </childnode>
        <childnode refid="200454" relation="include">
        </childnode>
        <childnode refid="200475" relation="include">
        </childnode>
        <childnode refid="200604" relation="include">
        </childnode>
        <childnode refid="200544" relation="include">
        </childnode>
        <childnode refid="200561" relation="include">
        </childnode>
      </node>
      <node id="200456">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="200409" relation="include">
        </childnode>
        <childnode refid="200457" relation="include">
        </childnode>
      </node>
      <node id="200607">
        <label>xAODEventInfo/EventInfoAuxContainer.h</label>
        <link refid="d2/db0/EventInfoAuxContainer_8h_source"/>
        <childnode refid="200608" relation="include">
        </childnode>
        <childnode refid="200544" relation="include">
        </childnode>
      </node>
      <node id="200413">
        <label>xAODJet/Jet.h</label>
        <link refid="da/db7/Jet_8h_source"/>
        <childnode refid="200414" relation="include">
        </childnode>
        <childnode refid="200544" relation="include">
        </childnode>
      </node>
      <node id="200603">
        <label>AthContainersInterfaces/IAuxStoreHolder.h</label>
        <link refid="d7/dab/IAuxStoreHolder_8h_source"/>
      </node>
      <node id="200565">
        <label>xAODBTagging/versions/BTagVertex_v1.h</label>
        <link refid="d6/df4/BTagVertex__v1_8h_source"/>
        <childnode refid="200425" relation="include">
        </childnode>
        <childnode refid="200416" relation="include">
        </childnode>
        <childnode refid="200423" relation="include">
        </childnode>
        <childnode refid="200487" relation="include">
        </childnode>
        <childnode refid="200531" relation="include">
        </childnode>
        <childnode refid="200549" relation="include">
        </childnode>
        <childnode refid="200548" relation="include">
        </childnode>
        <childnode refid="200415" relation="include">
        </childnode>
        <childnode refid="200453" relation="include">
        </childnode>
        <childnode refid="200409" relation="include">
        </childnode>
        <childnode refid="200441" relation="include">
        </childnode>
      </node>
      <node id="200594">
        <label>TObjArray.h</label>
      </node>
      <node id="200574">
        <label>xAODJet/versions/JetContainer_v1.h</label>
        <link refid="df/d28/JetContainer__v1_8h_source"/>
        <childnode refid="200488" relation="include">
        </childnode>
        <childnode refid="200414" relation="include">
        </childnode>
      </node>
      <node id="200518">
        <label>SGTools/ClassName.h</label>
      </node>
      <node id="200524">
        <label>AthContainers/DataVector.icc</label>
        <link refid="da/de6/DataVector_8icc"/>
        <childnode refid="200525" relation="include">
        </childnode>
        <childnode refid="200492" relation="include">
        </childnode>
        <childnode refid="200437" relation="include">
        </childnode>
        <childnode refid="200440" relation="include">
        </childnode>
        <childnode refid="200526" relation="include">
        </childnode>
      </node>
      <node id="200480">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="200428" relation="include">
        </childnode>
        <childnode refid="200481" relation="include">
        </childnode>
        <childnode refid="200482" relation="include">
        </childnode>
        <childnode refid="200448" relation="include">
        </childnode>
        <childnode refid="200409" relation="include">
        </childnode>
      </node>
      <node id="200452">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="200453" relation="include">
        </childnode>
        <childnode refid="200435" relation="include">
        </childnode>
      </node>
      <node id="200417">
        <label>stdint.h</label>
      </node>
      <node id="200504">
        <label>AthContainers/tools/DVLCast.h</label>
        <link refid="df/d5c/DVLCast_8h"/>
        <childnode refid="200437" relation="include">
        </childnode>
        <childnode refid="200505" relation="include">
        </childnode>
        <childnode refid="200448" relation="include">
        </childnode>
        <childnode refid="200435" relation="include">
        </childnode>
        <childnode refid="200429" relation="include">
        </childnode>
      </node>
      <node id="200490">
        <label>AthContainers/IndexTrackingPolicy.h</label>
        <link refid="d0/da5/IndexTrackingPolicy_8h"/>
      </node>
      <node id="200449">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="200429" relation="include">
        </childnode>
        <childnode refid="200448" relation="include">
        </childnode>
      </node>
      <node id="200552">
        <label>Eigen/Geometry</label>
      </node>
      <node id="200602">
        <label>AthContainersInterfaces/IAuxStoreIO.h</label>
        <link refid="d9/db5/IAuxStoreIO_8h"/>
        <childnode refid="200428" relation="include">
        </childnode>
        <childnode refid="200448" relation="include">
        </childnode>
        <childnode refid="200577" relation="include">
        </childnode>
        <childnode refid="200441" relation="include">
        </childnode>
      </node>
      <node id="200420">
        <label>RVersion.h</label>
      </node>
      <node id="200430">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="200431" relation="include">
        </childnode>
        <childnode refid="200439" relation="include">
        </childnode>
        <childnode refid="200440" relation="include">
        </childnode>
      </node>
      <node id="200597">
        <label>AthenaBaseComps/AthMsgStreamMacros.h</label>
      </node>
      <node id="200436">
        <label>cmath</label>
      </node>
      <node id="200484">
        <label>cassert</label>
      </node>
      <node id="200612">
        <label>TH1D.h</label>
      </node>
      <node id="200495">
        <label>boost/mpl/if.hpp</label>
      </node>
      <node id="200514">
        <label>boost/static_assert.hpp</label>
      </node>
      <node id="200482">
        <label>stdexcept</label>
      </node>
      <node id="200587">
        <label>AsgTools/MsgLevel.h</label>
        <link refid="de/d80/MsgLevel_8h"/>
        <childnode refid="200409" relation="include">
        </childnode>
        <childnode refid="200410" relation="include">
        </childnode>
        <childnode refid="200588" relation="include">
        </childnode>
      </node>
      <node id="200471">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="200538">
        <label>Eigen/Core</label>
      </node>
      <node id="200501">
        <label>boost/type_traits/is_pointer.hpp</label>
      </node>
      <node id="200540">
        <label>xAODTracking/VertexContainerFwd.h</label>
        <link refid="d0/dc4/VertexContainerFwd_8h_source"/>
        <childnode refid="200488" relation="include">
        </childnode>
        <childnode refid="200541" relation="include">
        </childnode>
      </node>
      <node id="200546">
        <label>xAODTracking/TrackParticleContainerFwd.h</label>
        <link refid="de/dea/TrackParticleContainerFwd_8h_source"/>
        <childnode refid="200488" relation="include">
        </childnode>
        <childnode refid="200487" relation="include">
        </childnode>
        <childnode refid="200547" relation="include">
        </childnode>
      </node>
      <node id="200509">
        <label>boost/iterator/iterator_adaptor.hpp</label>
      </node>
      <node id="200424">
        <label>TLorentzVector.h</label>
      </node>
      <node id="200410">
        <label>AsgTools/AsgToolsConf.h</label>
        <link refid="df/db7/AsgToolsConf_8h_source"/>
      </node>
      <node id="200409">
        <label>string</label>
      </node>
      <node id="200474">
        <label>AthContainers/AuxVectorData.h</label>
        <link refid="d9/df2/AuxVectorData_8h"/>
        <childnode refid="200428" relation="include">
        </childnode>
        <childnode refid="200427" relation="include">
        </childnode>
        <childnode refid="200456" relation="include">
        </childnode>
        <childnode refid="200452" relation="include">
        </childnode>
        <childnode refid="200444" relation="include">
        </childnode>
        <childnode refid="200475" relation="include">
        </childnode>
        <childnode refid="200476" relation="include">
        </childnode>
        <childnode refid="200459" relation="include">
        </childnode>
        <childnode refid="200453" relation="include">
        </childnode>
        <childnode refid="200433" relation="include">
        </childnode>
        <childnode refid="200435" relation="include">
        </childnode>
        <childnode refid="200477" relation="include">
        </childnode>
        <childnode refid="200478" relation="include">
        </childnode>
        <childnode refid="200466" relation="include">
        </childnode>
        <childnode refid="200479" relation="include">
        </childnode>
      </node>
      <node id="200447">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="200429" relation="include">
        </childnode>
        <childnode refid="200448" relation="include">
        </childnode>
      </node>
      <node id="200533">
        <label>versions/TrackParticle_v1.h</label>
        <link refid="d2/d7f/TrackParticle__v1_8h_source"/>
        <childnode refid="200534" relation="include">
        </childnode>
        <childnode refid="200417" relation="include">
        </childnode>
        <childnode refid="200416" relation="include">
        </childnode>
        <childnode refid="200488" relation="include">
        </childnode>
        <childnode refid="200423" relation="include">
        </childnode>
        <childnode refid="200535" relation="include">
        </childnode>
        <childnode refid="200540" relation="include">
        </childnode>
        <childnode refid="200542" relation="include">
        </childnode>
        <childnode refid="200543" relation="include">
        </childnode>
      </node>
      <node id="200477">
        <label>AthContainers/tools/likely.h</label>
        <link refid="d6/dd6/likely_8h"/>
      </node>
      <node id="200529">
        <label>xAODBTagging/versions/BTagging_v1.h</label>
        <link refid="dc/da1/BTagging__v1_8h_source"/>
        <childnode refid="200425" relation="include">
        </childnode>
        <childnode refid="200416" relation="include">
        </childnode>
        <childnode refid="200530" relation="include">
        </childnode>
        <childnode refid="200531" relation="include">
        </childnode>
        <childnode refid="200548" relation="include">
        </childnode>
        <childnode refid="200563" relation="include">
        </childnode>
        <childnode refid="200415" relation="include">
        </childnode>
        <childnode refid="200453" relation="include">
        </childnode>
        <childnode refid="200409" relation="include">
        </childnode>
        <childnode refid="200516" relation="include">
        </childnode>
        <childnode refid="200441" relation="include">
        </childnode>
      </node>
      <node id="200414">
        <label>xAODJet/versions/Jet_v1.h</label>
        <link refid="df/d71/Jet__v1_8h_source"/>
        <childnode refid="200415" relation="include">
        </childnode>
        <childnode refid="200416" relation="include">
        </childnode>
        <childnode refid="200423" relation="include">
        </childnode>
        <childnode refid="200487" relation="include">
        </childnode>
        <childnode refid="200527" relation="include">
        </childnode>
        <childnode refid="200568" relation="include">
        </childnode>
        <childnode refid="200571" relation="include">
        </childnode>
        <childnode refid="200569" relation="include">
        </childnode>
        <childnode refid="200572" relation="include">
        </childnode>
      </node>
      <node id="200506">
        <label>AthContainers/tools/DVLIterator.h</label>
        <link refid="d3/dc7/DVLIterator_8h_source"/>
        <childnode refid="200489" relation="include">
        </childnode>
        <childnode refid="200504" relation="include">
        </childnode>
        <childnode refid="200507" relation="include">
        </childnode>
        <childnode refid="200509" relation="include">
        </childnode>
        <childnode refid="200494" relation="include">
        </childnode>
        <childnode refid="200434" relation="include">
        </childnode>
        <childnode refid="200435" relation="include">
        </childnode>
      </node>
      <node id="200520">
        <label>SGTools/DataBucket.h</label>
      </node>
      <node id="200415">
        <label>map</label>
      </node>
      <node id="200521">
        <label>AthContainers/tools/DVLDataBucket.icc</label>
        <link refid="d3/d21/DVLDataBucket_8icc"/>
        <childnode refid="200522" relation="include">
        </childnode>
      </node>
      <node id="200522">
        <label>SGTools/IRegisterTransient.h</label>
      </node>
      <node id="200421">
        <label>RootMetaSelection.h</label>
      </node>
      <node id="200463">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="200553">
        <label>VxVertex/VxTrackAtVertex.h</label>
      </node>
      <node id="200511">
        <label>AthContainers/tools/DVL_algorithms.h</label>
        <link refid="d0/d7a/DVL__algorithms_8h"/>
        <childnode refid="200506" relation="include">
        </childnode>
        <childnode refid="200434" relation="include">
        </childnode>
        <childnode refid="200432" relation="include">
        </childnode>
        <childnode refid="200512" relation="include">
        </childnode>
      </node>
      <node id="200593">
        <label>TObjString.h</label>
      </node>
      <node id="200584">
        <label>JetUncertainties/UncertaintyEnum.h</label>
        <link refid="d8/d4c/UncertaintyEnum_8h_source"/>
        <childnode refid="200585" relation="include">
        </childnode>
      </node>
      <node id="200478">
        <label>AthContainers/tools/assume.h</label>
        <link refid="d2/d20/assume_8h"/>
      </node>
      <node id="200598">
        <label>xAODJet/JetAccessors.h</label>
        <link refid="d7/d3f/JetAccessors_8h"/>
        <childnode refid="200409" relation="include">
        </childnode>
        <childnode refid="200425" relation="include">
        </childnode>
        <childnode refid="200423" relation="include">
        </childnode>
        <childnode refid="200569" relation="include">
        </childnode>
      </node>
      <node id="200570">
        <label>Math/Vector4D.h</label>
      </node>
      <node id="200460">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="200548">
        <label>xAODTracking/VertexContainer.h</label>
        <link refid="d6/dd8/VertexContainer_8h_source"/>
        <childnode refid="200549" relation="include">
        </childnode>
        <childnode refid="200562" relation="include">
        </childnode>
        <childnode refid="200544" relation="include">
        </childnode>
      </node>
      <node id="200507">
        <label>AthContainers/tools/ElementProxy.h</label>
        <link refid="db/d26/ElementProxy_8h"/>
        <childnode refid="200489" relation="include">
        </childnode>
        <childnode refid="200419" relation="include">
        </childnode>
        <childnode refid="200439" relation="include">
        </childnode>
        <childnode refid="200508" relation="include">
        </childnode>
      </node>
      <node id="200588">
        <label>GaudiKernel/IMessageSvc.h</label>
      </node>
      <node id="200426">
        <label>AthContainersInterfaces/IAuxElement.h</label>
        <link refid="dd/d7a/IAuxElement_8h"/>
      </node>
      <node id="200615">
        <label>TBox.h</label>
      </node>
      <node id="200419">
        <label>AthLinks/tools/selection_ns.h</label>
        <link refid="d3/dec/selection__ns_8h"/>
        <childnode refid="200420" relation="include">
        </childnode>
        <childnode refid="200421" relation="include">
        </childnode>
      </node>
      <node id="200476">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="200469">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="200547">
        <label>xAODTracking/TrackParticleFwd.h</label>
        <link refid="d1/dc4/TrackParticleFwd_8h_source"/>
      </node>
      <node id="200530">
        <label>xAODBTagging/BTaggingEnums.h</label>
        <link refid="dd/de5/BTaggingEnums_8h_source"/>
      </node>
      <node id="200505">
        <label>limits.h</label>
      </node>
      <node id="200617">
        <label>OptionHelper.h</label>
        <link refid="d3/d27/OptionHelper_8h_source"/>
        <childnode refid="200618" relation="include">
        </childnode>
        <childnode refid="200453" relation="include">
        </childnode>
        <childnode refid="200585" relation="include">
        </childnode>
        <childnode refid="200591" relation="include">
        </childnode>
        <childnode refid="200584" relation="include">
        </childnode>
      </node>
      <node id="200499">
        <label>AthContainers/tools/ClassID.h</label>
        <link refid="de/de2/ClassID_8h"/>
        <childnode refid="200500" relation="include">
        </childnode>
      </node>
      <node id="200562">
        <label>xAODTracking/versions/VertexContainer_v1.h</label>
        <link refid="d2/dda/VertexContainer__v1_8h_source"/>
        <childnode refid="200488" relation="include">
        </childnode>
        <childnode refid="200550" relation="include">
        </childnode>
      </node>
      <node id="200455">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="200456" relation="include">
        </childnode>
        <childnode refid="200437" relation="include">
        </childnode>
        <childnode refid="200417" relation="include">
        </childnode>
        <childnode refid="200458" relation="include">
        </childnode>
      </node>
      <node id="200582">
        <label>PATInterfaces/SystematicSet.h</label>
        <link refid="d4/db8/SystematicSet_8h_source"/>
        <childnode refid="200581" relation="include">
        </childnode>
        <childnode refid="200577" relation="include">
        </childnode>
        <childnode refid="200453" relation="include">
        </childnode>
        <childnode refid="200409" relation="include">
        </childnode>
        <childnode refid="200440" relation="include">
        </childnode>
        <childnode refid="200579" relation="include">
        </childnode>
        <childnode refid="200580" relation="include">
        </childnode>
      </node>
      <node id="200428">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="200429" relation="include">
        </childnode>
        <childnode refid="200430" relation="include">
        </childnode>
      </node>
      <node id="200418">
        <label>AthLinks/ElementLinkBase.h</label>
        <link refid="d0/d16/ElementLinkBase_8h_source"/>
        <childnode refid="200417" relation="include">
        </childnode>
      </node>
      <node id="200580">
        <label>PATInterfaces/SystematicVariation.h</label>
        <link refid="d1/def/SystematicVariation_8h_source"/>
        <childnode refid="200581" relation="include">
        </childnode>
        <childnode refid="200486" relation="include">
        </childnode>
        <childnode refid="200577" relation="include">
        </childnode>
        <childnode refid="200409" relation="include">
        </childnode>
      </node>
      <node id="200539">
        <label>Eigen/Dense</label>
      </node>
      <node id="200431">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="200432" relation="include">
        </childnode>
        <childnode refid="200433" relation="include">
        </childnode>
        <childnode refid="200434" relation="include">
        </childnode>
        <childnode refid="200429" relation="include">
        </childnode>
        <childnode refid="200435" relation="include">
        </childnode>
        <childnode refid="200436" relation="include">
        </childnode>
        <childnode refid="200437" relation="include">
        </childnode>
        <childnode refid="200409" relation="include">
        </childnode>
        <childnode refid="200438" relation="include">
        </childnode>
      </node>
      <node id="200492">
        <label>AthContainers/tools/ATHCONTAINERS_ASSERT.h</label>
        <link refid="de/d6b/ATHCONTAINERS__ASSERT_8h"/>
        <childnode refid="200484" relation="include">
        </childnode>
      </node>
      <node id="200405">
        <label>JetUncertainties/JetUncertaintiesTool.h</label>
        <link refid="d9/d58/JetUncertaintiesTool_8h_source"/>
        <childnode refid="200406" relation="include">
        </childnode>
        <childnode refid="200584" relation="include">
        </childnode>
        <childnode refid="200586" relation="include">
        </childnode>
        <childnode refid="200409" relation="include">
        </childnode>
        <childnode refid="200453" relation="include">
        </childnode>
        <childnode refid="200590" relation="include">
        </childnode>
      </node>
      <node id="200423">
        <label>xAODBase/IParticle.h</label>
        <link refid="d5/dac/IParticle_8h_source"/>
        <childnode refid="200424" relation="include">
        </childnode>
        <childnode refid="200425" relation="include">
        </childnode>
        <childnode refid="200485" relation="include">
        </childnode>
        <childnode refid="200443" relation="include">
        </childnode>
      </node>
      <node id="200485">
        <label>ObjectType.h</label>
        <link refid="d8/d04/ObjectType_8h_source"/>
        <childnode refid="200486" relation="include">
        </childnode>
      </node>
      <node id="200576">
        <label>xAODEventInfo/versions/EventInfo_v1.h</label>
        <link refid="d4/da0/EventInfo__v1_8h_source"/>
        <childnode refid="200417" relation="include">
        </childnode>
        <childnode refid="200577" relation="include">
        </childnode>
        <childnode refid="200453" relation="include">
        </childnode>
        <childnode refid="200409" relation="include">
        </childnode>
        <childnode refid="200486" relation="include">
        </childnode>
        <childnode refid="200425" relation="include">
        </childnode>
        <childnode refid="200488" relation="include">
        </childnode>
        <childnode refid="200416" relation="include">
        </childnode>
        <childnode refid="200561" relation="include">
        </childnode>
      </node>
      <node id="200571">
        <label>xAODJet/JetAttributes.h</label>
        <link refid="d3/df8/JetAttributes_8h"/>
      </node>
      <node id="200583">
        <label>PATInterfaces/CorrectionCode.h</label>
        <link refid="d8/dab/CorrectionCode_8h_source"/>
      </node>
      <node id="200508">
        <label>AthContainers/tools/ElementProxy.icc</label>
        <link refid="d6/d70/ElementProxy_8icc"/>
        <childnode refid="200504" relation="include">
        </childnode>
        <childnode refid="200492" relation="include">
        </childnode>
      </node>
      <node id="200448">
        <label>typeinfo</label>
      </node>
      <node id="200535">
        <label>xAODTracking/TrackingPrimitives.h</label>
        <link refid="d2/d4c/TrackingPrimitives_8h_source"/>
        <childnode refid="200536" relation="include">
        </childnode>
      </node>
      <node id="200483">
        <label>AthContainers/AuxElement.icc</label>
        <link refid="d2/d37/AuxElement_8icc"/>
        <childnode refid="200477" relation="include">
        </childnode>
        <childnode refid="200484" relation="include">
        </childnode>
      </node>
      <node id="200488">
        <label>AthContainers/DataVector.h</label>
        <link refid="d7/dd6/DataVector_8h"/>
        <childnode refid="200480" relation="include">
        </childnode>
        <childnode refid="200489" relation="include">
        </childnode>
        <childnode refid="200490" relation="include">
        </childnode>
        <childnode refid="200491" relation="include">
        </childnode>
        <childnode refid="200497" relation="include">
        </childnode>
        <childnode refid="200498" relation="include">
        </childnode>
        <childnode refid="200504" relation="include">
        </childnode>
        <childnode refid="200506" relation="include">
        </childnode>
        <childnode refid="200510" relation="include">
        </childnode>
        <childnode refid="200511" relation="include">
        </childnode>
        <childnode refid="200507" relation="include">
        </childnode>
        <childnode refid="200513" relation="include">
        </childnode>
        <childnode refid="200419" relation="include">
        </childnode>
        <childnode refid="200514" relation="include">
        </childnode>
        <childnode refid="200515" relation="include">
        </childnode>
        <childnode refid="200509" relation="include">
        </childnode>
        <childnode refid="200453" relation="include">
        </childnode>
        <childnode refid="200448" relation="include">
        </childnode>
        <childnode refid="200440" relation="include">
        </childnode>
        <childnode refid="200516" relation="include">
        </childnode>
        <childnode refid="200432" relation="include">
        </childnode>
        <childnode refid="200482" relation="include">
        </childnode>
        <childnode refid="200434" relation="include">
        </childnode>
        <childnode refid="200443" relation="include">
        </childnode>
        <childnode refid="200517" relation="include">
        </childnode>
        <childnode refid="200519" relation="include">
        </childnode>
        <childnode refid="200523" relation="include">
        </childnode>
        <childnode refid="200524" relation="include">
        </childnode>
      </node>
      <node id="200581">
        <label>PATInterfaces/Global.h</label>
        <link refid="dd/d0c/PATInterfaces_2PATInterfaces_2Global_8h_source"/>
      </node>
      <node id="200555">
        <label>xAODTracking/NeutralParticle.h</label>
        <link refid="d4/daa/NeutralParticle_8h_source"/>
        <childnode refid="200556" relation="include">
        </childnode>
        <childnode refid="200544" relation="include">
        </childnode>
      </node>
      <node id="200534">
        <label>bitset</label>
      </node>
      <node id="200458">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="200422">
        <label>AthLinks/tools/TypeTools.h</label>
        <link refid="dd/db1/TypeTools_8h_source"/>
      </node>
      <node id="200475">
        <label>AthenaKernel/ILockable.h</label>
      </node>
      <node id="200596">
        <label>AsgTools/MsgStreamMacros.h</label>
        <link refid="d3/ded/AsgTools_2AsgTools_2MsgStreamMacros_8h_source"/>
        <childnode refid="200410" relation="include">
        </childnode>
        <childnode refid="200587" relation="include">
        </childnode>
        <childnode refid="200597" relation="include">
        </childnode>
      </node>
      <node id="200445">
        <label>AthLinks/DataLinkBase.h</label>
        <link refid="db/da8/DataLinkBase_8h_source"/>
        <childnode refid="200417" relation="include">
        </childnode>
      </node>
      <node id="200550">
        <label>xAODTracking/versions/Vertex_v1.h</label>
        <link refid="d7/dcc/Vertex__v1_8h_source"/>
        <childnode refid="200453" relation="include">
        </childnode>
        <childnode refid="200425" relation="include">
        </childnode>
        <childnode refid="200416" relation="include">
        </childnode>
        <childnode refid="200536" relation="include">
        </childnode>
        <childnode refid="200551" relation="include">
        </childnode>
        <childnode refid="200553" relation="include">
        </childnode>
        <childnode refid="200535" relation="include">
        </childnode>
        <childnode refid="200546" relation="include">
        </childnode>
        <childnode refid="200554" relation="include">
        </childnode>
        <childnode refid="200485" relation="include">
        </childnode>
        <childnode refid="200561" relation="include">
        </childnode>
      </node>
      <node id="200457">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="200610">
        <label>../testingMacros/atlasstyle/AtlasLabels.C</label>
      </node>
      <node id="200462">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="200498">
        <label>AthContainers/tools/DVLInfo.h</label>
        <link refid="d3/d2e/DVLInfo_8h"/>
        <childnode refid="200499" relation="include">
        </childnode>
        <childnode refid="200491" relation="include">
        </childnode>
        <childnode refid="200448" relation="include">
        </childnode>
        <childnode refid="200429" relation="include">
        </childnode>
        <childnode refid="200438" relation="include">
        </childnode>
        <childnode refid="200501" relation="include">
        </childnode>
        <childnode refid="200461" relation="include">
        </childnode>
        <childnode refid="200502" relation="include">
        </childnode>
      </node>
      <node id="200441">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="200537">
        <label>unistd.h</label>
      </node>
      <node id="200517">
        <label>AthContainers/ClassName.h</label>
        <link refid="dd/d6b/AthContainers_2AthContainers_2ClassName_8h_source"/>
        <childnode refid="200518" relation="include">
        </childnode>
      </node>
      <node id="200446">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="200428" relation="include">
        </childnode>
        <childnode refid="200447" relation="include">
        </childnode>
        <childnode refid="200449" relation="include">
        </childnode>
        <childnode refid="200450" relation="include">
        </childnode>
        <childnode refid="200464" relation="include">
        </childnode>
        <childnode refid="200466" relation="include">
        </childnode>
        <childnode refid="200429" relation="include">
        </childnode>
        <childnode refid="200448" relation="include">
        </childnode>
        <childnode refid="200453" relation="include">
        </childnode>
        <childnode refid="200472" relation="include">
        </childnode>
        <childnode refid="200473" relation="include">
        </childnode>
      </node>
      <node id="200453">
        <label>vector</label>
      </node>
      <node id="200487">
        <label>xAODBase/IParticleContainer.h</label>
        <link refid="dd/d2d/IParticleContainer_8h_source"/>
        <childnode refid="200488" relation="include">
        </childnode>
        <childnode refid="200423" relation="include">
        </childnode>
        <childnode refid="200441" relation="include">
        </childnode>
      </node>
      <node id="200525">
        <label>AthContainers/tools/CompareAndPrint.h</label>
        <link refid="d5/da8/CompareAndPrint_8h_source"/>
        <childnode refid="200432" relation="include">
        </childnode>
        <childnode refid="200448" relation="include">
        </childnode>
      </node>
      <node id="200611">
        <label>TCanvas.h</label>
      </node>
      <node id="200595">
        <label>TFile.h</label>
      </node>
      <node id="200549">
        <label>xAODTracking/Vertex.h</label>
        <link refid="d9/d2d/Vertex_8h_source"/>
        <childnode refid="200550" relation="include">
        </childnode>
      </node>
      <node id="200558">
        <label>xAODTracking/versions/NeutralParticleContainer_v1.h</label>
        <link refid="d6/d5f/NeutralParticleContainer__v1_8h_source"/>
        <childnode refid="200417" relation="include">
        </childnode>
        <childnode refid="200488" relation="include">
        </childnode>
        <childnode refid="200556" relation="include">
        </childnode>
        <childnode refid="200559" relation="include">
        </childnode>
      </node>
      <node id="200608">
        <label>xAODEventInfo/versions/EventInfoAuxContainer_v1.h</label>
        <link refid="df/d97/EventInfoAuxContainer__v1_8h_source"/>
        <childnode refid="200417" relation="include">
        </childnode>
        <childnode refid="200453" relation="include">
        </childnode>
        <childnode refid="200409" relation="include">
        </childnode>
        <childnode refid="200601" relation="include">
        </childnode>
        <childnode refid="200561" relation="include">
        </childnode>
      </node>
      <node id="200591">
        <label>JetUncertainties/Helpers.h</label>
        <link refid="dc/d18/JetUncertainties_2JetUncertainties_2Helpers_8h_source"/>
        <childnode refid="200516" relation="include">
        </childnode>
        <childnode refid="200592" relation="include">
        </childnode>
        <childnode refid="200409" relation="include">
        </childnode>
        <childnode refid="200453" relation="include">
        </childnode>
        <childnode refid="200585" relation="include">
        </childnode>
        <childnode refid="200593" relation="include">
        </childnode>
        <childnode refid="200594" relation="include">
        </childnode>
        <childnode refid="200595" relation="include">
        </childnode>
        <childnode refid="200596" relation="include">
        </childnode>
        <childnode refid="200413" relation="include">
        </childnode>
        <childnode refid="200598" relation="include">
        </childnode>
      </node>
      <node id="200572">
        <label>xAODJet/JetContainerInfo.h</label>
        <link refid="d8/d2a/JetContainerInfo_8h_source"/>
        <childnode refid="200409" relation="include">
        </childnode>
      </node>
      <node id="200526">
        <label>AthContainers/tools/DVLEltBaseInfo.icc</label>
        <link refid="dd/d5e/DVLEltBaseInfo_8icc"/>
      </node>
      <node id="200599">
        <label>xAODJet/JetAuxContainer.h</label>
        <link refid="d6/d1b/JetAuxContainer_8h_source"/>
        <childnode refid="200600" relation="include">
        </childnode>
        <childnode refid="200544" relation="include">
        </childnode>
      </node>
      <node id="200527">
        <label>xAODBTagging/BTaggingContainer.h</label>
        <link refid="d8/d3b/BTaggingContainer_8h_source"/>
        <childnode refid="200528" relation="include">
        </childnode>
        <childnode refid="200567" relation="include">
        </childnode>
        <childnode refid="200544" relation="include">
        </childnode>
      </node>
      <node id="200433">
        <label>utility</label>
      </node>
      <node id="200523">
        <label>SGTools/DataBucketTraitFwd.h</label>
      </node>
      <node id="200459">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="200592">
        <label>sstream</label>
      </node>
      <node id="200605">
        <label>xAODEventInfo/EventInfoContainer.h</label>
        <link refid="d7/d31/EventInfoContainer_8h_source"/>
        <childnode refid="200606" relation="include">
        </childnode>
        <childnode refid="200575" relation="include">
        </childnode>
        <childnode refid="200544" relation="include">
        </childnode>
      </node>
      <node id="200404">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx</label>
        <link refid="MakeUncertaintyPlots.cxx"/>
        <childnode refid="200405" relation="include">
        </childnode>
        <childnode refid="200591" relation="include">
        </childnode>
        <childnode refid="200584" relation="include">
        </childnode>
        <childnode refid="200413" relation="include">
        </childnode>
        <childnode refid="200573" relation="include">
        </childnode>
        <childnode refid="200599" relation="include">
        </childnode>
        <childnode refid="200575" relation="include">
        </childnode>
        <childnode refid="200605" relation="include">
        </childnode>
        <childnode refid="200607" relation="include">
        </childnode>
        <childnode refid="200609" relation="include">
        </childnode>
        <childnode refid="200610" relation="include">
        </childnode>
        <childnode refid="200585" relation="include">
        </childnode>
        <childnode refid="200611" relation="include">
        </childnode>
        <childnode refid="200612" relation="include">
        </childnode>
        <childnode refid="200613" relation="include">
        </childnode>
        <childnode refid="200614" relation="include">
        </childnode>
        <childnode refid="200615" relation="include">
        </childnode>
        <childnode refid="200616" relation="include">
        </childnode>
        <childnode refid="200453" relation="include">
        </childnode>
        <childnode refid="200617" relation="include">
        </childnode>
      </node>
      <node id="200551">
        <label>GeoPrimitives/GeoPrimitives.h</label>
        <link refid="d7/d87/GeoPrimitives_8h_source"/>
        <childnode refid="200537" relation="include">
        </childnode>
        <childnode refid="200552" relation="include">
        </childnode>
      </node>
      <node id="200541">
        <label>xAODTracking/VertexFwd.h</label>
        <link refid="d9/ddd/VertexFwd_8h_source"/>
      </node>
      <node id="200496">
        <label>AthContainers/AuxVectorBase.icc</label>
        <link refid="d4/d50/AuxVectorBase_8icc"/>
      </node>
      <node id="200467">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="200564">
        <label>xAODBTagging/BTagVertex.h</label>
        <link refid="d4/d51/BTagVertex_8h_source"/>
        <childnode refid="200565" relation="include">
        </childnode>
      </node>
      <node id="200451">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="200466">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="200467" relation="include">
        </childnode>
        <childnode refid="200468" relation="include">
        </childnode>
        <childnode refid="200469" relation="include">
        </childnode>
        <childnode refid="200470" relation="include">
        </childnode>
        <childnode refid="200471" relation="include">
        </childnode>
      </node>
      <node id="200616">
        <label>math.h</label>
      </node>
      <node id="200613">
        <label>TGraphErrors.h</label>
      </node>
      <node id="200486">
        <label>iosfwd</label>
      </node>
      <node id="200435">
        <label>cstdlib</label>
      </node>
      <node id="200604">
        <label>xAODCore/AuxSelection.h</label>
        <link refid="d3/dd4/AuxSelection_8h_source"/>
        <childnode refid="200577" relation="include">
        </childnode>
        <childnode refid="200409" relation="include">
        </childnode>
        <childnode refid="200428" relation="include">
        </childnode>
      </node>
      <node id="200532">
        <label>xAODTracking/TrackParticle.h</label>
        <link refid="d2/d15/TrackParticle_8h_source"/>
        <childnode refid="200533" relation="include">
        </childnode>
        <childnode refid="200544" relation="include">
        </childnode>
      </node>
      <node id="200516">
        <label>iostream</label>
      </node>
      <node id="200481">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="200545">
        <label>xAODTracking/versions/TrackParticleContainer_v1.h</label>
        <link refid="d7/d3b/TrackParticleContainer__v1_8h_source"/>
        <childnode refid="200417" relation="include">
        </childnode>
        <childnode refid="200488" relation="include">
        </childnode>
        <childnode refid="200533" relation="include">
        </childnode>
        <childnode refid="200546" relation="include">
        </childnode>
      </node>
      <node id="200427">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="200428" relation="include">
        </childnode>
        <childnode refid="200429" relation="include">
        </childnode>
        <childnode refid="200441" relation="include">
        </childnode>
      </node>
      <node id="200429">
        <label>cstddef</label>
      </node>
      <node id="200620">
        <label>GaudiKernel/MsgStream.h</label>
      </node>
      <node id="200590">
        <label>unordered_map</label>
      </node>
      <node id="200619">
        <label>AsgTools/MsgStream.h</label>
        <link refid="d3/d95/AsgTools_2AsgTools_2MsgStream_8h_source"/>
        <childnode refid="200409" relation="include">
        </childnode>
        <childnode refid="200592" relation="include">
        </childnode>
        <childnode refid="200410" relation="include">
        </childnode>
        <childnode refid="200587" relation="include">
        </childnode>
        <childnode refid="200408" relation="include">
        </childnode>
        <childnode refid="200620" relation="include">
        </childnode>
      </node>
      <node id="200479">
        <label>AthContainers/AuxVectorData.icc</label>
        <link refid="da/de7/AuxVectorData_8icc"/>
        <childnode refid="200446" relation="include">
        </childnode>
        <childnode refid="200442" relation="include">
        </childnode>
        <childnode refid="200427" relation="include">
        </childnode>
        <childnode refid="200477" relation="include">
        </childnode>
        <childnode refid="200478" relation="include">
        </childnode>
      </node>
      <node id="200411">
        <label>AsgTools/AsgToolMacros.h</label>
        <link refid="d1/d68/AsgToolMacros_8h_source"/>
      </node>
      <node id="200561">
        <label>xAODCore/BaseInfo.h</label>
        <link refid="d3/d17/BaseInfo_8h_source"/>
        <childnode refid="200443" relation="include">
        </childnode>
      </node>
      <node id="200585">
        <label>TString.h</label>
      </node>
      <node id="200407">
        <label>JetInterface/IJetUncertaintiesTool.h</label>
        <link refid="dc/df9/IJetUncertaintiesTool_8h_source"/>
        <childnode refid="200408" relation="include">
        </childnode>
        <childnode refid="200413" relation="include">
        </childnode>
        <childnode refid="200573" relation="include">
        </childnode>
        <childnode refid="200575" relation="include">
        </childnode>
        <childnode refid="200409" relation="include">
        </childnode>
      </node>
      <node id="200528">
        <label>xAODBTagging/BTagging.h</label>
        <link refid="d2/d81/BTagging_8h_source"/>
        <childnode refid="200529" relation="include">
        </childnode>
      </node>
      <node id="200569">
        <label>xAODJet/JetTypes.h</label>
        <link refid="d6/d2a/JetTypes_8h_source"/>
        <childnode refid="200570" relation="include">
        </childnode>
      </node>
      <node id="200568">
        <label>xAODJet/JetConstituentVector.h</label>
        <link refid="de/dd4/JetConstituentVector_8h_source"/>
        <childnode refid="200416" relation="include">
        </childnode>
        <childnode refid="200423" relation="include">
        </childnode>
        <childnode refid="200487" relation="include">
        </childnode>
        <childnode refid="200569" relation="include">
        </childnode>
      </node>
      <node id="200600">
        <label>xAODJet/versions/JetAuxContainer_v1.h</label>
        <link refid="db/dc5/JetAuxContainer__v1_8h_source"/>
        <childnode refid="200453" relation="include">
        </childnode>
        <childnode refid="200570" relation="include">
        </childnode>
        <childnode refid="200416" relation="include">
        </childnode>
        <childnode refid="200601" relation="include">
        </childnode>
        <childnode refid="200487" relation="include">
        </childnode>
        <childnode refid="200569" relation="include">
        </childnode>
        <childnode refid="200561" relation="include">
        </childnode>
      </node>
      <node id="200557">
        <label>TrkNeutralParameters/NeutralParameters.h</label>
      </node>
      <node id="200502">
        <label>AthContainers/tools/DVLInfo.icc</label>
        <link refid="da/d83/DVLInfo_8icc"/>
        <childnode refid="200489" relation="include">
        </childnode>
        <childnode refid="200453" relation="include">
        </childnode>
        <childnode refid="200503" relation="include">
        </childnode>
        <childnode refid="200484" relation="include">
        </childnode>
        <childnode refid="200435" relation="include">
        </childnode>
        <childnode refid="200443" relation="include">
        </childnode>
      </node>
      <node id="200450">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="200447" relation="include">
        </childnode>
        <childnode refid="200451" relation="include">
        </childnode>
        <childnode refid="200452" relation="include">
        </childnode>
        <childnode refid="200454" relation="include">
        </childnode>
        <childnode refid="200459" relation="include">
        </childnode>
        <childnode refid="200448" relation="include">
        </childnode>
        <childnode refid="200453" relation="include">
        </childnode>
        <childnode refid="200432" relation="include">
        </childnode>
        <childnode refid="200417" relation="include">
        </childnode>
        <childnode refid="200461" relation="include">
        </childnode>
        <childnode refid="200462" relation="include">
        </childnode>
        <childnode refid="200463" relation="include">
        </childnode>
      </node>
      <node id="200542">
        <label>TrkParameters/TrackParameters.h</label>
      </node>
      <node id="200573">
        <label>xAODJet/JetContainer.h</label>
        <link refid="d5/d55/JetContainer_8h_source"/>
        <childnode refid="200413" relation="include">
        </childnode>
        <childnode refid="200574" relation="include">
        </childnode>
        <childnode refid="200544" relation="include">
        </childnode>
      </node>
      <node id="200556">
        <label>versions/NeutralParticle_v1.h</label>
        <link refid="da/d85/NeutralParticle__v1_8h_source"/>
        <childnode refid="200416" relation="include">
        </childnode>
        <childnode refid="200488" relation="include">
        </childnode>
        <childnode refid="200423" relation="include">
        </childnode>
        <childnode refid="200535" relation="include">
        </childnode>
        <childnode refid="200540" relation="include">
        </childnode>
        <childnode refid="200534" relation="include">
        </childnode>
        <childnode refid="200417" relation="include">
        </childnode>
        <childnode refid="200557" relation="include">
        </childnode>
      </node>
      <node id="200618">
        <label>AsgTools/AsgMessaging.h</label>
        <link refid="d3/d61/AsgMessaging_8h_source"/>
        <childnode refid="200409" relation="include">
        </childnode>
        <childnode refid="200410" relation="include">
        </childnode>
        <childnode refid="200619" relation="include">
        </childnode>
        <childnode refid="200596" relation="include">
        </childnode>
      </node>
      <node id="200560">
        <label>xAODTracking/NeutralParticleFwd.h</label>
        <link refid="d4/d90/NeutralParticleFwd_8h_source"/>
      </node>
      <node id="200461">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="200554">
        <label>xAODTracking/NeutralParticleContainer.h</label>
        <link refid="da/d7f/NeutralParticleContainer_8h_source"/>
        <childnode refid="200555" relation="include">
        </childnode>
        <childnode refid="200558" relation="include">
        </childnode>
        <childnode refid="200544" relation="include">
        </childnode>
      </node>
      <node id="200491">
        <label>AthContainers/AuxVectorBase.h</label>
        <link refid="d7/d18/AuxVectorBase_8h"/>
        <childnode refid="200474" relation="include">
        </childnode>
        <childnode refid="200489" relation="include">
        </childnode>
        <childnode refid="200490" relation="include">
        </childnode>
        <childnode refid="200425" relation="include">
        </childnode>
        <childnode refid="200446" relation="include">
        </childnode>
        <childnode refid="200480" relation="include">
        </childnode>
        <childnode refid="200492" relation="include">
        </childnode>
        <childnode refid="200442" relation="include">
        </childnode>
        <childnode refid="200493" relation="include">
        </childnode>
        <childnode refid="200453" relation="include">
        </childnode>
        <childnode refid="200496" relation="include">
        </childnode>
      </node>
      <node id="200609">
        <label>../testingMacros/atlasstyle/AtlasStyle.C</label>
      </node>
      <node id="200577">
        <label>set</label>
      </node>
      <node id="200544">
        <label>xAODCore/CLASS_DEF.h</label>
        <link refid="d6/d20/xAODCore_2xAODCore_2CLASS__DEF_8h"/>
        <childnode refid="200441" relation="include">
        </childnode>
      </node>
      <node id="200465">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="200454">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="200451" relation="include">
        </childnode>
        <childnode refid="200455" relation="include">
        </childnode>
        <childnode refid="200459" relation="include">
        </childnode>
        <childnode refid="200453" relation="include">
        </childnode>
        <childnode refid="200460" relation="include">
        </childnode>
      </node>
      <node id="200432">
        <label>algorithm</label>
      </node>
      <node id="200513">
        <label>AthContainers/tools/IsMostDerivedFlag.h</label>
        <link refid="d5/dfa/IsMostDerivedFlag_8h"/>
      </node>
      <node id="200543">
        <label>TrkTrack/TrackCollection.h</label>
      </node>
      <node id="200425">
        <label>AthContainers/AuxElement.h</label>
        <link refid="d1/d6f/AuxElement_8h"/>
        <childnode refid="200426" relation="include">
        </childnode>
        <childnode refid="200427" relation="include">
        </childnode>
        <childnode refid="200442" relation="include">
        </childnode>
        <childnode refid="200444" relation="include">
        </childnode>
        <childnode refid="200446" relation="include">
        </childnode>
        <childnode refid="200474" relation="include">
        </childnode>
        <childnode refid="200452" relation="include">
        </childnode>
        <childnode refid="200480" relation="include">
        </childnode>
        <childnode refid="200477" relation="include">
        </childnode>
        <childnode refid="200429" relation="include">
        </childnode>
        <childnode refid="200483" relation="include">
        </childnode>
      </node>
      <node id="200614">
        <label>TColor.h</label>
      </node>
      <node id="200586">
        <label>AsgTools/AsgTool.h</label>
        <link refid="d4/d29/AsgTool_8h_source"/>
        <childnode refid="200410" relation="include">
        </childnode>
        <childnode refid="200408" relation="include">
        </childnode>
        <childnode refid="200587" relation="include">
        </childnode>
        <childnode refid="200589" relation="include">
        </childnode>
      </node>
      <node id="200444">
        <label>AthLinks/DataLink.h</label>
        <link refid="da/de8/DataLink_8h_source"/>
        <childnode refid="200417" relation="include">
        </childnode>
        <childnode refid="200409" relation="include">
        </childnode>
        <childnode refid="200445" relation="include">
        </childnode>
        <childnode refid="200419" relation="include">
        </childnode>
      </node>
      <node id="200510">
        <label>AthContainers/tools/DVL_iter_swap.h</label>
        <link refid="d6/ddb/DVL__iter__swap_8h"/>
        <childnode refid="200506" relation="include">
        </childnode>
        <childnode refid="200492" relation="include">
        </childnode>
        <childnode refid="200434" relation="include">
        </childnode>
      </node>
      <node id="200489">
        <label>AthContainers/OwnershipPolicy.h</label>
        <link refid="d3/da4/OwnershipPolicy_8h_source"/>
      </node>
      <node id="200416">
        <label>AthLinks/ElementLink.h</label>
        <link refid="dc/d24/ElementLink_8h_source"/>
        <childnode refid="200417" relation="include">
        </childnode>
        <childnode refid="200409" relation="include">
        </childnode>
        <childnode refid="200418" relation="include">
        </childnode>
        <childnode refid="200419" relation="include">
        </childnode>
        <childnode refid="200422" relation="include">
        </childnode>
      </node>
      <node id="200566">
        <label>xAODBTagging/versions/BTagVertexContainer_v1.h</label>
        <link refid="d1/d37/BTagVertexContainer__v1_8h_source"/>
        <childnode refid="200488" relation="include">
        </childnode>
        <childnode refid="200565" relation="include">
        </childnode>
      </node>
      <node id="200589">
        <label>AsgTools/SetProperty.h</label>
        <link refid="df/db0/SetProperty_8h_source"/>
      </node>
      <node id="200531">
        <label>xAODTracking/TrackParticleContainer.h</label>
        <link refid="da/d31/TrackParticleContainer_8h_source"/>
        <childnode refid="200532" relation="include">
        </childnode>
        <childnode refid="200545" relation="include">
        </childnode>
        <childnode refid="200544" relation="include">
        </childnode>
      </node>
      <node id="200579">
        <label>PATInterfaces/SystematicCode.h</label>
        <link refid="df/df5/SystematicCode_8h_source"/>
      </node>
      <node id="200500">
        <label>GaudiKernel/ClassID.h</label>
      </node>
      <node id="200515">
        <label>boost/type_traits.hpp</label>
      </node>
      <node id="200439">
        <label>memory</label>
      </node>
      <node id="200559">
        <label>xAODTracking/NeutralParticleContainerFwd.h</label>
        <link refid="d2/db4/NeutralParticleContainerFwd_8h_source"/>
        <childnode refid="200488" relation="include">
        </childnode>
        <childnode refid="200487" relation="include">
        </childnode>
        <childnode refid="200560" relation="include">
        </childnode>
      </node>
      <node id="200464">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="200449" relation="include">
        </childnode>
        <childnode refid="200450" relation="include">
        </childnode>
        <childnode refid="200465" relation="include">
        </childnode>
      </node>
      <node id="200493">
        <label>AthContainersInterfaces/AuxStore_traits.h</label>
        <link refid="dd/d70/AuxStore__traits_8h"/>
        <childnode refid="200426" relation="include">
        </childnode>
        <childnode refid="200442" relation="include">
        </childnode>
        <childnode refid="200427" relation="include">
        </childnode>
        <childnode refid="200461" relation="include">
        </childnode>
        <childnode refid="200494" relation="include">
        </childnode>
        <childnode refid="200495" relation="include">
        </childnode>
        <childnode refid="200409" relation="include">
        </childnode>
      </node>
      <node id="200563">
        <label>xAODBTagging/BTagVertexContainer.h</label>
        <link refid="d5/da2/BTagVertexContainer_8h_source"/>
        <childnode refid="200564" relation="include">
        </childnode>
        <childnode refid="200566" relation="include">
        </childnode>
        <childnode refid="200544" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="d2/d60/MakeUncertaintyPlots_8cxx_1a453120e3080b31d83c86daddd438092e" prot="public" static="no">
        <name>TESTLINE</name>
        <initializer>printf(&quot;Reached line %d\n&quot;,__LINE__);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" line="31" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="d2/d60/MakeUncertaintyPlots_8cxx_1a209c82d07b8811c95ec8569afc297ec0" prot="public" static="yes" mutable="no">
        <type>TBox *</type>
        <definition>TBox* myTBox</definition>
        <argsstring></argsstring>
        <name>myTBox</name>
        <initializer> new TBox()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" line="40" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d60/MakeUncertaintyPlots_8cxx_1ad1f428d95afe2f680b42c076ec9eee9d" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float maxYuser</definition>
        <argsstring></argsstring>
        <name>maxYuser</name>
        <initializer> -1.</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" line="42" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d60/MakeUncertaintyPlots_8cxx_1a2d2851e2ef5f415b3cc3a23cc39c1caf" prot="public" static="no" mutable="no">
        <type><ref refid="db/dd6/classjet_1_1OptionHelper" kindref="compound">jet::OptionHelper</ref></type>
        <definition>jet::OptionHelper optHelper</definition>
        <argsstring></argsstring>
        <name>optHelper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" line="45" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d60/MakeUncertaintyPlots_8cxx_1a6295d47efda04de55c38cb8ea1cdb807" prot="public" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool debug</definition>
        <argsstring></argsstring>
        <name>debug</name>
        <initializer> true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" line="46" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="d2/d60/MakeUncertaintyPlots_8cxx_1a74229fe2e51eee0a4c3439bd94e6b79c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void applyPublicFormat</definition>
        <argsstring>(TGraph &amp;graph)</argsstring>
        <name>applyPublicFormat</name>
        <param>
          <type>TGraph &amp;</type>
          <declname>graph</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" line="50" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" bodystart="49" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="d2/d60/MakeUncertaintyPlots_8cxx_1a180f1b4f222e7317320864c9014e873e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DrawText</definition>
        <argsstring>(TString txt, int col=kBlack, double y=0.88, double x=0.15, int align=12, double ts=0.042)</argsstring>
        <name>DrawText</name>
        <param>
          <type>TString</type>
          <declname>txt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
          <defval>kBlack</defval>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
          <defval>0.88</defval>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
          <defval>0.15</defval>
        </param>
        <param>
          <type>int</type>
          <declname>align</declname>
          <defval>12</defval>
        </param>
        <param>
          <type>double</type>
          <declname>ts</declname>
          <defval>0.042</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" line="108" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" bodystart="107" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="d2/d60/MakeUncertaintyPlots_8cxx_1a89f7f212dba1ac2964f3b0a13dd5bbb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DrawLineLabel</definition>
        <argsstring>(TString txt, double x, double y, int col, int ls, int lw)</argsstring>
        <name>DrawLineLabel</name>
        <param>
          <type>TString</type>
          <declname>txt</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ls</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" line="118" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" bodystart="118" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="d2/d60/MakeUncertaintyPlots_8cxx_1a7dad701eacc152d85e066a03eb50a78b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DrawLineLabel</definition>
        <argsstring>(TString txt, double x, double y, const TGraphErrors *h)</argsstring>
        <name>DrawLineLabel</name>
        <param>
          <type>TString</type>
          <declname>txt</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const TGraphErrors *</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" line="123" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" bodystart="123" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="d2/d60/MakeUncertaintyPlots_8cxx_1a28a5a5b037e45f18a6a7b5cfcc59fe06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DrawLineLabel</definition>
        <argsstring>(TString txt, double x, double y, const TH1 *h)</argsstring>
        <name>DrawLineLabel</name>
        <param>
          <type>TString</type>
          <declname>txt</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const TH1 *</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" line="127" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" bodystart="127" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="d2/d60/MakeUncertaintyPlots_8cxx_1a8ba54b14bb23cc9c43f45e43eae32b17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DrawFillLabel</definition>
        <argsstring>(TString txt, double x, double y, TH1 *h, bool logX=optHelper.LogPt(), bool logY=false)</argsstring>
        <name>DrawFillLabel</name>
        <param>
          <type>TString</type>
          <declname>txt</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>TH1 *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>logX</declname>
          <defval>optHelper.LogPt()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>logY</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" line="131" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" bodystart="131" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="d2/d60/MakeUncertaintyPlots_8cxx_1acbf862d6cc60462d1b732147e25f9450" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DrawAtlasLabel</definition>
        <argsstring>(const TString &amp;label=optHelper.GetATLASLabel(), const bool right=true)</argsstring>
        <name>DrawAtlasLabel</name>
        <param>
          <type>const TString &amp;</type>
          <declname>label</declname>
          <defval>optHelper.GetATLASLabel()</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>right</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" line="239" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" bodystart="238" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="d2/d60/MakeUncertaintyPlots_8cxx_1a14efdf59be8231f5e776e03886748764" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; TString &gt;</type>
        <definition>std::vector&lt;TString&gt; GetJetDesc</definition>
        <argsstring>(const TString &amp;jetAlgoIn)</argsstring>
        <name>GetJetDesc</name>
        <param>
          <type>const TString &amp;</type>
          <declname>jetAlgoIn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" line="272" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" bodystart="271" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="d2/d60/MakeUncertaintyPlots_8cxx_1a68669691616a118d167e94351bb6ad60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TString</type>
        <definition>TString GetLargeJetDesc</definition>
        <argsstring>(const TString &amp;jetAlgoIn)</argsstring>
        <name>GetLargeJetDesc</name>
        <param>
          <type>const TString &amp;</type>
          <declname>jetAlgoIn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" line="344" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" bodystart="343" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="d2/d60/MakeUncertaintyPlots_8cxx_1a2e57806ef35d6afa97c7693f8d8aedf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DrawJetLabel</definition>
        <argsstring>(const JetUncertaintiesTool *provider, const double yPos)</argsstring>
        <name>DrawJetLabel</name>
        <param>
          <type>const <ref refid="dd/d22/classJetUncertaintiesTool" kindref="compound">JetUncertaintiesTool</ref> *</type>
          <declname>provider</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>yPos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" line="438" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" bodystart="437" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="d2/d60/MakeUncertaintyPlots_8cxx_1ac5b8b21f07dd699b584631728120f193" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TString</type>
        <definition>TString getTagType</definition>
        <argsstring>(const JetUncertaintiesTool *provider)</argsstring>
        <name>getTagType</name>
        <param>
          <type>const <ref refid="dd/d22/classJetUncertaintiesTool" kindref="compound">JetUncertaintiesTool</ref> *</type>
          <declname>provider</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" line="449" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" bodystart="448" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="d2/d60/MakeUncertaintyPlots_8cxx_1a6e1a244532bcb1307f9f697f1080eca1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DrawYearLabel</definition>
        <argsstring>(const JetUncertaintiesTool *provider, const double yPos)</argsstring>
        <name>DrawYearLabel</name>
        <param>
          <type>const <ref refid="dd/d22/classJetUncertaintiesTool" kindref="compound">JetUncertaintiesTool</ref> *</type>
          <declname>provider</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>yPos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" line="461" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" bodystart="460" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="d2/d60/MakeUncertaintyPlots_8cxx_1acd6d334a94c80b824107af920ddd21e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DrawScenarioLabel</definition>
        <argsstring>(const JetUncertaintiesTool *provider, const double yPos)</argsstring>
        <name>DrawScenarioLabel</name>
        <param>
          <type>const <ref refid="dd/d22/classJetUncertaintiesTool" kindref="compound">JetUncertaintiesTool</ref> *</type>
          <declname>provider</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>yPos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" line="516" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" bodystart="515" bodyend="537"/>
      </memberdef>
      <memberdef kind="function" id="d2/d60/MakeUncertaintyPlots_8cxx_1a6c6ee54914950dc0cae3c6d7a04944ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double GetPunchthroughProb</definition>
        <argsstring>(const JetUncertaintiesTool *provider, const xAOD::Jet &amp;jet)</argsstring>
        <name>GetPunchthroughProb</name>
        <param>
          <type>const <ref refid="dd/d22/classJetUncertaintiesTool" kindref="compound">JetUncertaintiesTool</ref> *</type>
          <declname>provider</declname>
        </param>
        <param>
          <type>const <ref refid="db/d9c/classxAOD_1_1Jet__v1" kindref="compound">xAOD::Jet</ref> &amp;</type>
          <declname>jet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" line="549" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" bodystart="548" bodyend="601"/>
      </memberdef>
      <memberdef kind="function" id="d2/d60/MakeUncertaintyPlots_8cxx_1ac09b10d02e17ea1f36b93a42d8bad5a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setPileupShiftsForYear</definition>
        <argsstring>(const JetUncertaintiesTool *provider, xAOD::EventInfo *eInfo, const xAOD::Jet *jet=NULL)</argsstring>
        <name>setPileupShiftsForYear</name>
        <param>
          <type>const <ref refid="dd/d22/classJetUncertaintiesTool" kindref="compound">JetUncertaintiesTool</ref> *</type>
          <declname>provider</declname>
        </param>
        <param>
          <type><ref refid="df/df8/classxAOD_1_1EventInfo__v1" kindref="compound">xAOD::EventInfo</ref> *</type>
          <declname>eInfo</declname>
        </param>
        <param>
          <type>const <ref refid="db/d9c/classxAOD_1_1Jet__v1" kindref="compound">xAOD::Jet</ref> *</type>
          <declname>jet</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" line="604" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" bodystart="603" bodyend="648"/>
      </memberdef>
      <memberdef kind="function" id="d2/d60/MakeUncertaintyPlots_8cxx_1a9884f660ea36f38d07bbd6db33962a5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double getQuadratureSumUncertainty</definition>
        <argsstring>(const JetUncertaintiesTool *provider, const std::vector&lt; size_t &gt; &amp;compIndices, const xAOD::Jet &amp;jet, const xAOD::EventInfo &amp;eInfo, const size_t PTindex)</argsstring>
        <name>getQuadratureSumUncertainty</name>
        <param>
          <type>const <ref refid="dd/d22/classJetUncertaintiesTool" kindref="compound">JetUncertaintiesTool</ref> *</type>
          <declname>provider</declname>
        </param>
        <param>
          <type>const std::vector&lt; size_t &gt; &amp;</type>
          <declname>compIndices</declname>
        </param>
        <param>
          <type>const <ref refid="db/d9c/classxAOD_1_1Jet__v1" kindref="compound">xAOD::Jet</ref> &amp;</type>
          <declname>jet</declname>
        </param>
        <param>
          <type>const <ref refid="df/df8/classxAOD_1_1EventInfo__v1" kindref="compound">xAOD::EventInfo</ref> &amp;</type>
          <declname>eInfo</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>PTindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" line="651" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" bodystart="650" bodyend="688"/>
      </memberdef>
      <memberdef kind="function" id="d2/d60/MakeUncertaintyPlots_8cxx_1a17c887c8367df7f1896fd6ea0e9b62b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; size_t &gt;</type>
        <definition>std::vector&lt;size_t&gt; getComponentIndicesFromName</definition>
        <argsstring>(const JetUncertaintiesTool *provider, const TString &amp;compName)</argsstring>
        <name>getComponentIndicesFromName</name>
        <param>
          <type>const <ref refid="dd/d22/classJetUncertaintiesTool" kindref="compound">JetUncertaintiesTool</ref> *</type>
          <declname>provider</declname>
        </param>
        <param>
          <type>const TString &amp;</type>
          <declname>compName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" line="691" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" bodystart="690" bodyend="806"/>
      </memberdef>
      <memberdef kind="function" id="d2/d60/MakeUncertaintyPlots_8cxx_1a4b166c0740f1fbd51169f01bebb40f1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::vector&lt; size_t &gt; &gt;</type>
        <definition>std::vector&lt; std::vector&lt;size_t&gt; &gt; getComponentIndicesFromNames</definition>
        <argsstring>(const JetUncertaintiesTool *provider, const std::vector&lt; TString &gt; &amp;compNames)</argsstring>
        <name>getComponentIndicesFromNames</name>
        <param>
          <type>const <ref refid="dd/d22/classJetUncertaintiesTool" kindref="compound">JetUncertaintiesTool</ref> *</type>
          <declname>provider</declname>
        </param>
        <param>
          <type>const std::vector&lt; TString &gt; &amp;</type>
          <declname>compNames</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" line="809" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" bodystart="808" bodyend="828"/>
      </memberdef>
      <memberdef kind="function" id="d2/d60/MakeUncertaintyPlots_8cxx_1a71725d7f7246f9ce4568908efa5df2ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MakeUncertaintyPlots</definition>
        <argsstring>(const TString &amp;outFile, TCanvas *canvas, const std::vector&lt; JetUncertaintiesTool * &gt; &amp;providers, const std::vector&lt; std::vector&lt; std::vector&lt; size_t &gt; &gt; &gt; &amp;compSetIndices, const std::vector&lt; std::vector&lt; TString &gt; &gt; &amp;labelNames, TH1D *frame, const double fixedValue, const std::vector&lt; double &gt; &amp;scanBins, const bool fixedIsEta, const float mOverPt, const bool doComparison, const bool doCompareOnly)</argsstring>
        <name>MakeUncertaintyPlots</name>
        <param>
          <type>const TString &amp;</type>
          <declname>outFile</declname>
        </param>
        <param>
          <type>TCanvas *</type>
          <declname>canvas</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="dd/d22/classJetUncertaintiesTool" kindref="compound">JetUncertaintiesTool</ref> * &gt; &amp;</type>
          <declname>providers</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::vector&lt; std::vector&lt; size_t &gt; &gt; &gt; &amp;</type>
          <declname>compSetIndices</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::vector&lt; TString &gt; &gt; &amp;</type>
          <declname>labelNames</declname>
        </param>
        <param>
          <type>TH1D *</type>
          <declname>frame</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>fixedValue</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>scanBins</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>fixedIsEta</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>mOverPt</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>doComparison</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>doCompareOnly</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" line="833" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" bodystart="832" bodyend="1226"/>
      </memberdef>
      <memberdef kind="function" id="d2/d60/MakeUncertaintyPlots_8cxx_1aed593ca378f8d1bc72d413d125d0679d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MakeUncertaintyPlots</definition>
        <argsstring>(const TString &amp;outFile, TCanvas *canvas, const std::vector&lt; JetUncertaintiesTool * &gt; &amp;providers, const std::vector&lt; std::vector&lt; TString &gt; &gt; &amp;compSetComponents, const std::vector&lt; std::vector&lt; TString &gt; &gt; &amp;labelNames, const bool doComparison, const bool doCompareOnly)</argsstring>
        <name>MakeUncertaintyPlots</name>
        <param>
          <type>const TString &amp;</type>
          <declname>outFile</declname>
        </param>
        <param>
          <type>TCanvas *</type>
          <declname>canvas</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="dd/d22/classJetUncertaintiesTool" kindref="compound">JetUncertaintiesTool</ref> * &gt; &amp;</type>
          <declname>providers</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::vector&lt; TString &gt; &gt; &amp;</type>
          <declname>compSetComponents</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::vector&lt; TString &gt; &gt; &amp;</type>
          <declname>labelNames</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>doComparison</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>doCompareOnly</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" line="1229" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" bodystart="1228" bodyend="1294"/>
      </memberdef>
      <memberdef kind="function" id="d2/d60/MakeUncertaintyPlots_8cxx_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" line="1298" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx" bodystart="1297" bodyend="1598"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;JetUncertainties/JetUncertaintiesTool.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;JetUncertainties/Helpers.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;JetUncertainties/UncertaintyEnum.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODJet/Jet.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODJet/JetContainer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODJet/JetAuxContainer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODEventInfo/EventInfo.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODEventInfo/EventInfoContainer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODEventInfo/EventInfoAuxContainer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ROOTCORE</highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;xAODRootAccess/TEvent.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;xAODRootAccess/TStore.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>ROOTCORE</highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../testingMacros/atlasstyle/AtlasStyle.C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../testingMacros/atlasstyle/AtlasLabels.C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TString.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TCanvas.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TH1D.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TGraphErrors.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TColor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TBox.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;math.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;OptionHelper.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TESTLINE<sp/>printf(&quot;Reached<sp/>line<sp/>%d\n&quot;,__LINE__);</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Kate&apos;s<sp/>comparison<sp/>plot<sp/>colours</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//TColor<sp/>blue1(1000,13.0/255.0,159.0/255.0,216.0/255.0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//TColor<sp/>mauve(1001,133.0/255.0,105.0/255,207.0/255.0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//TColor<sp/>green(1002,124.0/255.0,194.0/255.0,66.0/255.0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//TColor<sp/>darkred(1003,248.0/255.0,14.0/255.0,39.0/255.0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//TColor<sp/>mango(1004,238.0/255.0,<sp/>206.0/255.0,<sp/>0.0/255.0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>TBox<sp/>*<sp/>myTBox<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TBox();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>maxYuser<sp/>=<sp/>-1.;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Options<sp/>helper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><ref refid="db/dd6/classjet_1_1OptionHelper" kindref="compound">jet::OptionHelper</ref><sp/>optHelper;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>applyPublicFormat(TGraph&amp;<sp/>graph)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString<sp/>name<sp/>=<sp/>graph.GetName();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name.Contains(</highlight><highlight class="stringliteral">&quot;Absolute&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>name.Contains(</highlight><highlight class="stringliteral">&quot;JES&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.SetLineColor(kRed);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.SetLineStyle(1);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name.Contains(</highlight><highlight class="stringliteral">&quot;Relative&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>name.Contains(</highlight><highlight class="stringliteral">&quot;JES&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.SetLineColor(kMagenta);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.SetLineStyle(6);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name.Contains(</highlight><highlight class="stringliteral">&quot;Flav.<sp/>composition&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.SetLineColor(kBlue);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.SetLineStyle(2);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!name.CompareTo(</highlight><highlight class="stringliteral">&quot;Flav.<sp/>composition&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.SetName(Form(</highlight><highlight class="stringliteral">&quot;%s,<sp/>%s&quot;</highlight><highlight class="normal">,name.Data(),optHelper.IsDijetComposition()?</highlight><highlight class="stringliteral">&quot;inclusive<sp/>jets&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;unknown<sp/>composition&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name.Contains(</highlight><highlight class="stringliteral">&quot;Flav.<sp/>response&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.SetLineColor(kGreen+1);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.SetLineStyle(3);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!name.CompareTo(</highlight><highlight class="stringliteral">&quot;Flav.<sp/>response&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.SetName(Form(</highlight><highlight class="stringliteral">&quot;%s,<sp/>%s&quot;</highlight><highlight class="normal">,name.Data(),optHelper.IsDijetComposition()?</highlight><highlight class="stringliteral">&quot;inclusive<sp/>jets&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;unknown<sp/>composition&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name.Contains(</highlight><highlight class="stringliteral">&quot;Pileup&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.SetLineColor(kGray+1);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.SetLineStyle(4);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name.Contains(</highlight><highlight class="stringliteral">&quot;Punch-through&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.SetLineColor(kOrange+7);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.SetLineStyle(5);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name.Contains(</highlight><highlight class="stringliteral">&quot;nonclosure&quot;</highlight><highlight class="normal">)<sp/>||<sp/>name.Contains(</highlight><highlight class="stringliteral">&quot;NonClosure&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.SetLineColor(kCyan);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.SetLineStyle(7);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name.Contains(</highlight><highlight class="stringliteral">&quot;Trigger<sp/>data-derived&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.SetLineColor(kOrange+7);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.SetLineStyle(5);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Unexpected<sp/>name<sp/>for<sp/>public<sp/>format,<sp/>not<sp/>changing<sp/>style<sp/>of<sp/>graph:<sp/>%s\n&quot;</highlight><highlight class="normal">,name.Data());</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DrawText(TString<sp/>txt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col=kBlack,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y=0.88,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x=0.15,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>align=12,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ts=0.042)</highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>TLatex<sp/>*tex<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TLatex();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>tex-&gt;SetNDC();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>tex-&gt;SetTextFont(42);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>tex-&gt;SetTextSize(ts);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>tex-&gt;SetTextAlign(align);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>tex-&gt;SetTextColor(col);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>tex-&gt;DrawLatex(x,y,txt);<sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DrawLineLabel(TString<sp/>txt,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ls,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lw)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>TLine<sp/>*l<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TLine();<sp/>l-&gt;SetLineWidth(lw);<sp/>l-&gt;SetLineColor(col);<sp/>l-&gt;SetLineStyle(ls);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>l-&gt;DrawLineNDC(x-0.02,y,x+0.02,y);<sp/>DrawText(txt,kBlack,y,x+0.032,12,0.036);</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DrawLineLabel(TString<sp/>txt,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TGraphErrors<sp/>*h)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>DrawLineLabel(txt,x,y,h-&gt;GetLineColor(),h-&gt;GetLineStyle(),h-&gt;GetLineWidth());</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DrawLineLabel(TString<sp/>txt,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TH1<sp/>*h)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>DrawLineLabel(txt,x,y,h-&gt;GetLineColor(),h-&gt;GetLineStyle(),h-&gt;GetLineWidth());</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DrawFillLabel(TString<sp/>txt,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,<sp/>TH1<sp/>*h,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>logX<sp/>=<sp/>optHelper.LogPt(),<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>logY<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>static<sp/>TPave<sp/>*box<sp/>=<sp/>new<sp/>TPave();</highlight></codeline>
<codeline lineno="134"><highlight class="comment">//<sp/><sp/>box-&gt;SetFillColor(590);</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/>box-&gt;SetFillColor(h-&gt;GetFillColor());</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/>box-&gt;SetLineColor(h-&gt;GetLineColor());</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/>box-&gt;SetLineWidth(1);</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/>box-&gt;SetLineColor(kBlack);</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/>box-&gt;SetShadowColor(0);</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/>box-&gt;SetX1NDC(x-0.02);</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/>box-&gt;SetY1NDC(y-0.015);</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/>box-&gt;SetX2NDC(x+0.02);</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/>box-&gt;SetY2NDC(y+0.015);</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/>box-&gt;Draw();</highlight></codeline>
<codeline lineno="145"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Margin<sp/>=<sp/>(0.12,0.04,0.15,0.04)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xlow<sp/>=<sp/>h-&gt;GetXaxis()-&gt;GetXmin();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xhigh<sp/>=<sp/>h-&gt;GetXaxis()-&gt;GetXmax();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>YES<sp/>THIS<sp/>IS<sp/>HACKY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>y<sp/>+<sp/>0.003;<sp/></highlight><highlight class="comment">//<sp/>&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(fabs(xlow)-fabs(xhigh))<sp/>&gt;<sp/>0.01)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>x<sp/>+<sp/>0.012;<sp/></highlight><highlight class="comment">//<sp/>Boxes<sp/>in<sp/>an<sp/>ugly<sp/>place<sp/>otherwise.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ylow<sp/>=<sp/>0.0;<sp/><sp/></highlight><highlight class="comment">//<sp/>I<sp/>hate<sp/>root<sp/>and<sp/>I<sp/>am<sp/>hard-coding<sp/>this.<sp/>Apologies<sp/>future<sp/>user.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yhigh<sp/>=<sp/>maxYuser;<sp/></highlight><highlight class="comment">//<sp/>&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>calculate<sp/>user<sp/>coordinates<sp/>from<sp/>sensible<sp/>ratios<sp/>given<sp/>in<sp/>function<sp/>call<sp/>:(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fracxaxislow<sp/>=<sp/>((x-0.02)-0.12)/(1.0-0.12-0.04);<sp/></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fracxaxishigh<sp/>=<sp/>((x+0.02)-0.12)/(1.0-0.12-0.04);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>userxlow,<sp/>userxhigh;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(logX)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>userxlow<sp/>=<sp/>exp(log(xlow)<sp/>+<sp/>fracxaxislow*(log(xhigh)<sp/>-<sp/>log(xlow)));</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>userxhigh<sp/>=<sp/>exp(log(xlow)<sp/>+<sp/>fracxaxishigh*(log(xhigh)<sp/>-<sp/>log(xlow)));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(optHelper.IsLargeR())</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userxlow<sp/>-=<sp/>15;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userxhigh<sp/>-=<sp/>15;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>userxlow<sp/>=<sp/>xlow<sp/>+<sp/>fracxaxislow*(xhigh<sp/>-<sp/>xlow);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>userxhigh<sp/>=<sp/>xlow<sp/>+<sp/>fracxaxishigh*(xhigh<sp/>-<sp/>xlow);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(optHelper.IsTLA())</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userxlow<sp/>-=<sp/>15;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userxhigh<sp/>-=<sp/>15;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fracyaxislow<sp/>=<sp/>((y-0.015)-0.15)/(1.0-0.15-0.04);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fracyaxishigh<sp/>=<sp/>((y+0.015)-0.15)/(1.0-0.15-0.04);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>userylow,<sp/>useryhigh;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(logY)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>userylow<sp/>=<sp/>exp(log(ylow)<sp/>+<sp/>fracyaxislow*(log(yhigh)<sp/>-<sp/>log(ylow)));</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>useryhigh<sp/>=<sp/>exp(log(ylow)<sp/>+<sp/>fracyaxishigh*(log(yhigh)<sp/>-<sp/>log(ylow)));</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>userylow<sp/>=<sp/>ylow<sp/>+<sp/>fracyaxislow*(yhigh<sp/>-<sp/>ylow);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>useryhigh<sp/>=<sp/>ylow<sp/>+<sp/>fracyaxishigh*(yhigh<sp/>-<sp/>ylow);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>myTBox-&gt;SetFillColor(h-&gt;GetFillColor());</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>myTBox-&gt;SetLineColor(h-&gt;GetLineColor());</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>myTBox-&gt;SetLineWidth(2);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>myTBox-&gt;SetX1(userxlow);<sp/></highlight><highlight class="comment">//(80);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>myTBox-&gt;SetY1(userylow);<sp/></highlight><highlight class="comment">//(0.1*y-0.005);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>myTBox-&gt;SetX2(userxhigh);<sp/></highlight><highlight class="comment">//(110.0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>myTBox-&gt;SetY2(useryhigh);<sp/></highlight><highlight class="comment">//(0.1*y);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>myTBox-&gt;DrawClone(</highlight><highlight class="stringliteral">&quot;l&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Undo<sp/>shift</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>y<sp/>-<sp/>0.003;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(fabs(xlow)-fabs(xhigh))<sp/>&gt;<sp/>0.01)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>x<sp/>-<sp/>0.012;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/><sp/>static<sp/>TPave<sp/>*box<sp/>=<sp/>new<sp/>TPave();<sp/></highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/><sp/>box-&gt;SetFillColor(590);<sp/></highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/><sp/>box-&gt;SetLineColor(h-&gt;GetLineColor());<sp/>box-&gt;SetLineWidth(1);<sp/>box-&gt;SetLineColor(kBlack);</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/><sp/>//box-&gt;SetFillStyle(1001);</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/><sp/>//box-&gt;SetShadowColor(h-&gt;GetFillColor());</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/>//box-&gt;SetFillColor(2);</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/>//cout<sp/>&lt;&lt;<sp/>box-&gt;GetFillColor()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/><sp/>box-&gt;DrawPave(x-0.02,y-0.015,x+0.02,y+0.015,1,&quot;ndc&quot;);//h-&gt;GetLineWidth(),&quot;ndc&quot;);</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/><sp/>//box-&gt;DrawBox(100,0.04,200,0.05);</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/><sp/>//<sp/><sp/>double<sp/>xc[4]<sp/>=<sp/>{x-0.02,x+0.02,x+0.02,x-0.02};</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/><sp/>//double<sp/>yc[4]<sp/>=<sp/>{y-0.015,x-0.015,y+0.015,x+0.015};</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/><sp/>//gPad-&gt;SetFillColor(590);</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/><sp/>//gPad-&gt;PaintFillArea(4,xc,yc);</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/><sp/>//double<sp/>x1<sp/>=<sp/>gPad-&gt;GetX1(),<sp/>xden=(gPad-&gt;GetX2()-gPad-&gt;GetX1());</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/><sp/>//double<sp/>y1<sp/>=<sp/>gPad-&gt;GetY1(),<sp/>yden=(gPad-&gt;GetY2()-gPad-&gt;GetY1());</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/><sp/>//box-&gt;DrawBox((x-0.02)*xden+x1,(y-0.015)*yden+y1,(x+0.02)*xden+x1,(y+0.015)*yden+y1);</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/><sp/>//cout<sp/>&lt;&lt;<sp/>(x-0.02)*xden+x1<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="223"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/><sp/><sp/><sp/>No,<sp/>we<sp/>do<sp/>not<sp/>have<sp/>such<sp/>functions,<sp/>but<sp/>the<sp/>conversion<sp/>is<sp/>easy</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>u<sp/>=<sp/>(x-gPad-&gt;GetX1())/(gpad-&gt;GetX2()-gPad-&gt;GetX1());</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/><sp/><sp/><sp/>where</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/><sp/><sp/><sp/>x<sp/>is<sp/>your<sp/>user<sp/>coordinate</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/><sp/><sp/><sp/>u<sp/>will<sp/>be<sp/>the<sp/>corresponding<sp/>NDC<sp/>coordinate</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>DrawText(txt,kBlack,y,x+0.032,12,0.036);</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DrawAtlasLabel(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>label<sp/>=<sp/>optHelper.GetATLASLabel(),<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>right=</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xPos<sp/>=<sp/>0.15;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>double<sp/>yPos<sp/>=<sp/>0.850;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yPos<sp/>=<sp/>0.890;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label.CompareTo(</highlight><highlight class="stringliteral">&quot;Work<sp/>in<sp/>Progress&quot;</highlight><highlight class="normal">,TString::kIgnoreCase))</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(right)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!label.CompareTo(</highlight><highlight class="stringliteral">&quot;Internal&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xPos<sp/>=<sp/>0.7;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(optHelper.IsLargeR()<sp/>&amp;&amp;<sp/>optHelper.IsPublicFormat())</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xPos<sp/>=<sp/>0.65;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!label.CompareTo(</highlight><highlight class="stringliteral">&quot;Preliminary&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xPos<sp/>=<sp/>0.67;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xPos<sp/>=<sp/>0.75;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xPos<sp/>=<sp/>0.7;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATLASLabel(xPos,yPos,label.Data(),kBlack);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATLASLabel(right?0.75:xPos,yPos,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,kBlack);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawText(label,kBlack,yPos-0.038,right?0.75:xPos);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="271"><highlight class="normal">std::vector&lt;TString&gt;<sp/>GetJetDesc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>jetAlgoIn)</highlight></codeline>
<codeline lineno="272"><highlight class="normal">{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>TString<sp/>jetAlgo<sp/>=<sp/>jetAlgoIn;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;TString&gt;<sp/>returnvals;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>TString<sp/>calib<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jetAlgo.Contains(</highlight><highlight class="stringliteral">&quot;EMTopo&quot;</highlight><highlight class="normal">)<sp/>||<sp/>jetAlgo.Contains(</highlight><highlight class="stringliteral">&quot;TopoEM&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;EM+JES&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jetAlgo.ReplaceAll(</highlight><highlight class="stringliteral">&quot;EMTopo&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jetAlgo.ReplaceAll(</highlight><highlight class="stringliteral">&quot;TopoEM&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jetAlgo.Contains(</highlight><highlight class="stringliteral">&quot;LCTopo&quot;</highlight><highlight class="normal">)<sp/>||<sp/>jetAlgo.Contains(</highlight><highlight class="stringliteral">&quot;TopoLC&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;LCW+JES&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jetAlgo.ReplaceAll(</highlight><highlight class="stringliteral">&quot;LCTopo&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jetAlgo.ReplaceAll(</highlight><highlight class="stringliteral">&quot;TopoLC&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(calib<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>parse<sp/>calib<sp/>for:<sp/>%s\n&quot;</highlight><highlight class="normal">,jetAlgoIn.Data());</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returnvals.push_back(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>returnvals;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>TString<sp/>type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jetAlgo.BeginsWith(</highlight><highlight class="stringliteral">&quot;AntiKt&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;anti-k_{t}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jetAlgo.ReplaceAll(</highlight><highlight class="stringliteral">&quot;AntiKt&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jetAlgo.BeginsWith(</highlight><highlight class="stringliteral">&quot;CamKt&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Cambridge-Aachen<sp/>k_{t}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jetAlgo.ReplaceAll(</highlight><highlight class="stringliteral">&quot;CamKt&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jetAlgo.BeginsWith(</highlight><highlight class="stringliteral">&quot;Kt&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;k_{t}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jetAlgo.ReplaceAll(</highlight><highlight class="stringliteral">&quot;Kt&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>parse<sp/>type<sp/>for:<sp/>%s\n&quot;</highlight><highlight class="normal">,jetAlgoIn.Data());</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returnvals.push_back(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>returnvals;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>AntiKt4LCTopo<sp/>--&gt;<sp/>AntiKt4<sp/>--&gt;<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hopefully<sp/>all<sp/>that&apos;s<sp/>left<sp/>is<sp/>the<sp/>radius<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jetR<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!jet::utils::getTypeObjFromString&lt;int&gt;(jetAlgo,jetR))</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>radius<sp/>parameter<sp/>for:<sp/>%s\n&quot;</highlight><highlight class="normal">,jetAlgoIn.Data());</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returnvals.push_back(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>returnvals;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jetR<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Got<sp/>unexpected<sp/>radius<sp/>parameter<sp/>of<sp/>%d<sp/>for:<sp/>%s\n&quot;</highlight><highlight class="normal">,jetR,jetAlgoIn.Data());</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returnvals.push_back(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>returnvals;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>returnvals.push_back(type);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>returnvals.push_back(<sp/>Form(</highlight><highlight class="stringliteral">&quot;#font[52]{R}<sp/>=<sp/>%s&quot;</highlight><highlight class="normal">,jetR&gt;9?Form(</highlight><highlight class="stringliteral">&quot;%.1f&quot;</highlight><highlight class="normal">,jetR/10.):Form(</highlight><highlight class="stringliteral">&quot;0.%d&quot;</highlight><highlight class="normal">,jetR)));</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>returnvals.push_back(calib);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//returnvals.push_back(Form(&quot;%s<sp/>%s<sp/>&quot;,type.Data(),calib.Data()));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>Form(&quot;%s<sp/>#font[52]{R}<sp/>=<sp/>%s,<sp/>%s&quot;,type.Data(),jetR&gt;9?Form(&quot;%.1f&quot;,jetR/10.):Form(&quot;0.%d&quot;,jetR),calib.Data());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>returnvals;</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal">TString<sp/>GetLargeJetDesc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>jetAlgoIn)</highlight></codeline>
<codeline lineno="344"><highlight class="normal">{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>get<sp/>the<sp/>substructure<sp/>techniques<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Example:<sp/>AntiKt10LCTopoTrimmedPtFrac5SmallR30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Want<sp/>to<sp/>split<sp/>into<sp/>&quot;AntiKt10LCTopo&quot;<sp/>and<sp/>&quot;TrimmedPtFrac5SmallR30&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>TString<sp/>jetAlgo<sp/>=<sp/>jetAlgoIn;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>jetAlgo.ReplaceAll(</highlight><highlight class="stringliteral">&quot;Trimmed&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;;Trimmed&quot;</highlight><highlight class="normal">).ReplaceAll(</highlight><highlight class="stringliteral">&quot;Filtered&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;;Filtered&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Split<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;TString&gt;<sp/>jetAlgoStrings<sp/>=<sp/>jet::utils::vectorize&lt;TString&gt;(jetAlgo,</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jetAlgoStrings.size()<sp/>!=<sp/>2)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>split<sp/>large-R<sp/>jet<sp/>definition:<sp/>%s\n&quot;</highlight><highlight class="normal">,jetAlgoIn.Data());</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>pure<sp/>jet<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>TString<sp/>jetDefPart<sp/>=<sp/>GetJetDesc(jetAlgoStrings.at(0)).at(0)+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">+GetJetDesc(jetAlgoStrings.at(0)).at(1)+</highlight><highlight class="stringliteral">&quot;<sp/>jets,<sp/>&quot;</highlight><highlight class="normal">+GetJetDesc(jetAlgoStrings.at(0)).at(2);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jetDefPart<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Overwrite<sp/>the<sp/>&quot;+JES&quot;<sp/>as<sp/>this<sp/>is<sp/>not<sp/>applicable<sp/>for<sp/>large-R</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>jetDefPart.ReplaceAll(</highlight><highlight class="stringliteral">&quot;+JES&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;+JES+JMS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>get<sp/>the<sp/>substructure<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>TString<sp/>jetSubPart<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>TString<sp/>trimOrFilter<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jetAlgoStrings.at(1).Contains(</highlight><highlight class="stringliteral">&quot;Trimmed&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trimOrFilter<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Trimmed&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jetAlgoStrings.at(1).Contains(</highlight><highlight class="stringliteral">&quot;Filtered&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trimOrFilter<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Filtered&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>trimming<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>make<sp/>this<sp/>more<sp/>general</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trimOrFilter<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Trimmed&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jetAlgoStrings.at(1).ReplaceAll(</highlight><highlight class="stringliteral">&quot;Trimmed&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TString<sp/>pTfrac<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jetAlgoStrings.at(1).BeginsWith(</highlight><highlight class="stringliteral">&quot;PtFrac&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jetAlgoStrings.at(1).ReplaceAll(</highlight><highlight class="stringliteral">&quot;PtFrac&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>temp<sp/>=<sp/>jetAlgoStrings.at(1).Data();</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>jetAlgoStrings.at(1).Length();<sp/>++index)</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TString(temp[index]).IsDigit())</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTfrac<sp/>+=<sp/>TString(temp[index]);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTfrac<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Found<sp/>PtFrac<sp/>but<sp/>not<sp/>an<sp/>associated<sp/>value:<sp/>%s\n&quot;</highlight><highlight class="normal">,jetAlgoIn.Data());</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jetAlgoStrings.at(1).Replace(0,pTfrac.Length(),</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TString<sp/>smallR<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jetAlgoStrings.at(1).BeginsWith(</highlight><highlight class="stringliteral">&quot;SmallR&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jetAlgoStrings.at(1).ReplaceAll(</highlight><highlight class="stringliteral">&quot;SmallR&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>temp<sp/>=<sp/>jetAlgoStrings.at(1).Data();</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>jetAlgoStrings.at(1).Length();<sp/>++index)</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TString(temp[index]).IsDigit())</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smallR<sp/>+=<sp/>TString(temp[index]);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(smallR<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Found<sp/>SmallR<sp/>but<sp/>not<sp/>an<sp/>associated<sp/>value:<sp/>%s\n&quot;</highlight><highlight class="normal">,jetAlgoIn.Data());</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jetAlgoStrings.at(1).Replace(0,smallR.Length(),</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jetAlgoStrings.at(1)<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Substructure<sp/>information<sp/>remains<sp/>(%s):<sp/>%s\n&quot;</highlight><highlight class="normal">,jetAlgoStrings.at(1).Data(),jetAlgoIn.Data());</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jetSubPart<sp/>=<sp/>Form(</highlight><highlight class="stringliteral">&quot;Trimmed<sp/>(f_{cut}<sp/>=<sp/>%.2f,<sp/>#font[52]{R}_{sub}<sp/>=<sp/>%.1f)%s&quot;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(jet::utils::getTypeObjFromString&lt;int&gt;(pTfrac))/100.,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(jet::utils::getTypeObjFromString&lt;int&gt;(smallR))/100.,optHelper.IsPublicFormat()<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>#it{p}_{T}^{jet}<sp/>&gt;<sp/>150<sp/>GeV&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jetSubPart<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>parse<sp/>substructure<sp/>information:<sp/>%s\n&quot;</highlight><highlight class="normal">,jetAlgoIn.Data());</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Form(</highlight><highlight class="stringliteral">&quot;#splitline{%s}{%s}&quot;</highlight><highlight class="normal">,jetDefPart.Data(),jetSubPart.Data());</highlight></codeline>
<codeline lineno="435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DrawJetLabel(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d22/classJetUncertaintiesTool" kindref="compound">JetUncertaintiesTool</ref>*<sp/>provider,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yPos)</highlight></codeline>
<codeline lineno="438"><highlight class="normal">{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(optHelper.IsLargeR())</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawText(GetLargeJetDesc(provider-&gt;getJetDef().c_str()),kBlack,yPos);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//DrawText(GetJetDesc(provider-&gt;getJetDef().c_str())+&quot;<sp/>+<sp/>#it{in<sp/>situ}<sp/>correction&quot;,kBlack,yPos);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawText(GetJetDesc(provider-&gt;getJetDef().c_str()).at(0)+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">+GetJetDesc(provider-&gt;getJetDef().c_str()).at(1)+</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">+GetJetDesc(provider-&gt;getJetDef().c_str()).at(2)+</highlight><highlight class="stringliteral">&quot;<sp/>+<sp/>#it{in<sp/>situ}<sp/>correction&quot;</highlight><highlight class="normal">,kBlack,yPos);</highlight></codeline>
<codeline lineno="446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal">TString<sp/>getTagType(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d22/classJetUncertaintiesTool" kindref="compound">JetUncertaintiesTool</ref>*<sp/>provider)</highlight></codeline>
<codeline lineno="449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString<sp/>config<sp/>=<sp/>provider-&gt;getConfigFile().c_str();</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config.Contains(</highlight><highlight class="stringliteral">&quot;_HbbTagging&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Hbb&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config.Contains(</highlight><highlight class="stringliteral">&quot;_WZTagging&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;W/Z&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config.Contains(</highlight><highlight class="stringliteral">&quot;_TopTagging&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Top&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;UNKNOWN&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DrawYearLabel(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d22/classJetUncertaintiesTool" kindref="compound">JetUncertaintiesTool</ref>*<sp/>provider,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yPos)</highlight></codeline>
<codeline lineno="461"><highlight class="normal">{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString<sp/>release<sp/>=<sp/>provider-&gt;getRelease();</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>TString<sp/>type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>TString<sp/>sqrtS<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(release.BeginsWith(</highlight><highlight class="stringliteral">&quot;2011_&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Data<sp/>2011&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sqrtS<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;7<sp/>TeV&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(release.BeginsWith(</highlight><highlight class="stringliteral">&quot;2012_&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Data<sp/>2012&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sqrtS<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;8<sp/>TeV&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(release.BeginsWith(</highlight><highlight class="stringliteral">&quot;2015_Prerec&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Prerec<sp/>2015&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sqrtS<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;13<sp/>TeV&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(release.BeginsWith(</highlight><highlight class="stringliteral">&quot;2015_&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Data<sp/>2015&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sqrtS<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;13<sp/>TeV&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(release.BeginsWith(</highlight><highlight class="stringliteral">&quot;2015_TLA&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Data<sp/>2015&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sqrtS<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;13<sp/>TeV&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(release.BeginsWith(</highlight><highlight class="stringliteral">&quot;2015_ICHEP&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Data<sp/>2015&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sqrtS<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;13<sp/>TeV&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(release.BeginsWith(</highlight><highlight class="stringliteral">&quot;2016_Moriond&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Data<sp/>2016&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sqrtS<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;13<sp/>TeV&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>||<sp/>sqrtS<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>parse<sp/>year<sp/>information<sp/>from<sp/>release:<sp/>%s\n&quot;</highlight><highlight class="normal">,release.Data());</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(-1);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//DrawText(Form(&quot;%s,<sp/>#sqrt{#it{s}}<sp/>=<sp/>%s&quot;,type.Data(),sqrtS.Data()),kBlack,yPos);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString<sp/>bunchspacing<sp/>=<sp/>optHelper.GetBunchSpacing();</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bunchspacing<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>DrawText(Form(</highlight><highlight class="stringliteral">&quot;%s,<sp/>#sqrt{#it{s}}<sp/>=<sp/>%s,<sp/>%s<sp/>ns&quot;</highlight><highlight class="normal">,type.Data(),sqrtS.Data(),bunchspacing.Data()),kBlack,yPos);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>DrawText(Form(</highlight><highlight class="stringliteral">&quot;%s,<sp/>#sqrt{#it{s}}<sp/>=<sp/>%s&quot;</highlight><highlight class="normal">,type.Data(),sqrtS.Data()),kBlack,yPos);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal">}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DrawScenarioLabel(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d22/classJetUncertaintiesTool" kindref="compound">JetUncertaintiesTool</ref>*<sp/>provider,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yPos)</highlight></codeline>
<codeline lineno="516"><highlight class="normal">{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString<sp/>config<sp/>=<sp/>provider-&gt;getConfigFile().c_str();</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>TString<sp/>scenario<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Nominal&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config.Contains(</highlight><highlight class="stringliteral">&quot;StrongerCorrelations&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scenario<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Stronger<sp/>Correlations&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config.Contains(</highlight><highlight class="stringliteral">&quot;WeakerCorrelations&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scenario<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Weaker<sp/>Correlations&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config.Contains(</highlight><highlight class="stringliteral">&quot;_3NP_&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TString<sp/>scenarioNum<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;UNKNOWN&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;TString&gt;<sp/>tokens<sp/>=<sp/>jet::utils::vectorize&lt;TString&gt;(config,</highlight><highlight class="stringliteral">&quot;_./&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iToken<sp/>=<sp/>0;<sp/>iToken<sp/>&lt;<sp/>tokens.size();<sp/>++iToken)</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokens.at(iToken).BeginsWith(</highlight><highlight class="stringliteral">&quot;Scenario&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scenarioNum<sp/>=<sp/>tokens.at(iToken).ReplaceAll(</highlight><highlight class="stringliteral">&quot;Scenario&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scenario<sp/>=<sp/>Form(</highlight><highlight class="stringliteral">&quot;Rep_{str.red}^{%s,JES}&quot;</highlight><highlight class="normal">,scenarioNum.Data());</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scenario<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;Nominal&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawText(scenario,kBlack,config.Contains(</highlight><highlight class="stringliteral">&quot;_3NP&quot;</highlight><highlight class="normal">)?yPos-0.01:yPos);</highlight></codeline>
<codeline lineno="537"><highlight class="normal">}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>GetPunchthroughProb(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d22/classJetUncertaintiesTool" kindref="compound">JetUncertaintiesTool</ref>*<sp/>provider,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d9c/classxAOD_1_1Jet__v1" kindref="compound">xAOD::Jet</ref>&amp;<sp/>jet)</highlight></codeline>
<codeline lineno="549"><highlight class="normal">{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>TH1*<sp/>PThisto<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>TString<sp/>jetType<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PThisto<sp/>==<sp/>NULL<sp/>||<sp/>jetType<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>||<sp/>jetType<sp/>!=<sp/>provider-&gt;getJetDef())</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PThisto)</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>PThisto;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PThisto<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString<sp/>config<sp/>=<sp/>provider-&gt;getConfigFile();</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TString<sp/>filename;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jetType<sp/>=<sp/>provider-&gt;getJetDef();</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TString<sp/>histName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config.Contains(</highlight><highlight class="stringliteral">&quot;_2015&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PTprob.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>histName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;h_PT_pT_EMJES4_norm&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PTprob_2012.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jetType<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;AntiKt4LCTopo&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>histName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;h_PT_pT_LCJES4_norm&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jetType<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;AntiKt6LCTopo&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>histName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;h_PT_pT_LCJES6_norm&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jetType<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;AntiKt4EMTopo&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>histName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;h_PT_pT_EMJES4_norm&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jetType<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;AntiKt6EMTopo&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>histName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;h_PT_pT_EMJES6_norm&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Unrecognized<sp/>jet<sp/>type<sp/>for<sp/>PT<sp/>fraction:<sp/>%s\n&quot;</highlight><highlight class="normal">,jetType.Data());</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(100);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TFile*<sp/>PTfile<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TFile(filename,</highlight><highlight class="stringliteral">&quot;READ&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PTfile<sp/>||<sp/>PTfile-&gt;IsZombie())</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>open<sp/>PT<sp/>fraction<sp/>file\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(101);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PThisto<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">TH1*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(PTfile-&gt;Get(histName));</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PThisto)</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>retrieve<sp/>PT<sp/>fraction<sp/>histo:<sp/>%s\n&quot;</highlight><highlight class="normal">,histName.Data());</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(102);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PThisto-&gt;SetDirectory(0);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PThisto-&gt;Interpolate(jet.<ref refid="db/d9c/classxAOD_1_1Jet__v1_1a138d731ae5cad7eee14716f6d0716eab" kindref="member" tooltip="The transverse momentum () of the particle.">pt</ref>()/1.e3);</highlight></codeline>
<codeline lineno="601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPileupShiftsForYear(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d22/classJetUncertaintiesTool" kindref="compound">JetUncertaintiesTool</ref>*<sp/>provider,<sp/><ref refid="df/df8/classxAOD_1_1EventInfo__v1" kindref="compound">xAOD::EventInfo</ref>*<sp/>eInfo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d9c/classxAOD_1_1Jet__v1" kindref="compound">xAOD::Jet</ref>*<sp/>jet<sp/>=<sp/>NULL)</highlight></codeline>
<codeline lineno="604"><highlight class="normal">{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor&lt;float&gt;</ref><sp/>mu(</highlight><highlight class="stringliteral">&quot;averageInteractionsPerCrossing&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor&lt;float&gt;</ref><sp/>NPV(</highlight><highlight class="stringliteral">&quot;NPV&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>sigmaMu<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>sigmaNPV<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString<sp/>release<sp/>=<sp/>provider-&gt;getRelease();</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(release.BeginsWith(</highlight><highlight class="stringliteral">&quot;2011_&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dag,<sp/>night<sp/>of<sp/>Febuary<sp/>4/5,<sp/>2013</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigmaMu<sp/><sp/>=<sp/>3.0;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigmaNPV<sp/>=<sp/>3.0;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(release.BeginsWith(</highlight><highlight class="stringliteral">&quot;2012_&quot;</highlight><highlight class="normal">)<sp/>or<sp/>release.BeginsWith(</highlight><highlight class="stringliteral">&quot;2015_Prerec&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Craig<sp/>Sawyer,<sp/>Jan<sp/>22<sp/>2013</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigmaMu<sp/><sp/>=<sp/>5.593*1.11;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigmaNPV<sp/>=<sp/>3.672;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(release.BeginsWith(</highlight><highlight class="stringliteral">&quot;2015_Moriond&quot;</highlight><highlight class="normal">)<sp/>||<sp/>release.BeginsWith(</highlight><highlight class="stringliteral">&quot;2015_ICHEP&quot;</highlight><highlight class="normal">)<sp/>||<sp/>release.BeginsWith(</highlight><highlight class="stringliteral">&quot;2015_TLA&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Kate,<sp/>Jan<sp/>31<sp/>2016</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigmaMu<sp/>=<sp/>1.9;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigmaNPV<sp/>=<sp/>2.9;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(release.BeginsWith(</highlight><highlight class="stringliteral">&quot;2016_&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Kate,<sp/>Nov<sp/>2016<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>via<sp/>Eric<sp/>Corrigan&apos;s<sp/>pileup<sp/>studies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scaling<sp/>term<sp/>taken<sp/>from<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>https://indico.cern.ch/event/437993/contributions/1925644/attachments/1138739/1630981/spagan_MuRescaling.pdf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigmaMu<sp/>=<sp/>5.35;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigmaNPV<sp/>=<sp/>3.49;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Unexpected<sp/>year<sp/>for<sp/>setPileupShiftsForYear<sp/>in<sp/>release:<sp/>%s\n&quot;</highlight><highlight class="normal">,release.Data());</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(-1);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>mu(*eInfo)<sp/><sp/>=<sp/>(jet?provider-&gt;getRefMu(*jet):provider-&gt;getRefMu())+sigmaMu;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>NPV(*eInfo)<sp/>=<sp/>(jet?provider-&gt;getRefNPV(*jet):provider-&gt;getRefNPV())+sigmaNPV;</highlight></codeline>
<codeline lineno="648"><highlight class="normal">}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getQuadratureSumUncertainty(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d22/classJetUncertaintiesTool" kindref="compound">JetUncertaintiesTool</ref>*<sp/>provider,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;size_t&gt;&amp;<sp/>compIndices,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d9c/classxAOD_1_1Jet__v1" kindref="compound">xAOD::Jet</ref>&amp;<sp/>jet,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="df/df8/classxAOD_1_1EventInfo__v1" kindref="compound">xAOD::EventInfo</ref>&amp;<sp/>eInfo,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>PTindex)</highlight></codeline>
<codeline lineno="651"><highlight class="normal">{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compIndices.size()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;WARNING:<sp/>empty<sp/>vector<sp/>passed<sp/>to<sp/>getQuadratureSumUncertainty\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//for<sp/>(size_t<sp/>iComp<sp/>=<sp/>0;<sp/>iComp<sp/>&lt;<sp/>compIndices.size();<sp/>++iComp)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>printf(&quot;Component<sp/>%zu/%zu<sp/>(%zu)\n&quot;,iComp,compIndices.size(),compIndices.at(iComp));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>unc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compIndices.size()<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>(compIndices.at(0)<sp/>==<sp/>8888<sp/>||<sp/>compIndices.at(0)<sp/>==<sp/>9999))<sp/></highlight><highlight class="comment">//<sp/>SPECIAL:<sp/>calorimeter<sp/>or<sp/>TA<sp/>weight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compIndices.at(0)<sp/>==<sp/>8888)</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unc<sp/>=<sp/>provider-&gt;getNormalizedCaloMassWeight(jet)/10.;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unc<sp/>=<sp/>provider-&gt;getNormalizedTAMassWeight(jet)/10.;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compIndices.size()<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>!optHelper.AbsValue())</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>factor<sp/>=<sp/>compIndices.at(0)<sp/>!=<sp/>PTindex<sp/>?<sp/>1<sp/>:<sp/>GetPunchthroughProb(provider,jet);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>localUnc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iScaleVar<sp/>=<sp/>0;<sp/>iScaleVar<sp/>&lt;<sp/>optHelper.GetScaleVars().size();<sp/>++iScaleVar)</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(provider-&gt;getValidUncertainty(compIndices.at(0),localUnc,jet,eInfo,optHelper.GetScaleVars().at(iScaleVar)))</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unc<sp/>=<sp/>factor*localUnc;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iComp<sp/>=<sp/>0;<sp/>iComp<sp/>&lt;<sp/>compIndices.size();<sp/>++iComp)</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compIndices.at(iComp)<sp/>==<sp/>8888<sp/>||<sp/>compIndices.at(iComp)<sp/>==<sp/>9999)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>factor<sp/>=<sp/>compIndices.at(iComp)<sp/>!=<sp/>PTindex<sp/>?<sp/>1<sp/>:<sp/>GetPunchthroughProb(provider,jet);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>localUnc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iScaleVar<sp/>=<sp/>0;<sp/>iScaleVar<sp/>&lt;<sp/>optHelper.GetScaleVars().size();<sp/>++iScaleVar)</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(provider-&gt;getValidUncertainty(compIndices.at(iComp),localUnc,jet,eInfo,optHelper.GetScaleVars().at(iScaleVar)))</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unc<sp/>+=<sp/>factor*factor*localUnc*localUnc;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unc<sp/>=<sp/>sqrt(unc);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>unc;</highlight></codeline>
<codeline lineno="688"><highlight class="normal">}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal">std::vector&lt;size_t&gt;<sp/>getComponentIndicesFromName(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d22/classJetUncertaintiesTool" kindref="compound">JetUncertaintiesTool</ref>*<sp/>provider,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>compName)</highlight></codeline>
<codeline lineno="691"><highlight class="normal">{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Map<sp/>of<sp/>name<sp/>to<sp/>index<sp/>won&apos;t<sp/>work<sp/>as<sp/>we<sp/>need<sp/>to<sp/>worry<sp/>about<sp/>wildcard<sp/>component<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>So<sp/>build<sp/>a<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;TString&gt;<sp/>provNames;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iComp<sp/>=<sp/>0;<sp/>iComp<sp/>&lt;<sp/>provider-&gt;getNumComponents();<sp/>++iComp)</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>provNames.push_back(provider-&gt;getComponentName(iComp));</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>name<sp/>prefix,<sp/>if<sp/>it<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString<sp/>namePrefix<sp/>=<sp/>optHelper.GetNamePrefix();</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>parse<sp/>component<sp/>name<sp/>to<sp/>index/indices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TString&gt;<sp/>subComponents<sp/>=<sp/>jet::utils::vectorize&lt;TString&gt;(compName,</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;size_t&gt;<sp/>indices;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iSubComp<sp/>=<sp/>0;<sp/>iSubComp<sp/>&lt;<sp/>subComponents.size();<sp/>++iSubComp)</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>wildcards</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>beginWild<sp/><sp/>=<sp/>subComponents.at(iSubComp).BeginsWith(</highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>endWild<sp/><sp/><sp/><sp/>=<sp/>subComponents.at(iSubComp).EndsWith(</highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>midWild<sp/><sp/><sp/><sp/>=<sp/>!beginWild<sp/>&amp;&amp;<sp/>!endWild<sp/>&amp;&amp;<sp/>subComponents.at(iSubComp).Contains(</highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ALLCOMP<sp/><sp/><sp/><sp/>=<sp/>!subComponents.at(iSubComp).CompareTo(</highlight><highlight class="stringliteral">&quot;total&quot;</highlight><highlight class="normal">,TString::kIgnoreCase)<sp/>||<sp/>!subComponents.at(iSubComp).CompareTo(</highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CALOWEIGHT<sp/>=<sp/>!subComponents.at(iSubComp).CompareTo(</highlight><highlight class="stringliteral">&quot;caloweight&quot;</highlight><highlight class="normal">,TString::kIgnoreCase);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>TAWEIGHT<sp/><sp/><sp/>=<sp/>!subComponents.at(iSubComp).CompareTo(</highlight><highlight class="stringliteral">&quot;taweight&quot;</highlight><highlight class="normal">,TString::kIgnoreCase);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString<sp/>toFind<sp/><sp/>=<sp/>midWild<sp/>?<sp/>subComponents.at(iSubComp)<sp/>:<sp/>TString(subComponents.at(iSubComp)).ReplaceAll(</highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Treat<sp/>the<sp/>more<sp/>difficult<sp/>mid-wild<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;TString&gt;<sp/>tokensToFind;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midWild)<sp/>tokensToFind<sp/>=<sp/>jet::utils::vectorize&lt;TString&gt;(toFind,</highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midWild<sp/>&amp;&amp;<sp/>tokensToFind.size()<sp/>!=<sp/>2)</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Only<sp/>one<sp/>middle-wildcard<sp/>is<sp/>currently<sp/>supported\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>handle<sp/>string:<sp/>%s\n&quot;</highlight><highlight class="normal">,toFind.Data());</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(-1);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>component<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>foundIndex<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iProvComp<sp/>=<sp/>0;<sp/>iProvComp<sp/>&lt;<sp/>provNames.size();<sp/>++iProvComp)</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>components<sp/>which<sp/>are<sp/>not<sp/>4-vec<sp/>scales<sp/>or<sp/>pt-scales</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(!provider-&gt;getComponentScalesFourVec(iProvComp)<sp/>&amp;&amp;<sp/>!provider-&gt;getComponentScalesPt(iProvComp))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ALLCOMP)</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foundIndex<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices.push_back(iProvComp);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CALOWEIGHT)</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foundIndex<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices.push_back(8888);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TAWEIGHT)</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foundIndex<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices.push_back(9999);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midWild)</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>string<sp/>starts<sp/>with<sp/>the<sp/>first<sp/>token<sp/>and<sp/>ends<sp/>with<sp/>the<sp/>last<sp/>token</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>already<sp/>ensured<sp/>there<sp/>are<sp/>only<sp/>two<sp/>tokens</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>provNames.at(iProvComp).BeginsWith(tokensToFind.at(0),TString::kIgnoreCase)<sp/>||<sp/>(namePrefix<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>provNames.at(iProvComp).BeginsWith(namePrefix+tokensToFind.at(0),TString::kIgnoreCase))<sp/>)<sp/>&amp;&amp;<sp/>provNames.at(iProvComp).EndsWith(tokensToFind.at(1),TString::kIgnoreCase))</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foundIndex<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices.push_back(iProvComp);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!beginWild<sp/>&amp;&amp;<sp/>!endWild)</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!provNames.at(iProvComp).CompareTo(toFind,TString::kIgnoreCase)<sp/>||<sp/>(<sp/>namePrefix<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>!provNames.at(iProvComp).CompareTo(namePrefix+toFind,TString::kIgnoreCase)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foundIndex<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices.push_back(iProvComp);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(beginWild<sp/>&amp;&amp;<sp/>!endWild)</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(provNames.at(iProvComp).EndsWith(toFind,TString::kIgnoreCase))</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foundIndex<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices.push_back(iProvComp);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!beginWild<sp/>&amp;&amp;<sp/>endWild)</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(provNames.at(iProvComp).BeginsWith(toFind,TString::kIgnoreCase)<sp/>||<sp/>(<sp/>namePrefix<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>provNames.at(iProvComp).BeginsWith(namePrefix+toFind,TString::kIgnoreCase)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foundIndex<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices.push_back(iProvComp);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(provNames.at(iProvComp).Contains(toFind,TString::kIgnoreCase))</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foundIndex<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices.push_back(iProvComp);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!foundIndex)</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;WARNING:<sp/>Failed<sp/>to<sp/>find<sp/>match<sp/>for<sp/>sub/component:<sp/>%s\n&quot;</highlight><highlight class="normal">,toFind.Data());</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!indices.size())</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>find<sp/>any<sp/>indices<sp/>for<sp/>component:<sp/>%s\n&quot;</highlight><highlight class="normal">,compName.Data());</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(-1);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>indices;</highlight></codeline>
<codeline lineno="806"><highlight class="normal">}</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal">std::vector&lt;<sp/>std::vector&lt;size_t&gt;<sp/>&gt;<sp/>getComponentIndicesFromNames(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d22/classJetUncertaintiesTool" kindref="compound">JetUncertaintiesTool</ref>*<sp/>provider,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TString&gt;&amp;<sp/>compNames)</highlight></codeline>
<codeline lineno="809"><highlight class="normal">{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::vector&lt;size_t&gt;<sp/>&gt;<sp/>indices;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>parse<sp/>all<sp/>of<sp/>the<sp/>names<sp/>to<sp/>provider<sp/>indices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iComp<sp/>=<sp/>0;<sp/>iComp<sp/>&lt;<sp/>compNames.size();<sp/>++iComp)</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices.push_back(getComponentIndicesFromName(provider,compNames.at(iComp)));</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iComp<sp/>=<sp/>0;<sp/>iComp<sp/>&lt;<sp/>indices.size();<sp/>++iComp)</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Parsed<sp/>component<sp/>named:<sp/>%s\n&quot;</highlight><highlight class="normal">,compNames.at(iComp).Data());</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iIndex<sp/>=<sp/>0;<sp/>iIndex<sp/>&lt;<sp/>indices.at(iComp).size();<sp/>++iIndex)</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(indices.at(iComp).at(iIndex)<sp/>&lt;<sp/>provider-&gt;getNumComponents())</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\t<sp/>%zu:<sp/>%s\n&quot;</highlight><highlight class="normal">,indices.at(iComp).at(iIndex),provider-&gt;getComponentName(indices.at(iComp).at(iIndex)).c_str());</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\t<sp/>%zu:<sp/>SPECIAL\n&quot;</highlight><highlight class="normal">,indices.at(iComp).at(iIndex));</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>indices;</highlight></codeline>
<codeline lineno="828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MakeUncertaintyPlots(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>outFile,TCanvas*<sp/>canvas,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;JetUncertaintiesTool*&gt;&amp;<sp/>providers,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>std::vector&lt;<sp/>std::vector&lt;size_t&gt;<sp/>&gt;<sp/>&gt;&amp;<sp/>compSetIndices,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>std::vector&lt;TString&gt;<sp/>&gt;&amp;<sp/>labelNames,TH1D*<sp/>frame,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fixedValue,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>scanBins,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fixedIsEta,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mOverPt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>doComparison,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>doCompareOnly)</highlight></codeline>
<codeline lineno="833"><highlight class="normal">{</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor&lt;int&gt;</ref><sp/>Nsegments(</highlight><highlight class="stringliteral">&quot;GhostMuonSegmentCount&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor&lt;char&gt;</ref><sp/>IsBjet(</highlight><highlight class="stringliteral">&quot;IsBjet&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor&lt;float&gt;</ref><sp/>minDR(</highlight><highlight class="stringliteral">&quot;MinDR&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Combined<sp/>mass<sp/>helpers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d8/df7/classjet_1_1JetFourMomAccessor" kindref="compound">jet::JetFourMomAccessor</ref><sp/>scaleCalo(jet::CompMassDef::getJetScaleString(jet::CompMassDef::CaloMass).Data());</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d8/df7/classjet_1_1JetFourMomAccessor" kindref="compound">jet::JetFourMomAccessor</ref><sp/>scaleTA(jet::CompMassDef::getJetScaleString(jet::CompMassDef::TAMass).Data());</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor&lt;float&gt;</ref><sp/>scaleTAMoment(</highlight><highlight class="stringliteral">&quot;JetTrackAssistedMassCalibrated&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d8/df7/classjet_1_1JetFourMomAccessor" kindref="compound">jet::JetFourMomAccessor</ref><sp/>scaleCombQCD(jet::CompMassDef::getJetScaleString(jet::CompMassDef::CombMassQCD).Data());</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d8/df7/classjet_1_1JetFourMomAccessor" kindref="compound">jet::JetFourMomAccessor</ref><sp/>scaleCombWZ(jet::CompMassDef::getJetScaleString(jet::CompMassDef::CombMassWZ).Data());</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d8/df7/classjet_1_1JetFourMomAccessor" kindref="compound">jet::JetFourMomAccessor</ref><sp/>scaleCombHbb(jet::CompMassDef::getJetScaleString(jet::CompMassDef::CombMassHbb).Data());</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d8/df7/classjet_1_1JetFourMomAccessor" kindref="compound">jet::JetFourMomAccessor</ref><sp/>scaleCombTop(jet::CompMassDef::getJetScaleString(jet::CompMassDef::CombMassTop).Data());</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>TGraphs<sp/>per<sp/>provider<sp/>per<sp/>component</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also<sp/>make<sp/>total<sp/>TGraph<sp/>and<sp/>TH1D<sp/>per<sp/>provider</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;TH1D*&gt;<sp/>totalHists;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;TGraphErrors*&gt;<sp/>totalGraphs;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::vector&lt;TGraphErrors*&gt;<sp/>&gt;<sp/>compGraphs;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>a<sp/>jet<sp/>container<sp/>and<sp/>a<sp/>jet<sp/>for<sp/>us<sp/>to<sp/>manipulate<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/d95/classxAOD_1_1TEvent" kindref="compound" tooltip="Tool for accessing xAOD files outside of Athena.">xAOD::TEvent</ref><sp/>event;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/dae/classxAOD_1_1TStore" kindref="compound">xAOD::TStore</ref><sp/>store;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::JetContainer</ref>*<sp/>jets<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dd/d44/namespacexAOD_1a0eb9af0abb884a9bcf1d45c2326894c0" kindref="member" tooltip="Definition of the current &amp;quot;jet container version&amp;quot;.">xAOD::JetContainer</ref>();</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>jets-&gt;setStore(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d6/dc1/classxAOD_1_1JetAuxContainer__v1" kindref="compound">xAOD::JetAuxContainer</ref>());</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>jets-&gt;<ref refid="d0/d4d/classDataVector_1a486aeb4868e7c29331717adb06ea0df2" kindref="member" tooltip="Add an element to the end of the collection.">push_back</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="db/d9c/classxAOD_1_1Jet__v1" kindref="compound">xAOD::Jet</ref>());</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d9c/classxAOD_1_1Jet__v1" kindref="compound">xAOD::Jet</ref>*<sp/>jet<sp/>=<sp/>jets-&gt;<ref refid="d0/d4d/classDataVector_1a3f598b345c9b1eb8793fd9cc6c16abe3" kindref="member" tooltip="Access an element, as an rvalue.">at</ref>(0);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>Nsegments<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>25<sp/>segments<sp/>is<sp/>about<sp/>average<sp/>for<sp/>jets<sp/>receiving<sp/>a<sp/>correction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>modulated<sp/>by<sp/>the<sp/>probability<sp/>of<sp/>punchthrough</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>Nsegments(*jet)<sp/>=<sp/>optHelper.IgnorePT()?0:25;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>IsBjet(*jet)<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>minDR(*jet)<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>an<sp/>EventInfo<sp/>object<sp/>for<sp/>us<sp/>to<sp/>manipulate<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::EventInfoContainer</ref>*<sp/>eInfos<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dd/d44/namespacexAOD_1a24a475867e81d8e601f7172473bd506b" kindref="member" tooltip="Define the latest version of the container.">xAOD::EventInfoContainer</ref>();</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>eInfos-&gt;setStore(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d5/d41/classxAOD_1_1EventInfoAuxContainer__v1" kindref="compound">xAOD::EventInfoAuxContainer</ref>());</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/>eInfos-&gt;<ref refid="d0/d4d/classDataVector_1a486aeb4868e7c29331717adb06ea0df2" kindref="member" tooltip="Add an element to the end of the collection.">push_back</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="df/df8/classxAOD_1_1EventInfo__v1" kindref="compound">xAOD::EventInfo</ref>());</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/df8/classxAOD_1_1EventInfo__v1" kindref="compound">xAOD::EventInfo</ref>*<sp/>eInfo<sp/>=<sp/>eInfos-&gt;<ref refid="d0/d4d/classDataVector_1a3f598b345c9b1eb8793fd9cc6c16abe3" kindref="member" tooltip="Access an element, as an rvalue.">at</ref>(0);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>indexHelper<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>provider</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iProv<sp/>=<sp/>0;<sp/>iProv<sp/>&lt;<sp/>providers.size();<sp/>++iProv)</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d22/classJetUncertaintiesTool" kindref="compound">JetUncertaintiesTool</ref>*<sp/>provider<sp/>=<sp/>providers.at(iProv);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>pileup<sp/>values<sp/>for<sp/>the<sp/>year<sp/>(so<sp/>long<sp/>as<sp/>this<sp/>isn&apos;t<sp/>the<sp/>special<sp/>jet-dependent<sp/>case)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!optHelper.IsEtaDepPileup())</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setPileupShiftsForYear(provider,eInfo);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>catch<sp/>the<sp/>special<sp/>case,<sp/>where<sp/>we<sp/>want<sp/>to<sp/>set<sp/>with<sp/>respect<sp/>to<sp/>the<sp/>central<sp/>region<sp/>for<sp/>all<sp/>jets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(specifically<sp/>early<sp/>2015<sp/>data<sp/>where<sp/>eta-intercalibration<sp/>done<sp/>with<sp/>mu=0<sp/>data<sp/>for<sp/>forward<sp/>region)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jet-&gt;setJetP4(<ref refid="dd/d44/namespacexAOD_1afd4eec03bc44b101a3c8b2b1429f3072" kindref="member" tooltip="Base 4 Momentum type for Jet.">xAOD::JetFourMom_t</ref>(100.e3,0.,0.,0.));</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setPileupShiftsForYear(provider,eInfo,jet);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>One<sp/>totalHist<sp/>per<sp/>provider</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalHists.push_back(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1D(Form(</highlight><highlight class="stringliteral">&quot;Total_%zu_hist&quot;</highlight><highlight class="normal">,iProv),</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,scanBins.size()-1,&amp;scanBins[0]));</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TH1D*<sp/>totalHist<sp/>=<sp/>totalHists.back();</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalHist-&gt;SetFillColor(590);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalHist-&gt;SetLineWidth(0);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>One<sp/>totalGraph<sp/>per<sp/>provider</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalGraphs.push_back(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TGraphErrors());</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TGraphErrors*<sp/>totalGraph<sp/>=<sp/>totalGraphs.back();</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalGraph-&gt;SetName(Form(</highlight><highlight class="stringliteral">&quot;Total_%zu_graph&quot;</highlight><highlight class="normal">,iProv));</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalGraph-&gt;SetLineStyle(1);</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalGraph-&gt;SetLineWidth(2);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalGraph-&gt;SetLineColor(kBlack);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>One<sp/>list<sp/>of<sp/>all<sp/>indices<sp/>per<sp/>provider</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;size_t&gt;<sp/>allIndices<sp/>=<sp/>getComponentIndicesFromName(provider,</highlight><highlight class="stringliteral">&quot;total&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>punch-through<sp/>index,<sp/>if<sp/>applicable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>PTindex<sp/>=<sp/>allIndices.size();</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iComp<sp/>=<sp/>0;<sp/>iComp<sp/>&lt;<sp/>provider-&gt;getNumComponents();<sp/>++iComp)</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TString(provider-&gt;getComponentName(iComp).c_str()).Contains(</highlight><highlight class="stringliteral">&quot;PunchThrough&quot;</highlight><highlight class="normal">,TString::kIgnoreCase))</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PTindex<sp/>=<sp/>iComp;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>One<sp/>vector<sp/>of<sp/>comp<sp/>graphs<sp/>per<sp/>provider</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;TGraphErrors*&gt;<sp/>provCompGraphs;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>get<sp/>the<sp/>components</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iComp<sp/>=<sp/>0;<sp/>iComp<sp/>&lt;<sp/>compSetIndices.at(iProv).size();<sp/>++iComp)</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>One<sp/>graph<sp/>per<sp/>component<sp/>per<sp/>provider</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>provCompGraphs.push_back(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TGraphErrors());</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TGraphErrors*<sp/>compGraph<sp/>=<sp/>provCompGraphs.back();</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compGraph-&gt;SetName(labelNames.at(iProv).at(iComp));</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compGraph-&gt;SetLineStyle(indexHelper+1);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compGraph-&gt;SetLineColor(indexHelper+2<sp/>&lt;<sp/>5<sp/>?<sp/>indexHelper+2<sp/>:<sp/>indexHelper+3<sp/>&lt;<sp/>13<sp/>?<sp/>indexHelper+3<sp/>:<sp/>indexHelper+4);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(indexHelper+3<sp/>==<sp/>10)<sp/>compGraph-&gt;SetLineColor(kYellow-9);</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compGraph-&gt;SetLineWidth(doComparison?3:4);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(optHelper.IsPublicFormat()<sp/>&amp;&amp;<sp/>!optHelper.IsLargeR())</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>applyPublicFormat(*compGraph);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indexHelper++;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>run<sp/>over<sp/>the<sp/>scan<sp/>grid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iScan<sp/>=<sp/>1;<sp/>iScan<sp/>&lt;<sp/>frame-&gt;GetNbinsX()+2;<sp/>++iScan)</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>binValue<sp/>=<sp/>iScan<sp/>==<sp/>1<sp/>?<sp/>frame-&gt;GetBinLowEdge(iScan)+1.e-3<sp/>:<sp/>iScan<sp/>==<sp/>frame-&gt;GetNbinsX()+1<sp/>?<sp/>frame-&gt;GetBinLowEdge(iScan)-1.e-3<sp/>:<sp/>frame-&gt;GetBinLowEdge(iScan);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>the<sp/>jet<sp/>to<sp/>work<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pt<sp/><sp/><sp/>=<sp/>(fixedIsEta<sp/>?<sp/>binValue<sp/>:<sp/>fixedValue)*1.e3;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eta<sp/><sp/>=<sp/>(fixedIsEta<sp/>?<sp/>fixedValue<sp/>:<sp/>binValue);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass<sp/>=<sp/>mOverPt*pt;</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jet-&gt;setJetP4(<ref refid="dd/d44/namespacexAOD_1afd4eec03bc44b101a3c8b2b1429f3072" kindref="member" tooltip="Base 4 Momentum type for Jet.">xAOD::JetFourMom_t</ref>(pt,eta,0,mass));</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Combined<sp/>mass<sp/>helpers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scaleCalo.setAttribute(*jet,<sp/><sp/><ref refid="dd/d44/namespacexAOD_1afd4eec03bc44b101a3c8b2b1429f3072" kindref="member" tooltip="Base 4 Momentum type for Jet.">xAOD::JetFourMom_t</ref>(pt,eta,0,mass));</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scaleTA.setAttribute(*jet,<sp/><sp/><ref refid="dd/d44/namespacexAOD_1afd4eec03bc44b101a3c8b2b1429f3072" kindref="member" tooltip="Base 4 Momentum type for Jet.">xAOD::JetFourMom_t</ref>(pt,eta,0,mass));</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scaleCombQCD.setAttribute(*jet,<sp/><sp/><ref refid="dd/d44/namespacexAOD_1afd4eec03bc44b101a3c8b2b1429f3072" kindref="member" tooltip="Base 4 Momentum type for Jet.">xAOD::JetFourMom_t</ref>(pt,eta,0,mass));</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scaleCombWZ.setAttribute(*jet,<sp/><sp/><ref refid="dd/d44/namespacexAOD_1afd4eec03bc44b101a3c8b2b1429f3072" kindref="member" tooltip="Base 4 Momentum type for Jet.">xAOD::JetFourMom_t</ref>(pt,eta,0,mass));</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scaleCombHbb.setAttribute(*jet,<sp/><sp/><ref refid="dd/d44/namespacexAOD_1afd4eec03bc44b101a3c8b2b1429f3072" kindref="member" tooltip="Base 4 Momentum type for Jet.">xAOD::JetFourMom_t</ref>(pt,eta,0,mass));</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scaleCombTop.setAttribute(*jet,<sp/><sp/><ref refid="dd/d44/namespacexAOD_1afd4eec03bc44b101a3c8b2b1429f3072" kindref="member" tooltip="Base 4 Momentum type for Jet.">xAOD::JetFourMom_t</ref>(pt,eta,0,mass));</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scaleTAMoment(*jet)<sp/>=<sp/><sp/>mass<sp/>;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Kinematic<sp/>cut<sp/>when<sp/>comparing<sp/>large-R<sp/>pre-recs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isZero<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(optHelper.DoCompare()<sp/>&amp;&amp;<sp/>TString(provider-&gt;getRelease().c_str()).Contains(</highlight><highlight class="stringliteral">&quot;2015_Prerec_&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pt<sp/>&gt;<sp/>1.5e6)<sp/>isZero<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>components</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iComp<sp/>=<sp/>0;<sp/>iComp<sp/>&lt;<sp/>compSetIndices.at(iProv).size();<sp/>++iComp)</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>uncertainty<sp/>for<sp/>the<sp/>component,<sp/>quad-sum<sp/>of<sp/>sub-components<sp/>if<sp/>applicable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TGraphErrors*<sp/>compGraph<sp/>=<sp/>provCompGraphs.at(iComp);</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>compUnc<sp/>=<sp/>!isZero<sp/>?<sp/>getQuadratureSumUncertainty(provider,compSetIndices.at(iProv).at(iComp),*jet,*eInfo,PTindex)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compGraph-&gt;SetPoint(iScan-1,binValue,compUnc);</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>the<sp/>total<sp/>uncertainty<sp/>graph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>totalUnc<sp/>=<sp/>!isZero<sp/>?<sp/>getQuadratureSumUncertainty(provider,allIndices,*jet,*eInfo,PTindex)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalGraph-&gt;SetPoint(iScan-1,binValue,totalUnc);</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>vector<sp/>of<sp/>comp<sp/>graphs<sp/>to<sp/>the<sp/>total<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compGraphs.push_back(provCompGraphs);</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>build<sp/>the<sp/>total<sp/>uncertainty<sp/>histo<sp/>(bin<sp/>centers<sp/>instead<sp/>of<sp/>edges)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iScan<sp/>=<sp/>1;<sp/>iScan<sp/>&lt;<sp/>frame-&gt;GetNbinsX()+1;<sp/>++iScan)</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>binValue<sp/>=<sp/>frame-&gt;GetBinCenter(iScan);</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>the<sp/>jet<sp/>to<sp/>work<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pt<sp/><sp/><sp/>=<sp/>(fixedIsEta<sp/>?<sp/>binValue<sp/>:<sp/>fixedValue)*1.e3;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eta<sp/><sp/>=<sp/>(fixedIsEta<sp/>?<sp/>fixedValue<sp/>:<sp/>binValue);</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass<sp/>=<sp/>mOverPt*pt;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jet-&gt;setJetP4(<ref refid="dd/d44/namespacexAOD_1afd4eec03bc44b101a3c8b2b1429f3072" kindref="member" tooltip="Base 4 Momentum type for Jet.">xAOD::JetFourMom_t</ref>(pt,eta,0,mass));</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Combined<sp/>mass<sp/>helpers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scaleCalo(*jet)<sp/>=<sp/><ref refid="dd/d44/namespacexAOD_1afd4eec03bc44b101a3c8b2b1429f3072" kindref="member" tooltip="Base 4 Momentum type for Jet.">xAOD::JetFourMom_t</ref>(pt,eta,0,mass);</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scaleTA(*jet)<sp/><sp/><sp/>=<sp/><ref refid="dd/d44/namespacexAOD_1afd4eec03bc44b101a3c8b2b1429f3072" kindref="member" tooltip="Base 4 Momentum type for Jet.">xAOD::JetFourMom_t</ref>(pt,eta,0,mass);</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Kinematic<sp/>cut<sp/>when<sp/>comparing<sp/>large-R<sp/>pre-recs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isZero<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(optHelper.DoCompare()<sp/>&amp;&amp;<sp/>TString(provider-&gt;getRelease().c_str()).Contains(</highlight><highlight class="stringliteral">&quot;2015_Prerec_&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pt<sp/>&gt;<sp/>1.5e6)<sp/>isZero<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalHist-&gt;SetBinContent(iScan,!isZero<sp/>?<sp/>getQuadratureSumUncertainty(provider,allIndices,*jet,*eInfo,PTindex)<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>up<sp/>the<sp/>jet<sp/>and<sp/>EventInfo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//delete<sp/>eInfo;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//eInfos-&gt;clear();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>eInfos;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//delete<sp/>jet;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//jets-&gt;clear();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>jets;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>total<sp/>graph<sp/>to<sp/>finer<sp/>binning<sp/>if<sp/>this<sp/>is<sp/>an<sp/>eta<sp/>scan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fixedIsEta)</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iProv<sp/>=<sp/>0;<sp/>iProv<sp/>&lt;<sp/>providers.size();<sp/>++iProv)</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TH1D*<sp/>totalHist<sp/>=<sp/>totalHists.<ref refid="d0/d4d/classDataVector_1a3f598b345c9b1eb8793fd9cc6c16abe3" kindref="member" tooltip="Access an element, as an rvalue.">at</ref>(iProv);</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>rebinnedBins<sp/>=<sp/>jet::utils::getUniformBins(720,-4.5,4.5);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TH1D*<sp/>rebinnedTotal<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1D(Form(</highlight><highlight class="stringliteral">&quot;Rebinned_%s&quot;</highlight><highlight class="normal">,totalHist-&gt;GetName()),</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,rebinnedBins.size()-1,&amp;rebinnedBins[0]);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rebinnedTotal-&gt;SetFillColor(590);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rebinnedTotal-&gt;SetLineWidth(0);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iBin<sp/>=<sp/>1;<sp/>iBin<sp/>&lt;<sp/>rebinnedTotal-&gt;GetNbinsX()+1;<sp/>++iBin)</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rebinnedTotal-&gt;SetBinContent(iBin,totalHist-&gt;Interpolate(rebinnedTotal-&gt;GetBinCenter(iBin)));</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>totalHists[iProv];</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalHists[iProv]<sp/>=<sp/>rebinnedTotal;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>the<sp/>plot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/>canvas-&gt;cd();</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/>canvas-&gt;Clear();</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fixedIsEta<sp/>&amp;&amp;<sp/>optHelper.LogPt())<sp/>canvas-&gt;SetLogx(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>canvas-&gt;SetLogx(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/>frame-&gt;Draw(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(optHelper.IsLargeR())<sp/>frame-&gt;GetXaxis()-&gt;SetRangeUser(200,3.e3);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fixedIsEta)<sp/>frame-&gt;GetXaxis()-&gt;SetRangeUser(17,3.0e3);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame-&gt;GetXaxis()-&gt;SetRangeUser(-4.5,4.5);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(optHelper.IsLargeR())<sp/></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxYuser<sp/>=<sp/>optHelper.AxisMax();</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame-&gt;GetYaxis()-&gt;SetRangeUser(0,maxYuser);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxYuser<sp/>=<sp/>optHelper.AxisMax();</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame-&gt;GetYaxis()-&gt;SetRangeUser(optHelper.AxisMin(),maxYuser);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>want<sp/>a<sp/>comparison,<sp/>that<sp/>config<sp/>was<sp/>stored<sp/>as<sp/>last</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>item<sp/>in<sp/>the<sp/>providers.<sp/>Pop<sp/>it<sp/>off<sp/>and<sp/>store<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>TH1D*<sp/>comparisonHist<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/>TGraphErrors<sp/>*<sp/>comparisonGraph<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(doComparison)<sp/>{</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comparisonHist<sp/>=<sp/>totalHists.at(providers.size()-1);</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalHists.pop_back();</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comparisonGraph<sp/>=<sp/>totalGraphs.at(providers.size()-1);</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalGraphs.pop_back();</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Changed<sp/>to<sp/>have<sp/>consistent<sp/>style<sp/>between<sp/>plots<sp/>(Steven,<sp/>11/02/2016)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TH1D<sp/>*<sp/>backHist<sp/>=<sp/>0;<sp/>TH1D<sp/>*<sp/>frontHist<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TGraphErrors<sp/>*<sp/>backGraph<sp/>=<sp/>0;<sp/>TGraphErrors<sp/>*<sp/>frontGraph<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(doCompareOnly)<sp/>{</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index=0;<sp/>index<sp/>&lt;<sp/>providers.size();<sp/>index++)<sp/>{</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalGraphs.at(index)-&gt;SetLineColor(1000+index);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalGraphs.at(index)-&gt;SetLineStyle(1);</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalGraphs.at(index)-&gt;SetLineWidth(2);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalHists.at(index)-&gt;SetLineColor(1000+index);</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalHists.at(index)-&gt;SetLineStyle(1);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalHists.at(index)-&gt;SetLineWidth(2);</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalGraphs.at(index)-&gt;Draw(</highlight><highlight class="stringliteral">&quot;l<sp/>same&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>was<sp/>c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(providers.size()<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>optHelper.DrawTotal())</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalHists.at(0)-&gt;Draw(</highlight><highlight class="stringliteral">&quot;histF<sp/>same&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((providers.size()<sp/>==<sp/>2)<sp/>&amp;&amp;<sp/>doComparison)<sp/>{</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(comparisonHist-&gt;GetMaximum()<sp/>&gt;<sp/>totalHists.at(0)-&gt;GetMaximum())<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>backHist<sp/>=<sp/>comparisonHist;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>frontHist<sp/>=<sp/>totalHists.at(0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>backGraph<sp/>=<sp/>comparisonGraph;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>frontGraph<sp/>=<sp/>totalGraphs.at(0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}<sp/>else<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>backHist<sp/>=<sp/>totalHists.at(0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>frontHist<sp/>=<sp/>comparisonHist;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>backGraph<sp/>=<sp/>totalGraphs.at(0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>frontGraph<sp/>=<sp/>comparisonGraph;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Changed<sp/>to<sp/>have<sp/>consistent<sp/>style<sp/>between<sp/>plots<sp/>(Steven,<sp/>11/02/2016)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(optHelper.IsTLA())</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//comparisonHist-&gt;SetFillStyle(3345);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comparisonGraph-&gt;SetLineWidth(6);</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(optHelper.IsTLA())</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comparisonHist-&gt;SetLineColor(kGreen+3);</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comparisonHist-&gt;SetFillColor(kTeal+5);</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comparisonHist-&gt;SetLineColor(kTeal+5);<sp/></highlight><highlight class="comment">//backHist-&gt;SetLineColor(kTeal+5);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comparisonHist-&gt;SetFillColor(kTeal-9);<sp/></highlight><highlight class="comment">//backHist-&gt;SetFillColor(kTeal-9);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>comparisonHist-&gt;Draw(</highlight><highlight class="stringliteral">&quot;histF<sp/>same&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//backHist-&gt;Draw(&quot;histF<sp/>same&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalHists.at(0)-&gt;Draw(</highlight><highlight class="stringliteral">&quot;histF<sp/>same&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//frontHist-&gt;Draw(&quot;histF<sp/>same&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!doCompareOnly)<sp/>{</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iProv<sp/>=<sp/>0;<sp/>iProv<sp/>&lt;<sp/>providers.size();<sp/>++iProv)</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(doComparison)<sp/>{</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iProv<sp/>==<sp/>providers.size()-1)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Changed<sp/>to<sp/>have<sp/>consistent<sp/>style<sp/>between<sp/>plots<sp/>(Steven,<sp/>11/02/2016)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comparisonGraph-&gt;SetLineColor(comparisonHist-&gt;GetLineColor());<sp/></highlight><highlight class="comment">//backGraph-&gt;SetLineColor(kTeal+5);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comparisonGraph-&gt;Draw(</highlight><highlight class="stringliteral">&quot;l<sp/>same&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//backGraph-&gt;Draw(&quot;c<sp/>same&quot;);<sp/><sp/>//<sp/>was<sp/>c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalGraphs.at(0)-&gt;Draw(</highlight><highlight class="stringliteral">&quot;l<sp/>same&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//frontGraph-&gt;Draw(&quot;c<sp/>same&quot;);<sp/><sp/>//<sp/>was<sp/>c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(optHelper.DrawTotal())<sp/>totalGraphs.at(iProv)-&gt;Draw(</highlight><highlight class="stringliteral">&quot;l<sp/>same&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>was<sp/>c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iComp<sp/>=<sp/>0;<sp/>iComp<sp/>&lt;<sp/>compGraphs.at(iProv).size();<sp/>++iComp)</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compGraphs.at(iProv).at(iComp)-&gt;Draw(</highlight><highlight class="stringliteral">&quot;l<sp/>same&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>labels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(optHelper.DoATLASLabel())<sp/>DrawAtlasLabel();</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sign<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;providers.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString<sp/>thisconfname<sp/>=<sp/>providers.at(i)-&gt;getConfigFile().c_str();</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(thisconfname.Contains(</highlight><highlight class="stringliteral">&quot;_2012/&quot;</highlight><highlight class="normal">)))<sp/>sign<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(optHelper.IsLargeR())</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawJetLabel(providers.at(0),0.83);</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(providers.size()<sp/>==<sp/>1<sp/>||<sp/>(providers.size()==2<sp/>&amp;&amp;<sp/>doComparison)<sp/>||<sp/>sign)</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawYearLabel(providers.at(0),0.92);</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//DrawText(Form(&quot;|#eta|<sp/>=<sp/>%.1f,<sp/>M/#it{p}_{T}^{jet}<sp/>=<sp/>%.2f%s&quot;,fixedValue,mOverPt,optHelper.SpecifyTagger()?Form(&quot;,<sp/>%s<sp/>tagged&quot;,getTagType(providers.at(0)).Data()):&quot;&quot;),kBlack,0.75);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawText(Form(</highlight><highlight class="stringliteral">&quot;|#eta_{jet}|<sp/>&lt;<sp/>2,<sp/>m_{jet}/#it{p}_{T}^{jet}<sp/>=<sp/>%.2f%s&quot;</highlight><highlight class="normal">,mOverPt,optHelper.SpecifyTagger()?Form(</highlight><highlight class="stringliteral">&quot;,<sp/>%s<sp/>tagged&quot;</highlight><highlight class="normal">,getTagType(providers.at(0)).Data()):</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),kBlack,0.73);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawJetLabel(providers.at(0),0.905);</highlight></codeline>
<codeline lineno="1150"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(providers.size()<sp/>==<sp/>1<sp/>||<sp/>(providers.size()==2<sp/>&amp;&amp;<sp/>doComparison))</highlight></codeline>
<codeline lineno="1151"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawYearLabel(providers.at(0),0.860);</highlight></codeline>
<codeline lineno="1152"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawText(fixedIsEta?Form(&quot;#eta<sp/>=<sp/>%.1f&quot;,fixedValue):Form(&quot;#it{p}_{T}^{jet}<sp/>=<sp/>%.0f<sp/>GeV&quot;,fixedValue),kBlack,0.815);</highlight></codeline>
<codeline lineno="1153"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawScenarioLabel(providers.at(0),0.77);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawJetLabel(providers.at(0),0.855);</highlight><highlight class="comment">//0.905);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(providers.size()<sp/>==<sp/>1<sp/>||<sp/>(providers.size()==2<sp/>&amp;&amp;<sp/>doComparison)<sp/>||<sp/>sign)</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawYearLabel(providers.at(0),0.910);</highlight><highlight class="comment">//0.860);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawText(fixedIsEta?Form(</highlight><highlight class="stringliteral">&quot;#eta<sp/>=<sp/>%.1f&quot;</highlight><highlight class="normal">,fixedValue):Form(</highlight><highlight class="stringliteral">&quot;#it{p}_{T}^{jet}<sp/>=<sp/>%.0f<sp/>GeV&quot;</highlight><highlight class="normal">,fixedValue),kBlack,0.81);</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawScenarioLabel(providers.at(0),0.77);<sp/></highlight><highlight class="comment">//<sp/>0.77</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>legend</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>legx=0.41,<sp/>legy=!optHelper.IsLargeR()?0.78:0.68,<sp/>dy<sp/>=<sp/>0.045;<sp/></highlight><highlight class="comment">//dy=0.070;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(doCompareOnly)<sp/>{</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>totalGraphs.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString<sp/>title<sp/>=<sp/>labelNames.at(i).at(0);</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawLineLabel(title,legx,legy-=dy,totalHists.at(i));</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((providers.size()<sp/>==<sp/>1<sp/>||<sp/>(providers.size()<sp/>==<sp/>2<sp/>&amp;&amp;<sp/>doComparison))<sp/>&amp;&amp;<sp/>optHelper.DrawTotal())<sp/>{</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fixedIsEta)<sp/>DrawFillLabel(optHelper.TotalUncName(),legx,legy,totalHists.at(0));</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>DrawFillLabel(optHelper.TotalUncName(),legx,legy,totalHists.at(0),</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(doComparison)<sp/>{</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString<sp/>title<sp/>=<sp/>labelNames.at(providers.size()-1).at(0);</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(optHelper.IsTLA())</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawLineLabel(title,legx,legy-=dy,comparisonGraph);</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fixedIsEta)<sp/>DrawFillLabel(title,legx,legy-=dy,comparisonHist);</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>DrawFillLabel(title,legx,legy-=dy,comparisonHist,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iProv<sp/>=<sp/>0;<sp/>iProv<sp/>&lt;<sp/>providers.size();<sp/>++iProv)</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iComp<sp/>=<sp/>0;<sp/>iComp<sp/>&lt;<sp/>compGraphs.at(iProv).size();<sp/>++iComp)</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TGraphErrors*<sp/>compGraph<sp/>=<sp/>compGraphs.at(iProv).at(iComp);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString<sp/>label<sp/>=<sp/>compGraph-&gt;GetName();<sp/></highlight><highlight class="comment">//labelNames.at(iProv).at(iComp);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label.Contains(</highlight><highlight class="stringliteral">&quot;#splitline&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>legy<sp/>-=<sp/>0.35*dy;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawLineLabel(label,legx,legy-=dy,compGraph);</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>legy<sp/>-=<sp/>0.35*dy;</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(optHelper.IsLargeR()<sp/>&amp;&amp;<sp/>!optHelper.IsPublicFormat())</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawLineLabel(label,legx-0.10+0.3*(iComp%2),legy-=(dy*((iComp+1)%2)),compGraph);</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(optHelper.IsLargeR())</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawLineLabel(label,legx,legy-=(dy+0.005),compGraph);</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawLineLabel(label,legx,legy-=dy,compGraph);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>the<sp/>plot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/>frame-&gt;Draw(</highlight><highlight class="stringliteral">&quot;axis<sp/>same&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!outFile.EndsWith(</highlight><highlight class="stringliteral">&quot;.eps&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>!outFile.EndsWith(</highlight><highlight class="stringliteral">&quot;.png&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>canvas-&gt;Print(outFile);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>canvas-&gt;Print(TString(outFile).ReplaceAll(outFile.EndsWith(</highlight><highlight class="stringliteral">&quot;.eps&quot;</highlight><highlight class="normal">)?</highlight><highlight class="stringliteral">&quot;.eps&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;.png&quot;</highlight><highlight class="normal">,Form(</highlight><highlight class="stringliteral">&quot;/fig_%s_%s.%s&quot;</highlight><highlight class="normal">,fixedIsEta?</highlight><highlight class="stringliteral">&quot;eta&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;pt&quot;</highlight><highlight class="normal">,fixedIsEta?Form(</highlight><highlight class="stringliteral">&quot;%.1f&quot;</highlight><highlight class="normal">,fixedValue):Form(</highlight><highlight class="stringliteral">&quot;%.0f&quot;</highlight><highlight class="normal">,fixedValue),outFile.EndsWith(</highlight><highlight class="stringliteral">&quot;.eps&quot;</highlight><highlight class="normal">)?</highlight><highlight class="stringliteral">&quot;eps&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;png&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Free<sp/>graphs/hists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iProv<sp/>=<sp/>0;<sp/>iProv<sp/>&lt;<sp/>providers.size();<sp/>++iProv)</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(doComparison<sp/>&amp;&amp;<sp/>iProv<sp/>==<sp/>providers.size()-1)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>totalHists.at(iProv);</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>totalGraphs.at(iProv);</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iComp<sp/>=<sp/>0;<sp/>iComp<sp/>&lt;<sp/>compGraphs.at(iProv).size();<sp/>++iComp)</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>compGraphs.at(iProv).at(iComp);</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>comparisonHist;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>comparisonGraph;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MakeUncertaintyPlots(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>outFile,TCanvas*<sp/>canvas,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;JetUncertaintiesTool*&gt;&amp;<sp/>providers,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>std::vector&lt;TString&gt;<sp/>&gt;&amp;<sp/>compSetComponents,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>std::vector&lt;TString&gt;<sp/>&gt;&amp;<sp/>labelNames,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>doComparison,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>doCompareOnly)</highlight></codeline>
<codeline lineno="1229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Central<sp/>values<sp/>for<sp/>scans</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>ptValuesForEtaScan<sp/>=<sp/>optHelper.GetFixedPtVals();</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>etaValuesForPtScan<sp/>=<sp/>optHelper.GetFixedEtaVals();</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>mOverPtValuesForPtScan<sp/>=<sp/>optHelper.GetFixedMoverPtVals();</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scan<sp/>ranges:<sp/>all<sp/>recently<sp/>moved<sp/>to<sp/>10x<sp/>the<sp/>bins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>etaScanValues<sp/>=<sp/>optHelper.GetEtaBins();</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>ptScanValues<sp/><sp/>=<sp/>optHelper.GetPtBins();</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>frames</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/>TH1D*<sp/>frameEtaScan<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1D(</highlight><highlight class="stringliteral">&quot;frameEtaScan&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,etaScanValues.size()-1,&amp;etaScanValues[0]);</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/>TH1D*<sp/>framePtScan<sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1D(</highlight><highlight class="stringliteral">&quot;framePtScan&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,ptScanValues.size()-1,&amp;ptScanValues[0]);</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString<sp/>yAxisLabel<sp/>=<sp/>optHelper.IsJER()?</highlight><highlight class="stringliteral">&quot;Uncertainty<sp/>on<sp/>#sigma(#it{p}_{T})/#it{p}_{T}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Form(</highlight><highlight class="stringliteral">&quot;Fractional<sp/>J%sS<sp/>uncertainty&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optHelper.GetScaleVars().size()==1<sp/>&amp;&amp;<sp/>optHelper.GetScaleVars().at(0)==jet::CompScaleVar::FourVec<sp/><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>optHelper.GetScaleVars().size()==1<sp/>&amp;&amp;<sp/>optHelper.GetScaleVars().at(0)==jet::CompScaleVar::Pt<sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Pt&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>optHelper.GetScaleVars().size()==1<sp/>&amp;&amp;<sp/>optHelper.GetScaleVars().at(0)==jet::CompScaleVar::Mass<sp/><sp/><sp/><sp/><sp/>?<sp/>Form(</highlight><highlight class="stringliteral">&quot;M_{%s}&quot;</highlight><highlight class="normal">,optHelper.getMassType().Data())</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>optHelper.GetScaleVars().size()==1<sp/>&amp;&amp;<sp/>optHelper.GetScaleVars().at(0)==jet::CompScaleVar::D12<sp/><sp/><sp/><sp/><sp/><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;D_{12}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>optHelper.GetScaleVars().size()==1<sp/>&amp;&amp;<sp/>optHelper.GetScaleVars().at(0)==jet::CompScaleVar::D23<sp/><sp/><sp/><sp/><sp/><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;D_{23}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>optHelper.GetScaleVars().size()==1<sp/>&amp;&amp;<sp/>optHelper.GetScaleVars().at(0)==jet::CompScaleVar::Tau21WTA<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;#tau_{21}^{wta}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>optHelper.GetScaleVars().size()==1<sp/>&amp;&amp;<sp/>optHelper.GetScaleVars().at(0)==jet::CompScaleVar::Tau32WTA<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;#tau_{32}^{wta}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>optHelper.GetScaleVars().size()==1<sp/>&amp;&amp;<sp/>optHelper.GetScaleVars().at(0)==jet::CompScaleVar::D2Beta1<sp/><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;D_{2}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>optHelper.GetScaleVars().size()==1<sp/>&amp;&amp;<sp/>optHelper.GetScaleVars().at(0)==jet::CompScaleVar::Qw<sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Qw&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;?&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/>frameEtaScan-&gt;GetXaxis()-&gt;SetTitleOffset(1.4);</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/>frameEtaScan-&gt;GetYaxis()-&gt;SetTitleOffset(!optHelper.IsJER()?1.25:1.1);</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/>frameEtaScan-&gt;GetXaxis()-&gt;SetTitle(</highlight><highlight class="stringliteral">&quot;#eta&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/>frameEtaScan-&gt;GetYaxis()-&gt;SetTitle(yAxisLabel.Data());</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/>framePtScan-&gt;GetXaxis()-&gt;SetTitleOffset(1.4);</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/>framePtScan-&gt;GetYaxis()-&gt;SetTitleOffset(!optHelper.IsJER()?1.25:1.1);</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/>framePtScan-&gt;GetXaxis()-&gt;SetTitle(</highlight><highlight class="stringliteral">&quot;#it{p}_{T}^{jet}<sp/>[GeV]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/>framePtScan-&gt;GetYaxis()-&gt;SetTitle(yAxisLabel.Data());</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/>framePtScan-&gt;GetXaxis()-&gt;SetMoreLogLabels();</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>frame<sp/>histograms<sp/>with<sp/>-1<sp/>so<sp/>line<sp/>is<sp/>drawn<sp/>outside<sp/>of<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iBin<sp/>=<sp/>1;<sp/>iBin<sp/>&lt;=<sp/>frameEtaScan-&gt;GetNbinsX();<sp/>++iBin)</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameEtaScan-&gt;SetBinContent(iBin,-1);</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iBin<sp/>=<sp/>1;<sp/>iBin<sp/>&lt;=<sp/>framePtScan-&gt;GetNbinsX();<sp/>++iBin)</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framePtScan-&gt;SetBinContent(iBin,-1);</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>components<sp/>to<sp/>indices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::vector&lt;<sp/>std::vector&lt;size_t&gt;<sp/>&gt;<sp/>&gt;<sp/>compSetIndices;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iProv<sp/>=<sp/>0;<sp/>iProv<sp/>&lt;<sp/>providers.size();<sp/>++iProv)</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compSetIndices.push_back(getComponentIndicesFromNames(providers.at(iProv),compSetComponents.at(iProv)));</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>plot<sp/>per<sp/>fixed<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!optHelper.IsLargeR())</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iFixed<sp/>=<sp/>0;<sp/>iFixed<sp/>&lt;<sp/>etaValuesForPtScan.size();<sp/>++iFixed)</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MakeUncertaintyPlots(outFile,canvas,providers,compSetIndices,labelNames,framePtScan,etaValuesForPtScan.at(iFixed),ptScanValues,</highlight><highlight class="keyword">true</highlight><highlight class="normal">,mOverPtValuesForPtScan.at(0),doComparison,<sp/>doCompareOnly);</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iFixed<sp/>=<sp/>0;<sp/>iFixed<sp/>&lt;<sp/>ptValuesForEtaScan.size();<sp/>++iFixed)</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MakeUncertaintyPlots(outFile,canvas,providers,compSetIndices,labelNames,frameEtaScan,ptValuesForEtaScan.at(iFixed),etaScanValues,</highlight><highlight class="keyword">false</highlight><highlight class="normal">,mOverPtValuesForPtScan.at(0),doComparison,<sp/>doCompareOnly);</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iFixed<sp/>=<sp/>0;<sp/>iFixed<sp/>&lt;<sp/>mOverPtValuesForPtScan.size();<sp/>++iFixed)</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MakeUncertaintyPlots(outFile,canvas,providers,compSetIndices,labelNames,framePtScan,etaValuesForPtScan.at(0),ptScanValues,</highlight><highlight class="keyword">true</highlight><highlight class="normal">,mOverPtValuesForPtScan.at(iFixed),doComparison,<sp/>doCompareOnly);</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>framePtScan;</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>frameEtaScan;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>argv[])</highlight></codeline>
<codeline lineno="1298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>!=<sp/>7<sp/>&amp;&amp;<sp/>argc<sp/>!=<sp/>8)</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Expected<sp/>arguments:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\t1.<sp/>Output<sp/>file<sp/>(ps,<sp/>pdf,<sp/>eps)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\t2.<sp/>Jet<sp/>definition(s),<sp/>semicolon<sp/>delimited\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\t3.<sp/>MC<sp/>type(s),<sp/>semicolon<sp/>delimited<sp/>(one<sp/>for<sp/>all<sp/>configs,<sp/>or<sp/>one<sp/>per<sp/>config)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\t4.<sp/>Config<sp/>file(s),<sp/>semicolon<sp/>delimited\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\t5.<sp/>Component<sp/>list,<sp/>special<sp/>formatting<sp/>(one<sp/>for<sp/>all<sp/>configs,<sp/>or<sp/>one<sp/>per<sp/>config):\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\t\tComma-delimited<sp/>means<sp/>combine<sp/>components\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\t\tSemicolon-delimited<sp/>means<sp/>new<sp/>component\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\t\tAmpersand-delimited<sp/>means<sp/>new<sp/>config\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\t\tTOTAL<sp/>to<sp/>get<sp/>the<sp/>total<sp/>uncertainty<sp/>as<sp/>one<sp/>term\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\t\t#<sp/>is<sp/>wildcard,<sp/>so<sp/>InSitu#<sp/>is<sp/>everything<sp/>starting<sp/>with<sp/>InSitu\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\t6.<sp/>Component<sp/>labels,<sp/>special<sp/>formatting<sp/>(one<sp/>for<sp/>all<sp/>configs,<sp/>or<sp/>one<sp/>per<sp/>config)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\t\tSemicolon-delimited<sp/>for<sp/>each<sp/>component<sp/>label\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\t\tAmpersand-delimited<sp/>for<sp/>each<sp/>config\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\t7.<sp/>Options<sp/>(optional<sp/>argument),<sp/>semi-colon<sp/>delimited,<sp/>examples:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\t\tisDijet=false\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\t\tisLargeR=false\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/>TString<sp/>outFile<sp/>=<sp/>argv[1];</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;TString&gt;<sp/>jetDefs<sp/><sp/><sp/>=<sp/>jet::utils::vectorize&lt;TString&gt;(argv[2],</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;TString&gt;<sp/>mcTypes<sp/><sp/><sp/>=<sp/>jet::utils::vectorize&lt;TString&gt;(argv[3],</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;TString&gt;<sp/>configs<sp/><sp/><sp/>=<sp/>jet::utils::vectorize&lt;TString&gt;(argv[4],</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;TString&gt;<sp/>compSets<sp/><sp/>=<sp/>jet::utils::vectorize&lt;TString&gt;(argv[5],</highlight><highlight class="stringliteral">&quot;@&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;TString&gt;<sp/>labelSets<sp/>=<sp/>jet::utils::vectorize&lt;TString&gt;(argv[6],</highlight><highlight class="stringliteral">&quot;@&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>==<sp/>8)<sp/>optHelper.Initialize(jet::utils::vectorize&lt;TString&gt;(argv[7],</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optHelper.Initialize(std::vector&lt;TString&gt;());</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/>StatusCode::enableFailure();</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>doComparison<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/>TString<sp/>compareMCType<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/>TString<sp/>totalLabel<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/>TString<sp/>otherJetDef<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/>TString<sp/>doCompConfig<sp/>=<sp/>optHelper.DoCompare();</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(doCompConfig<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>doComparison<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;TString&gt;<sp/>comparisons<sp/>=<sp/>jet::utils::vectorize&lt;TString&gt;(doCompConfig,</highlight><highlight class="stringliteral">&quot;&amp;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comparisons.size()<sp/>&lt;<sp/>3)</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>parse<sp/>comparison<sp/>request:<sp/>%s\n&quot;</highlight><highlight class="normal">,doCompConfig.Data());</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>doCompConfig<sp/>=<sp/>comparisons.at(0);</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>compareMCType<sp/>=<sp/>comparisons.at(1);</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalLabel<sp/>=<sp/>comparisons.at(2).Strip(TString::kBoth,</highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>configs.push_back(doCompConfig);</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mcTypes.push_back(compareMCType);</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>compSets.push_back(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>labelSets.push_back(totalLabel);</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comparisons.size()&gt;3)<sp/>jetDefs.push_back(comparisons.at(3));</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>doCompareOnly<sp/>=<sp/>optHelper.CompareOnly();</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(doCompareOnly)<sp/>{</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>are<sp/>doing<sp/>only<sp/>the<sp/>comparison<sp/>we<sp/>don&apos;t<sp/>want<sp/>anything<sp/>with<sp/>individual<sp/>components</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>three<sp/>big<sp/>lines.<sp/>So<sp/>clear<sp/>anything<sp/>that<sp/>is<sp/>here<sp/>now.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configs.clear();</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mcTypes.clear();</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compSets.clear();</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labelSets.clear();</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;TString&gt;<sp/>compareconfigs<sp/>=<sp/>optHelper.GetCompareVals();</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>item<sp/>=<sp/>0;<sp/>item<sp/>&lt;<sp/>compareconfigs.size();<sp/>item++)<sp/>{</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;TString&gt;<sp/>comparisons<sp/>=<sp/>jet::utils::vectorize&lt;TString&gt;(compareconfigs.at(item),</highlight><highlight class="stringliteral">&quot;&amp;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doCompConfig<sp/>=<sp/>comparisons.at(0);</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compareMCType<sp/>=<sp/>comparisons.at(1);</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalLabel<sp/>=<sp/>comparisons.at(2).Strip(TString::kBoth,</highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configs.push_back(doCompConfig);</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mcTypes.push_back(compareMCType);</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compSets.push_back(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labelSets.push_back(totalLabel);</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comparisons.size()&gt;3)<sp/>jetDefs.push_back(comparisons.at(3));</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>One<sp/>MC<sp/>type<sp/>for<sp/>all<sp/>configs<sp/>or<sp/>one<sp/>MC<sp/>type<sp/>per<sp/>config</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mcTypes.size()<sp/>!=<sp/>1<sp/>&amp;&amp;<sp/>mcTypes.size()<sp/>!=<sp/>configs.size())</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Expected<sp/>either<sp/>1<sp/>MC<sp/>type<sp/>for<sp/>all<sp/>configs,<sp/>or<sp/>1<sp/>MC<sp/>type<sp/>per<sp/>config\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Instead,<sp/>got<sp/>%zu<sp/>MC<sp/>types<sp/>and<sp/>%zu<sp/>configs\n&quot;</highlight><highlight class="normal">,mcTypes.size(),configs.size());</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(2);</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>One<sp/>MC<sp/>type<sp/>for<sp/>all<sp/>configs,<sp/>then<sp/>duplicate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mcTypes.size()<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>configs.size()<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iConfig<sp/>=<sp/>1;<sp/>iConfig<sp/>&lt;<sp/>configs.size();<sp/>++iConfig)</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mcTypes.push_back(mcTypes.at(0));</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Equal<sp/>numbers<sp/>of<sp/>component<sp/>lists<sp/>and<sp/>labels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compSets.size()<sp/>!=<sp/>labelSets.size())</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Expected<sp/>matching<sp/>numbers<sp/>of<sp/>component<sp/>lists<sp/>and<sp/>labels\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Instead,<sp/>got<sp/>%zu<sp/>component<sp/>lists<sp/>and<sp/>%zu<sp/>labels\n&quot;</highlight><highlight class="normal">,compSets.size(),labelSets.size());</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(4);</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>One<sp/>component<sp/>list<sp/>for<sp/>all<sp/>configs<sp/>or<sp/>one<sp/>component<sp/>list<sp/>per<sp/>config</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compSets.size()<sp/>!=<sp/>1<sp/>&amp;&amp;<sp/>compSets.size()<sp/>!=<sp/>configs.size())</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Expected<sp/>either<sp/>1<sp/>component<sp/>list<sp/>for<sp/>all<sp/>configs,<sp/>or<sp/>1<sp/>component<sp/>list<sp/>per<sp/>config\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Instead,<sp/>got<sp/>%zu<sp/>component<sp/>lists<sp/>and<sp/>%zu<sp/>configs\n&quot;</highlight><highlight class="normal">,compSets.size(),configs.size());</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(3);</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>One<sp/>component<sp/>list<sp/>for<sp/>all<sp/>configs,<sp/>then<sp/>duplicate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compSets.size()<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>configs.size()<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iConfig<sp/>=<sp/>1;<sp/>iConfig<sp/>&lt;<sp/>configs.size();<sp/>++iConfig)</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compSets.push_back(compSets.at(0));</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labelSets.push_back(labelSets.at(0));</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Split<sp/>the<sp/>component<sp/>sets<sp/>and<sp/>labels<sp/>further</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::vector&lt;TString&gt;<sp/>&gt;<sp/>compSetComponents;</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::vector&lt;TString&gt;<sp/>&gt;<sp/>labelNames;</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iSet<sp/>=<sp/>0;<sp/>iSet<sp/>&lt;<sp/>compSets.size();<sp/>++iSet)</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compSetComponents.push_back(jet::utils::vectorize&lt;TString&gt;(compSets.at(iSet),</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labelNames.push_back(jet::utils::vectorize&lt;TString&gt;(labelSets.at(iSet),</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>canvas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/>SetAtlasStyle();</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/>gStyle-&gt;SetPalette(1);</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/>TCanvas*<sp/>canvas<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TCanvas(</highlight><highlight class="stringliteral">&quot;canvas&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/>canvas-&gt;SetMargin(0.12,0.04,0.15,0.04);</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/>canvas-&gt;SetFillStyle(4000);</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/>canvas-&gt;SetFillColor(0);</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/>canvas-&gt;SetFrameBorderMode(0);</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/>canvas-&gt;cd();</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>is<sp/>not<sp/>an<sp/>eps,<sp/>start<sp/>the<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!outFile.EndsWith(</highlight><highlight class="stringliteral">&quot;.eps&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>!outFile.EndsWith(</highlight><highlight class="stringliteral">&quot;.png&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>canvas-&gt;Print(outFile+</highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise,<sp/>make<sp/>a<sp/>folder<sp/>for<sp/>the<sp/>eps<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>system(Form(</highlight><highlight class="stringliteral">&quot;mkdir<sp/>-p<sp/>%s&quot;</highlight><highlight class="normal">,TString(outFile).ReplaceAll(outFile.EndsWith(</highlight><highlight class="stringliteral">&quot;.eps&quot;</highlight><highlight class="normal">)?</highlight><highlight class="stringliteral">&quot;.eps&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;.png&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">).Data()));</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Run<sp/>once<sp/>per<sp/>jet<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(jetDefs.size()<sp/>==<sp/>configs.size()<sp/>&amp;&amp;<sp/>jetDefs.size()<sp/>!=<sp/>1)<sp/>||<sp/>(doComparison<sp/>&amp;&amp;<sp/>jetDefs.size()<sp/>!=<sp/>1))</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Going<sp/>to<sp/>process<sp/>for<sp/>multiple<sp/>jet<sp/>types!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iJetDef<sp/>=<sp/>0;<sp/>iJetDef<sp/>&lt;<sp/>jetDefs.size();<sp/>++iJetDef)</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString<sp/>jetDef<sp/>=<sp/>jetDefs.at(iJetDef);</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Running<sp/>for<sp/>jet<sp/>type<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>jetDef<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>providers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;JetUncertaintiesTool*&gt;<sp/>providers;</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iConfig<sp/>=<sp/>0;<sp/>iConfig<sp/>&lt;<sp/>configs.size();<sp/>++iConfig)</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>a<sp/>new<sp/>provider</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>providers.push_back(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dd/d22/classJetUncertaintiesTool" kindref="compound">JetUncertaintiesTool</ref>(Form(</highlight><highlight class="stringliteral">&quot;%s_%zu&quot;</highlight><highlight class="normal">,jetDef.Data(),iConfig)));</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(providers.back()-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;JetDefinition&quot;</highlight><highlight class="normal">,jetDef.Data()).isFailure())</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>JetDefinition<sp/>to<sp/>%s\n&quot;</highlight><highlight class="normal">,jetDef.Data());</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(4);</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(providers.back()-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;MCType&quot;</highlight><highlight class="normal">,mcTypes.at(iConfig).Data()).isFailure())</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>MCType<sp/>to<sp/>%s\n&quot;</highlight><highlight class="normal">,mcTypes.at(iConfig).Data());</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(5);</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(providers.back()-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;ConfigFile&quot;</highlight><highlight class="normal">,configs.at(iConfig).Data()).isFailure())</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>ConfigFile<sp/>to<sp/>%s\n&quot;</highlight><highlight class="normal">,configs.at(iConfig).Data());</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(6);</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>we<sp/>want<sp/>to<sp/>change<sp/>topology<sp/>from<sp/>unknown<sp/>to<sp/>dijet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(optHelper.IsDijetComposition())</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString<sp/>dijetAnalysisFile<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;../testingMacros/random_stuff/MJESForInclusiveJets_MC11b.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(providers.back()-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;AnalysisFile&quot;</highlight><highlight class="normal">,dijetAnalysisFile.Data()).isFailure())</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>AnalysisFile<sp/>to<sp/>%s\n&quot;</highlight><highlight class="normal">,dijetAnalysisFile.Data());</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(7);</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>filters<sp/>if<sp/>specified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(optHelper.VariablesToShift().size())</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(providers.back()-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;VariablesToShift&quot;</highlight><highlight class="normal">,optHelper.VariablesToShift()).isFailure())</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>VariablesToShift\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(8);</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"></highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Done<sp/>setting<sp/>properties,<sp/>initialize<sp/>the<sp/>tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(providers.back()-&gt;initialize().isFailure())</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>tool<sp/>for<sp/>config:<sp/>%s\n&quot;</highlight><highlight class="normal">,configs.at(iConfig).Data());</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(9);</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>the<sp/>plots</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MakeUncertaintyPlots(outFile,canvas,providers,compSetComponents,labelNames,doComparison,doCompareOnly);</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iProv<sp/>=<sp/>0;<sp/>iProv<sp/>&lt;<sp/>providers.size();<sp/>++iProv)</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>providers.at(iProv);</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>providers.clear();</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>providers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;JetUncertaintiesTool*&gt;<sp/>providers;</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"></highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Special<sp/>case<sp/>of<sp/>different<sp/>jet<sp/>collections<sp/>being<sp/>compared</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iJetDef<sp/>=<sp/>0;<sp/>iJetDef<sp/>&lt;<sp/>jetDefs.size();<sp/>++iJetDef)</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString<sp/>jetDef<sp/>=<sp/>jetDefs.at(iJetDef);</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString<sp/>config<sp/>=<sp/>configs.at(iJetDef);</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Make<sp/>a<sp/>new<sp/>provier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>providers.push_back(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dd/d22/classJetUncertaintiesTool" kindref="compound">JetUncertaintiesTool</ref>(Form(</highlight><highlight class="stringliteral">&quot;%s_%zu&quot;</highlight><highlight class="normal">,jetDef.Data(),iJetDef)));</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(providers.back()-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;JetDefinition&quot;</highlight><highlight class="normal">,jetDef.Data()).isFailure())</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>JetDefinition<sp/>to<sp/>%s\n&quot;</highlight><highlight class="normal">,jetDef.Data());</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(4);</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(providers.back()-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;MCType&quot;</highlight><highlight class="normal">,mcTypes.at(iJetDef).Data()).isFailure())</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>MCType<sp/>to<sp/>%s\n&quot;</highlight><highlight class="normal">,mcTypes.at(iJetDef).Data());</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(5);</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(providers.back()-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;ConfigFile&quot;</highlight><highlight class="normal">,configs.at(iJetDef).Data()).isFailure())</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>ConfigFile<sp/>to<sp/>%s\n&quot;</highlight><highlight class="normal">,configs.at(iJetDef).Data());</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(6);</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>we<sp/>want<sp/>to<sp/>change<sp/>topology<sp/>from<sp/>unknown<sp/>to<sp/>dijet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(optHelper.IsDijetComposition())</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString<sp/>dijetAnalysisFile<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;../testingMacros/random_stuff/MJESForInclusiveJets_MC11b.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(providers.back()-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;AnalysisFile&quot;</highlight><highlight class="normal">,dijetAnalysisFile.Data()).isFailure())</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>AnalysisFile<sp/>to<sp/>%s\n&quot;</highlight><highlight class="normal">,dijetAnalysisFile.Data());</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(7);</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>we<sp/>want<sp/>to<sp/>change<sp/>topology<sp/>to<sp/>Gino&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(optHelper.IsGinosComposition())</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString<sp/>dijetAnalysisFile<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;../testingMacros/random_stuff/GinoComposition.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(providers.back()-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;AnalysisFile&quot;</highlight><highlight class="normal">,dijetAnalysisFile.Data()).isFailure())</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>AnalysisFile<sp/>to<sp/>%s\n&quot;</highlight><highlight class="normal">,dijetAnalysisFile.Data());</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(7);</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"></highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>filters<sp/>if<sp/>specified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(optHelper.VariablesToShift().size())</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(providers.back()-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;VariablesToShift&quot;</highlight><highlight class="normal">,optHelper.VariablesToShift()).isFailure())</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>VariablesToShift\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(8);</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Done<sp/>setting<sp/>properties,<sp/>initialize<sp/>the<sp/>tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(providers.back()-&gt;initialize().isFailure())</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>tool<sp/>for<sp/>config:<sp/>%s\n&quot;</highlight><highlight class="normal">,configs.at(iJetDef).Data());</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(9);</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>the<sp/>plots</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MakeUncertaintyPlots(outFile,canvas,providers,compSetComponents,labelNames,doComparison,doCompareOnly);</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"></highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iProv<sp/>=<sp/>0;<sp/>iProv<sp/>&lt;<sp/>providers.size();<sp/>++iProv)</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>providers.at(iProv);</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>providers.clear();</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>is<sp/>not<sp/>an<sp/>eps,<sp/>end<sp/>the<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!outFile.EndsWith(</highlight><highlight class="stringliteral">&quot;.eps&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>!outFile.EndsWith(</highlight><highlight class="stringliteral">&quot;.png&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>canvas-&gt;Print(outFile+</highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1598"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/JetUncertainties/util/MakeUncertaintyPlots.cxx"/>
  </compounddef>
</doxygen>
