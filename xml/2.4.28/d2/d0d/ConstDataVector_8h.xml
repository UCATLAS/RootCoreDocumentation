<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d2/d0d/ConstDataVector_8h" kind="file">
    <compoundname>ConstDataVector.h</compoundname>
    <includes refid="d7/dd6/DataVector_8h" local="yes">AthContainers/DataVector.h</includes>
    <includes local="yes">SGTools/ClassID_traits.h</includes>
    <includes refid="d2/d61/ConstDataVector_8icc" local="yes">AthContainers/ConstDataVector.icc</includes>
    <includedby refid="dd/d47/AltMuJetOverlapTool_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AssociationUtils/Root/AltMuJetOverlapTool.cxx</includedby>
    <includedby refid="da/d63/EleEleOverlapTool_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AssociationUtils/Root/EleEleOverlapTool.cxx</includedby>
    <includedby refid="dd/dda/EleJetOverlapTool_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AssociationUtils/Root/EleJetOverlapTool.cxx</includedby>
    <includedby refid="d0/d63/EleMuSharedTrkOverlapTool_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AssociationUtils/Root/EleMuSharedTrkOverlapTool.cxx</includedby>
    <includedby refid="d3/d2b/MuJetOverlapTool_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AssociationUtils/Root/MuJetOverlapTool.cxx</includedby>
    <includedby refid="d0/d24/TauAntiTauJetOverlapTool_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AssociationUtils/Root/TauAntiTauJetOverlapTool.cxx</includedby>
    <includedby refid="d5/d9d/TauJetOverlapTool_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AssociationUtils/Root/TauJetOverlapTool.cxx</includedby>
    <includedby refid="d4/da2/TauLooseEleOverlapTool_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AssociationUtils/Root/TauLooseEleOverlapTool.cxx</includedby>
    <includedby refid="dd/d3d/TauLooseMuOverlapTool_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AssociationUtils/Root/TauLooseMuOverlapTool.cxx</includedby>
    <includedby refid="d8/d9e/copyThinned_8h" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/copyThinned.h</includedby>
    <includedby refid="d1/d1a/DataVector__test_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/DataVector_test.cxx</includedby>
    <includedby refid="d2/db8/DataVector__test_8icc" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/DataVector_test.icc</includedby>
    <includedby refid="d4/de3/DVLDataBucket__test_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/DVLDataBucket_test.cxx</includedby>
    <includedby refid="db/d56/ut__ConstDataVector__basic__test_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/ut_ConstDataVector_basic_test.cxx</includedby>
    <includedby refid="d9/d06/TestTrigSF_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MuonEfficiencyCorrections/src/TestTrigSF.cxx</includedby>
    <includedby refid="d6/de2/CopyBosonTopLabelTruthParticles_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/ParticleJetTools/Root/CopyBosonTopLabelTruthParticles.cxx</includedby>
    <includedby refid="d5/d56/CopyFlavorLabelTruthParticles_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/ParticleJetTools/Root/CopyFlavorLabelTruthParticles.cxx</includedby>
    <includedby refid="d4/dc9/CopyTruthJetParticles_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/ParticleJetTools/Root/CopyTruthJetParticles.cxx</includedby>
    <includedby refid="d7/d74/CopyTruthParticles_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/ParticleJetTools/Root/CopyTruthParticles.cxx</includedby>
    <includedby refid="d0/d1f/PhotonVertexSelectionAlg_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PhotonVertexSelection/src/PhotonVertexSelectionAlg.cxx</includedby>
    <includedby refid="df/db8/JetTool_8cxx" local="no">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/QuickAna/Root/JetTool.cxx</includedby>
    <includedby refid="d2/de2/Jets_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SUSYTools/Root/Jets.cxx</includedby>
    <includedby refid="df/d90/Muons_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SUSYTools/Root/Muons.cxx</includedby>
    <includedby refid="df/d2f/SUSYObjDef__xAOD_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SUSYTools/Root/SUSYObjDef_xAOD.cxx</includedby>
    <includedby refid="d5/da8/PhotonConversionPID_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/tauRecTools/src/PhotonConversionPID.cxx</includedby>
    <includedby refid="d0/d8e/PhotonConversionVertex_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/tauRecTools/src/PhotonConversionVertex.cxx</includedby>
    <includedby refid="d9/d25/MissingETCompositionBase_8h" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/versions/MissingETCompositionBase.h</includedby>
    <includedby refid="d8/d98/CompositeParticle__v1_8h" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODParticleEvent/xAODParticleEvent/versions/CompositeParticle_v1.h</includedby>
    <includedby refid="df/dff/ut__xaodrootaccess__tevent__test_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/test/ut_xaodrootaccess_tevent_test.cxx</includedby>
    <includedby refid="dc/d1a/ut__xaodrootaccess__tstore__test_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/test/ut_xaodrootaccess_tstore_test.cxx</includedby>
    <includedby refid="dc/d67/TCDVHolderT_8h" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/tools/TCDVHolderT.h</includedby>
    <includedby refid="d7/d1f/TStore_8h" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/TStore.h</includedby>
    <incdepgraph>
      <node id="32351">
        <label>list</label>
      </node>
      <node id="32360">
        <label>AthContainers/tools/DVL_algorithms.icc</label>
        <link refid="df/daa/DVL__algorithms_8icc"/>
        <childnode refid="32345" relation="include">
        </childnode>
        <childnode refid="32352" relation="include">
        </childnode>
        <childnode refid="32336" relation="include">
        </childnode>
        <childnode refid="32341" relation="include">
        </childnode>
        <childnode refid="32277" relation="include">
        </childnode>
      </node>
      <node id="32345">
        <label>AthContainers/tools/DVLNoBase.h</label>
        <link refid="d7/d92/DVLNoBase_8h"/>
      </node>
      <node id="32315">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="32367">
        <label>AthContainers/tools/DVLDataBucket.h</label>
        <link refid="d4/d16/DVLDataBucket_8h"/>
        <childnode refid="32368" relation="include">
        </childnode>
        <childnode refid="32346" relation="include">
        </childnode>
        <childnode refid="32285" relation="include">
        </childnode>
        <childnode refid="32369" relation="include">
        </childnode>
      </node>
      <node id="32332">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="32276" relation="include">
        </childnode>
        <childnode refid="32278" relation="include">
        </childnode>
        <childnode refid="32285" relation="include">
        </childnode>
        <childnode refid="32286" relation="include">
        </childnode>
      </node>
      <node id="32334">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="32294" relation="include">
        </childnode>
        <childnode refid="32274" relation="include">
        </childnode>
        <childnode refid="32335" relation="include">
        </childnode>
        <childnode refid="32295" relation="include">
        </childnode>
      </node>
      <node id="32333">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="32284">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="32286">
        <label>functional</label>
      </node>
      <node id="32342">
        <label>boost/version.hpp</label>
      </node>
      <node id="32282">
        <label>limits</label>
      </node>
      <node id="32335">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="32313">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="32279">
        <label>iterator</label>
      </node>
      <node id="32296">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="32283" relation="include">
        </childnode>
        <childnode refid="32297" relation="include">
        </childnode>
      </node>
      <node id="32375">
        <label>SGTools/ClassID_traits.h</label>
      </node>
      <node id="32366">
        <label>SGTools/ClassName.h</label>
      </node>
      <node id="32372">
        <label>AthContainers/DataVector.icc</label>
        <link refid="da/de6/DataVector_8icc"/>
        <childnode refid="32373" relation="include">
        </childnode>
        <childnode refid="32340" relation="include">
        </childnode>
        <childnode refid="32282" relation="include">
        </childnode>
        <childnode refid="32286" relation="include">
        </childnode>
        <childnode refid="32374" relation="include">
        </childnode>
      </node>
      <node id="32272">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="32273" relation="include">
        </childnode>
        <childnode refid="32287" relation="include">
        </childnode>
        <childnode refid="32288" relation="include">
        </childnode>
        <childnode refid="32289" relation="include">
        </childnode>
        <childnode refid="32283" relation="include">
        </childnode>
      </node>
      <node id="32298">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="32299" relation="include">
        </childnode>
        <childnode refid="32280" relation="include">
        </childnode>
      </node>
      <node id="32376">
        <label>AthContainers/ConstDataVector.icc</label>
        <link refid="d2/d61/ConstDataVector_8icc"/>
        <childnode refid="32377" relation="include">
        </childnode>
        <childnode refid="32286" relation="include">
        </childnode>
      </node>
      <node id="32301">
        <label>stdint.h</label>
      </node>
      <node id="32352">
        <label>AthContainers/tools/DVLCast.h</label>
        <link refid="df/d5c/DVLCast_8h"/>
        <childnode refid="32282" relation="include">
        </childnode>
        <childnode refid="32353" relation="include">
        </childnode>
        <childnode refid="32289" relation="include">
        </childnode>
        <childnode refid="32280" relation="include">
        </childnode>
        <childnode refid="32274" relation="include">
        </childnode>
      </node>
      <node id="32320">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="32274" relation="include">
        </childnode>
        <childnode refid="32289" relation="include">
        </childnode>
      </node>
      <node id="32291">
        <label>AthContainers/IndexTrackingPolicy.h</label>
        <link refid="d0/da5/IndexTrackingPolicy_8h"/>
      </node>
      <node id="32304">
        <label>RVersion.h</label>
      </node>
      <node id="32275">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="32276" relation="include">
        </childnode>
        <childnode refid="32285" relation="include">
        </childnode>
        <childnode refid="32286" relation="include">
        </childnode>
      </node>
      <node id="32281">
        <label>cmath</label>
      </node>
      <node id="32339">
        <label>cassert</label>
      </node>
      <node id="32343">
        <label>boost/mpl/if.hpp</label>
      </node>
      <node id="32362">
        <label>boost/static_assert.hpp</label>
      </node>
      <node id="32377">
        <label>boost/iterator/transform_iterator.hpp</label>
      </node>
      <node id="32288">
        <label>stdexcept</label>
      </node>
      <node id="32316">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="32349">
        <label>boost/type_traits/is_pointer.hpp</label>
      </node>
      <node id="32357">
        <label>boost/iterator/iterator_adaptor.hpp</label>
      </node>
      <node id="32283">
        <label>string</label>
      </node>
      <node id="32293">
        <label>AthContainers/AuxVectorData.h</label>
        <link refid="d9/df2/AuxVectorData_8h"/>
        <childnode refid="32273" relation="include">
        </childnode>
        <childnode refid="32294" relation="include">
        </childnode>
        <childnode refid="32296" relation="include">
        </childnode>
        <childnode refid="32298" relation="include">
        </childnode>
        <childnode refid="32300" relation="include">
        </childnode>
        <childnode refid="32306" relation="include">
        </childnode>
        <childnode refid="32307" relation="include">
        </childnode>
        <childnode refid="32308" relation="include">
        </childnode>
        <childnode refid="32299" relation="include">
        </childnode>
        <childnode refid="32278" relation="include">
        </childnode>
        <childnode refid="32280" relation="include">
        </childnode>
        <childnode refid="32309" relation="include">
        </childnode>
        <childnode refid="32310" relation="include">
        </childnode>
        <childnode refid="32311" relation="include">
        </childnode>
        <childnode refid="32317" relation="include">
        </childnode>
      </node>
      <node id="32319">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="32274" relation="include">
        </childnode>
        <childnode refid="32289" relation="include">
        </childnode>
      </node>
      <node id="32309">
        <label>AthContainers/tools/likely.h</label>
        <link refid="d6/dd6/likely_8h"/>
      </node>
      <node id="32354">
        <label>AthContainers/tools/DVLIterator.h</label>
        <link refid="d3/dc7/DVLIterator_8h_source"/>
        <childnode refid="32290" relation="include">
        </childnode>
        <childnode refid="32352" relation="include">
        </childnode>
        <childnode refid="32355" relation="include">
        </childnode>
        <childnode refid="32357" relation="include">
        </childnode>
        <childnode refid="32342" relation="include">
        </childnode>
        <childnode refid="32279" relation="include">
        </childnode>
        <childnode refid="32280" relation="include">
        </childnode>
      </node>
      <node id="32368">
        <label>SGTools/DataBucket.h</label>
      </node>
      <node id="32369">
        <label>AthContainers/tools/DVLDataBucket.icc</label>
        <link refid="d3/d21/DVLDataBucket_8icc"/>
        <childnode refid="32370" relation="include">
        </childnode>
      </node>
      <node id="32370">
        <label>SGTools/IRegisterTransient.h</label>
      </node>
      <node id="32305">
        <label>RootMetaSelection.h</label>
      </node>
      <node id="32329">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="32359">
        <label>AthContainers/tools/DVL_algorithms.h</label>
        <link refid="d0/d7a/DVL__algorithms_8h"/>
        <childnode refid="32354" relation="include">
        </childnode>
        <childnode refid="32279" relation="include">
        </childnode>
        <childnode refid="32277" relation="include">
        </childnode>
        <childnode refid="32360" relation="include">
        </childnode>
      </node>
      <node id="32310">
        <label>AthContainers/tools/assume.h</label>
        <link refid="d2/d20/assume_8h"/>
      </node>
      <node id="32326">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="32355">
        <label>AthContainers/tools/ElementProxy.h</label>
        <link refid="db/d26/ElementProxy_8h"/>
        <childnode refid="32290" relation="include">
        </childnode>
        <childnode refid="32303" relation="include">
        </childnode>
        <childnode refid="32285" relation="include">
        </childnode>
        <childnode refid="32356" relation="include">
        </childnode>
      </node>
      <node id="32337">
        <label>AthContainersInterfaces/IAuxElement.h</label>
        <link refid="dd/d7a/IAuxElement_8h"/>
      </node>
      <node id="32303">
        <label>AthLinks/tools/selection_ns.h</label>
        <link refid="d3/dec/selection__ns_8h"/>
        <childnode refid="32304" relation="include">
        </childnode>
        <childnode refid="32305" relation="include">
        </childnode>
      </node>
      <node id="32307">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="32314">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="32353">
        <label>limits.h</label>
      </node>
      <node id="32347">
        <label>AthContainers/tools/ClassID.h</label>
        <link refid="de/de2/ClassID_8h"/>
        <childnode refid="32348" relation="include">
        </childnode>
      </node>
      <node id="32324">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="32296" relation="include">
        </childnode>
        <childnode refid="32282" relation="include">
        </childnode>
        <childnode refid="32301" relation="include">
        </childnode>
        <childnode refid="32325" relation="include">
        </childnode>
      </node>
      <node id="32273">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="32274" relation="include">
        </childnode>
        <childnode refid="32275" relation="include">
        </childnode>
      </node>
      <node id="32276">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="32277" relation="include">
        </childnode>
        <childnode refid="32278" relation="include">
        </childnode>
        <childnode refid="32279" relation="include">
        </childnode>
        <childnode refid="32274" relation="include">
        </childnode>
        <childnode refid="32280" relation="include">
        </childnode>
        <childnode refid="32281" relation="include">
        </childnode>
        <childnode refid="32282" relation="include">
        </childnode>
        <childnode refid="32283" relation="include">
        </childnode>
        <childnode refid="32284" relation="include">
        </childnode>
      </node>
      <node id="32340">
        <label>AthContainers/tools/ATHCONTAINERS_ASSERT.h</label>
        <link refid="de/d6b/ATHCONTAINERS__ASSERT_8h"/>
        <childnode refid="32339" relation="include">
        </childnode>
      </node>
      <node id="32356">
        <label>AthContainers/tools/ElementProxy.icc</label>
        <link refid="d6/d70/ElementProxy_8icc"/>
        <childnode refid="32352" relation="include">
        </childnode>
        <childnode refid="32340" relation="include">
        </childnode>
      </node>
      <node id="32289">
        <label>typeinfo</label>
      </node>
      <node id="32338">
        <label>AthContainers/AuxElement.icc</label>
        <link refid="d2/d37/AuxElement_8icc"/>
        <childnode refid="32309" relation="include">
        </childnode>
        <childnode refid="32339" relation="include">
        </childnode>
      </node>
      <node id="32271">
        <label>AthContainers/DataVector.h</label>
        <link refid="d7/dd6/DataVector_8h"/>
        <childnode refid="32272" relation="include">
        </childnode>
        <childnode refid="32290" relation="include">
        </childnode>
        <childnode refid="32291" relation="include">
        </childnode>
        <childnode refid="32292" relation="include">
        </childnode>
        <childnode refid="32345" relation="include">
        </childnode>
        <childnode refid="32346" relation="include">
        </childnode>
        <childnode refid="32352" relation="include">
        </childnode>
        <childnode refid="32354" relation="include">
        </childnode>
        <childnode refid="32358" relation="include">
        </childnode>
        <childnode refid="32359" relation="include">
        </childnode>
        <childnode refid="32355" relation="include">
        </childnode>
        <childnode refid="32361" relation="include">
        </childnode>
        <childnode refid="32303" relation="include">
        </childnode>
        <childnode refid="32362" relation="include">
        </childnode>
        <childnode refid="32363" relation="include">
        </childnode>
        <childnode refid="32357" relation="include">
        </childnode>
        <childnode refid="32299" relation="include">
        </childnode>
        <childnode refid="32289" relation="include">
        </childnode>
        <childnode refid="32286" relation="include">
        </childnode>
        <childnode refid="32364" relation="include">
        </childnode>
        <childnode refid="32277" relation="include">
        </childnode>
        <childnode refid="32288" relation="include">
        </childnode>
        <childnode refid="32279" relation="include">
        </childnode>
        <childnode refid="32335" relation="include">
        </childnode>
        <childnode refid="32365" relation="include">
        </childnode>
        <childnode refid="32367" relation="include">
        </childnode>
        <childnode refid="32371" relation="include">
        </childnode>
        <childnode refid="32372" relation="include">
        </childnode>
      </node>
      <node id="32325">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="32306">
        <label>AthenaKernel/ILockable.h</label>
      </node>
      <node id="32302">
        <label>AthLinks/DataLinkBase.h</label>
        <link refid="db/da8/DataLinkBase_8h_source"/>
        <childnode refid="32301" relation="include">
        </childnode>
      </node>
      <node id="32297">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="32328">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="32346">
        <label>AthContainers/tools/DVLInfo.h</label>
        <link refid="d3/d2e/DVLInfo_8h"/>
        <childnode refid="32347" relation="include">
        </childnode>
        <childnode refid="32292" relation="include">
        </childnode>
        <childnode refid="32289" relation="include">
        </childnode>
        <childnode refid="32274" relation="include">
        </childnode>
        <childnode refid="32284" relation="include">
        </childnode>
        <childnode refid="32349" relation="include">
        </childnode>
        <childnode refid="32327" relation="include">
        </childnode>
        <childnode refid="32350" relation="include">
        </childnode>
      </node>
      <node id="32295">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="32365">
        <label>AthContainers/ClassName.h</label>
        <link refid="dd/d6b/AthContainers_2AthContainers_2ClassName_8h_source"/>
        <childnode refid="32366" relation="include">
        </childnode>
      </node>
      <node id="32318">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="32273" relation="include">
        </childnode>
        <childnode refid="32319" relation="include">
        </childnode>
        <childnode refid="32320" relation="include">
        </childnode>
        <childnode refid="32321" relation="include">
        </childnode>
        <childnode refid="32330" relation="include">
        </childnode>
        <childnode refid="32311" relation="include">
        </childnode>
        <childnode refid="32274" relation="include">
        </childnode>
        <childnode refid="32289" relation="include">
        </childnode>
        <childnode refid="32299" relation="include">
        </childnode>
        <childnode refid="32332" relation="include">
        </childnode>
        <childnode refid="32333" relation="include">
        </childnode>
      </node>
      <node id="32299">
        <label>vector</label>
      </node>
      <node id="32373">
        <label>AthContainers/tools/CompareAndPrint.h</label>
        <link refid="d5/da8/CompareAndPrint_8h_source"/>
        <childnode refid="32277" relation="include">
        </childnode>
        <childnode refid="32289" relation="include">
        </childnode>
      </node>
      <node id="32270">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/ConstDataVector.h</label>
        <link refid="ConstDataVector.h"/>
        <childnode refid="32271" relation="include">
        </childnode>
        <childnode refid="32375" relation="include">
        </childnode>
        <childnode refid="32376" relation="include">
        </childnode>
      </node>
      <node id="32374">
        <label>AthContainers/tools/DVLEltBaseInfo.icc</label>
        <link refid="dd/d5e/DVLEltBaseInfo_8icc"/>
      </node>
      <node id="32278">
        <label>utility</label>
      </node>
      <node id="32371">
        <label>SGTools/DataBucketTraitFwd.h</label>
      </node>
      <node id="32308">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="32344">
        <label>AthContainers/AuxVectorBase.icc</label>
        <link refid="d4/d50/AuxVectorBase_8icc"/>
      </node>
      <node id="32312">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="32322">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="32311">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="32312" relation="include">
        </childnode>
        <childnode refid="32313" relation="include">
        </childnode>
        <childnode refid="32314" relation="include">
        </childnode>
        <childnode refid="32315" relation="include">
        </childnode>
        <childnode refid="32316" relation="include">
        </childnode>
      </node>
      <node id="32280">
        <label>cstdlib</label>
      </node>
      <node id="32364">
        <label>iostream</label>
      </node>
      <node id="32287">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="32294">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="32273" relation="include">
        </childnode>
        <childnode refid="32274" relation="include">
        </childnode>
        <childnode refid="32295" relation="include">
        </childnode>
      </node>
      <node id="32274">
        <label>cstddef</label>
      </node>
      <node id="32317">
        <label>AthContainers/AuxVectorData.icc</label>
        <link refid="da/de7/AuxVectorData_8icc"/>
        <childnode refid="32318" relation="include">
        </childnode>
        <childnode refid="32334" relation="include">
        </childnode>
        <childnode refid="32294" relation="include">
        </childnode>
        <childnode refid="32309" relation="include">
        </childnode>
        <childnode refid="32310" relation="include">
        </childnode>
      </node>
      <node id="32350">
        <label>AthContainers/tools/DVLInfo.icc</label>
        <link refid="da/d83/DVLInfo_8icc"/>
        <childnode refid="32290" relation="include">
        </childnode>
        <childnode refid="32299" relation="include">
        </childnode>
        <childnode refid="32351" relation="include">
        </childnode>
        <childnode refid="32339" relation="include">
        </childnode>
        <childnode refid="32280" relation="include">
        </childnode>
        <childnode refid="32335" relation="include">
        </childnode>
      </node>
      <node id="32321">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="32319" relation="include">
        </childnode>
        <childnode refid="32322" relation="include">
        </childnode>
        <childnode refid="32298" relation="include">
        </childnode>
        <childnode refid="32323" relation="include">
        </childnode>
        <childnode refid="32308" relation="include">
        </childnode>
        <childnode refid="32289" relation="include">
        </childnode>
        <childnode refid="32299" relation="include">
        </childnode>
        <childnode refid="32277" relation="include">
        </childnode>
        <childnode refid="32301" relation="include">
        </childnode>
        <childnode refid="32327" relation="include">
        </childnode>
        <childnode refid="32328" relation="include">
        </childnode>
        <childnode refid="32329" relation="include">
        </childnode>
      </node>
      <node id="32327">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="32292">
        <label>AthContainers/AuxVectorBase.h</label>
        <link refid="d7/d18/AuxVectorBase_8h"/>
        <childnode refid="32293" relation="include">
        </childnode>
        <childnode refid="32290" relation="include">
        </childnode>
        <childnode refid="32291" relation="include">
        </childnode>
        <childnode refid="32336" relation="include">
        </childnode>
        <childnode refid="32318" relation="include">
        </childnode>
        <childnode refid="32272" relation="include">
        </childnode>
        <childnode refid="32340" relation="include">
        </childnode>
        <childnode refid="32334" relation="include">
        </childnode>
        <childnode refid="32341" relation="include">
        </childnode>
        <childnode refid="32299" relation="include">
        </childnode>
        <childnode refid="32344" relation="include">
        </childnode>
      </node>
      <node id="32331">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="32323">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="32322" relation="include">
        </childnode>
        <childnode refid="32324" relation="include">
        </childnode>
        <childnode refid="32308" relation="include">
        </childnode>
        <childnode refid="32299" relation="include">
        </childnode>
        <childnode refid="32326" relation="include">
        </childnode>
      </node>
      <node id="32277">
        <label>algorithm</label>
      </node>
      <node id="32361">
        <label>AthContainers/tools/IsMostDerivedFlag.h</label>
        <link refid="d5/dfa/IsMostDerivedFlag_8h"/>
      </node>
      <node id="32336">
        <label>AthContainers/AuxElement.h</label>
        <link refid="d1/d6f/AuxElement_8h"/>
        <childnode refid="32337" relation="include">
        </childnode>
        <childnode refid="32294" relation="include">
        </childnode>
        <childnode refid="32334" relation="include">
        </childnode>
        <childnode refid="32300" relation="include">
        </childnode>
        <childnode refid="32318" relation="include">
        </childnode>
        <childnode refid="32293" relation="include">
        </childnode>
        <childnode refid="32298" relation="include">
        </childnode>
        <childnode refid="32272" relation="include">
        </childnode>
        <childnode refid="32309" relation="include">
        </childnode>
        <childnode refid="32274" relation="include">
        </childnode>
        <childnode refid="32338" relation="include">
        </childnode>
      </node>
      <node id="32300">
        <label>AthLinks/DataLink.h</label>
        <link refid="da/de8/DataLink_8h_source"/>
        <childnode refid="32301" relation="include">
        </childnode>
        <childnode refid="32283" relation="include">
        </childnode>
        <childnode refid="32302" relation="include">
        </childnode>
        <childnode refid="32303" relation="include">
        </childnode>
      </node>
      <node id="32358">
        <label>AthContainers/tools/DVL_iter_swap.h</label>
        <link refid="d6/ddb/DVL__iter__swap_8h"/>
        <childnode refid="32354" relation="include">
        </childnode>
        <childnode refid="32340" relation="include">
        </childnode>
        <childnode refid="32279" relation="include">
        </childnode>
      </node>
      <node id="32290">
        <label>AthContainers/OwnershipPolicy.h</label>
        <link refid="d3/da4/OwnershipPolicy_8h_source"/>
      </node>
      <node id="32348">
        <label>GaudiKernel/ClassID.h</label>
      </node>
      <node id="32363">
        <label>boost/type_traits.hpp</label>
      </node>
      <node id="32285">
        <label>memory</label>
      </node>
      <node id="32330">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="32320" relation="include">
        </childnode>
        <childnode refid="32321" relation="include">
        </childnode>
        <childnode refid="32331" relation="include">
        </childnode>
      </node>
      <node id="32341">
        <label>AthContainersInterfaces/AuxStore_traits.h</label>
        <link refid="dd/d70/AuxStore__traits_8h"/>
        <childnode refid="32337" relation="include">
        </childnode>
        <childnode refid="32334" relation="include">
        </childnode>
        <childnode refid="32294" relation="include">
        </childnode>
        <childnode refid="32327" relation="include">
        </childnode>
        <childnode refid="32342" relation="include">
        </childnode>
        <childnode refid="32343" relation="include">
        </childnode>
        <childnode refid="32283" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="32418">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODParticleEvent/xAODParticleEvent/CompositeParticleAuxContainer.h</label>
        <link refid="db/d67/CompositeParticleAuxContainer_8h_source"/>
        <childnode refid="32419" relation="include">
        </childnode>
      </node>
      <node id="32387">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/DataVector_f_test.cxx</label>
        <link refid="dd/d14/DataVector__f__test_8cxx"/>
      </node>
      <node id="32406">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETAuxComponentMap.h</label>
        <link refid="da/d4f/MissingETAuxComponentMap_8h_source"/>
        <childnode refid="32400" relation="include">
        </childnode>
      </node>
      <node id="32420">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODParticleEvent/xAODParticleEvent/versions/CompositeParticleContainer_v1.h</label>
        <link refid="d2/d23/CompositeParticleContainer__v1_8h_source"/>
        <childnode refid="32421" relation="include">
        </childnode>
      </node>
      <node id="32386">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/DataVector_e_test.cxx</label>
        <link refid="d6/da5/DataVector__e__test_8cxx"/>
      </node>
      <node id="32390">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h</label>
        <link refid="d1/d18/MissingETComposition_8h_source"/>
      </node>
      <node id="32421">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODParticleEvent/xAODParticleEvent/CompositeParticleContainer.h</label>
        <link refid="d6/de5/CompositeParticleContainer_8h_source"/>
        <childnode refid="32419" relation="include">
        </childnode>
      </node>
      <node id="32415">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODParticleEvent/xAODParticleEvent/versions/CompositeParticle_v1.h</label>
        <link refid="d8/d98/CompositeParticle__v1_8h_source"/>
        <childnode refid="32416" relation="include">
        </childnode>
        <childnode refid="32417" relation="include">
        </childnode>
        <childnode refid="32420" relation="include">
        </childnode>
      </node>
      <node id="32385">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/DataVector_d_test.cxx</label>
        <link refid="de/da2/DataVector__d__test_8cxx"/>
      </node>
      <node id="32380">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/copyThinned_test.cxx</label>
        <link refid="d3/d98/copyThinned__test_8cxx"/>
      </node>
      <node id="32422">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/tools/TCDVHolderT.h</label>
        <link refid="dc/d67/TCDVHolderT_8h_source"/>
      </node>
      <node id="32412">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CPAnalysisExamples/CPAnalysisExamples/MyToolProvider.h</label>
        <link refid="d0/db6/MyToolProvider_8h_source"/>
      </node>
      <node id="32383">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/DataVector_b_test.cxx</label>
        <link refid="d2/d0b/DataVector__b__test_8cxx"/>
      </node>
      <node id="32401">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/versions/MissingETAssociationMap_v1.h</label>
        <link refid="d9/da7/MissingETAssociationMap__v1_8h_source"/>
        <childnode refid="32393" relation="include">
        </childnode>
      </node>
      <node id="32382">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/DataVector_a_test.cxx</label>
        <link refid="d7/def/DataVector__a__test_8cxx"/>
      </node>
      <node id="32410">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CPAnalysisExamples/CPAnalysisExamples/xExampleEDM.h</label>
        <link refid="da/d33/xExampleEDM_8h_source"/>
      </node>
      <node id="32395">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/METInterface/METInterface/METInterfaceDict.h</label>
        <link refid="df/dbc/METInterfaceDict_8h_source"/>
      </node>
      <node id="32398">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/METInterface/METInterface/IMETSystematicsTool.h</label>
        <link refid="d2/d71/IMETSystematicsTool_8h_source"/>
        <childnode refid="32395" relation="include">
        </childnode>
        <childnode refid="32399" relation="include">
        </childnode>
      </node>
      <node id="32416">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODParticleEvent/xAODParticleEvent/CompositeParticle.h</label>
        <link refid="d8/d61/CompositeParticle_8h_source"/>
      </node>
      <node id="32411">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/METUtilities/METUtilities/METRebuilder.h</label>
        <link refid="dc/d8b/METRebuilder_8h_source"/>
        <childnode refid="32412" relation="include">
        </childnode>
        <childnode refid="32397" relation="include">
        </childnode>
      </node>
      <node id="32381">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/DataVector_test.icc</label>
        <link refid="d2/db8/DataVector__test_8icc"/>
        <childnode refid="32382" relation="include">
        </childnode>
        <childnode refid="32383" relation="include">
        </childnode>
        <childnode refid="32384" relation="include">
        </childnode>
        <childnode refid="32385" relation="include">
        </childnode>
        <childnode refid="32386" relation="include">
        </childnode>
        <childnode refid="32387" relation="include">
        </childnode>
      </node>
      <node id="32424">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/TPyStore.h</label>
        <link refid="dd/d87/TPyStore_8h_source"/>
        <childnode refid="32425" relation="include">
        </childnode>
      </node>
      <node id="32394">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/METInterface/METInterface/IMETMaker.h</label>
        <link refid="d0/dd7/IMETMaker_8h_source"/>
        <childnode refid="32395" relation="include">
        </childnode>
        <childnode refid="32396" relation="include">
        </childnode>
      </node>
      <node id="32391">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/versions/MissingETAssociation_v1.h</label>
        <link refid="d4/dd5/MissingETAssociation__v1_8h_source"/>
        <childnode refid="32392" relation="include">
        </childnode>
        <childnode refid="32401" relation="include">
        </childnode>
      </node>
      <node id="32397">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/METUtilities/METUtilities/METUtilitiesDict.h</label>
        <link refid="d2/d09/METUtilitiesDict_8h_source"/>
      </node>
      <node id="32417">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODParticleEvent/xAODParticleEvent/versions/CompositeParticleAuxContainer_v1.h</label>
        <link refid="de/d67/CompositeParticleAuxContainer__v1_8h_source"/>
        <childnode refid="32418" relation="include">
        </childnode>
      </node>
      <node id="32378">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/ConstDataVector.h</label>
        <link refid="ConstDataVector.h"/>
        <childnode refid="32379" relation="include">
        </childnode>
        <childnode refid="32381" relation="include">
        </childnode>
        <childnode refid="32388" relation="include">
        </childnode>
        <childnode refid="32389" relation="include">
        </childnode>
        <childnode refid="32415" relation="include">
        </childnode>
        <childnode refid="32422" relation="include">
        </childnode>
        <childnode refid="32423" relation="include">
        </childnode>
      </node>
      <node id="32404">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETAuxAssociationMap.h</label>
        <link refid="d4/df2/MissingETAuxAssociationMap_8h_source"/>
        <childnode refid="32400" relation="include">
        </childnode>
      </node>
      <node id="32409">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/METInterface/METInterface/IMETRebuilder.h</label>
        <link refid="d8/d6d/IMETRebuilder_8h_source"/>
        <childnode refid="32410" relation="include">
        </childnode>
        <childnode refid="32395" relation="include">
        </childnode>
        <childnode refid="32411" relation="include">
        </childnode>
      </node>
      <node id="32403">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/versions/MissingETAuxAssociationMap_v2.h</label>
        <link refid="d0/d2d/MissingETAuxAssociationMap__v2_8h_source"/>
        <childnode refid="32404" relation="include">
        </childnode>
      </node>
      <node id="32399">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/METUtilities/METUtilities/METSystematicsTool.h</label>
        <link refid="d6/d3e/METSystematicsTool_8h_source"/>
        <childnode refid="32397" relation="include">
        </childnode>
      </node>
      <node id="32407">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/versions/MissingETComponent_v1.h</label>
        <link refid="d1/d98/MissingETComponent__v1_8h"/>
        <childnode refid="32408" relation="include">
        </childnode>
        <childnode refid="32414" relation="include">
        </childnode>
      </node>
      <node id="32388">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/DVLDataBucket_test.cxx</label>
        <link refid="d4/de3/DVLDataBucket__test_8cxx"/>
      </node>
      <node id="32384">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/DataVector_c_test.cxx</label>
        <link refid="dd/dd6/DataVector__c__test_8cxx"/>
      </node>
      <node id="32392">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETAssociation.h</label>
        <link refid="d2/df6/MissingETAssociation_8h_source"/>
        <childnode refid="32393" relation="include">
        </childnode>
        <childnode refid="32390" relation="include">
        </childnode>
      </node>
      <node id="32405">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/versions/MissingETAuxComponentMap_v1.h</label>
        <link refid="d4/def/MissingETAuxComponentMap__v1_8h_source"/>
        <childnode refid="32406" relation="include">
        </childnode>
      </node>
      <node id="32379">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/tools/copyThinned.h</label>
        <link refid="d8/d9e/copyThinned_8h"/>
        <childnode refid="32380" relation="include">
        </childnode>
      </node>
      <node id="32396">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/METUtilities/METUtilities/METMaker.h</label>
        <link refid="d7/d20/METMaker_8h_source"/>
        <childnode refid="32397" relation="include">
        </childnode>
      </node>
      <node id="32389">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/versions/MissingETCompositionBase.h</label>
        <link refid="d9/d25/MissingETCompositionBase_8h_source"/>
        <childnode refid="32390" relation="include">
        </childnode>
        <childnode refid="32391" relation="include">
        </childnode>
        <childnode refid="32402" relation="include">
        </childnode>
        <childnode refid="32403" relation="include">
        </childnode>
        <childnode refid="32405" relation="include">
        </childnode>
        <childnode refid="32407" relation="include">
        </childnode>
        <childnode refid="32414" relation="include">
        </childnode>
      </node>
      <node id="32408">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComponent.h</label>
        <link refid="d5/d39/MissingETComponent_8h_source"/>
        <childnode refid="32409" relation="include">
        </childnode>
        <childnode refid="32413" relation="include">
        </childnode>
        <childnode refid="32390" relation="include">
        </childnode>
      </node>
      <node id="32400">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/xAODMissingETDict.h</label>
        <link refid="d3/d1b/xAODMissingETDict_8h_source"/>
      </node>
      <node id="32423">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/TStore.h</label>
        <link refid="d7/d1f/TStore_8h_source"/>
        <childnode refid="32424" relation="include">
        </childnode>
        <childnode refid="32425" relation="include">
        </childnode>
      </node>
      <node id="32402">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/versions/MissingETAuxAssociationMap_v1.h</label>
        <link refid="d3/d2d/MissingETAuxAssociationMap__v1_8h_source"/>
        <childnode refid="32400" relation="include">
        </childnode>
      </node>
      <node id="32425">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/xAODRootAccessDict.h</label>
        <link refid="d7/dc5/xAODRootAccessDict_8h_source"/>
      </node>
      <node id="32393">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETAssociationMap.h</label>
        <link refid="df/db3/MissingETAssociationMap_8h_source"/>
        <childnode refid="32394" relation="include">
        </childnode>
        <childnode refid="32398" relation="include">
        </childnode>
        <childnode refid="32399" relation="include">
        </childnode>
        <childnode refid="32390" relation="include">
        </childnode>
        <childnode refid="32400" relation="include">
        </childnode>
      </node>
      <node id="32419">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODParticleEvent/xAODParticleEvent/xAODParticleEventDict.h</label>
        <link refid="d7/d8d/xAODParticleEventDict_8h_source"/>
      </node>
      <node id="32414">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/versions/MissingETComponentMap_v1.h</label>
        <link refid="dd/ddb/MissingETComponentMap__v1_8h_source"/>
        <childnode refid="32413" relation="include">
        </childnode>
      </node>
      <node id="32413">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComponentMap.h</label>
        <link refid="d9/d23/MissingETComponentMap_8h_source"/>
        <childnode refid="32409" relation="include">
        </childnode>
        <childnode refid="32390" relation="include">
        </childnode>
        <childnode refid="32400" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="de/db1/classConstDataVector" prot="public">ConstDataVector</innerclass>
    <innerclass refid="df/dbb/structClassID__traits_3_01ConstDataVector_3_01DV_01_4_01_4" prot="public">ClassID_traits&lt; ConstDataVector&lt; DV &gt; &gt;</innerclass>
    <innerclass refid="d3/d46/classSG_1_1DVLConstDataVectorBucket" prot="public">SG::DVLConstDataVectorBucket</innerclass>
    <innerclass refid="d6/d86/structSG_1_1DataBucketTrait_3_01ConstDataVector_3_01DV_01_4_00_01U_01_4" prot="public">SG::DataBucketTrait&lt; ConstDataVector&lt; DV &gt;, U &gt;</innerclass>
    <innerclass refid="d4/dc5/classSG_1_1BaseInfo_3_01ConstDataVector_3_01DV_01_4_01_4" prot="public">SG::BaseInfo&lt; ConstDataVector&lt; DV &gt; &gt;</innerclass>
    <innernamespace refid="dd/d59/namespaceSG">SG</innernamespace>
    <briefdescription>
<para><computeroutput><ref refid="d0/d4d/classDataVector" kindref="compound">DataVector</ref></computeroutput> adapter that acts like it holds const pointers. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>scott snyder &lt;<ulink url="mailto:snyder@bnl.gov">snyder@bnl.gov</ulink>&gt; </para></simplesect>
<simplesect kind="date"><para>Sep, 2011 <ref refid="d4/dc4/structA" kindref="compound">A</ref> <computeroutput><ref refid="d0/d4d/classDataVector" kindref="compound">DataVector</ref>&lt;<ref refid="d1/def/classT" kindref="compound">T</ref>&gt;</computeroutput> acts as a container of <computeroutput>T*</computeroutput>. This means, though, that one cannot put a <computeroutput>const T*</computeroutput> into a <computeroutput><ref refid="d0/d4d/classDataVector" kindref="compound">DataVector</ref>&lt;<ref refid="d1/def/classT" kindref="compound">T</ref>&gt;</computeroutput>. However, one sometimes wants to do that. <ref refid="d4/dc4/structA" kindref="compound">A</ref> typical case is that one retrieves a const <computeroutput><ref refid="d0/d4d/classDataVector" kindref="compound">DataVector</ref></computeroutput> from StoreGate, filters the contents, and then stores them in a new <computeroutput><ref refid="d0/d4d/classDataVector" kindref="compound">DataVector</ref></computeroutput>. Recall that a const <computeroutput><ref refid="d0/d4d/classDataVector" kindref="compound">DataVector</ref></computeroutput> will return <computeroutput>const T*</computeroutput>. So the pointers one gets from a const <computeroutput><ref refid="d0/d4d/classDataVector" kindref="compound">DataVector</ref></computeroutput> cannot be inserted into another <computeroutput><ref refid="d0/d4d/classDataVector" kindref="compound">DataVector</ref></computeroutput>. (The root cause of this is that we don&apos;t want to have to deal with distinct <computeroutput><ref refid="d0/d4d/classDataVector" kindref="compound">DataVector</ref>&lt;<ref refid="d1/def/classT" kindref="compound">T</ref>&gt;</computeroutput> and <computeroutput><ref refid="d0/d4d/classDataVector" kindref="compound">DataVector</ref>&lt;const <ref refid="d1/def/classT" kindref="compound">T</ref>&gt;</computeroutput> types, and thus <computeroutput><ref refid="d0/d4d/classDataVector" kindref="compound">DataVector</ref></computeroutput> [and StoreGate] don&apos;t have standard const semantics.)</para></simplesect>
To solve this, we introduce the template class <computeroutput><ref refid="de/db1/classConstDataVector" kindref="compound">ConstDataVector</ref>&lt;<ref refid="d3/d78/structDV" kindref="compound">DV</ref>&gt;</computeroutput>. The template argument should be a <computeroutput><ref refid="d0/d4d/classDataVector" kindref="compound">DataVector</ref></computeroutput> class or something that derives from one. (The reason the template argument is the <computeroutput><ref refid="d0/d4d/classDataVector" kindref="compound">DataVector</ref></computeroutput> class rather than the element type <computeroutput><ref refid="d1/def/classT" kindref="compound">T</ref></computeroutput> is to allow for types that derive from <computeroutput><ref refid="d0/d4d/classDataVector" kindref="compound">DataVector</ref></computeroutput>.) <computeroutput><ref refid="de/db1/classConstDataVector" kindref="compound">ConstDataVector</ref>&lt;<ref refid="d3/d78/structDV" kindref="compound">DV</ref>&gt;</computeroutput> derives from <computeroutput><ref refid="d3/d78/structDV" kindref="compound">DV</ref></computeroutput>, but privately --- so it is a <computeroutput><ref refid="d3/d78/structDV" kindref="compound">DV</ref></computeroutput>, but clients cannot use it as a <computeroutput><ref refid="d3/d78/structDV" kindref="compound">DV</ref></computeroutput>. Instead, we provide only methods that retrieve const pointers. Further, the insertion methods will take const rather than non-const pointers.</para><para>There are two ways (short of casting) to convert a <computeroutput><ref refid="de/db1/classConstDataVector" kindref="compound">ConstDataVector</ref>&lt;<ref refid="d3/d78/structDV" kindref="compound">DV</ref>&gt;</computeroutput> to a <computeroutput>const <ref refid="d3/d78/structDV" kindref="compound">DV</ref></computeroutput>. The <computeroutput>asDataVector</computeroutput> method will directly do this conversion. Also, if the object is recorded in StoreGate, it will automatically be made const, so a retrieval will get a <computeroutput>const <ref refid="d3/d78/structDV" kindref="compound">DV</ref></computeroutput>. <ref refid="d4/dc4/structA" kindref="compound">A</ref> <computeroutput><ref refid="de/db1/classConstDataVector" kindref="compound">ConstDataVector</ref></computeroutput> should not convert to a non-const <computeroutput><ref refid="d3/d78/structDV" kindref="compound">DV</ref></computeroutput>.</para><para>So, for example, filtering might look something like this:</para><para><programlisting><codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">DataVector&lt;T&gt;</ref>*<sp/>v_in<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>CHECK(<sp/>sg-&gt;retrieve<sp/>(v_in)<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="de/db1/classConstDataVector" kindref="compound" tooltip="DataVector adapter that acts like it holds const pointers.">ConstDataVector&lt;DataVector&lt;T&gt;</ref><sp/>&gt;*<sp/>v_out<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="de/db1/classConstDataVector" kindref="compound" tooltip="DataVector adapter that acts like it holds const pointers.">ConstDataVector&lt;DataVector&lt;T&gt;</ref><sp/>&gt;<sp/>(<ref refid="dd/d59/namespaceSG_1acd9d1a31242c6243cc1c6fab0fbc7cd8ad7d4cf2303700f0966e4140f236c4bf1" kindref="member" tooltip="this data object is a view, it does not own its elmts">SG::VIEW_ELEMENTS</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>CHECK(<sp/>sg-&gt;record<sp/>(v_out,<sp/></highlight><highlight class="stringliteral">&quot;key&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/def/classT" kindref="compound">T</ref>*<sp/>t<sp/>:<sp/>*v_in)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filter<sp/>(t))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v_out-&gt;push_back<sp/>(t);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
</programlisting></para><para>Note that if you are not recording the result in StoreGate, it may well be preferable to just use a <computeroutput>std::vector&lt;const T*&gt;</computeroutput> rather than <computeroutput><ref refid="de/db1/classConstDataVector" kindref="compound">ConstDataVector</ref></computeroutput>. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>This<sp/>file&apos;s<sp/>extension<sp/>implies<sp/>that<sp/>it&apos;s<sp/>C,<sp/>but<sp/>it&apos;s<sp/>really<sp/>-*-<sp/>C++<sp/>-*-.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>$Id:<sp/>ConstDataVector.h<sp/>610620<sp/>2014-08-06<sp/>21:15:52Z<sp/>ssnyder<sp/>$</highlight></codeline>
<codeline lineno="60"><highlight class="comment"></highlight><highlight class="preprocessor">#ifndef<sp/>ATHCONTAINERS_CONSTDATAVECTOR_H</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ATHCONTAINERS_CONSTDATAVECTOR_H</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d7/dd6/DataVector_8h" kindref="compound" tooltip="An STL vector of pointers that by default owns its pointed-to elements.">AthContainers/DataVector.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201100</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;initializer_list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DV&gt;</highlight></codeline>
<codeline lineno="73" refid="de/db1/classConstDataVector" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="de/db1/classConstDataVector" kindref="compound" tooltip="DataVector adapter that acts like it holds const pointers.">ConstDataVector</ref></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>:<sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="d3/d78/structDV" kindref="compound">DV</ref></highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="78" refid="de/db1/classConstDataVector_1a0b7cdd6c8969c3dbdbbb23eabfb4d524" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DV::size_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/db1/classConstDataVector_1a0b7cdd6c8969c3dbdbbb23eabfb4d524" kindref="member" tooltip="Basic types, forwarded from the base.">size_type</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DV::difference_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>difference_type;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DV::allocator_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocator_type;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="d1/def/classT" kindref="compound">DV::base_value_type</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_value_type;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DV::BaseContainer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseContainer;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DV::DVL_BASE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DVL_BASE;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DV::const_iterator<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_iterator;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DV::const_reverse_iterator<sp/><sp/><sp/>const_reverse_iterator;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>necessarily<sp/>DV;<sp/>DV<sp/>may<sp/>be<sp/>an<sp/>intermediate<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">DataVector&lt;base_value_type&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">base_data_vector</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="de/db1/classConstDataVector_1a5fd314970812a0e01af18df65729d2bd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DV::const_value_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/db1/classConstDataVector_1a5fd314970812a0e01af18df65729d2bd" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DV::const_value_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_value_type;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DV::const_value_type<sp/>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>reference;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DV::const_value_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>const_reference;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DV::const_value_type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DV::const_value_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>const_pointer;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="de/db1/classConstDataVector_1a445c221fe5fd876a4223a66274f4038b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/db1/classConstDataVector_1a445c221fe5fd876a4223a66274f4038b" kindref="member" tooltip="This needs to be forwarded from the base as well.">has_virtual</ref><sp/>=<sp/>DV::has_virtual;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="de/db1/classConstDataVector_1a35cc742d7d47a25c240d3389c25b3caf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="d7/d05/classDataModel__detail_1_1ElementProxy" kindref="compound" tooltip="Proxy for lvalue access to DataVector/DataList elements.">DataModel_detail::ElementProxy&lt;ConstDataVector&gt;</ref><sp/><ref refid="d7/d05/classDataModel__detail_1_1ElementProxy" kindref="compound" tooltip="Proxy for lvalue access to DataVector/DataList elements.">ElementProxy</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="de/db1/classConstDataVector_1abf241232ecaa158cfe092713d2699d5f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound" tooltip="(Non-const) Iterator class for DataVector/DataList. ">DataModel_detail::iterator&lt;ConstDataVector&gt;</ref><sp/><ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound" tooltip="(Non-const) Iterator class for DataVector/DataList. ">iterator</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::reverse_iterator&lt;iterator&gt;</highlight></codeline>
<codeline lineno="112" refid="de/db1/classConstDataVector_1ad6f83847ddbbcc881f467bdfa06d93a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/db1/classConstDataVector_1ad6f83847ddbbcc881f467bdfa06d93a9" kindref="member">reverse_iterator</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DV::size;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DV::max_size;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DV::resize;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DV::capacity;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DV::empty;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DV::reserve;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DV::pop_back;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DV::sort;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DV::ownPolicy;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DV::trackIndices;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DV::testInsert;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DV::getConstStore;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DV::setStore;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DV::setConstStore;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DV::setNonConstStore;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DV::cbegin;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DV::cend;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DV::crbegin;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DV::crend;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201100</highlight></codeline>
<codeline lineno="136"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DV::shrink_to_fit;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="138"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DV::begin;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DV::end;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DV::rbegin;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DV::rend;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DV::front;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DV::back;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DV::operator[];</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DV::at;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//========================================================================</highlight></codeline>
<codeline lineno="156"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="de/db1/classConstDataVector_1a1cdaac1590ea31083cc54ac56adb9caa" kindref="member" tooltip="Default constructor.">ConstDataVector</ref>(<ref refid="dd/d59/namespaceSG_1acd9d1a31242c6243cc1c6fab0fbc7cd8" kindref="member" tooltip="describes the possible element ownership policies (see e.g. DataVector)">SG::OwnershipPolicy</ref><sp/>ownPolicy<sp/>=<sp/><ref refid="dd/d59/namespaceSG_1acd9d1a31242c6243cc1c6fab0fbc7cd8a1f65f0fb55784cfd27d9d4d6d7986d4d" kindref="member" tooltip="this data object owns its elements">SG::OWN_ELEMENTS</ref>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="de/db1/classConstDataVector_1a1cdaac1590ea31083cc54ac56adb9caa" kindref="member" tooltip="Default constructor.">ConstDataVector</ref>(<ref refid="de/db1/classConstDataVector_1a0b7cdd6c8969c3dbdbbb23eabfb4d524" kindref="member" tooltip="Basic types, forwarded from the base.">size_type</ref><sp/>n,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d59/namespaceSG_1acd9d1a31242c6243cc1c6fab0fbc7cd8" kindref="member" tooltip="describes the possible element ownership policies (see e.g. DataVector)">SG::OwnershipPolicy</ref><sp/>ownPolicy<sp/>=<sp/><ref refid="dd/d59/namespaceSG_1acd9d1a31242c6243cc1c6fab0fbc7cd8a1f65f0fb55784cfd27d9d4d6d7986d4d" kindref="member" tooltip="this data object owns its elements">SG::OWN_ELEMENTS</ref>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>InputIterator&gt;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><ref refid="de/db1/classConstDataVector_1a1cdaac1590ea31083cc54ac56adb9caa" kindref="member" tooltip="Default constructor.">ConstDataVector</ref>(InputIterator<sp/>first,<sp/>InputIterator<sp/>last,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d59/namespaceSG_1acd9d1a31242c6243cc1c6fab0fbc7cd8" kindref="member" tooltip="describes the possible element ownership policies (see e.g. DataVector)">SG::OwnershipPolicy</ref><sp/>ownPolicy<sp/>=<sp/><ref refid="dd/d59/namespaceSG_1acd9d1a31242c6243cc1c6fab0fbc7cd8ad7d4cf2303700f0966e4140f236c4bf1" kindref="member" tooltip="this data object is a view, it does not own its elmts">SG::VIEW_ELEMENTS</ref>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>copy<sp/>constructor<sp/>for<sp/>derived<sp/>classes<sp/>is<sp/>deliberately<sp/>omitted,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>otherwise<sp/>we<sp/>get<sp/>warnings<sp/>about<sp/>not<sp/>calling<sp/>the<sp/>copy<sp/>constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>base<sp/>classes,<sp/>which<sp/>are<sp/>problematic<sp/>when<sp/>we<sp/>have<sp/>virtual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>inheritance.<sp/><sp/>Most<sp/>of<sp/>what<sp/>needs<sp/>doing<sp/>is<sp/>done<sp/>in<sp/>the<sp/>base<sp/>class<sp/>anyway,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>except<sp/>for<sp/>setting<sp/>@c<sp/>m_isMostDerived.<sp/><sp/>We<sp/>arrange<sp/>for<sp/>these<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>all<sp/>get<sp/>set<sp/>to<sp/>false;<sp/>they&apos;ll<sp/>get<sp/>set<sp/>correctly<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>@c<sp/>testInsert<sp/>is<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201100</highlight></codeline>
<codeline lineno="212"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>this<sp/>to<sp/>get<sp/>the<sp/>default<sp/>copy<sp/>ctor<sp/>defined<sp/>when<sp/>a<sp/>move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ctor<sp/>is<sp/>also<sp/>present.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><ref refid="de/db1/classConstDataVector_1a1cdaac1590ea31083cc54ac56adb9caa" kindref="member" tooltip="Default constructor.">ConstDataVector</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/db1/classConstDataVector" kindref="compound" tooltip="DataVector adapter that acts like it holds const pointers.">ConstDataVector</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="216"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201100</highlight></codeline>
<codeline lineno="219"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><ref refid="de/db1/classConstDataVector_1a1cdaac1590ea31083cc54ac56adb9caa" kindref="member" tooltip="Default constructor.">ConstDataVector</ref><sp/>(<ref refid="de/db1/classConstDataVector" kindref="compound" tooltip="DataVector adapter that acts like it holds const pointers.">ConstDataVector</ref>&amp;&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><ref refid="de/db1/classConstDataVector_1a1cdaac1590ea31083cc54ac56adb9caa" kindref="member" tooltip="Default constructor.">ConstDataVector</ref>(std::initializer_list&lt;value_type&gt;<sp/>l,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d59/namespaceSG_1acd9d1a31242c6243cc1c6fab0fbc7cd8" kindref="member" tooltip="describes the possible element ownership policies (see e.g. DataVector)">SG::OwnershipPolicy</ref><sp/>ownPolicy<sp/>=<sp/><ref refid="dd/d59/namespaceSG_1acd9d1a31242c6243cc1c6fab0fbc7cd8ad7d4cf2303700f0966e4140f236c4bf1" kindref="member" tooltip="this data object is a view, it does not own its elmts">SG::VIEW_ELEMENTS</ref>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="240"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><ref refid="de/db1/classConstDataVector" kindref="compound" tooltip="DataVector adapter that acts like it holds const pointers.">ConstDataVector</ref>&amp;<sp/><ref refid="de/db1/classConstDataVector_1ab0e570bb8e3da3b9ce9c465327eed052" kindref="member" tooltip="Copy constructor.">operator= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/db1/classConstDataVector" kindref="compound" tooltip="DataVector adapter that acts like it holds const pointers.">ConstDataVector</ref>&amp;<sp/>rhs)<sp/>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201100</highlight></codeline>
<codeline lineno="258"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><ref refid="de/db1/classConstDataVector" kindref="compound" tooltip="DataVector adapter that acts like it holds const pointers.">ConstDataVector</ref>&amp;<sp/><ref refid="de/db1/classConstDataVector_1ab0e570bb8e3da3b9ce9c465327eed052" kindref="member" tooltip="Copy constructor.">operator= </ref>(<ref refid="de/db1/classConstDataVector" kindref="compound" tooltip="DataVector adapter that acts like it holds const pointers.">ConstDataVector</ref>&amp;&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><ref refid="de/db1/classConstDataVector" kindref="compound" tooltip="DataVector adapter that acts like it holds const pointers.">ConstDataVector</ref>&amp;<sp/><ref refid="de/db1/classConstDataVector_1ab0e570bb8e3da3b9ce9c465327eed052" kindref="member" tooltip="Copy constructor.">operator= </ref>(std::initializer_list&lt;value_type&gt;<sp/>l);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="279"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>InputIterator&gt;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/db1/classConstDataVector_1a52e7a6b1254389e5ad4ebe7e8e4505bb" kindref="member" tooltip="Assign from iterators.">assign</ref>(InputIterator<sp/>first,<sp/>InputIterator<sp/>last);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201100</highlight></codeline>
<codeline lineno="295"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/db1/classConstDataVector_1a52e7a6b1254389e5ad4ebe7e8e4505bb" kindref="member" tooltip="Assign from iterators.">assign</ref>(std::initializer_list&lt;value_type&gt;<sp/>l);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="305"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//========================================================================</highlight></codeline>
<codeline lineno="311"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><ref refid="d7/d05/classDataModel__detail_1_1ElementProxy" kindref="compound" tooltip="Proxy for lvalue access to DataVector/DataList elements.">ElementProxy</ref><sp/><ref refid="de/db1/classConstDataVector_1aae62dc3e4f66c0fd8ef43c252a13b48d" kindref="member" tooltip="Access an element, as an lvalue.">operator[] </ref>(<ref refid="de/db1/classConstDataVector_1a0b7cdd6c8969c3dbdbbb23eabfb4d524" kindref="member" tooltip="Basic types, forwarded from the base.">size_type</ref><sp/>n);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><ref refid="d7/d05/classDataModel__detail_1_1ElementProxy" kindref="compound" tooltip="Proxy for lvalue access to DataVector/DataList elements.">ElementProxy</ref><sp/><ref refid="de/db1/classConstDataVector_1a7565e82eb51c3c4492ca8f5abd915138" kindref="member" tooltip="Access an element, as an lvalue.">at</ref><sp/>(<ref refid="de/db1/classConstDataVector_1a0b7cdd6c8969c3dbdbbb23eabfb4d524" kindref="member" tooltip="Basic types, forwarded from the base.">size_type</ref><sp/>n);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><ref refid="d7/d05/classDataModel__detail_1_1ElementProxy" kindref="compound" tooltip="Proxy for lvalue access to DataVector/DataList elements.">ElementProxy</ref><sp/><ref refid="de/db1/classConstDataVector_1a4993339b08404582cd9d83127c344802" kindref="member" tooltip="Access the first element in the collection as an lvalue.">front</ref><sp/>();</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><ref refid="d7/d05/classDataModel__detail_1_1ElementProxy" kindref="compound" tooltip="Proxy for lvalue access to DataVector/DataList elements.">ElementProxy</ref><sp/><ref refid="de/db1/classConstDataVector_1ab16ba63da380c5fef188eded070fca0d" kindref="member" tooltip="Access the last element in the collection as an lvalue.">back</ref><sp/>();</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//========================================================================</highlight></codeline>
<codeline lineno="363"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound" tooltip="(Non-const) Iterator class for DataVector/DataList. ">iterator</ref><sp/><ref refid="de/db1/classConstDataVector_1a1eebe42ee99ce34ab685d69a53b65dc0" kindref="member" tooltip="Return an iterator pointing at the beginning of the collection.">begin</ref>();</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound" tooltip="(Non-const) Iterator class for DataVector/DataList. ">iterator</ref><sp/><ref refid="de/db1/classConstDataVector_1a7e790c3b42f79d58586ebb3cf027781a" kindref="member" tooltip="Return an iterator pointing past the end of the collection.">end</ref>();</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><ref refid="de/db1/classConstDataVector_1ad6f83847ddbbcc881f467bdfa06d93a9" kindref="member">reverse_iterator</ref><sp/><ref refid="de/db1/classConstDataVector_1ae71dc63f2039fcb8a99040701ec37e7a" kindref="member" tooltip="Return a reverse_iterator pointing past the end of the collection.">rbegin</ref>();</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><ref refid="de/db1/classConstDataVector_1ad6f83847ddbbcc881f467bdfa06d93a9" kindref="member">reverse_iterator</ref><sp/><ref refid="de/db1/classConstDataVector_1abdeb7d8faaaf6e0fd5d4c5dbc29fc94a" kindref="member" tooltip="Return a reverse_iterator pointing at the beginning of the collection.">rend</ref>();</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//========================================================================</highlight></codeline>
<codeline lineno="417"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/db1/classConstDataVector_1a83ff6832bd6d52468225dca32c516121" kindref="member" tooltip="Add an element to the end of the collection.">push_back</ref>(<ref refid="de/db1/classConstDataVector_1a5fd314970812a0e01af18df65729d2bd" kindref="member">value_type</ref><sp/>pElem);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/db1/classConstDataVector_1aaad6e69e9afc63551cf6aa9898807a90" kindref="member" tooltip="Add an element to the end of the collection.">emplace_back</ref>(<ref refid="de/db1/classConstDataVector_1a5fd314970812a0e01af18df65729d2bd" kindref="member">value_type</ref><sp/>pElem);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound" tooltip="(Non-const) Iterator class for DataVector/DataList. ">iterator</ref><sp/><ref refid="de/db1/classConstDataVector_1ad6acd17f41c3809ce00ed14aa78e7d80" kindref="member" tooltip="Add a new element to the collection.">insert</ref>(<ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound" tooltip="(Non-const) Iterator class for DataVector/DataList. ">iterator</ref><sp/>position,<sp/><ref refid="de/db1/classConstDataVector_1a5fd314970812a0e01af18df65729d2bd" kindref="member">value_type</ref><sp/>pElem);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound" tooltip="(Non-const) Iterator class for DataVector/DataList. ">iterator</ref><sp/><ref refid="de/db1/classConstDataVector_1a7d0675548e4ee8d8e5cc50960a5b0fc5" kindref="member" tooltip="Add a new element to the collection.">emplace</ref>(<ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound" tooltip="(Non-const) Iterator class for DataVector/DataList. ">iterator</ref><sp/>position,<sp/><ref refid="de/db1/classConstDataVector_1a5fd314970812a0e01af18df65729d2bd" kindref="member">value_type</ref><sp/>pElem);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>InputIterator&gt;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/db1/classConstDataVector_1ad6acd17f41c3809ce00ed14aa78e7d80" kindref="member" tooltip="Add a new element to the collection.">insert</ref>(<ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound" tooltip="(Non-const) Iterator class for DataVector/DataList. ">iterator</ref><sp/>position,<sp/>InputIterator<sp/>first,<sp/>InputIterator<sp/>last);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201100</highlight></codeline>
<codeline lineno="498"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifndef<sp/>__REFLEX__</highlight></codeline>
<codeline lineno="499"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/db1/classConstDataVector_1a83ff6832bd6d52468225dca32c516121" kindref="member" tooltip="Add an element to the end of the collection.">push_back</ref>(std::unique_ptr&lt;const<sp/>base_value_type&gt;<sp/>pElem);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound" tooltip="(Non-const) Iterator class for DataVector/DataList. ">iterator</ref><sp/><ref refid="de/db1/classConstDataVector_1ad6acd17f41c3809ce00ed14aa78e7d80" kindref="member" tooltip="Add a new element to the collection.">insert</ref>(<ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound" tooltip="(Non-const) Iterator class for DataVector/DataList. ">iterator</ref><sp/>position,<sp/>std::unique_ptr&lt;const<sp/>base_value_type&gt;<sp/>pElem);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="524"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/db1/classConstDataVector_1ad6acd17f41c3809ce00ed14aa78e7d80" kindref="member" tooltip="Add a new element to the collection.">insert</ref>(<ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound" tooltip="(Non-const) Iterator class for DataVector/DataList. ">iterator</ref><sp/>position,<sp/>std::initializer_list&lt;value_type&gt;<sp/>l);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="539"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//========================================================================</highlight></codeline>
<codeline lineno="545"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound" tooltip="(Non-const) Iterator class for DataVector/DataList. ">iterator</ref><sp/><ref refid="de/db1/classConstDataVector_1a191b17e706f9efc349510e54b00f8a19" kindref="member" tooltip="Remove element at a given position.">erase</ref>(<ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound" tooltip="(Non-const) Iterator class for DataVector/DataList. ">iterator</ref><sp/>position);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound" tooltip="(Non-const) Iterator class for DataVector/DataList. ">iterator</ref><sp/><ref refid="de/db1/classConstDataVector_1a191b17e706f9efc349510e54b00f8a19" kindref="member" tooltip="Remove element at a given position.">erase</ref>(<ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound" tooltip="(Non-const) Iterator class for DataVector/DataList. ">iterator</ref><sp/>first,<sp/><ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound" tooltip="(Non-const) Iterator class for DataVector/DataList. ">iterator</ref><sp/>last);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/db1/classConstDataVector_1ae8944232be996809a74b641ac20e7aa2" kindref="member" tooltip="Erase all the elements in the collection.">clear</ref>();</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//========================================================================</highlight></codeline>
<codeline lineno="586"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/db1/classConstDataVector_1ae42c031d0522fde4a983f3a8c10328d3" kindref="member" tooltip="Swap this collection with another.">swap</ref>(<ref refid="de/db1/classConstDataVector" kindref="compound" tooltip="DataVector adapter that acts like it holds const pointers.">ConstDataVector</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/db1/classConstDataVector_1af4024a744ff89b92eb8e8a8e60e80d0e" kindref="member" tooltip="Swap the referents of two DataVector iterators.">iter_swap</ref><sp/>(<ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound" tooltip="(Non-const) Iterator class for DataVector/DataList. ">iterator</ref><sp/>a,<sp/><ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound" tooltip="(Non-const) Iterator class for DataVector/DataList. ">iterator</ref><sp/>b);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//========================================================================</highlight></codeline>
<codeline lineno="613"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/db1/classConstDataVector_1a63dd71d02bdefb4cf4501b8d788998bf" kindref="member" tooltip="Swap one element out of the container.">swapElement</ref>(<ref refid="de/db1/classConstDataVector_1a0b7cdd6c8969c3dbdbbb23eabfb4d524" kindref="member" tooltip="Basic types, forwarded from the base.">size_type</ref><sp/>index,<sp/><ref refid="de/db1/classConstDataVector_1a5fd314970812a0e01af18df65729d2bd" kindref="member">value_type</ref><sp/>newElem,<sp/>reference<sp/>oldElem);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/db1/classConstDataVector_1a63dd71d02bdefb4cf4501b8d788998bf" kindref="member" tooltip="Swap one element out of the container.">swapElement</ref>(<ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound" tooltip="(Non-const) Iterator class for DataVector/DataList. ">iterator</ref><sp/>pos,<sp/><ref refid="de/db1/classConstDataVector_1a5fd314970812a0e01af18df65729d2bd" kindref="member">value_type</ref><sp/>newElem,<sp/>reference<sp/>oldElem);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201100</highlight></codeline>
<codeline lineno="657"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifndef<sp/>__REFLEX__</highlight></codeline>
<codeline lineno="658"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/db1/classConstDataVector_1a63dd71d02bdefb4cf4501b8d788998bf" kindref="member" tooltip="Swap one element out of the container.">swapElement</ref>(<ref refid="de/db1/classConstDataVector_1a0b7cdd6c8969c3dbdbbb23eabfb4d524" kindref="member" tooltip="Basic types, forwarded from the base.">size_type</ref><sp/>index,</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;const<sp/>base_value_type&gt;<sp/>newElem,</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;const<sp/>base_value_type&gt;&amp;<sp/>oldElem);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/db1/classConstDataVector_1a63dd71d02bdefb4cf4501b8d788998bf" kindref="member" tooltip="Swap one element out of the container.">swapElement</ref>(<ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound" tooltip="(Non-const) Iterator class for DataVector/DataList. ">iterator</ref><sp/>pos,</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;const<sp/>base_value_type&gt;<sp/>newElem,</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;const<sp/>base_value_type&gt;&amp;<sp/>oldElem);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="705"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="706"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d3/d78/structDV" kindref="compound">DV</ref>*<sp/><ref refid="de/db1/classConstDataVector_1afc25e0985e21c58a97654203aa8c2635" kindref="member" tooltip="Return a pointer to this object, as a const DataVector.">asDataVector</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/db1/classConstDataVector_1a12fe9d9af90d3aa4afbe056fe433a5cc" kindref="member" tooltip="Reset indices / reorder aux data after elements have been permuted.">resortAux</ref><sp/>(<ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound" tooltip="(Non-const) Iterator class for DataVector/DataList. ">iterator</ref><sp/></highlight><highlight class="comment">/*beg*/</highlight><highlight class="normal">,<sp/><ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound" tooltip="(Non-const) Iterator class for DataVector/DataList. ">iterator</ref><sp/></highlight><highlight class="comment">/*end*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/db1/classConstDataVector_1ae8944232be996809a74b641ac20e7aa2" kindref="member" tooltip="Erase all the elements in the collection.">clear</ref><sp/>(<ref refid="dd/d59/namespaceSG_1acd9d1a31242c6243cc1c6fab0fbc7cd8" kindref="member" tooltip="describes the possible element ownership policies (see e.g. DataVector)">SG::OwnershipPolicy</ref><sp/>ownPolicy);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/da5/classSG_1_1AuxVectorBase" kindref="compound" tooltip="Manage index tracking and synchronization of auxiliary data.">SG::AuxVectorBase</ref>&amp;<sp/><ref refid="de/db1/classConstDataVector_1a5d42315073854c68017710bf0134289b" kindref="member" tooltip="Convert to AuxVectorBase.">auxbase</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//========================================================================</highlight></codeline>
<codeline lineno="750"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/db1/classConstDataVector_1ac5c9d1ec571f2c3ab6026ab0b72fe923" kindref="member" tooltip="Vector ordering relation.">operator&lt;  </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/db1/classConstDataVector" kindref="compound" tooltip="DataVector adapter that acts like it holds const pointers.">ConstDataVector</ref>&amp;<sp/>b)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/db1/classConstDataVector_1a66ba01eeef2c5261ea250243dea97cc1" kindref="member" tooltip="Based on operator&amp;lt;.">operator&gt;  </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/db1/classConstDataVector" kindref="compound" tooltip="DataVector adapter that acts like it holds const pointers.">ConstDataVector</ref>&amp;<sp/>b)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/db1/classConstDataVector_1ac9ce62241a1eda0eedb063e3ab3c4ae4" kindref="member" tooltip="Based on operator&amp;lt;.">operator&lt;= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/db1/classConstDataVector" kindref="compound" tooltip="DataVector adapter that acts like it holds const pointers.">ConstDataVector</ref>&amp;<sp/>b)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/db1/classConstDataVector_1a92ccbf552b74b78803c2e1cab7e29b34" kindref="member" tooltip="Based on operator&amp;lt;.">operator&gt;= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/db1/classConstDataVector" kindref="compound" tooltip="DataVector adapter that acts like it holds const pointers.">ConstDataVector</ref>&amp;<sp/>b)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/db1/classConstDataVector_1ac7823edb4c1dce015b3bd63ca32da738" kindref="member" tooltip="Vector equality comparison.">operator== </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/db1/classConstDataVector" kindref="compound" tooltip="DataVector adapter that acts like it holds const pointers.">ConstDataVector</ref>&amp;<sp/>b)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/db1/classConstDataVector_1a7170fcea63b52dd151c3c3f1d20a830e" kindref="member" tooltip="Based on operator==.">operator!= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/db1/classConstDataVector" kindref="compound" tooltip="DataVector adapter that acts like it holds const pointers.">ConstDataVector</ref>&amp;<sp/>b)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//========================================================================</highlight></codeline>
<codeline lineno="797"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d7/d05/classDataModel__detail_1_1ElementProxy" kindref="compound" tooltip="Proxy for lvalue access to DataVector/DataList elements.">DataModel_detail::ElementProxy</ref>&lt;<ref refid="de/db1/classConstDataVector" kindref="compound" tooltip="DataVector adapter that acts like it holds const pointers.">ConstDataVector</ref>&gt;;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test2_assignelement1&lt;ConstDataVector&gt;();</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>assignElement<sp/>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>BaseContainer::iterator<sp/>pos,<sp/><ref refid="de/db1/classConstDataVector_1a5fd314970812a0e01af18df65729d2bd" kindref="member">value_type</ref><sp/>newElem);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201100</highlight></codeline>
<codeline lineno="815"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifndef<sp/>__REFLEX__</highlight></codeline>
<codeline lineno="816"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>assignElement<sp/>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>BaseContainer::iterator<sp/>pos,</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;const<sp/>base_value_type&gt;<sp/>newElem);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="827"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="828"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/>assignBaseElement<sp/>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>BaseContainer::iterator<sp/>pos,</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>BaseContainer::value_type<sp/>newElem);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DV::iterator<sp/>to_base_iterator<sp/>(<ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound" tooltip="(Non-const) Iterator class for DataVector/DataList. ">iterator</ref><sp/>it);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound" tooltip="(Non-const) Iterator class for DataVector/DataList. ">iterator</ref><sp/>to_my_iterator<sp/>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DV::iterator<sp/>it);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><ref refid="d7/d05/classDataModel__detail_1_1ElementProxy" kindref="compound" tooltip="Proxy for lvalue access to DataVector/DataList elements.">ElementProxy</ref><sp/>to_element_proxy<sp/>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>BaseContainer::iterator<sp/>i);</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal">};</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>XAOD_STANDALONE</highlight></codeline>
<codeline lineno="873"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SGTools/ClassID_traits.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DV&gt;</highlight></codeline>
<codeline lineno="881" refid="df/dbb/structClassID__traits_3_01ConstDataVector_3_01DV_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d0/dbd/structClassID__traits" kindref="compound">ClassID_traits</ref>&lt;<ref refid="de/db1/classConstDataVector" kindref="compound" tooltip="DataVector adapter that acts like it holds const pointers.">ConstDataVector</ref>&lt;<ref refid="d3/d78/structDV" kindref="compound">DV</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="d0/dbd/structClassID__traits" kindref="compound">ClassID_traits</ref>&lt;DV&gt;</highlight></codeline>
<codeline lineno="883"><highlight class="normal">{</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/>BOOST_STATIC_CONSTANT(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/>s_isConst<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="886"><highlight class="normal">};</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">SG<sp/>{</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DV&gt;</highlight></codeline>
<codeline lineno="902" refid="d3/d46/classSG_1_1DVLConstDataVectorBucket" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d3/d46/classSG_1_1DVLConstDataVectorBucket" kindref="compound" tooltip="DataBucket class for ConstDataVector.">DVLConstDataVectorBucket</ref></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="d6/d33/classSG_1_1DVLDataBucket" kindref="compound" tooltip="A DataBucket specialized for DataVector/DataList. ">DVLDataBucket</ref>&lt;DV&gt;</highlight></codeline>
<codeline lineno="904"><highlight class="normal">{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><ref refid="d3/d46/classSG_1_1DVLConstDataVectorBucket_1ad3d6d12020a7a71a706f936d78addc4d" kindref="member" tooltip="Constructor from a payload object.">DVLConstDataVectorBucket</ref><sp/>(<ref refid="de/db1/classConstDataVector" kindref="compound" tooltip="DataVector adapter that acts like it holds const pointers.">ConstDataVector&lt;DV&gt;</ref>*<sp/>data);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;<sp/>201100</highlight></codeline>
<codeline lineno="914"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><ref refid="d3/d46/classSG_1_1DVLConstDataVectorBucket_1ad3d6d12020a7a71a706f936d78addc4d" kindref="member" tooltip="Constructor from a payload object.">DVLConstDataVectorBucket</ref><sp/>(std::unique_ptr&lt;<ref refid="de/db1/classConstDataVector" kindref="compound" tooltip="DataVector adapter that acts like it holds const pointers.">ConstDataVector&lt;DV&gt;</ref><sp/>&gt;<sp/>data);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="920"><highlight class="preprocessor"></highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DV,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="931" refid="d6/d86/structSG_1_1DataBucketTrait_3_01ConstDataVector_3_01DV_01_4_00_01U_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">DataBucketTrait&lt;<ref refid="de/db1/classConstDataVector" kindref="compound" tooltip="DataVector adapter that acts like it holds const pointers.">ConstDataVector</ref>&lt;<ref refid="d3/d78/structDV" kindref="compound">DV</ref>&gt;,<sp/>U&gt;</highlight></codeline>
<codeline lineno="932"><highlight class="normal">{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="d3/d46/classSG_1_1DVLConstDataVectorBucket" kindref="compound" tooltip="DataBucket class for ConstDataVector.">SG::DVLConstDataVectorBucket&lt;DV&gt;</ref><sp/><ref refid="d3/d46/classSG_1_1DVLConstDataVectorBucket" kindref="compound" tooltip="DataBucket class for ConstDataVector.">type</ref>;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init()<sp/>{<sp/>DV::dvlinfo();<sp/>}</highlight></codeline>
<codeline lineno="935"><highlight class="normal">};</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DV&gt;</highlight></codeline>
<codeline lineno="943" refid="d4/dc5/classSG_1_1BaseInfo_3_01ConstDataVector_3_01DV_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">BaseInfo&lt;<ref refid="de/db1/classConstDataVector" kindref="compound" tooltip="DataVector adapter that acts like it holds const pointers.">ConstDataVector</ref>&lt;<ref refid="d3/d78/structDV" kindref="compound">DV</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>BaseInfo&lt;DV&gt;</highlight></codeline>
<codeline lineno="945"><highlight class="normal">{</highlight></codeline>
<codeline lineno="946"><highlight class="normal">};</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>SG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>not<sp/>XAOD_STANDALONE</highlight></codeline>
<codeline lineno="953"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d2/d61/ConstDataVector_8icc" kindref="compound" tooltip="DataVector adapter that acts like it holds const pointers.">AthContainers/ConstDataVector.icc</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>not<sp/>ATHCONTAINERS_CONSTDATAVECTOR_H</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/ConstDataVector.h"/>
  </compounddef>
</doxygen>
