<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d2/d32/classxAOD_1_1SCTRawHitValidation__v1" kind="class" prot="public">
    <compoundname>xAOD::SCTRawHitValidation_v1</compoundname>
    <basecompoundref refid="dc/db0/classSG_1_1AuxElement" prot="public" virt="non-virtual">SG::AuxElement</basecompoundref>
    <includes refid="da/d1b/SCTRawHitValidation__v1_8h" local="no">SCTRawHitValidation_v1.h</includes>
      <sectiondef kind="user-defined">
      <description><para><anchor id="_1amgrpd41d8cd98f00b204e9800998ecf8427e"/> </para></description>
      <memberdef kind="function" id="d2/d32/classxAOD_1_1SCTRawHitValidation__v1_1acb5ec99865c2193948f8518502fa2cd1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t xAOD::SCTRawHitValidation_v1::getWord</definition>
        <argsstring>() const </argsstring>
        <name>getWord</name>
        <briefdescription>
<para>return the data word </para>        </briefdescription>
        <detaileddescription>
<para>access data word of this RDO and properties encoded therein </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/SCTRawHitValidation_v1.h" line="34" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/SCTRawHitValidation_v1.cxx" bodystart="16" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="d2/d32/classxAOD_1_1SCTRawHitValidation__v1_1a6d20a87c216c55b5dab82b0d9876fdd4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xAOD::SCTRawHitValidation_v1::getGroupSize</definition>
        <argsstring>() const </argsstring>
        <name>getGroupSize</name>
        <briefdescription>
<para>return number of strips in this RDO (typically just 1) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/SCTRawHitValidation_v1.h" line="37" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/SCTRawHitValidation_v1.cxx" bodystart="21" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="d2/d32/classxAOD_1_1SCTRawHitValidation__v1_1ae32d409876e0988fba85eeb8d636e820" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xAOD::SCTRawHitValidation_v1::getStrip</definition>
        <argsstring>() const </argsstring>
        <name>getStrip</name>
        <briefdescription>
<para>return ID of (first) strip </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/SCTRawHitValidation_v1.h" line="40" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/SCTRawHitValidation_v1.cxx" bodystart="26" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="d2/d32/classxAOD_1_1SCTRawHitValidation__v1_1a3e7b23c24999736a7a6b2ffc29cdfb23" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xAOD::SCTRawHitValidation_v1::getTimeBin</definition>
        <argsstring>() const </argsstring>
        <name>getTimeBin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Decode time bin information for the 3 consecutive bunch crossings.</para><para>This information is stored in 3 bits where the most significant bit corresponds to BC-1. So the 3 bit pattern is: (BC-1), BC, (BC+1). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/SCTRawHitValidation_v1.h" line="47" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/SCTRawHitValidation_v1.cxx" bodystart="31" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="d2/d32/classxAOD_1_1SCTRawHitValidation__v1_1a2221f3b1ca559240e21ed721356d579f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int xAOD::SCTRawHitValidation_v1::getErrors</definition>
        <argsstring>() const </argsstring>
        <name>getErrors</name>
        <briefdescription>
<para>return bitmask representing hit errors </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/SCTRawHitValidation_v1.h" line="50" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/SCTRawHitValidation_v1.cxx" bodystart="36" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="d2/d32/classxAOD_1_1SCTRawHitValidation__v1_1a8b228f796aef12eb4b45d682f2b33d90" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::SCTRawHitValidation_v1::OnTime</definition>
        <argsstring>() const </argsstring>
        <name>OnTime</name>
        <briefdescription>
<para>check if the time bin corresponding to the present BC is on </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/SCTRawHitValidation_v1.h" line="53" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/SCTRawHitValidation_v1.cxx" bodystart="41" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="d2/d32/classxAOD_1_1SCTRawHitValidation__v1_1aac29d30c5da8b1df69a139a43af156ef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::SCTRawHitValidation_v1::FirstHitError</definition>
        <argsstring>() const </argsstring>
        <name>FirstHitError</name>
        <briefdescription>
<para>check if there is an error in the first hit&apos;s data </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/SCTRawHitValidation_v1.h" line="56" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/SCTRawHitValidation_v1.cxx" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="d2/d32/classxAOD_1_1SCTRawHitValidation__v1_1a7f28fc373074372f3a47bfaddad41a79" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::SCTRawHitValidation_v1::SecondHitError</definition>
        <argsstring>() const </argsstring>
        <name>SecondHitError</name>
        <briefdescription>
<para>check if there is an error in the second hit&apos;s data </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/SCTRawHitValidation_v1.h" line="59" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/SCTRawHitValidation_v1.cxx" bodystart="51" bodyend="53"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d2/d32/classxAOD_1_1SCTRawHitValidation__v1_1a14e054d4e01897200084442e9cc14f95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xAOD::SCTRawHitValidation_v1::SCTRawHitValidation_v1</definition>
        <argsstring>()</argsstring>
        <name>SCTRawHitValidation_v1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/SCTRawHitValidation_v1.h" line="19" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/SCTRawHitValidation_v1.cxx" bodystart="7" bodyend="7"/>
      </memberdef>
      <memberdef kind="function" id="d2/d32/classxAOD_1_1SCTRawHitValidation__v1_1aeb70698dac3aa5eb0ddebd8037b0c8cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::SCTRawHitValidation_v1::setIdentifier</definition>
        <argsstring>(uint64_t new_identifier)</argsstring>
        <name>setIdentifier</name>
        <param>
          <type>uint64_t</type>
          <declname>new_identifier</declname>
        </param>
        <briefdescription>
<para>set identifier of this RDO </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/SCTRawHitValidation_v1.h" line="22"/>
      </memberdef>
      <memberdef kind="function" id="d2/d32/classxAOD_1_1SCTRawHitValidation__v1_1ae840519c27a0d0635ce1524b7ce46ea2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t xAOD::SCTRawHitValidation_v1::identifier</definition>
        <argsstring>() const </argsstring>
        <name>identifier</name>
        <briefdescription>
<para>return identifier of this RDO </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/SCTRawHitValidation_v1.h" line="25"/>
      </memberdef>
      <memberdef kind="function" id="d2/d32/classxAOD_1_1SCTRawHitValidation__v1_1aaf919f21cff7c08b0daac2ee179dc4b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::SCTRawHitValidation_v1::setWord</definition>
        <argsstring>(uint32_t new_word)</argsstring>
        <name>setWord</name>
        <param>
          <type>uint32_t</type>
          <declname>new_word</declname>
        </param>
        <briefdescription>
<para>set data word of this RDO </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/SCTRawHitValidation_v1.h" line="28" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/SCTRawHitValidation_v1.cxx" bodystart="12" bodyend="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Class describing an SCT Raw Data Object (RDO).</para><para><simplesect kind="author"><para>Kilian Rosbach &lt;<ulink url="mailto:kilian.rosbach@cern.ch">kilian.rosbach@cern.ch</ulink>&gt; </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="17139">
        <label>SG::IAuxElement</label>
        <link refid="df/dca/classSG_1_1IAuxElement"/>
      </node>
      <node id="17138">
        <label>SG::AuxElement</label>
        <link refid="dc/db0/classSG_1_1AuxElement"/>
        <childnode refid="17139" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17137">
        <label>xAOD::SCTRawHitValidation_v1</label>
        <link refid="d2/d32/classxAOD_1_1SCTRawHitValidation__v1"/>
        <childnode refid="17138" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="17153">
        <label>Internal::rehash_base&lt;Internal::prime_rehash_policy , hashtable&lt;Value , Value , Alloc , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="db/d2b/classInternal_1_1rehash__base"/>
      </node>
      <node id="17154">
        <label>Internal::hash_code_base&lt;Value , Value , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , cache_hash_code&gt;</label>
        <link refid="d0/d2e/classInternal_1_1hash__code__base"/>
      </node>
      <node id="17149">
        <label>xAOD::TVirtualEvent</label>
        <link refid="de/daf/classxAOD_1_1TVirtualEvent"/>
      </node>
      <node id="17158">
        <label>SG::AuxElementData</label>
        <link refid="dc/dfb/classSG_1_1AuxElementData"/>
        <childnode refid="17143" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17152">
        <label>SG::hashtable&lt; Value, Value, Alloc, Internal::identity&lt; Value &gt;, Pred, Hash, Internal::mod_range_hashing, Internal::default_ranged_hash, Internal::prime_rehash_policy, cache_hash_code, true, true &gt;</label>
        <link refid="de/d63/classSG_1_1hashtable"/>
        <childnode refid="17153" relation="public-inheritance">
        </childnode>
        <childnode refid="17154" relation="public-inheritance">
        </childnode>
        <childnode refid="17155" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17147">
        <label>SelectNoInstance</label>
        <link refid="d9/dec/classSelectNoInstance"/>
      </node>
      <node id="17148">
        <label>DataLinkBase</label>
        <link refid="dd/d9d/classDataLinkBase"/>
      </node>
      <node id="17142">
        <label>SG::IAuxElement</label>
        <link refid="df/dca/classSG_1_1IAuxElement"/>
      </node>
      <node id="17145">
        <label>SG::IConstAuxStore</label>
        <link refid="d3/dd5/classSG_1_1IConstAuxStore"/>
      </node>
      <node id="17146">
        <label>DataLink&lt; SG::IConstAuxStore &gt;</label>
        <link refid="da/da2/classDataLink"/>
        <childnode refid="17147" relation="public-inheritance">
        </childnode>
        <childnode refid="17148" relation="public-inheritance">
        </childnode>
        <childnode refid="17149" relation="usage">
          <edgelabel>m_event</edgelabel>
        </childnode>
        <childnode refid="17145" relation="usage">
          <edgelabel>m_object</edgelabel>
        </childnode>
      </node>
      <node id="17144">
        <label>SG::IAuxStore</label>
        <link refid="dc/d05/classSG_1_1IAuxStore"/>
        <childnode refid="17145" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17151">
        <label>SG::unordered_set&lt; Value, Hash, Pred, Alloc, cache_hash_code &gt;</label>
        <link refid="dd/dac/classSG_1_1unordered__set"/>
        <childnode refid="17152" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17155">
        <label>Internal::map_base&lt;Value , Value , Internal::identity&lt; Value &gt; , unique_keys, hashtable&lt;Value , Value , Alloc , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="d1/d54/classInternal_1_1map__base"/>
      </node>
      <node id="17156">
        <label>SG::AuxVectorData::Cache</label>
        <childnode refid="17157" relation="usage">
          <edgelabel>m_cache</edgelabel>
        </childnode>
      </node>
      <node id="17150">
        <label>mutex</label>
      </node>
      <node id="17141">
        <label>SG::AuxElement</label>
        <link refid="dc/db0/classSG_1_1AuxElement"/>
        <childnode refid="17142" relation="public-inheritance">
        </childnode>
        <childnode refid="17143" relation="usage">
          <edgelabel>m_container</edgelabel>
        </childnode>
        <childnode refid="17158" relation="usage">
          <edgelabel>m_privateData</edgelabel>
          <edgelabel>s_privatePlaceholder</edgelabel>
        </childnode>
      </node>
      <node id="17157">
        <label>void</label>
      </node>
      <node id="17143">
        <label>SG::AuxVectorData</label>
        <link refid="db/dd6/classSG_1_1AuxVectorData"/>
        <childnode refid="17144" relation="usage">
          <edgelabel>m_store</edgelabel>
        </childnode>
        <childnode refid="17146" relation="usage">
          <edgelabel>m_constStoreLink</edgelabel>
        </childnode>
        <childnode refid="17145" relation="usage">
          <edgelabel>m_constStore</edgelabel>
        </childnode>
        <childnode refid="17150" relation="usage">
          <edgelabel>m_mutex</edgelabel>
        </childnode>
        <childnode refid="17151" relation="usage">
          <edgelabel>s_emptySet</edgelabel>
        </childnode>
        <childnode refid="17156" relation="usage">
          <edgelabel>m_cache</edgelabel>
          <edgelabel>m_constCache</edgelabel>
          <edgelabel>m_decorCache</edgelabel>
        </childnode>
      </node>
      <node id="17140">
        <label>xAOD::SCTRawHitValidation_v1</label>
        <link refid="d2/d32/classxAOD_1_1SCTRawHitValidation__v1"/>
        <childnode refid="17141" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/SCTRawHitValidation_v1.h" line="17" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/xAODTracking/versions/SCTRawHitValidation_v1.h" bodystart="17" bodyend="61"/>
    <listofallmembers>
      <member refid="dc/db0/classSG_1_1AuxElement_1ace84dc4cbb05aa996bc0bb12ea0580b0" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>auxdata</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a7aaa8e9eb54091ab7ee43bb7c73918e4" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>auxdata</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1acd13909ea46d99e1b502834f133a159c" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>auxdata</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a5279e0349d690c26121f60b5a8778322" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>auxdata</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a1fc119dd13bd2c74f2ce4f2ba19c8898" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>auxdataConst</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1afa20cbd90cdb931e16c2751709e35271" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>auxdataConst</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1af85b897bffef87879e0ed6a58428a60b" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>auxdecor</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a6c8fc3d315a5ec0633e7ae6a2b26a432" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>auxdecor</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1aef247a3ae0d53cd8c4f90702c7501d2f" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>AuxElement</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ac8345167ba85a0788d804a39b8325a36" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>AuxElement</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a127c2c4839333f537cb83ecdc82ad99d" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>clearCache</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a71044a012a37af1bb0b6fab3d3ea1230" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>clearDecorations</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a9004b51bd3619cab56c3d52e290c09b9" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>container</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a45f6f3563f9c8f088e4b840f81103588" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>container</name></member>
      <member refid="d2/d32/classxAOD_1_1SCTRawHitValidation__v1_1aac29d30c5da8b1df69a139a43af156ef" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>FirstHitError</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a607ee93fe8081d2bd3aa1745f0cbbb50" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>getAuxIDs</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a324d8fccbfe274b6ff91d6a19de35caf" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>getConstStore</name></member>
      <member refid="d2/d32/classxAOD_1_1SCTRawHitValidation__v1_1a2221f3b1ca559240e21ed721356d579f" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>getErrors</name></member>
      <member refid="d2/d32/classxAOD_1_1SCTRawHitValidation__v1_1a6d20a87c216c55b5dab82b0d9876fdd4" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>getGroupSize</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1afc4602cf2edeb01c3350367f5985f49b" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>getStore</name></member>
      <member refid="d2/d32/classxAOD_1_1SCTRawHitValidation__v1_1ae32d409876e0988fba85eeb8d636e820" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>getStrip</name></member>
      <member refid="d2/d32/classxAOD_1_1SCTRawHitValidation__v1_1a3e7b23c24999736a7a6b2ffc29cdfb23" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>getTimeBin</name></member>
      <member refid="d2/d32/classxAOD_1_1SCTRawHitValidation__v1_1acb5ec99865c2193948f8518502fa2cd1" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>getWord</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ac4bc75a2f7b1ed984ffae1bba6de58ba" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>hasNonConstStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a2d354faac53b7a003d29c0f7b95f3672" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>hasStore</name></member>
      <member refid="df/dca/classSG_1_1IAuxElement_1afdd6ee3469014a690d257119d34ec598" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>IAuxElement</name></member>
      <member refid="d2/d32/classxAOD_1_1SCTRawHitValidation__v1_1ae840519c27a0d0635ce1524b7ce46ea2" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>identifier</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1aba555afb4547fbe96fbdc4b266f75f16" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>index</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1af727b22ab51f1d848fc3cf59065b99ea" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>isAvailable</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a864fc1dab026cbcf20b2c7e3904b89a4" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>isAvailableWritable</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a5c56e0b548ba0f0fa6eba200defaa44d" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>isAvailableWritableAsDecoration</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a197bf9fc579d49e25a850a4b3a5c14e8" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>makePrivateStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ad2eaf2e38536e93c05aebaf1218516a2" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>makePrivateStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a164f94b3ddbbc773ba8beefdb7cb8677" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>makePrivateStore</name></member>
      <member refid="d2/d32/classxAOD_1_1SCTRawHitValidation__v1_1a8b228f796aef12eb4b45d682f2b33d90" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>OnTime</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a1ecd49ad16cba61c3131046d8e068650" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>operator=</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1aab2f280f3c832e285fe020365bb3ac1e" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>releasePrivateStore</name></member>
      <member refid="d2/d32/classxAOD_1_1SCTRawHitValidation__v1_1a14e054d4e01897200084442e9cc14f95" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>SCTRawHitValidation_v1</name></member>
      <member refid="d2/d32/classxAOD_1_1SCTRawHitValidation__v1_1a7f28fc373074372f3a47bfaddad41a79" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>SecondHitError</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a3079709e44e8ac7452c05454f4994ce9" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>setConstStore</name></member>
      <member refid="d2/d32/classxAOD_1_1SCTRawHitValidation__v1_1aeb70698dac3aa5eb0ddebd8037b0c8cc" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>setIdentifier</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a68b13428943609fd2b56c35c9dec85b3" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>setNonConstStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a57b602d3ec1c0129811375f46c18c049" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>setStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a9cc58e245a417833f297e836d9559a32" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>setStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a4bdca4ef5f1df892b5dc9742644444b8" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>setStore</name></member>
      <member refid="d2/d32/classxAOD_1_1SCTRawHitValidation__v1_1aaf919f21cff7c08b0daac2ee179dc4b6" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>setWord</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a6a154ec406bc6531a348a80e679da31f" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>SG::AuxVectorBase</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a4573c8a5a16556f7a1826c502a8a1577" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>SG::AuxVectorBase_test</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1ad7f08e277b177f9dd74924e7d635034e" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>usingPrivateStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1af97c2ef167b0d66ada327a0ada1015e7" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>usingStandaloneStore</name></member>
      <member refid="dc/db0/classSG_1_1AuxElement_1a0b6a5f12eb826137b6d218f5738bb0b1" prot="public" virt="non-virtual"><scope>xAOD::SCTRawHitValidation_v1</scope><name>~AuxElement</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
