<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d2/dc5/structSH_1_1ScanDir" kind="struct" prot="public">
    <compoundname>SH::ScanDir</compoundname>
    <includes refid="da/d79/ScanDir_8h" local="no">ScanDir.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="d2/dc5/structSH_1_1ScanDir_1aa9bd55e3ec873df498b475cba47e6297" prot="private" static="no">
        <type>std::vector&lt; std::pair&lt; boost::regex, std::string &gt; &gt;::const_iterator</type>
        <definition>typedef std::vector&lt;std::pair&lt;boost::regex,std::string&gt; &gt;::const_iterator SH::ScanDir::SampleRenameIter</definition>
        <argsstring></argsstring>
        <name>SampleRenameIter</name>
        <briefdescription>
<para>the list of entries from <ref refid="d2/dc5/structSH_1_1ScanDir_1ac3edc7b7b2f322d6847434aa34ecbc24" kindref="member">sampleRename</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" line="198" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d2/dc5/structSH_1_1ScanDir_1a5ede9bb0ebb5d675b10d6352c1b5fd5c" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SH::ScanDir::m_relSampleDepth</definition>
        <argsstring></argsstring>
        <name>m_relSampleDepth</name>
        <briefdescription>
<para>if this is negative it is the depth at which we take the sample name, counting from the end </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" line="156" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/dc5/structSH_1_1ScanDir_1a81de1d983a705231c01d5a08fe7552f0" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SH::ScanDir::m_absSampleDepth</definition>
        <argsstring></argsstring>
        <name>m_absSampleDepth</name>
        <briefdescription>
<para>if m_relSampleDepth is not negative, it is the depth at which we take the sample name, counting from the first directory scanned </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" line="162" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/dc5/structSH_1_1ScanDir_1a100056819c4f99cffedc716aec13d8e0" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string SH::ScanDir::m_sampleName</definition>
        <argsstring></argsstring>
        <name>m_sampleName</name>
        <briefdescription>
<para>the value set by <ref refid="d2/dc5/structSH_1_1ScanDir_1a0d9b73cbdb009c694773c1d581f424d7" kindref="member">sampleName</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" line="166" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/dc5/structSH_1_1ScanDir_1acd1151301edb004ce35a60b3c97d4f68" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t SH::ScanDir::m_minDepth</definition>
        <argsstring></argsstring>
        <name>m_minDepth</name>
        <briefdescription>
<para>the value set by <ref refid="d2/dc5/structSH_1_1ScanDir_1a91e1eb4f6cb526f597fcec20dcb9ec8d" kindref="member">minDepth</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" line="170" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/dc5/structSH_1_1ScanDir_1aab41bf42b7ccf780bb3ea3848cbe6d77" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t SH::ScanDir::m_maxDepth</definition>
        <argsstring></argsstring>
        <name>m_maxDepth</name>
        <briefdescription>
<para>the value set by <ref refid="d2/dc5/structSH_1_1ScanDir_1a420bb594b4bd8615e65b0034c50fc970" kindref="member">maxDepth</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" line="174" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/dc5/structSH_1_1ScanDir_1a2aa89c774971d4bb7d85660878009053" prot="private" static="no" mutable="no">
        <type>boost::regex</type>
        <definition>boost::regex SH::ScanDir::m_filePattern</definition>
        <argsstring></argsstring>
        <name>m_filePattern</name>
        <briefdescription>
<para>the value set by <ref refid="d2/dc5/structSH_1_1ScanDir_1addbaa2bf6024c6b3ee2c62e2109aa5e1" kindref="member">filePattern</ref>, converted to a regular expression </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" line="179" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/dc5/structSH_1_1ScanDir_1a264cc3a701c77640e116799f1b3e7b58" prot="private" static="no" mutable="no">
        <type>boost::regex</type>
        <definition>boost::regex SH::ScanDir::m_samplePattern</definition>
        <argsstring></argsstring>
        <name>m_samplePattern</name>
        <briefdescription>
<para>the value set by <ref refid="d2/dc5/structSH_1_1ScanDir_1a1e5d065e08eff91d65b57f11e5b568ac" kindref="member">samplePattern</ref>, converted to a regular expression </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" line="184" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/dc5/structSH_1_1ScanDir_1abee87fc93615b8f6a0af4fc08d5e7301" prot="private" static="no" mutable="no">
        <type>boost::regex</type>
        <definition>boost::regex SH::ScanDir::m_samplePostfix</definition>
        <argsstring></argsstring>
        <name>m_samplePostfix</name>
        <briefdescription>
<para>the value set by <ref refid="d2/dc5/structSH_1_1ScanDir_1a80a6ddba84f300e3b79a11f5904d4317" kindref="member">samplePostfix</ref>, converted to a regular expression </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" line="189" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/dc5/structSH_1_1ScanDir_1a2bf1f35166e59404966bd1f3451b51fa" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SH::ScanDir::m_samplePostfixEmpty</definition>
        <argsstring></argsstring>
        <name>m_samplePostfixEmpty</name>
        <briefdescription>
<para>whether <ref refid="d2/dc5/structSH_1_1ScanDir_1a80a6ddba84f300e3b79a11f5904d4317" kindref="member">samplePostfix</ref> has been set to the empty string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" line="194" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/dc5/structSH_1_1ScanDir_1aea74e612177f8020c07f9dd5bec3ec27" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::pair&lt; boost::regex, std::string &gt; &gt;</type>
        <definition>std::vector&lt;std::pair&lt;boost::regex,std::string&gt; &gt; SH::ScanDir::m_sampleRename</definition>
        <argsstring></argsstring>
        <name>m_sampleRename</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" line="199" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/dc5/structSH_1_1ScanDir_1a65f0708d645f332ace3eaf89fd7ba53d" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SH::ScanDir::m_extraNameComponent</definition>
        <argsstring></argsstring>
        <name>m_extraNameComponent</name>
        <briefdescription>
<para>the depth set with <ref refid="d2/dc5/structSH_1_1ScanDir_1ab9721a276171d2fd22c4b6b48240a145" kindref="member">extraNameComponent</ref>, or 0 otherwise </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" line="203" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d2/dc5/structSH_1_1ScanDir_1ab844853123b53ee7396cebfddac00792" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SH::ScanDir::ScanDir</definition>
        <argsstring>()</argsstring>
        <name>ScanDir</name>
        <briefdescription>
<para>standard constructor </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Guarantee</title><para>strong </para></simplesect>
<simplesect kind="par"><title>Failures</title><para>out of memory I </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" line="52" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/ScanDir.cxx" bodystart="37" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc5/structSH_1_1ScanDir_1aa48ef1ac50bd2c9cf738efda6a2db9ce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d2/dc5/structSH_1_1ScanDir" kindref="compound">ScanDir</ref> &amp;</type>
        <definition>const ScanDir &amp; SH::ScanDir::scan</definition>
        <argsstring>(SampleHandler &amp;sh, const std::string &amp;dir) const </argsstring>
        <name>scan</name>
        <param>
          <type><ref refid="d1/d56/classSH_1_1SampleHandler" kindref="compound">SampleHandler</ref> &amp;</type>
          <declname>sh</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>scan the given directory and put the created samples into the sample handler </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>*this </para></simplesect>
<simplesect kind="par"><title>Guarantee</title><para>basic </para></simplesect>
<simplesect kind="par"><title>Failures</title><para>out of memory III<linebreak/>
 i/o errors<linebreak/>
 duplicate samples </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" line="65" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/ScanDir.cxx" bodystart="153" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc5/structSH_1_1ScanDir_1a3533cd6f2c522352fc8c5de9e359fbe2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d2/dc5/structSH_1_1ScanDir" kindref="compound">ScanDir</ref> &amp;</type>
        <definition>const ScanDir &amp; SH::ScanDir::scanEOS</definition>
        <argsstring>(SampleHandler &amp;sh, const std::string &amp;eosDir) const </argsstring>
        <name>scanEOS</name>
        <param>
          <type><ref refid="d1/d56/classSH_1_1SampleHandler" kindref="compound">SampleHandler</ref> &amp;</type>
          <declname>sh</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>eosDir</declname>
        </param>
        <briefdescription>
<para>scan the given directory in EOS and put the created samples into the sample handler </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>*this </para></simplesect>
<simplesect kind="par"><title>Guarantee</title><para>basic </para></simplesect>
<simplesect kind="par"><title>Failures</title><para>out of memory III<linebreak/>
 i/o errors<linebreak/>
 duplicate samples </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" line="78" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/ScanDir.cxx" bodystart="163" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc5/structSH_1_1ScanDir_1a0aa4c9a9061a0a9558e09f1942f31a09" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d2/dc5/structSH_1_1ScanDir" kindref="compound">ScanDir</ref> &amp;</type>
        <definition>const ScanDir &amp; SH::ScanDir::scan</definition>
        <argsstring>(SampleHandler &amp;sh, DiskList &amp;list) const </argsstring>
        <name>scan</name>
        <param>
          <type><ref refid="d1/d56/classSH_1_1SampleHandler" kindref="compound">SampleHandler</ref> &amp;</type>
          <declname>sh</declname>
        </param>
        <param>
          <type><ref refid="d1/d5b/classSH_1_1DiskList" kindref="compound">DiskList</ref> &amp;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><copydoc link="scan"><para>scan the given directory and put the created samples into the sample handler </para><para><simplesect kind="return"><para>*this </para></simplesect>
<simplesect kind="par"><title>Guarantee</title><para>basic </para></simplesect>
<simplesect kind="par"><title>Failures</title><para>out of memory III<linebreak/>
 i/o errors<linebreak/>
 duplicate samples </para></simplesect>
</para></copydoc>
 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" line="83" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/ScanDir.cxx" bodystart="173" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc5/structSH_1_1ScanDir_1a287c575885cd94a34654a6b6a606c1f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dc5/structSH_1_1ScanDir" kindref="compound">ScanDir</ref> &amp;</type>
        <definition>ScanDir &amp; SH::ScanDir::sampleDepth</definition>
        <argsstring>(int val_sampleDepth)</argsstring>
        <name>sampleDepth</name>
        <param>
          <type>int</type>
          <declname>val_sampleDepth</declname>
        </param>
        <briefdescription>
<para>the index of the file hierarchy at which we gather the sample name. </para>        </briefdescription>
        <detaileddescription>
<para>this is positive when it starts counting from the top, and negative when it starts from the back, i.e. -1 uses the file name, 0 denotes the directory inside the top level directory </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" line="93" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/ScanDir.cxx" bodystart="50" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc5/structSH_1_1ScanDir_1a9338e48c522e1e11e1b5b04bfdbde13f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dc5/structSH_1_1ScanDir" kindref="compound">ScanDir</ref> &amp;</type>
        <definition>ScanDir &amp; SH::ScanDir::absSampleDepth</definition>
        <argsstring>(int val_absSampleDepth)</argsstring>
        <name>absSampleDepth</name>
        <param>
          <type>int</type>
          <declname>val_absSampleDepth</declname>
        </param>
        <briefdescription>
<para>the index of the file hierarchy at which we gather the sample name. </para>        </briefdescription>
        <detaileddescription>
<para>this differs from <ref refid="d2/dc5/structSH_1_1ScanDir_1a287c575885cd94a34654a6b6a606c1f2" kindref="member">sampleDepth</ref> in that negative numbers count up in the directory hierarchy from the top of where we scan, while <ref refid="d2/dc5/structSH_1_1ScanDir_1a287c575885cd94a34654a6b6a606c1f2" kindref="member">sampleDepth</ref> starts counting from the back if the number is negative. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" line="103" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/ScanDir.cxx" bodystart="60" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc5/structSH_1_1ScanDir_1a0d9b73cbdb009c694773c1d581f424d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dc5/structSH_1_1ScanDir" kindref="compound">ScanDir</ref> &amp;</type>
        <definition>ScanDir &amp; SH::ScanDir::sampleName</definition>
        <argsstring>(const std::string &amp;val_sampleName)</argsstring>
        <name>sampleName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>val_sampleName</declname>
        </param>
        <briefdescription>
<para>a single sample name into which all found files should be placed. if set, this overrides all other naming methods. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" line="108" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/ScanDir.cxx" bodystart="70" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc5/structSH_1_1ScanDir_1a91e1eb4f6cb526f597fcec20dcb9ec8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dc5/structSH_1_1ScanDir" kindref="compound">ScanDir</ref> &amp;</type>
        <definition>ScanDir &amp; SH::ScanDir::minDepth</definition>
        <argsstring>(std::size_t val_minDepth)</argsstring>
        <name>minDepth</name>
        <param>
          <type>std::size_t</type>
          <declname>val_minDepth</declname>
        </param>
        <briefdescription>
<para>the minimum depth for files to make it into the sample </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" line="112" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/ScanDir.cxx" bodystart="79" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc5/structSH_1_1ScanDir_1a420bb594b4bd8615e65b0034c50fc970" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dc5/structSH_1_1ScanDir" kindref="compound">ScanDir</ref> &amp;</type>
        <definition>ScanDir &amp; SH::ScanDir::maxDepth</definition>
        <argsstring>(std::size_t val_maxDepth)</argsstring>
        <name>maxDepth</name>
        <param>
          <type>std::size_t</type>
          <declname>val_maxDepth</declname>
        </param>
        <briefdescription>
<para>the maximum depth for files to make it into the sample </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" line="116" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/ScanDir.cxx" bodystart="88" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc5/structSH_1_1ScanDir_1addbaa2bf6024c6b3ee2c62e2109aa5e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dc5/structSH_1_1ScanDir" kindref="compound">ScanDir</ref> &amp;</type>
        <definition>ScanDir &amp; SH::ScanDir::filePattern</definition>
        <argsstring>(const std::string &amp;val_filePattern)</argsstring>
        <name>filePattern</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>val_filePattern</declname>
        </param>
        <briefdescription>
<para>the pattern for files to be accepted </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>filePatternRegex </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" line="121" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/ScanDir.cxx" bodystart="97" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc5/structSH_1_1ScanDir_1a5093257c0c80d5be95d449ede79e979a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dc5/structSH_1_1ScanDir" kindref="compound">ScanDir</ref> &amp;</type>
        <definition>ScanDir &amp; SH::ScanDir::fileRegex</definition>
        <argsstring>(const std::string &amp;val_fileRegex)</argsstring>
        <name>fileRegex</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>val_fileRegex</declname>
        </param>
        <briefdescription>
<para>the regular expression for files to be accepted </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="d2/dc5/structSH_1_1ScanDir_1addbaa2bf6024c6b3ee2c62e2109aa5e1" kindref="member">filePattern</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" line="126" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/ScanDir.cxx" bodystart="106" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc5/structSH_1_1ScanDir_1a1e5d065e08eff91d65b57f11e5b568ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dc5/structSH_1_1ScanDir" kindref="compound">ScanDir</ref> &amp;</type>
        <definition>ScanDir &amp; SH::ScanDir::samplePattern</definition>
        <argsstring>(const std::string &amp;val_samplePattern)</argsstring>
        <name>samplePattern</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>val_samplePattern</declname>
        </param>
        <briefdescription>
<para>the pattern for samples to be accepted </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" line="130" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/ScanDir.cxx" bodystart="115" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc5/structSH_1_1ScanDir_1a80a6ddba84f300e3b79a11f5904d4317" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dc5/structSH_1_1ScanDir" kindref="compound">ScanDir</ref> &amp;</type>
        <definition>ScanDir &amp; SH::ScanDir::samplePostfix</definition>
        <argsstring>(const std::string &amp;val_samplePostfix)</argsstring>
        <name>samplePostfix</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>val_samplePostfix</declname>
        </param>
        <briefdescription>
<para>the pattern for the postfix to be stripped from the sampleName </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" line="135" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/ScanDir.cxx" bodystart="124" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc5/structSH_1_1ScanDir_1ac3edc7b7b2f322d6847434aa34ecbc24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dc5/structSH_1_1ScanDir" kindref="compound">ScanDir</ref> &amp;</type>
        <definition>ScanDir &amp; SH::ScanDir::sampleRename</definition>
        <argsstring>(const std::string &amp;pattern, const std::string &amp;name)</argsstring>
        <name>sampleRename</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>rename any sample matching pattern to name </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" line="139" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/ScanDir.cxx" bodystart="134" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc5/structSH_1_1ScanDir_1ab9721a276171d2fd22c4b6b48240a145" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dc5/structSH_1_1ScanDir" kindref="compound">ScanDir</ref> &amp;</type>
        <definition>ScanDir &amp; SH::ScanDir::extraNameComponent</definition>
        <argsstring>(int val_relSampleDepth)</argsstring>
        <name>extraNameComponent</name>
        <param>
          <type>int</type>
          <declname>val_relSampleDepth</declname>
        </param>
        <briefdescription>
<para>attach an extra name component to the sample based on a second component of the path </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>val_relSampleDepth != 0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" line="145" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/ScanDir.cxx" bodystart="143" bodyend="148"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d2/dc5/structSH_1_1ScanDir_1ae4f95e327b04a6368051d31fbfcaba63" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SH::ScanDir::recurse</definition>
        <argsstring>(std::map&lt; std::string, SamplePtr &gt; &amp;samples, DiskList &amp;list, const std::vector&lt; std::string &gt; &amp;hierarchy) const </argsstring>
        <name>recurse</name>
        <param>
          <type>std::map&lt; std::string, <ref refid="d8/d8a/classSH_1_1SamplePtr" kindref="compound">SamplePtr</ref> &gt; &amp;</type>
          <declname>samples</declname>
        </param>
        <param>
          <type><ref refid="d1/d5b/classSH_1_1DiskList" kindref="compound">DiskList</ref> &amp;</type>
          <declname>list</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>hierarchy</declname>
        </param>
        <briefdescription>
<para>perform the recursive scanning of the directory tree </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Guarantee</title><para>basic </para></simplesect>
<simplesect kind="par"><title>Failures</title><para>out of memory III<linebreak/>
 i/o errors </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" line="214" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/ScanDir.cxx" bodystart="195" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc5/structSH_1_1ScanDir_1a4f4864d24ac523370129053f0f7e8ff2" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SH::ScanDir::addSampleFile</definition>
        <argsstring>(std::map&lt; std::string, SamplePtr &gt; &amp;samples, const std::vector&lt; std::string &gt; &amp;hierarchy, const std::string &amp;path) const </argsstring>
        <name>addSampleFile</name>
        <param>
          <type>std::map&lt; std::string, <ref refid="d8/d8a/classSH_1_1SamplePtr" kindref="compound">SamplePtr</ref> &gt; &amp;</type>
          <declname>samples</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>hierarchy</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>add the given file to the sample based on the hierarchy, creating the sample if necessary </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Guarantee</title><para>basic </para></simplesect>
<simplesect kind="par"><title>Failures</title><para>out of memory II </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" line="226" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/ScanDir.cxx" bodystart="226" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc5/structSH_1_1ScanDir_1a0ba5a14ce1119346b9b31cef78b40531" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string SH::ScanDir::findPathComponent</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;hierarchy, int absSampleDepth, int relSampleDepth) const </argsstring>
        <name>findPathComponent</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>hierarchy</declname>
        </param>
        <param>
          <type>int</type>
          <declname>absSampleDepth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>relSampleDepth</declname>
        </param>
        <briefdescription>
<para>find the path component at the given depth </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the path componenent, or NULL if it doesn&apos;t exist </para></simplesect>
<simplesect kind="par"><title>Guarantee</title><para>strong </para></simplesect>
<simplesect kind="par"><title>Failures</title><para>out of memory II </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" line="239" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/Root/ScanDir.cxx" bodystart="300" bodyend="344"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>the class used for scanning local directories and file servers for samples </para>    </briefdescription>
    <detaileddescription>
<para>Originally these was a series of stand-alone function calls, but people kept asking for more and more options, making it unwieldy to call and to maintain. Instead we now have a single class containing all the possible parameters, which makes it easier to configure and extend.</para><para>The member functions all return *this, so that usage like this is possible: <programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><ref refid="d2/dc5/structSH_1_1ScanDir_1ab844853123b53ee7396cebfddac00792" kindref="member" tooltip="standard constructor">ScanDir</ref>()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>.filePattern<sp/>(</highlight><highlight class="stringliteral">&quot;*.root*&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>.scan<sp/>(sh,<sp/></highlight><highlight class="stringliteral">&quot;/data&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <collaborationgraph>
      <node id="17112">
        <label>string</label>
      </node>
      <node id="17111">
        <label>SH::ScanDir</label>
        <link refid="d2/dc5/structSH_1_1ScanDir"/>
        <childnode refid="17112" relation="usage">
          <edgelabel>m_sampleName</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" line="41" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/SampleHandler/ScanDir.h" bodystart="40" bodyend="240"/>
    <listofallmembers>
      <member refid="d2/dc5/structSH_1_1ScanDir_1a9338e48c522e1e11e1b5b04bfdbde13f" prot="public" virt="non-virtual"><scope>SH::ScanDir</scope><name>absSampleDepth</name></member>
      <member refid="d2/dc5/structSH_1_1ScanDir_1a4f4864d24ac523370129053f0f7e8ff2" prot="private" virt="non-virtual"><scope>SH::ScanDir</scope><name>addSampleFile</name></member>
      <member refid="d2/dc5/structSH_1_1ScanDir_1ab9721a276171d2fd22c4b6b48240a145" prot="public" virt="non-virtual"><scope>SH::ScanDir</scope><name>extraNameComponent</name></member>
      <member refid="d2/dc5/structSH_1_1ScanDir_1addbaa2bf6024c6b3ee2c62e2109aa5e1" prot="public" virt="non-virtual"><scope>SH::ScanDir</scope><name>filePattern</name></member>
      <member refid="d2/dc5/structSH_1_1ScanDir_1a5093257c0c80d5be95d449ede79e979a" prot="public" virt="non-virtual"><scope>SH::ScanDir</scope><name>fileRegex</name></member>
      <member refid="d2/dc5/structSH_1_1ScanDir_1a0ba5a14ce1119346b9b31cef78b40531" prot="private" virt="non-virtual"><scope>SH::ScanDir</scope><name>findPathComponent</name></member>
      <member refid="d2/dc5/structSH_1_1ScanDir_1a81de1d983a705231c01d5a08fe7552f0" prot="private" virt="non-virtual"><scope>SH::ScanDir</scope><name>m_absSampleDepth</name></member>
      <member refid="d2/dc5/structSH_1_1ScanDir_1a65f0708d645f332ace3eaf89fd7ba53d" prot="private" virt="non-virtual"><scope>SH::ScanDir</scope><name>m_extraNameComponent</name></member>
      <member refid="d2/dc5/structSH_1_1ScanDir_1a2aa89c774971d4bb7d85660878009053" prot="private" virt="non-virtual"><scope>SH::ScanDir</scope><name>m_filePattern</name></member>
      <member refid="d2/dc5/structSH_1_1ScanDir_1aab41bf42b7ccf780bb3ea3848cbe6d77" prot="private" virt="non-virtual"><scope>SH::ScanDir</scope><name>m_maxDepth</name></member>
      <member refid="d2/dc5/structSH_1_1ScanDir_1acd1151301edb004ce35a60b3c97d4f68" prot="private" virt="non-virtual"><scope>SH::ScanDir</scope><name>m_minDepth</name></member>
      <member refid="d2/dc5/structSH_1_1ScanDir_1a5ede9bb0ebb5d675b10d6352c1b5fd5c" prot="private" virt="non-virtual"><scope>SH::ScanDir</scope><name>m_relSampleDepth</name></member>
      <member refid="d2/dc5/structSH_1_1ScanDir_1a100056819c4f99cffedc716aec13d8e0" prot="private" virt="non-virtual"><scope>SH::ScanDir</scope><name>m_sampleName</name></member>
      <member refid="d2/dc5/structSH_1_1ScanDir_1a264cc3a701c77640e116799f1b3e7b58" prot="private" virt="non-virtual"><scope>SH::ScanDir</scope><name>m_samplePattern</name></member>
      <member refid="d2/dc5/structSH_1_1ScanDir_1abee87fc93615b8f6a0af4fc08d5e7301" prot="private" virt="non-virtual"><scope>SH::ScanDir</scope><name>m_samplePostfix</name></member>
      <member refid="d2/dc5/structSH_1_1ScanDir_1a2bf1f35166e59404966bd1f3451b51fa" prot="private" virt="non-virtual"><scope>SH::ScanDir</scope><name>m_samplePostfixEmpty</name></member>
      <member refid="d2/dc5/structSH_1_1ScanDir_1aea74e612177f8020c07f9dd5bec3ec27" prot="private" virt="non-virtual"><scope>SH::ScanDir</scope><name>m_sampleRename</name></member>
      <member refid="d2/dc5/structSH_1_1ScanDir_1a420bb594b4bd8615e65b0034c50fc970" prot="public" virt="non-virtual"><scope>SH::ScanDir</scope><name>maxDepth</name></member>
      <member refid="d2/dc5/structSH_1_1ScanDir_1a91e1eb4f6cb526f597fcec20dcb9ec8d" prot="public" virt="non-virtual"><scope>SH::ScanDir</scope><name>minDepth</name></member>
      <member refid="d2/dc5/structSH_1_1ScanDir_1ae4f95e327b04a6368051d31fbfcaba63" prot="private" virt="non-virtual"><scope>SH::ScanDir</scope><name>recurse</name></member>
      <member refid="d2/dc5/structSH_1_1ScanDir_1a287c575885cd94a34654a6b6a606c1f2" prot="public" virt="non-virtual"><scope>SH::ScanDir</scope><name>sampleDepth</name></member>
      <member refid="d2/dc5/structSH_1_1ScanDir_1a0d9b73cbdb009c694773c1d581f424d7" prot="public" virt="non-virtual"><scope>SH::ScanDir</scope><name>sampleName</name></member>
      <member refid="d2/dc5/structSH_1_1ScanDir_1a1e5d065e08eff91d65b57f11e5b568ac" prot="public" virt="non-virtual"><scope>SH::ScanDir</scope><name>samplePattern</name></member>
      <member refid="d2/dc5/structSH_1_1ScanDir_1a80a6ddba84f300e3b79a11f5904d4317" prot="public" virt="non-virtual"><scope>SH::ScanDir</scope><name>samplePostfix</name></member>
      <member refid="d2/dc5/structSH_1_1ScanDir_1ac3edc7b7b2f322d6847434aa34ecbc24" prot="public" virt="non-virtual"><scope>SH::ScanDir</scope><name>sampleRename</name></member>
      <member refid="d2/dc5/structSH_1_1ScanDir_1aa9bd55e3ec873df498b475cba47e6297" prot="private" virt="non-virtual"><scope>SH::ScanDir</scope><name>SampleRenameIter</name></member>
      <member refid="d2/dc5/structSH_1_1ScanDir_1aa48ef1ac50bd2c9cf738efda6a2db9ce" prot="public" virt="non-virtual"><scope>SH::ScanDir</scope><name>scan</name></member>
      <member refid="d2/dc5/structSH_1_1ScanDir_1a0aa4c9a9061a0a9558e09f1942f31a09" prot="public" virt="non-virtual"><scope>SH::ScanDir</scope><name>scan</name></member>
      <member refid="d2/dc5/structSH_1_1ScanDir_1ab844853123b53ee7396cebfddac00792" prot="public" virt="non-virtual"><scope>SH::ScanDir</scope><name>ScanDir</name></member>
      <member refid="d2/dc5/structSH_1_1ScanDir_1a3533cd6f2c522352fc8c5de9e359fbe2" prot="public" virt="non-virtual"><scope>SH::ScanDir</scope><name>scanEOS</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
