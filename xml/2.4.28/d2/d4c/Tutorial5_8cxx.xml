<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d2/d4c/Tutorial5_8cxx" kind="file">
    <compoundname>Tutorial5.cxx</compoundname>
    <includes refid="dd/d0f/APReweightND_8h" local="yes">APReweightND.h</includes>
    <includes refid="d5/d5c/APWeightEntry_8h" local="yes">APWeightEntry.h</includes>
    <includes refid="da/d15/APEvtWeight_8h" local="yes">APEvtWeight.h</includes>
    <includes refid="d9/d4c/APWeightSum_8h" local="yes">APWeightSum.h</includes>
    <includes local="yes">TH2D.h</includes>
    <includes local="yes">TStyle.h</includes>
    <includes local="yes">THnSparse.h</includes>
    <includes local="yes">TCanvas.h</includes>
    <includes local="yes">TROOT.h</includes>
    <includes local="yes">TFile.h</includes>
    <includes local="yes">TBranch.h</includes>
    <includes local="yes">TTree.h</includes>
    <includes local="no">vector</includes>
    <includes local="no">iostream</includes>
    <includes local="no">cmath</includes>
    <includes local="no">cstdlib</includes>
    <includes local="yes">TRandom3.h</includes>
    <incdepgraph>
      <node id="263338">
        <label>THnSparse.h</label>
      </node>
      <node id="263328">
        <label>APReweightBase.h</label>
        <link refid="d3/d99/APReweightBase_8h_source"/>
        <childnode refid="263329" relation="include">
        </childnode>
      </node>
      <node id="263345">
        <label>cmath</label>
      </node>
      <node id="263332">
        <label>APWeightEntry.h</label>
        <link refid="d5/d5c/APWeightEntry_8h_source"/>
        <childnode refid="263333" relation="include">
        </childnode>
      </node>
      <node id="263336">
        <label>TH2D.h</label>
      </node>
      <node id="263331">
        <label>map</label>
      </node>
      <node id="263337">
        <label>TStyle.h</label>
      </node>
      <node id="263340">
        <label>TROOT.h</label>
      </node>
      <node id="263334">
        <label>APEvtWeight.h</label>
        <link refid="da/d15/APEvtWeight_8h_source"/>
        <childnode refid="263329" relation="include">
        </childnode>
        <childnode refid="263330" relation="include">
        </childnode>
      </node>
      <node id="263330">
        <label>vector</label>
      </node>
      <node id="263341">
        <label>TFile.h</label>
      </node>
      <node id="263339">
        <label>TCanvas.h</label>
      </node>
      <node id="263327">
        <label>APReweightND.h</label>
        <link refid="dd/d0f/APReweightND_8h_source"/>
        <childnode refid="263328" relation="include">
        </childnode>
        <childnode refid="263330" relation="include">
        </childnode>
        <childnode refid="263331" relation="include">
        </childnode>
      </node>
      <node id="263333">
        <label>Rtypes.h</label>
      </node>
      <node id="263335">
        <label>APWeightSum.h</label>
        <link refid="d9/d4c/APWeightSum_8h_source"/>
        <childnode refid="263329" relation="include">
        </childnode>
        <childnode refid="263334" relation="include">
        </childnode>
        <childnode refid="263330" relation="include">
        </childnode>
      </node>
      <node id="263346">
        <label>cstdlib</label>
      </node>
      <node id="263344">
        <label>iostream</label>
      </node>
      <node id="263329">
        <label>TNamed.h</label>
      </node>
      <node id="263326">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/ReweightUtils/test/Tutorial5/Tutorial5.cxx</label>
        <link refid="Tutorial5.cxx"/>
        <childnode refid="263327" relation="include">
        </childnode>
        <childnode refid="263332" relation="include">
        </childnode>
        <childnode refid="263334" relation="include">
        </childnode>
        <childnode refid="263335" relation="include">
        </childnode>
        <childnode refid="263336" relation="include">
        </childnode>
        <childnode refid="263337" relation="include">
        </childnode>
        <childnode refid="263338" relation="include">
        </childnode>
        <childnode refid="263339" relation="include">
        </childnode>
        <childnode refid="263340" relation="include">
        </childnode>
        <childnode refid="263341" relation="include">
        </childnode>
        <childnode refid="263342" relation="include">
        </childnode>
        <childnode refid="263343" relation="include">
        </childnode>
        <childnode refid="263330" relation="include">
        </childnode>
        <childnode refid="263344" relation="include">
        </childnode>
        <childnode refid="263345" relation="include">
        </childnode>
        <childnode refid="263346" relation="include">
        </childnode>
        <childnode refid="263347" relation="include">
        </childnode>
      </node>
      <node id="263342">
        <label>TBranch.h</label>
      </node>
      <node id="263343">
        <label>TTree.h</label>
      </node>
      <node id="263347">
        <label>TRandom3.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="d2/d4c/Tutorial5_8cxx_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/ReweightUtils/test/Tutorial5/Tutorial5.cxx" line="21" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/ReweightUtils/test/Tutorial5/Tutorial5.cxx" bodystart="21" bodyend="232"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;APReweightND.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;APWeightEntry.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;APEvtWeight.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;APWeightSum.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TH2D.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TStyle.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;THnSparse.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TCanvas.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TROOT.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TFile.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TBranch.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TTree.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TRandom3.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//=============<sp/>Initialize<sp/>===================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>gROOT-&gt;ProcessLine(</highlight><highlight class="stringliteral">&quot;#include<sp/>&lt;vector&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>gROOT-&gt;SetStyle(</highlight><highlight class="stringliteral">&quot;Plain&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>gStyle-&gt;SetPalette(1);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>gStyle-&gt;SetOptStat(0);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>gStyle-&gt;SetOptTitle(0);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>gStyle-&gt;SetPadTopMargin(0.09);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>gStyle-&gt;SetPadLeftMargin(0.12);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>gStyle-&gt;SetTitleYOffset(1.55);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>want<sp/>to<sp/>set<sp/>your<sp/>own<sp/>random<sp/>seed<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>TRandom3<sp/>rndm(0<sp/>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Define<sp/>variables<sp/>for<sp/>logging<sp/>and<sp/>output:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>vector&lt;int&gt;<sp/>configuration(16,<sp/>0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vector<sp/>for<sp/>dilepton<sp/>events:<sp/>each<sp/>index<sp/>holds<sp/>on<sp/>set<sp/>of<sp/>trigger<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPassDilepTrig<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>number<sp/>of<sp/>events<sp/>passing<sp/>the<sp/>asymmetric<sp/>dilepton<sp/>trigger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>SumOfWeights<sp/>=<sp/>0.;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>sum<sp/>of<sp/>weights<sp/>for<sp/>each<sp/>ensemble.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>open<sp/>the<sp/>output<sp/>file<sp/>and<sp/>create<sp/>the<sp/>output<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>TFile<sp/>*OUT<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TFile(<sp/></highlight><highlight class="stringliteral">&quot;ensembles.root&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;RECREATE&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>TTree<sp/>*tOUT<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TTree(<sp/></highlight><highlight class="stringliteral">&quot;ensembles&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;ensembles&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>tOUT<sp/>-&gt;<sp/>Branch(<sp/></highlight><highlight class="stringliteral">&quot;passes&quot;</highlight><highlight class="normal">,<sp/>&amp;nPassDilepTrig<sp/>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>tOUT<sp/>-&gt;<sp/>Branch(<sp/></highlight><highlight class="stringliteral">&quot;weightSum&quot;</highlight><highlight class="normal">,<sp/>&amp;SumOfWeights<sp/>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>configuration.size();<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>name[100];</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(<sp/>name,<sp/></highlight><highlight class="stringliteral">&quot;config_%i&quot;</highlight><highlight class="normal">,<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>tOUT<sp/>-&gt;<sp/>Branch(<sp/>name,<sp/>&amp;configuration.at(i)<sp/>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nToys<sp/>=<sp/>(argc<sp/>&gt;<sp/>1<sp/>)<sp/>?<sp/>atoi(argv[1])<sp/>:<sp/>1.e5;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>/<sp/>read<sp/>the<sp/>values<sp/>for<sp/>the<sp/>number<sp/>of<sp/>Toy<sp/>Events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nLeptons<sp/>=<sp/>(argc<sp/>&gt;<sp/>2<sp/>)<sp/>?<sp/>atoi(argv[2])<sp/>:<sp/>2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>lepton<sp/>multipilcity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nEnsemble<sp/>=<sp/>(argc<sp/>&gt;<sp/>3<sp/>)<sp/>?<sp/>atoi(argv[3])<sp/>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>number<sp/>of<sp/>ensembles<sp/>to<sp/>be<sp/>run</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Load<sp/>the<sp/>trigger<sp/>maps<sp/>for<sp/>the<sp/>asymmetric<sp/>dilepton<sp/>trigger<sp/>and<sp/>setup<sp/>the<sp/>APReweightND<sp/>instances</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>TFile<sp/>*fTrig<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TFile(<sp/></highlight><highlight class="stringliteral">&quot;../Common/AsymmetricTriggerMaps.root&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//absolute<sp/>efficiency<sp/>of<sp/>first<sp/>leg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>THnSparseD*<sp/>leg1Pass<sp/>=<sp/>(THnSparseD*)fTrig<sp/>-&gt;<sp/>Get(<sp/></highlight><highlight class="stringliteral">&quot;ths_leg1_abs_num&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>THnSparseD*<sp/>leg1All<sp/>=<sp/>(THnSparseD*)fTrig<sp/>-&gt;<sp/>Get(<sp/></highlight><highlight class="stringliteral">&quot;ths_leg1_abs_den&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//absolute<sp/>efficiency<sp/>of<sp/>second<sp/>leg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>THnSparseD*<sp/>leg2Pass<sp/>=<sp/>(THnSparseD*)fTrig<sp/>-&gt;<sp/>Get(<sp/></highlight><highlight class="stringliteral">&quot;ths_leg2_abs_num&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>THnSparseD*<sp/>leg2All<sp/>=<sp/>(THnSparseD*)fTrig<sp/>-&gt;<sp/>Get(<sp/></highlight><highlight class="stringliteral">&quot;ths_leg2_abs_den&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//efficiency<sp/>of<sp/>second<sp/>leg<sp/>under<sp/>the<sp/>condition<sp/>that<sp/>the<sp/>first<sp/>leg<sp/>did<sp/>fire</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>THnSparseD*<sp/>leg2PassCondPass<sp/>=<sp/>(THnSparseD*)fTrig<sp/>-&gt;<sp/>Get(<sp/></highlight><highlight class="stringliteral">&quot;ths_leg2_condPass_num&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>THnSparseD*<sp/>leg2AllCondPass<sp/>=<sp/>(THnSparseD*)fTrig<sp/>-&gt;<sp/>Get(<sp/></highlight><highlight class="stringliteral">&quot;ths_leg2_condPass_den&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//efficiency<sp/>of<sp/>the<sp/>second<sp/>leg<sp/>under<sp/>the<sp/>condition<sp/>that<sp/>the<sp/>first<sp/>leg<sp/>did<sp/>not<sp/>fire</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>THnSparseD*<sp/>leg2PassCondFail<sp/>=<sp/>(THnSparseD*)fTrig<sp/>-&gt;<sp/>Get(<sp/></highlight><highlight class="stringliteral">&quot;ths_leg2_condFail_num&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>THnSparseD*<sp/>leg2AllCondFail<sp/>=<sp/>(THnSparseD*)fTrig<sp/>-&gt;<sp/>Get(<sp/></highlight><highlight class="stringliteral">&quot;ths_leg2_condFail_den&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><ref refid="d9/dc5/classAPReweightND" kindref="compound">APReweightND</ref><sp/>*rwleg1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d9/dc5/classAPReweightND" kindref="compound">APReweightND</ref>(<sp/>leg1All,<sp/>leg1Pass,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="d9/dc5/classAPReweightND" kindref="compound">APReweightND</ref><sp/>*rwleg2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d9/dc5/classAPReweightND" kindref="compound">APReweightND</ref>(<sp/>leg2All,<sp/>leg2Pass,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><ref refid="d9/dc5/classAPReweightND" kindref="compound">APReweightND</ref><sp/>*rwleg2p<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d9/dc5/classAPReweightND" kindref="compound">APReweightND</ref>(<sp/>leg2AllCondPass,<sp/>leg2PassCondPass,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="d9/dc5/classAPReweightND" kindref="compound">APReweightND</ref><sp/>*rwleg2f<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d9/dc5/classAPReweightND" kindref="compound">APReweightND</ref>(<sp/>leg2AllCondFail,<sp/>leg2PassCondFail,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Loop<sp/>over<sp/>all<sp/>ensembles<sp/>requested</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ENS<sp/>=<sp/>0;<sp/>ENS<sp/>&lt;<sp/>nEnsemble;<sp/>++ENS<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>each<sp/>ensemble,<sp/>create<sp/>a<sp/>new<sp/>APWeightSum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d06/classAPWeightSum" kindref="compound">APWeightSum</ref><sp/>*weightSum<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d8/d06/classAPWeightSum" kindref="compound">APWeightSum</ref>();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PROCESSSING<sp/>ENSEMBLE<sp/>#&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ENS<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>saved<sp/>trigger<sp/>states<sp/>for<sp/>dilepton<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>configuration.size();<sp/>++i<sp/>)<sp/>{configuration.at(i)<sp/>=<sp/>0;}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>number<sp/>of<sp/>passing<sp/>events<sp/>and<sp/>weight<sp/>sum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>SumOfWeights<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>nPassDilepTrig<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>tree<sp/>holding<sp/>the<sp/>randomly<sp/>created<sp/>leptons;<sp/>old<sp/>data<sp/>is<sp/>deleted,<sp/>only<sp/>the<sp/>data<sp/>for<sp/>the<sp/>last<sp/>ensemble<sp/>is<sp/>stored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>TFile<sp/>*fData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TFile(<sp/></highlight><highlight class="stringliteral">&quot;pseudoData.root&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;RECREATE&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>TTree<sp/>*tree<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TTree(<sp/></highlight><highlight class="stringliteral">&quot;data&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;data&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;float&gt;<sp/>*pt<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>vector&lt;float&gt;;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;float&gt;<sp/>*eta<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>vector&lt;float&gt;;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;float&gt;<sp/>*phi<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>vector&lt;float&gt;;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;float&gt;<sp/>*comb<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>vector&lt;float&gt;;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;float&gt;<sp/>*iso<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>vector&lt;float&gt;;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;int&gt;<sp/>*passLeg1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>vector&lt;int&gt;;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;int&gt;<sp/>*passLeg2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>vector&lt;int&gt;;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>tree<sp/>-&gt;<sp/>Branch(<sp/></highlight><highlight class="stringliteral">&quot;pt&quot;</highlight><highlight class="normal">,<sp/>&amp;pt<sp/>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>tree<sp/>-&gt;<sp/>Branch(<sp/></highlight><highlight class="stringliteral">&quot;eta&quot;</highlight><highlight class="normal">,<sp/>&amp;eta<sp/>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>tree<sp/>-&gt;<sp/>Branch(<sp/></highlight><highlight class="stringliteral">&quot;phi&quot;</highlight><highlight class="normal">,<sp/>&amp;phi<sp/>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>tree<sp/>-&gt;<sp/>Branch(<sp/></highlight><highlight class="stringliteral">&quot;comb&quot;</highlight><highlight class="normal">,<sp/>&amp;comb<sp/>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>tree<sp/>-&gt;<sp/>Branch(<sp/></highlight><highlight class="stringliteral">&quot;iso&quot;</highlight><highlight class="normal">,<sp/>&amp;iso<sp/>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>tree<sp/>-&gt;<sp/>Branch(<sp/></highlight><highlight class="stringliteral">&quot;leg1&quot;</highlight><highlight class="normal">,<sp/>&amp;passLeg1<sp/>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>tree<sp/>-&gt;<sp/>Branch(<sp/></highlight><highlight class="stringliteral">&quot;leg2&quot;</highlight><highlight class="normal">,<sp/>&amp;passLeg2<sp/>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>loop<sp/>over<sp/>the<sp/>number<sp/>of<sp/>toy<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>analysis,<sp/>this<sp/>would<sp/>be<sp/>the<sp/>event<sp/>loop!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nToys;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>delete<sp/>data<sp/>from<sp/>last<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pt<sp/>-&gt;<sp/>clear();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eta<sp/>-&gt;<sp/>clear();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>phi<sp/>-&gt;<sp/>clear();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>comb<sp/>-&gt;<sp/>clear();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iso<sp/>-&gt;<sp/>clear();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>passLeg1<sp/>-&gt;<sp/>clear();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>passLeg2<sp/>-&gt;<sp/>clear();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//setup<sp/>vector<sp/>for<sp/>lepton<sp/>properties,<sp/>and<sp/>APEvtWeight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double*&gt;<sp/>props;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setup<sp/>the<sp/>APEvtWeight:<sp/>For<sp/>demonstration,<sp/>we<sp/>chose<sp/>muons;<sp/>can<sp/>be<sp/>kDiElectron/kDiJet/kDiTau<sp/>as<sp/>well!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d7f/classAPEvtWeight" kindref="compound">APEvtWeight</ref><sp/>weight(APEvtWeight::kDiMuon);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>loop<sp/>over<sp/>all<sp/>leptons<sp/>in<sp/>the<sp/>event.<sp/>We<sp/>assume<sp/>all<sp/>leptons<sp/>have<sp/>the<sp/>same<sp/>flavour,<sp/>i.e.<sp/>muons<sp/>in<sp/>this<sp/>example.<sp/>Do<sp/>this<sp/>seperately<sp/>for<sp/>muons<sp/>and<sp/>electrons!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>nLeptons;<sp/>++j<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pt<sp/>-&gt;<sp/>push_back(<sp/>rndm.Uniform(0.,<sp/>100000.)<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>random<sp/>pt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eta<sp/>-&gt;<sp/>push_back(<sp/>rndm.Uniform(<sp/>-2.4,<sp/>2.4<sp/>)<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>random<sp/>eta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi<sp/>-&gt;<sp/>push_back(<sp/>rndm.Uniform(<sp/>-M_PI,<sp/>M_PI<sp/>));<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>random<sp/>phi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comb<sp/>-&gt;<sp/>push_back(<sp/>1.0<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>combined<sp/>muon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iso<sp/>-&gt;<sp/>push_back(<sp/>0.0<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>isolated<sp/>muon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>props_i[]<sp/>=<sp/>{<sp/>(*pt)[j],<sp/>(*eta)[j],<sp/>(*phi)[j],<sp/>(*comb)[j],<sp/>(*iso)[j]<sp/>};</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>each<sp/>lepton<sp/>four<sp/>times,<sp/>each<sp/>time<sp/>with<sp/>a<sp/>different<sp/>efficiency!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>note<sp/>the<sp/>order!<sp/>it<sp/>is<sp/>important!<sp/>wrong<sp/>order<sp/>will<sp/>result<sp/>in<sp/>a<sp/>wrong<sp/>weight!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight.AddWeightToEvt(rwleg1-&gt;<ref refid="d9/dc5/classAPReweightND_1acffa64bae6d55a24135ab079475bfc65" kindref="member">GetWeight</ref>(props_i));<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>absolute<sp/>probability<sp/>that<sp/>lepton<sp/>#i<sp/>passes<sp/>the<sp/>first<sp/>leg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight.AddWeightToEvt(rwleg2-&gt;<ref refid="d9/dc5/classAPReweightND_1acffa64bae6d55a24135ab079475bfc65" kindref="member">GetWeight</ref>(props_i));<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>absoltue<sp/>probability<sp/>that<sp/>lepton<sp/>#i<sp/>passes<sp/>the<sp/>second<sp/>leg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight.AddWeightToEvt(rwleg2f-&gt;<ref refid="d9/dc5/classAPReweightND_1acffa64bae6d55a24135ab079475bfc65" kindref="member">GetWeight</ref>(props_i));<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>probability<sp/>that<sp/>lepton<sp/>#i<sp/>passes<sp/>the<sp/>second<sp/>leg<sp/>given<sp/>that<sp/>it<sp/>did<sp/>NOT<sp/>pass<sp/>the<sp/>first<sp/>leg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight.AddWeightToEvt(rwleg2p-&gt;<ref refid="d9/dc5/classAPReweightND_1acffa64bae6d55a24135ab079475bfc65" kindref="member">GetWeight</ref>(props_i));<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>probability<sp/>that<sp/>lepton<sp/>#i<sp/>passes<sp/>the<sp/>second<sp/>leg<sp/>given<sp/>that<sp/>it<sp/>did<sp/>pass<sp/>the<sp/>first<sp/>leg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//In<sp/>a<sp/>standard<sp/>analysis,<sp/>you<sp/>would<sp/>be<sp/>DONE<sp/>here!<sp/>The<sp/>following<sp/>is<sp/>only<sp/>for<sp/>the<sp/>ensemble<sp/>test!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>throw<sp/>a<sp/>random<sp/>number<sp/>according<sp/>to<sp/>the<sp/>efficiencies<sp/>associated<sp/>to<sp/>this<sp/>lepton<sp/>to<sp/>decide<sp/>if<sp/>it<sp/>passes<sp/>a<sp/>trigger,<sp/>or<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>props.push_back(props_i);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bins[5];</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>binsCond[5];</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>5;<sp/>++k<sp/>)<sp/>{<sp/>bins[k]<sp/>=<sp/>leg1Pass<sp/>-&gt;<sp/>GetAxis(k)<sp/>-&gt;<sp/>FindFixBin(<sp/>props_i[k]);<sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>5;<sp/>++k<sp/>)<sp/>{<sp/>binsCond[k]<sp/>=<sp/>leg2PassCondPass<sp/>-&gt;<sp/>GetAxis(k)<sp/>-&gt;<sp/>FindFixBin(<sp/>props_i[k]);<sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>the<sp/>efficiencies<sp/>associated<sp/>to<sp/>the<sp/>lepton</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eff1<sp/>=<sp/>(double)leg1Pass<sp/>-&gt;<sp/>GetBinContent(<sp/>bins<sp/>)/(double)leg1All<sp/>-&gt;<sp/>GetBinContent(<sp/>bins<sp/>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eff2p<sp/>=<sp/>(double)leg2PassCondPass<sp/>-&gt;<sp/>GetBinContent(<sp/>binsCond<sp/>)/(double)leg2AllCondPass<sp/>-&gt;<sp/>GetBinContent(<sp/>binsCond<sp/>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eff2f<sp/>=<sp/>(double)leg2PassCondFail<sp/>-&gt;<sp/>GetBinContent(<sp/>binsCond<sp/>)/(double)leg2AllCondFail<sp/>-&gt;<sp/>GetBinContent(<sp/>binsCond<sp/>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print<sp/>some<sp/>efficiencies<sp/>of<sp/>wanted<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;have<sp/>&quot;<sp/>&lt;&lt;<sp/>eff1<sp/>&lt;&lt;<sp/>&quot;<sp/>and<sp/>&quot;<sp/>&lt;&lt;<sp/>eff2p<sp/>&lt;&lt;<sp/>&quot;<sp/>and<sp/>&quot;<sp/>&lt;&lt;<sp/>eff2f<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>randomly<sp/>get<sp/>a<sp/>boolean<sp/>trigger<sp/>decision:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>passLeg1<sp/>-&gt;<sp/>push_back(<sp/>(rndm.Uniform(0.,<sp/>1.)<sp/>&lt;=<sp/>eff1)<sp/>?<sp/>1<sp/>:<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(*passLeg1)[j]<sp/>==<sp/>0<sp/>)<sp/>passLeg2<sp/>-&gt;<sp/>push_back(<sp/>(rndm.Uniform(0.,1.)<sp/>&lt;=<sp/>eff2f)<sp/>?<sp/>1<sp/>:<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(*passLeg1)[j]<sp/>==<sp/>1<sp/>)<sp/>passLeg2<sp/>-&gt;<sp/>push_back(<sp/>(rndm.Uniform(0.,1.)<sp/>&lt;=<sp/>eff2p)<sp/>?<sp/>1<sp/>:<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>loop<sp/>over<sp/>leptons<sp/>is<sp/>done.<sp/>now<sp/>check<sp/>how<sp/>many<sp/>passed<sp/>the<sp/>trigger<sp/>in<sp/>the<sp/>&apos;trigger<sp/>simulation&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pass<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>trigger-bit<sp/>configuration;<sp/>this<sp/>is<sp/>for<sp/>logging<sp/>for<sp/>dilepton<sp/>events<sp/>only<sp/>and<sp/>can<sp/>be<sp/>ignored<sp/>at<sp/>this<sp/>point!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;int&gt;<sp/>bits;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bits.push_back(<sp/>(*passLeg2)[1]<sp/>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bits.push_back(<sp/>(*passLeg1)[1]<sp/>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bits.push_back(<sp/>(*passLeg2)[0]<sp/>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bits.push_back(<sp/>(*passLeg1)[0]<sp/>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>config<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>4;<sp/>++j<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config<sp/>+=<sp/>bits.at(j)*pow(<sp/>2,<sp/>j<sp/>);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>configuration.at(config)<sp/>+=<sp/>1;<sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>count<sp/>how<sp/>many<sp/>different<sp/>leptons<sp/>have<sp/>passed<sp/>the<sp/>trigger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>one<sp/>lepton<sp/>issued<sp/>the<sp/>first<sp/>leg;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>one<sp/>lepton<sp/>issued<sp/>the<sp/>first<sp/>leg,<sp/>check<sp/>if<sp/>a<sp/>different<sp/>second<sp/>lepton<sp/>issued<sp/>the<sp/>second<sp/>leg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>yes,<sp/>event<sp/>passes<sp/>the<sp/>trigger;<sp/>if<sp/>not,<sp/>event<sp/>is<sp/>rejected;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>nLeptons;<sp/>++j<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(*passLeg1)[j]<sp/>==<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>nLeptons;<sp/>++k<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>k<sp/>==<sp/>j<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(*passLeg2)[k]<sp/>==<sp/>1<sp/>)<sp/>pass<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pass<sp/>)<sp/>nPassDilepTrig<sp/>+=<sp/>1;<sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>finally<sp/>add<sp/>weight<sp/>to<sp/>sum<sp/>of<sp/>weights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SumOfWeights<sp/>+=<sp/>weight.GetWeight();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>weightSum-&gt;<ref refid="d8/d06/classAPWeightSum_1a42f58413ffef3016cd7591788d083a5c" kindref="member">AddEvt</ref>(<sp/>&amp;weight<sp/>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>event<sp/>output<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tree<sp/>-&gt;<sp/>Fill();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cleanup<sp/>and<sp/>saving</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>weightSum;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>tree<sp/>-&gt;<sp/>Write();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>tree;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>fData<sp/>-&gt;<sp/>Close();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>fTrig<sp/>-&gt;<sp/>Close();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pt;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>eta;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>phi;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>comb;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>iso;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>passLeg1;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>passLeg2;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>state<sp/>some<sp/>general<sp/>information:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;got<sp/>sum<sp/>of<sp/>weights<sp/><sp/>:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>SumOfWeights<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;events<sp/>passing<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nPassDilepTrig<sp/>&lt;&lt;<sp/>endl;<sp/></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;=========&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printout<sp/>the<sp/>fraction<sp/>of<sp/>the<sp/>individual<sp/>trigger<sp/>states</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/><sp/><sp/><sp/>for(<sp/>unsigned<sp/>int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>configuration.size();<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;\t<sp/>config<sp/>#&quot;<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/>have<sp/><sp/>&quot;<sp/>&lt;&lt;<sp/>(double)configuration.at(i)/(double)nToys<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>tOUT<sp/>-&gt;<sp/>Fill();</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>gDirectory<sp/>=<sp/>OUT;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>tOUT<sp/>-&gt;<sp/>Write();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>tOUT;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>OUT<sp/>-&gt;<sp/>Close();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/ReweightUtils/test/Tutorial5/Tutorial5.cxx"/>
  </compounddef>
</doxygen>
