<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d2/d68/classSG_1_1AuxVectorData_1_1Cache" kind="class" prot="private">
    <compoundname>SG::AuxVectorData::Cache</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="d2/d68/classSG_1_1AuxVectorData_1_1Cache_1a0be78f69482c732e94fdf1d5705dd7ae" prot="public" static="no" mutable="no">
        <type>void **</type>
        <definition>void** SG::AuxVectorData::Cache::m_cache[2]</definition>
        <argsstring>[2]</argsstring>
        <name>m_cache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the cache vector. The two pointers here are the same; see the thread-safety discussion in the file header above. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorData.h" line="741" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorData.h" bodystart="741" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d68/classSG_1_1AuxVectorData_1_1Cache_1a659866eabd0f928f8eb2710e880493c0" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t SG::AuxVectorData::Cache::m_cache_len</definition>
        <argsstring></argsstring>
        <name>m_cache_len</name>
        <briefdescription>
<para>Length of the cache vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorData.h" line="744" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorData.h" bodystart="744" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d68/classSG_1_1AuxVectorData_1_1Cache_1a14a51cce528445a59557879ec6509b57" prot="public" static="no" mutable="no">
        <type>std::vector&lt; void ** &gt;</type>
        <definition>std::vector&lt;void**&gt; SG::AuxVectorData::Cache::m_allcache</definition>
        <argsstring></argsstring>
        <name>m_allcache</name>
        <briefdescription>
<para>All cache vectors that have been allocated. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorData.h" line="750" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorData.h" bodystart="750" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d2/d68/classSG_1_1AuxVectorData_1_1Cache_1abb915afec0f85371d1806e96cf2ee296" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SG::AuxVectorData::Cache::Cache</definition>
        <argsstring>()</argsstring>
        <name>Cache</name>
        <briefdescription>
<para>Cache manager constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorData.h" line="630" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/AuxVectorData.cxx" bodystart="399" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="d2/d68/classSG_1_1AuxVectorData_1_1Cache_1afc27bfaa4c205226aebe8b1afb1bb6df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SG::AuxVectorData::Cache::~Cache</definition>
        <argsstring>()</argsstring>
        <name>~Cache</name>
        <briefdescription>
<para>Cache manager destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorData.h" line="652" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/AuxVectorData.cxx" bodystart="447" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="d2/d68/classSG_1_1AuxVectorData_1_1Cache_1ab805094c82c38e8deef7cdf2ca8bf9fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>void * SG::AuxVectorData::Cache::cachePtr</definition>
        <argsstring>(SG::auxid_t auxid)</argsstring>
        <name>cachePtr</name>
        <param>
          <type><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member">SG::auxid_t</ref></type>
          <declname>auxid</declname>
        </param>
        <briefdescription>
<para>Test to see if <computeroutput>auxid</computeroutput> is valid in the cache. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>If <computeroutput>auxid</computeroutput> is valid, return the pointer to the vector, else 0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorData.h" line="659" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorData.icc" bodystart="340" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="d2/d68/classSG_1_1AuxVectorData_1_1Cache_1ab28bdfed3a6d338d9a484bb8b13efc99" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>void * SG::AuxVectorData::Cache::getDataArray</definition>
        <argsstring>(SG::auxid_t auxid, AuxVectorData &amp;parent)</argsstring>
        <name>getDataArray</name>
        <param>
          <type><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member">SG::auxid_t</ref></type>
          <declname>auxid</declname>
        </param>
        <param>
          <type><ref refid="db/dd6/classSG_1_1AuxVectorData" kindref="compound">AuxVectorData</ref> &amp;</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
<para>Return a pointer to the start of an aux data vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>auxid</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired aux data item. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>The containing <computeroutput><ref refid="db/dd6/classSG_1_1AuxVectorData" kindref="compound">AuxVectorData</ref></computeroutput> object.</para></parameterdescription>
</parameteritem>
</parameterlist>
This will return a pointer to the start of the data for aux data item <computeroutput>auxid</computeroutput>. If the item doesn&apos;t exist, it will be created. Errors are signaled by raising an exception. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorData.h" line="671" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorData.icc" bodystart="371" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="d2/d68/classSG_1_1AuxVectorData_1_1Cache_1abecc933f62a80664f752f55248156a90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const void *</type>
        <definition>const void * SG::AuxVectorData::Cache::getDataArray</definition>
        <argsstring>(SG::auxid_t auxid, const AuxVectorData &amp;parent)</argsstring>
        <name>getDataArray</name>
        <param>
          <type><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member">SG::auxid_t</ref></type>
          <declname>auxid</declname>
        </param>
        <param>
          <type>const <ref refid="db/dd6/classSG_1_1AuxVectorData" kindref="compound">AuxVectorData</ref> &amp;</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
<para>Return a const pointer to the start of an aux data vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>auxid</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired aux data item. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>The containing <computeroutput><ref refid="db/dd6/classSG_1_1AuxVectorData" kindref="compound">AuxVectorData</ref></computeroutput> object.</para></parameterdescription>
</parameteritem>
</parameterlist>
This will return a pointer to the start of the data for aux data item <computeroutput>auxid</computeroutput>. Errors are signaled by raising an exception. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorData.h" line="683" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorData.icc" bodystart="405" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="d2/d68/classSG_1_1AuxVectorData_1_1Cache_1a3741a1effbfcc156da9b694d5fac97a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const void *</type>
        <definition>const void * SG::AuxVectorData::Cache::getDataArrayAllowMissing</definition>
        <argsstring>(SG::auxid_t auxid, const AuxVectorData &amp;parent)</argsstring>
        <name>getDataArrayAllowMissing</name>
        <param>
          <type><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member">SG::auxid_t</ref></type>
          <declname>auxid</declname>
        </param>
        <param>
          <type>const <ref refid="db/dd6/classSG_1_1AuxVectorData" kindref="compound">AuxVectorData</ref> &amp;</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
<para>Return a const pointer to the start of an aux data vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>auxid</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired aux data item. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>The containing <computeroutput><ref refid="db/dd6/classSG_1_1AuxVectorData" kindref="compound">AuxVectorData</ref></computeroutput> object.</para></parameterdescription>
</parameteritem>
</parameterlist>
This will return a pointer to the start of the data for aux data item <computeroutput>auxid</computeroutput>. If the item does not exist, this will return nullptr rather than raising an exception. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorData.h" line="696" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorData.icc" bodystart="439" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="d2/d68/classSG_1_1AuxVectorData_1_1Cache_1a359e3cfe9b29012f13371efe420f4751" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>void * SG::AuxVectorData::Cache::getDecorationArray</definition>
        <argsstring>(SG::auxid_t auxid, const AuxVectorData &amp;parent)</argsstring>
        <name>getDecorationArray</name>
        <param>
          <type><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member">SG::auxid_t</ref></type>
          <declname>auxid</declname>
        </param>
        <param>
          <type>const <ref refid="db/dd6/classSG_1_1AuxVectorData" kindref="compound">AuxVectorData</ref> &amp;</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
<para>Return a pointer to the start of an aux decoration vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>auxid</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired aux decoration item. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>The containing <computeroutput><ref refid="db/dd6/classSG_1_1AuxVectorData" kindref="compound">AuxVectorData</ref></computeroutput> object.</para></parameterdescription>
</parameteritem>
</parameterlist>
This will return a pointer to the start of the data for aux decoration item <computeroutput>auxid</computeroutput>. If the item doesn&apos;t exist, it will be created. Errors are signaled by raising an exception.</para><para>The difference between <computeroutput>getDecorationArray</computeroutput> and <computeroutput>getDataArray</computeroutput> is that <computeroutput>getDecorationArray</computeroutput> takes a const container as input, but returns a non-const pointer. This will only succeed if either the container is not locked or the item was first accessed as a decoration. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorData.h" line="714" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorData.icc" bodystart="468" bodyend="488"/>
      </memberdef>
      <memberdef kind="function" id="d2/d68/classSG_1_1AuxVectorData_1_1Cache_1a71b802fe1ce410376e26e38f72a64e51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SG::AuxVectorData::Cache::swap</definition>
        <argsstring>(Cache &amp;other)</argsstring>
        <name>swap</name>
        <param>
          <type>Cache &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Swap this cache object with another. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The cache object with which to swap. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorData.h" line="721" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/AuxVectorData.cxx" bodystart="457" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="d2/d68/classSG_1_1AuxVectorData_1_1Cache_1ae629e4ed1ea41853f536fb48051a4e58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SG::AuxVectorData::Cache::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
<para>Clear the cache (and free allocated memory). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorData.h" line="727" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/AuxVectorData.cxx" bodystart="468" bodyend="475"/>
      </memberdef>
      <memberdef kind="function" id="d2/d68/classSG_1_1AuxVectorData_1_1Cache_1af54addca4bcdf7c5c09a9a04577472ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SG::AuxVectorData::Cache::store</definition>
        <argsstring>(SG::auxid_t auxid, void *ptr)</argsstring>
        <name>store</name>
        <param>
          <type><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member">SG::auxid_t</ref></type>
          <declname>auxid</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Store a pointer for <computeroutput>auxid</computeroutput> in the cache. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>auxid</parametername>
</parameternamelist>
<parameterdescription>
<para>The aux data item being stored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the start of the aux vector for <computeroutput>auxid</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorData.h" line="735" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/AuxVectorData.cxx" bodystart="483" bodyend="512"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d2/d68/classSG_1_1AuxVectorData_1_1Cache_1a16a45256cee6a1541cb43466fe432dc0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SG::AuxVectorData::Cache::Cache</definition>
        <argsstring>(const Cache &amp;)</argsstring>
        <name>Cache</name>
        <param>
          <type>const Cache &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorData.h" line="754"/>
      </memberdef>
      <memberdef kind="function" id="d2/d68/classSG_1_1AuxVectorData_1_1Cache_1a4320f3f68477ce9e8dc15aaeebf40cca" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Cache &amp;</type>
        <definition>Cache&amp; SG::AuxVectorData::Cache::operator=</definition>
        <argsstring>(const Cache &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const Cache &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorData.h" line="755"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Manage cache of pointers to aux element vectors. </para>    </briefdescription>
    <detaileddescription>
<para>See the thread-safety comments at the start of this file for notes on what&apos;s going on here. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="2846">
        <label>SG::AuxVectorData::Cache</label>
        <childnode refid="2847" relation="usage">
          <edgelabel>m_cache</edgelabel>
        </childnode>
      </node>
      <node id="2847">
        <label>void</label>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorData.h" line="625" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorData.h" bodystart="624" bodyend="756"/>
    <listofallmembers>
      <member refid="d2/d68/classSG_1_1AuxVectorData_1_1Cache_1abb915afec0f85371d1806e96cf2ee296" prot="public" virt="non-virtual"><scope>SG::AuxVectorData::Cache</scope><name>Cache</name></member>
      <member refid="d2/d68/classSG_1_1AuxVectorData_1_1Cache_1a16a45256cee6a1541cb43466fe432dc0" prot="private" virt="non-virtual"><scope>SG::AuxVectorData::Cache</scope><name>Cache</name></member>
      <member refid="d2/d68/classSG_1_1AuxVectorData_1_1Cache_1ab805094c82c38e8deef7cdf2ca8bf9fc" prot="public" virt="non-virtual"><scope>SG::AuxVectorData::Cache</scope><name>cachePtr</name></member>
      <member refid="d2/d68/classSG_1_1AuxVectorData_1_1Cache_1ae629e4ed1ea41853f536fb48051a4e58" prot="public" virt="non-virtual"><scope>SG::AuxVectorData::Cache</scope><name>clear</name></member>
      <member refid="d2/d68/classSG_1_1AuxVectorData_1_1Cache_1ab28bdfed3a6d338d9a484bb8b13efc99" prot="public" virt="non-virtual"><scope>SG::AuxVectorData::Cache</scope><name>getDataArray</name></member>
      <member refid="d2/d68/classSG_1_1AuxVectorData_1_1Cache_1abecc933f62a80664f752f55248156a90" prot="public" virt="non-virtual"><scope>SG::AuxVectorData::Cache</scope><name>getDataArray</name></member>
      <member refid="d2/d68/classSG_1_1AuxVectorData_1_1Cache_1a3741a1effbfcc156da9b694d5fac97a3" prot="public" virt="non-virtual"><scope>SG::AuxVectorData::Cache</scope><name>getDataArrayAllowMissing</name></member>
      <member refid="d2/d68/classSG_1_1AuxVectorData_1_1Cache_1a359e3cfe9b29012f13371efe420f4751" prot="public" virt="non-virtual"><scope>SG::AuxVectorData::Cache</scope><name>getDecorationArray</name></member>
      <member refid="d2/d68/classSG_1_1AuxVectorData_1_1Cache_1a14a51cce528445a59557879ec6509b57" prot="public" virt="non-virtual"><scope>SG::AuxVectorData::Cache</scope><name>m_allcache</name></member>
      <member refid="d2/d68/classSG_1_1AuxVectorData_1_1Cache_1a0be78f69482c732e94fdf1d5705dd7ae" prot="public" virt="non-virtual"><scope>SG::AuxVectorData::Cache</scope><name>m_cache</name></member>
      <member refid="d2/d68/classSG_1_1AuxVectorData_1_1Cache_1a659866eabd0f928f8eb2710e880493c0" prot="public" virt="non-virtual"><scope>SG::AuxVectorData::Cache</scope><name>m_cache_len</name></member>
      <member refid="d2/d68/classSG_1_1AuxVectorData_1_1Cache_1a4320f3f68477ce9e8dc15aaeebf40cca" prot="private" virt="non-virtual"><scope>SG::AuxVectorData::Cache</scope><name>operator=</name></member>
      <member refid="d2/d68/classSG_1_1AuxVectorData_1_1Cache_1af54addca4bcdf7c5c09a9a04577472ad" prot="public" virt="non-virtual"><scope>SG::AuxVectorData::Cache</scope><name>store</name></member>
      <member refid="d2/d68/classSG_1_1AuxVectorData_1_1Cache_1a71b802fe1ce410376e26e38f72a64e51" prot="public" virt="non-virtual"><scope>SG::AuxVectorData::Cache</scope><name>swap</name></member>
      <member refid="d2/d68/classSG_1_1AuxVectorData_1_1Cache_1afc27bfaa4c205226aebe8b1afb1bb6df" prot="public" virt="non-virtual"><scope>SG::AuxVectorData::Cache</scope><name>~Cache</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
