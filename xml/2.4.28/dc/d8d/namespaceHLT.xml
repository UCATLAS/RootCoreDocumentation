<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="dc/d8d/namespaceHLT" kind="namespace">
    <compoundname>HLT</compoundname>
    <innerclass refid="d9/d4e/classHLT_1_1TypedHolder_3_01TrigRoiDescriptor_00_01TrigRoiDescriptorCollection_01_4" prot="public">HLT::TypedHolder&lt; TrigRoiDescriptor, TrigRoiDescriptorCollection &gt;</innerclass>
    <innerclass refid="d8/d7d/classHLT_1_1BaseHolder" prot="public">HLT::BaseHolder</innerclass>
    <innerclass refid="db/d54/classHLT_1_1ComboIteratorBase" prot="public">HLT::ComboIteratorBase</innerclass>
    <innerclass refid="d2/dda/classHLT_1_1ComboIterator" prot="public">HLT::ComboIterator</innerclass>
    <innerclass refid="d7/d6b/classHLT_1_1ComboIteratorTopo" prot="public">HLT::ComboIteratorTopo</innerclass>
    <innerclass refid="d8/d94/structHLT_1_1ITrigHolderFactory" prot="public">HLT::ITrigHolderFactory</innerclass>
    <innerclass refid="de/d28/classHLT_1_1StandaloneNavigation" prot="public">HLT::StandaloneNavigation</innerclass>
    <innerclass refid="dd/db8/classHLT_1_1TriggerElement" prot="public">HLT::TriggerElement</innerclass>
    <innerclass refid="d2/de9/classHLT_1_1TriggerElementFactory" prot="public">HLT::TriggerElementFactory</innerclass>
    <innerclass refid="da/d94/classHLT_1_1TrigHolderStructure" prot="public">HLT::TrigHolderStructure</innerclass>
    <innerclass refid="d9/d08/classHLT_1_1TrigNavStructure" prot="public">HLT::TrigNavStructure</innerclass>
    <innerclass refid="d3/d2b/classHLT_1_1TypedHolder" prot="public">HLT::TypedHolder</innerclass>
    <innerclass refid="d1/de7/classHLT_1_1TypelessHolder" prot="public">HLT::TypelessHolder</innerclass>
    <innerclass refid="dd/d69/classHLT_1_1Chain" prot="public">HLT::Chain</innerclass>
    <innerclass refid="d6/dbd/structHLT_1_1Action" prot="public">HLT::Action</innerclass>
    <innerclass refid="d0/d42/structHLT_1_1Reason" prot="public">HLT::Reason</innerclass>
    <innerclass refid="d8/d34/structHLT_1_1SteeringInternalReason" prot="public">HLT::SteeringInternalReason</innerclass>
    <innerclass refid="d0/d9e/classHLT_1_1ErrorCode" prot="public">HLT::ErrorCode</innerclass>
    <innerclass refid="d4/d14/classHLT_1_1HLTExtraData" prot="public">HLT::HLTExtraData</innerclass>
    <innerclass refid="d9/d4b/classHLT_1_1HLTResult" prot="public">HLT::HLTResult</innerclass>
    <innerclass refid="d3/dc8/classHLT_1_1RobRequestInfo" prot="public">HLT::RobRequestInfo</innerclass>
    <innernamespace refid="dd/d72/namespaceHLT_1_1StringSerializer">HLT::StringSerializer</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="dc/d8d/namespaceHLT_1a728d366ac3b72615984d3581b7dcaea5" prot="public" static="no">
        <name>ChainStatus</name>
        <enumvalue id="dc/d8d/namespaceHLT_1a728d366ac3b72615984d3581b7dcaea5a34ad01263496a9d5907421a7b6b219fa" prot="public">
          <name>ChainInvalid</name>
          <initializer>0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dc/d8d/namespaceHLT_1a728d366ac3b72615984d3581b7dcaea5a49527462ee05c52a3cae45fa07116f1f" prot="public">
          <name>ConfigOnlyChain</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dc/d8d/namespaceHLT_1a728d366ac3b72615984d3581b7dcaea5a9cd4fe78beb5513099193343866cd066" prot="public">
          <name>ChainOK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/Chain.h" line="48" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/Chain.h" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="enum" id="dc/d8d/namespaceHLT_1a3d34da105feb61471c2aaf0ed47f5ff9" prot="public" static="no">
        <name>HLTLevel</name>
        <enumvalue id="dc/d8d/namespaceHLT_1a3d34da105feb61471c2aaf0ed47f5ff9ab7b51d4e9db1a95a588ee43cb5d48b72" prot="public">
          <name>L2</name>
          <initializer> 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dc/d8d/namespaceHLT_1a3d34da105feb61471c2aaf0ed47f5ff9a8ea58109d010b3582d9e6f2d76a47167" prot="public">
          <name>EF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dc/d8d/namespaceHLT_1a3d34da105feb61471c2aaf0ed47f5ff9a6900c4e8a4019c418e41ecf765aa237e" prot="public">
          <name>HLT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dc/d8d/namespaceHLT_1a3d34da105feb61471c2aaf0ed47f5ff9aa6b84d0372c2ce01e91e63d9a04558fa" prot="public">
          <name>UNKNOWN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/Enums.h" line="166" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/Enums.h" bodystart="166" bodyend="166"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="dc/d8d/namespaceHLT_1a2f7cfae6f4aa76d3423bf695fb369123" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t HLT::teid_type</definition>
        <argsstring></argsstring>
        <name>teid_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/Root/Types.h" line="4" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/Root/Types.h" bodystart="4" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dc/d8d/namespaceHLT_1a34136cc76a909284fc0ed57570ef21e7" prot="public" static="no">
        <type>uint16_t</type>
        <definition>typedef uint16_t HLT::sub_index_type</definition>
        <argsstring></argsstring>
        <name>sub_index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/Root/Types.h" line="5" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/Root/Types.h" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dc/d8d/namespaceHLT_1a64a615c2124eca51cd6b7abcd682f942" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t HLT::index_type</definition>
        <argsstring></argsstring>
        <name>index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/Root/Types.h" line="6" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/Root/Types.h" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dc/d8d/namespaceHLT_1a559602e36959c2b91daf46369699219b" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t HLT::class_id_type</definition>
        <argsstring></argsstring>
        <name>class_id_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/Root/Types.h" line="7" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/Root/Types.h" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dc/d8d/namespaceHLT_1a783d1f30becc6bc4dc1858b5544cd8b9" prot="public" static="no">
        <type>std::vector&lt; <ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound">HLT::TriggerElement</ref> * &gt;</type>
        <definition>typedef std::vector&lt;HLT::TriggerElement*&gt; HLT::TEVec</definition>
        <argsstring></argsstring>
        <name>TEVec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/ComboIterator.h" line="10" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/ComboIterator.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dc/d8d/namespaceHLT_1a4063cef442e0753572e695dbdefab3bb" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t HLT::te_id_type</definition>
        <argsstring></argsstring>
        <name>te_id_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/Types.h" line="6" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/Types.h" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dc/d8d/namespaceHLT_1ad22e3d754e2aaad6f92433df8df298c5" prot="public" static="no">
        <type>boost::variant&lt; sub_index_type, std::string &gt;</type>
        <definition>typedef boost::variant&lt;sub_index_type,std::string&gt; HLT::index_or_label_type</definition>
        <argsstring></argsstring>
        <name>index_or_label_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/Types.h" line="11" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/Types.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="dc/d8d/namespaceHLT_1a6867e7ffe19ecbba6f7e9365e40760a8" prot="public" static="yes" mutable="no">
        <type>const class_id_type</type>
        <definition>static const class_id_type HLT::invalid_class_id</definition>
        <argsstring></argsstring>
        <name>invalid_class_id</name>
        <initializer> 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/Root/Types.h" line="10" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/Root/Types.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d8d/namespaceHLT_1a33d88c6c018b8b5aa5cd5c8b8a7bec26" prot="public" static="yes" mutable="no">
        <type>const index_type</type>
        <definition>static const index_type HLT::invalid_index</definition>
        <argsstring></argsstring>
        <name>invalid_index</name>
        <initializer> static_cast&lt;uint32_t&gt;(-1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/Root/Types.h" line="11" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/Root/Types.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d8d/namespaceHLT_1a31105edd314c580551690693712a14b1" prot="public" static="yes" mutable="no">
        <type>const index_type</type>
        <definition>static const sub_index_type HLT::invalid_sub_index</definition>
        <argsstring></argsstring>
        <name>invalid_sub_index</name>
        <initializer> static_cast&lt;uint16_t&gt;(-1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/Root/Types.h" line="12" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/Root/Types.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1a23224656633f3dd49e9af5b1a6c33c9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>MsgStream &amp;</type>
        <definition>MsgStream &amp; HLT::operator&lt;&lt;</definition>
        <argsstring>(MsgStream &amp;, const Chain &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>MsgStream &amp;</type>
          <defname>msg</defname>
        </param>
        <param>
          <type>const <ref refid="dd/d69/classHLT_1_1Chain" kindref="compound">Chain</ref> &amp;</type>
          <defname>c</defname>
        </param>
        <briefdescription>
<para>Overload of &lt;&lt; operator for both, MsgStream and std::ostream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/Chain.h" line="157" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/Root/Chain.cxx" bodystart="140" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1a3f2db3c1db5758290a9f87dfdf3fd8c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; HLT::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const Chain &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="dd/d69/classHLT_1_1Chain" kindref="compound">Chain</ref> &amp;</type>
          <defname>c</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Overload of &lt;&lt; operator for both, MsgStream and std::ostream </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/Chain.h" line="158" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/Root/Chain.cxx" bodystart="135" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1a92670501a7311babc76fbd36bc11209f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string HLT::strErrorCode</definition>
        <argsstring>(const ErrorCode code)</argsstring>
        <name>strErrorCode</name>
        <param>
          <type>const <ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound">ErrorCode</ref></type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/Enums.h" line="108" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/Root/Enums.cxx" bodystart="92" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1a01cee552f78bce9af74e0cf861a4bcf7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound">ErrorCode</ref></type>
        <definition>static const ErrorCode HLT::OK</definition>
        <argsstring>(Action::CONTINUE)</argsstring>
        <name>OK</name>
        <param>
          <type>Action::CONTINUE</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/Enums.h" line="113"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1a440259350f116975a5cc38bbb26415f6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound">ErrorCode</ref></type>
        <definition>static const ErrorCode HLT::MISSING_FEATURE</definition>
        <argsstring>(Action::CONTINUE, Reason::MISSING_FEATURE)</argsstring>
        <name>MISSING_FEATURE</name>
        <param>
          <type>Action::CONTINUE</type>
        </param>
        <param>
          <type>Reason::MISSING_FEATURE</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/Enums.h" line="114"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1a6ca4cd1e6bcc54e857b3a3207fef937c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound">ErrorCode</ref></type>
        <definition>static const ErrorCode HLT::STOP_THIS_CHAIN_</definition>
        <argsstring>(Action::CONTINUE, Reason::MISSING_FEATURE)</argsstring>
        <name>STOP_THIS_CHAIN_</name>
        <param>
          <type>Action::CONTINUE</type>
        </param>
        <param>
          <type>Reason::MISSING_FEATURE</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/Enums.h" line="115"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1a0c0f3349942e8fed862e8e6cad145d0a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound">ErrorCode</ref></type>
        <definition>static const ErrorCode HLT::ERROR</definition>
        <argsstring>(Action::ABORT_CHAIN, Reason::UNKNOWN)</argsstring>
        <name>ERROR</name>
        <param>
          <type>Action::ABORT_CHAIN</type>
        </param>
        <param>
          <type>Reason::UNKNOWN</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/Enums.h" line="117"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1a9b18e922bf5efa96ade3b18c61677ea7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound">ErrorCode</ref></type>
        <definition>static const ErrorCode HLT::INVALID_TE</definition>
        <argsstring>(Action::ABORT_CHAIN, Reason::UNKNOWN)</argsstring>
        <name>INVALID_TE</name>
        <param>
          <type>Action::ABORT_CHAIN</type>
        </param>
        <param>
          <type>Reason::UNKNOWN</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/Enums.h" line="118"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1a5546a4f1d97f57cb770d1a50dee00195" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound">ErrorCode</ref></type>
        <definition>static const ErrorCode HLT::TOOL_FAILURE</definition>
        <argsstring>(Action::ABORT_CHAIN, Reason::UNKNOWN)</argsstring>
        <name>TOOL_FAILURE</name>
        <param>
          <type>Action::ABORT_CHAIN</type>
        </param>
        <param>
          <type>Reason::UNKNOWN</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/Enums.h" line="119"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1ab04eaabfe717829a89a5326aa5b01442" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound">ErrorCode</ref></type>
        <definition>static const ErrorCode HLT::NUM_ERROR</definition>
        <argsstring>(Action::ABORT_CHAIN, Reason::UNKNOWN)</argsstring>
        <name>NUM_ERROR</name>
        <param>
          <type>Action::ABORT_CHAIN</type>
        </param>
        <param>
          <type>Reason::UNKNOWN</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/Enums.h" line="120"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1a4ff40959474ad6c45074d00713267dee" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound">ErrorCode</ref></type>
        <definition>static const ErrorCode HLT::SG_ERROR</definition>
        <argsstring>(Action::ABORT_CHAIN, Reason::NAV_ERROR)</argsstring>
        <name>SG_ERROR</name>
        <param>
          <type>Action::ABORT_CHAIN</type>
        </param>
        <param>
          <type>Reason::NAV_ERROR</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/Enums.h" line="121"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1aefadd36f3fd197a3561fbdf3aadd2ab5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound">ErrorCode</ref></type>
        <definition>static const ErrorCode HLT::NAV_ERROR</definition>
        <argsstring>(Action::ABORT_CHAIN, Reason::NAV_ERROR)</argsstring>
        <name>NAV_ERROR</name>
        <param>
          <type>Action::ABORT_CHAIN</type>
        </param>
        <param>
          <type>Reason::NAV_ERROR</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/Enums.h" line="122"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1a492ccd436b2006a72964f8a6f6e2770c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound">ErrorCode</ref></type>
        <definition>static const ErrorCode HLT::GAUDI_EXCEPTION</definition>
        <argsstring>(Action::ABORT_CHAIN, Reason::GAUDI_EXCEPTION)</argsstring>
        <name>GAUDI_EXCEPTION</name>
        <param>
          <type>Action::ABORT_CHAIN</type>
        </param>
        <param>
          <type>Reason::GAUDI_EXCEPTION</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/Enums.h" line="123"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1ac276bb57658af6a96ea638161ded4caa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound">ErrorCode</ref></type>
        <definition>static const ErrorCode HLT::EFORMAT_EXCEPTION</definition>
        <argsstring>(Action::ABORT_CHAIN, Reason::EFORMAT_EXCEPTION)</argsstring>
        <name>EFORMAT_EXCEPTION</name>
        <param>
          <type>Action::ABORT_CHAIN</type>
        </param>
        <param>
          <type>Reason::EFORMAT_EXCEPTION</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/Enums.h" line="124"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1add1ab16a3e5c76057defa6739a7c95a4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound">ErrorCode</ref></type>
        <definition>static const ErrorCode HLT::STD_EXCEPTION</definition>
        <argsstring>(Action::ABORT_CHAIN, Reason::STD_EXCEPTION)</argsstring>
        <name>STD_EXCEPTION</name>
        <param>
          <type>Action::ABORT_CHAIN</type>
        </param>
        <param>
          <type>Reason::STD_EXCEPTION</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/Enums.h" line="125"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1a08067b9a2329d2063e7a11f48ad67ae4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound">ErrorCode</ref></type>
        <definition>static const ErrorCode HLT::UNKNOWN_EXCEPTION</definition>
        <argsstring>(Action::ABORT_CHAIN, Reason::UNKNOWN_EXCEPTION)</argsstring>
        <name>UNKNOWN_EXCEPTION</name>
        <param>
          <type>Action::ABORT_CHAIN</type>
        </param>
        <param>
          <type>Reason::UNKNOWN_EXCEPTION</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/Enums.h" line="126"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1af2ce6bdddcec4e45e404998c06910b38" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound">ErrorCode</ref></type>
        <definition>static const ErrorCode HLT::TIMEOUT</definition>
        <argsstring>(Action::ABORT_EVENT, Reason::TIMEOUT, SteeringInternalReason::TIMEOUT)</argsstring>
        <name>TIMEOUT</name>
        <param>
          <type>Action::ABORT_EVENT</type>
        </param>
        <param>
          <type>Reason::TIMEOUT</type>
        </param>
        <param>
          <type>SteeringInternalReason::TIMEOUT</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/Enums.h" line="127"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1a0328717185e6d731ef5f958d34447f15" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound">ErrorCode</ref></type>
        <definition>static const ErrorCode HLT::STOP_EVENT_</definition>
        <argsstring>(Action::ABORT_EVENT)</argsstring>
        <name>STOP_EVENT_</name>
        <param>
          <type>Action::ABORT_EVENT</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/Enums.h" line="128"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1aebec231d3f52fbb3e308467fec931b9a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound">ErrorCode</ref></type>
        <definition>static const ErrorCode HLT::NO_LVL1_ITEMS</definition>
        <argsstring>(Action::ABORT_EVENT, SteeringInternalReason::NO_LVL1_ITEMS)</argsstring>
        <name>NO_LVL1_ITEMS</name>
        <param>
          <type>Action::ABORT_EVENT</type>
        </param>
        <param>
          <type>SteeringInternalReason::NO_LVL1_ITEMS</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/Enums.h" line="130"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1a4e94cc2363df730adc12082af5d3f7a0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound">ErrorCode</ref></type>
        <definition>static const ErrorCode HLT::NO_LVL2_CHAINS</definition>
        <argsstring>(Action::ABORT_EVENT, SteeringInternalReason::NO_LVL2_CHAINS)</argsstring>
        <name>NO_LVL2_CHAINS</name>
        <param>
          <type>Action::ABORT_EVENT</type>
        </param>
        <param>
          <type>SteeringInternalReason::NO_LVL2_CHAINS</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/Enums.h" line="131"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1a2751553fb1bd34072322b0c5215d23b1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound">ErrorCode</ref></type>
        <definition>static const ErrorCode HLT::NO_LVL1_RESULT</definition>
        <argsstring>(Action::ABORT_EVENT, SteeringInternalReason::NO_LVL1_RESULT)</argsstring>
        <name>NO_LVL1_RESULT</name>
        <param>
          <type>Action::ABORT_EVENT</type>
        </param>
        <param>
          <type>SteeringInternalReason::NO_LVL1_RESULT</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/Enums.h" line="132"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1a4152bd50253be7d7ea726577af0388e6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound">ErrorCode</ref></type>
        <definition>static const ErrorCode HLT::WRONG_HLT_RESULT</definition>
        <argsstring>(Action::ABORT_EVENT, SteeringInternalReason::WRONG_HLT_RESULT)</argsstring>
        <name>WRONG_HLT_RESULT</name>
        <param>
          <type>Action::ABORT_EVENT</type>
        </param>
        <param>
          <type>SteeringInternalReason::WRONG_HLT_RESULT</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/Enums.h" line="133"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1a6203508dfcd6262b6da9647c62131858" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound">ErrorCode</ref></type>
        <definition>static const ErrorCode HLT::NO_HLT_RESULT</definition>
        <argsstring>(Action::ABORT_EVENT, SteeringInternalReason::NO_HLT_RESULT)</argsstring>
        <name>NO_HLT_RESULT</name>
        <param>
          <type>Action::ABORT_EVENT</type>
        </param>
        <param>
          <type>SteeringInternalReason::NO_HLT_RESULT</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/Enums.h" line="134"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1a63a10abc72a943c9a41a0d5849d4a314" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound">ErrorCode</ref></type>
        <definition>static const ErrorCode HLT::STOP_JOB_</definition>
        <argsstring>(Action::ABORT_JOB)</argsstring>
        <name>STOP_JOB_</name>
        <param>
          <type>Action::ABORT_JOB</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/Enums.h" line="136"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1a2ea6290fd41fedf59fe6aca591e2f8a4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound">ErrorCode</ref></type>
        <definition>static const ErrorCode HLT::BAD_JOB_SETUP</definition>
        <argsstring>(Action::ABORT_JOB, Reason::BAD_JOB_SETUP)</argsstring>
        <name>BAD_JOB_SETUP</name>
        <param>
          <type>Action::ABORT_JOB</type>
        </param>
        <param>
          <type>Reason::BAD_JOB_SETUP</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/Enums.h" line="137"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1a0d7e264ce162a18f2f4cf682be0cbba6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound">ErrorCode</ref></type>
        <definition>static const ErrorCode HLT::BAD_ALGO_CONFIG</definition>
        <argsstring>(Action::ABORT_JOB, Reason::BAD_JOB_SETUP)</argsstring>
        <name>BAD_ALGO_CONFIG</name>
        <param>
          <type>Action::ABORT_JOB</type>
        </param>
        <param>
          <type>Reason::BAD_JOB_SETUP</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/Enums.h" line="138"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1ad2b8782310e3c8a94b51700b2519072f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound">ErrorCode</ref></type>
        <definition>static const ErrorCode HLT::FATAL</definition>
        <argsstring>(Action::ABORT_JOB, Reason::UNKNOWN)</argsstring>
        <name>FATAL</name>
        <param>
          <type>Action::ABORT_JOB</type>
        </param>
        <param>
          <type>Reason::UNKNOWN</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/Enums.h" line="139"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1a3210615172b218083445a7ede2f8febc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound">ErrorCode</ref></type>
        <definition>static const ErrorCode HLT::LAST_ERROR</definition>
        <argsstring>(Action::ABORT_JOB, Reason::LAST_, SteeringInternalReason::LAST_)</argsstring>
        <name>LAST_ERROR</name>
        <param>
          <type>Action::ABORT_JOB</type>
        </param>
        <param>
          <type>Reason::LAST_</type>
        </param>
        <param>
          <type>SteeringInternalReason::LAST_</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/Enums.h" line="140"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1aa6f03acf2b212eb73a0db80d449e991e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HLT::getErrorCodePosFromStr</definition>
        <argsstring>(const std::string &amp;ec)</argsstring>
        <name>getErrorCodePosFromStr</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>ec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/Enums.h" line="162" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/Root/Enums.cxx" bodystart="98" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1ada9a589e0da7091d2aab6ca336bb09e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HLT::reportErrorCode</definition>
        <argsstring>(ErrorCode &amp;e1, ErrorCode e2)</argsstring>
        <name>reportErrorCode</name>
        <param>
          <type><ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound">ErrorCode</ref> &amp;</type>
          <declname>e1</declname>
        </param>
        <param>
          <type><ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound">ErrorCode</ref></type>
          <declname>e2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/Enums.h" line="164"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1a49fec36473a02f08cc5afc1085d77bfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HLT::swap</definition>
        <argsstring>(HLTExtraData &amp;, HLTExtraData &amp;)</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="d4/d14/classHLT_1_1HLTExtraData" kindref="compound">HLTExtraData</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="d4/d14/classHLT_1_1HLTExtraData" kindref="compound">HLTExtraData</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/HLTExtraData.h" line="74"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1a06286002b6cb0c993fb73d73a7a95426" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HLT::swap</definition>
        <argsstring>(HLTResult &amp;lhs, HLTResult &amp;rhs)</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="d9/d4b/classHLT_1_1HLTResult" kindref="compound">HLTResult</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="d9/d4b/classHLT_1_1HLTResult" kindref="compound">HLTResult</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/HLTResult.h" line="490"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1a83a616bb18c878b0bacc3d3e417bcb0d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double HLT::wrapPhi</definition>
        <argsstring>(double phi)</argsstring>
        <name>wrapPhi</name>
        <param>
          <type>double</type>
          <declname>phi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/PhiHelper.h" line="15" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/PhiHelper.h" bodystart="15" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1aa0affb194bfad4976be1caaf2701b44c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double HLT::phiMean</definition>
        <argsstring>(double phimin, double phimax)</argsstring>
        <name>phiMean</name>
        <param>
          <type>double</type>
          <declname>phimin</declname>
        </param>
        <param>
          <type>double</type>
          <declname>phimax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/PhiHelper.h" line="23" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/PhiHelper.h" bodystart="23" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1a87fcd76677e0f40e2ebd83474b73e62c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double HLT::deltaPhi</definition>
        <argsstring>(double phimax, double phimin)</argsstring>
        <name>deltaPhi</name>
        <param>
          <type>double</type>
          <declname>phimax</declname>
        </param>
        <param>
          <type>double</type>
          <declname>phimin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/PhiHelper.h" line="30" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/PhiHelper.h" bodystart="30" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1a84e58497a85d1f08bec447328cd85ce3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CONTAINER</type>
          </param>
        </templateparamlist>
        <type><ref refid="d9/d20/classTrigPassBits" kindref="compound">TrigPassBits</ref> *</type>
        <definition>TrigPassBits* HLT::makeTrigPassBits</definition>
        <argsstring>(const CONTAINER *cont)</argsstring>
        <name>makeTrigPassBits</name>
        <param>
          <type>const CONTAINER *</type>
          <declname>cont</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassBits.h" line="53" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassBits.h" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1a549b06f7b95fa248ddc2607fb08804e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
          <param>
            <type>class CONTAINER</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void HLT::markPassing</definition>
        <argsstring>(TrigPassBits *bits, const T *obj, const CONTAINER *container)</argsstring>
        <name>markPassing</name>
        <param>
          <type><ref refid="d9/d20/classTrigPassBits" kindref="compound">TrigPassBits</ref> *</type>
          <declname>bits</declname>
        </param>
        <param>
          <type>const <ref refid="d1/def/classT" kindref="compound">T</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const CONTAINER *</type>
          <declname>container</declname>
        </param>
        <briefdescription>
<para>Set the bit for the object in the associated bits object. </para>        </briefdescription>
        <detaileddescription>
<para>The helper function should be used in the <ref refid="dc/d8d/namespaceHLT" kindref="compound">HLT</ref> algorithms instead of the raw <ref refid="d9/d20/classTrigPassBits" kindref="compound">TrigPassBits</ref> accessors. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassBits.h" line="65" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassBits.h" bodystart="65" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1aad1a5f2e12d925b2ed3b5df49d89bdda" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
          <param>
            <type>class CONTAINER</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool HLT::isPassing</definition>
        <argsstring>(const TrigPassBits *bits, const T *obj, const CONTAINER *container)</argsstring>
        <name>isPassing</name>
        <param>
          <type>const <ref refid="d9/d20/classTrigPassBits" kindref="compound">TrigPassBits</ref> *</type>
          <declname>bits</declname>
        </param>
        <param>
          <type>const <ref refid="d1/def/classT" kindref="compound">T</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const CONTAINER *</type>
          <declname>container</declname>
        </param>
        <briefdescription>
<para>Check the bit for the object in the associated bits object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassBits.h" line="78" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassBits.h" bodystart="78" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1abb659703eccb8df4a5e03df16d5a2267" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CONTAINER</type>
          </param>
        </templateparamlist>
        <type><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref> *</type>
        <definition>TrigPassFlags* HLT::makeTrigPassFlags</definition>
        <argsstring>(const CONTAINER *cont, const unsigned int flagSize)</argsstring>
        <name>makeTrigPassFlags</name>
        <param>
          <type>const CONTAINER *</type>
          <declname>cont</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>flagSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassFlags.h" line="92" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassFlags.h" bodystart="92" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1a47f73f8090fb22242479b867ed797d58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
          <param>
            <type>class CONTAINER</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void HLT::setFlagBit</definition>
        <argsstring>(TrigPassFlags *flags, const T *obj, const CONTAINER *container, const unsigned int bitPosition, const bool bitValue=true)</argsstring>
        <name>setFlagBit</name>
        <param>
          <type><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref> *</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>const <ref refid="d1/def/classT" kindref="compound">T</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const CONTAINER *</type>
          <declname>container</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>bitPosition</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>bitValue</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Set bit of the flag at index position for a given <ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassFlags.h" line="101" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassFlags.h" bodystart="101" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1a9e82af6d95406e63e9fc22db58a269a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
          <param>
            <type>class CONTAINER</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void HLT::setFlag</definition>
        <argsstring>(TrigPassFlags *flags, const T *obj, const CONTAINER *container, const std::vector&lt; bool &gt; &amp;flag)</argsstring>
        <name>setFlag</name>
        <param>
          <type><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref> *</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>const <ref refid="d1/def/classT" kindref="compound">T</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const CONTAINER *</type>
          <declname>container</declname>
        </param>
        <param>
          <type>const std::vector&lt; bool &gt; &amp;</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
<para>Set the flag at index position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>trigger object to which the flag corresponds </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>container</parametername>
</parameternamelist>
<parameterdescription>
<para>container of trigger objects (same pointer as given in the constructor) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flag</parametername>
</parameternamelist>
<parameterdescription>
<para>value of the flag (use helper functions to convert from int or long to vector&lt;bool&gt;) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassFlags.h" line="117" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassFlags.h" bodystart="117" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1af8a8de691c034960ca68e60eb3acb5ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
          <param>
            <type>class CONTAINER</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool HLT::getFlagBit</definition>
        <argsstring>(const TrigPassFlags *flags, const T *obj, const CONTAINER *container, const unsigned int position, const unsigned int bitPosition)</argsstring>
        <name>getFlagBit</name>
        <param>
          <type>const <ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref> *</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>const <ref refid="d1/def/classT" kindref="compound">T</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const CONTAINER *</type>
          <declname>container</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>position</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>bitPosition</declname>
        </param>
        <briefdescription>
<para>Returns the bit &apos;bitPosition&apos; of the flag at index position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassFlags.h" line="130" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassFlags.h" bodystart="130" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1a17f6857efcd2a5d097d29c9502105689" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
          <param>
            <type>class CONTAINER</type>
          </param>
        </templateparamlist>
        <type>const std::vector&lt; bool &gt; &amp;</type>
        <definition>const std::vector&lt;bool&gt;&amp; HLT::getFlag</definition>
        <argsstring>(const TrigPassFlags *flags, const T *obj, const CONTAINER *container, const size_t position)</argsstring>
        <name>getFlag</name>
        <param>
          <type>const <ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref> *</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>const <ref refid="d1/def/classT" kindref="compound">T</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const CONTAINER *</type>
          <declname>container</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>position</declname>
        </param>
        <briefdescription>
<para>Returns the flag at index position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassFlags.h" line="141" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassFlags.h" bodystart="141" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1a08137dad52a5c6d5cbe04f60a7056fa8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt;bool&gt; HLT::AsFlag</definition>
        <argsstring>(T flag_t, const size_t size)</argsstring>
        <name>AsFlag</name>
        <param>
          <type><ref refid="d1/def/classT" kindref="compound">T</ref></type>
          <declname>flag_t</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassFlags.h" line="149" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassFlags.h" bodystart="149" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="dc/d8d/namespaceHLT_1a5075f1836386a866aa73cef4ac92ea31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="d1/def/classT" kindref="compound">T</ref></type>
        <definition>T HLT::FlagAs</definition>
        <argsstring>(const std::vector&lt; bool &gt; flag)</argsstring>
        <name>FlagAs</name>
        <param>
          <type>const std::vector&lt; bool &gt;</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassFlags.h" line="164" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigPassFlags.h" bodystart="164" bodyend="172"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Helper functions to be used by the Hypo algorithms. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/CacheGlobalMemory.h" line="39"/>
  </compounddef>
</doxygen>
