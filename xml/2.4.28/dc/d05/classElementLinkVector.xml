<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="dc/d05/classElementLinkVector" kind="class" prot="public">
    <compoundname>ElementLinkVector</compoundname>
    <basecompoundref refid="d9/dec/classSelectNoInstance" prot="public" virt="non-virtual">SelectNoInstance</basecompoundref>
    <basecompoundref refid="d4/d94/classElementLinkVectorBase" prot="public" virt="non-virtual">ElementLinkVectorBase</basecompoundref>
    <includes refid="de/df1/ElementLinkVector_8h" local="no">ElementLinkVector.h</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>CONTAINER</declname>
        <defname>CONTAINER</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>STL-like type definitions</header>
      <description><para><anchor id="_1amgrpd252fc0d6cab908d1d4f8f31b2da8bbd"/> </para></description>
      <memberdef kind="typedef" id="dc/d05/classElementLinkVector_1aaa7c52447d6a30a4161386f6f15c60e4" prot="public" static="no">
        <type><ref refid="d6/d6e/classElementLink" kindref="compound">ElemLink</ref></type>
        <definition>typedef ElemLink ElementLinkVector&lt; CONTAINER &gt;::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
<para>Standard typedef for the type of the held objects. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="46" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dc/d05/classElementLinkVector_1a21c70e0467b595d52e0f13ca54b740bd" prot="public" static="no">
        <type><ref refid="d6/d6e/classElementLink" kindref="compound">ElemLink</ref> &amp;</type>
        <definition>typedef ElemLink&amp; ElementLinkVector&lt; CONTAINER &gt;::reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
<para>Type of the reference pointing to one element link. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="48" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dc/d05/classElementLinkVector_1a88c1b988c30f90b510a9c8ea70caa3e2" prot="public" static="no">
        <type>const <ref refid="d6/d6e/classElementLink" kindref="compound">ElemLink</ref> &amp;</type>
        <definition>typedef const ElemLink&amp; ElementLinkVector&lt; CONTAINER &gt;::const_reference</definition>
        <argsstring></argsstring>
        <name>const_reference</name>
        <briefdescription>
<para>Type of the constant reference pointing to one element link. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="50" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dc/d05/classElementLinkVector_1a65471393e5fe1a9d45afd12bd90c2b84" prot="public" static="no">
        <type>std::vector&lt; <ref refid="d6/d6e/classElementLink" kindref="compound">ElemLink</ref> &gt;::<ref refid="dc/d05/classElementLinkVector_1a65471393e5fe1a9d45afd12bd90c2b84" kindref="member">iterator</ref></type>
        <definition>typedef std::vector&lt; ElemLink &gt;::iterator ElementLinkVector&lt; CONTAINER &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
<para>Type of the iterator for traversing the vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="52" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dc/d05/classElementLinkVector_1a97d1f22264dac4dd8bc7e7cbd7b16d59" prot="public" static="no">
        <type>std::vector&lt; <ref refid="d6/d6e/classElementLink" kindref="compound">ElemLink</ref> &gt;::<ref refid="dc/d05/classElementLinkVector_1a97d1f22264dac4dd8bc7e7cbd7b16d59" kindref="member">const_iterator</ref></type>
        <definition>typedef std::vector&lt; ElemLink &gt;::const_iterator ElementLinkVector&lt; CONTAINER &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
<para>Type of the constant iterator for traversing the vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="54" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dc/d05/classElementLinkVector_1ab29ebedec078d122b34ae40503819416" prot="public" static="no">
        <type>std::vector&lt; <ref refid="d6/d6e/classElementLink" kindref="compound">ElemLink</ref> &gt;::<ref refid="dc/d05/classElementLinkVector_1ab29ebedec078d122b34ae40503819416" kindref="member">reverse_iterator</ref></type>
        <definition>typedef std::vector&lt; ElemLink &gt;::reverse_iterator ElementLinkVector&lt; CONTAINER &gt;::reverse_iterator</definition>
        <argsstring></argsstring>
        <name>reverse_iterator</name>
        <briefdescription>
<para>Type of the reverse iterator for traversing the vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="56" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dc/d05/classElementLinkVector_1a1f68c1d7fca2fe838e8bee1a9cf1de87" prot="public" static="no">
        <type>std::vector&lt; <ref refid="d6/d6e/classElementLink" kindref="compound">ElemLink</ref> &gt;::<ref refid="dc/d05/classElementLinkVector_1a1f68c1d7fca2fe838e8bee1a9cf1de87" kindref="member">const_reverse_iterator</ref></type>
        <definition>typedef std::vector&lt; ElemLink &gt;::const_reverse_iterator ElementLinkVector&lt; CONTAINER &gt;::const_reverse_iterator</definition>
        <argsstring></argsstring>
        <name>const_reverse_iterator</name>
        <briefdescription>
<para>Type of the constant reverse iterator for traversing the vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="59" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dc/d05/classElementLinkVector_1af8462461239987bc932871ebfa3e9b41" prot="public" static="no">
        <type>std::vector&lt; <ref refid="d6/d6e/classElementLink" kindref="compound">ElemLink</ref> &gt;::<ref refid="dc/d05/classElementLinkVector_1af8462461239987bc932871ebfa3e9b41" kindref="member">size_type</ref></type>
        <definition>typedef std::vector&lt; ElemLink &gt;::size_type ElementLinkVector&lt; CONTAINER &gt;::size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
<para>Type of the size of the vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="61" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Constructors</header>
      <description><para><anchor id="_1amgrp559a25fdb98a7d1fd1c3771ac568d5e9"/> </para></description>
      <memberdef kind="function" id="dc/d05/classElementLinkVector_1af8a4e9247c61edd8d95abb879c2f9737" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ElementLinkVector&lt; CONTAINER &gt;::ElementLinkVector</definition>
        <argsstring>()</argsstring>
        <name>ElementLinkVector</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="69" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.icc" bodystart="15" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="dc/d05/classElementLinkVector_1ab26584576d67c23cc388f45e77d11831" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ElementLinkVector&lt; CONTAINER &gt;::ElementLinkVector</definition>
        <argsstring>(size_type n, const ElemLink &amp;link=ElemLink())</argsstring>
        <name>ElementLinkVector</name>
        <param>
          <type><ref refid="dc/d05/classElementLinkVector_1af8462461239987bc932871ebfa3e9b41" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="d6/d6e/classElementLink" kindref="compound">ElemLink</ref> &amp;</type>
          <declname>link</declname>
          <defval><ref refid="d6/d6e/classElementLink" kindref="compound">ElemLink</ref>()</defval>
        </param>
        <briefdescription>
<para>Constructor creating a vector of a given size. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="71" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.icc" bodystart="21" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="dc/d05/classElementLinkVector_1a5a2602d3965188debf15bf421b2ac7a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ElementLinkVector&lt; CONTAINER &gt;::ElementLinkVector</definition>
        <argsstring>(const ElemLinkVec &amp;parent)</argsstring>
        <name>ElementLinkVector</name>
        <param>
          <type>const <ref refid="dc/d05/classElementLinkVector" kindref="compound">ElemLinkVec</ref> &amp;</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="73" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.icc" bodystart="30" bodyend="33"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Vector iterator functions</header>
      <description><para><anchor id="_1amgrp208bbdb415ef5bc6118dca0ab9bd75f3"/> </para></description>
      <memberdef kind="function" id="dc/d05/classElementLinkVector_1abf92235f5c495495212aff858f98f5ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dc/d05/classElementLinkVector_1a65471393e5fe1a9d45afd12bd90c2b84" kindref="member">iterator</ref></type>
        <definition>iterator ElementLinkVector&lt; CONTAINER &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
<para>Get an iterator pointing at the first element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="84" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="dc/d05/classElementLinkVector_1af441707fade419dee7f1673031f722d4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dc/d05/classElementLinkVector_1a97d1f22264dac4dd8bc7e7cbd7b16d59" kindref="member">const_iterator</ref></type>
        <definition>const_iterator ElementLinkVector&lt; CONTAINER &gt;::begin</definition>
        <argsstring>() const </argsstring>
        <name>begin</name>
        <briefdescription>
<para>Get a constant iterator pointing at the first element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="86" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" bodystart="86" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="dc/d05/classElementLinkVector_1a6023238d07a967bc492f088db3b51223" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dc/d05/classElementLinkVector_1a65471393e5fe1a9d45afd12bd90c2b84" kindref="member">iterator</ref></type>
        <definition>iterator ElementLinkVector&lt; CONTAINER &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
<para>Get an iterator pointing at the end of the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="89" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="dc/d05/classElementLinkVector_1aca5841d9f4daf09312147c59176613bf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dc/d05/classElementLinkVector_1a97d1f22264dac4dd8bc7e7cbd7b16d59" kindref="member">const_iterator</ref></type>
        <definition>const_iterator ElementLinkVector&lt; CONTAINER &gt;::end</definition>
        <argsstring>() const </argsstring>
        <name>end</name>
        <briefdescription>
<para>Get a constant iterator pointing at the end of the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="91" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="dc/d05/classElementLinkVector_1a25c7cbe8e3747f395b2ef34f54aa69e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dc/d05/classElementLinkVector_1ab29ebedec078d122b34ae40503819416" kindref="member">reverse_iterator</ref></type>
        <definition>reverse_iterator ElementLinkVector&lt; CONTAINER &gt;::rbegin</definition>
        <argsstring>()</argsstring>
        <name>rbegin</name>
        <briefdescription>
<para>Get a reverse iterator pointing at the last element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="94" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="dc/d05/classElementLinkVector_1a901425f6d9d087f144320459a253a15b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dc/d05/classElementLinkVector_1a1f68c1d7fca2fe838e8bee1a9cf1de87" kindref="member">const_reverse_iterator</ref></type>
        <definition>const_reverse_iterator ElementLinkVector&lt; CONTAINER &gt;::rbegin</definition>
        <argsstring>() const </argsstring>
        <name>rbegin</name>
        <briefdescription>
<para>Get a constant reverse iterator pointing at the last element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="96" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="dc/d05/classElementLinkVector_1ad1331ebf6e305921fe12bce64d18bc78" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dc/d05/classElementLinkVector_1ab29ebedec078d122b34ae40503819416" kindref="member">reverse_iterator</ref></type>
        <definition>reverse_iterator ElementLinkVector&lt; CONTAINER &gt;::rend</definition>
        <argsstring>()</argsstring>
        <name>rend</name>
        <briefdescription>
<para>Get a reverse iterator pointing at the beginning of the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="99" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="dc/d05/classElementLinkVector_1a19e841e83760147b5990580193a03edb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dc/d05/classElementLinkVector_1a1f68c1d7fca2fe838e8bee1a9cf1de87" kindref="member">const_reverse_iterator</ref></type>
        <definition>const_reverse_iterator ElementLinkVector&lt; CONTAINER &gt;::rend</definition>
        <argsstring>() const </argsstring>
        <name>rend</name>
        <briefdescription>
<para>Get a constant reverse iterator pointing at the beginning of the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="101" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" bodystart="101" bodyend="101"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Vector capacity functions</header>
      <description><para><anchor id="_1amgrpa84c05be83ceb1fe8798a361b870281c"/> </para></description>
      <memberdef kind="function" id="dc/d05/classElementLinkVector_1ad32c38629b45925a53908b2d7589b4a0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dc/d05/classElementLinkVector_1af8462461239987bc932871ebfa3e9b41" kindref="member">size_type</ref></type>
        <definition>size_type ElementLinkVector&lt; CONTAINER &gt;::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
<para>Get the size of the vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="109" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" bodystart="109" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="dc/d05/classElementLinkVector_1a12ebcb21eca6c354bbe0092c65ab4281" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dc/d05/classElementLinkVector_1af8462461239987bc932871ebfa3e9b41" kindref="member">size_type</ref></type>
        <definition>size_type ElementLinkVector&lt; CONTAINER &gt;::max_size</definition>
        <argsstring>() const </argsstring>
        <name>max_size</name>
        <briefdescription>
<para>Get the maximal size of the object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="111" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="dc/d05/classElementLinkVector_1a2b5ae25fe15b681eb3efed950d8a36b9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dc/d05/classElementLinkVector_1af8462461239987bc932871ebfa3e9b41" kindref="member">size_type</ref></type>
        <definition>size_type ElementLinkVector&lt; CONTAINER &gt;::capacity</definition>
        <argsstring>() const </argsstring>
        <name>capacity</name>
        <briefdescription>
<para>Get the capacity of the currently allocated object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="113" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" bodystart="113" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="dc/d05/classElementLinkVector_1a611e58ec194a13f1978424a9e4bfbfe3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ElementLinkVector&lt; CONTAINER &gt;::resize</definition>
        <argsstring>(size_type sz, const ElemLink &amp;link=ElemLink())</argsstring>
        <name>resize</name>
        <param>
          <type><ref refid="dc/d05/classElementLinkVector_1af8462461239987bc932871ebfa3e9b41" kindref="member">size_type</ref></type>
          <declname>sz</declname>
        </param>
        <param>
          <type>const <ref refid="d6/d6e/classElementLink" kindref="compound">ElemLink</ref> &amp;</type>
          <declname>link</declname>
          <defval><ref refid="d6/d6e/classElementLink" kindref="compound">ElemLink</ref>()</defval>
        </param>
        <briefdescription>
<para>Resize the vector to the specified size. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="115" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.icc" bodystart="58" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="dc/d05/classElementLinkVector_1afca68c240b4ff5b3fb447c79a1051253" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ElementLinkVector&lt; CONTAINER &gt;::reserve</definition>
        <argsstring>(size_type sz)</argsstring>
        <name>reserve</name>
        <param>
          <type><ref refid="dc/d05/classElementLinkVector_1af8462461239987bc932871ebfa3e9b41" kindref="member">size_type</ref></type>
          <declname>sz</declname>
        </param>
        <briefdescription>
<para>Reserve some slots in the vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="117" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="dc/d05/classElementLinkVector_1a92f578105d04e3e0ad227299b46d028c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ElementLinkVector&lt; CONTAINER &gt;::empty</definition>
        <argsstring>() const </argsstring>
        <name>empty</name>
        <briefdescription>
<para>Function checking if the vector is empty. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="119" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" bodystart="119" bodyend="119"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Vector element accessors</header>
      <description><para><anchor id="_1amgrp39a57d8f3c48bc8def9ada1ee4f8a4bd"/> </para></description>
      <memberdef kind="function" id="dc/d05/classElementLinkVector_1ae8bb7271fe60924e5dff80584f1f31ca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d6/d6e/classElementLink" kindref="compound">const_reference</ref></type>
        <definition>const_reference ElementLinkVector&lt; CONTAINER &gt;::operator[]</definition>
        <argsstring>(size_type n) const </argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="dc/d05/classElementLinkVector_1af8462461239987bc932871ebfa3e9b41" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Get the element at a given index. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="127" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" bodystart="127" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="dc/d05/classElementLinkVector_1aee0691f648bde9018f89e395ab0849a1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d6/d6e/classElementLink" kindref="compound">const_reference</ref></type>
        <definition>const_reference ElementLinkVector&lt; CONTAINER &gt;::at</definition>
        <argsstring>(size_type n) const </argsstring>
        <name>at</name>
        <param>
          <type><ref refid="dc/d05/classElementLinkVector_1af8462461239987bc932871ebfa3e9b41" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Get the element at a given index (with size check). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="129" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" bodystart="129" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="dc/d05/classElementLinkVector_1ab810f15795f6e215ba0a68dc2cadef62" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d6/d6e/classElementLink" kindref="compound">const_reference</ref></type>
        <definition>const_reference ElementLinkVector&lt; CONTAINER &gt;::front</definition>
        <argsstring>() const </argsstring>
        <name>front</name>
        <briefdescription>
<para>Get the first element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="131" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" bodystart="131" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="dc/d05/classElementLinkVector_1a7355630f8c4afe649186dd791d788f2d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d6/d6e/classElementLink" kindref="compound">const_reference</ref></type>
        <definition>const_reference ElementLinkVector&lt; CONTAINER &gt;::back</definition>
        <argsstring>() const </argsstring>
        <name>back</name>
        <briefdescription>
<para>Get the last element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="133" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" bodystart="133" bodyend="133"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Vector modifiers</header>
      <description><para><anchor id="_1amgrpa79ae9decb05ebf10b0685062d4d20c7"/> </para></description>
      <memberdef kind="function" id="dc/d05/classElementLinkVector_1acebcbc57f53fb6d14612aa306c276a61" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ElementLinkVector&lt; CONTAINER &gt;::push_back</definition>
        <argsstring>(const ElemLink &amp;el)</argsstring>
        <name>push_back</name>
        <param>
          <type>const <ref refid="d6/d6e/classElementLink" kindref="compound">ElemLink</ref> &amp;</type>
          <declname>el</declname>
        </param>
        <briefdescription>
<para>Add a new element link at the end of the vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="141" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.icc" bodystart="80" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="dc/d05/classElementLinkVector_1a1085af81b832d5d2fb55a55971519646" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ElementLinkVector&lt; CONTAINER &gt;::pop_back</definition>
        <argsstring>()</argsstring>
        <name>pop_back</name>
        <briefdescription>
<para>Remove the last element from the vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="143" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.icc" bodystart="94" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="dc/d05/classElementLinkVector_1a2a164e71d6105d053138ec2b0964604e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dc/d05/classElementLinkVector_1a65471393e5fe1a9d45afd12bd90c2b84" kindref="member">iterator</ref></type>
        <definition>ElementLinkVector&lt; CONTAINER &gt;::iterator ElementLinkVector&lt; CONTAINER &gt;::erase</definition>
        <argsstring>(iterator position)</argsstring>
        <name>erase</name>
        <param>
          <type><ref refid="dc/d05/classElementLinkVector_1a65471393e5fe1a9d45afd12bd90c2b84" kindref="member">iterator</ref></type>
          <declname>position</declname>
        </param>
        <briefdescription>
<para>Erase one element from the vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="146" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.icc" bodystart="109" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="dc/d05/classElementLinkVector_1a9a86c282ede7be9abce72f8ec99898a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dc/d05/classElementLinkVector_1a65471393e5fe1a9d45afd12bd90c2b84" kindref="member">iterator</ref></type>
        <definition>ElementLinkVector&lt; CONTAINER &gt;::iterator ElementLinkVector&lt; CONTAINER &gt;::erase</definition>
        <argsstring>(iterator first, iterator last)</argsstring>
        <name>erase</name>
        <param>
          <type><ref refid="dc/d05/classElementLinkVector_1a65471393e5fe1a9d45afd12bd90c2b84" kindref="member">iterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="dc/d05/classElementLinkVector_1a65471393e5fe1a9d45afd12bd90c2b84" kindref="member">iterator</ref></type>
          <declname>last</declname>
        </param>
        <briefdescription>
<para>Erase a set of elements from the vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="148" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.icc" bodystart="124" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="dc/d05/classElementLinkVector_1af77414fc005c47c00eef0b501dacdb40" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ElementLinkVector&lt; CONTAINER &gt;::swap</definition>
        <argsstring>(ElemLinkVec &amp;vec)</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="dc/d05/classElementLinkVector" kindref="compound">ElemLinkVec</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Swap the container&apos;s contents with another object&apos;s. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="151" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.icc" bodystart="138" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="dc/d05/classElementLinkVector_1a8f7f3531ff081e044ce8846c8545d8f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class InputIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ElementLinkVector&lt; CONTAINER &gt;::assign</definition>
        <argsstring>(InputIterator first, InputIterator last)</argsstring>
        <name>assign</name>
        <param>
          <type>InputIterator</type>
          <declname>first</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>last</declname>
        </param>
        <briefdescription>
<para>Fill the vector with the contents of another container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="155" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.icc" bodystart="153" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="dc/d05/classElementLinkVector_1a8035bb799d49d5547b7c326704b84118" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ElementLinkVector&lt; CONTAINER &gt;::assign</definition>
        <argsstring>(size_type n, const ElemLink &amp;link)</argsstring>
        <name>assign</name>
        <param>
          <type><ref refid="dc/d05/classElementLinkVector_1af8462461239987bc932871ebfa3e9b41" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="d6/d6e/classElementLink" kindref="compound">ElemLink</ref> &amp;</type>
          <declname>link</declname>
        </param>
        <briefdescription>
<para>Fill the vector with <ref refid="da/deb/structN" kindref="compound">N</ref> identical links. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="157" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.icc" bodystart="162" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="dc/d05/classElementLinkVector_1aa0dcfb96e7664473f22e4aae87f2627b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dc/d05/classElementLinkVector_1a65471393e5fe1a9d45afd12bd90c2b84" kindref="member">iterator</ref></type>
        <definition>ElementLinkVector&lt; CONTAINER &gt;::iterator ElementLinkVector&lt; CONTAINER &gt;::insert</definition>
        <argsstring>(iterator position, const ElemLink &amp;link)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="dc/d05/classElementLinkVector_1a65471393e5fe1a9d45afd12bd90c2b84" kindref="member">iterator</ref></type>
          <declname>position</declname>
        </param>
        <param>
          <type>const <ref refid="d6/d6e/classElementLink" kindref="compound">ElemLink</ref> &amp;</type>
          <declname>link</declname>
        </param>
        <briefdescription>
<para>Insert a link in a certain position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="160" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.icc" bodystart="172" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="dc/d05/classElementLinkVector_1ad1aa5956f02f6e9370558e64b0e867ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ElementLinkVector&lt; CONTAINER &gt;::insert</definition>
        <argsstring>(iterator position, size_type n, const ElemLink &amp;link)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="dc/d05/classElementLinkVector_1a65471393e5fe1a9d45afd12bd90c2b84" kindref="member">iterator</ref></type>
          <declname>position</declname>
        </param>
        <param>
          <type><ref refid="dc/d05/classElementLinkVector_1af8462461239987bc932871ebfa3e9b41" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="d6/d6e/classElementLink" kindref="compound">ElemLink</ref> &amp;</type>
          <declname>link</declname>
        </param>
        <briefdescription>
<para>Insert a number of identical links in a certain position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="162" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.icc" bodystart="187" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="dc/d05/classElementLinkVector_1ada0b6330c61e75ae81c6fc8765665f00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ElementLinkVector&lt; CONTAINER &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
<para>Clear the object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="165" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.icc" bodystart="200" bodyend="209"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="dc/d05/classElementLinkVector_1a75a554a4c8ce685f84eb8b4ead478a01" prot="public" static="no">
        <type><ref refid="dc/d05/classElementLinkVector" kindref="compound">ElementLinkVector</ref>&lt; CONTAINER &gt;</type>
        <definition>typedef ElementLinkVector&lt; CONTAINER &gt; ElementLinkVector&lt; CONTAINER &gt;::ElemLinkVec</definition>
        <argsstring></argsstring>
        <name>ElemLinkVec</name>
        <briefdescription>
<para>Definition of the current type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="38" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dc/d05/classElementLinkVector_1a16a75ccc5e8db470843e3ff3fe40764f" prot="public" static="no">
        <type><ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref>&lt; CONTAINER &gt;</type>
        <definition>typedef ElementLink&lt; CONTAINER &gt; ElementLinkVector&lt; CONTAINER &gt;::ElemLink</definition>
        <argsstring></argsstring>
        <name>ElemLink</name>
        <briefdescription>
<para>Type of the <ref refid="da/d9f/namespaceEL" kindref="compound">EL</ref> that we have a vector of. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="40" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dc/d05/classElementLinkVector_1ac31306b86563a9d1b23ed49257719eaf" prot="public" static="no">
        <type><ref refid="dc/d05/classElementLinkVector" kindref="compound">ElementLinkVector</ref>&lt; CONTAINER &gt;</type>
        <definition>typedef ElementLinkVector&lt; CONTAINER &gt; ElementLinkVector&lt; CONTAINER &gt;::self</definition>
        <argsstring></argsstring>
        <name>self</name>
        <briefdescription>
<para>Helper definition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="198" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="dc/d05/classElementLinkVector_1a69ae9ec3319b4c3dbd9251760fc8b63f" prot="private" static="no">
        <type>ROOT_SELECTION_NS::ElementLinkVector&lt; CONTAINER &gt;::<ref refid="dc/d05/classElementLinkVector" kindref="compound">self</ref></type>
        <definition>typedef ROOT_SELECTION_NS::ElementLinkVector&lt; CONTAINER &gt;::self ElementLinkVector&lt; CONTAINER &gt;::DictSel</definition>
        <argsstring></argsstring>
        <name>DictSel</name>
        <briefdescription>
<para>Needed to take the Reflex/Cling specifications into account. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="180" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="dc/d05/classElementLinkVector_1a5afee52177d0312653b0c6f239220b35" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="d6/d6e/classElementLink" kindref="compound">ElemLink</ref> &gt;</type>
        <definition>std::vector&lt; ElemLink &gt; ElementLinkVector&lt; CONTAINER &gt;::m_elVec</definition>
        <argsstring></argsstring>
        <name>m_elVec</name>
        <briefdescription>
<para>Transient vector of element links. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="176" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="dc/d05/classElementLinkVector_1a6ca9704286b45bff18b7270f7ab135e6" prot="public" static="no" mutable="no">
        <type>ROOT_SELECTION_NS::MemberAttributes&lt; kTransient &gt;</type>
        <definition>ROOT_SELECTION_NS::MemberAttributes&lt; kTransient &gt; ElementLinkVector&lt; CONTAINER &gt;::m_elVec</definition>
        <argsstring></argsstring>
        <name>m_elVec</name>
        <briefdescription>
<para>Mark all transient members:. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="211" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="dc/d05/classElementLinkVector_1af92c94a4be579754c007b464de0eb107" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dc/d05/classElementLinkVector" kindref="compound">ElemLinkVec</ref> &amp;</type>
        <definition>ElementLinkVector&lt; CONTAINER &gt;::ElemLinkVec &amp; ElementLinkVector&lt; CONTAINER &gt;::operator=</definition>
        <argsstring>(const ElemLinkVec &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="dc/d05/classElementLinkVector" kindref="compound">ElemLinkVec</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Assignment operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="78" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.icc" bodystart="40" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="dc/d05/classElementLinkVector_1a33b0c0eb8b11b99f9aec7dee24e667df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool ElementLinkVector&lt; CONTAINER &gt;::toTransient</definition>
        <argsstring>()</argsstring>
        <name>toTransient</name>
        <reimplements refid="d4/d94/classElementLinkVectorBase_1acd688ffa5636923c9e008f63fa7221ce">toTransient</reimplements>
        <briefdescription>
<para>Reset the object&apos;s internal cache. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="170" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.icc" bodystart="215" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="dc/d05/classElementLinkVector_1ab798fbecd70e575a9248f19ae4dce1d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ElementLinkVector&lt; CONTAINER &gt;::toPersistent</definition>
        <argsstring>()</argsstring>
        <name>toPersistent</name>
        <briefdescription>
<para>Function copying the transient data into the persistent variables. </para>        </briefdescription>
        <detaileddescription>
<para>In a few cases the simplest way of syncronising the transient and persistent data of the object is to simply re-create the persistent data from scratch. This function does this.</para><para><simplesect kind="return"><para><computeroutput>true</computeroutput> in case of success, and <computeroutput>false</computeroutput> in case of failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="172" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.icc" bodystart="240" bodyend="263"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="dc/d05/classElementLinkVector" kindref="compound">ElementLinkVector</ref> implementation for standalone ROOT. </para>    </briefdescription>
    <detaileddescription>
<para>This class provides part of the interface provided by the offline implementation of <ref refid="dc/d05/classElementLinkVector" kindref="compound">ElementLinkVector</ref>. Just enough to make the code meaningfully usable in ROOT. But the plan is not to provide the full flexibility of the offline class.</para><para><simplesect kind="author"><para>Attila Krasznahorkay &lt;<ulink url="mailto:Attila.Krasznahorkay@cern.ch">Attila.Krasznahorkay@cern.ch</ulink>&gt;</para></simplesect>
<simplesect kind="rcs"><title>Revision</title><para>649074 </para></simplesect>
<simplesect kind="rcs"><title>Date</title><para>2015-02-23 17:51:40 +0100 (Mon, 23 Feb 2015) </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="5964">
        <label>ElementLinkVectorBase</label>
        <link refid="d4/d94/classElementLinkVectorBase"/>
      </node>
      <node id="5963">
        <label>SelectNoInstance</label>
        <link refid="d9/dec/classSelectNoInstance"/>
      </node>
      <node id="5962">
        <label>ElementLinkVector&lt; CONTAINER &gt;</label>
        <link refid="dc/d05/classElementLinkVector"/>
        <childnode refid="5963" relation="public-inheritance">
        </childnode>
        <childnode refid="5964" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5967">
        <label>ElementLinkVectorBase</label>
        <link refid="d4/d94/classElementLinkVectorBase"/>
      </node>
      <node id="5966">
        <label>SelectNoInstance</label>
        <link refid="d9/dec/classSelectNoInstance"/>
      </node>
      <node id="5965">
        <label>ElementLinkVector&lt; CONTAINER &gt;</label>
        <link refid="dc/d05/classElementLinkVector"/>
        <childnode refid="5966" relation="public-inheritance">
        </childnode>
        <childnode refid="5967" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" line="34" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/ElementLinkVector.h" bodystart="34" bodyend="182"/>
    <listofallmembers>
      <member refid="dc/d05/classElementLinkVector_1a8f7f3531ff081e044ce8846c8545d8f9" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>assign</name></member>
      <member refid="dc/d05/classElementLinkVector_1a8035bb799d49d5547b7c326704b84118" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>assign</name></member>
      <member refid="dc/d05/classElementLinkVector_1aee0691f648bde9018f89e395ab0849a1" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>at</name></member>
      <member refid="dc/d05/classElementLinkVector_1a7355630f8c4afe649186dd791d788f2d" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>back</name></member>
      <member refid="dc/d05/classElementLinkVector_1abf92235f5c495495212aff858f98f5ad" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>begin</name></member>
      <member refid="dc/d05/classElementLinkVector_1af441707fade419dee7f1673031f722d4" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>begin</name></member>
      <member refid="dc/d05/classElementLinkVector_1a2b5ae25fe15b681eb3efed950d8a36b9" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>capacity</name></member>
      <member refid="dc/d05/classElementLinkVector_1ada0b6330c61e75ae81c6fc8765665f00" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>clear</name></member>
      <member refid="dc/d05/classElementLinkVector_1a97d1f22264dac4dd8bc7e7cbd7b16d59" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>const_iterator</name></member>
      <member refid="dc/d05/classElementLinkVector_1a88c1b988c30f90b510a9c8ea70caa3e2" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>const_reference</name></member>
      <member refid="dc/d05/classElementLinkVector_1a1f68c1d7fca2fe838e8bee1a9cf1de87" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>const_reverse_iterator</name></member>
      <member refid="dc/d05/classElementLinkVector_1a69ae9ec3319b4c3dbd9251760fc8b63f" prot="private" virt="non-virtual"><scope>ElementLinkVector</scope><name>DictSel</name></member>
      <member refid="dc/d05/classElementLinkVector_1af8a4e9247c61edd8d95abb879c2f9737" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>ElementLinkVector</name></member>
      <member refid="dc/d05/classElementLinkVector_1ab26584576d67c23cc388f45e77d11831" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>ElementLinkVector</name></member>
      <member refid="dc/d05/classElementLinkVector_1a5a2602d3965188debf15bf421b2ac7a1" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>ElementLinkVector</name></member>
      <member refid="d4/d94/classElementLinkVectorBase_1afa4fbdb7a7e68515c47ed0a8abd9fba6" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>ElementLinkVectorBase</name></member>
      <member refid="dc/d05/classElementLinkVector_1a16a75ccc5e8db470843e3ff3fe40764f" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>ElemLink</name></member>
      <member refid="dc/d05/classElementLinkVector_1a75a554a4c8ce685f84eb8b4ead478a01" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>ElemLinkVec</name></member>
      <member refid="dc/d05/classElementLinkVector_1a92f578105d04e3e0ad227299b46d028c" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>empty</name></member>
      <member refid="dc/d05/classElementLinkVector_1a6023238d07a967bc492f088db3b51223" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>end</name></member>
      <member refid="dc/d05/classElementLinkVector_1aca5841d9f4daf09312147c59176613bf" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>end</name></member>
      <member refid="dc/d05/classElementLinkVector_1a2a164e71d6105d053138ec2b0964604e" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>erase</name></member>
      <member refid="dc/d05/classElementLinkVector_1a9a86c282ede7be9abce72f8ec99898a8" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>erase</name></member>
      <member refid="dc/d05/classElementLinkVector_1ab810f15795f6e215ba0a68dc2cadef62" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>front</name></member>
      <member refid="dc/d05/classElementLinkVector_1aa0dcfb96e7664473f22e4aae87f2627b" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>insert</name></member>
      <member refid="dc/d05/classElementLinkVector_1ad1aa5956f02f6e9370558e64b0e867ad" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>insert</name></member>
      <member refid="dc/d05/classElementLinkVector_1a65471393e5fe1a9d45afd12bd90c2b84" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>iterator</name></member>
      <member refid="dc/d05/classElementLinkVector_1a5afee52177d0312653b0c6f239220b35" prot="private" virt="non-virtual"><scope>ElementLinkVector</scope><name>m_elVec</name></member>
      <member refid="dc/d05/classElementLinkVector_1a6ca9704286b45bff18b7270f7ab135e6" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>m_elVec</name></member>
      <member refid="d4/d94/classElementLinkVectorBase_1a5df156b0557a88b6be81baa9d8821c75" prot="protected" virt="non-virtual"><scope>ElementLinkVector</scope><name>m_isDirectIO</name></member>
      <member refid="d4/d94/classElementLinkVectorBase_1ab1d69ced9a52e2998567725d7850ae7b" prot="protected" virt="non-virtual"><scope>ElementLinkVector</scope><name>m_persIndices</name></member>
      <member refid="d4/d94/classElementLinkVectorBase_1a92f42b1d1887bb6bb23a16d7ad600246" prot="protected" virt="non-virtual"><scope>ElementLinkVector</scope><name>m_persKeys</name></member>
      <member refid="dc/d05/classElementLinkVector_1a12ebcb21eca6c354bbe0092c65ab4281" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>max_size</name></member>
      <member refid="dc/d05/classElementLinkVector_1af92c94a4be579754c007b464de0eb107" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>operator=</name></member>
      <member refid="dc/d05/classElementLinkVector_1ae8bb7271fe60924e5dff80584f1f31ca" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>operator[]</name></member>
      <member refid="d4/d94/classElementLinkVectorBase_1a76eb8b1f8f101f48b343aa7fea15069d" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>persIndices</name></member>
      <member refid="d4/d94/classElementLinkVectorBase_1a36b0fbc10eddc225b8fe0d864d00e87d" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>persKeys</name></member>
      <member refid="dc/d05/classElementLinkVector_1a1085af81b832d5d2fb55a55971519646" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>pop_back</name></member>
      <member refid="dc/d05/classElementLinkVector_1acebcbc57f53fb6d14612aa306c276a61" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>push_back</name></member>
      <member refid="dc/d05/classElementLinkVector_1a25c7cbe8e3747f395b2ef34f54aa69e0" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>rbegin</name></member>
      <member refid="dc/d05/classElementLinkVector_1a901425f6d9d087f144320459a253a15b" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>rbegin</name></member>
      <member refid="dc/d05/classElementLinkVector_1a21c70e0467b595d52e0f13ca54b740bd" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>reference</name></member>
      <member refid="dc/d05/classElementLinkVector_1ad1331ebf6e305921fe12bce64d18bc78" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>rend</name></member>
      <member refid="dc/d05/classElementLinkVector_1a19e841e83760147b5990580193a03edb" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>rend</name></member>
      <member refid="dc/d05/classElementLinkVector_1afca68c240b4ff5b3fb447c79a1051253" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>reserve</name></member>
      <member refid="dc/d05/classElementLinkVector_1a611e58ec194a13f1978424a9e4bfbfe3" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>resize</name></member>
      <member refid="dc/d05/classElementLinkVector_1ab29ebedec078d122b34ae40503819416" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>reverse_iterator</name></member>
      <member refid="dc/d05/classElementLinkVector_1ac31306b86563a9d1b23ed49257719eaf" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>self</name></member>
      <member refid="d4/d94/classElementLinkVectorBase_1a45c75dc7421e25f0a0359922f21eb6d0" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>setPersIndices</name></member>
      <member refid="d4/d94/classElementLinkVectorBase_1aa7f7005a7d56cc802ec69fe99259025d" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>setPersKeys</name></member>
      <member refid="dc/d05/classElementLinkVector_1ad32c38629b45925a53908b2d7589b4a0" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>size</name></member>
      <member refid="dc/d05/classElementLinkVector_1af8462461239987bc932871ebfa3e9b41" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>size_type</name></member>
      <member refid="dc/d05/classElementLinkVector_1af77414fc005c47c00eef0b501dacdb40" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>swap</name></member>
      <member refid="dc/d05/classElementLinkVector_1ab798fbecd70e575a9248f19ae4dce1d0" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>toPersistent</name></member>
      <member refid="dc/d05/classElementLinkVector_1a33b0c0eb8b11b99f9aec7dee24e667df" prot="public" virt="virtual"><scope>ElementLinkVector</scope><name>toTransient</name></member>
      <member refid="dc/d05/classElementLinkVector_1aaa7c52447d6a30a4161386f6f15c60e4" prot="public" virt="non-virtual"><scope>ElementLinkVector</scope><name>value_type</name></member>
      <member refid="d4/d94/classElementLinkVectorBase_1a26c4c0d2d97b79ae0061ecc7da179523" prot="public" virt="virtual"><scope>ElementLinkVector</scope><name>~ElementLinkVectorBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
