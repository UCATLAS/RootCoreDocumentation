<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="dc/dd6/TAuxStore_8h" kind="file">
    <compoundname>TAuxStore.h</compoundname>
    <includes local="no">vector</includes>
    <includes local="no">string</includes>
    <includes refid="d6/d3e/IAuxStore_8h" local="yes">AthContainersInterfaces/IAuxStore.h</includes>
    <includes refid="d9/db5/IAuxStoreIO_8h" local="yes">AthContainersInterfaces/IAuxStoreIO.h</includes>
    <includes refid="d7/d22/threading_8h" local="yes">AthContainers/tools/threading.h</includes>
    <includes refid="d3/dd4/AuxSelection_8h" local="yes">xAODCore/AuxSelection.h</includes>
    <includes refid="df/d0a/TReturnCode_8h" local="yes">xAODRootAccess/tools/TReturnCode.h</includes>
    <includedby refid="d2/d3f/TAuxManager_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/Root/TAuxManager.cxx</includedby>
    <includedby refid="d9/d3f/TAuxStore_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/Root/TAuxStore.cxx</includedby>
    <includedby refid="d3/dd4/TEvent_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/Root/TEvent.cxx</includedby>
    <includedby refid="dc/d09/ut__xaodrootaccess__tauxstore__test_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/test/ut_xaodrootaccess_tauxstore_test.cxx</includedby>
    <includedby refid="df/dff/ut__xaodrootaccess__tevent__test_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/test/ut_xaodrootaccess_tevent_test.cxx</includedby>
    <incdepgraph>
      <node id="412511">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="412487">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="412488" relation="include">
        </childnode>
        <childnode refid="412490" relation="include">
        </childnode>
        <childnode refid="412503" relation="include">
        </childnode>
        <childnode refid="412502" relation="include">
        </childnode>
      </node>
      <node id="412499">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="412501">
        <label>functional</label>
      </node>
      <node id="412498">
        <label>limits</label>
      </node>
      <node id="412503">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="412509">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="412495">
        <label>iterator</label>
      </node>
      <node id="412514">
        <label>xAODRootAccess/tools/TReturnCode.h</label>
        <link refid="df/d0a/TReturnCode_8h_source"/>
      </node>
      <node id="412504">
        <label>AthContainersInterfaces/IAuxStoreIO.h</label>
        <link refid="d9/db5/IAuxStoreIO_8h"/>
        <childnode refid="412489" relation="include">
        </childnode>
        <childnode refid="412505" relation="include">
        </childnode>
        <childnode refid="412506" relation="include">
        </childnode>
        <childnode refid="412502" relation="include">
        </childnode>
      </node>
      <node id="412491">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="412492" relation="include">
        </childnode>
        <childnode refid="412500" relation="include">
        </childnode>
        <childnode refid="412501" relation="include">
        </childnode>
      </node>
      <node id="412497">
        <label>cmath</label>
      </node>
      <node id="412512">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="412486">
        <label>string</label>
      </node>
      <node id="412510">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="412489">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="412490" relation="include">
        </childnode>
        <childnode refid="412491" relation="include">
        </childnode>
      </node>
      <node id="412492">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="412493" relation="include">
        </childnode>
        <childnode refid="412494" relation="include">
        </childnode>
        <childnode refid="412495" relation="include">
        </childnode>
        <childnode refid="412490" relation="include">
        </childnode>
        <childnode refid="412496" relation="include">
        </childnode>
        <childnode refid="412497" relation="include">
        </childnode>
        <childnode refid="412498" relation="include">
        </childnode>
        <childnode refid="412486" relation="include">
        </childnode>
        <childnode refid="412499" relation="include">
        </childnode>
      </node>
      <node id="412505">
        <label>typeinfo</label>
      </node>
      <node id="412502">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="412485">
        <label>vector</label>
      </node>
      <node id="412494">
        <label>utility</label>
      </node>
      <node id="412508">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="412507">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="412508" relation="include">
        </childnode>
        <childnode refid="412509" relation="include">
        </childnode>
        <childnode refid="412510" relation="include">
        </childnode>
        <childnode refid="412511" relation="include">
        </childnode>
        <childnode refid="412512" relation="include">
        </childnode>
      </node>
      <node id="412496">
        <label>cstdlib</label>
      </node>
      <node id="412513">
        <label>xAODCore/AuxSelection.h</label>
        <link refid="d3/dd4/AuxSelection_8h_source"/>
        <childnode refid="412506" relation="include">
        </childnode>
        <childnode refid="412486" relation="include">
        </childnode>
        <childnode refid="412489" relation="include">
        </childnode>
      </node>
      <node id="412488">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="412489" relation="include">
        </childnode>
        <childnode refid="412490" relation="include">
        </childnode>
        <childnode refid="412502" relation="include">
        </childnode>
      </node>
      <node id="412490">
        <label>cstddef</label>
      </node>
      <node id="412506">
        <label>set</label>
      </node>
      <node id="412493">
        <label>algorithm</label>
      </node>
      <node id="412484">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/TAuxStore.h</label>
        <link refid="TAuxStore.h"/>
        <childnode refid="412485" relation="include">
        </childnode>
        <childnode refid="412486" relation="include">
        </childnode>
        <childnode refid="412487" relation="include">
        </childnode>
        <childnode refid="412504" relation="include">
        </childnode>
        <childnode refid="412507" relation="include">
        </childnode>
        <childnode refid="412513" relation="include">
        </childnode>
        <childnode refid="412514" relation="include">
        </childnode>
      </node>
      <node id="412500">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innerclass refid="d7/d77/classxAOD_1_1TAuxStore" prot="public">xAOD::TAuxStore</innerclass>
    <innerclass refid="db/d83/structxAOD_1_1TAuxStore_1_1TSAuxidSet" prot="private">xAOD::TAuxStore::TSAuxidSet</innerclass>
    <innerclass refid="d6/d59/classxAOD_1_1TAuxStore_1_1TBranchHandle" prot="private">xAOD::TAuxStore::TBranchHandle</innerclass>
    <innernamespace refid="dd/d59/namespaceSG">SG</innernamespace>
    <innernamespace refid="dd/d44/namespacexAOD">xAOD</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Dear<sp/>emacs,<sp/>this<sp/>is<sp/>-*-<sp/>c++<sp/>-*-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>$Id:<sp/>TAuxStore.h<sp/>718392<sp/>2016-01-19<sp/>10:41:32Z<sp/>krasznaa<sp/>$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>XAODROOTACCESS_TAUXSTORE_H</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>XAODROOTACCESS_TAUXSTORE_H</highlight></codeline>
<codeline lineno="5"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>STL<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EDM<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d6/d3e/IAuxStore_8h" kindref="compound" tooltip="Interface for non-const operations on an auxiliary store.">AthContainersInterfaces/IAuxStore.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d9/db5/IAuxStoreIO_8h" kindref="compound" tooltip="Interface providing I/O for a generic auxiliary store.">AthContainersInterfaces/IAuxStoreIO.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d7/d22/threading_8h" kindref="compound" tooltip="Threading definitions.">AthContainers/tools/threading.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODCore/AuxSelection.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Local<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODRootAccess/tools/TReturnCode.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Forward<sp/>declaration(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TTree;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TBranch;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">SG<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">IAuxTypeVector;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">AuxStoreInternal;</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">xAOD<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Forward<sp/>declaration(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TEvent;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="d7/d77/classxAOD_1_1TAuxStore" refkind="compound"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d7/d77/classxAOD_1_1TAuxStore" kindref="compound" tooltip="&amp;quot;ROOT implementation&amp;quot; of IAuxStore">TAuxStore</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>SG::IAuxStore,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>SG::IAuxStoreIO<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="d7/d77/classxAOD_1_1TAuxStore_1a8c623db1a717712c7c4b6fa671f5f345" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="de/d95/classxAOD_1_1TEvent" kindref="compound" tooltip="Tool for accessing xAOD files outside of Athena.">TEvent</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="52" refid="d7/d77/classxAOD_1_1TAuxStore_1ad7cf952b0de5a1b959a31ff655efe852" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1ad7cf952b0de5a1b959a31ff655efe852" kindref="member" tooltip="&amp;quot;Structural&amp;quot; modes of the object">EStructMode</ref><sp/>{</highlight></codeline>
<codeline lineno="53" refid="d7/d77/classxAOD_1_1TAuxStore_1ad7cf952b0de5a1b959a31ff655efe852ae0c432fa7f19ca9ce01c79176bd6580b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1ad7cf952b0de5a1b959a31ff655efe852ae0c432fa7f19ca9ce01c79176bd6580b" kindref="member" tooltip="The structure mode is not defined.">kUndefinedStore</ref><sp/>=<sp/>0,<sp/></highlight></codeline>
<codeline lineno="54" refid="d7/d77/classxAOD_1_1TAuxStore_1ad7cf952b0de5a1b959a31ff655efe852aa213f44ce9479342d2a394a2a3b124d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1ad7cf952b0de5a1b959a31ff655efe852aa213f44ce9479342d2a394a2a3b124d9" kindref="member" tooltip="The object describes an entire container.">kContainerStore</ref><sp/>=<sp/>1,<sp/></highlight></codeline>
<codeline lineno="55" refid="d7/d77/classxAOD_1_1TAuxStore_1ad7cf952b0de5a1b959a31ff655efe852ad7da9cfb3a909ac0ff8756ede9947587" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1ad7cf952b0de5a1b959a31ff655efe852ad7da9cfb3a909ac0ff8756ede9947587" kindref="member" tooltip="The object describes a single object.">kObjectStore</ref><sp/><sp/><sp/><sp/>=<sp/>2<sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="58" refid="d7/d77/classxAOD_1_1TAuxStore_1a020e470c65dc93dfebfb6b710a78a5ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1a020e470c65dc93dfebfb6b710a78a5ac" kindref="member" tooltip="Convenience type declaration.">auxid_t</ref>;</highlight></codeline>
<codeline lineno="60" refid="d7/d77/classxAOD_1_1TAuxStore_1aa1c1e392ec813c633b1162641f619743" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">SG::auxid_set_t</ref><sp/><ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">auxid_set_t</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1a69485ce535311511c97f51d299ba9ac3" kindref="member" tooltip="Default constructor.">TAuxStore</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1acb4c520a27c77a913012c1172904799d" kindref="member" tooltip="Get the currently configured branch name prefix.">prefix</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>Bool_t<sp/>topStore<sp/>=<sp/>kTRUE,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1ad7cf952b0de5a1b959a31ff655efe852" kindref="member" tooltip="&amp;quot;Structural&amp;quot; modes of the object">EStructMode</ref><sp/>mode<sp/>=<sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1ad7cf952b0de5a1b959a31ff655efe852ae0c432fa7f19ca9ce01c79176bd6580b" kindref="member" tooltip="The structure mode is not defined.">kUndefinedStore</ref>,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1a021d57869900ef910f011d0efda3ca34" kindref="member" tooltip="Get the size of the baskets created for the output branches.">basketSize</ref><sp/>=<sp/>2048,<sp/>Int_t<sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1a624f848a82bc260507ade5417777cb64" kindref="member" tooltip="Get the split level of the output branches.">splitLevel</ref><sp/>=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1a05268b7e9dfb501d79b3d6fa4eaefc63" kindref="member" tooltip="Destructor.">~TAuxStore</ref>();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1ad7cf952b0de5a1b959a31ff655efe852" kindref="member" tooltip="&amp;quot;Structural&amp;quot; modes of the object">EStructMode</ref><sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1a38c18c1dc291e16364490bcf7848563c" kindref="member" tooltip="Get what structure mode the object was constructed with.">structMode</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/da4/classxAOD_1_1TReturnCode" kindref="compound">TReturnCode</ref><sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1a55b35fac4c7388272f88ff235c89fc38" kindref="member" tooltip="Set the structure mode of the object to a new value.">setStructMode</ref>(<sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1ad7cf952b0de5a1b959a31ff655efe852" kindref="member" tooltip="&amp;quot;Structural&amp;quot; modes of the object">EStructMode</ref><sp/>mode<sp/>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1acb4c520a27c77a913012c1172904799d" kindref="member" tooltip="Get the currently configured branch name prefix.">prefix</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1a2a7cee99018cc29536d29e20a0319b18" kindref="member" tooltip="Set the branch name prefix.">setPrefix</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1acb4c520a27c77a913012c1172904799d" kindref="member" tooltip="Get the currently configured branch name prefix.">prefix</ref><sp/>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Bool_t<sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1a13ec10837d3aaee4a63169d710012300" kindref="member" tooltip="Check if the object is a &amp;quot;top store&amp;quot;, or not.">isTopStore</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1a5a3da4966ebff5a8301b4bdd9b04a80d" kindref="member" tooltip="Set whether the object should behave as a &amp;quot;top store&amp;quot; or not.">setTopStore</ref>(<sp/>Bool_t<sp/>value<sp/>=<sp/>kTRUE<sp/>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1a021d57869900ef910f011d0efda3ca34" kindref="member" tooltip="Get the size of the baskets created for the output branches.">basketSize</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1af8073cde9f00990b6e0de662aefafb02" kindref="member" tooltip="Set the size of the baskets created for the output branches.">setBasketSize</ref>(<sp/>Int_t<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1a624f848a82bc260507ade5417777cb64" kindref="member" tooltip="Get the split level of the output branches.">splitLevel</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1a4470d35f873363e154cd8a7980fa591f" kindref="member" tooltip="Set the split level of the output branches.">setSplitLevel</ref>(<sp/>Int_t<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/da4/classxAOD_1_1TReturnCode" kindref="compound">TReturnCode</ref><sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1a939bf0938bbddd31e71c393a7f8c1476" kindref="member" tooltip="Connect the object to an input TTree.">readFrom</ref>(<sp/>::TTree*<sp/>tree,<sp/>::Bool_t<sp/>printWarnings<sp/>=<sp/>kTRUE<sp/>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/da4/classxAOD_1_1TReturnCode" kindref="compound">TReturnCode</ref><sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1aebc16a6c3c0c0f2918c07bf402c3faa9" kindref="member" tooltip="Connect the object to an output TTree.">writeTo</ref>(<sp/>::TTree*<sp/>tree<sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1ada32c6310920afbf3adf1c202c13b9d1" kindref="member" tooltip="Read the values from the specified TTree entry.">getEntry</ref>(<sp/>Long64_t<sp/>entry,<sp/>Int_t<sp/>getall<sp/>=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1a58ea6131b64e73b49ea31bc75ec69731" kindref="member" tooltip="Tell the object that all branches will need to be re-read.">reset</ref>();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1a1122528f8528e1042d1581029b3c930f" kindref="member" tooltip="Get a pointer to a given array.">getData</ref>(<sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1a020e470c65dc93dfebfb6b710a78a5ac" kindref="member" tooltip="Convenience type declaration.">auxid_t</ref><sp/>auxid<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">auxid_set_t</ref>&amp;<sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1ae0d420f97f8cd76805cf7b8445c2a85e" kindref="member" tooltip="Get the types(names) of variables handled by this container.">getAuxIDs</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1a4deb553e290dad77b6f5c2e84e26560d" kindref="member" tooltip="Get a pointer to a given array, creating the array if necessary.">getDecoration</ref>(<sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1a020e470c65dc93dfebfb6b710a78a5ac" kindref="member" tooltip="Convenience type declaration.">auxid_t</ref><sp/>auxid,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1af4ca8c9d4c674a087cc201401889e7b7" kindref="member" tooltip="Return the number of elements in the store.">size</ref>,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>capacity<sp/>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1a00986f58a4b03c8fd383f67bcaffb417" kindref="member" tooltip="Lock the object, and don&amp;#39;t let decorations be added.">lock</ref>();<sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1aa54c325574f8010e131e5f36d64ac639" kindref="member">clearDecorations</ref>();<sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1af4ca8c9d4c674a087cc201401889e7b7" kindref="member" tooltip="Return the number of elements in the store.">size</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"></codeline>
<codeline lineno="131"></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1a1122528f8528e1042d1581029b3c930f" kindref="member" tooltip="Get a pointer to a given array.">getData</ref>(<sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1a020e470c65dc93dfebfb6b710a78a5ac" kindref="member" tooltip="Convenience type declaration.">auxid_t</ref><sp/>auxid,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1af4ca8c9d4c674a087cc201401889e7b7" kindref="member" tooltip="Return the number of elements in the store.">size</ref>,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>capacity<sp/>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">auxid_set_t</ref>&amp;<sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1a09182a6ecf681b029fc136e954e6220a" kindref="member" tooltip="Return a set of writable data identifiers.">getWritableAuxIDs</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1a0ae2b8968e98d214a873d9ba71396aea" kindref="member" tooltip="Resize the arrays to a given size.">resize</ref>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1af4ca8c9d4c674a087cc201401889e7b7" kindref="member" tooltip="Return the number of elements in the store.">size</ref><sp/>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1a374f9c52c985144de4e2489a71a599d6" kindref="member" tooltip="Reserve a given size for the arrays.">reserve</ref>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1af4ca8c9d4c674a087cc201401889e7b7" kindref="member" tooltip="Return the number of elements in the store.">size</ref><sp/>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1a3cc2ab29e748776999478fc1c9aed89d" kindref="member" tooltip="Shift the contents of the stored arrays.">shift</ref>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos,<sp/>ptrdiff_t<sp/>offs<sp/>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"></codeline>
<codeline lineno="150"></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1a6c53c19802435b7512a58ecd193aad8b" kindref="member" tooltip="Get a pointer to the data being stored for one aux data item.">getIOData</ref>(<sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1a020e470c65dc93dfebfb6b710a78a5ac" kindref="member" tooltip="Convenience type declaration.">auxid_t</ref><sp/>auxid<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::type_info*<sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1a456132ea9c9d352ac102f79b428db9a6" kindref="member" tooltip="Return the type of the data to be stored for one aux data item.">getIOType</ref>(<sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1a020e470c65dc93dfebfb6b710a78a5ac" kindref="member" tooltip="Convenience type declaration.">auxid_t</ref><sp/>auxid<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">auxid_set_t</ref>&amp;<sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1af25aa5f7c49ebf12cfe1efce13366647" kindref="member" tooltip="Get the types(names) of variables created dynamically.">getDynamicAuxIDs</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1a315008cfc1331acd2639b78722ecb3c9" kindref="member" tooltip="Select dynamic auxiliary attributes for writing.">selectAux</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;<sp/>std::string<sp/>&gt;&amp;<sp/>attributes<sp/>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">auxid_set_t</ref>&amp;<sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1a8bba42e8001df5a3f99ef3f4cd453b08" kindref="member" tooltip="Get the IDs of the selected aux variables.">getSelectedAuxIDs</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/da4/classxAOD_1_1TReturnCode" kindref="compound">TReturnCode</ref><sp/>initStats(<sp/>::TTree*<sp/>tree<sp/>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/da4/classxAOD_1_1TReturnCode" kindref="compound">TReturnCode</ref><sp/>setupInputData(<sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1a020e470c65dc93dfebfb6b710a78a5ac" kindref="member" tooltip="Convenience type declaration.">auxid_t</ref><sp/>auxid<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/da4/classxAOD_1_1TReturnCode" kindref="compound">TReturnCode</ref><sp/>setupOutputData(<sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1a020e470c65dc93dfebfb6b710a78a5ac" kindref="member" tooltip="Convenience type declaration.">auxid_t</ref><sp/>auxid<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/da4/classxAOD_1_1TReturnCode" kindref="compound">TReturnCode</ref><sp/>scanInputTree();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/da4/classxAOD_1_1TReturnCode" kindref="compound">TReturnCode</ref><sp/>setupAuxBranch(<sp/>::TBranch*<sp/>br,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>auxName,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Bool_t<sp/>staticBranch<sp/>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::Bool_t<sp/>isAuxIDSelected(<sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1a020e470c65dc93dfebfb6b710a78a5ac" kindref="member" tooltip="Convenience type declaration.">auxid_t</ref><sp/>auxid<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>::Bool_t<sp/>isPrimitiveBranch(<sp/>TBranch*<sp/>br<sp/>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>::Bool_t<sp/>isContainerBranch(<sp/>TBranch*<sp/>br,<sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1a020e470c65dc93dfebfb6b710a78a5ac" kindref="member" tooltip="Convenience type declaration.">auxid_t</ref><sp/>auxid<sp/>);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>::Bool_t<sp/>isRegisteredType(<sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1a020e470c65dc93dfebfb6b710a78a5ac" kindref="member" tooltip="Convenience type declaration.">auxid_t</ref><sp/>auxid<sp/>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>m_prefix;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>m_dynPrefix;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::Bool_t<sp/>m_topStore;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1ad7cf952b0de5a1b959a31ff655efe852" kindref="member" tooltip="&amp;quot;Structural&amp;quot; modes of the object">EStructMode</ref><sp/>m_structMode;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::Int_t<sp/>m_basketSize;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::Int_t<sp/>m_splitLevel;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::Long64_t<sp/>m_entry;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::TTree*<sp/>m_inTree;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::TTree*<sp/>m_outTree;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::Bool_t<sp/>m_inputScanned;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/dd6/classxAOD_1_1AuxSelection" kindref="compound">AuxSelection</ref><sp/>m_selection;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d1c/classSG_1_1AuxStoreInternal" kindref="compound" tooltip="An auxiliary data store that holds data internally.">SG::AuxStoreInternal</ref>*<sp/>m_transientStore;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/><ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">auxid_set_t</ref><sp/>m_auxIDs;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>SG::IAuxTypeVector*<sp/>&gt;<sp/>m_vecs;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>std::size_t<sp/>m_size;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::Bool_t<sp/>m_locked;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>::Bool_t<sp/>&gt;<sp/>m_isDecoration;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>m_tick;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>AthContainers_detail::mutex<sp/>mutex_t;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>AthContainers_detail::lock_guard&lt;<sp/>mutex_t<sp/>&gt;<sp/>guard_t;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>mutex_t<sp/>m_mutex1,<sp/>m_mutex2;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">TSAuxidSet<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>m_tick;<sp/></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">auxid_set_t</ref><sp/>m_set;<sp/></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TSAuxidSet(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>tick,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">auxid_set_t</ref>&amp;<sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_tick(<sp/>tick<sp/>),<sp/>m_set(<sp/>set<sp/>)<sp/>{}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>AthContainers_detail::thread_specific_ptr&lt;<sp/>TSAuxidSet<sp/>&gt;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_tsAuxids;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TBranchHandle<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TBranchHandle(<sp/>::Bool_t<sp/>staticBranch,<sp/>::Bool_t<sp/>primitiveBranch,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::type_info*<sp/>ti,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>obj,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/>auxid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string*<sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1acb4c520a27c77a913012c1172904799d" kindref="member" tooltip="Get the currently configured branch name prefix.">prefix</ref><sp/>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Int_t<sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1ada32c6310920afbf3adf1c202c13b9d1" kindref="member" tooltip="Read the values from the specified TTree entry.">getEntry</ref>(<sp/>::Long64_t<sp/>entry<sp/>);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::TBranch**<sp/>branchPtr();</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>objectPtr();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>inputObjectPtr();</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>outputObjectPtr();</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::type_info*<sp/>typeInfo()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore_1a58ea6131b64e73b49ea31bc75ec69731" kindref="member" tooltip="Tell the object that all branches will need to be re-read.">reset</ref>();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::TBranch*<sp/>m_branch;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>m_object;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Bool_t<sp/>m_static;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Bool_t<sp/>m_primitive;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::type_info*<sp/>m_typeInfo;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Bool_t<sp/>m_needsRead;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/>m_auxid;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string*<sp/>m_prefix;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>TBranchHandle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>TBranchHandle*<sp/>&gt;<sp/>m_branches;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>bool<sp/>&gt;<sp/>m_branchesWritten;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>bool<sp/>&gt;<sp/>m_missingBranches;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/>};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>TAuxStore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>xAOD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>XAODROOTACCESS_TAUXSTORE_H</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/TAuxStore.h"/>
  </compounddef>
</doxygen>
