<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="dc/db4/ut__meta__persist_8cxx" kind="file">
    <compoundname>ut_meta_persist.cxx</compoundname>
    <includes refid="d3/df9/SampleHandler_2SampleHandler_2Global_8h" local="no">SampleHandler/Global.h</includes>
    <includes refid="db/dff/UnitTestDir_8h" local="no">RootCoreUtils/UnitTestDir.h</includes>
    <includes refid="d7/d50/MetaObject_8h" local="no">SampleHandler/MetaObject.h</includes>
    <includes refid="db/d35/MetaVector_8h" local="no">SampleHandler/MetaVector.h</includes>
    <includes local="no">TFile.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">memory</includes>
    <incdepgraph>
      <node id="265157">
        <label>RootCoreUtils/Deprecated.h</label>
        <link refid="d1/d0f/RootCoreUtils_2RootCoreUtils_2Deprecated_8h_source"/>
        <childnode refid="265153" relation="include">
        </childnode>
      </node>
      <node id="265161">
        <label>SampleHandler/Meta.h</label>
        <link refid="d8/d85/Meta_8h_source"/>
        <childnode refid="265151" relation="include">
        </childnode>
        <childnode refid="265154" relation="include">
        </childnode>
        <childnode refid="265162" relation="include">
        </childnode>
      </node>
      <node id="265154">
        <label>string</label>
      </node>
      <node id="265150">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/test/ut_meta_persist.cxx</label>
        <link refid="ut_meta_persist.cxx"/>
        <childnode refid="265151" relation="include">
        </childnode>
        <childnode refid="265152" relation="include">
        </childnode>
        <childnode refid="265155" relation="include">
        </childnode>
        <childnode refid="265159" relation="include">
        </childnode>
        <childnode refid="265163" relation="include">
        </childnode>
        <childnode refid="265164" relation="include">
        </childnode>
        <childnode refid="265165" relation="include">
        </childnode>
      </node>
      <node id="265155">
        <label>SampleHandler/MetaObject.h</label>
        <link refid="d7/d50/MetaObject_8h_source"/>
        <childnode refid="265151" relation="include">
        </childnode>
        <childnode refid="265156" relation="include">
        </childnode>
        <childnode refid="265157" relation="include">
        </childnode>
        <childnode refid="265154" relation="include">
        </childnode>
        <childnode refid="265158" relation="include">
        </childnode>
      </node>
      <node id="265159">
        <label>SampleHandler/MetaVector.h</label>
        <link refid="db/d35/MetaVector_8h_source"/>
        <childnode refid="265151" relation="include">
        </childnode>
        <childnode refid="265160" relation="include">
        </childnode>
        <childnode refid="265161" relation="include">
        </childnode>
        <childnode refid="265156" relation="include">
        </childnode>
      </node>
      <node id="265160">
        <label>vector</label>
      </node>
      <node id="265163">
        <label>TFile.h</label>
      </node>
      <node id="265153">
        <label>RootCoreUtils/Global.h</label>
        <link refid="d6/d7f/RootCoreUtils_2RootCoreUtils_2Global_8h_source"/>
      </node>
      <node id="265152">
        <label>RootCoreUtils/UnitTestDir.h</label>
        <link refid="db/dff/UnitTestDir_8h_source"/>
        <childnode refid="265153" relation="include">
        </childnode>
        <childnode refid="265154" relation="include">
        </childnode>
      </node>
      <node id="265164">
        <label>iostream</label>
      </node>
      <node id="265162">
        <label>TNamed.h</label>
      </node>
      <node id="265156">
        <label>RootCoreUtils/Assert.h</label>
        <link refid="d3/dac/Assert_8h_source"/>
        <childnode refid="265153" relation="include">
        </childnode>
      </node>
      <node id="265151">
        <label>SampleHandler/Global.h</label>
        <link refid="d3/df9/SampleHandler_2SampleHandler_2Global_8h_source"/>
      </node>
      <node id="265165">
        <label>memory</label>
      </node>
      <node id="265158">
        <label>TCollection.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="dc/db4/ut__meta__persist_8cxx_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/test/ut_meta_persist.cxx" line="30" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/test/ut_meta_persist.cxx" bodystart="29" bodyend="66"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>Nils<sp/>Krumnack<sp/>2012.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>(See<sp/>accompanying<sp/>file<sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Please<sp/>feel<sp/>free<sp/>to<sp/>contact<sp/>me<sp/>(krumnack@iastate.edu)<sp/>for<sp/>bug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>reports,<sp/>feature<sp/>suggestions,<sp/>praise<sp/>and<sp/>complaints.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SampleHandler/Global.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;RootCoreUtils/UnitTestDir.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SampleHandler/MetaObject.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SampleHandler/MetaVector.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TFile.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>main<sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">SH;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main<sp/>()</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><ref refid="d9/da0/classRCU_1_1UnitTestDir" kindref="compound">RCU::UnitTestDir</ref><sp/>dir<sp/>(</highlight><highlight class="stringliteral">&quot;SampleHandler&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MetaPersist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>std::auto_ptr&lt;MetaObject&gt;<sp/>meta1<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="db/d3a/classSH_1_1MetaObject" kindref="compound" tooltip="A class that manages meta-data to be associated with an object.">MetaObject</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>valDouble<sp/>=<sp/>42;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>meta1-&gt;setDouble<sp/>(</highlight><highlight class="stringliteral">&quot;double&quot;</highlight><highlight class="normal">,<sp/>valDouble);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>valString<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>meta1-&gt;setString<sp/>(</highlight><highlight class="stringliteral">&quot;string&quot;</highlight><highlight class="normal">,<sp/>valString);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Long64_t&gt;<sp/>valVector<sp/>(1,<sp/>1);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>meta1-&gt;addReplace<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="de/d63/classSH_1_1MetaVector" kindref="compound" tooltip="This class defines a templatized version of the meta-data in vector form.">MetaVector&lt;Long64_t&gt;</ref>(</highlight><highlight class="stringliteral">&quot;vectorLong64&quot;</highlight><highlight class="normal">,<sp/>valVector));</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TFile<sp/>file<sp/>((dir.path()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/meta.root&quot;</highlight><highlight class="normal">).c_str(),<sp/></highlight><highlight class="stringliteral">&quot;RECREATE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>file.WriteObject<sp/>(meta1.get(),<sp/></highlight><highlight class="stringliteral">&quot;meta&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>TFile<sp/>file<sp/>((dir.path()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/meta.root&quot;</highlight><highlight class="normal">).c_str(),<sp/></highlight><highlight class="stringliteral">&quot;READ&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>std::auto_ptr&lt;MetaObject&gt;<sp/>meta2</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(dynamic_cast&lt;MetaObject*&gt;(file.Get<sp/>(</highlight><highlight class="stringliteral">&quot;meta&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_ASSERT_SOFT<sp/>(meta2.get()<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_ASSERT_SOFT<sp/>(meta2-&gt;castDouble<sp/>(</highlight><highlight class="stringliteral">&quot;double&quot;</highlight><highlight class="normal">)<sp/>==<sp/>valDouble);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_ASSERT_SOFT<sp/>(meta2-&gt;castString<sp/>(</highlight><highlight class="stringliteral">&quot;string&quot;</highlight><highlight class="normal">)<sp/>==<sp/>valString);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d63/classSH_1_1MetaVector" kindref="compound" tooltip="This class defines a templatized version of the meta-data in vector form.">MetaVector&lt;Long64_t&gt;</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>metaVectorLong64</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="de/d63/classSH_1_1MetaVector" kindref="compound" tooltip="This class defines a templatized version of the meta-data in vector form.">MetaVector&lt;Long64_t&gt;</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(meta2-&gt;get<sp/>(</highlight><highlight class="stringliteral">&quot;vectorLong64&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_ASSERT_SOFT<sp/>(metaVectorLong64<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_ASSERT_SOFT<sp/>(metaVectorLong64-&gt;value<sp/>==<sp/>valVector);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;caught<sp/>exception:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>e.what()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SampleHandler/test/ut_meta_persist.cxx"/>
  </compounddef>
</doxygen>
