<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="dc/dda/Truncation__test_8cxx" kind="file">
    <compoundname>Truncation_test.cxx</compoundname>
    <includes local="yes">AthenaKernel/getMessageSvc.h</includes>
    <includes local="yes">GaudiKernel/MsgStream.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">algorithm</includes>
    <includes refid="dc/d67/HLTResult_8h" local="yes">TrigSteeringEvent/HLTResult.h</includes>
    <incdepgraph>
      <node id="331042">
        <label>stdint.h</label>
      </node>
      <node id="331045">
        <label>CLIDSvc/CLASS_DEF.h</label>
      </node>
      <node id="331040">
        <label>string</label>
      </node>
      <node id="331039">
        <label>map</label>
      </node>
      <node id="331046">
        <label>AthenaKernel/IClassIDSvc.h</label>
      </node>
      <node id="331033">
        <label>AthenaKernel/getMessageSvc.h</label>
      </node>
      <node id="331032">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/test/Truncation_test.cxx</label>
        <link refid="Truncation_test.cxx"/>
        <childnode refid="331033" relation="include">
        </childnode>
        <childnode refid="331034" relation="include">
        </childnode>
        <childnode refid="331035" relation="include">
        </childnode>
        <childnode refid="331036" relation="include">
        </childnode>
        <childnode refid="331037" relation="include">
        </childnode>
      </node>
      <node id="331038">
        <label>vector</label>
      </node>
      <node id="331044">
        <label>TrigSteeringEvent/GenericResult.h</label>
        <link refid="d4/d5f/GenericResult_8h_source"/>
        <childnode refid="331042" relation="include">
        </childnode>
        <childnode refid="331045" relation="include">
        </childnode>
      </node>
      <node id="331037">
        <label>TrigSteeringEvent/HLTResult.h</label>
        <link refid="dc/d67/HLTResult_8h"/>
        <childnode refid="331038" relation="include">
        </childnode>
        <childnode refid="331039" relation="include">
        </childnode>
        <childnode refid="331040" relation="include">
        </childnode>
        <childnode refid="331041" relation="include">
        </childnode>
        <childnode refid="331042" relation="include">
        </childnode>
        <childnode refid="331043" relation="include">
        </childnode>
        <childnode refid="331044" relation="include">
        </childnode>
        <childnode refid="331046" relation="include">
        </childnode>
        <childnode refid="331045" relation="include">
        </childnode>
      </node>
      <node id="331035">
        <label>iostream</label>
      </node>
      <node id="331034">
        <label>GaudiKernel/MsgStream.h</label>
      </node>
      <node id="331043">
        <label>TrigSteeringEvent/Enums.h</label>
        <link refid="d5/d69/TrigSteeringEvent_2TrigSteeringEvent_2Enums_8h_source"/>
        <childnode refid="331038" relation="include">
        </childnode>
        <childnode refid="331040" relation="include">
        </childnode>
        <childnode refid="331042" relation="include">
        </childnode>
      </node>
      <node id="331041">
        <label>set</label>
      </node>
      <node id="331036">
        <label>algorithm</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="dc/dda/Truncation__test_8cxx_1abec93b08b62f62356ca2379fc16b62a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int test_Truncation</definition>
        <argsstring>(HLTResult &amp;res, int payload_size, unsigned expected_size, unsigned expected_chains_size, unsigned expected_nav_size, unsigned expected_extras_size)</argsstring>
        <name>test_Truncation</name>
        <param>
          <type><ref refid="d9/d4b/classHLT_1_1HLTResult" kindref="compound">HLTResult</ref> &amp;</type>
          <declname>res</declname>
        </param>
        <param>
          <type>int</type>
          <declname>payload_size</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>expected_size</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>expected_chains_size</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>expected_nav_size</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>expected_extras_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/test/Truncation_test.cxx" line="19" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/test/Truncation_test.cxx" bodystart="19" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="dc/dda/Truncation__test_8cxx_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/test/Truncation_test.cxx" line="63" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/test/Truncation_test.cxx" bodystart="63" bodyend="134"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifdef<sp/>XAOD_STANDALON</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;}E</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>XAOD_STANDALONE</highlight></codeline>
<codeline lineno="6"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;AthenaKernel/getMessageSvc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GaudiKernel/MsgStream.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dc/d67/HLTResult_8h" kindref="compound">TrigSteeringEvent/HLTResult.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">HLT;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test_Truncation<sp/>(<ref refid="d9/d4b/classHLT_1_1HLTResult" kindref="compound" tooltip="HLT::HLTResult is sumarising result of trigger decision evaluation (online/offline)...">HLTResult</ref><sp/>&amp;res,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>payload_size,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>expected_size,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>expected_chains_size,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>expected_nav_size,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>expected_extras_size<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>MsgStream<sp/>log(Athena::getMessageSvc(),<sp/></highlight><highlight class="stringliteral">&quot;Truncation_test&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>uint32_t*<sp/>p1<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>log<sp/>&lt;&lt;<sp/>MSG::INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;serialize<sp/>with<sp/>payload<sp/>free<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>payload_size<sp/><sp/>&lt;&lt;<sp/>endreq;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>res.<ref refid="d9/d4b/classHLT_1_1HLTResult_1a8f5e0fab5ef0d7f3a6ddecc5173ddf5f" kindref="member">serialize</ref>(p1,<sp/>size,<sp/>payload_size);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>log<sp/>&lt;&lt;<sp/>MSG::INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;serialized<sp/>tot<sp/>size<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>size<sp/><sp/>&lt;&lt;<sp/>endreq;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>!=<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(expected_size)<sp/>)<sp/>{<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>log<sp/>&lt;&lt;<sp/>MSG::INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;serialized<sp/>size<sp/>distinct<sp/>from<sp/>expected,<sp/>got:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>size<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>expected:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>expected_size<sp/>&lt;&lt;<sp/>endreq;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><ref refid="d9/d4b/classHLT_1_1HLTResult" kindref="compound" tooltip="HLT::HLTResult is sumarising result of trigger decision evaluation (online/offline)...">HLTResult</ref><sp/>back;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>back.<ref refid="d9/d4b/classHLT_1_1HLTResult_1a6380a32a5e28f2b9e8b739f79d043bcb" kindref="member">deserialize</ref>(p1,<sp/>size);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>log<sp/>&lt;&lt;<sp/>MSG::INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Deserialized<sp/>sizes<sp/>chains:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><sp/>back.getChainResult().size()<sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>navigation:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>back.<ref refid="d9/d4b/classHLT_1_1HLTResult_1a97605017fd8c6f49723d2fa66b61b0bf" kindref="member" tooltip="retrieve the sub-payloads (can be used to retrieve/write data)">getNavigationResult</ref>().size()<sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>extras:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>back.getExtras().size()<sp/>&lt;&lt;<sp/>endreq;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>back.getChainResult().size()<sp/><sp/>!=<sp/>expected_chains_size<sp/>)<sp/>{<sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>log<sp/>&lt;&lt;<sp/>MSG::INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;deserialized<sp/>chains<sp/>size<sp/>distinct<sp/>from<sp/>expected,<sp/>got:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>back.getChainResult().size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>expected:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>expected_chains_size<sp/>&lt;&lt;<sp/>endreq;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>back.<ref refid="d9/d4b/classHLT_1_1HLTResult_1a97605017fd8c6f49723d2fa66b61b0bf" kindref="member" tooltip="retrieve the sub-payloads (can be used to retrieve/write data)">getNavigationResult</ref>().size()<sp/><sp/>!=<sp/>expected_nav_size<sp/>)<sp/>{<sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>log<sp/>&lt;&lt;<sp/>MSG::INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;deserialzied<sp/>navigation<sp/>size<sp/>distinct<sp/>from<sp/>expected,<sp/>got:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>back.<ref refid="d9/d4b/classHLT_1_1HLTResult_1a97605017fd8c6f49723d2fa66b61b0bf" kindref="member" tooltip="retrieve the sub-payloads (can be used to retrieve/write data)">getNavigationResult</ref>().size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>expected:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>expected_nav_size<sp/>&lt;&lt;<sp/>endreq;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>back.getExtras().size()<sp/><sp/>!=<sp/>expected_extras_size<sp/>)<sp/>{<sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>log<sp/>&lt;&lt;<sp/>MSG::INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;deserialzied<sp/>extras<sp/>size<sp/>distinct<sp/>from<sp/>expected,<sp/>got:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>back.getExtras().size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>expected:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>expected_extras_size<sp/>&lt;&lt;<sp/>endreq;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>p1;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>MsgStream<sp/>log(Athena::getMessageSvc(),<sp/></highlight><highlight class="stringliteral">&quot;Truncation_test&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>crate<sp/>HLTResult</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><ref refid="d9/d4b/classHLT_1_1HLTResult" kindref="compound" tooltip="HLT::HLTResult is sumarising result of trigger decision evaluation (online/offline)...">HLTResult</ref><sp/>res;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><ref refid="d9/d4b/classHLT_1_1HLTResult" kindref="compound" tooltip="HLT::HLTResult is sumarising result of trigger decision evaluation (online/offline)...">HLTResult</ref><sp/>back;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>std::vector&lt;uint32_t&gt;<sp/>ch(800);<sp/></highlight><highlight class="comment">//<sp/>800<sp/>chains</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>res.getChainResult().insert(res.getChainResult().end(),<sp/>ch.begin(),<sp/>ch.end());</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>std::vector&lt;uint32_t&gt;<sp/>nav(4000);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>res.<ref refid="d9/d4b/classHLT_1_1HLTResult_1a97605017fd8c6f49723d2fa66b61b0bf" kindref="member" tooltip="retrieve the sub-payloads (can be used to retrieve/write data)">getNavigationResult</ref>().insert(res.<ref refid="d9/d4b/classHLT_1_1HLTResult_1a97605017fd8c6f49723d2fa66b61b0bf" kindref="member" tooltip="retrieve the sub-payloads (can be used to retrieve/write data)">getNavigationResult</ref>().end(),<sp/>nav.begin(),<sp/>nav.end());</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>res.<ref refid="d9/d4b/classHLT_1_1HLTResult_1a2c34b7f053ea325c80bab7f35bae1892" kindref="member" tooltip="gets ref to the internal array holding places for safe navigation truncations">getNavigationResultCuts</ref>().push_back(1000);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>res.<ref refid="d9/d4b/classHLT_1_1HLTResult_1a2c34b7f053ea325c80bab7f35bae1892" kindref="member" tooltip="gets ref to the internal array holding places for safe navigation truncations">getNavigationResultCuts</ref>().push_back(2000);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>res.<ref refid="d9/d4b/classHLT_1_1HLTResult_1a2c34b7f053ea325c80bab7f35bae1892" kindref="member" tooltip="gets ref to the internal array holding places for safe navigation truncations">getNavigationResultCuts</ref>().push_back(3000);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>res.<ref refid="d9/d4b/classHLT_1_1HLTResult_1a2c34b7f053ea325c80bab7f35bae1892" kindref="member" tooltip="gets ref to the internal array holding places for safe navigation truncations">getNavigationResultCuts</ref>().push_back(3999);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>res.<ref refid="d9/d4b/classHLT_1_1HLTResult_1a2c34b7f053ea325c80bab7f35bae1892" kindref="member" tooltip="gets ref to the internal array holding places for safe navigation truncations">getNavigationResultCuts</ref>().push_back(4000);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>std::vector&lt;uint32_t&gt;<sp/>ex(40);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>res.getExtras().insert(res.getExtras().end(),<sp/>ex.begin(),<sp/>ex.end());</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>to<sp/>serialzie<sp/>it<sp/>with<sp/>very<sp/>small<sp/>payload</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>log<sp/>&lt;&lt;<sp/>MSG::INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;payload<sp/>smaller<sp/>than<sp/>chains&quot;</highlight><highlight class="normal"><sp/><sp/>&lt;&lt;<sp/>endreq;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>test_Truncation(res,<sp/>600,<sp/>14,<sp/>0,<sp/>0,<sp/>0)<sp/>!=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>log<sp/>&lt;&lt;<sp/>MSG::ERROR<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;payload<sp/>smaller<sp/>than<sp/>chains,<sp/>this<sp/>test<sp/>failed&quot;</highlight><highlight class="normal"><sp/><sp/>&lt;&lt;<sp/>endreq;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>res.<ref refid="d9/d4b/classHLT_1_1HLTResult_1a97605017fd8c6f49723d2fa66b61b0bf" kindref="member" tooltip="retrieve the sub-payloads (can be used to retrieve/write data)">getNavigationResult</ref>()<sp/>=<sp/>nav;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>log<sp/>&lt;&lt;<sp/>MSG::INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;payload<sp/>bigger<sp/>than<sp/>chains&quot;</highlight><highlight class="normal"><sp/><sp/>&lt;&lt;<sp/>endreq;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>test_Truncation(res,<sp/>900,<sp/>816,<sp/>800,<sp/>0,<sp/>0)<sp/>!=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>log<sp/>&lt;&lt;<sp/>MSG::ERROR<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;payload<sp/>bigger<sp/>than<sp/>chains,<sp/>this<sp/>test<sp/>failed&quot;</highlight><highlight class="normal"><sp/><sp/>&lt;&lt;<sp/>endreq;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>res.<ref refid="d9/d4b/classHLT_1_1HLTResult_1a97605017fd8c6f49723d2fa66b61b0bf" kindref="member" tooltip="retrieve the sub-payloads (can be used to retrieve/write data)">getNavigationResult</ref>()<sp/>=<sp/>nav;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>log<sp/>&lt;&lt;<sp/>MSG::INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;payload<sp/>enough<sp/>for<sp/>first<sp/>nav<sp/>piece<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/>&lt;&lt;<sp/>endreq;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>test_Truncation(res,<sp/>1900,<sp/>1816,<sp/>800,<sp/>1000,<sp/>0)<sp/>!=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>log<sp/>&lt;&lt;<sp/>MSG::ERROR<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;payload<sp/>enough<sp/>for<sp/>first<sp/>nav<sp/>piece,<sp/>this<sp/>test<sp/>failed&quot;</highlight><highlight class="normal"><sp/><sp/>&lt;&lt;<sp/>endreq;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>res.<ref refid="d9/d4b/classHLT_1_1HLTResult_1a97605017fd8c6f49723d2fa66b61b0bf" kindref="member" tooltip="retrieve the sub-payloads (can be used to retrieve/write data)">getNavigationResult</ref>()<sp/>=<sp/>nav;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>log<sp/>&lt;&lt;<sp/>MSG::INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;payload<sp/>enough<sp/>for<sp/>almost<sp/>all<sp/>nav<sp/>pieces<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/>&lt;&lt;<sp/>endreq;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>test_Truncation(res,<sp/>4816,<sp/>4816,<sp/>800,<sp/>4000,<sp/>0)<sp/>!=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>log<sp/>&lt;&lt;<sp/>MSG::ERROR<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;payload<sp/>enough<sp/>for<sp/>almost<sp/>all<sp/>nav<sp/>pieces,<sp/>this<sp/>test<sp/>failed&quot;</highlight><highlight class="normal"><sp/><sp/>&lt;&lt;<sp/>endreq;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>res.<ref refid="d9/d4b/classHLT_1_1HLTResult_1a97605017fd8c6f49723d2fa66b61b0bf" kindref="member" tooltip="retrieve the sub-payloads (can be used to retrieve/write data)">getNavigationResult</ref>()<sp/>=<sp/>nav;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>log<sp/>&lt;&lt;<sp/>MSG::INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;payload<sp/>enough<sp/>for<sp/><sp/>all<sp/>nav<sp/>pieces<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/>&lt;&lt;<sp/>endreq;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>test_Truncation(res,<sp/>4820,<sp/>4816,<sp/>800,<sp/>4000,<sp/>0)<sp/>!=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>log<sp/>&lt;&lt;<sp/>MSG::ERROR<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;payload<sp/>enough<sp/>for<sp/><sp/>all<sp/>nav<sp/>pieces,<sp/>this<sp/>test<sp/>failed&quot;</highlight><highlight class="normal"><sp/><sp/>&lt;&lt;<sp/>endreq;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>res.<ref refid="d9/d4b/classHLT_1_1HLTResult_1a97605017fd8c6f49723d2fa66b61b0bf" kindref="member" tooltip="retrieve the sub-payloads (can be used to retrieve/write data)">getNavigationResult</ref>()<sp/>=<sp/>nav;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>log<sp/>&lt;&lt;<sp/>MSG::INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;payload<sp/>enough<sp/>for<sp/><sp/>all<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/><sp/>&lt;&lt;<sp/>endreq;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>test_Truncation(res,<sp/>5000,<sp/>4857,<sp/>800,<sp/>4000,<sp/>40)<sp/>!=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>log<sp/>&lt;&lt;<sp/>MSG::ERROR<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;payload<sp/>enough<sp/>for<sp/><sp/>all<sp/>,<sp/>this<sp/>test<sp/>failed&quot;</highlight><highlight class="normal"><sp/><sp/>&lt;&lt;<sp/>endreq;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/test/Truncation_test.cxx"/>
  </compounddef>
</doxygen>
