<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="dc/d71/ut__build__trignav__test_8cxx" kind="file">
    <compoundname>ut_build_trignav_test.cxx</compoundname>
    <includes local="no">stdint.h</includes>
    <includes refid="da/dfe/StandaloneNavigation_8h" local="yes">TrigNavStructure/StandaloneNavigation.h</includes>
    <includes refid="d3/d1a/testutils_8h" local="yes">testutils.h</includes>
    <incdepgraph>
      <node id="328585">
        <label>TrigNavStructure/TrigNavStructure.h</label>
        <link refid="d2/db8/TrigNavStructure_8h_source"/>
        <childnode refid="328586" relation="include">
        </childnode>
        <childnode refid="328587" relation="include">
        </childnode>
        <childnode refid="328593" relation="include">
        </childnode>
        <childnode refid="328594" relation="include">
        </childnode>
        <childnode refid="328595" relation="include">
        </childnode>
      </node>
      <node id="328602">
        <label>AsgTools/IAsgTool.h</label>
        <link refid="df/dd4/IAsgTool_8h_source"/>
        <childnode refid="328589" relation="include">
        </childnode>
        <childnode refid="328597" relation="include">
        </childnode>
        <childnode refid="328603" relation="include">
        </childnode>
        <childnode refid="328604" relation="include">
        </childnode>
      </node>
      <node id="328609">
        <label>iomanip</label>
      </node>
      <node id="328604">
        <label>GaudiKernel/IAlgTool.h</label>
      </node>
      <node id="328594">
        <label>TrigNavStructure/BaseHolder.h</label>
        <link refid="df/d37/BaseHolder_8h_source"/>
        <childnode refid="328589" relation="include">
        </childnode>
        <childnode refid="328586" relation="include">
        </childnode>
        <childnode refid="328591" relation="include">
        </childnode>
      </node>
      <node id="328582">
        <label>stdint.h</label>
      </node>
      <node id="328607">
        <label>AthenaBaseComps/AthMsgStreamMacros.h</label>
      </node>
      <node id="328600">
        <label>AsgTools/MsgLevel.h</label>
        <link refid="de/d80/MsgLevel_8h"/>
        <childnode refid="328589" relation="include">
        </childnode>
        <childnode refid="328597" relation="include">
        </childnode>
        <childnode refid="328601" relation="include">
        </childnode>
      </node>
      <node id="328597">
        <label>AsgTools/AsgToolsConf.h</label>
        <link refid="df/db7/AsgToolsConf_8h_source"/>
      </node>
      <node id="328593">
        <label>TrigNavStructure/TriggerElementFactory.h</label>
        <link refid="d1/dc0/TriggerElementFactory_8h_source"/>
        <childnode refid="328586" relation="include">
        </childnode>
        <childnode refid="328591" relation="include">
        </childnode>
        <childnode refid="328587" relation="include">
        </childnode>
      </node>
      <node id="328589">
        <label>string</label>
      </node>
      <node id="328588">
        <label>map</label>
      </node>
      <node id="328592">
        <label>boost/variant.hpp</label>
      </node>
      <node id="328583">
        <label>TrigNavStructure/StandaloneNavigation.h</label>
        <link refid="da/dfe/StandaloneNavigation_8h_source"/>
        <childnode refid="328584" relation="include">
        </childnode>
        <childnode refid="328585" relation="include">
        </childnode>
      </node>
      <node id="328601">
        <label>GaudiKernel/IMessageSvc.h</label>
      </node>
      <node id="328591">
        <label>TrigNavStructure/Types.h</label>
        <link refid="d5/d81/TrigNavStructure_2Types_8h_source"/>
        <childnode refid="328582" relation="include">
        </childnode>
        <childnode refid="328592" relation="include">
        </childnode>
      </node>
      <node id="328595">
        <label>TrigNavStructure/TrigHolderStructure.h</label>
        <link refid="df/ded/TrigHolderStructure_8h_source"/>
        <childnode refid="328584" relation="include">
        </childnode>
        <childnode refid="328588" relation="include">
        </childnode>
        <childnode refid="328589" relation="include">
        </childnode>
        <childnode refid="328592" relation="include">
        </childnode>
        <childnode refid="328596" relation="include">
        </childnode>
        <childnode refid="328591" relation="include">
        </childnode>
        <childnode refid="328594" relation="include">
        </childnode>
        <childnode refid="328587" relation="include">
        </childnode>
      </node>
      <node id="328587">
        <label>TrigNavStructure/TriggerElement.h</label>
        <link refid="d7/d71/TriggerElement_8h_source"/>
        <childnode refid="328588" relation="include">
        </childnode>
        <childnode refid="328586" relation="include">
        </childnode>
        <childnode refid="328589" relation="include">
        </childnode>
        <childnode refid="328582" relation="include">
        </childnode>
        <childnode refid="328590" relation="include">
        </childnode>
        <childnode refid="328591" relation="include">
        </childnode>
      </node>
      <node id="328606">
        <label>AsgTools/MsgStreamMacros.h</label>
        <link refid="d3/ded/AsgTools_2AsgTools_2MsgStreamMacros_8h_source"/>
        <childnode refid="328597" relation="include">
        </childnode>
        <childnode refid="328600" relation="include">
        </childnode>
        <childnode refid="328607" relation="include">
        </childnode>
      </node>
      <node id="328586">
        <label>vector</label>
      </node>
      <node id="328581">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_build_trignav_test.cxx</label>
        <link refid="ut_build_trignav_test.cxx"/>
        <childnode refid="328582" relation="include">
        </childnode>
        <childnode refid="328583" relation="include">
        </childnode>
        <childnode refid="328608" relation="include">
        </childnode>
      </node>
      <node id="328599">
        <label>sstream</label>
      </node>
      <node id="328590">
        <label>iostream</label>
      </node>
      <node id="328605">
        <label>GaudiKernel/MsgStream.h</label>
      </node>
      <node id="328598">
        <label>AsgTools/MsgStream.h</label>
        <link refid="d3/d95/AsgTools_2AsgTools_2MsgStream_8h_source"/>
        <childnode refid="328589" relation="include">
        </childnode>
        <childnode refid="328599" relation="include">
        </childnode>
        <childnode refid="328597" relation="include">
        </childnode>
        <childnode refid="328600" relation="include">
        </childnode>
        <childnode refid="328602" relation="include">
        </childnode>
        <childnode refid="328605" relation="include">
        </childnode>
      </node>
      <node id="328603">
        <label>AsgTools/AsgToolMacros.h</label>
        <link refid="d1/d68/AsgToolMacros_8h_source"/>
      </node>
      <node id="328596">
        <label>AsgTools/AsgMessaging.h</label>
        <link refid="d3/d61/AsgMessaging_8h_source"/>
        <childnode refid="328589" relation="include">
        </childnode>
        <childnode refid="328597" relation="include">
        </childnode>
        <childnode refid="328598" relation="include">
        </childnode>
        <childnode refid="328606" relation="include">
        </childnode>
      </node>
      <node id="328608">
        <label>testutils.h</label>
        <link refid="d3/d1a/testutils_8h_source"/>
        <childnode refid="328590" relation="include">
        </childnode>
        <childnode refid="328609" relation="include">
        </childnode>
      </node>
      <node id="328584">
        <label>memory</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="dc/d71/ut__build__trignav__test_8cxx_1a6e314b1371dfe12c9dd73bf33f546a22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sizesCheck</definition>
        <argsstring>(const std::vector&lt; uint32_t &gt; &amp;serialized)</argsstring>
        <name>sizesCheck</name>
        <param>
          <type>const std::vector&lt; uint32_t &gt; &amp;</type>
          <declname>serialized</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_build_trignav_test.cxx" line="9" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_build_trignav_test.cxx" bodystart="9" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="dc/d71/ut__build__trignav__test_8cxx_1a3f37b042a1e7cd4bd38fc564de81f0da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool empty</definition>
        <argsstring>()</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_build_trignav_test.cxx" line="23" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_build_trignav_test.cxx" bodystart="23" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="dc/d71/ut__build__trignav__test_8cxx_1aa6ef6c5c456c1d9beb0e840b9e46f29b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool singleTE</definition>
        <argsstring>()</argsstring>
        <name>singleTE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_build_trignav_test.cxx" line="47" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_build_trignav_test.cxx" bodystart="47" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="dc/d71/ut__build__trignav__test_8cxx_1adf175343e5a8808a7f506ca7d0438668" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool realTEs</definition>
        <argsstring>()</argsstring>
        <name>realTEs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_build_trignav_test.cxx" line="74" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_build_trignav_test.cxx" bodystart="74" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="dc/d71/ut__build__trignav__test_8cxx_1a92d96aabb25a62d5b8435eeea2682945" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool truncate</definition>
        <argsstring>()</argsstring>
        <name>truncate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_build_trignav_test.cxx" line="124" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_build_trignav_test.cxx" bodystart="124" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="dc/d71/ut__build__trignav__test_8cxx_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_build_trignav_test.cxx" line="153" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_build_trignav_test.cxx" bodystart="153" bodyend="169"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigNavStructure/StandaloneNavigation.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;testutils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">HLT;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sizesCheck(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint32_t&gt;&amp;<sp/>serialized)<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(serialized[0]<sp/>!=<sp/>3<sp/>)<sp/></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Wrongly<sp/>encoded<sp/>version&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(serialized[1]<sp/>!=<sp/>serialized.size()<sp/>)<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Wrongly<sp/>encoded<sp/>size&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(serialized[2]<sp/>!=<sp/>serialized.size()<sp/>)<sp/></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Wrongly<sp/>encoded<sp/>TEs<sp/>size&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>empty()<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>BEGIN_TEST</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><ref refid="de/d28/classHLT_1_1StandaloneNavigation" kindref="compound">StandaloneNavigation</ref><sp/>tns;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a23f79a5e2e5b4c5e5d0d5523d3465083" kindref="member" tooltip="resets all the navigation, goes to the factory and asks to withdraw all produced...">reset</ref>();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>std::vector&lt;uint32_t&gt;<sp/>serialized;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>tns.serialize(serialized);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>status<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Serialization<sp/>of<sp/>void<sp/>TNS<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>PROGRESS;<sp/><sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>sizesCheck(serialized)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)<sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Serialized<sp/>navigation<sp/>sizes<sp/>fail&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(serialized[3]<sp/>!=<sp/>0<sp/>)<sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Wrongly<sp/>encoded<sp/>numner<sp/>of<sp/>TEs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>PROGRESS;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="de/d28/classHLT_1_1StandaloneNavigation" kindref="compound">StandaloneNavigation</ref><sp/>post;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/>post.deserialize(serialized);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>status<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)<sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;deserialization<sp/>of<sp/>the<sp/>empty<sp/>navigation<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>MSG(</highlight><highlight class="stringliteral">&quot;OK&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Empty<sp/>nav<sp/>test<sp/>passed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>singleTE()<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>BEGIN_TEST</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><ref refid="de/d28/classHLT_1_1StandaloneNavigation" kindref="compound">StandaloneNavigation</ref><sp/>tns;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>tns.reset();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>tns.getInitialNode();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>std::vector&lt;uint32_t&gt;<sp/>serialized;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>tns.serialize(serialized);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>status<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>serialzie<sp/>navigation<sp/>with<sp/>one<sp/>TE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>PROGRESS;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>sizesCheck(serialized)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Serialized<sp/>navigation<sp/>sizes<sp/>fail&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>serialized[3]<sp/>!=<sp/>1<sp/>)<sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>TEs<sp/>wrongly<sp/>encoded&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>PROGRESS;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><ref refid="de/d28/classHLT_1_1StandaloneNavigation" kindref="compound">StandaloneNavigation</ref><sp/>post;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/>post.deserialize(serialized);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>status<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>deserialzie<sp/>navigation<sp/>with<sp/>one<sp/>TE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>MSG(</highlight><highlight class="stringliteral">&quot;OK&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;One<sp/>TE<sp/>navigation<sp/>serialization&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>realTEs()<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>BEGIN_TEST</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="de/d28/classHLT_1_1StandaloneNavigation" kindref="compound">StandaloneNavigation</ref><sp/>tns;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>tns.reset();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>roi<sp/>=<sp/>tns.addRoINode(tns.getInitialNode());</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>some<sp/>=<sp/>tns.addNode(roi,<sp/>878);<sp/></highlight><highlight class="comment">//<sp/>878<sp/>is<sp/>just<sp/>some<sp/>test<sp/>ID<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>tns.addNode(roi,<sp/>878);<sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>tns.addNode(some,<sp/>15);<sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>std::vector&lt;uint32_t&gt;<sp/>serialized;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>tns.serialize(serialized);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>status<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>serialzie<sp/>navigation<sp/>with<sp/>one<sp/>TE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>sizesCheck(serialized)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Serialized<sp/>navigation<sp/>sizes<sp/>fail&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>PROGRESS;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>serialized[3]<sp/>!=<sp/>5<sp/>)<sp/></highlight><highlight class="comment">//<sp/>initial<sp/>one,<sp/>RoI<sp/>+<sp/>the<sp/>ones<sp/>made<sp/>explicitely<sp/>with<sp/>addNode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>TEs<sp/>wrongly<sp/>encoded&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>std::vector&lt;TriggerElement*&gt;<sp/>tes;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>tns.getAll(tes,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nTEs<sp/>=<sp/>tes.size();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>PROGRESS;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>tns.reset();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/>tns.deserialize(serialized);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>status<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>deserialzie<sp/>navigation<sp/>with<sp/>many<sp/>TEs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tns.countAllOfType(878)<sp/>!=<sp/>2<sp/>)<sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;After<sp/>deserialization<sp/>the<sp/>TE<sp/>with<sp/>ID<sp/>is<sp/>missing&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tns.countAllOfType(15)<sp/>!=<sp/>1<sp/>)<sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;After<sp/>deserialization<sp/>the<sp/>TE<sp/>with<sp/>ID<sp/>is<sp/>missing&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>PROGRESS;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>tes.clear();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>tns.getAll(tes,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tes.size()<sp/>!=<sp/>nTEs<sp/>)<sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;After<sp/>deserialziation,<sp/>wrong<sp/>number<sp/>of<sp/>all<sp/>TEs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>MSG(</highlight><highlight class="stringliteral">&quot;OK&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;One<sp/>TE<sp/>navigation<sp/>serialization&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>truncate()<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>BEGIN_TEST;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><ref refid="de/d28/classHLT_1_1StandaloneNavigation" kindref="compound">StandaloneNavigation</ref><sp/>tns;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a23f79a5e2e5b4c5e5d0d5523d3465083" kindref="member" tooltip="resets all the navigation, goes to the factory and asks to withdraw all produced...">reset</ref>();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>roi<sp/>=<sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a7d9af1a3c226fb3aa776e1d71901b537" kindref="member" tooltip="gets RoI node (attached to initial)">addRoINode</ref>(tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1ac0b79bae687efe8d3e4ec6939d68b65e" kindref="member" tooltip="gets initial node, if node is not there then it is created on fly">getInitialNode</ref>());</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">TriggerElement</ref>*<sp/>some<sp/>=<sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a75a745d3b075ae38e18c75eae3f566db" kindref="member" tooltip="adds nodes seeded form the one given as an argument,">addNode</ref>(roi,<sp/>878);<sp/></highlight><highlight class="comment">//<sp/>878<sp/>is<sp/>just<sp/>some<sp/>test<sp/>ID<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a75a745d3b075ae38e18c75eae3f566db" kindref="member" tooltip="adds nodes seeded form the one given as an argument,">addNode</ref>(roi,<sp/>878);<sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a75a745d3b075ae38e18c75eae3f566db" kindref="member" tooltip="adds nodes seeded form the one given as an argument,">addNode</ref>(some,<sp/>15);<sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>PROGRESS;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>std::vector&lt;uint32_t&gt;<sp/>serialized;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>tns.<ref refid="de/d28/classHLT_1_1StandaloneNavigation_1aa206a44ccf10cd94cd95a3018d0ab489" kindref="member" tooltip="method serizlizes entire navigation">serialize</ref>(serialized);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>status<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>serialzie<sp/>navigation<sp/>with<sp/>one<sp/>TE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>std::vector&lt;uint32_t&gt;<sp/>truncated(serialized.begin(),<sp/>serialized.end()-1);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>PROGRESS;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>tns.<ref refid="d9/d08/classHLT_1_1TrigNavStructure_1a23f79a5e2e5b4c5e5d0d5523d3465083" kindref="member" tooltip="resets all the navigation, goes to the factory and asks to withdraw all produced...">reset</ref>();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>PROGRESS;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/>tns.deserialize(truncated);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>status<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>REPORT_AND_STOP(</highlight><highlight class="stringliteral">&quot;deserialization<sp/>worked<sp/>on<sp/>truncated<sp/>payload&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>PROGRESS;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>empty())</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>ABORT(</highlight><highlight class="stringliteral">&quot;empty()<sp/>test<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>singleTE())</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>ABORT(</highlight><highlight class="stringliteral">&quot;singleTE()<sp/>test<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>realTEs())</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>ABORT(</highlight><highlight class="stringliteral">&quot;realTE()<sp/>test<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>truncate()<sp/>)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>ABORT(</highlight><highlight class="stringliteral">&quot;Truncation<sp/>not<sp/>noticed,<sp/>bad<sp/>as<sp/>we<sp/>read<sp/>unknown<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>MSG(</highlight><highlight class="stringliteral">&quot;OK&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Test<sp/>passed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/test/ut_build_trignav_test.cxx"/>
  </compounddef>
</doxygen>
