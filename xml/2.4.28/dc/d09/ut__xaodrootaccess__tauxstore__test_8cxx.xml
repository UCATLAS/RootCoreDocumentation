<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="dc/d09/ut__xaodrootaccess__tauxstore__test_8cxx" kind="file">
    <compoundname>ut_xaodrootaccess_tauxstore_test.cxx</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">TTree.h</includes>
    <includes refid="db/d7f/AuxTypeRegistry_8h" local="yes">AthContainers/AuxTypeRegistry.h</includes>
    <includes refid="d4/d03/exceptions_8h" local="yes">AthContainers/exceptions.h</includes>
    <includes refid="db/db1/Init_8h" local="yes">xAODRootAccess/Init.h</includes>
    <includes refid="dc/dd6/TAuxStore_8h" local="yes">xAODRootAccess/TAuxStore.h</includes>
    <includes refid="de/dc0/ReturnCheck_8h" local="yes">xAODRootAccess/tools/ReturnCheck.h</includes>
    <incdepgraph>
      <node id="411759">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="411761">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="411725" relation="include">
        </childnode>
        <childnode refid="411727" relation="include">
        </childnode>
        <childnode refid="411719" relation="include">
        </childnode>
        <childnode refid="411734" relation="include">
        </childnode>
      </node>
      <node id="411769">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="411770" relation="include">
        </childnode>
        <childnode refid="411723" relation="include">
        </childnode>
        <childnode refid="411772" relation="include">
        </childnode>
        <childnode refid="411771" relation="include">
        </childnode>
      </node>
      <node id="411762">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="411733">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="411734">
        <label>functional</label>
      </node>
      <node id="411731">
        <label>limits</label>
      </node>
      <node id="411772">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="411757">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="411728">
        <label>iterator</label>
      </node>
      <node id="411744">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="411732" relation="include">
        </childnode>
        <childnode refid="411745" relation="include">
        </childnode>
      </node>
      <node id="411778">
        <label>xAODRootAccess/tools/Message.h</label>
        <link refid="d6/d17/xAODRootAccess_2xAODRootAccess_2tools_2Message_8h_source"/>
      </node>
      <node id="411763">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="411722" relation="include">
        </childnode>
        <childnode refid="411764" relation="include">
        </childnode>
        <childnode refid="411765" relation="include">
        </childnode>
        <childnode refid="411736" relation="include">
        </childnode>
        <childnode refid="411732" relation="include">
        </childnode>
      </node>
      <node id="411740">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="411741" relation="include">
        </childnode>
        <childnode refid="411729" relation="include">
        </childnode>
      </node>
      <node id="411767">
        <label>xAODRootAccess/tools/TReturnCode.h</label>
        <link refid="df/d0a/TReturnCode_8h_source"/>
      </node>
      <node id="411746">
        <label>stdint.h</label>
      </node>
      <node id="411737">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="411723" relation="include">
        </childnode>
        <childnode refid="411736" relation="include">
        </childnode>
      </node>
      <node id="411773">
        <label>AthContainersInterfaces/IAuxStoreIO.h</label>
        <link refid="d9/db5/IAuxStoreIO_8h"/>
        <childnode refid="411722" relation="include">
        </childnode>
        <childnode refid="411736" relation="include">
        </childnode>
        <childnode refid="411774" relation="include">
        </childnode>
        <childnode refid="411771" relation="include">
        </childnode>
      </node>
      <node id="411724">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="411725" relation="include">
        </childnode>
        <childnode refid="411719" relation="include">
        </childnode>
        <childnode refid="411734" relation="include">
        </childnode>
      </node>
      <node id="411730">
        <label>cmath</label>
      </node>
      <node id="411765">
        <label>stdexcept</label>
      </node>
      <node id="411760">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="411732">
        <label>string</label>
      </node>
      <node id="411735">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="411723" relation="include">
        </childnode>
        <childnode refid="411736" relation="include">
        </childnode>
      </node>
      <node id="411766">
        <label>xAODRootAccess/Init.h</label>
        <link refid="db/db1/Init_8h_source"/>
        <childnode refid="411723" relation="include">
        </childnode>
        <childnode refid="411767" relation="include">
        </childnode>
      </node>
      <node id="411752">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="411749">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="411758">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="411777">
        <label>TError.h</label>
      </node>
      <node id="411776">
        <label>xAODRootAccess/tools/ReturnCheck.h</label>
        <link refid="de/dc0/ReturnCheck_8h_source"/>
        <childnode refid="411777" relation="include">
        </childnode>
        <childnode refid="411767" relation="include">
        </childnode>
        <childnode refid="411778" relation="include">
        </childnode>
      </node>
      <node id="411743">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="411744" relation="include">
        </childnode>
        <childnode refid="411731" relation="include">
        </childnode>
        <childnode refid="411746" relation="include">
        </childnode>
        <childnode refid="411747" relation="include">
        </childnode>
      </node>
      <node id="411722">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="411723" relation="include">
        </childnode>
        <childnode refid="411724" relation="include">
        </childnode>
      </node>
      <node id="411725">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="411726" relation="include">
        </childnode>
        <childnode refid="411727" relation="include">
        </childnode>
        <childnode refid="411728" relation="include">
        </childnode>
        <childnode refid="411723" relation="include">
        </childnode>
        <childnode refid="411729" relation="include">
        </childnode>
        <childnode refid="411730" relation="include">
        </childnode>
        <childnode refid="411731" relation="include">
        </childnode>
        <childnode refid="411732" relation="include">
        </childnode>
        <childnode refid="411733" relation="include">
        </childnode>
      </node>
      <node id="411736">
        <label>typeinfo</label>
      </node>
      <node id="411747">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="411745">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="411751">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="411771">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="411721">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="411722" relation="include">
        </childnode>
        <childnode refid="411735" relation="include">
        </childnode>
        <childnode refid="411737" relation="include">
        </childnode>
        <childnode refid="411738" relation="include">
        </childnode>
        <childnode refid="411753" relation="include">
        </childnode>
        <childnode refid="411755" relation="include">
        </childnode>
        <childnode refid="411723" relation="include">
        </childnode>
        <childnode refid="411736" relation="include">
        </childnode>
        <childnode refid="411741" relation="include">
        </childnode>
        <childnode refid="411761" relation="include">
        </childnode>
        <childnode refid="411762" relation="include">
        </childnode>
      </node>
      <node id="411741">
        <label>vector</label>
      </node>
      <node id="411727">
        <label>utility</label>
      </node>
      <node id="411748">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="411756">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="411739">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="411755">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="411756" relation="include">
        </childnode>
        <childnode refid="411757" relation="include">
        </childnode>
        <childnode refid="411758" relation="include">
        </childnode>
        <childnode refid="411759" relation="include">
        </childnode>
        <childnode refid="411760" relation="include">
        </childnode>
      </node>
      <node id="411729">
        <label>cstdlib</label>
      </node>
      <node id="411775">
        <label>xAODCore/AuxSelection.h</label>
        <link refid="d3/dd4/AuxSelection_8h_source"/>
        <childnode refid="411774" relation="include">
        </childnode>
        <childnode refid="411732" relation="include">
        </childnode>
        <childnode refid="411722" relation="include">
        </childnode>
      </node>
      <node id="411764">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="411718">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/test/ut_xaodrootaccess_tauxstore_test.cxx</label>
        <link refid="ut_xaodrootaccess_tauxstore_test.cxx"/>
        <childnode refid="411719" relation="include">
        </childnode>
        <childnode refid="411720" relation="include">
        </childnode>
        <childnode refid="411721" relation="include">
        </childnode>
        <childnode refid="411763" relation="include">
        </childnode>
        <childnode refid="411766" relation="include">
        </childnode>
        <childnode refid="411768" relation="include">
        </childnode>
        <childnode refid="411776" relation="include">
        </childnode>
      </node>
      <node id="411770">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="411722" relation="include">
        </childnode>
        <childnode refid="411723" relation="include">
        </childnode>
        <childnode refid="411771" relation="include">
        </childnode>
      </node>
      <node id="411723">
        <label>cstddef</label>
      </node>
      <node id="411738">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="411735" relation="include">
        </childnode>
        <childnode refid="411739" relation="include">
        </childnode>
        <childnode refid="411740" relation="include">
        </childnode>
        <childnode refid="411742" relation="include">
        </childnode>
        <childnode refid="411748" relation="include">
        </childnode>
        <childnode refid="411736" relation="include">
        </childnode>
        <childnode refid="411741" relation="include">
        </childnode>
        <childnode refid="411726" relation="include">
        </childnode>
        <childnode refid="411746" relation="include">
        </childnode>
        <childnode refid="411750" relation="include">
        </childnode>
        <childnode refid="411751" relation="include">
        </childnode>
        <childnode refid="411752" relation="include">
        </childnode>
      </node>
      <node id="411750">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="411720">
        <label>TTree.h</label>
      </node>
      <node id="411774">
        <label>set</label>
      </node>
      <node id="411754">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="411742">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="411739" relation="include">
        </childnode>
        <childnode refid="411743" relation="include">
        </childnode>
        <childnode refid="411748" relation="include">
        </childnode>
        <childnode refid="411741" relation="include">
        </childnode>
        <childnode refid="411749" relation="include">
        </childnode>
      </node>
      <node id="411726">
        <label>algorithm</label>
      </node>
      <node id="411768">
        <label>xAODRootAccess/TAuxStore.h</label>
        <link refid="dc/dd6/TAuxStore_8h_source"/>
        <childnode refid="411741" relation="include">
        </childnode>
        <childnode refid="411732" relation="include">
        </childnode>
        <childnode refid="411769" relation="include">
        </childnode>
        <childnode refid="411773" relation="include">
        </childnode>
        <childnode refid="411755" relation="include">
        </childnode>
        <childnode refid="411775" relation="include">
        </childnode>
        <childnode refid="411767" relation="include">
        </childnode>
      </node>
      <node id="411719">
        <label>memory</label>
      </node>
      <node id="411753">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="411737" relation="include">
        </childnode>
        <childnode refid="411738" relation="include">
        </childnode>
        <childnode refid="411754" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="dc/d09/ut__xaodrootaccess__tauxstore__test_8cxx_1a513a4f712e25194313e2c247591bb2a5" prot="public" static="no">
        <name>SIMPLE_ASSERT</name>
        <param><defname>EXP</defname></param>
        <initializer>do {                                                                 \
      const bool result = EXP;                                          \
      if( ! result ) {                                                  \
         ::Error( APP_NAME, &quot;Expression \&quot;%s\&quot; failed the evaluation&quot;,  \
                  #EXP );                                               \
         return 1;                                                      \
      }                                                                 \
   } while( 0 )</initializer>
        <briefdescription>
<para>Helper macro for evaluating logical tests. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/test/ut_xaodrootaccess_tauxstore_test.cxx" line="27" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/test/ut_xaodrootaccess_tauxstore_test.cxx" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="dc/d09/ut__xaodrootaccess__tauxstore__test_8cxx_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/test/ut_xaodrootaccess_tauxstore_test.cxx" line="29" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/test/ut_xaodrootaccess_tauxstore_test.cxx" bodystart="29" bodyend="152"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>$Id:<sp/>ut_xaodrootaccess_tauxstore_test.cxx<sp/>697574<sp/>2015-09-30<sp/>11:58:22Z<sp/>krasznaa<sp/>$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>System<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ROOT<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TTree.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EDM<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="db/d7f/AuxTypeRegistry_8h" kindref="compound" tooltip="Handle mappings between names and auxid_t.">AthContainers/AuxTypeRegistry.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d4/d03/exceptions_8h" kindref="compound" tooltip="Exceptions that can be thrown from AthContainers.">AthContainers/exceptions.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Local<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODRootAccess/Init.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODRootAccess/TAuxStore.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODRootAccess/tools/ReturnCheck.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor">#define<sp/>SIMPLE_ASSERT(<sp/>EXP<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"><sp/><sp/><sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>bool<sp/>result<sp/>=<sp/>EXP;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>if(<sp/>!<sp/>result<sp/>)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Error(<sp/>APP_NAME,<sp/>&quot;Expression<sp/>\&quot;%s\&quot;<sp/>failed<sp/>the<sp/>evaluation&quot;,<sp/><sp/>\</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#EXP<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"><sp/><sp/><sp/>}<sp/>while(<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>name<sp/>of<sp/>the<sp/>application:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>APP_NAME<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ut_xaodrootaccess_tauxstore_test&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialise<sp/>the<sp/>environment:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/>RETURN_CHECK(<sp/>APP_NAME,<sp/><ref refid="dd/d44/namespacexAOD_1a2b6ff6013c964ff2254bd3540cd1738d" kindref="member">xAOD::Init</ref>(<sp/>APP_NAME<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reference<sp/>to<sp/>the<sp/>auxiliary<sp/>type<sp/>registry:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry" kindref="compound" tooltip="Handle mappings between names and auxid_t.">SG::AuxTypeRegistry</ref>&amp;<sp/>reg<sp/>=<sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry_1ab22c247525e0883b46012f14b6f5a048" kindref="member" tooltip="Return the singleton registry instance.">SG::AuxTypeRegistry::instance</ref>();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>TTree<sp/>in<sp/>memory<sp/>to<sp/>help<sp/>with<sp/>the<sp/>reading<sp/>tests:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/>std::unique_ptr&lt;<sp/>::TTree<sp/>&gt;<sp/>itree(<sp/>new<sp/>::TTree(<sp/></highlight><highlight class="stringliteral">&quot;InputTree&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Input<sp/>Tree&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/>itree-&gt;SetDirectory(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>this<sp/>transient<sp/>tree<sp/>with<sp/>some<sp/>information:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;<sp/>var1{<sp/><sp/>1,<sp/><sp/>2,<sp/><sp/>3,<sp/><sp/>4,<sp/><sp/>5<sp/>};</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;<sp/>var2{<sp/>11,<sp/>12,<sp/>13,<sp/>14,<sp/>15<sp/>};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;*<sp/>var1Ptr<sp/>=<sp/>&amp;var1;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;<sp/>float<sp/>&gt;*<sp/>var2Ptr<sp/>=<sp/>&amp;var2;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/>::TBranch*<sp/>br1<sp/>=<sp/>itree-&gt;Branch(<sp/></highlight><highlight class="stringliteral">&quot;PrefixAuxDyn.var1&quot;</highlight><highlight class="normal">,<sp/>&amp;var1Ptr<sp/>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/>::TBranch*<sp/>br2<sp/>=<sp/>itree-&gt;Branch(<sp/></highlight><highlight class="stringliteral">&quot;PrefixAuxDyn.var2&quot;</highlight><highlight class="normal">,<sp/>&amp;var2Ptr<sp/>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>!<sp/>br1<sp/>)<sp/>||<sp/>(<sp/>!<sp/>br2<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::Error(<sp/>APP_NAME,<sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>create<sp/>branches<sp/>in<sp/>transient<sp/>input<sp/>tree&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>itree-&gt;Fill()<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::Error(<sp/>APP_NAME,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>fill<sp/>the<sp/>transient<sp/>data<sp/>into<sp/>the<sp/>input<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;tree&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/>itree-&gt;Print();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/>::Info(<sp/>APP_NAME,<sp/></highlight><highlight class="stringliteral">&quot;Created<sp/>transient<sp/>input<sp/>TTree<sp/>for<sp/>the<sp/>test&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>object<sp/>that<sp/>we<sp/>want<sp/>to<sp/>test:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><ref refid="d7/d77/classxAOD_1_1TAuxStore" kindref="compound" tooltip="&amp;quot;ROOT implementation&amp;quot; of IAuxStore">xAOD::TAuxStore</ref><sp/>store(<sp/></highlight><highlight class="stringliteral">&quot;PrefixAux.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/>store.<ref refid="dd/db9/classTestStore_1a56c0114d540743b0801acf90e8afe19e" kindref="member" tooltip="Lock the container.">lock</ref>();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Connect<sp/>it<sp/>to<sp/>this<sp/>transient<sp/>input<sp/>tree:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/>RETURN_CHECK(<sp/>APP_NAME,<sp/>store.readFrom(<sp/>itree.get()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>it<sp/>found<sp/>the<sp/>two<sp/>variables<sp/>that<sp/>it<sp/>needed<sp/>to:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/>::Info(<sp/>APP_NAME,<sp/></highlight><highlight class="stringliteral">&quot;Auxiliary<sp/>variables<sp/>found<sp/>on<sp/>the<sp/>input:&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>auxid<sp/>:<sp/>store.<ref refid="dd/db9/classTestStore_1ac7c5bf984a4157970b8112f8602d54c3" kindref="member" tooltip="Return a set of identifiers for existing data items in this store.">getAuxIDs</ref>()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::Info(<sp/>APP_NAME,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-<sp/>id:<sp/>%i,<sp/>name:<sp/>%s,<sp/>type:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>auxid<sp/>),</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg.<ref refid="db/d33/classSG_1_1AuxTypeRegistry_1a640765027dc1055579b7f97171d66273" kindref="member" tooltip="Return the name of an aux data item.">getName</ref>(<sp/>auxid<sp/>).c_str(),</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg.<ref refid="db/d33/classSG_1_1AuxTypeRegistry_1a282421c8647cedea97b439141dfaac2d" kindref="member" tooltip="Return the type name of an aux data item.">getTypeName</ref>(<sp/>auxid<sp/>).c_str()<sp/>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/>SIMPLE_ASSERT(<sp/>store.<ref refid="dd/db9/classTestStore_1ac7c5bf984a4157970b8112f8602d54c3" kindref="member" tooltip="Return a set of identifiers for existing data items in this store.">getAuxIDs</ref>().size()<sp/>==<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>transient<sp/>decoration<sp/>in<sp/>the<sp/>object:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>decId<sp/>=<sp/>reg.<ref refid="db/d33/classSG_1_1AuxTypeRegistry_1a5b1f2839e2695b9f56494d2b9dbc5057" kindref="member" tooltip="Look up a name -&amp;gt; auxid_t mapping.">getAuxID</ref>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;decoration&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/>SIMPLE_ASSERT(<sp/>store.<ref refid="dd/db9/classTestStore_1a058764aa8a12b920b8592414b8d0dde3" kindref="member" tooltip="Return the data vector for one aux data decoration item.">getDecoration</ref>(<sp/>decId,<sp/>5,<sp/>5<sp/>)<sp/>!=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>that<sp/>the<sp/>store<sp/>now<sp/>knows<sp/>about<sp/>this<sp/>variable:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/>SIMPLE_ASSERT(<sp/>store.<ref refid="dd/db9/classTestStore_1ac7c5bf984a4157970b8112f8602d54c3" kindref="member" tooltip="Return a set of identifiers for existing data items in this store.">getAuxIDs</ref>().size()<sp/>==<sp/>3<sp/>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>it<sp/>can<sp/>be<sp/>cleared<sp/>out:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/>store.<ref refid="dd/db9/classTestStore_1a9b837965e2885c29718ff12c11ab1d42" kindref="member" tooltip="Clear all decorations.">clearDecorations</ref>();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/>SIMPLE_ASSERT(<sp/>store.<ref refid="dd/db9/classTestStore_1ac7c5bf984a4157970b8112f8602d54c3" kindref="member" tooltip="Return a set of identifiers for existing data items in this store.">getAuxIDs</ref>().size()<sp/>==<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>overwrite<sp/>an<sp/>existing<sp/>variable<sp/>with<sp/>a<sp/>decoration,<sp/>to<sp/>check<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>can&apos;t<sp/>be<sp/>done:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/>var1Id<sp/>=<sp/>reg.<ref refid="db/d33/classSG_1_1AuxTypeRegistry_1ab2a0b495f974d906674065233edd5184" kindref="member" tooltip="Look up a name -&amp;gt; auxid_t mapping.">findAuxID</ref>(<sp/></highlight><highlight class="stringliteral">&quot;var1&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/>SIMPLE_ASSERT(<sp/>var1Id<sp/>!=<sp/>SG::null_auxid<sp/>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>exceptionThrown<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>store.<ref refid="dd/db9/classTestStore_1a058764aa8a12b920b8592414b8d0dde3" kindref="member" tooltip="Return the data vector for one aux data decoration item.">getDecoration</ref>(<sp/>var1Id,<sp/>2,<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/d41/classSG_1_1ExcStoreLocked" kindref="compound" tooltip="Exception --- Attempted to modify auxiliary data in a locked store.">SG::ExcStoreLocked</ref>&amp;<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exceptionThrown<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/>SIMPLE_ASSERT(<sp/>exceptionThrown<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>a<sp/>selection<sp/>rule<sp/>for<sp/>the<sp/>output<sp/>writing:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/>store.selectAux(<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;var1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;decoration&quot;</highlight><highlight class="normal"><sp/>}<sp/>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>another<sp/>transient<sp/>tree<sp/>to<sp/>test<sp/>the<sp/>tree<sp/>writing<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/>std::unique_ptr&lt;<sp/>::TTree<sp/>&gt;<sp/>otree(<sp/>new<sp/>::TTree(<sp/></highlight><highlight class="stringliteral">&quot;OutputTree&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Output<sp/>Tree&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/>otree-&gt;SetDirectory(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Connect<sp/>the<sp/>store<sp/>object<sp/>to<sp/>the<sp/>tree:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/>RETURN_CHECK(<sp/>APP_NAME,<sp/>store.writeTo(<sp/>otree.get()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>decoration<sp/>again:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/>SIMPLE_ASSERT(<sp/>store.<ref refid="dd/db9/classTestStore_1a058764aa8a12b920b8592414b8d0dde3" kindref="member" tooltip="Return the data vector for one aux data decoration item.">getDecoration</ref>(<sp/>decId,<sp/>5,<sp/>5<sp/>)<sp/>!=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/>SIMPLE_ASSERT(<sp/>store.<ref refid="dd/db9/classTestStore_1ac7c5bf984a4157970b8112f8602d54c3" kindref="member" tooltip="Return a set of identifiers for existing data items in this store.">getAuxIDs</ref>().size()<sp/>==<sp/>3<sp/>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>overwrite<sp/>an<sp/>existing<sp/>variable<sp/>with<sp/>a<sp/>decoration,<sp/>to<sp/>check<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>can&apos;t<sp/>be<sp/>done:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/>var2Id<sp/>=<sp/>reg.<ref refid="db/d33/classSG_1_1AuxTypeRegistry_1ab2a0b495f974d906674065233edd5184" kindref="member" tooltip="Look up a name -&amp;gt; auxid_t mapping.">findAuxID</ref>(<sp/></highlight><highlight class="stringliteral">&quot;var2&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/>SIMPLE_ASSERT(<sp/>var2Id<sp/>!=<sp/>SG::null_auxid<sp/>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/>exceptionThrown<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>store.<ref refid="dd/db9/classTestStore_1a058764aa8a12b920b8592414b8d0dde3" kindref="member" tooltip="Return the data vector for one aux data decoration item.">getDecoration</ref>(<sp/>var1Id,<sp/>2,<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/d41/classSG_1_1ExcStoreLocked" kindref="compound" tooltip="Exception --- Attempted to modify auxiliary data in a locked store.">SG::ExcStoreLocked</ref>&amp;<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exceptionThrown<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/>SIMPLE_ASSERT(<sp/>exceptionThrown<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/>exceptionThrown<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>store.<ref refid="dd/db9/classTestStore_1a058764aa8a12b920b8592414b8d0dde3" kindref="member" tooltip="Return the data vector for one aux data decoration item.">getDecoration</ref>(<sp/>var2Id,<sp/>2,<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/d41/classSG_1_1ExcStoreLocked" kindref="compound" tooltip="Exception --- Attempted to modify auxiliary data in a locked store.">SG::ExcStoreLocked</ref>&amp;<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exceptionThrown<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/>SIMPLE_ASSERT(<sp/>exceptionThrown<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>the<sp/>output<sp/>tree<sp/>looks<sp/>as<sp/>it<sp/>should:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>otree-&gt;Fill()<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::Error(<sp/>APP_NAME,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>fill<sp/>the<sp/>transient<sp/>data<sp/>into<sp/>the<sp/>output<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;tree&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/>otree-&gt;Print();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/>SIMPLE_ASSERT(<sp/>otree-&gt;GetNbranches()<sp/>==<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>that<sp/>when<sp/>we<sp/>clear<sp/>the<sp/>decorations,<sp/>the<sp/>auxiliary<sp/>ID<sp/>is<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>removed.<sp/>Since<sp/>this<sp/>is<sp/>a<sp/>&quot;persistent<sp/>decoration&quot;<sp/>now:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/>store.<ref refid="dd/db9/classTestStore_1a9b837965e2885c29718ff12c11ab1d42" kindref="member" tooltip="Clear all decorations.">clearDecorations</ref>();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/>SIMPLE_ASSERT(<sp/>store.<ref refid="dd/db9/classTestStore_1ac7c5bf984a4157970b8112f8602d54c3" kindref="member" tooltip="Return a set of identifiers for existing data items in this store.">getAuxIDs</ref>().size()<sp/>==<sp/>3<sp/>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/test/ut_xaodrootaccess_tauxstore_test.cxx"/>
  </compounddef>
</doxygen>
