<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="dc/d22/TESUncertainty_8cxx" kind="file">
    <compoundname>TESUncertainty.cxx</compoundname>
    <includes local="yes">assert.h</includes>
    <includes refid="d9/df1/TESUncertainty_8h" local="yes">TauCorrUncert/TESUncertainty.h</includes>
    <incdepgraph>
      <node id="284774">
        <label>assert.h</label>
      </node>
      <node id="284782">
        <label>TH1D.h</label>
      </node>
      <node id="284777">
        <label>map</label>
      </node>
      <node id="284773">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TauCorrUncert/Root/TESUncertainty.cxx</label>
        <link refid="TESUncertainty.cxx"/>
        <childnode refid="284774" relation="include">
        </childnode>
        <childnode refid="284775" relation="include">
        </childnode>
      </node>
      <node id="284785">
        <label>TObject.h</label>
      </node>
      <node id="284776">
        <label>vector</label>
      </node>
      <node id="284781">
        <label>TFile.h</label>
      </node>
      <node id="284775">
        <label>TauCorrUncert/TESUncertainty.h</label>
        <link refid="d9/df1/TESUncertainty_8h_source"/>
        <childnode refid="284776" relation="include">
        </childnode>
        <childnode refid="284777" relation="include">
        </childnode>
        <childnode refid="284778" relation="include">
        </childnode>
        <childnode refid="284779" relation="include">
        </childnode>
        <childnode refid="284780" relation="include">
        </childnode>
        <childnode refid="284781" relation="include">
        </childnode>
        <childnode refid="284782" relation="include">
        </childnode>
        <childnode refid="284783" relation="include">
        </childnode>
        <childnode refid="284784" relation="include">
        </childnode>
        <childnode refid="284785" relation="include">
        </childnode>
      </node>
      <node id="284778">
        <label>math.h</label>
      </node>
      <node id="284779">
        <label>iostream</label>
      </node>
      <node id="284783">
        <label>TString.h</label>
      </node>
      <node id="284784">
        <label>TMath.h</label>
      </node>
      <node id="284780">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="dc/d22/TESUncertainty_8cxx_1a43df440867ef4af028023d706f559bc4" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double EtaBins[n_EtaBins+1]</definition>
        <argsstring>[n_EtaBins+1]</argsstring>
        <name>EtaBins</name>
        <initializer> {
  0.,0.3,0.8,1.3,1.6,2.5
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TauCorrUncert/Root/TESUncertainty.cxx" line="14" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TauCorrUncert/Root/TESUncertainty.cxx" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d22/TESUncertainty_8cxx_1af2c0b51409648c6018a278e5d751a174" prot="public" static="no" mutable="no">
        <type>TString</type>
        <definition>TString PF_EtaBins[n_EtaBins]</definition>
        <argsstring>[n_EtaBins]</argsstring>
        <name>PF_EtaBins</name>
        <initializer> {
  &quot;0_03&quot;,&quot;03_08&quot;,&quot;08_13&quot;,&quot;13_16&quot;,&quot;16_25&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TauCorrUncert/Root/TESUncertainty.cxx" line="17" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TauCorrUncert/Root/TESUncertainty.cxx" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d22/TESUncertainty_8cxx_1afb177454cbe10102a943b56dc0d37691" prot="public" static="no" mutable="no">
        <type>TH1D *</type>
        <definition>TH1D* h1_TES_comps[28][2][5]</definition>
        <argsstring>[28][2][5]</argsstring>
        <name>h1_TES_comps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TauCorrUncert/Root/TESUncertainty.cxx" line="19" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TauCorrUncert/Root/TESUncertainty.cxx" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="dc/d22/TESUncertainty_8cxx_1a26d1b9d58e5ff4bd86399f98bdaefdbb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ClassImp</definition>
        <argsstring>(TESUncertainty) static const unsigned int n_EtaBins</argsstring>
        <name>ClassImp</name>
        <param>
          <type><ref refid="d6/dc3/classTauCorrUncert_1_1TESUncertainty" kindref="compound">TESUncertainty</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TauCorrUncert/Root/TESUncertainty.cxx" line="11"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>TESUNCERTAINTY_CXX</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TESUNCERTAINTY_CXX</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;assert.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TauCorrUncert/TESUncertainty.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">TauCorrUncert;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">ClassImp(<ref refid="d6/dc3/classTauCorrUncert_1_1TESUncertainty" kindref="compound">TESUncertainty</ref>)</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">static<sp/><sp/>const<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_EtaBins<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>EtaBins[n_EtaBins<sp/>+<sp/>1]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>0.,0.3,0.8,1.3,1.6,2.5</highlight></codeline>
<codeline lineno="14"><highlight class="normal">};</highlight></codeline>
<codeline lineno="15"><highlight class="normal">TString<sp/>PF_EtaBins[n_EtaBins]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;0_03&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;03_08&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;08_13&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;13_16&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;16_25&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal">};</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//TODO:<sp/>get<sp/>rid<sp/>of<sp/>this<sp/>array<sp/>and<sp/>use<sp/>a<sp/>proper<sp/>object<sp/>as<sp/>it<sp/>should<sp/>be<sp/>in<sp/>C++</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">TH1D*<sp/>h1_TES_comps[28][2][5];</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">TESUncertainty::~TESUncertainty()</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>map&lt;TString,<sp/>TH1D*&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it<sp/>=<sp/>map_histo.begin();<sp/>it<sp/>!=<sp/>map_histo.end();<sp/>++it)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((*it).second)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>(*it).second;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">TESUncertainty::TESUncertainty(TString<sp/>datafile)<sp/>:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>GeV(1000.),</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>m_dInSituStat1P(0.013),</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>m_dInSituStat3P(0.014),</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>m_dInSituSyst1P(0.006),</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>m_dInSituSyst3P(0.007)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>TFile*<sp/>file<sp/>=<sp/>TFile::Open(datafile);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!file<sp/>||<sp/>!file-&gt;IsOpen())</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Fatal(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>open<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>datafile.Data());</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>m_nEta<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>map_components[FINAL]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TESUFinal_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>map_components[SINGLEPARTICLE]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TESUsinglep_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>map_components[EOP_RSP]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TESUEoP_Rsp_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>map_components[EOP_SYST]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TESUEoP_syst_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>map_components[CTB_RSP]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TESUCTB_Rsp_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>map_components[CTB_SYST]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TESUCTB_syst_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>map_components[EM]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TESUEM_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>map_components[LCW]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TESUShowerShape_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>map_components[Bias]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TESUBias_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>map_components[UE]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TESUue_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>map_components[DM]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TESUdm_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>map_components[CLOSURE]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TESUclosure_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>map_components[PU]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TESUpu_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>map_components[SHOWERMODEL]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TESUshowerm_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>map_components[REMAININGSYS]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TESRemainingSys_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ieta<sp/>=<sp/>0;<sp/>ieta<sp/>&lt;<sp/>m_nEta;<sp/>++ieta)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>itrack<sp/>=<sp/>0;<sp/>itrack<sp/>&lt;<sp/>2;<sp/>++itrack)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TString<sp/>prongPF<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;_1p&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(itrack<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prongPF<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;_3p&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>h1_TES_comps[FINAL][itrack][ieta]<sp/>=<sp/>GetHist(file,<sp/>map_components[FINAL]+PF_EtaBins[ieta]+prongPF);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>h1_TES_comps[SINGLEPARTICLE][itrack][ieta]<sp/>=<sp/>GetHist(file,<sp/>map_components[SINGLEPARTICLE]+PF_EtaBins[ieta]+prongPF);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>h1_TES_comps[UE][itrack][ieta]<sp/>=<sp/>GetHist(file,<sp/>map_components[UE]+PF_EtaBins[ieta]+prongPF);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>h1_TES_comps[DM][itrack][ieta]<sp/>=<sp/>GetHist(file,<sp/>map_components[DM]+PF_EtaBins[ieta]+prongPF);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>h1_TES_comps[CLOSURE][itrack][ieta]<sp/>=<sp/>GetHist(file,<sp/>map_components[CLOSURE]+PF_EtaBins[ieta]+prongPF);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>h1_TES_comps[PU][itrack][ieta]<sp/>=<sp/>GetHist(file,<sp/>map_components[PU]+PF_EtaBins[ieta]+prongPF);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ieta<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h1_TES_comps[SHOWERMODEL][itrack][ieta]<sp/>=<sp/>GetHist(file,<sp/>map_components[SHOWERMODEL]+PF_EtaBins[ieta]+prongPF);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h1_TES_comps[SHOWERMODEL][itrack][ieta]<sp/>=<sp/>GetHist(file,<sp/>map_components[FINAL]+PF_EtaBins[ieta]+prongPF);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h1_TES_comps[SHOWERMODEL][itrack][ieta]-&gt;Reset(</highlight><highlight class="stringliteral">&quot;ICESM&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>h1_TES_comps[OTHERS][itrack][ieta]<sp/>=<sp/>GetHist(file,<sp/>map_components[UE]+PF_EtaBins[ieta]+prongPF);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibin<sp/>=<sp/>1;<sp/>ibin<sp/>&lt;<sp/>h1_TES_comps[OTHERS][itrack][ieta]-&gt;GetNbinsX()<sp/>+<sp/>1;<sp/>++ibin)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bincontentue=<sp/><sp/>h1_TES_comps[OTHERS][itrack][ieta]-&gt;GetBinContent(ibin);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bincontentdm=<sp/><sp/>h1_TES_comps[DM][itrack][ieta]-&gt;GetBinContent(ibin);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bincontentclosure=<sp/><sp/>h1_TES_comps[CLOSURE][itrack][ieta]-&gt;GetBinContent(ibin);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bincontentshower=<sp/><sp/>h1_TES_comps[SHOWERMODEL][itrack][ieta]-&gt;GetBinContent(ibin);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h1_TES_comps[OTHERS][itrack][ieta]-&gt;SetBinContent(ibin,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sqrt(bincontentue<sp/>*<sp/>bincontentue<sp/>+</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bincontentdm<sp/>*<sp/>bincontentdm<sp/>+</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bincontentclosure<sp/>*<sp/>bincontentclosure<sp/>+</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bincontentshower<sp/>*<sp/>bincontentshower));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>total<sp/>-<sp/>closure<sp/>-<sp/>pu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>h1_TES_comps[REMAININGSYS][itrack][ieta]<sp/>=<sp/>GetHist(file,<sp/>map_components[FINAL]+PF_EtaBins[ieta]+prongPF);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibin<sp/>=<sp/>1;<sp/>ibin<sp/>&lt;<sp/>h1_TES_comps[OTHERS][itrack][ieta]-&gt;GetNbinsX()<sp/>+<sp/>1;<sp/>++ibin)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bincontentfinal<sp/>=<sp/><sp/>pow(h1_TES_comps[FINAL][itrack][ieta]-&gt;GetBinContent(ibin),<sp/>2);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bincontentpu<sp/>=<sp/><sp/>pow(h1_TES_comps[PU][itrack][ieta]-&gt;GetBinContent(ibin),<sp/>2);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bincontentclosure<sp/>=<sp/><sp/>pow(h1_TES_comps[CLOSURE][itrack][ieta]-&gt;GetBinContent(ibin),<sp/>2);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h1_TES_comps[REMAININGSYS][itrack][ieta]-&gt;SetBinContent(ibin,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sqrt(bincontentfinal<sp/>-</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bincontentclosure<sp/>-</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bincontentpu));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>Info(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;data<sp/>loaded<sp/>from<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>datafile.Data());</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>file-&gt;Close();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">TH1D*<sp/>TESUncertainty::GetHist(TFile*<sp/>file,<sp/>TString<sp/>name)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>TH1D*<sp/>hist<sp/>=<sp/>(TH1D*)file-&gt;Get(name);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hist)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Fatal(</highlight><highlight class="stringliteral">&quot;GetHist&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>get<sp/>required<sp/>histogram<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>name.Data());</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>hist<sp/>=<sp/>(TH1D*)hist-&gt;Clone();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>hist-&gt;SetDirectory(0);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hist;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>TESUncertainty::GetTESShift(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pt,<sp/></highlight><highlight class="comment">//<sp/>MeV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ntracks)</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/>pt<sp/>=<sp/>pt<sp/>/<sp/>GeV;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pt<sp/>&gt;<sp/>70.)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha<sp/>=<sp/>ntracks<sp/>==<sp/>1<sp/>?<sp/>0.008<sp/>:<sp/>0.011;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/>alpha<sp/>*=<sp/>interpolateLin(pt);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>alpha<sp/>/<sp/>(1.<sp/>-<sp/>alpha);</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>TESUncertainty::GetTESUncertainty(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pt,<sp/></highlight><highlight class="comment">//<sp/>MeV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eta,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ntracks,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TESComponent<sp/>component)</highlight></codeline>
<codeline lineno="148"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>siwtched<sp/>on<sp/>for<sp/>HSG4</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>assert(component<sp/>!=<sp/>REMAININGSYS<sp/>&amp;&amp;<sp/>&quot;User<sp/>are<sp/>not<sp/>supposed<sp/>to<sp/>access<sp/>REMAININGSYS<sp/>component.<sp/>Giving<sp/>up&quot;);</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>pt<sp/>=<sp/>pt<sp/>/<sp/>GeV;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pt<sp/>&lt;<sp/>15)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>pt<sp/>=<sp/>16.;<sp/></highlight><highlight class="comment">//<sp/>Take<sp/>the<sp/>lowest<sp/>bin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pt<sp/>&gt;<sp/>199)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>pt<sp/>=<sp/>199.;<sp/></highlight><highlight class="comment">//<sp/>Take<sp/>the<sp/>highest<sp/>bin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fabs(eta)&gt;2.5)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Warning(</highlight><highlight class="stringliteral">&quot;GetTESUncertainty&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;There<sp/>is<sp/>no<sp/>TES<sp/>uncertainty<sp/>defined<sp/>for<sp/>|eta|&gt;=2.5<sp/>(you<sp/>gave<sp/>%.2f).<sp/>Returning<sp/>1.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eta);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>since<sp/>it&apos;s<sp/>an<sp/>array<sp/>-<sp/>should<sp/>be<sp/>refactored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>itrack<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ntracks<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>itrack<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iE<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iE<sp/>=<sp/>0;<sp/>iE<sp/>&lt;<sp/>n_EtaBins;<sp/>++iE)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fabs(eta)<sp/>&gt;=<sp/>EtaBins[iE]<sp/>&amp;&amp;<sp/>fabs(eta)<sp/>&lt;<sp/>EtaBins[iE<sp/>+<sp/>1])</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>OBSOLETE</highlight></codeline>
<codeline lineno="178"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(component<sp/>==<sp/>TOTAL<sp/>&amp;&amp;<sp/>pt<sp/>&gt;<sp/>50.)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>h1_TES_comps[FINAL][itrack][iE]-&gt;GetBinContent(h1_TES_comps[FINAL][itrack][iE]-&gt;FindBin(pt));</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="181"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(component<sp/>==<sp/>INSITUSTAT)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getInSituStat(ntracks);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(component<sp/>==<sp/>INSITUSYST)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getInSituSys(itrack);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(component<sp/>==<sp/>INSITUSTATINTERPOL)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(interpolateLin(pt))<sp/>*<sp/>getInSituStat(ntracks);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(component<sp/>==<sp/>SINGLEPARTICLEINTERPOL)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getSingleParticleResponseInterpolated(pt,<sp/>itrack,<sp/>iE);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(component<sp/>==<sp/>INSITUSYSTINTERPOL){</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(interpolateLin(pt))<sp/>*<sp/>getInSituSys(itrack);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>OBSOLETE</highlight></codeline>
<codeline lineno="192"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pt<sp/>&gt;<sp/>50.)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ntracks<sp/>==<sp/>1<sp/>?<sp/>m_dInSituSyst1P<sp/>:<sp/>m_dInSituSyst3P;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="196"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(component<sp/>==<sp/>SYSREST)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getSystRest(pt,<sp/>ntracks,<sp/>itrack,<sp/>iE);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(component<sp/>==<sp/>MODELING)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getModeling(pt,<sp/>itrack,<sp/>iE);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(component<sp/>==<sp/>CLOSURE)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getClosure(pt,<sp/>itrack,<sp/>iE);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(component<sp/>==<sp/>SINGLEPARTICLE)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getSingleParticleResponse(pt,<sp/>itrack,<sp/>iE);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(component<sp/>==<sp/>INSITU)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getInSitu(itrack);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(component<sp/>==<sp/>INSITUINTERPOL)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getInSitu(pt,itrack);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(component<sp/>==<sp/>TOTAL){</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(pow(getModeling(pt,<sp/>itrack,<sp/>iE),<sp/>2)<sp/>+</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pow(getSingleParticleResponseInterpolated(pt,<sp/>itrack,<sp/>iE),<sp/>2)<sp/>+</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pow(getClosure(pt,<sp/>itrack,<sp/>iE),<sp/>2)<sp/>+</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pow(getInSitu(pt,<sp/>itrack),<sp/>2));</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>OBSOLETE</highlight></codeline>
<codeline lineno="216"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>closure<sp/>=<sp/>h1_TES_comps[CLOSURE][itrack][iE]-&gt;GetBinContent(h1_TES_comps[CLOSURE][itrack][iE]-&gt;FindBin(pt));</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pu<sp/>=<sp/>h1_TES_comps[PU][itrack][iE]-&gt;GetBinContent(h1_TES_comps[PU][itrack][iE]-&gt;FindBin(pt));</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>insitustat<sp/>=<sp/>getInSituStat(pt,<sp/>ntracks);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>systrest<sp/>=<sp/>getSystRest(pt,<sp/>ntracks,<sp/>itrack,<sp/>iE);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(pow(closure,<sp/>2)<sp/>+</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pow(pu,<sp/>2)<sp/>+</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pow(insitustat,<sp/>2)<sp/>+</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pow(systrest,<sp/>2));</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="225"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>h1_TES_comps[component][itrack][iE]-&gt;GetBinContent(h1_TES_comps[component][itrack][iE]-&gt;FindBin(pt));</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>TESUncertainty::getModeling(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>pt,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>itrack,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>iE){</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pu<sp/>=<sp/>h1_TES_comps[PU][itrack][iE]-&gt;GetBinContent(h1_TES_comps[PU][itrack][iE]-&gt;FindBin(pt));</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>showermodel<sp/>=<sp/>h1_TES_comps[SHOWERMODEL][itrack][iE]-&gt;GetBinContent(h1_TES_comps[SHOWERMODEL][itrack][iE]-&gt;FindBin(pt));</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dm<sp/>=<sp/>h1_TES_comps[DM][itrack][iE]-&gt;GetBinContent(h1_TES_comps[DM][itrack][iE]-&gt;FindBin(pt));</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ue<sp/>=<sp/>h1_TES_comps[UE][itrack][iE]-&gt;GetBinContent(h1_TES_comps[UE][itrack][iE]-&gt;FindBin(pt));</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(pow(showermodel,<sp/>2)<sp/>+</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pow(pu,<sp/>2)<sp/>+</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pow(ue,<sp/>2)<sp/>+</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pow(dm,<sp/>2));</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>TESUncertainty::getClosure(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>pt,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>itrack,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>iE){</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>h1_TES_comps[CLOSURE][itrack][iE]-&gt;GetBinContent(h1_TES_comps[CLOSURE][itrack][iE]-&gt;FindBin(pt));</highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>TESUncertainty::getInSitu(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>itrack){</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(pow(getInSituStat(itrack),<sp/>2)<sp/>+</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pow(getInSituSys(itrack),<sp/>2));</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>TESUncertainty::getInSitu(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>pt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>itrack){</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(interpolateLin(pt)<sp/>*<sp/>(pow(getInSituStat(itrack),<sp/>2)<sp/>+</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pow(getInSituSys(itrack),<sp/>2)));</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>TESUncertainty::getSingleParticleResponse(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>pt,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>itrack,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>iE){</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>h1_TES_comps[SINGLEPARTICLE][itrack][iE]-&gt;GetBinContent(h1_TES_comps[SINGLEPARTICLE][itrack][iE]-&gt;FindBin(pt));</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>TESUncertainty::getSingleParticleResponseInterpolated(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>pt,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>itrack,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>iE){</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(1<sp/>-<sp/>interpolateLin(pt))<sp/>*<sp/>h1_TES_comps[SINGLEPARTICLE][itrack][iE]-&gt;GetBinContent(h1_TES_comps[SINGLEPARTICLE][itrack][iE]-&gt;FindBin(pt));</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>TESUncertainty::getInSituStat(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>ntracks){</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ntracks<sp/>==<sp/>1<sp/>?<sp/>m_dInSituStat1P<sp/>:<sp/>m_dInSituStat3P;</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>TESUncertainty::getInSituSys(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>ntracks){</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ntracks<sp/>==<sp/>1<sp/>?<sp/>m_dInSituStat1P<sp/>:<sp/>m_dInSituStat3P;</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>TESUncertainty::getSystRest(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>pt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>ntracks,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>itrack,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>iE){<sp/></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pt<sp/>&gt;=<sp/>50.)<sp/></highlight><highlight class="comment">//<sp/>this<sp/>should<sp/>be<sp/>a<sp/>member<sp/>-<sp/>refactoring</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>h1_TES_comps[REMAININGSYS][itrack][iE]-&gt;GetBinContent(h1_TES_comps[REMAININGSYS][itrack][iE]-&gt;FindBin(pt));</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>insitusys<sp/>=<sp/>ntracks<sp/>==<sp/>1<sp/>?<sp/>m_dInSituSyst1P<sp/>:<sp/>m_dInSituSyst3P;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>remainingsyst<sp/>=<sp/>h1_TES_comps[REMAININGSYS][itrack][iE]-&gt;GetBinContent(h1_TES_comps[REMAININGSYS][itrack][iE]-&gt;FindBin(pt));</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(pow(insitusys,<sp/>2)<sp/>+</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pow(remainingsyst,<sp/>2));</highlight></codeline>
<codeline lineno="286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>TESUncertainty::interpolateLin(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>pt){</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pt<sp/>&lt;<sp/>50.)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pt<sp/>&gt;<sp/>70.)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(1<sp/><sp/>-<sp/>(pt<sp/>-<sp/>50.)<sp/>/<sp/>20.);</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TauCorrUncert/Root/TESUncertainty.cxx"/>
  </compounddef>
</doxygen>
