<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="dc/d1b/classxAOD_1_1TVirtualIncidentListener" kind="class" prot="public">
    <compoundname>xAOD::TVirtualIncidentListener</compoundname>
    <includes refid="d6/d94/TVirtualIncidentListener_8h" local="no">TVirtualIncidentListener.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="dc/d1b/classxAOD_1_1TVirtualIncidentListener_1ab9e5f78745052176b6cd9571b0e03bfb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual xAOD::TVirtualIncidentListener::~TVirtualIncidentListener</definition>
        <argsstring>()</argsstring>
        <name>~TVirtualIncidentListener</name>
        <briefdescription>
<para>Virtual destructor, to make vtable happy... </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/TVirtualIncidentListener.h" line="30" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/TVirtualIncidentListener.h" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="dc/d1b/classxAOD_1_1TVirtualIncidentListener_1ab77fc2f4e8a2ab96e86b56f58d5054d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void xAOD::TVirtualIncidentListener::handle</definition>
        <argsstring>(const TIncident &amp;inc)=0</argsstring>
        <name>handle</name>
        <param>
          <type>const <ref refid="d2/d7a/classxAOD_1_1TIncident" kindref="compound">TIncident</ref> &amp;</type>
          <declname>inc</declname>
        </param>
        <briefdescription>
<para>Function that is called when certain &quot;incidents&quot; happen. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/TVirtualIncidentListener.h" line="33"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Class providing an interface for classes listening to <ref refid="dd/d44/namespacexAOD" kindref="compound">xAOD</ref> incidents</para><para>Generic <ref refid="dd/d44/namespacexAOD" kindref="compound">xAOD</ref> reading code may want to be able to know when certain &quot;incidents&quot; happen during file processing. In order to do so, a user class has to implement this interface, and then the objects that want to receive incidents, have to register themselves in the <ref refid="de/d95/classxAOD_1_1TEvent" kindref="compound">xAOD::TEvent</ref> object that they want to listen to.</para><para>Naturally, the design here is taken straight from Gaudi&apos;s IncidentSvc.</para><para><simplesect kind="author"><para>Attila Krasznahorkay &lt;<ulink url="mailto:Attila.Krasznahorkay@cern.ch">Attila.Krasznahorkay@cern.ch</ulink>&gt;</para></simplesect>
<simplesect kind="rcs"><title>Revision</title><para>611948 </para></simplesect>
<simplesect kind="rcs"><title>Date</title><para>2014-08-15 10:48:40 +0200 (Fri, 15 Aug 2014) </para></simplesect>
</para>    </detaileddescription>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/TVirtualIncidentListener.h" line="26" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/TVirtualIncidentListener.h" bodystart="26" bodyend="35"/>
    <listofallmembers>
      <member refid="dc/d1b/classxAOD_1_1TVirtualIncidentListener_1ab77fc2f4e8a2ab96e86b56f58d5054d4" prot="public" virt="pure-virtual"><scope>xAOD::TVirtualIncidentListener</scope><name>handle</name></member>
      <member refid="dc/d1b/classxAOD_1_1TVirtualIncidentListener_1ab9e5f78745052176b6cd9571b0e03bfb" prot="public" virt="virtual"><scope>xAOD::TVirtualIncidentListener</scope><name>~TVirtualIncidentListener</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
