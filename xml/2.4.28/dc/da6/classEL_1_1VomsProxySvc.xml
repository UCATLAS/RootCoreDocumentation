<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="dc/da6/classEL_1_1VomsProxySvc" kind="class" prot="public">
    <compoundname>EL::VomsProxySvc</compoundname>
    <basecompoundref refid="de/ddb/classEL_1_1Algorithm" prot="public" virt="non-virtual">EL::Algorithm</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="dc/da6/classEL_1_1VomsProxySvc_1a7e5a78bed0be1978d351ca7e697561b0" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string EL::VomsProxySvc::m_fileName</definition>
        <argsstring></argsstring>
        <name>m_fileName</name>
        <briefdescription>
<para>the name of the file to be created </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/VomsProxySvc.h" line="37" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/VomsProxySvc.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="dc/da6/classEL_1_1VomsProxySvc_1aacfd22b078ff72e5b819aa051eb9a3e5" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string EL::VomsProxySvc::m_proxyData</definition>
        <argsstring></argsstring>
        <name>m_proxyData</name>
        <briefdescription>
<para>the data to place inside the proxy file </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/VomsProxySvc.h" line="62" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/VomsProxySvc.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="dc/da6/classEL_1_1VomsProxySvc_1afc9633740674e1409e6f655503658080" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>static const std::string&amp; EL::VomsProxySvc::name</definition>
        <argsstring>()</argsstring>
        <name>name</name>
        <briefdescription>
<para>description: the name of the service </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/VomsProxySvc.h" line="27"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="dc/da6/classEL_1_1VomsProxySvc_1af94118813a34353c228aab330f973a09" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EL::VomsProxySvc::testInvariant</definition>
        <argsstring>() const </argsstring>
        <name>testInvariant</name>
        <reimplements refid="de/ddb/classEL_1_1Algorithm_1afa8999f46656a42d53df3731216f1296">testInvariant</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: test the invariant of this object guarantee: no-fail </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/VomsProxySvc.h" line="33"/>
      </memberdef>
      <memberdef kind="function" id="dc/da6/classEL_1_1VomsProxySvc_1ad423873c04cc5aa79fc63af20fcc5515" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const char *</type>
        <definition>virtual const char* EL::VomsProxySvc::GetName</definition>
        <argsstring>() const override</argsstring>
        <name>GetName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/VomsProxySvc.h" line="46"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="dc/da6/classEL_1_1VomsProxySvc_1aebd7ade119d99369577493a2977a0604" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d9/daa/classEL_1_1StatusCode" kindref="compound">StatusCode</ref></type>
        <definition>virtual StatusCode EL::VomsProxySvc::setupJob</definition>
        <argsstring>(Job &amp;job) override</argsstring>
        <name>setupJob</name>
        <reimplements refid="de/ddb/classEL_1_1Algorithm_1a6bea54e06f41f386407aad066f051f59">setupJob</reimplements>
        <param>
          <type><ref refid="da/dbb/classEL_1_1Job" kindref="compound">Job</ref> &amp;</type>
          <declname>job</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: give the algorithm a chance to intialize the job with anything this algorithm needs. this method is automatically called before the algorithm is actually added to the job. guarantee: basic failures: algorithm dependent rationale: this is currently used to give algorithms a chance to register their output datasets, but can also be used for other stuff. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/VomsProxySvc.h" line="49"/>
      </memberdef>
      <memberdef kind="function" id="dc/da6/classEL_1_1VomsProxySvc_1ae7131c925dc1e57ee6bbb00d43ad4f96" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d9/daa/classEL_1_1StatusCode" kindref="compound">StatusCode</ref></type>
        <definition>virtual StatusCode EL::VomsProxySvc::histInitialize</definition>
        <argsstring>() override</argsstring>
        <name>histInitialize</name>
        <reimplements refid="de/ddb/classEL_1_1Algorithm_1a495fd98dfd3af930cc2563df18ff2d01">histInitialize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: this is a pre-initialization routine that is called before changeInput is called. guarantee: basic failures: algorithm dependent rationale: unlike initialize(), this method is called all the time, even on empty input files. so you should create any histograms or n-tuples here that subsequent code expects </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/VomsProxySvc.h" line="52"/>
      </memberdef>
      <memberdef kind="function" id="dc/da6/classEL_1_1VomsProxySvc_1ac3846c4bbab4ad724af37b9a514ce4c1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>EL::VomsProxySvc::ClassDef</definition>
        <argsstring>(VomsProxySvc, 1)</argsstring>
        <name>ClassDef</name>
        <reimplements refid="de/ddb/classEL_1_1Algorithm_1aaaf7e4b47c721a094449edc60a2ffe88">ClassDef</reimplements>
        <param>
          <type><ref refid="dc/da6/classEL_1_1VomsProxySvc" kindref="compound">VomsProxySvc</ref></type>
        </param>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/VomsProxySvc.h" line="68"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="23089">
        <label>EL::Algorithm</label>
        <link refid="de/ddb/classEL_1_1Algorithm"/>
      </node>
      <node id="23088">
        <label>EL::VomsProxySvc</label>
        <link refid="dc/da6/classEL_1_1VomsProxySvc"/>
        <childnode refid="23089" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="23091">
        <label>EL::Algorithm</label>
        <link refid="de/ddb/classEL_1_1Algorithm"/>
        <childnode refid="23092" relation="usage">
          <edgelabel>m_wk</edgelabel>
        </childnode>
      </node>
      <node id="23092">
        <label>EL::Worker</label>
        <link refid="da/d12/classEL_1_1Worker"/>
        <childnode refid="23093" relation="usage">
          <edgelabel>m_metaData</edgelabel>
        </childnode>
      </node>
      <node id="23094">
        <label>string</label>
      </node>
      <node id="23093">
        <label>SH::MetaObject</label>
        <link refid="db/d3a/classSH_1_1MetaObject"/>
      </node>
      <node id="23090">
        <label>EL::VomsProxySvc</label>
        <link refid="dc/da6/classEL_1_1VomsProxySvc"/>
        <childnode refid="23091" relation="public-inheritance">
        </childnode>
        <childnode refid="23094" relation="usage">
          <edgelabel>m_fileName</edgelabel>
          <edgelabel>m_proxyData</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/VomsProxySvc.h" line="20" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/VomsProxySvc.h" bodystart="19" bodyend="70"/>
    <listofallmembers>
      <member refid="de/ddb/classEL_1_1Algorithm_1abb182dee6741786ce59ddbd8a8fc4cc0" prot="public" virt="non-virtual"><scope>EL::VomsProxySvc</scope><name>Algorithm</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1a9e2072bd4fdda18ebc86f847b691d9b9" prot="public" virt="non-virtual"><scope>EL::VomsProxySvc</scope><name>book</name></member>
      <member refid="dc/da6/classEL_1_1VomsProxySvc_1ac3846c4bbab4ad724af37b9a514ce4c1" prot="private" virt="non-virtual"><scope>EL::VomsProxySvc</scope><name>ClassDef</name></member>
      <member refid="dc/da6/classEL_1_1VomsProxySvc_1ad423873c04cc5aa79fc63af20fcc5515" prot="public" virt="virtual"><scope>EL::VomsProxySvc</scope><name>GetName</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1a03872c24f8a637ba069b61d847ad557e" prot="public" virt="non-virtual"><scope>EL::VomsProxySvc</scope><name>hist</name></member>
      <member refid="dc/da6/classEL_1_1VomsProxySvc_1ae7131c925dc1e57ee6bbb00d43ad4f96" prot="private" virt="virtual"><scope>EL::VomsProxySvc</scope><name>histInitialize</name></member>
      <member refid="dc/da6/classEL_1_1VomsProxySvc_1a7e5a78bed0be1978d351ca7e697561b0" prot="public" virt="non-virtual"><scope>EL::VomsProxySvc</scope><name>m_fileName</name></member>
      <member refid="dc/da6/classEL_1_1VomsProxySvc_1aacfd22b078ff72e5b819aa051eb9a3e5" prot="private" virt="non-virtual"><scope>EL::VomsProxySvc</scope><name>m_proxyData</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1a468b0314089506f2c36445cfc84f673b" prot="public" virt="non-virtual"><scope>EL::VomsProxySvc</scope><name>msg</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1a6d3345f2effc1ea5b8add736df764ca7" prot="public" virt="non-virtual"><scope>EL::VomsProxySvc</scope><name>msg</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1ad89c787f00a88c7b51a23a4a397f5c05" prot="public" virt="non-virtual"><scope>EL::VomsProxySvc</scope><name>msgLvl</name></member>
      <member refid="dc/da6/classEL_1_1VomsProxySvc_1afc9633740674e1409e6f655503658080" prot="public" virt="non-virtual"><scope>EL::VomsProxySvc</scope><name>name</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1a767c1725616f14d347b79002d755bf55" prot="public" virt="non-virtual"><scope>EL::VomsProxySvc</scope><name>setMsgLevel</name></member>
      <member refid="dc/da6/classEL_1_1VomsProxySvc_1aebd7ade119d99369577493a2977a0604" prot="private" virt="virtual"><scope>EL::VomsProxySvc</scope><name>setupJob</name></member>
      <member refid="dc/da6/classEL_1_1VomsProxySvc_1af94118813a34353c228aab330f973a09" prot="public" virt="non-virtual"><scope>EL::VomsProxySvc</scope><name>testInvariant</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1a36e05186cb50cc0e5929121d3f6b6053" prot="public" virt="non-virtual"><scope>EL::VomsProxySvc</scope><name>wk</name></member>
      <member refid="de/ddb/classEL_1_1Algorithm_1a6d787a867dbe55af8241032c7b4aabf4" prot="public" virt="non-virtual"><scope>EL::VomsProxySvc</scope><name>~Algorithm</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
