<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="dc/d4d/exctrace__collector_8cxx" kind="file">
    <compoundname>exctrace_collector.cxx</compoundname>
    <includes local="no">dlfcn.h</includes>
    <includes local="no">execinfo.h</includes>
    <includes local="no">cstdio</includes>
    <includes local="no">typeinfo</includes>
    <incdepgraph>
      <node id="113586">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/src/exctrace/exctrace_collector.cxx</label>
        <link refid="exctrace_collector.cxx"/>
        <childnode refid="113587" relation="include">
        </childnode>
        <childnode refid="113588" relation="include">
        </childnode>
        <childnode refid="113589" relation="include">
        </childnode>
        <childnode refid="113590" relation="include">
        </childnode>
      </node>
      <node id="113590">
        <label>typeinfo</label>
      </node>
      <node id="113589">
        <label>cstdio</label>
      </node>
      <node id="113588">
        <label>execinfo.h</label>
      </node>
      <node id="113587">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="dd/d5e/structCxxUtils_1_1extrace__init" prot="public">CxxUtils::extrace_init</innerclass>
    <innernamespace refid="de/d12/namespaceCxxUtils">CxxUtils</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="dc/d4d/exctrace__collector_8cxx_1a96dc7b9361df7d8fce59b08d329041b0" prot="public" static="no">
        <type>void</type>
        <definition>typedef void throwfn(void *, std::type_info *, void(*dest)(void *))</definition>
        <argsstring>(void *, std::type_info *, void(*dest)(void *))</argsstring>
        <name>throwfn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/src/exctrace/exctrace_collector.cxx" line="30" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/src/exctrace/exctrace_collector.cxx" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="dc/d4d/exctrace__collector_8cxx_1a4e95168e81431f198c9f8b7393a2d827" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int bt_depth</definition>
        <argsstring></argsstring>
        <name>bt_depth</name>
        <initializer> 100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/src/exctrace/exctrace_collector.cxx" line="23" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/src/exctrace/exctrace_collector.cxx" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d4d/exctrace__collector_8cxx_1adeb222cc91ea8110c194394add91d954" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int exctrace_last_depth</definition>
        <argsstring></argsstring>
        <name>exctrace_last_depth</name>
        <initializer> 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/src/exctrace/exctrace_collector.cxx" line="26" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/src/exctrace/exctrace_collector.cxx" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d4d/exctrace__collector_8cxx_1af687208772b6efc315959b3122537066" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* exctrace_last_trace[bt_depth]</definition>
        <argsstring>[bt_depth]</argsstring>
        <name>exctrace_last_trace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/src/exctrace/exctrace_collector.cxx" line="27" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/src/exctrace/exctrace_collector.cxx" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d4d/exctrace__collector_8cxx_1aedfe47c98655e7dfab0139a26dc03db8" prot="public" static="yes" mutable="no">
        <type>throwfn *</type>
        <definition>throwfn* old_throw</definition>
        <argsstring></argsstring>
        <name>old_throw</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/src/exctrace/exctrace_collector.cxx" line="31" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/src/exctrace/exctrace_collector.cxx" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="dc/d4d/exctrace__collector_8cxx_1a5ce20197e9e7b4ec28afc733c5c63fea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __cxa_throw</definition>
        <argsstring>(void *thrown_exception, std::type_info *tinfo, void(*dest)(void *))</argsstring>
        <name>__cxa_throw</name>
        <param>
          <type>void *</type>
          <declname>thrown_exception</declname>
        </param>
        <param>
          <type>std::type_info *</type>
          <declname>tinfo</declname>
        </param>
        <param>
          <type>void(*)(void *)</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/src/exctrace/exctrace_collector.cxx" line="39" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/src/exctrace/exctrace_collector.cxx" bodystart="36" bodyend="42"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Generate stack trace backs from a caught exception --- collector module. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>scott snyder &lt;<ulink url="mailto:snyder@bnl.gov">snyder@bnl.gov</ulink>&gt; </para></simplesect>
<simplesect kind="date"><para>Oct, 2009 When preloaded, this module hooks into the __cxa_throw function used by the abi to throw exceptions so that it records stack back traces in static variables. These can later be accessed with <computeroutput><ref refid="de/d12/namespaceCxxUtils_1a1b199b3c90529fef9ea3d0b89d9eeca0" kindref="member">CxxUtils::exctrace</ref></computeroutput>. </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>$Id$</highlight></codeline>
<codeline lineno="16"><highlight class="comment"></highlight><highlight class="preprocessor">#include<sp/>&lt;dlfcn.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;execinfo.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdio&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;typeinfo&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Maximum<sp/>stack<sp/>depth.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bt_depth<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Static<sp/>buffer<sp/>used<sp/>to<sp/>save<sp/>the<sp/>backtrace.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exctrace_last_depth<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>exctrace_last_trace[bt_depth];</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>real<sp/>__cxa_throw<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>throwfn<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/>std::type_info*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*dest)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*));</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>throwfn*<sp/>old_throw;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>__cxa_throw<sp/>hook<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Record<sp/>a<sp/>backtrace,<sp/>then<sp/>chain<sp/>to<sp/>the<sp/>real<sp/>throw<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__cxa_throw<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>thrown_exception,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::type_info*<sp/>tinfo,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*dest)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*))</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>exctrace_last_depth<sp/>=<sp/>backtrace<sp/>(exctrace_last_trace,<sp/>bt_depth);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>old_throw<sp/>(thrown_exception,<sp/>tinfo,<sp/>dest);</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Initialization:<sp/>install<sp/>the<sp/>hook.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">CxxUtils<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="dd/d5e/structCxxUtils_1_1extrace__init" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="dd/d5e/structCxxUtils_1_1extrace__init" kindref="compound">extrace_init</ref></highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><ref refid="dd/d5e/structCxxUtils_1_1extrace__init" kindref="compound">extrace_init</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal">};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">extrace_init::extrace_init()</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>old_throw<sp/>=<sp/>(throwfn*)(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)dlsym<sp/>(RTLD_NEXT,<sp/></highlight><highlight class="stringliteral">&quot;__cxa_throw&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>extrace_init<sp/>initer;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>CxxUtils</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/src/exctrace/exctrace_collector.cxx"/>
  </compounddef>
</doxygen>
