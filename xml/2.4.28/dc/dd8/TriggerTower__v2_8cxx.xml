<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="dc/dd8/TriggerTower__v2_8cxx" kind="file">
    <compoundname>TriggerTower_v2.cxx</compoundname>
    <includes refid="d1/d0c/AuxStoreAccessorMacros_8h" local="yes">xAODCore/AuxStoreAccessorMacros.h</includes>
    <includes refid="d2/d30/TriggerTower__v2_8h" local="yes">xAODTrigL1Calo/versions/TriggerTower_v2.h</includes>
    <incdepgraph>
      <node id="459233">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="459235">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="459189" relation="include">
        </childnode>
        <childnode refid="459191" relation="include">
        </childnode>
        <childnode refid="459198" relation="include">
        </childnode>
        <childnode refid="459199" relation="include">
        </childnode>
      </node>
      <node id="459178">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/TriggerTower_v2.cxx</label>
        <link refid="TriggerTower_v2.cxx"/>
        <childnode refid="459179" relation="include">
        </childnode>
        <childnode refid="459180" relation="include">
        </childnode>
      </node>
      <node id="459236">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="459201">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="459185" relation="include">
        </childnode>
        <childnode refid="459187" relation="include">
        </childnode>
        <childnode refid="459202" relation="include">
        </childnode>
        <childnode refid="459200" relation="include">
        </childnode>
      </node>
      <node id="459197">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="459199">
        <label>functional</label>
      </node>
      <node id="459195">
        <label>limits</label>
      </node>
      <node id="459202">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="459231">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="459192">
        <label>iterator</label>
      </node>
      <node id="459219">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="459196" relation="include">
        </childnode>
        <childnode refid="459220" relation="include">
        </childnode>
      </node>
      <node id="459253">
        <label>CxxUtils/final.h</label>
        <link refid="da/d9b/final_8h"/>
      </node>
      <node id="459243">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="459186" relation="include">
        </childnode>
        <childnode refid="459244" relation="include">
        </childnode>
        <childnode refid="459245" relation="include">
        </childnode>
        <childnode refid="459211" relation="include">
        </childnode>
        <childnode refid="459196" relation="include">
        </childnode>
      </node>
      <node id="459215">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="459216" relation="include">
        </childnode>
        <childnode refid="459193" relation="include">
        </childnode>
      </node>
      <node id="459204">
        <label>stdint.h</label>
      </node>
      <node id="459212">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="459187" relation="include">
        </childnode>
        <childnode refid="459211" relation="include">
        </childnode>
      </node>
      <node id="459207">
        <label>RVersion.h</label>
      </node>
      <node id="459188">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="459189" relation="include">
        </childnode>
        <childnode refid="459198" relation="include">
        </childnode>
        <childnode refid="459199" relation="include">
        </childnode>
      </node>
      <node id="459194">
        <label>cmath</label>
      </node>
      <node id="459247">
        <label>cassert</label>
      </node>
      <node id="459245">
        <label>stdexcept</label>
      </node>
      <node id="459234">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="459182">
        <label>TLorentzVector.h</label>
      </node>
      <node id="459196">
        <label>string</label>
      </node>
      <node id="459237">
        <label>AthContainers/AuxVectorData.h</label>
        <link refid="d9/df2/AuxVectorData_8h"/>
        <childnode refid="459186" relation="include">
        </childnode>
        <childnode refid="459185" relation="include">
        </childnode>
        <childnode refid="459219" relation="include">
        </childnode>
        <childnode refid="459215" relation="include">
        </childnode>
        <childnode refid="459203" relation="include">
        </childnode>
        <childnode refid="459238" relation="include">
        </childnode>
        <childnode refid="459239" relation="include">
        </childnode>
        <childnode refid="459222" relation="include">
        </childnode>
        <childnode refid="459216" relation="include">
        </childnode>
        <childnode refid="459191" relation="include">
        </childnode>
        <childnode refid="459193" relation="include">
        </childnode>
        <childnode refid="459240" relation="include">
        </childnode>
        <childnode refid="459241" relation="include">
        </childnode>
        <childnode refid="459229" relation="include">
        </childnode>
        <childnode refid="459242" relation="include">
        </childnode>
      </node>
      <node id="459210">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="459187" relation="include">
        </childnode>
        <childnode refid="459211" relation="include">
        </childnode>
      </node>
      <node id="459240">
        <label>AthContainers/tools/likely.h</label>
        <link refid="d6/dd6/likely_8h"/>
      </node>
      <node id="459208">
        <label>RootMetaSelection.h</label>
      </node>
      <node id="459226">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="459180">
        <label>xAODTrigL1Calo/versions/TriggerTower_v2.h</label>
        <link refid="d2/d30/TriggerTower__v2_8h_source"/>
        <childnode refid="459181" relation="include">
        </childnode>
        <childnode refid="459250" relation="include">
        </childnode>
        <childnode refid="459183" relation="include">
        </childnode>
        <childnode refid="459253" relation="include">
        </childnode>
        <childnode refid="459222" relation="include">
        </childnode>
        <childnode refid="459204" relation="include">
        </childnode>
      </node>
      <node id="459241">
        <label>AthContainers/tools/assume.h</label>
        <link refid="d2/d20/assume_8h"/>
      </node>
      <node id="459223">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="459184">
        <label>AthContainersInterfaces/IAuxElement.h</label>
        <link refid="dd/d7a/IAuxElement_8h"/>
      </node>
      <node id="459206">
        <label>AthLinks/tools/selection_ns.h</label>
        <link refid="d3/dec/selection__ns_8h"/>
        <childnode refid="459207" relation="include">
        </childnode>
        <childnode refid="459208" relation="include">
        </childnode>
      </node>
      <node id="459239">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="459232">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="459218">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="459219" relation="include">
        </childnode>
        <childnode refid="459195" relation="include">
        </childnode>
        <childnode refid="459204" relation="include">
        </childnode>
        <childnode refid="459221" relation="include">
        </childnode>
      </node>
      <node id="459186">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="459187" relation="include">
        </childnode>
        <childnode refid="459188" relation="include">
        </childnode>
      </node>
      <node id="459251">
        <label>AthLinks/ElementLinkBase.h</label>
        <link refid="d0/d16/ElementLinkBase_8h_source"/>
        <childnode refid="459204" relation="include">
        </childnode>
      </node>
      <node id="459189">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="459190" relation="include">
        </childnode>
        <childnode refid="459191" relation="include">
        </childnode>
        <childnode refid="459192" relation="include">
        </childnode>
        <childnode refid="459187" relation="include">
        </childnode>
        <childnode refid="459193" relation="include">
        </childnode>
        <childnode refid="459194" relation="include">
        </childnode>
        <childnode refid="459195" relation="include">
        </childnode>
        <childnode refid="459196" relation="include">
        </childnode>
        <childnode refid="459197" relation="include">
        </childnode>
      </node>
      <node id="459181">
        <label>xAODBase/IParticle.h</label>
        <link refid="d5/dac/IParticle_8h_source"/>
        <childnode refid="459182" relation="include">
        </childnode>
        <childnode refid="459183" relation="include">
        </childnode>
        <childnode refid="459248" relation="include">
        </childnode>
        <childnode refid="459202" relation="include">
        </childnode>
      </node>
      <node id="459248">
        <label>ObjectType.h</label>
        <link refid="d8/d04/ObjectType_8h_source"/>
        <childnode refid="459249" relation="include">
        </childnode>
      </node>
      <node id="459211">
        <label>typeinfo</label>
      </node>
      <node id="459246">
        <label>AthContainers/AuxElement.icc</label>
        <link refid="d2/d37/AuxElement_8icc"/>
        <childnode refid="459240" relation="include">
        </childnode>
        <childnode refid="459247" relation="include">
        </childnode>
      </node>
      <node id="459221">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="459252">
        <label>AthLinks/tools/TypeTools.h</label>
        <link refid="dd/db1/TypeTools_8h_source"/>
      </node>
      <node id="459238">
        <label>AthenaKernel/ILockable.h</label>
      </node>
      <node id="459205">
        <label>AthLinks/DataLinkBase.h</label>
        <link refid="db/da8/DataLinkBase_8h_source"/>
        <childnode refid="459204" relation="include">
        </childnode>
      </node>
      <node id="459220">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="459225">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="459200">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="459209">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="459186" relation="include">
        </childnode>
        <childnode refid="459210" relation="include">
        </childnode>
        <childnode refid="459212" relation="include">
        </childnode>
        <childnode refid="459213" relation="include">
        </childnode>
        <childnode refid="459227" relation="include">
        </childnode>
        <childnode refid="459229" relation="include">
        </childnode>
        <childnode refid="459187" relation="include">
        </childnode>
        <childnode refid="459211" relation="include">
        </childnode>
        <childnode refid="459216" relation="include">
        </childnode>
        <childnode refid="459235" relation="include">
        </childnode>
        <childnode refid="459236" relation="include">
        </childnode>
      </node>
      <node id="459216">
        <label>vector</label>
      </node>
      <node id="459191">
        <label>utility</label>
      </node>
      <node id="459222">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="459230">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="459214">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="459229">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="459230" relation="include">
        </childnode>
        <childnode refid="459231" relation="include">
        </childnode>
        <childnode refid="459232" relation="include">
        </childnode>
        <childnode refid="459233" relation="include">
        </childnode>
        <childnode refid="459234" relation="include">
        </childnode>
      </node>
      <node id="459249">
        <label>iosfwd</label>
      </node>
      <node id="459193">
        <label>cstdlib</label>
      </node>
      <node id="459244">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="459185">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="459186" relation="include">
        </childnode>
        <childnode refid="459187" relation="include">
        </childnode>
        <childnode refid="459200" relation="include">
        </childnode>
      </node>
      <node id="459187">
        <label>cstddef</label>
      </node>
      <node id="459242">
        <label>AthContainers/AuxVectorData.icc</label>
        <link refid="da/de7/AuxVectorData_8icc"/>
        <childnode refid="459209" relation="include">
        </childnode>
        <childnode refid="459201" relation="include">
        </childnode>
        <childnode refid="459185" relation="include">
        </childnode>
        <childnode refid="459240" relation="include">
        </childnode>
        <childnode refid="459241" relation="include">
        </childnode>
      </node>
      <node id="459179">
        <label>xAODCore/AuxStoreAccessorMacros.h</label>
        <link refid="d1/d0c/AuxStoreAccessorMacros_8h_source"/>
      </node>
      <node id="459213">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="459210" relation="include">
        </childnode>
        <childnode refid="459214" relation="include">
        </childnode>
        <childnode refid="459215" relation="include">
        </childnode>
        <childnode refid="459217" relation="include">
        </childnode>
        <childnode refid="459222" relation="include">
        </childnode>
        <childnode refid="459211" relation="include">
        </childnode>
        <childnode refid="459216" relation="include">
        </childnode>
        <childnode refid="459190" relation="include">
        </childnode>
        <childnode refid="459204" relation="include">
        </childnode>
        <childnode refid="459224" relation="include">
        </childnode>
        <childnode refid="459225" relation="include">
        </childnode>
        <childnode refid="459226" relation="include">
        </childnode>
      </node>
      <node id="459224">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="459228">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="459217">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="459214" relation="include">
        </childnode>
        <childnode refid="459218" relation="include">
        </childnode>
        <childnode refid="459222" relation="include">
        </childnode>
        <childnode refid="459216" relation="include">
        </childnode>
        <childnode refid="459223" relation="include">
        </childnode>
      </node>
      <node id="459190">
        <label>algorithm</label>
      </node>
      <node id="459183">
        <label>AthContainers/AuxElement.h</label>
        <link refid="d1/d6f/AuxElement_8h"/>
        <childnode refid="459184" relation="include">
        </childnode>
        <childnode refid="459185" relation="include">
        </childnode>
        <childnode refid="459201" relation="include">
        </childnode>
        <childnode refid="459203" relation="include">
        </childnode>
        <childnode refid="459209" relation="include">
        </childnode>
        <childnode refid="459237" relation="include">
        </childnode>
        <childnode refid="459215" relation="include">
        </childnode>
        <childnode refid="459243" relation="include">
        </childnode>
        <childnode refid="459240" relation="include">
        </childnode>
        <childnode refid="459187" relation="include">
        </childnode>
        <childnode refid="459246" relation="include">
        </childnode>
      </node>
      <node id="459203">
        <label>AthLinks/DataLink.h</label>
        <link refid="da/de8/DataLink_8h_source"/>
        <childnode refid="459204" relation="include">
        </childnode>
        <childnode refid="459196" relation="include">
        </childnode>
        <childnode refid="459205" relation="include">
        </childnode>
        <childnode refid="459206" relation="include">
        </childnode>
      </node>
      <node id="459250">
        <label>AthLinks/ElementLink.h</label>
        <link refid="dc/d24/ElementLink_8h_source"/>
        <childnode refid="459204" relation="include">
        </childnode>
        <childnode refid="459196" relation="include">
        </childnode>
        <childnode refid="459251" relation="include">
        </childnode>
        <childnode refid="459206" relation="include">
        </childnode>
        <childnode refid="459252" relation="include">
        </childnode>
      </node>
      <node id="459198">
        <label>memory</label>
      </node>
      <node id="459227">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="459212" relation="include">
        </childnode>
        <childnode refid="459213" relation="include">
        </childnode>
        <childnode refid="459228" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="dd/d44/namespacexAOD">xAOD</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>$Id:<sp/>TriggerTower_v2.cxx<sp/>700709<sp/>2015-10-15<sp/>10:45:46Z<sp/>morrisj<sp/>$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EDM<sp/>includes(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODCore/AuxStoreAccessorMacros.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Local<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODTrigL1Calo/versions/TriggerTower_v2.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">xAOD{<sp/><sp/></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><ref refid="d7/d45/classxAOD_1_1TriggerTower__v2_1a3494c6842a926ad116c877575d1c0c95" kindref="member" tooltip="Default constructor.">TriggerTower_v2::TriggerTower_v2</ref>()<sp/>:</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>IParticle(),<sp/></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>m_p4(),<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>m_p4Cached(<sp/>false<sp/>)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>TriggerTower_v2::TriggerTower_v2(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TriggerTower_v2&amp;<sp/>other)<sp/>:</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>IParticle(<sp/>other<sp/>),</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>m_p4(<sp/>other.m_p4<sp/>),</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>m_p4Cached(<sp/>other.m_p4Cached<sp/>)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>TriggerTower_v2&amp;<sp/>TriggerTower_v2::operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TriggerTower_v2&amp;<sp/>other)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;other<sp/>){</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!container()<sp/>&amp;&amp;<sp/>!hasStore()<sp/>){</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>makePrivateStore();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IParticle::operator=(<sp/>other<sp/>);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_p4<sp/>=<sp/>other.m_p4;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_p4Cached<sp/>=<sp/>other.m_p4Cached;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>AUXSTORE_OBJECT_SETTER_AND_GETTER(<sp/>TriggerTower_v2<sp/>,<sp/>std::vector&lt;uint8_t&gt;<sp/>,<sp/>lut_cp<sp/>,<sp/>setLut_cp<sp/>)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>AUXSTORE_OBJECT_SETTER_AND_GETTER(<sp/>TriggerTower_v2<sp/>,<sp/>std::vector&lt;uint8_t&gt;<sp/>,<sp/>lut_jep<sp/>,<sp/>setLut_jep<sp/>)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>AUXSTORE_OBJECT_SETTER_AND_GETTER(<sp/>TriggerTower_v2<sp/>,<sp/>std::vector&lt;int16_t&gt;<sp/>,<sp/>correction<sp/>,<sp/>setCorrection<sp/>)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>AUXSTORE_OBJECT_SETTER_AND_GETTER(<sp/>TriggerTower_v2<sp/>,<sp/>std::vector&lt;uint8_t&gt;<sp/>,<sp/>correctionEnabled<sp/>,<sp/>setCorrectionEnabled<sp/>)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>AUXSTORE_OBJECT_SETTER_AND_GETTER(<sp/>TriggerTower_v2<sp/>,<sp/>std::vector&lt;uint8_t&gt;<sp/>,<sp/>bcidVec<sp/>,<sp/>setBcidVec<sp/>)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>AUXSTORE_OBJECT_SETTER_AND_GETTER(<sp/>TriggerTower_v2<sp/>,<sp/>std::vector&lt;uint16_t&gt;<sp/>,<sp/>adc<sp/>,<sp/>setAdc<sp/>)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>AUXSTORE_OBJECT_SETTER_AND_GETTER(<sp/>TriggerTower_v2<sp/>,<sp/>std::vector&lt;uint8_t&gt;<sp/>,<sp/>bcidExt<sp/>,<sp/>setBcidExt<sp/>)<sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>AUXSTORE_OBJECT_SETTER_AND_GETTER(<sp/>TriggerTower_v2<sp/>,<sp/>std::vector&lt;uint8_t&gt;<sp/>,<sp/>sat80Vec<sp/>,<sp/>setSat80Vec<sp/>)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>AUXSTORE_PRIMITIVE_SETTER_AND_GETTER(<sp/>TriggerTower_v2,<sp/>uint32_t<sp/>,<sp/>coolId<sp/>,<sp/>setCoolId<sp/>)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>AUXSTORE_PRIMITIVE_SETTER_AND_GETTER(<sp/>TriggerTower_v2,<sp/>uint32_t<sp/>,<sp/>errorWord<sp/>,<sp/>setErrorWord<sp/>)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>AUXSTORE_PRIMITIVE_SETTER_AND_GETTER(<sp/>TriggerTower_v2,<sp/>uint8_t<sp/>,<sp/>peak<sp/>,<sp/>setPeak<sp/>)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>AUXSTORE_PRIMITIVE_SETTER_AND_GETTER(<sp/>TriggerTower_v2,<sp/>uint8_t<sp/>,<sp/>adcPeak<sp/>,<sp/>setAdcPeak<sp/>)<sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TriggerTower_v2::initialize(const<sp/>uint32_t<sp/>CoolId,const<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Eta,const<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Phi)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>setCoolId(<sp/>CoolId<sp/>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>setEta(<sp/>Eta<sp/>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>setPhi(<sp/>Phi<sp/>);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TriggerTower_v2::initialize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>CoolId,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Eta,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Phi,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>Lut_cp,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>Lut_jep,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int16_t&gt;&amp;<sp/>Correction,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>CorrectionEnabled,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>BcidVec,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint16_t&gt;&amp;<sp/>Adc,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>BcidExt,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>Sat80Vec,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>ErrorWord,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>Peak,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>AdcPeak)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>setCoolId(<sp/>CoolId<sp/>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>setEta(<sp/>Eta<sp/>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>setPhi(<sp/>Phi<sp/>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>setLut_cp(<sp/>Lut_cp<sp/>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>setLut_jep(<sp/>Lut_jep<sp/>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>setCorrection(<sp/>Correction<sp/>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>setCorrectionEnabled(<sp/>CorrectionEnabled<sp/>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>setBcidVec(<sp/>BcidVec<sp/>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>setAdc(<sp/>Adc<sp/>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>setBcidExt(<sp/>BcidExt<sp/>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>setSat80Vec(<sp/>Sat80Vec<sp/>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>setErrorWord(<sp/>ErrorWord<sp/>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>setPeak(<sp/>Peak<sp/>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>setAdcPeak(<sp/>AdcPeak<sp/>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TriggerTower_v2::layer()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="87"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnum<sp/>=<sp/>(<sp/>coolId()<sp/>&gt;&gt;<sp/>24<sp/>)<sp/>&amp;<sp/>0x7;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mnum<sp/>=<sp/>(<sp/>coolId()<sp/>&gt;&gt;<sp/>16<sp/>)<sp/>&amp;<sp/>0xf;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unsigned<sp/>int<sp/>chan<sp/>=<sp/>coolId()<sp/>&amp;<sp/>0x3;<sp/>//<sp/>To<sp/>be<sp/>used<sp/>for<sp/>FCAL2,FCAL3<sp/>soon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cnum<sp/>&lt;<sp/>4)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>EMB,EMEC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cnum<sp/>&lt;<sp/>6)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>HEC,FCAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mnum<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/></highlight><highlight class="comment">//<sp/>FCAL1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mnum<sp/>==<sp/>8)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>FCAL2,FCAL3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Detail<sp/>to<sp/>be<sp/>determined<sp/>(using<sp/>chan):<sp/>for<sp/>now<sp/>use<sp/>layer<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>HEC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Tile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>really<sp/>shouldn&apos;t<sp/>get<sp/>this<sp/>far</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TriggerTower_v2::sampling()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="115"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnum<sp/>=<sp/>(<sp/>coolId()<sp/>&gt;&gt;<sp/>24<sp/>)<sp/>&amp;<sp/>0x7;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mnum<sp/>=<sp/>(<sp/>coolId()<sp/>&gt;&gt;<sp/>16<sp/>)<sp/>&amp;<sp/>0xf;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unsigned<sp/>int<sp/>chan<sp/>=<sp/>coolId()<sp/>&amp;<sp/>0x3;<sp/>//<sp/>To<sp/>be<sp/>used<sp/>for<sp/>FCAL2,FCAL3<sp/>soon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cnum<sp/>&lt;<sp/>4)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>EMB,EMEC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cnum<sp/>&lt;<sp/>6)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>HEC,FCAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mnum<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/></highlight><highlight class="comment">//<sp/>FCAL1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mnum<sp/>==<sp/>8)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>FCAL2,FCAL3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Detail<sp/>to<sp/>be<sp/>determined<sp/>(using<sp/>chan):<sp/>for<sp/>now<sp/>use<sp/>layer<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>HEC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Tile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>really<sp/>shouldn&apos;t<sp/>get<sp/>this<sp/>far</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>uint8_t<sp/>TriggerTower_v2::cpET()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="144"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>peak()<sp/>&lt;<sp/>lut_cp().size()?<sp/>lut_cp()[<sp/>peak()<sp/>]:<sp/>0;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>uint8_t<sp/>TriggerTower_v2::jepET()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="150"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>peak()<sp/>&lt;<sp/>lut_jep().size()?<sp/>lut_jep()[<sp/>peak()<sp/>]:<sp/>0;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>true<sp/>if<sp/>the<sp/>TriggerTower<sp/>is<sp/>saturated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>i.e.<sp/>it<sp/>has<sp/>an<sp/>energy<sp/>greater<sp/>than<sp/>the<sp/>saturation<sp/>threshold</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>otherwise,<sp/>return<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>TriggerTower_v2::isCpSaturated()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="160"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>cpET()<sp/>&gt;=<sp/>m_saturation<sp/>){</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>TriggerTower_v2::isJepSaturated()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="168"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>jepET()<sp/>&gt;=<sp/>m_saturation<sp/>){</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>IParticle<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>TriggerTower_v2::eta()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="180"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>float<sp/>&gt;<sp/>acc(<sp/></highlight><highlight class="stringliteral">&quot;eta&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>acc(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TriggerTower_v2::setEta(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>eta)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>float<sp/>&gt;<sp/>acc(<sp/></highlight><highlight class="stringliteral">&quot;eta&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>acc(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>=<sp/>eta;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>TriggerTower_v2::phi()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="192"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>float<sp/>&gt;<sp/>acc(<sp/></highlight><highlight class="stringliteral">&quot;phi&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>acc(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TriggerTower_v2::setPhi(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>phi)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Accessor&lt;<sp/>float<sp/>&gt;<sp/>acc(<sp/></highlight><highlight class="stringliteral">&quot;phi&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>acc(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>=<sp/>phi;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>TriggerTower_v2::pt()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="204"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>jepET()<sp/>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>TriggerTower_v2::m()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="209"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>TriggerTower_v2::e()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="214"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p4().E();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>TriggerTower_v2::rapidity()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="219"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p4().Rapidity();</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TriggerTower_v2::FourMom_t&amp;<sp/>TriggerTower_v2::p4()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="224"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>m_p4Cached<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>PT<sp/>=<sp/>(jepET()<sp/>&gt;<sp/>0)<sp/>?<sp/>1000.<sp/>*<sp/>static_cast&lt;<sp/>double<sp/>&gt;(<sp/>jepET()<sp/>)<sp/>:<sp/>0.01;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_p4.SetPtEtaPhiM(<sp/>PT<sp/>,<sp/>eta()<sp/>,<sp/>phi()<sp/>,<sp/>m()<sp/>);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_p4Cached<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_p4;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>Type::ObjectType<sp/>TriggerTower_v2::type()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="236"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Type::Jet;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="240"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>xAOD</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/TriggerTower_v2.cxx"/>
  </compounddef>
</doxygen>
