<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="dc/dbd/Regions_8cxx" kind="file">
    <compoundname>Regions.cxx</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">fstream</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">cmath</includes>
    <includes refid="dc/dc1/Regions_8h" local="yes">MuonMomentumCorrections/Regions.h</includes>
    <incdepgraph>
      <node id="216104">
        <label>MuonMomentumCorrections/Regions.h</label>
        <link refid="dc/dc1/Regions_8h_source"/>
        <childnode refid="216105" relation="include">
        </childnode>
        <childnode refid="216106" relation="include">
        </childnode>
        <childnode refid="216107" relation="include">
        </childnode>
      </node>
      <node id="216103">
        <label>cmath</label>
      </node>
      <node id="216107">
        <label>string</label>
      </node>
      <node id="216106">
        <label>map</label>
      </node>
      <node id="216101">
        <label>fstream</label>
      </node>
      <node id="216105">
        <label>vector</label>
      </node>
      <node id="216102">
        <label>cstdlib</label>
      </node>
      <node id="216100">
        <label>iostream</label>
      </node>
      <node id="216099">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MuonMomentumCorrections/Root/Regions.cxx</label>
        <link refid="Regions.cxx"/>
        <childnode refid="216100" relation="include">
        </childnode>
        <childnode refid="216101" relation="include">
        </childnode>
        <childnode refid="216102" relation="include">
        </childnode>
        <childnode refid="216103" relation="include">
        </childnode>
        <childnode refid="216104" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;MuonMomentumCorrections/Regions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Regions::PrintRegions()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_doMacroRegions){</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(map&lt;int,<sp/>int&gt;::const_iterator<sp/>it<sp/>=<sp/>m_macroRegionIdxMap.begin();</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it!=m_macroRegionIdxMap.end();<sp/>++it){</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bReg<sp/>=<sp/>it-&gt;first,<sp/>mReg<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Base<sp/>region<sp/>n<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;bReg&lt;&lt;</highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;endl</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;phi_min=&quot;</highlight><highlight class="normal">&lt;&lt;m_phi_min[bReg]&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>phi_max=&quot;</highlight><highlight class="normal">&lt;&lt;m_phi_max[bReg]</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>eta_min=&quot;</highlight><highlight class="normal">&lt;&lt;m_eta_min[bReg]&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>eta_max=&quot;</highlight><highlight class="normal">&lt;&lt;m_eta_max[bReg];</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_loadNames)<sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>name=&quot;</highlight><highlight class="normal">&lt;&lt;m_names[bReg];</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;endl&lt;&lt;</highlight><highlight class="stringliteral">&quot;included<sp/>in<sp/>Macro<sp/>region<sp/>N<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;mReg&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>with<sp/>innerEta=&quot;</highlight><highlight class="normal">&lt;&lt;m_macroRegionInnerEta[mReg];</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_loadNames)<sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>name=&quot;</highlight><highlight class="normal">&lt;&lt;m_macroRegionName[mReg];</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;endl;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bReg=0;<sp/>bReg&lt;m_nb_regions;<sp/>++bReg){</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Base<sp/>region<sp/>n<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;bReg&lt;&lt;</highlight><highlight class="stringliteral">&quot;:<sp/>phi_min=&quot;</highlight><highlight class="normal">&lt;&lt;m_phi_min[bReg]&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>phi_max=&quot;</highlight><highlight class="normal">&lt;&lt;m_phi_max[bReg]</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>eta_min=&quot;</highlight><highlight class="normal">&lt;&lt;m_eta_min[bReg]&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>eta_max=&quot;</highlight><highlight class="normal">&lt;&lt;m_eta_max[bReg];</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_loadNames)<sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>name=&quot;</highlight><highlight class="normal">&lt;&lt;m_names[bReg];</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;endl;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Regions::GetNRegions()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_doMacroRegions)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_macroRegionName.size();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_nb_regions;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">Regions::Regions(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>inRegionFile,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>doMacroRegionsFlag){</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>m_eta_min.clear();<sp/>m_eta_max.clear();<sp/>m_phi_min.clear();<sp/>m_phi_max.clear();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>m_loadNames<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>m_doMacroRegions<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>m_useAbsEta<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>verb<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>tmpname;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tmpval;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>ifstream<sp/>inFile(inRegionFile.c_str());</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!inFile.good()){</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr&lt;&lt;__FILE__&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>line:&quot;</highlight><highlight class="normal">&lt;&lt;__LINE__&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;</highlight><highlight class="stringliteral">&quot;ERROR::<sp/>File<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;inRegionFile&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>NOT<sp/>FOUND!!&quot;</highlight><highlight class="normal">&lt;&lt;endl;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(-1);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!inFile.eof()){</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpval=0;<sp/>tmpname=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i==0){</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getline(inFile,tmpname);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>if<sp/>I<sp/>am<sp/>loading<sp/>the<sp/>name<sp/>of<sp/>the<sp/>regions<sp/>in<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmpname.find(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos<sp/>&amp;&amp;<sp/>!m_loadNames)<sp/>m_loadNames=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(verb)<sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;tmpname:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;tmpname&lt;&lt;endl;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inFile&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(inFile.eof())<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight><highlight class="comment">//this<sp/>will<sp/>break<sp/>immediatly<sp/>as<sp/>soon<sp/>as<sp/>the<sp/>new<sp/>line<sp/>is<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_eta_min.push_back(tmpval);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(verb)<sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;i=&quot;</highlight><highlight class="normal">&lt;&lt;i&lt;&lt;</highlight><highlight class="stringliteral">&quot;;<sp/>eta<sp/>min:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;tmpval&lt;&lt;endl;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inFile&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_eta_max.push_back(tmpval);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(verb)<sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;i=&quot;</highlight><highlight class="normal">&lt;&lt;i&lt;&lt;</highlight><highlight class="stringliteral">&quot;;<sp/>eta<sp/>max:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;tmpval&lt;&lt;endl;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inFile&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_phi_min.push_back(tmpval);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(verb)<sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;i=&quot;</highlight><highlight class="normal">&lt;&lt;i&lt;&lt;</highlight><highlight class="stringliteral">&quot;;<sp/>phi<sp/>min:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;tmpval&lt;&lt;endl;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inFile&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_phi_max.push_back(tmpval);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(verb)<sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;i=&quot;</highlight><highlight class="normal">&lt;&lt;i&lt;&lt;</highlight><highlight class="stringliteral">&quot;;<sp/>phi<sp/>max:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;tmpval&lt;&lt;endl;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_loadNames){</highlight><highlight class="comment">//Fill<sp/>the<sp/>name<sp/>vector<sp/>only<sp/>if<sp/>you<sp/>have<sp/>them!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inFile&gt;&gt;tmpname;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_names.push_back(tmpname);<sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(verb)<sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;tmpname:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;tmpname&lt;&lt;endl;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>inFile.close();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nb_regions<sp/>=<sp/>(int)m_eta_min.size();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/>m_nb_regions<sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(doMacroRegionsFlag){</highlight><highlight class="comment">//In<sp/>case<sp/>I<sp/>want<sp/>macroRegions,<sp/>I<sp/>need<sp/>to<sp/>define<sp/>the<sp/>criteria<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>m_doMacroRegions<sp/>=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(doMacroRegionsFlag){</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(verb)<sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;collectMacroRegionsSL()&quot;</highlight><highlight class="normal">&lt;&lt;endl;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Collects<sp/>all<sp/>the<sp/>Large<sp/>and<sp/>Small<sp/>sectors<sp/>if<sp/>they<sp/>belong<sp/>to<sp/>the<sp/>same<sp/>eta<sp/>bin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>collectMacroRegionsSL();<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(verb)<sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;collectMacroRegionsSL_SplitBAR()&quot;</highlight><highlight class="normal">&lt;&lt;endl;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Large,Small<sp/>sectors<sp/>split<sp/>plus<sp/>Feet(12+14)<sp/>and<sp/>11+15<sp/>sector<sp/>split<sp/>in<sp/>Barrel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>collectMacroRegionsSL_SplitBAR();<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(verb)<sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;collectMacroRegionsSL_UpDn()&quot;</highlight><highlight class="normal">&lt;&lt;endl;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Collects<sp/>all<sp/>the<sp/>Large<sp/>and<sp/>Small,<sp/>Up<sp/>and<sp/>Down<sp/>sectors<sp/>if<sp/>they<sp/>belong<sp/>to<sp/>the<sp/>same<sp/>eta<sp/>bin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>collectMacroRegionsSL_UpDn();<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(verb)<sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;using<sp/>fabs(eta)&quot;</highlight><highlight class="normal">&lt;&lt;endl;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_useAbsEta<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_doMacroRegions<sp/>=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//not<sp/>really<sp/>using<sp/>macroRegions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:<sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(verb)<sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;using<sp/>sectors!&quot;</highlight><highlight class="normal">&lt;&lt;endl;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>useSectors();<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>doMacroRegionFlag=&quot;</highlight><highlight class="normal">&lt;&lt;doMacroRegionsFlag&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>not<sp/>defined!&quot;</highlight><highlight class="normal">&lt;&lt;endl&lt;&lt;endl;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(-1);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Regions::GetRegion(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phi)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret_k<sp/>=-1;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_useAbsEta)<sp/>eta<sp/>=<sp/>fabs(eta);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=0;<sp/>k<sp/>&lt;<sp/>m_nb_regions;<sp/>++k){<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>eta<sp/>&gt;=<sp/>m_eta_min[k]<sp/>&amp;&amp;<sp/>eta<sp/>&lt;<sp/>m_eta_max[k]<sp/>){</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_phi_min[k]<sp/>&lt;=<sp/>m_phi_max[k]<sp/>){</highlight><highlight class="comment">//Standard<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(phi&gt;=m_phi_min[k]<sp/>&amp;&amp;<sp/>phi&lt;m_phi_max[k]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_k<sp/>=<sp/>k;<sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight><highlight class="comment">//Circular<sp/>closure<sp/>of<sp/>Phi,<sp/>min<sp/>and<sp/>max<sp/>are<sp/>excanged<sp/>in<sp/>the<sp/>.dat<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(phi&gt;=m_phi_min[k]<sp/>||<sp/>phi&lt;m_phi_max[k]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_k<sp/>=<sp/>k;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret_k<sp/>==<sp/>-1){</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr&lt;&lt;__FILE__&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;__LINE__&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>WARNING:<sp/>Region<sp/>corresponding<sp/>to<sp/>Eta=&quot;</highlight><highlight class="normal">&lt;&lt;eta&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>Phi=&quot;</highlight><highlight class="normal">&lt;&lt;phi&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>NOT<sp/>FOUND!&quot;</highlight><highlight class="normal">&lt;&lt;endl;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_doMacroRegions)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_macroRegionIdxMap.find(ret_k)-&gt;second;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret_k;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Regions::GetRegionDeltaEta(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r_i)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{<sp/></highlight><highlight class="comment">//Return<sp/>Eta<sp/>range<sp/>of<sp/>the<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_doMacroRegions)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(r_i&gt;=0<sp/>&amp;&amp;<sp/>r_i<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)m_macroRegionName.size())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_macroRegionDeltaEta[r_i];</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(r_i<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>r_i<sp/>&lt;<sp/>m_nb_regions)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fabs(m_eta_max[r_i]<sp/>-<sp/>m_eta_min[r_i]);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr&lt;&lt;__FILE__&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;__LINE__&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>WARNING:<sp/>Region<sp/>Inner<sp/>Eta<sp/>corresponding<sp/>to<sp/>Region<sp/>index=&quot;</highlight><highlight class="normal">&lt;&lt;r_i&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>NOT<sp/>FOUND!&quot;</highlight><highlight class="normal">&lt;&lt;endl;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-999.;</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Regions::GetRegionInnerEta(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r_i)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight><highlight class="comment">//Return<sp/>Eta<sp/>closer<sp/>to<sp/>the<sp/>origin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_doMacroRegions)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(r_i&gt;=0<sp/>&amp;&amp;<sp/>r_i<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)m_macroRegionName.size())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_macroRegionInnerEta[r_i];</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(r_i<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>r_i<sp/>&lt;<sp/>m_nb_regions)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_eta_min[r_i]<sp/>&gt;=<sp/>0.<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_eta_min[r_i];</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_eta_max[r_i];</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr&lt;&lt;__FILE__&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;__LINE__&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>WARNING:<sp/>Region<sp/>Inner<sp/>Eta<sp/>corresponding<sp/>to<sp/>Region<sp/>index=&quot;</highlight><highlight class="normal">&lt;&lt;r_i&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>NOT<sp/>FOUND!&quot;</highlight><highlight class="normal">&lt;&lt;endl;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-999.;</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>Regions::GetRegionName(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r_i)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_loadNames){</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_doMacroRegions)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(r_i&gt;=0<sp/>&amp;&amp;<sp/>r_i<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)m_macroRegionName.size())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_macroRegionName[r_i];</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(r_i&gt;=0<sp/>&amp;&amp;<sp/>r_i<sp/>&lt;<sp/>m_nb_regions)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_names[r_i];</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr&lt;&lt;__FILE__&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;__LINE__&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>WARNING:<sp/>Region<sp/>Name<sp/>corresponding<sp/>to<sp/>Region<sp/>index=&quot;</highlight><highlight class="normal">&lt;&lt;r_i&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>NOT<sp/>FOUND!&quot;</highlight><highlight class="normal">&lt;&lt;endl;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr&lt;&lt;__FILE__&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;__LINE__&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>WARNING:<sp/>Region<sp/>Names<sp/>are<sp/>not<sp/>set!&quot;</highlight><highlight class="normal">&lt;&lt;endl;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;NAN&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>Regions::GetRegionName(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phi)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{<sp/><sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_loadNames)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetRegionName(GetRegion(eta,<sp/>phi));</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr&lt;&lt;__FILE__&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;__LINE__&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>WARNING:<sp/>Region<sp/>Names<sp/>are<sp/>not<sp/>set!&quot;</highlight><highlight class="normal">&lt;&lt;endl;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;NAN&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">//Collects<sp/>all<sp/>the<sp/>Large<sp/>and<sp/>Small<sp/>sectors<sp/>if<sp/>they<sp/>belong<sp/>to<sp/>the<sp/>same<sp/>eta<sp/>bin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Regions::collectMacroRegionsSL(){</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>etaMin<sp/>=<sp/>-999.,<sp/>etaMax<sp/>=<sp/>-999.,<sp/><ref refid="dc/d25/namespaceP4Helpers_1a6152dbed5af29038dfa03aeb5d03eb97" kindref="member" tooltip="Computes efficiently {}.">deltaEta</ref><sp/>=<sp/>-999.;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>macroRegionIdx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=0;<sp/>k<sp/>&lt;<sp/>m_nb_regions;<sp/>++k){</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>etaMin<sp/>!=<sp/>m_eta_min[k]<sp/>||<sp/>etaMax<sp/>!=m_eta_max[k]<sp/>){</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Build<sp/>a<sp/>new<sp/>macroRegion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>etaMin<sp/>=<sp/>m_eta_min[k];<sp/><sp/>etaMax<sp/>=<sp/>m_eta_max[k];</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d25/namespaceP4Helpers_1a6152dbed5af29038dfa03aeb5d03eb97" kindref="member" tooltip="Computes efficiently {}.">deltaEta</ref><sp/>=<sp/>fabs(m_eta_max[k]<sp/>-<sp/>m_eta_min[k]);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//One<sp/>of<sp/>the<sp/>following<sp/>is<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>macroRegName<sp/>=<sp/>m_names[k].substr(0,<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;EL&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>macroRegName<sp/>=<sp/>macroRegName.substr(0,<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;BL&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>macroRegName<sp/>=<sp/>macroRegName.substr(0,<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;ES&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>macroRegName<sp/>=<sp/>macroRegName.substr(0,<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;BS&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionName.push_back(macroRegName+</highlight><highlight class="stringliteral">&quot;Large&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionName.push_back(macroRegName+</highlight><highlight class="stringliteral">&quot;Small&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//insert<sp/>twice<sp/>the<sp/>innerEta,<sp/>for<sp/>Large<sp/>and<sp/>for<sp/>Small<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;2;<sp/>++i){<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>etaMin<sp/>&gt;=<sp/>0.<sp/>)<sp/>m_macroRegionInnerEta.push_back(etaMin);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionInnerEta.push_back(etaMax);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionDeltaEta.push_back(deltaEta);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>macroRegionIdx+=2;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(verb)<sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;k=&quot;</highlight><highlight class="normal">&lt;&lt;k&lt;&lt;</highlight><highlight class="stringliteral">&quot;:<sp/>etaMin=&quot;</highlight><highlight class="normal">&lt;&lt;etaMin&lt;&lt;</highlight><highlight class="stringliteral">&quot;;<sp/>etaMax=&quot;</highlight><highlight class="normal">&lt;&lt;etaMax</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;;<sp/>m_macroRegionName.size()=&quot;</highlight><highlight class="normal">&lt;&lt;m_macroRegionName.size()</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;;<sp/>macroRegionIdx&quot;</highlight><highlight class="normal">&lt;&lt;macroRegionIdx&lt;&lt;</highlight><highlight class="stringliteral">&quot;;<sp/>m_macroRegionInnerEta[&quot;</highlight><highlight class="normal">&lt;&lt;macroRegionIdx&lt;&lt;</highlight><highlight class="stringliteral">&quot;]=&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;m_macroRegionInnerEta[macroRegionIdx]&lt;&lt;endl;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;EL&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos<sp/>||<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;BL&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionIdxMap[k]<sp/>=<sp/>macroRegionIdx-2;</highlight><highlight class="comment">//Large<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;ES&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos<sp/>||<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;BS&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionIdxMap[k]<sp/>=<sp/>macroRegionIdx-1;</highlight><highlight class="comment">//Small<sp/>sectors<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment">//Collects<sp/>all<sp/>the<sp/>Large<sp/>and<sp/>Small<sp/>sectors<sp/>if<sp/>they<sp/>belong<sp/>to<sp/>the<sp/>same<sp/>eta<sp/>bin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Regions::collectMacroRegionsSL_UpDn(){</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>etaMin<sp/>=<sp/>-999.,<sp/>etaMax<sp/>=<sp/>-999.,<sp/><ref refid="dc/d25/namespaceP4Helpers_1a6152dbed5af29038dfa03aeb5d03eb97" kindref="member" tooltip="Computes efficiently {}.">deltaEta</ref><sp/>=<sp/>-999.;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>macroRegionIdx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=0;<sp/>k<sp/>&lt;<sp/>m_nb_regions;<sp/>++k){</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>etaMin<sp/>!=<sp/>m_eta_min[k]<sp/>||<sp/>etaMax<sp/>!=m_eta_max[k]<sp/>){</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Build<sp/>a<sp/>new<sp/>macroRegion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>etaMin<sp/>=<sp/>m_eta_min[k];<sp/><sp/>etaMax<sp/>=<sp/>m_eta_max[k];</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d25/namespaceP4Helpers_1a6152dbed5af29038dfa03aeb5d03eb97" kindref="member" tooltip="Computes efficiently {}.">deltaEta</ref><sp/>=<sp/>fabs(m_eta_max[k]<sp/>-<sp/>m_eta_min[k]);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//One<sp/>of<sp/>the<sp/>following<sp/>is<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>macroRegName<sp/>=<sp/>m_names[k].substr(0,<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;EL&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>macroRegName<sp/>=<sp/>macroRegName.substr(0,<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;BL&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>macroRegName<sp/>=<sp/>macroRegName.substr(0,<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;ES&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>macroRegName<sp/>=<sp/>macroRegName.substr(0,<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;BS&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionName.push_back(macroRegName+</highlight><highlight class="stringliteral">&quot;LargeDn&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionName.push_back(macroRegName+</highlight><highlight class="stringliteral">&quot;SmallDn&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionName.push_back(macroRegName+</highlight><highlight class="stringliteral">&quot;LargeUp&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionName.push_back(macroRegName+</highlight><highlight class="stringliteral">&quot;SmallUp&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//insert<sp/>4<sp/>time<sp/>the<sp/>innerEta,<sp/>for<sp/>Large<sp/>and<sp/>Small<sp/>sectors<sp/>times<sp/>Up<sp/>and<sp/>Dn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;4;<sp/>++i){<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>etaMin<sp/>&gt;=<sp/>0.<sp/>)<sp/>m_macroRegionInnerEta.push_back(etaMin);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionInnerEta.push_back(etaMax);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionDeltaEta.push_back(deltaEta);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>macroRegionIdx+=4;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(verb)<sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;k=&quot;</highlight><highlight class="normal">&lt;&lt;k&lt;&lt;</highlight><highlight class="stringliteral">&quot;:<sp/>etaMin=&quot;</highlight><highlight class="normal">&lt;&lt;etaMin&lt;&lt;</highlight><highlight class="stringliteral">&quot;;<sp/>etaMax=&quot;</highlight><highlight class="normal">&lt;&lt;etaMax</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;;<sp/>m_macroRegionName.size()=&quot;</highlight><highlight class="normal">&lt;&lt;m_macroRegionName.size()</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;;<sp/>macroRegionIdx&quot;</highlight><highlight class="normal">&lt;&lt;macroRegionIdx&lt;&lt;</highlight><highlight class="stringliteral">&quot;;<sp/>m_macroRegionInnerEta[&quot;</highlight><highlight class="normal">&lt;&lt;macroRegionIdx&lt;&lt;</highlight><highlight class="stringliteral">&quot;]=&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;m_macroRegionInnerEta[macroRegionIdx]&lt;&lt;endl;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;EL&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos<sp/>||<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;BL&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos){</highlight><highlight class="comment">//Large<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_names[k].find(</highlight><highlight class="stringliteral">&quot;11&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos<sp/>||<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;13&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos<sp/>||<sp/></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;15&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionIdxMap[k]<sp/>=<sp/>macroRegionIdx-4;</highlight><highlight class="comment">//Down<sp/>Large<sp/>sectors<sp/>(within<sp/>10<sp/>to<sp/>16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionIdxMap[k]<sp/>=<sp/>macroRegionIdx-2;<sp/></highlight><highlight class="comment">//Up,<sp/>large<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;ES&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos<sp/>||<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;BS&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos){</highlight><highlight class="comment">//Small<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_names[k].find(</highlight><highlight class="stringliteral">&quot;10&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos<sp/>||<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;12&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos<sp/>||<sp/></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;14&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos<sp/>||<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;16&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionIdxMap[k]<sp/>=<sp/>macroRegionIdx-3;<sp/></highlight><highlight class="comment">//Down<sp/>Small<sp/>sectors<sp/>(from<sp/>10<sp/>to<sp/>16).<sp/>Should<sp/>I<sp/>remove<sp/>10<sp/>and<sp/>16?<sp/>++++++</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionIdxMap[k]<sp/>=<sp/>macroRegionIdx-1;<sp/>;<sp/></highlight><highlight class="comment">//Up,<sp/>Small<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Regions::useSectors(){</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>etaMin<sp/>=<sp/>-999.,<sp/>etaMax<sp/>=<sp/>-999.,<sp/><ref refid="dc/d25/namespaceP4Helpers_1a6152dbed5af29038dfa03aeb5d03eb97" kindref="member" tooltip="Computes efficiently {}.">deltaEta</ref><sp/>=<sp/>-999.;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>macroRegionIdx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=0;<sp/>k<sp/>&lt;<sp/>m_nb_regions;<sp/>++k){</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>etaMin<sp/>!=<sp/>m_eta_min[k]<sp/>||<sp/>etaMax<sp/>!=m_eta_max[k]<sp/>){</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Build<sp/>a<sp/>new<sp/>macroRegion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>etaMin<sp/>=<sp/>m_eta_min[k];<sp/><sp/>etaMax<sp/>=<sp/>m_eta_max[k];</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d25/namespaceP4Helpers_1a6152dbed5af29038dfa03aeb5d03eb97" kindref="member" tooltip="Computes efficiently {}.">deltaEta</ref><sp/>=<sp/>fabs(m_eta_max[k]<sp/>-<sp/>m_eta_min[k]);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//One<sp/>of<sp/>the<sp/>following<sp/>is<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>macroRegName<sp/>=<sp/>m_names[k].substr(0,<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;EL&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>macroRegName<sp/>=<sp/>macroRegName.substr(0,<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;BL&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>macroRegName<sp/>=<sp/>macroRegName.substr(0,<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;ES&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>macroRegName<sp/>=<sp/>macroRegName.substr(0,<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;BS&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionName.push_back(macroRegName+</highlight><highlight class="stringliteral">&quot;LargeDn&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionName.push_back(macroRegName+</highlight><highlight class="stringliteral">&quot;SmallDn&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionName.push_back(macroRegName+</highlight><highlight class="stringliteral">&quot;LargeUp&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionName.push_back(macroRegName+</highlight><highlight class="stringliteral">&quot;SmallUp&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//insert<sp/>4<sp/>time<sp/>the<sp/>innerEta,<sp/>for<sp/>Large<sp/>and<sp/>Small<sp/>sectors<sp/>times<sp/>Up<sp/>and<sp/>Dn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;4;<sp/>++i){<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>etaMin<sp/>&gt;=<sp/>0.<sp/>)<sp/>m_macroRegionInnerEta.push_back(etaMin);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionInnerEta.push_back(etaMax);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionDeltaEta.push_back(deltaEta);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>macroRegionIdx+=4;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(verb)<sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;k=&quot;</highlight><highlight class="normal">&lt;&lt;k&lt;&lt;</highlight><highlight class="stringliteral">&quot;:<sp/>etaMin=&quot;</highlight><highlight class="normal">&lt;&lt;etaMin&lt;&lt;</highlight><highlight class="stringliteral">&quot;;<sp/>etaMax=&quot;</highlight><highlight class="normal">&lt;&lt;etaMax</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;;<sp/>m_macroRegionName.size()=&quot;</highlight><highlight class="normal">&lt;&lt;m_macroRegionName.size()</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;;<sp/>macroRegionIdx&quot;</highlight><highlight class="normal">&lt;&lt;macroRegionIdx&lt;&lt;</highlight><highlight class="stringliteral">&quot;;<sp/>m_macroRegionInnerEta[&quot;</highlight><highlight class="normal">&lt;&lt;macroRegionIdx&lt;&lt;</highlight><highlight class="stringliteral">&quot;]=&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;m_macroRegionInnerEta[macroRegionIdx]&lt;&lt;endl;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;EL&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos<sp/>||<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;BL&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos){</highlight><highlight class="comment">//Large<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_names[k].find(</highlight><highlight class="stringliteral">&quot;11&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos<sp/>||<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;13&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos<sp/>||<sp/></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;15&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionIdxMap[k]<sp/>=<sp/>macroRegionIdx-4;</highlight><highlight class="comment">//Down<sp/>Large<sp/>sectors<sp/>(within<sp/>10<sp/>to<sp/>16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionIdxMap[k]<sp/>=<sp/>macroRegionIdx-2;<sp/></highlight><highlight class="comment">//Up,<sp/>large<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;ES&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos<sp/>||<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;BS&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos){</highlight><highlight class="comment">//Small<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_names[k].find(</highlight><highlight class="stringliteral">&quot;10&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos<sp/>||<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;12&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos<sp/>||<sp/></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;14&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos<sp/>||<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;16&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionIdxMap[k]<sp/>=<sp/>macroRegionIdx-3;<sp/></highlight><highlight class="comment">//Down<sp/>Small<sp/>sectors<sp/>(from<sp/>10<sp/>to<sp/>16).<sp/>Should<sp/>I<sp/>remove<sp/>10<sp/>and<sp/>16?<sp/>++++++</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionIdxMap[k]<sp/>=<sp/>macroRegionIdx-1;<sp/>;<sp/></highlight><highlight class="comment">//Up,<sp/>Small<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="comment">//Collects<sp/>all<sp/>the<sp/>Large<sp/>and<sp/>Small<sp/>sectors<sp/>if<sp/>they<sp/>belong<sp/>to<sp/>the<sp/>same<sp/>eta<sp/>bin<sp/>and<sp/>splits<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>barrel<sp/>12,14<sp/>smalls<sp/>and<sp/>11+15<sp/>larges<sp/>that<sp/>may<sp/>need<sp/>different<sp/>calibrations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Regions::collectMacroRegionsSL_SplitBAR(){</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>etaMin<sp/>=<sp/>-999.,<sp/>etaMax<sp/>=<sp/>-999.,<sp/><ref refid="dc/d25/namespaceP4Helpers_1a6152dbed5af29038dfa03aeb5d03eb97" kindref="member" tooltip="Computes efficiently {}.">deltaEta</ref><sp/>=<sp/>-999.;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>macroRegionIdx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=0;<sp/>k<sp/>&lt;<sp/>m_nb_regions;<sp/>++k){</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>etaMin<sp/>!=<sp/>m_eta_min[k]<sp/>||<sp/>etaMax<sp/>!=m_eta_max[k]<sp/>){<sp/></highlight><highlight class="comment">//Build<sp/>a<sp/>new<sp/>macroRegion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>etaMin<sp/>=<sp/>m_eta_min[k];<sp/><sp/>etaMax<sp/>=<sp/>m_eta_max[k];</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d25/namespaceP4Helpers_1a6152dbed5af29038dfa03aeb5d03eb97" kindref="member" tooltip="Computes efficiently {}.">deltaEta</ref><sp/>=<sp/>fabs(m_eta_max[k]<sp/>-<sp/>m_eta_min[k]);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>macroRegName<sp/>=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_names[k].find(</highlight><highlight class="stringliteral">&quot;EL&quot;</highlight><highlight class="normal">)!=<sp/>string::npos<sp/>||<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;ES&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos){<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//We<sp/>are<sp/>in<sp/>the<sp/>End-Cap<sp/>sectors<sp/>so<sp/>we<sp/>split<sp/>only<sp/>Large<sp/>and<sp/>Small<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>macroRegName<sp/>=<sp/>m_names[k].substr(0,<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;EL&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>macroRegName<sp/>=<sp/>macroRegName.substr(0,<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;ES&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//insert<sp/>4<sp/>time<sp/>the<sp/>innerEta,<sp/>for<sp/>Large<sp/>and<sp/>Small<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionName.push_back(macroRegName+</highlight><highlight class="stringliteral">&quot;Large&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionName.push_back(macroRegName+</highlight><highlight class="stringliteral">&quot;Small&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;2;<sp/>++i){<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>etaMin<sp/>&gt;=<sp/>0.<sp/>)<sp/>m_macroRegionInnerEta.push_back(etaMin);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionInnerEta.push_back(etaMax);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionDeltaEta.push_back(deltaEta);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>macroRegionIdx+=2;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight><highlight class="comment">//We<sp/>are<sp/>in<sp/>the<sp/>Barrels<sp/>sectors<sp/>so<sp/>we<sp/>split<sp/>Large,<sp/>Small,<sp/>12+14,<sp/>11+15<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>macroRegName<sp/>=<sp/>m_names[k].substr(0,<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;BL&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>macroRegName<sp/>=<sp/>macroRegName.substr(0,<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;BS&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//insert<sp/>4<sp/>time<sp/>the<sp/>innerEta,<sp/>for<sp/>Large<sp/>and<sp/>Small<sp/>sectors<sp/>times<sp/>Up<sp/>and<sp/>Dn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionName.push_back(macroRegName+</highlight><highlight class="stringliteral">&quot;Large&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionName.push_back(macroRegName+</highlight><highlight class="stringliteral">&quot;Small&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionName.push_back(macroRegName+</highlight><highlight class="stringliteral">&quot;Large11_15&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionName.push_back(macroRegName+</highlight><highlight class="stringliteral">&quot;SmallFeet&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;4;<sp/>++i){<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>etaMin<sp/>&gt;=<sp/>0.<sp/>)<sp/>m_macroRegionInnerEta.push_back(etaMin);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionInnerEta.push_back(etaMax);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionDeltaEta.push_back(deltaEta);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>macroRegionIdx+=4;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(verb)<sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;k=&quot;</highlight><highlight class="normal">&lt;&lt;k&lt;&lt;</highlight><highlight class="stringliteral">&quot;:<sp/>etaMin=&quot;</highlight><highlight class="normal">&lt;&lt;etaMin&lt;&lt;</highlight><highlight class="stringliteral">&quot;;<sp/>etaMax=&quot;</highlight><highlight class="normal">&lt;&lt;etaMax&lt;&lt;</highlight><highlight class="stringliteral">&quot;;<sp/>short<sp/>macroRegName=&quot;</highlight><highlight class="normal">&lt;&lt;macroRegName</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;;<sp/>m_macroRegionName.size()=&quot;</highlight><highlight class="normal">&lt;&lt;m_macroRegionName.size()</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;;<sp/>macroRegionIdx&quot;</highlight><highlight class="normal">&lt;&lt;macroRegionIdx&lt;&lt;</highlight><highlight class="stringliteral">&quot;;<sp/>m_macroRegionInnerEta[&quot;</highlight><highlight class="normal">&lt;&lt;macroRegionIdx&lt;&lt;</highlight><highlight class="stringliteral">&quot;]=&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;m_macroRegionInnerEta[macroRegionIdx]&lt;&lt;endl;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;EL&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos){</highlight><highlight class="comment">//End-Cap<sp/>Large<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionIdxMap[k]<sp/>=<sp/>macroRegionIdx-2;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;ES&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos){</highlight><highlight class="comment">//End-Cap<sp/>Small<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionIdxMap[k]<sp/>=<sp/>macroRegionIdx-1;<sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_names[k].find(</highlight><highlight class="stringliteral">&quot;BL&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos){</highlight><highlight class="comment">//Barrel<sp/>Large<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_names[k].find(</highlight><highlight class="stringliteral">&quot;11&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos<sp/>||<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;15&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionIdxMap[k]<sp/>=<sp/>macroRegionIdx-2;</highlight><highlight class="comment">//Barrel<sp/>Large<sp/>sectors<sp/>with<sp/>different<sp/>alignment<sp/>(11,15)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionIdxMap[k]<sp/>=<sp/>macroRegionIdx-4;<sp/></highlight><highlight class="comment">//Standard<sp/>Barrel<sp/>Large<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;BS&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos){</highlight><highlight class="comment">//Barrel<sp/>Small<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_names[k].find(</highlight><highlight class="stringliteral">&quot;12&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos<sp/>||<sp/>m_names[k].find(</highlight><highlight class="stringliteral">&quot;14&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>string::npos<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionIdxMap[k]<sp/>=<sp/>macroRegionIdx-1;<sp/></highlight><highlight class="comment">//Feet<sp/>Small<sp/>sectors<sp/>(12+14,<sp/>Down).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_macroRegionIdxMap[k]<sp/>=<sp/>macroRegionIdx-3;<sp/></highlight><highlight class="comment">//All<sp/>standard<sp/>Barrel<sp/>Small<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MuonMomentumCorrections/Root/Regions.cxx"/>
  </compounddef>
</doxygen>
