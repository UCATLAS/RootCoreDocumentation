<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="dc/d01/JetElement__v1_8cxx" kind="file">
    <compoundname>JetElement_v1.cxx</compoundname>
    <includes local="no">cmath</includes>
    <includes refid="d1/d0c/AuxStoreAccessorMacros_8h" local="yes">xAODCore/AuxStoreAccessorMacros.h</includes>
    <includes refid="de/d6f/JetElement__v1_8h" local="yes">xAODTrigL1Calo/versions/JetElement_v1.h</includes>
    <incdepgraph>
      <node id="458572">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="458574">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="458534" relation="include">
        </childnode>
        <childnode refid="458536" relation="include">
        </childnode>
        <childnode refid="458541" relation="include">
        </childnode>
        <childnode refid="458542" relation="include">
        </childnode>
      </node>
      <node id="458575">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="458544">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="458530" relation="include">
        </childnode>
        <childnode refid="458532" relation="include">
        </childnode>
        <childnode refid="458545" relation="include">
        </childnode>
        <childnode refid="458543" relation="include">
        </childnode>
      </node>
      <node id="458540">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="458542">
        <label>functional</label>
      </node>
      <node id="458539">
        <label>limits</label>
      </node>
      <node id="458545">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="458570">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="458537">
        <label>iterator</label>
      </node>
      <node id="458558">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="458522" relation="include">
        </childnode>
        <childnode refid="458559" relation="include">
        </childnode>
      </node>
      <node id="458516">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/JetElement_v1.cxx</label>
        <link refid="JetElement_v1.cxx"/>
        <childnode refid="458517" relation="include">
        </childnode>
        <childnode refid="458518" relation="include">
        </childnode>
        <childnode refid="458519" relation="include">
        </childnode>
      </node>
      <node id="458582">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="458531" relation="include">
        </childnode>
        <childnode refid="458583" relation="include">
        </childnode>
        <childnode refid="458584" relation="include">
        </childnode>
        <childnode refid="458550" relation="include">
        </childnode>
        <childnode refid="458522" relation="include">
        </childnode>
      </node>
      <node id="458554">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="458555" relation="include">
        </childnode>
        <childnode refid="458538" relation="include">
        </childnode>
      </node>
      <node id="458521">
        <label>stdint.h</label>
      </node>
      <node id="458551">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="458532" relation="include">
        </childnode>
        <childnode refid="458550" relation="include">
        </childnode>
      </node>
      <node id="458525">
        <label>RVersion.h</label>
      </node>
      <node id="458533">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="458534" relation="include">
        </childnode>
        <childnode refid="458541" relation="include">
        </childnode>
        <childnode refid="458542" relation="include">
        </childnode>
      </node>
      <node id="458517">
        <label>cmath</label>
      </node>
      <node id="458586">
        <label>cassert</label>
      </node>
      <node id="458584">
        <label>stdexcept</label>
      </node>
      <node id="458573">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="458522">
        <label>string</label>
      </node>
      <node id="458576">
        <label>AthContainers/AuxVectorData.h</label>
        <link refid="d9/df2/AuxVectorData_8h"/>
        <childnode refid="458531" relation="include">
        </childnode>
        <childnode refid="458530" relation="include">
        </childnode>
        <childnode refid="458558" relation="include">
        </childnode>
        <childnode refid="458554" relation="include">
        </childnode>
        <childnode refid="458546" relation="include">
        </childnode>
        <childnode refid="458577" relation="include">
        </childnode>
        <childnode refid="458578" relation="include">
        </childnode>
        <childnode refid="458561" relation="include">
        </childnode>
        <childnode refid="458555" relation="include">
        </childnode>
        <childnode refid="458536" relation="include">
        </childnode>
        <childnode refid="458538" relation="include">
        </childnode>
        <childnode refid="458579" relation="include">
        </childnode>
        <childnode refid="458580" relation="include">
        </childnode>
        <childnode refid="458568" relation="include">
        </childnode>
        <childnode refid="458581" relation="include">
        </childnode>
      </node>
      <node id="458549">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="458532" relation="include">
        </childnode>
        <childnode refid="458550" relation="include">
        </childnode>
      </node>
      <node id="458579">
        <label>AthContainers/tools/likely.h</label>
        <link refid="d6/dd6/likely_8h"/>
      </node>
      <node id="458526">
        <label>RootMetaSelection.h</label>
      </node>
      <node id="458565">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="458580">
        <label>AthContainers/tools/assume.h</label>
        <link refid="d2/d20/assume_8h"/>
      </node>
      <node id="458562">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="458529">
        <label>AthContainersInterfaces/IAuxElement.h</label>
        <link refid="dd/d7a/IAuxElement_8h"/>
      </node>
      <node id="458524">
        <label>AthLinks/tools/selection_ns.h</label>
        <link refid="d3/dec/selection__ns_8h"/>
        <childnode refid="458525" relation="include">
        </childnode>
        <childnode refid="458526" relation="include">
        </childnode>
      </node>
      <node id="458578">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="458571">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="458557">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="458558" relation="include">
        </childnode>
        <childnode refid="458539" relation="include">
        </childnode>
        <childnode refid="458521" relation="include">
        </childnode>
        <childnode refid="458560" relation="include">
        </childnode>
      </node>
      <node id="458531">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="458532" relation="include">
        </childnode>
        <childnode refid="458533" relation="include">
        </childnode>
      </node>
      <node id="458523">
        <label>AthLinks/ElementLinkBase.h</label>
        <link refid="d0/d16/ElementLinkBase_8h_source"/>
        <childnode refid="458521" relation="include">
        </childnode>
      </node>
      <node id="458534">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="458535" relation="include">
        </childnode>
        <childnode refid="458536" relation="include">
        </childnode>
        <childnode refid="458537" relation="include">
        </childnode>
        <childnode refid="458532" relation="include">
        </childnode>
        <childnode refid="458538" relation="include">
        </childnode>
        <childnode refid="458517" relation="include">
        </childnode>
        <childnode refid="458539" relation="include">
        </childnode>
        <childnode refid="458522" relation="include">
        </childnode>
        <childnode refid="458540" relation="include">
        </childnode>
      </node>
      <node id="458550">
        <label>typeinfo</label>
      </node>
      <node id="458585">
        <label>AthContainers/AuxElement.icc</label>
        <link refid="d2/d37/AuxElement_8icc"/>
        <childnode refid="458579" relation="include">
        </childnode>
        <childnode refid="458586" relation="include">
        </childnode>
      </node>
      <node id="458560">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="458527">
        <label>AthLinks/tools/TypeTools.h</label>
        <link refid="dd/db1/TypeTools_8h_source"/>
      </node>
      <node id="458577">
        <label>AthenaKernel/ILockable.h</label>
      </node>
      <node id="458547">
        <label>AthLinks/DataLinkBase.h</label>
        <link refid="db/da8/DataLinkBase_8h_source"/>
        <childnode refid="458521" relation="include">
        </childnode>
      </node>
      <node id="458559">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="458564">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="458543">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="458548">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="458531" relation="include">
        </childnode>
        <childnode refid="458549" relation="include">
        </childnode>
        <childnode refid="458551" relation="include">
        </childnode>
        <childnode refid="458552" relation="include">
        </childnode>
        <childnode refid="458566" relation="include">
        </childnode>
        <childnode refid="458568" relation="include">
        </childnode>
        <childnode refid="458532" relation="include">
        </childnode>
        <childnode refid="458550" relation="include">
        </childnode>
        <childnode refid="458555" relation="include">
        </childnode>
        <childnode refid="458574" relation="include">
        </childnode>
        <childnode refid="458575" relation="include">
        </childnode>
      </node>
      <node id="458555">
        <label>vector</label>
      </node>
      <node id="458536">
        <label>utility</label>
      </node>
      <node id="458561">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="458519">
        <label>xAODTrigL1Calo/versions/JetElement_v1.h</label>
        <link refid="de/d6f/JetElement__v1_8h_source"/>
        <childnode refid="458520" relation="include">
        </childnode>
        <childnode refid="458528" relation="include">
        </childnode>
      </node>
      <node id="458569">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="458553">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="458568">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="458569" relation="include">
        </childnode>
        <childnode refid="458570" relation="include">
        </childnode>
        <childnode refid="458571" relation="include">
        </childnode>
        <childnode refid="458572" relation="include">
        </childnode>
        <childnode refid="458573" relation="include">
        </childnode>
      </node>
      <node id="458538">
        <label>cstdlib</label>
      </node>
      <node id="458583">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="458530">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="458531" relation="include">
        </childnode>
        <childnode refid="458532" relation="include">
        </childnode>
        <childnode refid="458543" relation="include">
        </childnode>
      </node>
      <node id="458532">
        <label>cstddef</label>
      </node>
      <node id="458581">
        <label>AthContainers/AuxVectorData.icc</label>
        <link refid="da/de7/AuxVectorData_8icc"/>
        <childnode refid="458548" relation="include">
        </childnode>
        <childnode refid="458544" relation="include">
        </childnode>
        <childnode refid="458530" relation="include">
        </childnode>
        <childnode refid="458579" relation="include">
        </childnode>
        <childnode refid="458580" relation="include">
        </childnode>
      </node>
      <node id="458518">
        <label>xAODCore/AuxStoreAccessorMacros.h</label>
        <link refid="d1/d0c/AuxStoreAccessorMacros_8h_source"/>
      </node>
      <node id="458552">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="458549" relation="include">
        </childnode>
        <childnode refid="458553" relation="include">
        </childnode>
        <childnode refid="458554" relation="include">
        </childnode>
        <childnode refid="458556" relation="include">
        </childnode>
        <childnode refid="458561" relation="include">
        </childnode>
        <childnode refid="458550" relation="include">
        </childnode>
        <childnode refid="458555" relation="include">
        </childnode>
        <childnode refid="458535" relation="include">
        </childnode>
        <childnode refid="458521" relation="include">
        </childnode>
        <childnode refid="458563" relation="include">
        </childnode>
        <childnode refid="458564" relation="include">
        </childnode>
        <childnode refid="458565" relation="include">
        </childnode>
      </node>
      <node id="458563">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="458567">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="458556">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="458553" relation="include">
        </childnode>
        <childnode refid="458557" relation="include">
        </childnode>
        <childnode refid="458561" relation="include">
        </childnode>
        <childnode refid="458555" relation="include">
        </childnode>
        <childnode refid="458562" relation="include">
        </childnode>
      </node>
      <node id="458535">
        <label>algorithm</label>
      </node>
      <node id="458528">
        <label>AthContainers/AuxElement.h</label>
        <link refid="d1/d6f/AuxElement_8h"/>
        <childnode refid="458529" relation="include">
        </childnode>
        <childnode refid="458530" relation="include">
        </childnode>
        <childnode refid="458544" relation="include">
        </childnode>
        <childnode refid="458546" relation="include">
        </childnode>
        <childnode refid="458548" relation="include">
        </childnode>
        <childnode refid="458576" relation="include">
        </childnode>
        <childnode refid="458554" relation="include">
        </childnode>
        <childnode refid="458582" relation="include">
        </childnode>
        <childnode refid="458579" relation="include">
        </childnode>
        <childnode refid="458532" relation="include">
        </childnode>
        <childnode refid="458585" relation="include">
        </childnode>
      </node>
      <node id="458546">
        <label>AthLinks/DataLink.h</label>
        <link refid="da/de8/DataLink_8h_source"/>
        <childnode refid="458521" relation="include">
        </childnode>
        <childnode refid="458522" relation="include">
        </childnode>
        <childnode refid="458547" relation="include">
        </childnode>
        <childnode refid="458524" relation="include">
        </childnode>
      </node>
      <node id="458520">
        <label>AthLinks/ElementLink.h</label>
        <link refid="dc/d24/ElementLink_8h_source"/>
        <childnode refid="458521" relation="include">
        </childnode>
        <childnode refid="458522" relation="include">
        </childnode>
        <childnode refid="458523" relation="include">
        </childnode>
        <childnode refid="458524" relation="include">
        </childnode>
        <childnode refid="458527" relation="include">
        </childnode>
      </node>
      <node id="458541">
        <label>memory</label>
      </node>
      <node id="458566">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="458551" relation="include">
        </childnode>
        <childnode refid="458552" relation="include">
        </childnode>
        <childnode refid="458567" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="dd/d44/namespacexAOD">xAOD</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>$Id:<sp/>JetElement_v1.cxx<sp/>638578<sp/>2015-01-09<sp/>17:00:15Z<sp/>morrisj<sp/>$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>System<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EDM<sp/>includes(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODCore/AuxStoreAccessorMacros.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Local<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODTrigL1Calo/versions/JetElement_v1.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">xAOD{<sp/></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>JetElement_v1::JetElement_v1()<sp/>:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>SG::AuxElement()</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>AUXSTORE_PRIMITIVE_SETTER_AND_GETTER(<sp/>JetElement_v1<sp/>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>,<sp/>phi<sp/>,<sp/>setPhi<sp/>)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>AUXSTORE_PRIMITIVE_SETTER_AND_GETTER(<sp/>JetElement_v1<sp/>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>,<sp/>eta<sp/>,<sp/>setEta<sp/>)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>AUXSTORE_PRIMITIVE_SETTER_AND_GETTER(<sp/>JetElement_v1<sp/>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>,<sp/>key<sp/>,<sp/>setKey<sp/>)<sp/><sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>AUXSTORE_PRIMITIVE_SETTER_AND_GETTER(<sp/>JetElement_v1<sp/>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>,<sp/>peak<sp/>,<sp/>setPeak<sp/>)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>AUXSTORE_OBJECT_SETTER_AND_GETTER(<sp/>JetElement_v1<sp/>,<sp/>std::vector&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>,<sp/>emEnergyVec<sp/>,<sp/>setEmEnergyVec<sp/>)<sp/><sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>AUXSTORE_OBJECT_SETTER_AND_GETTER(<sp/>JetElement_v1<sp/>,<sp/>std::vector&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>,<sp/>hadEnergyVec<sp/>,<sp/>setHadEnergyVec<sp/>)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>AUXSTORE_OBJECT_SETTER_AND_GETTER(<sp/>JetElement_v1<sp/>,<sp/>std::vector&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>,<sp/>emErrorVec<sp/>,<sp/>setEmErrorVec<sp/>)<sp/><sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>AUXSTORE_OBJECT_SETTER_AND_GETTER(<sp/>JetElement_v1<sp/>,<sp/>std::vector&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>,<sp/>hadErrorVec<sp/>,<sp/>setHadErrorVec<sp/>)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>AUXSTORE_OBJECT_SETTER_AND_GETTER(<sp/>JetElement_v1<sp/>,<sp/>std::vector&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>,<sp/>linkErrorVec<sp/>,<sp/>setLinkErrorVec<sp/>)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JetElement_v1::addEnergy(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>emEnergyIn,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hadEnergyIn)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>modifiedEmEnergy<sp/>=<sp/>emEnergy()<sp/>+<sp/>emEnergyIn;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>modifiedEmEnergy<sp/>&gt;<sp/>m_layerSaturationThreshold<sp/>){</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>modifiedEmEnergy<sp/>=<sp/>m_layerSaturationThreshold;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>(I<sp/>don&apos;t<sp/>like<sp/>this)<sp/>the<sp/>current<sp/>Aux<sp/>const<sp/>data<sp/>member<sp/>vector<sp/>to<sp/>a<sp/>non-const<sp/>stack<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>modify<sp/>the<sp/>content<sp/>of<sp/>the<sp/>stack<sp/>vector<sp/>and<sp/>set<sp/>it<sp/>as<sp/>the<sp/>Aux<sp/>data<sp/>member</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>modifiedEmEnergyVec;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;<sp/>currentEmEnergyVec<sp/>=<sp/>emEnergyVec();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::vector&lt;int&gt;::const_iterator<sp/>i=currentEmEnergyVec.begin();i!=currentEmEnergyVec.end();++i){</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>modifiedEmEnergyVec.push_back(<sp/>(*i)<sp/>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>modifiedEmEnergyVec[<sp/>peak()<sp/>]<sp/>=<sp/>modifiedEmEnergy;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>setEmEnergyVec(<sp/>modifiedEmEnergyVec<sp/>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>modifiedHadEnergy<sp/>=<sp/>hadEnergy()<sp/>+<sp/>hadEnergyIn;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>modifiedHadEnergy<sp/>&gt;<sp/>m_layerSaturationThreshold<sp/>){</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>modifiedEmEnergy<sp/>=<sp/>m_layerSaturationThreshold;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>(I<sp/>don&apos;t<sp/>like<sp/>this)<sp/>the<sp/>current<sp/>Aux<sp/>const<sp/>data<sp/>member<sp/>vector<sp/>to<sp/>a<sp/>non-const<sp/>stack<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>modify<sp/>the<sp/>content<sp/>of<sp/>the<sp/>stack<sp/>vector<sp/>and<sp/>set<sp/>it<sp/>as<sp/>the<sp/>Aux<sp/>data<sp/>member</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>modifiedHadEnergyVec;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;<sp/>currentHadEnergyVec<sp/>=<sp/>hadEnergyVec();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::vector&lt;int&gt;::const_iterator<sp/>i=currentHadEnergyVec.begin();i!=currentHadEnergyVec.end();++i){</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>modifiedHadEnergyVec.push_back(<sp/>(*i)<sp/>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>modifiedHadEnergyVec[<sp/>peak()<sp/>]<sp/>=<sp/>modifiedHadEnergy;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>setHadEnergyVec(<sp/>modifiedHadEnergyVec<sp/>);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JetElement_v1::addSlice(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slice,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>emEnergyIn,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hadEnergyIn,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>emErrorIn,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hadErrorIn,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linkErrorIn)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>EM<sp/>Energy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>modifiedEmEnergy<sp/>=<sp/>emSliceEnergy(<sp/>slice<sp/>)<sp/>+<sp/>emEnergyIn;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>modifiedEmEnergy<sp/>&gt;<sp/>m_layerSaturationThreshold<sp/>){</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>modifiedEmEnergy<sp/>=<sp/>m_layerSaturationThreshold;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>modifiedEmEnergyVec;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;<sp/>currentEmEnergyVec<sp/>=<sp/>emEnergyVec();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::vector&lt;int&gt;::const_iterator<sp/>i=currentEmEnergyVec.begin();i!=currentEmEnergyVec.end();++i){</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>modifiedEmEnergyVec.push_back(<sp/>(*i)<sp/>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>modifiedEmEnergyVec[<sp/>slice<sp/>]<sp/>=<sp/>modifiedEmEnergy;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>setEmEnergyVec(<sp/>modifiedEmEnergyVec<sp/>);<sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Had<sp/>Energy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>modifiedHadEnergy<sp/>=<sp/>hadSliceEnergy(<sp/>slice<sp/>)<sp/>+<sp/>hadEnergyIn;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>modifiedHadEnergy<sp/>&gt;<sp/>m_layerSaturationThreshold<sp/>){</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>modifiedEmEnergy<sp/>=<sp/>m_layerSaturationThreshold;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>modifiedHadEnergyVec;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;<sp/>currentHadEnergyVec<sp/>=<sp/>hadEnergyVec();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::vector&lt;int&gt;::const_iterator<sp/>i=currentHadEnergyVec.begin();i!=currentHadEnergyVec.end();++i){</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>modifiedHadEnergyVec.push_back(<sp/>(*i)<sp/>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>modifiedHadEnergyVec[<sp/>slice<sp/>]<sp/>=<sp/>modifiedHadEnergy;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>setHadEnergyVec(<sp/>modifiedHadEnergyVec<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>EM<sp/>Error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>modifiedEmError<sp/>=<sp/>emErrorVec()[<sp/>slice<sp/>]<sp/>+<sp/>emErrorIn;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>modifiedEmErrorVec;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;<sp/>currentEmErrorVec<sp/>=<sp/>emErrorVec();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::vector&lt;int&gt;::const_iterator<sp/>i=currentEmErrorVec.begin();i!=currentEmErrorVec.end();++i){</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>modifiedEmErrorVec.push_back(<sp/>(*i)<sp/>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>modifiedEmErrorVec[<sp/>slice<sp/>]<sp/>=<sp/>modifiedEmError;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>setEmErrorVec(<sp/>modifiedEmErrorVec<sp/>);<sp/><sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Had<sp/>Error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>modifiedHadError<sp/>=<sp/>hadErrorVec()[<sp/>slice<sp/>]<sp/>+<sp/>hadErrorIn;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>modifiedHadErrorVec;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;<sp/>currentHadErrorVec<sp/>=<sp/>hadErrorVec();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::vector&lt;int&gt;::const_iterator<sp/>i=currentHadErrorVec.begin();i!=currentHadErrorVec.end();++i){</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>modifiedHadErrorVec.push_back(<sp/>(*i)<sp/>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>modifiedHadErrorVec[<sp/>slice<sp/>]<sp/>=<sp/>modifiedHadError;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>setHadErrorVec(<sp/>modifiedHadErrorVec<sp/>);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Link<sp/>Error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>modifiedLinkError<sp/>=<sp/>linkErrorVec()[<sp/>slice<sp/>]<sp/>+<sp/>linkErrorIn;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>modifiedLinkErrorVec;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;<sp/>currentLinkErrorVec<sp/>=<sp/>linkErrorVec();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::vector&lt;int&gt;::const_iterator<sp/>i=currentLinkErrorVec.begin();i!=currentLinkErrorVec.end();++i){</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>modifiedLinkErrorVec.push_back(<sp/>(*i)<sp/>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>modifiedLinkErrorVec[<sp/>slice<sp/>]<sp/>=<sp/>modifiedLinkError;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>setLinkErrorVec(<sp/>modifiedLinkErrorVec<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>JetElement_v1::emEnergy()</highlight><highlight class="keyword"><sp/><sp/>const</highlight></codeline>
<codeline lineno="138"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>emEnergyVec()[<sp/>peak()<sp/>]<sp/>&lt;<sp/>m_layerSaturationThreshold)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>emEnergyVec()[<sp/>peak()<sp/>];</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_layerSaturationThreshold;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>JetElement_v1::hadEnergy()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="146"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>hadEnergyVec()[<sp/>peak()<sp/>]<sp/>&lt;<sp/>m_layerSaturationThreshold)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hadEnergyVec()[<sp/>peak()<sp/>];</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_layerSaturationThreshold;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>JetElement_v1::energy()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/>const</highlight></codeline>
<codeline lineno="154"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>emEnergy()<sp/><sp/>&gt;=<sp/>m_layerSaturationThreshold<sp/>)<sp/>||</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>hadEnergy()<sp/>&gt;=<sp/>m_layerSaturationThreshold<sp/>)<sp/>||</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(<sp/>emEnergy()<sp/>+<sp/>hadEnergy()<sp/>)<sp/>&gt;=<sp/>m_saturationThreshold<sp/>)<sp/>){</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_saturationThreshold;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>emEnergy()<sp/>+<sp/>hadEnergy();<sp/><sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>JetElement_v1::emSliceEnergy(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slice)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="165"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>slice<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>slice<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)emEnergyVec().size()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>emEnergyVec()[<sp/>slice<sp/>]<sp/>&lt;<sp/>m_layerSaturationThreshold<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>emEnergyVec()[<sp/>slice<sp/>];</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_layerSaturationThreshold;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>JetElement_v1::hadSliceEnergy(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slice)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="176"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>slice<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>slice<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)hadEnergyVec().size()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>hadEnergyVec()[<sp/>slice<sp/>]<sp/>&lt;<sp/>m_layerSaturationThreshold<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hadEnergyVec()[<sp/>slice<sp/>];</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_layerSaturationThreshold;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>JetElement_v1::sliceEnergy(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slice)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="187"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>emSliceEnergy(slice)<sp/><sp/>&gt;=<sp/>m_layerSaturationThreshold<sp/>)<sp/>||</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>hadSliceEnergy(slice)<sp/>&gt;=<sp/>m_layerSaturationThreshold<sp/>)<sp/>||</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(<sp/>emSliceEnergy(slice)<sp/>+<sp/>hadSliceEnergy(slice)<sp/>)<sp/>&gt;=<sp/>m_saturationThreshold<sp/>)<sp/>){</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_saturationThreshold;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>emSliceEnergy(slice)<sp/>+<sp/>hadSliceEnergy(slice);<sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>JetElement_v1::isSaturated()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/>const</highlight></codeline>
<codeline lineno="198"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>energy()<sp/>==<sp/>m_saturationThreshold<sp/>){</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>JetElement_v1::isEmSaturated()</highlight><highlight class="keyword"><sp/><sp/>const</highlight></codeline>
<codeline lineno="206"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>emEnergy()<sp/>==<sp/>m_layerSaturationThreshold<sp/>){</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>JetElement_v1::isHadSaturated()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="214"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>hadEnergy()<sp/>==<sp/>m_layerSaturationThreshold<sp/>){</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>JetElement_v1::emError()</highlight><highlight class="keyword"><sp/><sp/><sp/>const</highlight></codeline>
<codeline lineno="222"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>emErrorVec()[<sp/>peak()<sp/>];</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>JetElement_v1::hadError()</highlight><highlight class="keyword"><sp/><sp/>const</highlight></codeline>
<codeline lineno="227"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hadErrorVec()[<sp/>peak()<sp/>];</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>JetElement_v1::linkError()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="232"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>linkErrorVec()[<sp/>peak()<sp/>];</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="236"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>xAOD</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/JetElement_v1.cxx"/>
  </compounddef>
</doxygen>
