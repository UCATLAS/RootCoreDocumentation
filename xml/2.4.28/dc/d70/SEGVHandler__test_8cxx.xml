<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="dc/d70/SEGVHandler__test_8cxx" kind="file">
    <compoundname>SEGVHandler_test.cxx</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">signal.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">string</includes>
    <includes local="no">utility</includes>
    <includes local="no">cassert</includes>
    <includes refid="de/d45/procmaps_8h" local="yes">CxxUtils/procmaps.h</includes>
    <includes refid="d1/dda/PageAccessControl_8h" local="yes">CxxUtils/PageAccessControl.h</includes>
    <includes refid="d7/d61/PtrAccessSEGVHandler_8h" local="yes">CxxUtils/PtrAccessSEGVHandler.h</includes>
    <includes refid="dd/d08/cPtrAccessSEGVHandler_8h" local="yes">CxxUtils/cPtrAccessSEGVHandler.h</includes>
    <incdepgraph>
      <node id="113779">
        <label>sys/mman.h</label>
      </node>
      <node id="113770">
        <label>stdlib.h</label>
      </node>
      <node id="113774">
        <label>cassert</label>
      </node>
      <node id="113772">
        <label>string</label>
      </node>
      <node id="113766">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/test/SEGVHandler_test.cxx</label>
        <link refid="SEGVHandler_test.cxx"/>
        <childnode refid="113767" relation="include">
        </childnode>
        <childnode refid="113768" relation="include">
        </childnode>
        <childnode refid="113769" relation="include">
        </childnode>
        <childnode refid="113770" relation="include">
        </childnode>
        <childnode refid="113771" relation="include">
        </childnode>
        <childnode refid="113772" relation="include">
        </childnode>
        <childnode refid="113773" relation="include">
        </childnode>
        <childnode refid="113774" relation="include">
        </childnode>
        <childnode refid="113775" relation="include">
        </childnode>
        <childnode refid="113778" relation="include">
        </childnode>
        <childnode refid="113780" relation="include">
        </childnode>
        <childnode refid="113781" relation="include">
        </childnode>
      </node>
      <node id="113778">
        <label>CxxUtils/PageAccessControl.h</label>
        <link refid="d1/dda/PageAccessControl_8h_source"/>
        <childnode refid="113777" relation="include">
        </childnode>
        <childnode refid="113779" relation="include">
        </childnode>
        <childnode refid="113775" relation="include">
        </childnode>
      </node>
      <node id="113776">
        <label>boost/pool/pool_alloc.hpp</label>
      </node>
      <node id="113771">
        <label>unistd.h</label>
      </node>
      <node id="113777">
        <label>vector</label>
      </node>
      <node id="113768">
        <label>signal.h</label>
      </node>
      <node id="113775">
        <label>CxxUtils/procmaps.h</label>
        <link refid="de/d45/procmaps_8h_source"/>
        <childnode refid="113776" relation="include">
        </childnode>
        <childnode refid="113777" relation="include">
        </childnode>
      </node>
      <node id="113773">
        <label>utility</label>
      </node>
      <node id="113767">
        <label>iostream</label>
      </node>
      <node id="113780">
        <label>CxxUtils/PtrAccessSEGVHandler.h</label>
        <link refid="d7/d61/PtrAccessSEGVHandler_8h"/>
        <childnode refid="113768" relation="include">
        </childnode>
        <childnode refid="113777" relation="include">
        </childnode>
      </node>
      <node id="113769">
        <label>stdio.h</label>
      </node>
      <node id="113781">
        <label>CxxUtils/cPtrAccessSEGVHandler.h</label>
        <link refid="dd/d08/cPtrAccessSEGVHandler_8h"/>
        <childnode refid="113768" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="dc/d70/SEGVHandler__test_8cxx_1a840291bc02cba5474a4cb46a9b9566fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(void)</argsstring>
        <name>main</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/test/SEGVHandler_test.cxx" line="17" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/test/SEGVHandler_test.cxx" bodystart="17" bodyend="83"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#undef<sp/>NDEBUG</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*sigaction*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>pair<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CxxUtils/procmaps.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CxxUtils/PageAccessControl.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d7/d61/PtrAccessSEGVHandler_8h" kindref="compound" tooltip="This class provides a handle function that logs the addresses that had an access...">CxxUtils/PtrAccessSEGVHandler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dd/d08/cPtrAccessSEGVHandler_8h" kindref="compound" tooltip="a C wrapper providing access to PtrAccessSEGVHandler::handle the way sigaction wants...">CxxUtils/cPtrAccessSEGVHandler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;***<sp/>SEGVHandler_test<sp/>starts<sp/>***&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;endl;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc=0;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sigaction<sp/>sa,<sp/>stdSEGV;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>sigaction(SIGSEGV,NULL,&amp;stdSEGV);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>sa<sp/>=<sp/>stdSEGV;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>sa.sa_sigaction=trapReads;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><ref refid="da/da2/classprocmaps" kindref="compound" tooltip="A simple API to access /proc/self/maps info.">procmaps</ref><sp/>p;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><ref refid="dc/dc5/classPageAccessControl" kindref="compound">PageAccessControl</ref><sp/>pac(p);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><ref refid="dc/d96/classPtrAccessSEGVHandler" kindref="compound">PtrAccessSEGVHandler</ref><sp/>h(pac);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>setPtrAccessSEGVHandler(&amp;h);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>sa.sa_sigaction=<sp/>cPtrAccessSEGVHandler;<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>sa.sa_flags=SA_SIGINFO;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>rc=sigaction(SIGSEGV,&amp;sa,NULL);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;sigaction<sp/>installing<sp/>handler<sp/>returned<sp/>%d\n&quot;</highlight><highlight class="normal">,rc);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pagesz<sp/>=<sp/>getpagesize();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pool<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[4*pagesz];</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>int<sp/>*pInt=(int*)0x8000;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>int<sp/>*pInt=(int*)&amp;cPtrAccessSEGVHandler;<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*pInt=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(pool<sp/>+<sp/>pagesz)<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(11);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;@pInt=%p\n&quot;</highlight><highlight class="normal">,(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)pInt);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>delete<sp/>pInt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>*pString(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(pool<sp/>+<sp/>2*pagesz)<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;bar&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;@pString=%p\n&quot;</highlight><highlight class="normal">,(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)pString);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>pair&lt;int,double&gt;*<sp/>pPair(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(pool<sp/>+<sp/>3*pagesz)<sp/>pair&lt;int,double&gt;(1,2.0));</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;@pPair=%p\n&quot;</highlight><highlight class="normal">,(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)pPair);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//now<sp/>protect<sp/>the<sp/>pages.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>assert(pac.forbidPage(pInt));</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>assert(pac.forbidPage(pString));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>assert(pac.forbidPage(pPair));</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>p.loadMaps(true);<sp/>//dump<sp/>new<sp/>memory<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//new<sp/>int(12);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>fflush<sp/>(stdout);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//let&apos;s<sp/>get<sp/>some<sp/>SEGVs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//rkprintf(&quot;try<sp/>to<sp/>read<sp/>12\n&quot;);<sp/>fflush(stdout);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;accessing<sp/>pInt<sp/>%d\n&quot;</highlight><highlight class="normal">,*pInt);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;reading<sp/>again<sp/>from<sp/>pInt<sp/>%d\n&quot;</highlight><highlight class="normal">,*pInt);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;try<sp/>to<sp/>write<sp/>33\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>*pInt=33;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;read<sp/>%d\n&quot;</highlight><highlight class="normal">,*pInt);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>String<sp/>may<sp/>have<sp/>been<sp/>allowed<sp/>by<sp/>prev.<sp/>reads.<sp/><sp/>Lock<sp/>it<sp/>down<sp/>again.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>assert(pac.forbidPage(pString));</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>std::string<sp/>strtmp<sp/>=<sp/>*pString;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;reading<sp/>from<sp/>string<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>strtmp<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;reading<sp/>again<sp/>from<sp/>string<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>*pString<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xsecond<sp/>=<sp/>pPair-&gt;second;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;reading<sp/>double<sp/>from<sp/>pair<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>xsecond<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;reading<sp/>again<sp/>double<sp/>from<sp/>pair<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pPair-&gt;second<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//restore<sp/>default/old<sp/>handler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>sigaction(SIGSEGV,&amp;stdSEGV,NULL);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;try<sp/>to<sp/>read<sp/>33\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;read<sp/>%d\n&quot;</highlight><highlight class="normal">,*pInt);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>PtrAccessSEGVHandler::const_iterator<sp/>i(h.beginAccessedPtrs()),</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>e(h.endAccessedPtrs());</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;accessed<sp/>ptrs&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;@&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>hex<sp/>&lt;&lt;<sp/>*i++<sp/>&lt;&lt;<sp/>endl;<sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>pString-&gt;~string();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>pool;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;***<sp/>SEGVHandler_test<sp/>OK<sp/>***&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;endl;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/test/SEGVHandler_test.cxx"/>
  </compounddef>
</doxygen>
