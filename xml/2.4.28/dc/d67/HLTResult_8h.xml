<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="dc/d67/HLTResult_8h" kind="file">
    <compoundname>HLTResult.h</compoundname>
    <includes local="no">vector</includes>
    <includes local="no">map</includes>
    <includes local="no">string</includes>
    <includes local="no">set</includes>
    <includes local="no">stdint.h</includes>
    <includes refid="d5/d69/TrigSteeringEvent_2TrigSteeringEvent_2Enums_8h" local="yes">TrigSteeringEvent/Enums.h</includes>
    <includes refid="d4/d5f/GenericResult_8h" local="yes">TrigSteeringEvent/GenericResult.h</includes>
    <includes local="yes">AthenaKernel/IClassIDSvc.h</includes>
    <includes local="yes">CLIDSvc/CLASS_DEF.h</includes>
    <includedby refid="db/d71/ExpertMethods_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/Root/ExpertMethods.cxx</includedby>
    <includedby refid="d0/d67/HLTResult_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/src/HLTResult.cxx</includedby>
    <includedby refid="dc/dda/Truncation__test_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/test/Truncation_test.cxx</includedby>
    <includedby refid="d6/dd5/TrigSteeringEventDict_8h" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigSteeringEventDict.h</includedby>
    <includedby refid="d5/d9d/TrigNavigationCnvAlg_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTriggerCnv/src/TrigNavigationCnvAlg.cxx</includedby>
    <includedby refid="db/d8a/TrigNavigationCnvTool_8h" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTriggerCnv/src/TrigNavigationCnvTool.h</includedby>
    <incdepgraph>
      <node id="331126">
        <label>stdint.h</label>
      </node>
      <node id="331129">
        <label>CLIDSvc/CLASS_DEF.h</label>
      </node>
      <node id="331124">
        <label>string</label>
      </node>
      <node id="331123">
        <label>map</label>
      </node>
      <node id="331130">
        <label>AthenaKernel/IClassIDSvc.h</label>
      </node>
      <node id="331122">
        <label>vector</label>
      </node>
      <node id="331128">
        <label>TrigSteeringEvent/GenericResult.h</label>
        <link refid="d4/d5f/GenericResult_8h_source"/>
        <childnode refid="331126" relation="include">
        </childnode>
        <childnode refid="331129" relation="include">
        </childnode>
      </node>
      <node id="331121">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/HLTResult.h</label>
        <link refid="HLTResult.h"/>
        <childnode refid="331122" relation="include">
        </childnode>
        <childnode refid="331123" relation="include">
        </childnode>
        <childnode refid="331124" relation="include">
        </childnode>
        <childnode refid="331125" relation="include">
        </childnode>
        <childnode refid="331126" relation="include">
        </childnode>
        <childnode refid="331127" relation="include">
        </childnode>
        <childnode refid="331128" relation="include">
        </childnode>
        <childnode refid="331130" relation="include">
        </childnode>
        <childnode refid="331129" relation="include">
        </childnode>
      </node>
      <node id="331127">
        <label>TrigSteeringEvent/Enums.h</label>
        <link refid="d5/d69/TrigSteeringEvent_2TrigSteeringEvent_2Enums_8h_source"/>
        <childnode refid="331122" relation="include">
        </childnode>
        <childnode refid="331124" relation="include">
        </childnode>
        <childnode refid="331126" relation="include">
        </childnode>
      </node>
      <node id="331125">
        <label>set</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="331133">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigSteeringEventDict.h</label>
        <link refid="d6/dd5/TrigSteeringEventDict_8h_source"/>
      </node>
      <node id="331131">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/HLTResult.h</label>
        <link refid="HLTResult.h"/>
        <childnode refid="331132" relation="include">
        </childnode>
        <childnode refid="331133" relation="include">
        </childnode>
        <childnode refid="331134" relation="include">
        </childnode>
      </node>
      <node id="331134">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTriggerCnv/src/TrigNavigationCnvTool.h</label>
        <link refid="db/d8a/TrigNavigationCnvTool_8h_source"/>
      </node>
      <node id="331132">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/src/HLTResult.cxx</label>
        <link refid="d0/d67/HLTResult_8cxx"/>
      </node>
    </invincdepgraph>
    <innerclass refid="d9/d4b/classHLT_1_1HLTResult" prot="public">HLT::HLTResult</innerclass>
    <innernamespace refid="dc/d8d/namespaceHLT">HLT</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para><ulink url="mailto:gianluca.comune@cern.ch">gianluca.comune@cern.ch</ulink> <ulink url="mailto:simon.george@cern.ch">simon.george@cern.ch</ulink> <ulink url="mailto:andreas.hoecker@cern.ch">andreas.hoecker@cern.ch</ulink> </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>emacs<sp/>-*-<sp/>c++<sp/>-*-</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight><highlight class="preprocessor">#ifndef<sp/>TRIGSTEERINGEVENT_HLTResult_H</highlight></codeline>
<codeline lineno="9"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TRIGSTEERINGEVENT_HLTResult_H</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigSteeringEvent/Enums.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigSteeringEvent/GenericResult.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;AthenaKernel/IClassIDSvc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CLIDSvc/CLASS_DEF.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************************</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>(June<sp/>2006;<sp/>comments<sp/>on<sp/>documentation<sp/>to:<sp/>Andreas.Hoecker@cern.ch)</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>Oct<sp/>2006;<sp/><sp/>Tomasz.Bold@cern.ch<sp/>removed<sp/>most<sp/>of<sp/>internal<sp/>variables,<sp/>general<sp/>restructure</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>removed<sp/>most<sp/>of<sp/>the<sp/>methods</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>HLTResult<sp/>implements<sp/>a<sp/>GenericResult<sp/>which<sp/>is<sp/>communcated<sp/>between<sp/>PSC<sp/>and<sp/>HLT.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>****************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">HLT<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">HLTExtraData;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="42" refid="d9/d4b/classHLT_1_1HLTResult" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d9/d4b/classHLT_1_1HLTResult" kindref="compound" tooltip="HLT::HLTResult is sumarising result of trigger decision evaluation (online/offline)...">HLTResult</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="d0/dbd/classGenericResult" kindref="compound" tooltip="the interface class for all HLT, CALIB, MONITORING results The class define the interface...">GenericResult</ref><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>swap(<ref refid="d9/d4b/classHLT_1_1HLTResult" kindref="compound" tooltip="HLT::HLTResult is sumarising result of trigger decision evaluation (online/offline)...">HLTResult</ref>&amp;<sp/>lhs,<sp/><ref refid="d9/d4b/classHLT_1_1HLTResult" kindref="compound" tooltip="HLT::HLTResult is sumarising result of trigger decision evaluation (online/offline)...">HLTResult</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1a8d9621f0920710aeec1be96c4e111a5f" kindref="member" tooltip="constructor">HLTResult</ref>();<sp/></highlight><highlight class="comment">//&lt;!<sp/>Default<sp/>ctor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1a8d9621f0920710aeec1be96c4e111a5f" kindref="member" tooltip="constructor">HLTResult</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/d4b/classHLT_1_1HLTResult" kindref="compound" tooltip="HLT::HLTResult is sumarising result of trigger decision evaluation (online/offline)...">HLTResult</ref>&amp;);<sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1a8d9621f0920710aeec1be96c4e111a5f" kindref="member" tooltip="constructor">HLTResult</ref>(<ref refid="d9/d4b/classHLT_1_1HLTResult" kindref="compound" tooltip="HLT::HLTResult is sumarising result of trigger decision evaluation (online/offline)...">HLTResult</ref>&amp;&amp;<sp/>rhs);<sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d4b/classHLT_1_1HLTResult" kindref="compound" tooltip="HLT::HLTResult is sumarising result of trigger decision evaluation (online/offline)...">HLTResult</ref>&amp;<sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1aa1a156e60c9d13665daa5747f715f3ed" kindref="member" tooltip="unified assignement operator">operator=</ref>(<ref refid="d9/d4b/classHLT_1_1HLTResult" kindref="compound" tooltip="HLT::HLTResult is sumarising result of trigger decision evaluation (online/offline)...">HLTResult</ref><sp/>rhs);<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="d9/d4b/classHLT_1_1HLTResult" kindref="compound" tooltip="HLT::HLTResult is sumarising result of trigger decision evaluation (online/offline)...">HLTResult</ref>();<sp/></highlight><highlight class="comment">//&lt;!<sp/>Dtor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="d9/d4b/classHLT_1_1HLTResult_1a3f7dbdd49c6dff264f467263292b91fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1a3f7dbdd49c6dff264f467263292b91fb" kindref="member">accepted</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1ac288df3008aaecbf97f0a409b5cec678" kindref="member" tooltip="gets HLT decision">isAccepted</ref>();<sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1a96ea5b49b428ba0f13b8d37dbd350c06" kindref="member">error</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1a43bf08b00afaf87070318b1a0ad28805" kindref="member">error_bits</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1a8f5e0fab5ef0d7f3a6ddecc5173ddf5f" kindref="member">serialize</ref>(std::vector&lt;uint32_t&gt;&amp;<sp/>output,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mod_id);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1a8f5e0fab5ef0d7f3a6ddecc5173ddf5f" kindref="member">serialize</ref>(<sp/>std::vector&lt;uint32_t&gt;&amp;<sp/>output<sp/>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1a8f5e0fab5ef0d7f3a6ddecc5173ddf5f" kindref="member">serialize</ref>(<sp/>uint32_t*&amp;<sp/>output,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>data_size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_size<sp/>=<sp/>-1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mod_id<sp/>=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1a6380a32a5e28f2b9e8b739f79d043bcb" kindref="member">deserialize</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint32_t&gt;&amp;<sp/>source<sp/>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1a6380a32a5e28f2b9e8b739f79d043bcb" kindref="member">deserialize</ref>(<sp/><sp/>uint32_t*<sp/>source,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data_size<sp/>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>----<sp/>Trigger<sp/>masks<sp/>----</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>here<sp/>fill<sp/>mask<sp/>of<sp/>all<sp/>chains<sp/>according<sp/>to<sp/>chain<sp/>counter</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>best<sp/>would<sp/>be<sp/>to<sp/>send<sp/>names<sp/>of<sp/>all<sp/>existing<sp/>signatures,</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>their<sp/>active/inactive<sp/>flags,<sp/>and<sp/>pass-through/prescale<sp/>information</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>(need<sp/>to<sp/>enumerate<sp/>chains<sp/>in<sp/>configuration)</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>corresponding<sp/>functions<sp/>should<sp/>contain:</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>trigger-mask<sp/>for<sp/>each<sp/>step</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>add<sp/>chain/retrieve<sp/>chain/serialize/deserialize</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="d9/d4b/classHLT_1_1HLTResult_1a8eb48308c1d85a1117e18d0710de2f63" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1a8eb48308c1d85a1117e18d0710de2f63" kindref="member" tooltip="HLTResult version (set accessor is private).">getHLTResultClassVersion</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_HLTResultClassVersion;<sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="d9/d4b/classHLT_1_1HLTResult_1a4ec668b746e9d18a6e2e23fa65acf897" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><sp/><sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1a4ec668b746e9d18a6e2e23fa65acf897" kindref="member" tooltip="gets event number (Lvl1-id)">getLvl1Id</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_headerResult[IndEventNumber];<sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="d9/d4b/classHLT_1_1HLTResult_1a4c7cbc46771de2066aa4fc127afe54b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1a4c7cbc46771de2066aa4fc127afe54b3" kindref="member" tooltip="sets event number (Lvl1-id)">setLvl1Id</ref>(<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>)<sp/>{<sp/>m_headerResult[IndEventNumber]<sp/>=<sp/>id;<sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="d9/d4b/classHLT_1_1HLTResult_1ac288df3008aaecbf97f0a409b5cec678" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1ac288df3008aaecbf97f0a409b5cec678" kindref="member" tooltip="gets HLT decision">isAccepted</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(m_headerResult[IndHLTDecision]<sp/>==<sp/>1<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="d9/d4b/classHLT_1_1HLTResult_1add19d3cd1ac9b93aed030b9ce00fa069" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1add19d3cd1ac9b93aed030b9ce00fa069" kindref="member" tooltip="sets HLT decision">setAccepted</ref>(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>acc<sp/>)<sp/>{<sp/>acc<sp/>?<sp/>(m_headerResult[IndHLTDecision]<sp/>=<sp/>1)<sp/>:<sp/>(m_headerResult[IndHLTDecision]<sp/>=<sp/>0);<sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="d9/d4b/classHLT_1_1HLTResult_1a1d26c17321bd90cf98a4a69fa25f6af3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1a1d26c17321bd90cf98a4a69fa25f6af3" kindref="member" tooltip="forced-accepted (FA) event configuration the FA request(s) are set per chain and...">isPassThrough</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_headerResult[IndPassThrough];<sp/>}</highlight></codeline>
<codeline lineno="141" refid="d9/d4b/classHLT_1_1HLTResult_1aeec4e1740ecfb73e7ebc3c9eeb5d0fa7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1aeec4e1740ecfb73e7ebc3c9eeb5d0fa7" kindref="member" tooltip="set passTrough flag">setPassThrough</ref>(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fa<sp/>)<sp/>{<sp/>fa<sp/>?<sp/>(m_headerResult[IndPassThrough]<sp/>=<sp/>1)<sp/>:<sp/>(m_headerResult[IndPassThrough]<sp/>=<sp/>0)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="d9/d4b/classHLT_1_1HLTResult_1a0b9cdb1c16ca7ecbe02d4f5fd530993d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound" tooltip="The definition of error codes in HLT. This is a class (note; before was simple enum)...">ErrorCode</ref><sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1a0b9cdb1c16ca7ecbe02d4f5fd530993d" kindref="member" tooltip="overall hlt status: if StatusCode::isFailure(), event should be discarded from physics...">getHLTStatus</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound" tooltip="The definition of error codes in HLT. This is a class (note; before was simple enum)...">ErrorCode</ref>(m_headerResult[IndHLTStatus]);<sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setHLTStatus(<sp/><ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound" tooltip="The definition of error codes in HLT. This is a class (note; before was simple enum)...">ErrorCode</ref><sp/>hltStatus<sp/>)<sp/>{<sp/>m_headerResult[IndHLTStatus]<sp/>=<sp/>hltStatus;<sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="d9/d4b/classHLT_1_1HLTResult_1ac684f71b5db9393b66b0ff2f8d37fe2b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound" tooltip="The definition of error codes in HLT. This is a class (note; before was simple enum)...">ErrorCode</ref><sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1ac684f71b5db9393b66b0ff2f8d37fe2b" kindref="member" tooltip="overall hlt status: if StatusCode::isFailure(), event should be discarded from physics...">getLvlConverterStatus</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound" tooltip="The definition of error codes in HLT. This is a class (note; before was simple enum)...">ErrorCode</ref>(m_headerResult[IndLvlConverterStatus]);<sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setLvlConverterStatus(<sp/><ref refid="d0/d9e/classHLT_1_1ErrorCode" kindref="compound" tooltip="The definition of error codes in HLT. This is a class (note; before was simple enum)...">ErrorCode</ref><sp/>status<sp/>)<sp/>{<sp/>m_headerResult[IndLvlConverterStatus]<sp/>=<sp/>status;<sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="d9/d4b/classHLT_1_1HLTResult_1ab04fb9f0df15602b354674d2f6f3891b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>HLTLevel<sp/><sp/><sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1ab04fb9f0df15602b354674d2f6f3891b" kindref="member" tooltip="hlt level (L2 or EF)">getHLTLevel</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(HLTLevel)m_headerResult[IndHLTLevelInfo];<sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setHLTLevel(<sp/>HLTLevel<sp/>hltLevel<sp/>)<sp/>{<sp/>m_headerResult[IndHLTLevelInfo]<sp/>=<sp/>hltLevel;<sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="171" refid="d9/d4b/classHLT_1_1HLTResult_1a064d67587e4531e14e91a8a7d0d791d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1a064d67587e4531e14e91a8a7d0d791d0" kindref="member" tooltip="is the result valid">isValid</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="d9/d4b/classHLT_1_1HLTResult_1ab04fb9f0df15602b354674d2f6f3891b" kindref="member" tooltip="hlt level (L2 or EF)">getHLTLevel</ref>()<sp/>!=<sp/>HLT::UNKNOWN);<sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="d9/d4b/classHLT_1_1HLTResult_1ac45cf75f305d8dcfee0e65559a5bdb9b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><sp/><sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1ac45cf75f305d8dcfee0e65559a5bdb9b" kindref="member" tooltip="get number of satisfied signatures">getNumOfSatisfiedSigs</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_headerResult[IndNumOfSatisfiedSigs];<sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="d9/d4b/classHLT_1_1HLTResult_1a084818b50109c741badeebd49acfc70f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1a084818b50109c741badeebd49acfc70f" kindref="member" tooltip="sget number of satisfied signatures">setNumOfSatisfiedSigs</ref>(<sp/>uint32_t<sp/>sigs<sp/>)<sp/>{<sp/>m_headerResult[IndNumOfSatisfiedSigs]<sp/>=<sp/>sigs;<sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="d9/d4b/classHLT_1_1HLTResult_1ac0bfc4caecc904afd2a42b986254cf26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1ac0bfc4caecc904afd2a42b986254cf26" kindref="member" tooltip="sets the information about the error, namely chain in which the error happened and...">setErrorCoordinates</ref>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chainCounter=0,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step=0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_headerResult[IndErrorInChain]<sp/>=<sp/>chainCounter;<sp/><sp/>m_headerResult[IndErrorInStep]<sp/>=<sp/>step;<sp/>};</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="d9/d4b/classHLT_1_1HLTResult_1ae6bee54db0065d41dc007828f9fda842" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1ae6bee54db0065d41dc007828f9fda842" kindref="member" tooltip="get error coordinates">getErrorCoordinates</ref>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<sp/>chainCounter,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<sp/>step<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chainCounter<sp/>=<sp/>m_headerResult[IndErrorInChain];<sp/>step<sp/>=<sp/>m_headerResult[IndErrorInStep];<sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="d9/d4b/classHLT_1_1HLTResult_1af2d90e06c661ddd5599c11e8b0d9dc6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1af2d90e06c661ddd5599c11e8b0d9dc6f" kindref="member" tooltip="is HLTResult created externally, in PSC in example">isCreatedOutsideHLT</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(m_headerResult[IndCreatedOutsideHLT]<sp/>==<sp/>0<sp/>?<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/>}<sp/></highlight><highlight class="comment">//<sp/>previously<sp/>&quot;hasBeenCreated&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setCreatedOutsideHLT(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>created<sp/>)<sp/>{<sp/>created<sp/>?<sp/>(m_headerResult[IndCreatedOutsideHLT]<sp/>=<sp/>1)<sp/>:<sp/>(m_headerResult[IndCreatedOutsideHLT]<sp/>=<sp/>0)<sp/>;<sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1ac533d29f63b9618be7e68069d67b8b6a" kindref="member" tooltip="sets the key of the menu which was used to trigger this event">setConfigSuperMasterKey</ref>(uint32_t<sp/>key);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1a868f682a32cea5188c6fbfd064a2f907" kindref="member" tooltip="gets the key of the menu which was used to trigger this event">getConfigSuperMasterKey</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1ac2b1fd09544ca71d5122d03b58c8c804" kindref="member" tooltip="sets the key of the prescales config which was used to trigger this event">setConfigPrescalesKey</ref>(uint32_t<sp/>key);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1a0115f154d07ba1c1aa83ba82cbeeae04" kindref="member" tooltip="gets the key of the prescales config which was used to trigger this event">getConfigPrescalesKey</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="d9/d4b/classHLT_1_1HLTResult_1ab78daf818f1ee045553ce0c69c36fe68" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1ab78daf818f1ee045553ce0c69c36fe68" kindref="member" tooltip="is serialized HLTResult truncated">isHLTResultTruncated</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(m_headerResult[IndHLTResultTruncated]<sp/>==<sp/>0<sp/>?<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setHLTResultTruncated(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>truncated)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_headerResult[IndHLTResultTruncated]<sp/>=<sp/>truncated<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="d9/d4b/classHLT_1_1HLTResult_1a97605017fd8c6f49723d2fa66b61b0bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint32_t&gt;&amp;<sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1a97605017fd8c6f49723d2fa66b61b0bf" kindref="member" tooltip="retrieve the sub-payloads (can be used to retrieve/write data)">getNavigationResult</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_navigationResult;<sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint32_t&gt;&amp;<sp/>getNavigationResult_DSonly()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_navigationResult_DSonly;<sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint32_t&gt;&amp;<sp/>getChainResult<sp/><sp/><sp/><sp/><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_chainsResult;<sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint32_t&gt;&amp;<sp/>getExtras()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_extras;<sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="d9/d4b/classHLT_1_1HLTResult_1a2c34b7f053ea325c80bab7f35bae1892" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;unsigned<sp/>int&gt;&amp;<sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1a2c34b7f053ea325c80bab7f35bae1892" kindref="member" tooltip="gets ref to the internal array holding places for safe navigation truncations">getNavigationResultCuts</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_navigationResultCuts;<sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;unsigned<sp/>int&gt;&amp;<sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1a2c34b7f053ea325c80bab7f35bae1892" kindref="member" tooltip="gets ref to the internal array holding places for safe navigation truncations">getNavigationResultCuts</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_navigationResultCuts;<sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="255" refid="d9/d4b/classHLT_1_1HLTResult_1a1421bff563946dc40ff28b34969317f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;unsigned<sp/>int&gt;&amp;<sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1a1421bff563946dc40ff28b34969317f7" kindref="member" tooltip="gets ref to the internal array holding places for safe navigation truncations">getNavigationResultCuts_DSonly</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_navigationResultCuts_DSonly;<sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;unsigned<sp/>int&gt;&amp;<sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1a1421bff563946dc40ff28b34969317f7" kindref="member" tooltip="gets ref to the internal array holding places for safe navigation truncations">getNavigationResultCuts_DSonly</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_navigationResultCuts_DSonly;<sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="d9/d4b/classHLT_1_1HLTResult_1a02c626b3a95edca619462705cd473bd6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::pair<sp/>&lt;CLID,<sp/>std::string&gt;<sp/>&gt;&amp;<sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1a02c626b3a95edca619462705cd473bd6" kindref="member" tooltip="gets ref to the internal vector of pairs of CLID and collection name">getNavigationResultIDName</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_id_name;<sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>std::pair<sp/>&lt;CLID,<sp/>std::string&gt;<sp/>&gt;&amp;<sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1a02c626b3a95edca619462705cd473bd6" kindref="member" tooltip="gets ref to the internal vector of pairs of CLID and collection name">getNavigationResultIDName</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_id_name;<sp/>}</highlight></codeline>
<codeline lineno="266" refid="d9/d4b/classHLT_1_1HLTResult_1a0971d7e12dc5cee77465e6e933a6df73" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::pair<sp/>&lt;CLID,<sp/>std::string&gt;<sp/>&gt;&amp;<sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1a0971d7e12dc5cee77465e6e933a6df73" kindref="member" tooltip="gets ref to the internal vector of pairs of CLID and collection name">getNavigationResultIDName_DSonly</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_id_name_DSonly;<sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>std::pair<sp/>&lt;CLID,<sp/>std::string&gt;<sp/>&gt;&amp;<sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1a0971d7e12dc5cee77465e6e933a6df73" kindref="member" tooltip="gets ref to the internal vector of pairs of CLID and collection name">getNavigationResultIDName_DSonly</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_id_name_DSonly;<sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="d9/d4b/classHLT_1_1HLTResult_1a6967a5aa8f601e02fd0f291d97eff6cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint32_t&gt;&amp;<sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1a6967a5aa8f601e02fd0f291d97eff6cb" kindref="member" tooltip="gets ref to the internal array holding serialized navigation">getNavigationResult</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_navigationResult;<sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="d9/d4b/classHLT_1_1HLTResult_1adfb7475e1a591074217c222e7bc7e861" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint32_t&gt;&amp;<sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1adfb7475e1a591074217c222e7bc7e861" kindref="member" tooltip="gets ref to the internal array holding serialized navigation">getNavigationResult_DSonly</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_navigationResult_DSonly;<sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="d9/d4b/classHLT_1_1HLTResult_1a1e861dff98a6936a70cd544e6c275123" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint32_t&gt;&amp;<sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1a1e861dff98a6936a70cd544e6c275123" kindref="member" tooltip="gets ref to the internal array holding serialized chains">getChainResult</ref><sp/><sp/><sp/><sp/><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_chainsResult;<sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>gets<sp/>piece<sp/>of<sp/>extra<sp/>information</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@warning<sp/>This<sp/>method<sp/>should<sp/>not<sp/>be<sp/>used.<sp/>Use<sp/>getExtraData()<sp/>to<sp/>modify<sp/>the<sp/>payload<sp/>object.</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint32_t&gt;&amp;<sp/>getExtras()<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_extras;<sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="d9/d4b/classHLT_1_1HLTResult_1aed541d84a8b84ca895c251aeea431d69" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;unsigned<sp/>int,<sp/>std::set&lt;std::pair&lt;CLID,<sp/>std::string&gt;<sp/>&gt;<sp/>&gt;&amp;<sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1aed541d84a8b84ca895c251aeea431d69" kindref="member" tooltip="methods to get and set the Scouting Map saved into HLTResult">getScoutingMap</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>m_modID_id_name;}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;unsigned<sp/>int,<sp/>std::set&lt;std::pair&lt;CLID,<sp/>std::string&gt;<sp/>&gt;<sp/>&gt;&amp;<sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1aed541d84a8b84ca895c251aeea431d69" kindref="member" tooltip="methods to get and set the Scouting Map saved into HLTResult">getScoutingMap</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>m_modID_id_name;}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/>setScoutingMap(std::map&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>std::set&lt;std::pair&lt;CLID,<sp/>std::string&gt;<sp/>&gt;<sp/>&gt;<sp/>map_modid_clid_name)<sp/>{m_modID_id_name<sp/>=<sp/>map_modid_clid_name;}<sp/><sp/></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Return<sp/>object<sp/>representing<sp/>the<sp/>extra<sp/>payload</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>HLTExtraData&amp;<sp/>getExtraData();</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>HLTExtraData&amp;<sp/>getExtraData()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="d9/d4b/classHLT_1_1HLTResult_1a8d9621f0920710aeec1be96c4e111a5f" kindref="member" tooltip="constructor">HLTResult</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)-&gt;getExtraData();</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>gets<sp/>size<sp/>of<sp/>the<sp/>rawResult<sp/>(in<sp/>words)</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>gets<sp/>sizes<sp/>of<sp/>3<sp/>main<sp/>parts<sp/>of<sp/>the<sp/>result<sp/>(in<sp/>words)</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;unsigned<sp/>int&gt;<sp/>partSizes()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1aaf3115478a8fb34c1942cfc17d55b710" kindref="member" tooltip="true if result is empty">isEmpty</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::vector&lt;std::pair&lt;unsigned<sp/>int,<sp/>std::string&gt;<sp/>&gt;<sp/>getSatisfiedSigs();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1a0f260095e0c664ae90e5302fbcae91ff" kindref="member" tooltip="return the rob module ID vector">listOfModIDs</ref>(std::vector&lt;unsigned<sp/>int&gt;&amp;<sp/>mod_ids)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;unsigned<sp/>int&gt;<sp/><ref refid="d9/d4b/classHLT_1_1HLTResult_1a0f260095e0c664ae90e5302fbcae91ff" kindref="member" tooltip="return the rob module ID vector">listOfModIDs</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">HLTResultCnv_p1;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>InitBits<sp/>{<sp/>IndHLTResultClassVersion<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IndEventNumber,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IndHLTDecision,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IndPassThrough,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IndHLTStatus,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IndLvlConverterStatus,<sp/></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IndHLTLevelInfo,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IndNumOfSatisfiedSigs,<sp/></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IndErrorInChain,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IndErrorInStep,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IndCreatedOutsideHLT,<sp/><sp/></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IndHLTResultTruncated,<sp/></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IndConfigSuperMasterKey,<sp/></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IndConfigPrescalesKey,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IndNumOfFixedBit<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>CutPairs<sp/>=<sp/>std::vector&lt;std::pair&lt;unsigned<sp/>int,<sp/>unsigned<sp/>int&gt;&gt;;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>CutPairVecs<sp/>=<sp/>std::pair&lt;CutPairs,<sp/>CutPairs&gt;;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Serialize<sp/>the<sp/>regular<sp/>result</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>serialize_regular(uint32_t*&amp;<sp/>output,</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>data_size,</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_size);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Serialize<sp/>the<sp/>DS<sp/>result<sp/>corresponding<sp/>to<sp/>the<sp/>given<sp/>mod_id</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>serialize_DS(uint32_t*&amp;<sp/>output,</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>data_size,</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_size,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mod_id);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Bootstrap<sp/>the<sp/>serialization<sp/>by<sp/>serializing<sp/>an<sp/>initial<sp/>portion<sp/>of<sp/>the<sp/>end</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>result<sp/>which<sp/>is<sp/>common<sp/>to<sp/>both<sp/>regular<sp/>and<sp/>DS<sp/>results</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>serialize_bootstrap(uint32_t*&amp;<sp/>output,</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>data_size,</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>truncating,</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_size,</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>estimated_size);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="395"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Serialize<sp/>the<sp/>body<sp/>of<sp/>the<sp/>regular<sp/>result,<sp/>that<sp/>is,<sp/>everything<sp/>after<sp/>the</highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>bootstrap<sp/>part</highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>serialize_body_regular(uint32_t*<sp/>output,</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>data_size,</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>umax_size,</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>truncating)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="404"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Serialize<sp/>the<sp/>body<sp/>of<sp/>a<sp/>DS<sp/>result,<sp/>that<sp/>is,<sp/>everything<sp/>after<sp/>the</highlight></codeline>
<codeline lineno="405"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>bootstrap<sp/>part</highlight></codeline>
<codeline lineno="406"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>serialize_body_DS(uint32_t*<sp/>output,</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>data_size,</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_size,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nav_size,</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CutPairVecs&amp;<sp/>dscuts,</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>truncating)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="415"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Serialize<sp/>the<sp/>navigation<sp/>part<sp/>of<sp/>the<sp/>regular<sp/>result</highlight></codeline>
<codeline lineno="416"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>serialize_navigation_reg(uint32_t*<sp/>output,</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>data_size,</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>umax_size,</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>truncating)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="423"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Serialize<sp/>the<sp/>navigation<sp/>part<sp/>of<sp/>a<sp/>DS<sp/>result</highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>serialize_navigation_DS(uint32_t*<sp/>output,</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>data_size,</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>umax_size,</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nav_size,</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CutPairVecs&amp;<sp/>dscuts,</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>truncating)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="433"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Update<sp/>serialized<sp/>extra<sp/>data</highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateExtras();</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>estimateSize()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>calc_total_size_DS(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ds_nav_size);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>CutPairVecs<sp/>findDSCuts(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>unpackFromStorable(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint32_t&gt;&amp;<sp/>raw);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>m_HLTResultClassVersion;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint32_t&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_headerResult;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint32_t&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_chainsResult;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint32_t&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_navigationResult;<sp/><sp/></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint32_t&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_navigationResult_DSonly;<sp/><sp/></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint32_t&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_extras;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::pair<sp/>&lt;<sp/>CLID,<sp/>std::string<sp/>&gt;<sp/>&gt;<sp/><sp/><sp/><sp/><sp/>m_id_name;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::pair<sp/>&lt;<sp/>CLID,<sp/>std::string<sp/>&gt;<sp/>&gt;<sp/><sp/><sp/><sp/><sp/>m_id_name_DSonly;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;unsigned<sp/>int,<sp/>std::set&lt;std::pair&lt;CLID,<sp/>std::string&gt;<sp/>&gt;<sp/>&gt;<sp/>m_modID_id_name;<sp/></highlight><highlight class="comment">//<sp/>map<sp/>from<sp/>rob<sp/>module<sp/>ID<sp/>to<sp/>class<sp/>ID<sp/>and<sp/>collection<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>std::vector&lt;unsigned<sp/>int&gt;<sp/>m_navigationResultCuts;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>std::vector&lt;unsigned<sp/>int&gt;<sp/>m_navigationResultCuts_DSonly;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>HLTExtraData*<sp/>m_extraData;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/ded/ConstDataList_8h_1a67766f262856f1e197e15fec33b60bac" kindref="member" tooltip="See DataList&amp;lt;T, BASE&amp;gt;::swap().">swap</ref>(HLTResult&amp;<sp/>lhs,<sp/>HLTResult&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal">CLASS_DEF(<ref refid="d9/d4b/classHLT_1_1HLTResult" kindref="compound" tooltip="HLT::HLTResult is sumarising result of trigger decision evaluation (online/offline)...">HLT::HLTResult</ref>,<sp/>107385089,<sp/>1)</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="497"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/HLTResult.h"/>
  </compounddef>
</doxygen>
