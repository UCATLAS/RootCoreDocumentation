<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="de/dd6/BackgroundWorker_8cxx" kind="file">
    <compoundname>BackgroundWorker.cxx</compoundname>
    <includes refid="d2/ddb/BackgroundWorker_8h" local="no">EventLoop/BackgroundWorker.h</includes>
    <includes refid="d7/d36/Algorithm_8h" local="no">EventLoop/Algorithm.h</includes>
    <includes refid="d3/d77/BackgroundJob_8h" local="no">EventLoop/BackgroundJob.h</includes>
    <includes refid="df/db2/BackgroundSocket_8h" local="no">EventLoop/BackgroundSocket.h</includes>
    <includes refid="da/d9f/OutputStream_8h" local="no">EventLoop/OutputStream.h</includes>
    <includes refid="d3/dac/Assert_8h" local="no">RootCoreUtils/Assert.h</includes>
    <includes refid="d7/d58/ShellExec_8h" local="no">RootCoreUtils/ShellExec.h</includes>
    <includes refid="dd/db7/ThrowMsg_8h" local="no">RootCoreUtils/ThrowMsg.h</includes>
    <includes refid="d8/da4/DiskOutput_8h" local="no">SampleHandler/DiskOutput.h</includes>
    <includes refid="d2/d7b/MetaFields_8h" local="no">SampleHandler/MetaFields.h</includes>
    <includes local="no">TFile.h</includes>
    <incdepgraph>
      <node id="127879">
        <label>SampleHandler/SampleHandler.h</label>
        <link refid="d2/da1/SampleHandler_8h_source"/>
        <childnode refid="127865" relation="include">
        </childnode>
        <childnode refid="127861" relation="include">
        </childnode>
        <childnode refid="127880" relation="include">
        </childnode>
        <childnode refid="127860" relation="include">
        </childnode>
        <childnode refid="127862" relation="include">
        </childnode>
        <childnode refid="127878" relation="include">
        </childnode>
      </node>
      <node id="127864">
        <label>TList.h</label>
      </node>
      <node id="127868">
        <label>EventLoop/StatusCode.h</label>
        <link refid="d0/d16/EventLoop_2EventLoop_2StatusCode_8h_source"/>
        <childnode refid="127858" relation="include">
        </childnode>
      </node>
      <node id="127869">
        <label>EventLoop/BackgroundJob.h</label>
        <link refid="d3/d77/BackgroundJob_8h_source"/>
        <childnode refid="127858" relation="include">
        </childnode>
        <childnode refid="127870" relation="include">
        </childnode>
      </node>
      <node id="127873">
        <label>RootCoreUtils/Deprecated.h</label>
        <link refid="d1/d0f/RootCoreUtils_2RootCoreUtils_2Deprecated_8h_source"/>
        <childnode refid="127872" relation="include">
        </childnode>
      </node>
      <node id="127857">
        <label>EventLoop/BackgroundWorker.h</label>
        <link refid="d2/ddb/BackgroundWorker_8h_source"/>
        <childnode refid="127858" relation="include">
        </childnode>
        <childnode refid="127859" relation="include">
        </childnode>
      </node>
      <node id="127874">
        <label>string</label>
      </node>
      <node id="127860">
        <label>map</label>
      </node>
      <node id="127881">
        <label>RootCoreUtils/ShellExec.h</label>
        <link refid="d7/d58/ShellExec_8h_source"/>
        <childnode refid="127872" relation="include">
        </childnode>
        <childnode refid="127874" relation="include">
        </childnode>
      </node>
      <node id="127870">
        <label>SampleHandler/MetaObject.h</label>
        <link refid="d7/d50/MetaObject_8h_source"/>
        <childnode refid="127865" relation="include">
        </childnode>
        <childnode refid="127871" relation="include">
        </childnode>
        <childnode refid="127873" relation="include">
        </childnode>
        <childnode refid="127874" relation="include">
        </childnode>
        <childnode refid="127875" relation="include">
        </childnode>
      </node>
      <node id="127858">
        <label>EventLoop/Global.h</label>
        <link refid="d1/daf/EventLoop_2EventLoop_2Global_8h_source"/>
      </node>
      <node id="127886">
        <label>SampleHandler/MetaFields.h</label>
        <link refid="d2/d7b/MetaFields_8h_source"/>
        <childnode refid="127865" relation="include">
        </childnode>
        <childnode refid="127874" relation="include">
        </childnode>
      </node>
      <node id="127878">
        <label>TObject.h</label>
      </node>
      <node id="127862">
        <label>vector</label>
      </node>
      <node id="127887">
        <label>TFile.h</label>
      </node>
      <node id="127872">
        <label>RootCoreUtils/Global.h</label>
        <link refid="d6/d7f/RootCoreUtils_2RootCoreUtils_2Global_8h_source"/>
      </node>
      <node id="127884">
        <label>RootCoreUtils/MessageType.h</label>
        <link refid="dd/d02/MessageType_8h_source"/>
        <childnode refid="127872" relation="include">
        </childnode>
      </node>
      <node id="127863">
        <label>Rtypes.h</label>
      </node>
      <node id="127880">
        <label>iosfwd</label>
      </node>
      <node id="127876">
        <label>EventLoop/BackgroundSocket.h</label>
        <link refid="df/db2/BackgroundSocket_8h_source"/>
        <childnode refid="127858" relation="include">
        </childnode>
        <childnode refid="127861" relation="include">
        </childnode>
        <childnode refid="127874" relation="include">
        </childnode>
      </node>
      <node id="127859">
        <label>EventLoop/Worker.h</label>
        <link refid="dc/db3/Worker_8h_source"/>
        <childnode refid="127858" relation="include">
        </childnode>
        <childnode refid="127860" relation="include">
        </childnode>
        <childnode refid="127861" relation="include">
        </childnode>
        <childnode refid="127862" relation="include">
        </childnode>
        <childnode refid="127863" relation="include">
        </childnode>
        <childnode refid="127864" relation="include">
        </childnode>
        <childnode refid="127865" relation="include">
        </childnode>
      </node>
      <node id="127866">
        <label>EventLoop/Algorithm.h</label>
        <link refid="d7/d36/Algorithm_8h_source"/>
        <childnode refid="127858" relation="include">
        </childnode>
        <childnode refid="127867" relation="include">
        </childnode>
        <childnode refid="127868" relation="include">
        </childnode>
      </node>
      <node id="127867">
        <label>TNamed.h</label>
      </node>
      <node id="127856">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/Root/BackgroundWorker.cxx</label>
        <link refid="BackgroundWorker.cxx"/>
        <childnode refid="127857" relation="include">
        </childnode>
        <childnode refid="127866" relation="include">
        </childnode>
        <childnode refid="127869" relation="include">
        </childnode>
        <childnode refid="127876" relation="include">
        </childnode>
        <childnode refid="127877" relation="include">
        </childnode>
        <childnode refid="127871" relation="include">
        </childnode>
        <childnode refid="127881" relation="include">
        </childnode>
        <childnode refid="127882" relation="include">
        </childnode>
        <childnode refid="127885" relation="include">
        </childnode>
        <childnode refid="127886" relation="include">
        </childnode>
        <childnode refid="127887" relation="include">
        </childnode>
      </node>
      <node id="127883">
        <label>RootCoreUtils/PrintMsg.h</label>
        <link refid="d2/d5f/PrintMsg_8h_source"/>
        <childnode refid="127872" relation="include">
        </childnode>
        <childnode refid="127874" relation="include">
        </childnode>
        <childnode refid="127884" relation="include">
        </childnode>
      </node>
      <node id="127882">
        <label>RootCoreUtils/ThrowMsg.h</label>
        <link refid="dd/db7/ThrowMsg_8h_source"/>
        <childnode refid="127872" relation="include">
        </childnode>
        <childnode refid="127883" relation="include">
        </childnode>
      </node>
      <node id="127885">
        <label>SampleHandler/DiskOutput.h</label>
        <link refid="d8/da4/DiskOutput_8h_source"/>
        <childnode refid="127865" relation="include">
        </childnode>
        <childnode refid="127878" relation="include">
        </childnode>
      </node>
      <node id="127871">
        <label>RootCoreUtils/Assert.h</label>
        <link refid="d3/dac/Assert_8h_source"/>
        <childnode refid="127872" relation="include">
        </childnode>
      </node>
      <node id="127865">
        <label>SampleHandler/Global.h</label>
        <link refid="d3/df9/SampleHandler_2SampleHandler_2Global_8h_source"/>
      </node>
      <node id="127861">
        <label>memory</label>
      </node>
      <node id="127877">
        <label>EventLoop/OutputStream.h</label>
        <link refid="da/d9f/OutputStream_8h_source"/>
        <childnode refid="127858" relation="include">
        </childnode>
        <childnode refid="127862" relation="include">
        </childnode>
        <childnode refid="127878" relation="include">
        </childnode>
        <childnode refid="127870" relation="include">
        </childnode>
        <childnode refid="127879" relation="include">
        </childnode>
      </node>
      <node id="127875">
        <label>TCollection.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="da/d9f/namespaceEL">EL</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>Nils<sp/>Krumnack<sp/>2011.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>(See<sp/>accompanying<sp/>file<sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Please<sp/>feel<sp/>free<sp/>to<sp/>contact<sp/>me<sp/>(krumnack@iastate.edu)<sp/>for<sp/>bug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>reports,<sp/>feature<sp/>suggestions,<sp/>praise<sp/>and<sp/>complaints.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EventLoop/BackgroundWorker.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EventLoop/Algorithm.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EventLoop/BackgroundJob.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EventLoop/BackgroundSocket.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EventLoop/OutputStream.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;RootCoreUtils/Assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;RootCoreUtils/ShellExec.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;RootCoreUtils/ThrowMsg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SampleHandler/DiskOutput.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SampleHandler/MetaFields.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TFile.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>method<sp/>implementations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">EL</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/de8/classEL_1_1BackgroundWorker_1a8335aa58b21dec389b552db8190a2f8c" kindref="member" tooltip="execute the job">BackgroundWorker ::</ref></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><ref refid="d9/de8/classEL_1_1BackgroundWorker_1a8335aa58b21dec389b552db8190a2f8c" kindref="member" tooltip="execute the job">  execute</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val_socket)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>BackgroundSocket<sp/>socket<sp/>(val_socket);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>TList<sp/>output;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>outputFile;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>std::auto_ptr&lt;BackgroundJob&gt;<sp/>job;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>std::auto_ptr&lt;BackgroundWorker&gt;<sp/>worker;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>std::auto_ptr&lt;TFile&gt;<sp/>file;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/db5/classEL_1_1BackgroundSocket_1a7fa002ed9305506f7b4b4f3d9dfe47e5" kindref="member" tooltip="the type of message we send around">BackgroundSocket::Type</ref><sp/>type<sp/>=<sp/><ref refid="df/db5/classEL_1_1BackgroundSocket_1a7fa002ed9305506f7b4b4f3d9dfe47e5a99d8c7f280886a77ac2b1a153941fdeb" kindref="member" tooltip="an invalid message">BackgroundSocket::T_INVALID</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>payload;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>socket.read<sp/>(type,<sp/>payload);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(type)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="df/db5/classEL_1_1BackgroundSocket_1a7fa002ed9305506f7b4b4f3d9dfe47e5ae4695468cc972b11575d8727fbb2ec75" kindref="member" tooltip="start the job">BackgroundSocket::T_START_JOB</ref>:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_ASSERT_SOFT<sp/>(worker.get()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::auto_ptr&lt;TFile&gt;<sp/>file<sp/>(TFile::Open<sp/>((payload<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/job.root&quot;</highlight><highlight class="normal">).c_str(),<sp/></highlight><highlight class="stringliteral">&quot;READ&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file.get()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCU_THROW_MSG<sp/>(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>open<sp/>file:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>payload);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TObject<sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>file-&gt;Get<sp/>(</highlight><highlight class="stringliteral">&quot;job&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCU_THROW_MSG<sp/>(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>read<sp/>job<sp/>object<sp/>from<sp/>file:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>payload);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>job.reset<sp/>(dynamic_cast&lt;BackgroundJob*&gt;(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(job.get()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCU_THROW_MSG<sp/>(</highlight><highlight class="stringliteral">&quot;job<sp/>object<sp/>not<sp/>of<sp/>Job<sp/>type<sp/>in<sp/>file:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>payload<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>object-&gt;ClassName());</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>worker.reset<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d9/de8/classEL_1_1BackgroundWorker_1afe39e77bb4c39703b0c7222ef3b9f14f" kindref="member" tooltip="standard constructor">BackgroundWorker</ref><sp/>(*job,<sp/>&amp;output));</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU::Shell::exec<sp/>(</highlight><highlight class="stringliteral">&quot;rm<sp/>-rf<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>payload);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="df/db5/classEL_1_1BackgroundSocket_1a7fa002ed9305506f7b4b4f3d9dfe47e5aa141ba2ecfe3d0033478d1302badffd4" kindref="member" tooltip="set the next input file">BackgroundSocket::T_SET_INPUT_FILE</ref>:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_ASSERT_SOFT<sp/>(worker.get()<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file.get()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>worker-&gt;algsEndOfFile<sp/>();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>file.reset<sp/>();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>file.reset<sp/>(TFile::Open<sp/>(payload.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;READ&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>worker-&gt;setInputFile<sp/>(file.get());</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>worker-&gt;algsChangeInput<sp/>();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="df/db5/classEL_1_1BackgroundSocket_1a7fa002ed9305506f7b4b4f3d9dfe47e5a4eb08a852ff6f06e40503492ced29151" kindref="member" tooltip="set the tree entry">BackgroundSocket::T_SET_ENTRY</ref>:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RCU_ASSERT_SOFT<sp/>(worker.get()<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Long64_t<sp/>entry<sp/>=<sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">Long64_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(payload.data());</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>worker-&gt;treeEntry<sp/>(entry);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="df/db5/classEL_1_1BackgroundSocket_1a7fa002ed9305506f7b4b4f3d9dfe47e5a668fc6c16674c0effdfc52caaad32168" kindref="member" tooltip="execute the event">BackgroundSocket::T_EXECUTE</ref>:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_ASSERT_SOFT<sp/>(worker.get()<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>worker-&gt;algsExecute<sp/>();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>socket.write<sp/>(<ref refid="df/db5/classEL_1_1BackgroundSocket_1a7fa002ed9305506f7b4b4f3d9dfe47e5adb41863807b5f43cd9c2b1da63fdb4d8" kindref="member" tooltip="confirm a T_EXECUTE">BackgroundSocket::T_EXECUTE_CONFIRM</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="df/db5/classEL_1_1BackgroundSocket_1a7fa002ed9305506f7b4b4f3d9dfe47e5a078788c6fdb1e04547cb42e80f758ad2" kindref="member" tooltip="end the job">BackgroundSocket::T_END_JOB</ref>:</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(worker.get()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file.get()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>worker-&gt;algsEndOfFile<sp/>();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file.reset<sp/>();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>worker-&gt;algsFinalize<sp/>();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::auto_ptr&lt;TFile&gt;<sp/>file<sp/>(TFile::Open<sp/>(payload.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;RECREATE&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>file-&gt;WriteObject<sp/>(&amp;output,<sp/></highlight><highlight class="stringliteral">&quot;hist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>socket.write<sp/>(<ref refid="df/db5/classEL_1_1BackgroundSocket_1a7fa002ed9305506f7b4b4f3d9dfe47e5a7cdc34f223ccab4a54b0558d28233144" kindref="member" tooltip="confirm a T_END_JOB">BackgroundSocket::T_END_JOB_CONFIRM</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="df/db5/classEL_1_1BackgroundSocket_1a7fa002ed9305506f7b4b4f3d9dfe47e5adb41863807b5f43cd9c2b1da63fdb4d8" kindref="member" tooltip="confirm a T_EXECUTE">BackgroundSocket::T_EXECUTE_CONFIRM</ref>:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="df/db5/classEL_1_1BackgroundSocket_1a7fa002ed9305506f7b4b4f3d9dfe47e5a7cdc34f223ccab4a54b0558d28233144" kindref="member" tooltip="confirm a T_END_JOB">BackgroundSocket::T_END_JOB_CONFIRM</ref>:</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="df/db5/classEL_1_1BackgroundSocket_1a7fa002ed9305506f7b4b4f3d9dfe47e5a99d8c7f280886a77ac2b1a153941fdeb" kindref="member" tooltip="an invalid message">BackgroundSocket::T_INVALID</ref>:</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_THROW_MSG<sp/>(</highlight><highlight class="stringliteral">&quot;read<sp/>invalid<sp/>message&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//compiler<sp/>dummy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d9/de8/classEL_1_1BackgroundWorker_1a24ba2f8803025159db971229f2dee45d" kindref="member" tooltip="test the invariant of this object">BackgroundWorker ::</ref></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><ref refid="d9/de8/classEL_1_1BackgroundWorker_1a24ba2f8803025159db971229f2dee45d" kindref="member" tooltip="test the invariant of this object">  testInvariant</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="116"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><ref refid="d9/de8/classEL_1_1BackgroundWorker_1afe39e77bb4c39703b0c7222ef3b9f14f" kindref="member" tooltip="standard constructor">BackgroundWorker ::</ref></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><ref refid="d9/de8/classEL_1_1BackgroundWorker_1afe39e77bb4c39703b0c7222ef3b9f14f" kindref="member" tooltip="standard constructor">  BackgroundWorker</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BackgroundJob&amp;<sp/>job,<sp/>TList<sp/>*output)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>Worker<sp/>(&amp;job.meta,<sp/>output)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>name<sp/>=</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>job.meta.castString<sp/>(<ref refid="d7/d06/structSH_1_1MetaFields_1af312f8b1178d172b7f872e3849722ed0" kindref="member" tooltip="the name of the sample">SH::MetaFields::sampleName</ref>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::vector&lt;OutputStream&gt;::const_iterator<sp/>out<sp/>=<sp/>job.output.begin(),</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>=<sp/>job.output.end();<sp/>out<sp/>!=<sp/>end;<sp/>++<sp/>out)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addOutputWriter<sp/>(out-&gt;label(),<sp/>out-&gt;output()-&gt;makeWriter<sp/>(name,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::vector&lt;Algorithm*&gt;::const_iterator<sp/>alg<sp/>=<sp/>job.algs.begin(),</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>=<sp/>job.algs.end();<sp/>alg<sp/>!=<sp/>end;<sp/>++<sp/>alg)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/d12/classEL_1_1Worker_1aca936d72198faafde477941f61ffeed4" kindref="member">addAlg</ref><sp/>(dynamic_cast&lt;Algorithm*&gt;((*alg)-&gt;Clone<sp/>()));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_NEW_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/Root/BackgroundWorker.cxx"/>
  </compounddef>
</doxygen>
