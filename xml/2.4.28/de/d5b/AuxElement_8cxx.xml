<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="de/d5b/AuxElement_8cxx" kind="file">
    <compoundname>AuxElement.cxx</compoundname>
    <includes refid="d1/d6f/AuxElement_8h" local="yes">AthContainers/AuxElement.h</includes>
    <includes refid="d7/d41/AuxStoreStandalone_8h" local="yes">AthContainers/AuxStoreStandalone.h</includes>
    <includes refid="d4/d03/exceptions_8h" local="yes">AthContainers/exceptions.h</includes>
    <includes refid="da/d8e/foreach_8h" local="yes">AthContainers/tools/foreach.h</includes>
    <incdepgraph>
      <node id="71207">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="71209">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="71163" relation="include">
        </childnode>
        <childnode refid="71165" relation="include">
        </childnode>
        <childnode refid="71172" relation="include">
        </childnode>
        <childnode refid="71173" relation="include">
        </childnode>
      </node>
      <node id="71210">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="71175">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="71159" relation="include">
        </childnode>
        <childnode refid="71161" relation="include">
        </childnode>
        <childnode refid="71176" relation="include">
        </childnode>
        <childnode refid="71174" relation="include">
        </childnode>
      </node>
      <node id="71171">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="71173">
        <label>functional</label>
      </node>
      <node id="71169">
        <label>limits</label>
      </node>
      <node id="71176">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="71205">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="71166">
        <label>iterator</label>
      </node>
      <node id="71193">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="71170" relation="include">
        </childnode>
        <childnode refid="71194" relation="include">
        </childnode>
      </node>
      <node id="71217">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="71160" relation="include">
        </childnode>
        <childnode refid="71218" relation="include">
        </childnode>
        <childnode refid="71219" relation="include">
        </childnode>
        <childnode refid="71185" relation="include">
        </childnode>
        <childnode refid="71170" relation="include">
        </childnode>
      </node>
      <node id="71189">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="71190" relation="include">
        </childnode>
        <childnode refid="71167" relation="include">
        </childnode>
      </node>
      <node id="71178">
        <label>stdint.h</label>
      </node>
      <node id="71186">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="71161" relation="include">
        </childnode>
        <childnode refid="71185" relation="include">
        </childnode>
      </node>
      <node id="71227">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="71224">
        <label>AthContainersInterfaces/IAuxStoreIO.h</label>
        <link refid="d9/db5/IAuxStoreIO_8h"/>
        <childnode refid="71160" relation="include">
        </childnode>
        <childnode refid="71185" relation="include">
        </childnode>
        <childnode refid="71225" relation="include">
        </childnode>
        <childnode refid="71174" relation="include">
        </childnode>
      </node>
      <node id="71181">
        <label>RVersion.h</label>
      </node>
      <node id="71162">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="71163" relation="include">
        </childnode>
        <childnode refid="71172" relation="include">
        </childnode>
        <childnode refid="71173" relation="include">
        </childnode>
      </node>
      <node id="71168">
        <label>cmath</label>
      </node>
      <node id="71221">
        <label>cassert</label>
      </node>
      <node id="71219">
        <label>stdexcept</label>
      </node>
      <node id="71208">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="71170">
        <label>string</label>
      </node>
      <node id="71211">
        <label>AthContainers/AuxVectorData.h</label>
        <link refid="d9/df2/AuxVectorData_8h"/>
        <childnode refid="71160" relation="include">
        </childnode>
        <childnode refid="71159" relation="include">
        </childnode>
        <childnode refid="71193" relation="include">
        </childnode>
        <childnode refid="71189" relation="include">
        </childnode>
        <childnode refid="71177" relation="include">
        </childnode>
        <childnode refid="71212" relation="include">
        </childnode>
        <childnode refid="71213" relation="include">
        </childnode>
        <childnode refid="71196" relation="include">
        </childnode>
        <childnode refid="71190" relation="include">
        </childnode>
        <childnode refid="71165" relation="include">
        </childnode>
        <childnode refid="71167" relation="include">
        </childnode>
        <childnode refid="71214" relation="include">
        </childnode>
        <childnode refid="71215" relation="include">
        </childnode>
        <childnode refid="71203" relation="include">
        </childnode>
        <childnode refid="71216" relation="include">
        </childnode>
      </node>
      <node id="71184">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="71161" relation="include">
        </childnode>
        <childnode refid="71185" relation="include">
        </childnode>
      </node>
      <node id="71214">
        <label>AthContainers/tools/likely.h</label>
        <link refid="d6/dd6/likely_8h"/>
      </node>
      <node id="71182">
        <label>RootMetaSelection.h</label>
      </node>
      <node id="71200">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="71215">
        <label>AthContainers/tools/assume.h</label>
        <link refid="d2/d20/assume_8h"/>
      </node>
      <node id="71197">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="71158">
        <label>AthContainersInterfaces/IAuxElement.h</label>
        <link refid="dd/d7a/IAuxElement_8h"/>
      </node>
      <node id="71180">
        <label>AthLinks/tools/selection_ns.h</label>
        <link refid="d3/dec/selection__ns_8h"/>
        <childnode refid="71181" relation="include">
        </childnode>
        <childnode refid="71182" relation="include">
        </childnode>
      </node>
      <node id="71213">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="71226">
        <label>AthContainers/tools/foreach.h</label>
        <link refid="da/d8e/foreach_8h"/>
        <childnode refid="71227" relation="include">
        </childnode>
      </node>
      <node id="71206">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="71192">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="71193" relation="include">
        </childnode>
        <childnode refid="71169" relation="include">
        </childnode>
        <childnode refid="71178" relation="include">
        </childnode>
        <childnode refid="71195" relation="include">
        </childnode>
      </node>
      <node id="71160">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="71161" relation="include">
        </childnode>
        <childnode refid="71162" relation="include">
        </childnode>
      </node>
      <node id="71163">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="71164" relation="include">
        </childnode>
        <childnode refid="71165" relation="include">
        </childnode>
        <childnode refid="71166" relation="include">
        </childnode>
        <childnode refid="71161" relation="include">
        </childnode>
        <childnode refid="71167" relation="include">
        </childnode>
        <childnode refid="71168" relation="include">
        </childnode>
        <childnode refid="71169" relation="include">
        </childnode>
        <childnode refid="71170" relation="include">
        </childnode>
        <childnode refid="71171" relation="include">
        </childnode>
      </node>
      <node id="71185">
        <label>typeinfo</label>
      </node>
      <node id="71220">
        <label>AthContainers/AuxElement.icc</label>
        <link refid="d2/d37/AuxElement_8icc"/>
        <childnode refid="71214" relation="include">
        </childnode>
        <childnode refid="71221" relation="include">
        </childnode>
      </node>
      <node id="71195">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="71212">
        <label>AthenaKernel/ILockable.h</label>
      </node>
      <node id="71179">
        <label>AthLinks/DataLinkBase.h</label>
        <link refid="db/da8/DataLinkBase_8h_source"/>
        <childnode refid="71178" relation="include">
        </childnode>
      </node>
      <node id="71194">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="71199">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="71156">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/AuxElement.cxx</label>
        <link refid="AuxElement.cxx"/>
        <childnode refid="71157" relation="include">
        </childnode>
        <childnode refid="71222" relation="include">
        </childnode>
        <childnode refid="71217" relation="include">
        </childnode>
        <childnode refid="71226" relation="include">
        </childnode>
      </node>
      <node id="71174">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="71183">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="71160" relation="include">
        </childnode>
        <childnode refid="71184" relation="include">
        </childnode>
        <childnode refid="71186" relation="include">
        </childnode>
        <childnode refid="71187" relation="include">
        </childnode>
        <childnode refid="71201" relation="include">
        </childnode>
        <childnode refid="71203" relation="include">
        </childnode>
        <childnode refid="71161" relation="include">
        </childnode>
        <childnode refid="71185" relation="include">
        </childnode>
        <childnode refid="71190" relation="include">
        </childnode>
        <childnode refid="71209" relation="include">
        </childnode>
        <childnode refid="71210" relation="include">
        </childnode>
      </node>
      <node id="71190">
        <label>vector</label>
      </node>
      <node id="71222">
        <label>AthContainers/AuxStoreStandalone.h</label>
        <link refid="d7/d41/AuxStoreStandalone_8h"/>
        <childnode refid="71223" relation="include">
        </childnode>
      </node>
      <node id="71165">
        <label>utility</label>
      </node>
      <node id="71196">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="71204">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="71188">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="71203">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="71204" relation="include">
        </childnode>
        <childnode refid="71205" relation="include">
        </childnode>
        <childnode refid="71206" relation="include">
        </childnode>
        <childnode refid="71207" relation="include">
        </childnode>
        <childnode refid="71208" relation="include">
        </childnode>
      </node>
      <node id="71167">
        <label>cstdlib</label>
      </node>
      <node id="71218">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="71159">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="71160" relation="include">
        </childnode>
        <childnode refid="71161" relation="include">
        </childnode>
        <childnode refid="71174" relation="include">
        </childnode>
      </node>
      <node id="71161">
        <label>cstddef</label>
      </node>
      <node id="71216">
        <label>AthContainers/AuxVectorData.icc</label>
        <link refid="da/de7/AuxVectorData_8icc"/>
        <childnode refid="71183" relation="include">
        </childnode>
        <childnode refid="71175" relation="include">
        </childnode>
        <childnode refid="71159" relation="include">
        </childnode>
        <childnode refid="71214" relation="include">
        </childnode>
        <childnode refid="71215" relation="include">
        </childnode>
      </node>
      <node id="71187">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="71184" relation="include">
        </childnode>
        <childnode refid="71188" relation="include">
        </childnode>
        <childnode refid="71189" relation="include">
        </childnode>
        <childnode refid="71191" relation="include">
        </childnode>
        <childnode refid="71196" relation="include">
        </childnode>
        <childnode refid="71185" relation="include">
        </childnode>
        <childnode refid="71190" relation="include">
        </childnode>
        <childnode refid="71164" relation="include">
        </childnode>
        <childnode refid="71178" relation="include">
        </childnode>
        <childnode refid="71198" relation="include">
        </childnode>
        <childnode refid="71199" relation="include">
        </childnode>
        <childnode refid="71200" relation="include">
        </childnode>
      </node>
      <node id="71198">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="71225">
        <label>set</label>
      </node>
      <node id="71202">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="71191">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="71188" relation="include">
        </childnode>
        <childnode refid="71192" relation="include">
        </childnode>
        <childnode refid="71196" relation="include">
        </childnode>
        <childnode refid="71190" relation="include">
        </childnode>
        <childnode refid="71197" relation="include">
        </childnode>
      </node>
      <node id="71164">
        <label>algorithm</label>
      </node>
      <node id="71223">
        <label>AthContainers/AuxStoreInternal.h</label>
        <link refid="d3/d0f/AuxStoreInternal_8h"/>
        <childnode refid="71175" relation="include">
        </childnode>
        <childnode refid="71224" relation="include">
        </childnode>
        <childnode refid="71203" relation="include">
        </childnode>
        <childnode refid="71196" relation="include">
        </childnode>
        <childnode refid="71190" relation="include">
        </childnode>
        <childnode refid="71176" relation="include">
        </childnode>
        <childnode refid="71174" relation="include">
        </childnode>
      </node>
      <node id="71157">
        <label>AthContainers/AuxElement.h</label>
        <link refid="d1/d6f/AuxElement_8h"/>
        <childnode refid="71158" relation="include">
        </childnode>
        <childnode refid="71159" relation="include">
        </childnode>
        <childnode refid="71175" relation="include">
        </childnode>
        <childnode refid="71177" relation="include">
        </childnode>
        <childnode refid="71183" relation="include">
        </childnode>
        <childnode refid="71211" relation="include">
        </childnode>
        <childnode refid="71189" relation="include">
        </childnode>
        <childnode refid="71217" relation="include">
        </childnode>
        <childnode refid="71214" relation="include">
        </childnode>
        <childnode refid="71161" relation="include">
        </childnode>
        <childnode refid="71220" relation="include">
        </childnode>
      </node>
      <node id="71177">
        <label>AthLinks/DataLink.h</label>
        <link refid="da/de8/DataLink_8h_source"/>
        <childnode refid="71178" relation="include">
        </childnode>
        <childnode refid="71170" relation="include">
        </childnode>
        <childnode refid="71179" relation="include">
        </childnode>
        <childnode refid="71180" relation="include">
        </childnode>
      </node>
      <node id="71172">
        <label>memory</label>
      </node>
      <node id="71201">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="71186" relation="include">
        </childnode>
        <childnode refid="71187" relation="include">
        </childnode>
        <childnode refid="71202" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="dc/dfb/classSG_1_1AuxElementData" prot="public">SG::AuxElementData</innerclass>
    <innerclass refid="da/d62/classSG_1_1AuxElementPrivateData" prot="public">SG::AuxElementPrivateData</innerclass>
    <innerclass refid="d5/dde/classSG_1_1AuxElementStandaloneData" prot="public">SG::AuxElementStandaloneData</innerclass>
    <innernamespace refid="dd/d59/namespaceSG">SG</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>$Id$</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d1/d6f/AuxElement_8h" kindref="compound" tooltip="Base class for elements of a container that can have aux data.">AthContainers/AuxElement.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d7/d41/AuxStoreStandalone_8h" kindref="compound" tooltip="Auxiliary data store for standalone objects.">AthContainers/AuxStoreStandalone.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d4/d03/exceptions_8h" kindref="compound" tooltip="Exceptions that can be thrown from AthContainers.">AthContainers/exceptions.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="da/d8e/foreach_8h" kindref="compound" tooltip="foreach helper for standalone build.">AthContainers/tools/foreach.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">SG<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="dc/dfb/classSG_1_1AuxElementData" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="dc/dfb/classSG_1_1AuxElementData" kindref="compound" tooltip="Internal data container.">AuxElementData</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="db/dd6/classSG_1_1AuxVectorData" kindref="compound" tooltip="Manage lookup of vectors of auxiliary data.">AuxVectorData</ref></highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="dc/dfb/classSG_1_1AuxElementData_1a5521e3f733358f3f5f97993d6d1766b1" kindref="member" tooltip="Return the size of the container.">size_v</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="dc/dfb/classSG_1_1AuxElementData_1a299e4488cfcb6a08e7611fde899defbc" kindref="member" tooltip="Return the capacity of the container.">capacity_v</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal">};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="da/d62/classSG_1_1AuxElementPrivateData" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="da/d62/classSG_1_1AuxElementPrivateData" kindref="compound" tooltip="Internal data container for private store.">AuxElementPrivateData</ref></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="dc/dfb/classSG_1_1AuxElementData" kindref="compound" tooltip="Internal data container.">AuxElementData</ref></highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><ref refid="da/d62/classSG_1_1AuxElementPrivateData" kindref="compound" tooltip="Internal data container for private store.">AuxElementPrivateData</ref><sp/>()</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1af6e2da3c14ea74935120cd1b5a37f021" kindref="member" tooltip="Set the store associated with this object.">setStore</ref><sp/>(&amp;m_store);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><ref refid="dd/d55/classSG_1_1AuxStoreStandalone" kindref="compound" tooltip="Auxiliary data store for standalone objects.">AuxStoreStandalone</ref><sp/>m_store;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="d5/dde/classSG_1_1AuxElementStandaloneData" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d5/dde/classSG_1_1AuxElementStandaloneData" kindref="compound" tooltip="Internal data container for standalone store.">AuxElementStandaloneData</ref></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="dc/dfb/classSG_1_1AuxElementData" kindref="compound" tooltip="Internal data container.">AuxElementData</ref></highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="db/dd6/classSG_1_1AuxVectorData_1af6e2da3c14ea74935120cd1b5a37f021" kindref="member" tooltip="Set the store associated with this object.">AuxElementData::setStore</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><ref refid="dc/dfb/classSG_1_1AuxElementData" kindref="compound" tooltip="Internal data container.">SG::AuxElementData</ref>*<sp/>AuxElement::s_privatePlaceholder<sp/>=</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="dc/dfb/classSG_1_1AuxElementData" kindref="compound" tooltip="Internal data container.">SG::AuxElementData</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/db0/classSG_1_1AuxElement_1a197bf9fc579d49e25a850a4b3a5c14e8" kindref="member" tooltip="Create a new (empty) private store for this object.">AuxElement::makePrivateStore</ref>()</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_privateData<sp/>||<sp/>m_container)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="d8/ded/classSG_1_1ExcBadPrivateStore" kindref="compound" tooltip="Exception --- Bad use of private store.">SG::ExcBadPrivateStore</ref><sp/>(</highlight><highlight class="stringliteral">&quot;store<sp/>already<sp/>exists&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>m_privateData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="da/d62/classSG_1_1AuxElementPrivateData" kindref="compound" tooltip="Internal data container for private store.">SG::AuxElementPrivateData</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>m_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>m_container<sp/>=<sp/>m_privateData;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/db0/classSG_1_1AuxElement_1aab2f280f3c832e285fe020365bb3ac1e" kindref="member" tooltip="Release and free any private store associated with this object.">AuxElement::releasePrivateStore</ref>()</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_privateData<sp/>==<sp/>s_privatePlaceholder)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>had<sp/>a<sp/>private<sp/>store,<sp/>but<sp/>it<sp/>was<sp/>released<sp/>because<sp/>this<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>was<sp/>added<sp/>to<sp/>a<sp/>container.<sp/><sp/>Just<sp/>forget<sp/>about<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>m_privateData<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_privateData<sp/>||</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(m_container<sp/>&amp;&amp;<sp/>m_container<sp/>!=<sp/>m_privateData)<sp/>||</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(*m_privateData)<sp/>!=<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(AuxElementPrivateData))</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="d8/ded/classSG_1_1ExcBadPrivateStore" kindref="compound" tooltip="Exception --- Bad use of private store.">SG::ExcBadPrivateStore</ref><sp/>(</highlight><highlight class="stringliteral">&quot;no<sp/>private<sp/>store<sp/>exists&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>m_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>m_container<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_privateData;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>m_privateData<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/db0/classSG_1_1AuxElement_1a57b602d3ec1c0129811375f46c18c049" kindref="member" tooltip="Set the store associated with this object.">AuxElement::setStore</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d3/dd5/classSG_1_1IConstAuxStore" kindref="compound" tooltip="Interface for const operations on an auxiliary store.">SG::IConstAuxStore</ref>*<sp/>store)</highlight></codeline>
<codeline lineno="136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>AuxElementStandaloneData*<sp/>data<sp/>=<sp/>setStore1<sp/>(store);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(store)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;setStore<sp/>(store);</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/db0/classSG_1_1AuxElement_1a57b602d3ec1c0129811375f46c18c049" kindref="member" tooltip="Set the store associated with this object.">AuxElement::setStore</ref><sp/>(<ref refid="dc/d05/classSG_1_1IAuxStore" kindref="compound" tooltip="Interface for non-const operations on an auxiliary store.">SG::IAuxStore</ref>*<sp/>store)</highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>AuxElementStandaloneData*<sp/>data<sp/>=<sp/>setStore1<sp/>(store);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(store)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;setStore<sp/>(store);</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/db0/classSG_1_1AuxElement_1a57b602d3ec1c0129811375f46c18c049" kindref="member" tooltip="Set the store associated with this object.">AuxElement::setStore</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/da2/classDataLink" kindref="compound">DataLink&lt; SG::IConstAuxStore &gt;</ref>&amp;<sp/>store)</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>AuxElementStandaloneData*<sp/>data<sp/>=<sp/>setStore1<sp/>(store);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(store)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;setStore<sp/>(store);</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dc/db0/classSG_1_1AuxElement_1ad7f08e277b177f9dd74924e7d635034e" kindref="member" tooltip="Test to see if this object is currently using a private store.">AuxElement::usingPrivateStore</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="175"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>privateDataValid()<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(*m_privateData)<sp/>==<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(AuxElementPrivateData);</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dc/db0/classSG_1_1AuxElement_1af97c2ef167b0d66ada327a0ada1015e7" kindref="member" tooltip="Test to see if this object is currently using a standalone store.">AuxElement::usingStandaloneStore</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="185"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>privateDataValid()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(*m_privateData)<sp/>==<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(AuxElementStandaloneData);</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d3/dd5/classSG_1_1IConstAuxStore" kindref="compound" tooltip="Interface for const operations on an auxiliary store.">SG::IConstAuxStore</ref>*<sp/><ref refid="dc/db0/classSG_1_1AuxElement_1a324d8fccbfe274b6ff91d6a19de35caf" kindref="member" tooltip="Return the current store, as a const interface.">AuxElement::getConstStore</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="199"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(privateDataValid())</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_privateData-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1a239b57ce5e7833bb83c8f0bf3b390814" kindref="member" tooltip="Return the current store, as a const interface.">getConstStore</ref>();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><ref refid="dc/d05/classSG_1_1IAuxStore" kindref="compound" tooltip="Interface for non-const operations on an auxiliary store.">SG::IAuxStore</ref>*<sp/><ref refid="dc/db0/classSG_1_1AuxElement_1afc4602cf2edeb01c3350367f5985f49b" kindref="member" tooltip="Return the current store, as a non-const interface.">AuxElement::getStore</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="213"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(privateDataValid())</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_privateData-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1af1d8f5f0dd148fbf2041560f77ab0113" kindref="member" tooltip="Return the current store, as a non-const interface.">getStore</ref>();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/db0/classSG_1_1AuxElement_1a127c2c4839333f537cb83ecdc82ad99d" kindref="member" tooltip="Clear the cached aux data pointers.">AuxElement::clearCache</ref>()</highlight></codeline>
<codeline lineno="227"><highlight class="normal">{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_container)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>m_container-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1a5d6d9eefd8811b373b3eeda823e5c0ad" kindref="member" tooltip="Clear the cached aux data pointers.">clearCache</ref>();</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">SG::auxid_set_t</ref>&amp;<sp/><ref refid="dc/db0/classSG_1_1AuxElement_1a607ee93fe8081d2bd3aa1745f0cbbb50" kindref="member" tooltip="Return a set of identifiers for existing data items for this object.">AuxElement::getAuxIDs</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="243"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(privateDataValid())</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_privateData-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1a239b57ce5e7833bb83c8f0bf3b390814" kindref="member" tooltip="Return the current store, as a const interface.">getConstStore</ref>()-&gt;<ref refid="d3/dd5/classSG_1_1IConstAuxStore_1a3be9ddcb2b1198c3cab03c7b94764a3d" kindref="member" tooltip="Return a set of identifiers for existing data items in this store.">getAuxIDs</ref>();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dc/db0/classSG_1_1AuxElement_1a9004b51bd3619cab56c3d52e290c09b9" kindref="member" tooltip="Return the container holding this element.">container</ref>())</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dc/db0/classSG_1_1AuxElement_1a9004b51bd3619cab56c3d52e290c09b9" kindref="member" tooltip="Return the container holding this element.">container</ref>()-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1abe342233ecc5416805b44a47db63815a" kindref="member" tooltip="Return a set of identifiers for existing data items in store associated with this...">getAuxIDs</ref>();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">SG::auxid_set_t</ref><sp/>null_set;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null_set;</highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dc/db0/classSG_1_1AuxElement_1a2d354faac53b7a003d29c0f7b95f3672" kindref="member" tooltip="Return true if this object has an associated store.">AuxElement::hasStore</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="259"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(privateDataValid())</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_privateData-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1a7ae11026ce063feb9b55456698ef2a4f" kindref="member" tooltip="Return true if this object has an associated store.">hasStore</ref>();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dc/db0/classSG_1_1AuxElement_1ac4bc75a2f7b1ed984ffae1bba6de58ba" kindref="member" tooltip="Return true if this object has an associated non-const store.">AuxElement::hasNonConstStore</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="272"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(privateDataValid())</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_privateData-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1a97b5279b30e60d9b099cb6496404c1aa" kindref="member" tooltip="Return true if this object has an associated non-const store.">hasNonConstStore</ref>();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/db0/classSG_1_1AuxElement_1a71044a012a37af1bb0b6fab3d3ea1230" kindref="member" tooltip="Clear all decorations.">AuxElement::clearDecorations</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="286"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(privateDataValid())</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>m_privateData-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1a35c86d28fd74648ddae868dc5fa005d2" kindref="member" tooltip="Clear all decorations.">clearDecorations</ref>();</highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AuxElement::releasePrivateStoreForDtor()</highlight></codeline>
<codeline lineno="298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_privateData<sp/>!=<sp/>s_privatePlaceholder)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_privateData;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal">AuxElementStandaloneData*</highlight></codeline>
<codeline lineno="314"><highlight class="normal">AuxElement::setStore1<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d3/dd5/classSG_1_1IConstAuxStore" kindref="compound" tooltip="Interface for const operations on an auxiliary store.">SG::IConstAuxStore</ref>*<sp/>store)</highlight></codeline>
<codeline lineno="315"><highlight class="normal">{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(store)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Want<sp/>this<sp/>object<sp/>be<sp/>standalone.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_container)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>in<sp/>a<sp/>container<sp/>(and<sp/>no<sp/>private<sp/>store).<sp/><sp/>Make<sp/>a<sp/>new<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AuxElementStandaloneData*<sp/>data<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>AuxElementStandaloneData;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_privateData<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_container<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dc/db0/classSG_1_1AuxElement_1af97c2ef167b0d66ada327a0ada1015e7" kindref="member" tooltip="Test to see if this object is currently using a standalone store.">usingStandaloneStore</ref>())<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Standalone<sp/>---<sp/>return<sp/>existing<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">AuxElementStandaloneData*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/>(m_privateData);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise,<sp/>it&apos;s<sp/>an<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>ExcBadPrivateStore<sp/>(</highlight><highlight class="stringliteral">&quot;Attempt<sp/>to<sp/>attach<sp/>a<sp/>standalone<sp/>store<sp/>to<sp/>an<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;object<sp/>in<sp/>a<sp/>container<sp/>or<sp/>with<sp/>a<sp/>private<sp/>store.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Getting<sp/>rid<sp/>of<sp/>a<sp/>standalone<sp/>store.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dc/db0/classSG_1_1AuxElement_1af97c2ef167b0d66ada327a0ada1015e7" kindref="member" tooltip="Test to see if this object is currently using a standalone store.">usingStandaloneStore</ref>())<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_privateData;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_privateData<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_container<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_container<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>ExcBadPrivateStore<sp/>(</highlight><highlight class="stringliteral">&quot;Attempt<sp/>to<sp/>remove<sp/>a<sp/>standalone<sp/>store<sp/>from<sp/>an<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;object<sp/>in<sp/>a<sp/>container<sp/>or<sp/>with<sp/>a<sp/>private<sp/>store.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>AuxElement::setIndexPrivate<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index,<sp/><ref refid="db/dd6/classSG_1_1AuxVectorData" kindref="compound" tooltip="Manage lookup of vectors of auxiliary data.">SG::AuxVectorData</ref>*<sp/>container)</highlight></codeline>
<codeline lineno="359"><highlight class="normal">{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Precondition:<sp/>m_privateData<sp/>!=<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_privateData<sp/>==<sp/>s_privatePlaceholder)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>had<sp/>a<sp/>private<sp/>store,<sp/>but<sp/>it<sp/>was<sp/>released<sp/>because<sp/>we<sp/>were<sp/>added</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>a<sp/>container.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(container<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;re<sp/>being<sp/>moved<sp/>out<sp/>of<sp/>the<sp/>container.<sp/><sp/>Make<sp/>a<sp/>new<sp/>private</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store,<sp/>copy<sp/>the<sp/>data,<sp/>and<sp/>switch<sp/>to<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_privateData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="da/d62/classSG_1_1AuxElementPrivateData" kindref="compound" tooltip="Internal data container for private store.">SG::AuxElementPrivateData</ref>;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/db0/classSG_1_1AuxElement_1aef247a3ae0d53cd8c4f90702c7501d2f" kindref="member" tooltip="Default constructor.">AuxElement</ref><sp/>to<sp/>(m_privateData,<sp/>0);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>to.copyAux<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_container<sp/>=<sp/>m_privateData;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(*m_privateData)<sp/>==<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(AuxElementPrivateData))<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>currently<sp/>have<sp/>a<sp/>private<sp/>store.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(container<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>container<sp/>!=<sp/>m_privateData)<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;re<sp/>being<sp/>added<sp/>to<sp/>a<sp/>container.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Aux<sp/>data<sp/>has<sp/>already<sp/>been<sp/>copied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Release<sp/>private<sp/>store.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_privateData;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_privateData<sp/>=<sp/>s_privatePlaceholder;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>a<sp/>standalone<sp/>store.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="d8/ded/classSG_1_1ExcBadPrivateStore" kindref="compound" tooltip="Exception --- Bad use of private store.">SG::ExcBadPrivateStore</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Attempt<sp/>to<sp/>add/remove<sp/>a<sp/>standalone<sp/>object<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;from<sp/>a<sp/>container.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>m_index<sp/>=<sp/>index;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>m_container<sp/>=<sp/>container;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="397"><highlight class="normal">}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AuxElement::makePrivateStore1<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AuxElement*<sp/>other)</highlight></codeline>
<codeline lineno="410"><highlight class="normal">{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><ref refid="dc/db0/classSG_1_1AuxElement_1a197bf9fc579d49e25a850a4b3a5c14e8" kindref="member" tooltip="Create a new (empty) private store for this object.">makePrivateStore</ref>();</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(other)</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;copyAux<sp/>(*other);</highlight></codeline>
<codeline lineno="414"><highlight class="normal">}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AuxElement::clearAux()</highlight></codeline>
<codeline lineno="424"><highlight class="normal">{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_container)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_container-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1a7ae11026ce063feb9b55456698ef2a4f" kindref="member" tooltip="Return true if this object has an associated store.">hasStore</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_container-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1a97b5279b30e60d9b099cb6496404c1aa" kindref="member" tooltip="Return true if this object has an associated non-const store.">hasNonConstStore</ref>())</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="da/ddd/classSG_1_1ExcConstAuxData" kindref="compound" tooltip="Exception --- Non-const operation performed on const aux data.">SG::ExcConstAuxData</ref><sp/>(</highlight><highlight class="stringliteral">&quot;clearAux&quot;</highlight><highlight class="normal">,<sp/>SG::null_auxid);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry" kindref="compound" tooltip="Handle mappings between names and auxid_t.">SG::AuxTypeRegistry</ref>&amp;<sp/>r<sp/>=<sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry_1ab22c247525e0883b46012f14b6f5a048" kindref="member" tooltip="Return the singleton registry instance.">SG::AuxTypeRegistry::instance</ref>();</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><ref refid="d9/d35/classAthContainers__detail_1_1strict__shared__lock" kindref="compound">SG::AuxTypeRegistry::lock_t</ref><sp/>lock<sp/>(r);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>ATHCONTAINERS_FOREACH<sp/>(<ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/>auxid,<sp/>m_container-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1a52d2ca97c7546abb52972902ff47a275" kindref="member" tooltip="Return a set of identifiers for writable data items in this store.">getWritableAuxIDs</ref>())<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>dst<sp/>=<sp/>m_container-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1ac60d418d024c0970f058e147b2e0ee6c" kindref="member" tooltip="Return a const pointer to the start of an aux data vector.">getDataArray</ref><sp/>(auxid);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>r.<ref refid="db/d33/classSG_1_1AuxTypeRegistry_1a26344bbacb847a9e7290ad4881cfc966" kindref="member" tooltip="Clear an element within a vector.">clear</ref><sp/>(lock,<sp/>auxid,<sp/>dst,<sp/>m_index);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AuxElement::copyAux<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AuxElement&amp;<sp/>other)</highlight></codeline>
<codeline lineno="452"><highlight class="normal">{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_container)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_container-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1a7ae11026ce063feb9b55456698ef2a4f" kindref="member" tooltip="Return true if this object has an associated store.">hasStore</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_container-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1a97b5279b30e60d9b099cb6496404c1aa" kindref="member" tooltip="Return true if this object has an associated non-const store.">hasNonConstStore</ref>())</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="da/ddd/classSG_1_1ExcConstAuxData" kindref="compound" tooltip="Exception --- Non-const operation performed on const aux data.">SG::ExcConstAuxData</ref><sp/>(</highlight><highlight class="stringliteral">&quot;copyAux&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd6/classSG_1_1AuxVectorData" kindref="compound" tooltip="Manage lookup of vectors of auxiliary data.">SG::AuxVectorData</ref>*<sp/>ocont<sp/>=<sp/>other.container();</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ocont<sp/>||<sp/>!ocont-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1a7ae11026ce063feb9b55456698ef2a4f" kindref="member" tooltip="Return true if this object has an associated store.">hasStore</ref>())<sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;clearAux();</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>oindex<sp/>=<sp/>other.index();</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">SG::auxid_set_t</ref>&amp;<sp/>other_ids<sp/>=<sp/>ocont-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1abe342233ecc5416805b44a47db63815a" kindref="member" tooltip="Return a set of identifiers for existing data items in store associated with this...">getAuxIDs</ref>();</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry" kindref="compound" tooltip="Handle mappings between names and auxid_t.">SG::AuxTypeRegistry</ref>&amp;<sp/>r<sp/>=<sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry_1ab22c247525e0883b46012f14b6f5a048" kindref="member" tooltip="Return the singleton registry instance.">SG::AuxTypeRegistry::instance</ref>();</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/>ATHCONTAINERS_FOREACH<sp/>(<ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/>auxid,<sp/>other_ids)<sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>src<sp/>=<sp/>ocont-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1ae5ef17864033f73d8b7d4a516241a138" kindref="member" tooltip="Return a const pointer to the start of an aux data vector.">getDataArrayAllowMissing</ref><sp/>(auxid);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src)<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>dst<sp/>=<sp/>m_container-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1ac60d418d024c0970f058e147b2e0ee6c" kindref="member" tooltip="Return a const pointer to the start of an aux data vector.">getDataArray</ref><sp/>(auxid);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="db/d33/classSG_1_1AuxTypeRegistry_1a9184409636833f5bc1b0a920957fe319" kindref="member" tooltip="Copy an element between vectors.">copy</ref><sp/>(auxid,<sp/>dst,<sp/>m_index,<sp/>src,<sp/>oindex);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>dst<sp/>=<sp/>m_container-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1ac60d418d024c0970f058e147b2e0ee6c" kindref="member" tooltip="Return a const pointer to the start of an aux data vector.">getDataArray</ref><sp/>(auxid);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="db/d33/classSG_1_1AuxTypeRegistry_1a26344bbacb847a9e7290ad4881cfc966" kindref="member" tooltip="Clear an element within a vector.">clear</ref><sp/>(auxid,<sp/>dst,<sp/>m_index);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/>ATHCONTAINERS_FOREACH<sp/>(<ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/>auxid,<sp/>m_container-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1a52d2ca97c7546abb52972902ff47a275" kindref="member" tooltip="Return a set of identifiers for writable data items in this store.">getWritableAuxIDs</ref>())<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(other_ids.find<sp/>(auxid)<sp/>==<sp/>other_ids.end())<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>dst<sp/>=<sp/>m_container-&gt;<ref refid="db/dd6/classSG_1_1AuxVectorData_1ac60d418d024c0970f058e147b2e0ee6c" kindref="member" tooltip="Return a const pointer to the start of an aux data vector.">getDataArray</ref><sp/>(auxid);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="db/d33/classSG_1_1AuxTypeRegistry_1a26344bbacb847a9e7290ad4881cfc966" kindref="member" tooltip="Clear an element within a vector.">clear</ref><sp/>(auxid,<sp/>dst,<sp/>m_index);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>SG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/AuxElement.cxx"/>
  </compounddef>
</doxygen>
