<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="de/da4/APWeightSum_8cxx" kind="file">
    <compoundname>APWeightSum.cxx</compoundname>
    <includes refid="d9/d4c/APWeightSum_8h" local="yes">ReweightUtils/APWeightSum.h</includes>
    <includes refid="d5/d5c/APWeightEntry_8h" local="yes">ReweightUtils/APWeightEntry.h</includes>
    <includes refid="da/d15/APEvtWeight_8h" local="yes">ReweightUtils/APEvtWeight.h</includes>
    <includes refid="d3/d99/APReweightBase_8h" local="yes">ReweightUtils/APReweightBase.h</includes>
    <includes local="yes">THnSparse.h</includes>
    <includes local="no">cmath</includes>
    <includes local="no">iostream</includes>
    <includes local="no">limits</includes>
    <incdepgraph>
      <node id="261676">
        <label>limits</label>
      </node>
      <node id="261673">
        <label>THnSparse.h</label>
      </node>
      <node id="261672">
        <label>ReweightUtils/APReweightBase.h</label>
        <link refid="d3/d99/APReweightBase_8h_source"/>
        <childnode refid="261667" relation="include">
        </childnode>
      </node>
      <node id="261665">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/ReweightUtils/Root/APWeightSum.cxx</label>
        <link refid="APWeightSum.cxx"/>
        <childnode refid="261666" relation="include">
        </childnode>
        <childnode refid="261670" relation="include">
        </childnode>
        <childnode refid="261668" relation="include">
        </childnode>
        <childnode refid="261672" relation="include">
        </childnode>
        <childnode refid="261673" relation="include">
        </childnode>
        <childnode refid="261674" relation="include">
        </childnode>
        <childnode refid="261675" relation="include">
        </childnode>
        <childnode refid="261676" relation="include">
        </childnode>
      </node>
      <node id="261674">
        <label>cmath</label>
      </node>
      <node id="261670">
        <label>ReweightUtils/APWeightEntry.h</label>
        <link refid="d5/d5c/APWeightEntry_8h_source"/>
        <childnode refid="261671" relation="include">
        </childnode>
      </node>
      <node id="261668">
        <label>APEvtWeight.h</label>
        <link refid="da/d15/APEvtWeight_8h_source"/>
        <childnode refid="261667" relation="include">
        </childnode>
        <childnode refid="261669" relation="include">
        </childnode>
      </node>
      <node id="261669">
        <label>vector</label>
      </node>
      <node id="261671">
        <label>Rtypes.h</label>
      </node>
      <node id="261666">
        <label>ReweightUtils/APWeightSum.h</label>
        <link refid="d9/d4c/APWeightSum_8h_source"/>
        <childnode refid="261667" relation="include">
        </childnode>
        <childnode refid="261668" relation="include">
        </childnode>
        <childnode refid="261669" relation="include">
        </childnode>
      </node>
      <node id="261675">
        <label>iostream</label>
      </node>
      <node id="261667">
        <label>TNamed.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="de/da4/APWeightSum_8cxx_1adc9caf6a7583b59f368d6d16cad54b42" prot="public" static="no">
        <name>APWeightSum_cxx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/ReweightUtils/Root/APWeightSum.cxx" line="1" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/ReweightUtils/Root/APWeightSum.cxx" bodystart="1" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#define<sp/>APWeightSum_cxx</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;ReweightUtils/APWeightSum.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ReweightUtils/APWeightEntry.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ReweightUtils/APEvtWeight.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ReweightUtils/APReweightBase.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;THnSparse.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><ref refid="d8/d06/classAPWeightSum_1af63a263264f112866060dc5921dc8e4e" kindref="member">APWeightSum::APWeightSum</ref>()<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1abf5ca57db0ae3eebe029ec0ad160d457" kindref="member">_k_evt_orig</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1ad9aa86ecc988e7a934bddce83b991470" kindref="member">_k_evt_weight</ref><sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1a2a72f24cd7d97c9ac0e69acf8679def5" kindref="member">_k_evt_weight2</ref><sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1a1e403ca536c4c62e2f8facebd1321b79" kindref="member">_k_evt_weight_external</ref><sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1a5eb9c992587781905e0543a6f2c4fa86" kindref="member">_variance</ref><sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1a754a96e9f371996c446e4d22f4cc894e" kindref="member">_variance_nocorr</ref><sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1a1eab3008b66549fdca839308c2f3f4b1" kindref="member">_variance_fullcorr</ref><sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1a0bec86316fab02681aec41329f2584fe" kindref="member">_variance_sys</ref><sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>_isComputed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><ref refid="d8/d06/classAPWeightSum_1a912e714d8fe7425746a0de0aa6cca0a3" kindref="member">APWeightSum::~APWeightSum</ref>()<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(vector&lt;THnSparse*&gt;::reverse_iterator<sp/>it<sp/>=<sp/><ref refid="d8/d06/classAPWeightSum_1a610f784ff4bd80c0211311f9e0917254" kindref="member">_linear_uncert</ref>.rbegin();<sp/>it<sp/>!=<sp/><ref refid="d8/d06/classAPWeightSum_1a610f784ff4bd80c0211311f9e0917254" kindref="member">_linear_uncert</ref>.rend();<sp/>++it)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>*it;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1a610f784ff4bd80c0211311f9e0917254" kindref="member">_linear_uncert</ref>.clear();</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d06/classAPWeightSum_1ad3da4e3440a423e6cbf62637e355a67d" kindref="member">APWeightSum::AddWeightToEvt</ref>(<ref refid="d1/d16/classAPWeightEntry" kindref="compound">APWeightEntry</ref>*<sp/>weight)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1acb7293d4198dab12ccf57b929be55112" kindref="member">_current_evt_weights</ref>.push_back(weight);</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d8/d06/classAPWeightSum_1a327ba7e81016e88e3388f39d6355921b" kindref="member">APWeightSum::GetSumW</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d8/d06/classAPWeightSum_1ad9aa86ecc988e7a934bddce83b991470" kindref="member">_k_evt_weight</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d8/d06/classAPWeightSum_1a0cde5ac3a03423005f27a4d80b8ce2e0" kindref="member">APWeightSum::GetSumW2</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d8/d06/classAPWeightSum_1a2a72f24cd7d97c9ac0e69acf8679def5" kindref="member">_k_evt_weight2</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d8/d06/classAPWeightSum_1a0f501cf9ecfa814b3ffa659d457f4250" kindref="member">APWeightSum::GetSumWExternal</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d8/d06/classAPWeightSum_1a1e403ca536c4c62e2f8facebd1321b79" kindref="member">_k_evt_weight_external</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d8/d06/classAPWeightSum_1aa12ab0231a0b3e4e26dad243fbe37c79" kindref="member">APWeightSum::GetStdDev</ref>()<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!_isComputed<sp/>)<sp/><ref refid="d8/d06/classAPWeightSum_1adcd91205ea827623fcaed86c04a500be" kindref="member">Compute</ref>();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(<ref refid="d8/d06/classAPWeightSum_1a5eb9c992587781905e0543a6f2c4fa86" kindref="member">_variance</ref>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d8/d06/classAPWeightSum_1a4d87acc9143fd3537d480944ebac0dcb" kindref="member">APWeightSum::GetVariance</ref>()<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!_isComputed<sp/>)<sp/><ref refid="d8/d06/classAPWeightSum_1adcd91205ea827623fcaed86c04a500be" kindref="member">Compute</ref>();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d8/d06/classAPWeightSum_1a5eb9c992587781905e0543a6f2c4fa86" kindref="member">_variance</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d8/d06/classAPWeightSum_1a5e1f50c8e00ee15114b029ce43a1d7f4" kindref="member">APWeightSum::GetVarianceNoCorr</ref>()<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d8/d06/classAPWeightSum_1a754a96e9f371996c446e4d22f4cc894e" kindref="member">_variance_nocorr</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d8/d06/classAPWeightSum_1a43a2a8ac1727e9c56b88830f669f8ac6" kindref="member">APWeightSum::GetVarianceFullCorr</ref>()<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!_isComputed<sp/>)<sp/><ref refid="d8/d06/classAPWeightSum_1adcd91205ea827623fcaed86c04a500be" kindref="member">Compute</ref>();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d8/d06/classAPWeightSum_1a1eab3008b66549fdca839308c2f3f4b1" kindref="member">_variance_fullcorr</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d8/d06/classAPWeightSum_1ac90060fd61bc7372ac4333d9c7ea5c48" kindref="member">APWeightSum::GetSysUncert</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(<ref refid="d8/d06/classAPWeightSum_1a0bec86316fab02681aec41329f2584fe" kindref="member">_variance_sys</ref>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="d8/d06/classAPWeightSum_1a581d861f00709d83c0c0116895cbd8b5" kindref="member">APWeightSum::GetKUnweighted</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d8/d06/classAPWeightSum_1abf5ca57db0ae3eebe029ec0ad160d457" kindref="member">_k_evt_orig</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d06/classAPWeightSum_1af6212fe9eba3aa450e010370d9448884" kindref="member">APWeightSum::FinishEvt</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ext_weight)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>++<ref refid="d8/d06/classAPWeightSum_1abf5ca57db0ae3eebe029ec0ad160d457" kindref="member">_k_evt_orig</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>evt_weight<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>uncert<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>uncert_sys<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>I<sp/>=<sp/><ref refid="d8/d06/classAPWeightSum_1acb7293d4198dab12ccf57b929be55112" kindref="member">_current_evt_weights</ref>.size();<sp/>i<sp/>&lt;<sp/>I;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>uncert_summand<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>evt_weight<sp/>*=<sp/>(1.<sp/>-<sp/><ref refid="d8/d06/classAPWeightSum_1acb7293d4198dab12ccf57b929be55112" kindref="member">_current_evt_weights</ref>[i]-&gt;GetExpectancy());</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>I;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>k)<sp/>uncert_summand<sp/>*=<sp/>(1.<sp/>-<sp/><ref refid="d8/d06/classAPWeightSum_1acb7293d4198dab12ccf57b929be55112" kindref="member">_current_evt_weights</ref>[i]-&gt;GetExpectancy());</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>uncert<sp/>+=<sp/>(uncert_summand<sp/>*<sp/>uncert_summand<sp/>*<sp/><ref refid="d8/d06/classAPWeightSum_1acb7293d4198dab12ccf57b929be55112" kindref="member">_current_evt_weights</ref>[i]-&gt;GetVariance());</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>uncert_sys<sp/>+=<sp/>(uncert_summand<sp/>*<sp/>uncert_summand<sp/>*<sp/><ref refid="d8/d06/classAPWeightSum_1acb7293d4198dab12ccf57b929be55112" kindref="member">_current_evt_weights</ref>[i]-&gt;GetSysUncert2());</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1ad9aa86ecc988e7a934bddce83b991470" kindref="member">_k_evt_weight</ref><sp/>+=<sp/>ext_weight<sp/>*<sp/>(1.<sp/>-<sp/>evt_weight);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1a2a72f24cd7d97c9ac0e69acf8679def5" kindref="member">_k_evt_weight2</ref><sp/>+=<sp/><ref refid="d8/d06/classAPWeightSum_1ad9aa86ecc988e7a934bddce83b991470" kindref="member">_k_evt_weight</ref>*<ref refid="d8/d06/classAPWeightSum_1ad9aa86ecc988e7a934bddce83b991470" kindref="member">_k_evt_weight</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1a1e403ca536c4c62e2f8facebd1321b79" kindref="member">_k_evt_weight_external</ref><sp/>+=<sp/>ext_weight;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1a5eb9c992587781905e0543a6f2c4fa86" kindref="member">_variance</ref><sp/>+=<sp/>fabs(ext_weight)<sp/>*<sp/>uncert;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1a0bec86316fab02681aec41329f2584fe" kindref="member">_variance_sys</ref><sp/>+=<sp/>ext_weight<sp/>*<sp/>uncert_sys;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1acb7293d4198dab12ccf57b929be55112" kindref="member">_current_evt_weights</ref>.clear();</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d06/classAPWeightSum_1a42f58413ffef3016cd7591788d083a5c" kindref="member">APWeightSum::AddEvt</ref>(<ref refid="d8/d7f/classAPEvtWeight" kindref="compound">APEvtWeight</ref>*<sp/>evt_weight,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ext_weight)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>++<ref refid="d8/d06/classAPWeightSum_1abf5ca57db0ae3eebe029ec0ad160d457" kindref="member">_k_evt_orig</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>_k_evt_weight<sp/>+=<sp/>ext_weight<sp/>*<sp/>evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1acd2b2164f8c2a086a37c992202bd945a" kindref="member">GetWeight</ref>();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>_k_evt_weight2<sp/>+=<sp/>_k_evt_weight*_k_evt_weight;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1a1e403ca536c4c62e2f8facebd1321b79" kindref="member">_k_evt_weight_external</ref><sp/>+=<sp/>ext_weight;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>vector&lt;APWeightEntry*&gt;<sp/>temp_vec_mu<sp/>=<sp/>evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1aed47d067001f4af74a38b214158a8068" kindref="member">GetWeightObjects</ref>(APEvtWeight::kMuon);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>vector&lt;APWeightEntry*&gt;<sp/>temp_vec_dimu<sp/>=<sp/>evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1aed47d067001f4af74a38b214158a8068" kindref="member">GetWeightObjects</ref>(APEvtWeight::kDiMuon);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>vector&lt;APWeightEntry*&gt;<sp/>temp_vec_mumo<sp/>=<sp/>evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1aed47d067001f4af74a38b214158a8068" kindref="member">GetWeightObjects</ref>(APEvtWeight::kMuonMO);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>vector&lt;APWeightEntry*&gt;<sp/>temp_vec_tau<sp/>=<sp/>evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1aed47d067001f4af74a38b214158a8068" kindref="member">GetWeightObjects</ref>(APEvtWeight::kTau);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>vector&lt;APWeightEntry*&gt;<sp/>temp_vec_ditau<sp/>=<sp/>evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1aed47d067001f4af74a38b214158a8068" kindref="member">GetWeightObjects</ref>(APEvtWeight::kDiTau);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>vector&lt;APWeightEntry*&gt;<sp/>temp_vec_taumo<sp/>=<sp/>evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1aed47d067001f4af74a38b214158a8068" kindref="member">GetWeightObjects</ref>(APEvtWeight::kTauMO);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>vector&lt;APWeightEntry*&gt;<sp/>temp_vec_el<sp/>=<sp/>evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1aed47d067001f4af74a38b214158a8068" kindref="member">GetWeightObjects</ref>(APEvtWeight::kElectron);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>vector&lt;APWeightEntry*&gt;<sp/>temp_vec_diel<sp/>=<sp/>evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1aed47d067001f4af74a38b214158a8068" kindref="member">GetWeightObjects</ref>(APEvtWeight::kDiElectron);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>vector&lt;APWeightEntry*&gt;<sp/>temp_vec_elmo<sp/>=<sp/>evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1aed47d067001f4af74a38b214158a8068" kindref="member">GetWeightObjects</ref>(APEvtWeight::kElectronMO);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>vector&lt;APWeightEntry*&gt;<sp/>temp_vec_jet<sp/>=<sp/>evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1aed47d067001f4af74a38b214158a8068" kindref="member">GetWeightObjects</ref>(APEvtWeight::kJet);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>vector&lt;APWeightEntry*&gt;<sp/>temp_vec_dijet<sp/>=<sp/>evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1aed47d067001f4af74a38b214158a8068" kindref="member">GetWeightObjects</ref>(APEvtWeight::kDiJet);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>vector&lt;APWeightEntry*&gt;<sp/>temp_vec_jetmo<sp/>=<sp/>evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1aed47d067001f4af74a38b214158a8068" kindref="member">GetWeightObjects</ref>(APEvtWeight::kJetMO);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>vector&lt;<sp/>vector&lt;APWeightEntry*&gt;<sp/>&gt;<sp/>temp_vec_all;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>temp_vec_all.push_back(temp_vec_mu);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>temp_vec_all.push_back(temp_vec_tau);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>temp_vec_all.push_back(temp_vec_el);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>temp_vec_all.push_back(temp_vec_jet);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>temp_vec_all.push_back(temp_vec_mumo);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>temp_vec_all.push_back(temp_vec_taumo);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>temp_vec_all.push_back(temp_vec_elmo);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>temp_vec_all.push_back(temp_vec_jetmo);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>temp_vec_all.push_back(temp_vec_dimu);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>temp_vec_all.push_back(temp_vec_ditau);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>temp_vec_all.push_back(temp_vec_diel);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>temp_vec_all.push_back(temp_vec_dijet);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>if<sp/>histogram<sp/>for<sp/>error<sp/>propagation<sp/>is<sp/>already<sp/>there;<sp/>if<sp/>not,<sp/>create<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iAll<sp/>=<sp/>0,<sp/>IAll<sp/>=<sp/>temp_vec_all.size();<sp/>iAll<sp/>&lt;<sp/>IAll;<sp/>++iAll<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>I<sp/>=<sp/>temp_vec_all[iAll].size();<sp/>i<sp/>&lt;<sp/>I;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ID<sp/>=<sp/>temp_vec_all[iAll][i]-&gt;GetID();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="d8/d06/classAPWeightSum_1a610f784ff4bd80c0211311f9e0917254" kindref="member">_linear_uncert</ref>.size()<sp/>&lt;<sp/>ID+1<sp/>)<sp/><ref refid="d8/d06/classAPWeightSum_1a610f784ff4bd80c0211311f9e0917254" kindref="member">_linear_uncert</ref>.resize(ID+1,<sp/>0);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="d8/d06/classAPWeightSum_1a610f784ff4bd80c0211311f9e0917254" kindref="member">_linear_uncert</ref>[ID]<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;int&gt;<sp/>original_dimensions<sp/>=<sp/>temp_vec_all[iAll][i]-&gt;GetOriginalDimensions();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*bins<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[original_dimensions.size()];</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*xmin<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[original_dimensions.size()];</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*xmax<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[original_dimensions.size()];</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0,<sp/>J<sp/>=<sp/>original_dimensions.size();<sp/>j<sp/>&lt;<sp/>J;<sp/>++j<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bins[j]<sp/>=<sp/>original_dimensions[j];</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmin[j]<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmax[j]<sp/>=<sp/>10.;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1a610f784ff4bd80c0211311f9e0917254" kindref="member">_linear_uncert</ref>[ID]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>THnSparseD(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,original_dimensions.size(),<sp/>bins,<sp/>xmin,<sp/>xmax);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculate<sp/>weight<sp/>and<sp/>derivatives<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>these<sp/>are<sp/>the<sp/>simple<sp/>weights:<sp/>kMuon,<sp/>kTau,<sp/>kElectron<sp/>and<sp/>kJet:<sp/>single<sp/>object<sp/>trigger,<sp/>OR<sp/>of<sp/>all<sp/>elements<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1a3ad807d3139dbdb9f03a0ca4a2050171" kindref="member">GetType</ref>()<sp/>&lt;=<sp/>APEvtWeight::kJet)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;APWeightEntry*&gt;<sp/>temp_vec_rel;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1a3ad807d3139dbdb9f03a0ca4a2050171" kindref="member">GetType</ref>()<sp/>==<sp/>APEvtWeight::kMuon)<sp/>temp_vec_rel<sp/>=<sp/>temp_vec_mu;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1a3ad807d3139dbdb9f03a0ca4a2050171" kindref="member">GetType</ref>()<sp/>==<sp/>APEvtWeight::kTau)<sp/>temp_vec_rel<sp/>=<sp/>temp_vec_tau;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1a3ad807d3139dbdb9f03a0ca4a2050171" kindref="member">GetType</ref>()<sp/>==<sp/>APEvtWeight::kElectron)<sp/>temp_vec_rel<sp/>=<sp/>temp_vec_el;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1a3ad807d3139dbdb9f03a0ca4a2050171" kindref="member">GetType</ref>()<sp/>==<sp/>APEvtWeight::kJet)<sp/>temp_vec_rel<sp/>=<sp/>temp_vec_jet;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>I<sp/>=<sp/>temp_vec_rel.size();<sp/>i<sp/>&lt;<sp/>I;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;int&gt;<sp/><ref refid="df/d3f/namespaceJetVoronoiDiagramHelpers_1a697e88a9d8be09acfc4db39f04c54bff" kindref="member">coord</ref><sp/>=<sp/>temp_vec_rel[i]-&gt;GetCoords();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>weight_uncert<sp/>=<sp/>sqrt(temp_vec_rel[i]-&gt;<ref refid="d8/d06/classAPWeightSum_1a4d87acc9143fd3537d480944ebac0dcb" kindref="member">GetVariance</ref>());</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>I;<sp/>++j<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>==<sp/>i)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight_uncert<sp/>*=<sp/>(1.0<sp/>-<sp/>temp_vec_rel[j]-&gt;GetExpectancy());</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1a610f784ff4bd80c0211311f9e0917254" kindref="member">_linear_uncert</ref>[temp_vec_rel[i]-&gt;GetID()]-&gt;SetBinContent(&amp;coord.front(),<sp/><ref refid="d8/d06/classAPWeightSum_1a610f784ff4bd80c0211311f9e0917254" kindref="member">_linear_uncert</ref>[temp_vec_rel[i]-&gt;GetID()]-&gt;GetBinContent(&amp;coord.front())+weight_uncert);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1a754a96e9f371996c446e4d22f4cc894e" kindref="member">_variance_nocorr</ref><sp/>+=<sp/>weight_uncert*weight_uncert;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>these<sp/>are<sp/>the<sp/>DiMuon,<sp/>DiTau,<sp/>DiElectron<sp/>and<sp/>DiJet<sp/>weights<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1a3ad807d3139dbdb9f03a0ca4a2050171" kindref="member">GetType</ref>()<sp/>&gt;=<sp/>APEvtWeight::kDiMuon<sp/>&amp;&amp;<sp/>evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1a3ad807d3139dbdb9f03a0ca4a2050171" kindref="member">GetType</ref>()<sp/>&lt;=<sp/>APEvtWeight::kDiJet)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;APWeightEntry*&gt;<sp/>temp_vec_rel;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1a3ad807d3139dbdb9f03a0ca4a2050171" kindref="member">GetType</ref>()<sp/>==<sp/>APEvtWeight::kDiMuon)<sp/>temp_vec_rel<sp/>=<sp/>temp_vec_dimu;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1a3ad807d3139dbdb9f03a0ca4a2050171" kindref="member">GetType</ref>()<sp/>==<sp/>APEvtWeight::kDiTau)<sp/>temp_vec_rel<sp/>=<sp/>temp_vec_ditau;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1a3ad807d3139dbdb9f03a0ca4a2050171" kindref="member">GetType</ref>()<sp/>==<sp/>APEvtWeight::kDiElectron)<sp/>temp_vec_rel<sp/>=<sp/>temp_vec_diel;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1a3ad807d3139dbdb9f03a0ca4a2050171" kindref="member">GetType</ref>()<sp/>==<sp/>APEvtWeight::kDiJet)<sp/>temp_vec_rel<sp/>=<sp/>temp_vec_dijet;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isAsymTrig<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;unsigned<sp/>int&gt;<sp/>temp_vec_IDs;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>temp_vec_IDs.push_back(temp_vec_rel[0]-&gt;GetID()<sp/>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1,<sp/>I<sp/>=<sp/>temp_vec_rel.size();<sp/>i<sp/>&lt;<sp/>I;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>knownID<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0,<sp/>J<sp/>=<sp/>temp_vec_IDs.size();<sp/>j<sp/>&lt;<sp/>J;<sp/>++j<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>temp_vec_rel[i]-&gt;GetID()<sp/>==<sp/>temp_vec_IDs[j]<sp/>)<sp/>{<sp/>knownID<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!knownID<sp/>)<sp/>temp_vec_IDs.push_back(<sp/>temp_vec_rel[i]-&gt;GetID()<sp/>);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>temp_vec_IDs.size()<sp/>!=<sp/>1<sp/>)<sp/>isAsymTrig<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>for<sp/>symmetric<sp/>dilepton<sp/>triggers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!isAsymTrig<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>I<sp/>=<sp/>temp_vec_rel.size();<sp/>i<sp/>&lt;<sp/>I;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;int&gt;<sp/>coord<sp/>=<sp/>temp_vec_rel[i]-&gt;GetCoords();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>weight_uncert<sp/>=<sp/>sqrt(temp_vec_rel[i]-&gt;<ref refid="d8/d06/classAPWeightSum_1a4d87acc9143fd3537d480944ebac0dcb" kindref="member">GetVariance</ref>());</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>weight_derivative<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>I;<sp/>++j<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>==<sp/>i)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>weight_derivative_temp<sp/>=<sp/>temp_vec_rel[j]-&gt;GetExpectancy();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>I;<sp/>++k<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>k<sp/>==<sp/>j<sp/>||<sp/>k<sp/>==<sp/>i<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight_derivative_temp<sp/>*=<sp/>(1.0<sp/>-<sp/>temp_vec_rel[k]-&gt;GetExpectancy());</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight_derivative<sp/>+=<sp/>weight_derivative_temp;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight_uncert<sp/>*=<sp/>weight_derivative;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1a610f784ff4bd80c0211311f9e0917254" kindref="member">_linear_uncert</ref>[temp_vec_rel[i]-&gt;GetID()]-&gt;SetBinContent(&amp;coord.front(),<sp/><ref refid="d8/d06/classAPWeightSum_1a610f784ff4bd80c0211311f9e0917254" kindref="member">_linear_uncert</ref>[temp_vec_rel[i]-&gt;GetID()]-&gt;GetBinContent(&amp;coord.front())+weight_uncert);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1a754a96e9f371996c446e4d22f4cc894e" kindref="member">_variance_nocorr</ref><sp/>+=<sp/>weight_uncert*weight_uncert;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>for<sp/>asymmetric<sp/>triggers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>at<sp/>first<sp/>the<sp/>first<sp/>leg<sp/>of<sp/>the<sp/>trigger<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0,<sp/>K<sp/>=<sp/>temp_vec_rel.size();<sp/>k<sp/>&lt;<sp/>K;<sp/>k<sp/>+=<sp/>4<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;int&gt;<sp/>coord<sp/>=<sp/>temp_vec_rel[k]-&gt;GetCoords();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>variance_k<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>variance_temp<sp/>=<sp/>1.;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>I<sp/>=<sp/>temp_vec_rel.size();<sp/>i<sp/>&lt;<sp/>I;<sp/>i<sp/>+=<sp/>4<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>i<sp/>==<sp/>k<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variance_temp<sp/>*=<sp/>(1.<sp/>-<sp/>temp_vec_rel[i]-&gt;GetExpectancy());</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variance_k<sp/>+=<sp/>variance_temp;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variance_temp<sp/>=<sp/>-1.;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>I<sp/>=<sp/>temp_vec_rel.size();<sp/>i<sp/>&lt;<sp/>I;<sp/>i<sp/>+=<sp/>4<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variance_temp<sp/>*=<sp/>(1.0<sp/>-<sp/>temp_vec_rel[i+2]-&gt;GetExpectancy());</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>i<sp/>==<sp/>k<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variance_temp<sp/>*=<sp/>(1.0<sp/>-<sp/>temp_vec_rel[i]-&gt;GetExpectancy());</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variance_k<sp/>+=<sp/>variance_temp;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variance_temp<sp/>=<sp/>-temp_vec_rel[k+3]-&gt;GetExpectancy();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>I<sp/>=<sp/>temp_vec_rel.size();<sp/>i<sp/>&lt;<sp/>I;<sp/>i<sp/>+=<sp/>4<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>i<sp/>==<sp/>k<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variance_temp<sp/>*=<sp/>(1.0<sp/>-<sp/>temp_vec_rel[i]-&gt;GetExpectancy())*(1.0<sp/>-<sp/>temp_vec_rel[i+2]-&gt;GetExpectancy());</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variance_k<sp/>+=<sp/>variance_temp;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variance_temp<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0,<sp/>J<sp/>=<sp/>temp_vec_rel.size();<sp/>j<sp/>&lt;<sp/>J;<sp/>j+=<sp/>4<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>j<sp/>==<sp/>k<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>variance_ijk_temp<sp/>=<sp/>temp_vec_rel[j]-&gt;GetExpectancy()*temp_vec_rel[j+3]-&gt;GetExpectancy();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>I<sp/>=<sp/>temp_vec_rel.size();<sp/>i<sp/>&lt;<sp/>I;<sp/>i<sp/>+=<sp/>4<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>i<sp/>==<sp/>j<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variance_ijk_temp<sp/>*=<sp/>(1.0<sp/>-<sp/><sp/>temp_vec_rel[i+2]-&gt;GetExpectancy());</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>i<sp/>==<sp/>k<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variance_ijk_temp<sp/>*=<sp/>(1.0<sp/>-<sp/>temp_vec_rel[i]-&gt;GetExpectancy());</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variance_temp<sp/>+=<sp/>variance_ijk_temp;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variance_k<sp/>+=<sp/>variance_temp;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variance_k<sp/>*=<sp/>variance_k*temp_vec_rel[k]-&gt;GetVariance();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1a610f784ff4bd80c0211311f9e0917254" kindref="member">_linear_uncert</ref>[temp_vec_rel[k]-&gt;GetID()]-&gt;SetBinContent(&amp;coord.front(),<sp/><ref refid="d8/d06/classAPWeightSum_1a610f784ff4bd80c0211311f9e0917254" kindref="member">_linear_uncert</ref>[temp_vec_rel[k]-&gt;GetID()]-&gt;GetBinContent(&amp;coord.front())+sqrt(variance_k));</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1a754a96e9f371996c446e4d22f4cc894e" kindref="member">_variance_nocorr</ref><sp/>+=<sp/>variance_k;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>second<sp/>leg<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0,<sp/>K<sp/>=<sp/>temp_vec_rel.size();<sp/>k<sp/>&lt;<sp/>K;<sp/>k<sp/>+=<sp/>4<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;int&gt;<sp/>coord<sp/>=<sp/>temp_vec_rel[k+1]-&gt;GetCoords();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>variance_temp<sp/>=<sp/>1.;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>I<sp/>=<sp/>temp_vec_rel.size();<sp/>i<sp/>&lt;<sp/>I;<sp/>i<sp/>+=<sp/>4<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>i<sp/>==<sp/>k<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variance_temp<sp/>*=<sp/>(1.<sp/>-<sp/>temp_vec_rel[i+1]-&gt;GetExpectancy());</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variance_temp<sp/>*=<sp/>variance_temp*temp_vec_rel[k+1]-&gt;GetVariance();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1a610f784ff4bd80c0211311f9e0917254" kindref="member">_linear_uncert</ref>[temp_vec_rel[k+1]-&gt;GetID()]-&gt;SetBinContent(&amp;coord.front(),<sp/><ref refid="d8/d06/classAPWeightSum_1a610f784ff4bd80c0211311f9e0917254" kindref="member">_linear_uncert</ref>[temp_vec_rel[k+1]-&gt;GetID()]-&gt;GetBinContent(&amp;coord.front())+sqrt(variance_temp));</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1a754a96e9f371996c446e4d22f4cc894e" kindref="member">_variance_nocorr</ref><sp/>+=<sp/>variance_temp;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>second<sp/>leg<sp/>|<sp/>condition<sp/>leg<sp/>1<sp/>failed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0,<sp/>K<sp/>=<sp/>temp_vec_rel.size();<sp/>k<sp/>&lt;<sp/>K;<sp/>k<sp/>+=<sp/>4<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;int&gt;<sp/>coord<sp/>=<sp/>temp_vec_rel[k+2]-&gt;GetCoords();</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>variance_k<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>variance_temp<sp/>=<sp/>1.;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>I<sp/>=<sp/>temp_vec_rel.size();<sp/>i<sp/>&lt;<sp/>I;<sp/>i<sp/>+=<sp/>4<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variance_temp<sp/>*=<sp/>(1.<sp/>-<sp/>temp_vec_rel[i]-&gt;GetExpectancy());</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>i<sp/>==<sp/>k<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variance_temp<sp/>*=<sp/>(1.<sp/>-<sp/>temp_vec_rel[i+2]-&gt;GetExpectancy());</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variance_k<sp/>+=<sp/>variance_temp;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variance_temp<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0,<sp/>J<sp/>=<sp/>temp_vec_rel.size();<sp/>j<sp/>&lt;<sp/>J;<sp/>j+=<sp/>4<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>variance_ijk_temp<sp/>=<sp/>temp_vec_rel[j]-&gt;GetExpectancy()*temp_vec_rel[j+3]-&gt;GetExpectancy();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>I<sp/>=<sp/>temp_vec_rel.size();<sp/>i<sp/>&lt;<sp/>I;<sp/>i<sp/>+=<sp/>4<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>j<sp/>==<sp/>i<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variance_ijk_temp<sp/>*=<sp/>(1.0<sp/>-<sp/>temp_vec_rel[i]-&gt;GetExpectancy());</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>i<sp/>==<sp/>k<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variance_ijk_temp<sp/>*=<sp/>(1.0<sp/>-<sp/><sp/>temp_vec_rel[i+2]-&gt;GetExpectancy());</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variance_temp<sp/>+=<sp/>variance_ijk_temp;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variance_k<sp/>+=<sp/>variance_temp;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variance_k<sp/>*=<sp/>variance_k*temp_vec_rel[k+2]-&gt;GetVariance();</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1a610f784ff4bd80c0211311f9e0917254" kindref="member">_linear_uncert</ref>[temp_vec_rel[k+2]-&gt;GetID()]-&gt;SetBinContent(&amp;coord.front(),<sp/><ref refid="d8/d06/classAPWeightSum_1a610f784ff4bd80c0211311f9e0917254" kindref="member">_linear_uncert</ref>[temp_vec_rel[k+2]-&gt;GetID()]-&gt;GetBinContent(&amp;coord.front())+sqrt(variance_k));</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1a754a96e9f371996c446e4d22f4cc894e" kindref="member">_variance_nocorr</ref><sp/>+=<sp/>variance_k;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>second<sp/>leg<sp/>|<sp/>condition<sp/>leg<sp/>1<sp/>passed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0,<sp/>K<sp/>=<sp/>temp_vec_rel.size();<sp/>k<sp/>&lt;<sp/>K;<sp/>k<sp/>+=<sp/>4<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;int&gt;<sp/>coord<sp/>=<sp/>temp_vec_rel[k+3]-&gt;GetCoords();</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>variance_k<sp/>=<sp/>-<sp/>temp_vec_rel[k]-&gt;GetExpectancy();</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>I<sp/>=<sp/>temp_vec_rel.size();<sp/>i<sp/>&lt;<sp/>I;<sp/>i<sp/>+=<sp/>4<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>i<sp/>==<sp/>k<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variance_k<sp/>*=<sp/>(1.0<sp/>-<sp/>temp_vec_rel[i]-&gt;GetExpectancy())*(1.0<sp/>-<sp/>temp_vec_rel[i+3]-&gt;GetExpectancy());</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variance_k<sp/>*=<sp/>variance_k*temp_vec_rel[k+3]-&gt;GetVariance();</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1a610f784ff4bd80c0211311f9e0917254" kindref="member">_linear_uncert</ref>[temp_vec_rel[k+3]-&gt;GetID()]-&gt;SetBinContent(&amp;coord.front(),<sp/><ref refid="d8/d06/classAPWeightSum_1a610f784ff4bd80c0211311f9e0917254" kindref="member">_linear_uncert</ref>[temp_vec_rel[k+3]-&gt;GetID()]-&gt;GetBinContent(&amp;coord.front())+sqrt(variance_k));</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1a754a96e9f371996c446e4d22f4cc894e" kindref="member">_variance_nocorr</ref><sp/>+=<sp/>variance_k;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>these<sp/>are<sp/>the<sp/>weights<sp/>for<sp/>ANDed<sp/>triggers.<sp/>Shouldn&apos;t<sp/>be<sp/>used<sp/>but<sp/>for<sp/>examples.<sp/>This<sp/>will<sp/>treat<sp/>everything<sp/>as<sp/>ANDed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1a3ad807d3139dbdb9f03a0ca4a2050171" kindref="member">GetType</ref>()<sp/>==<sp/>APEvtWeight::kANDed<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iAll<sp/>=<sp/>0,<sp/>IAll<sp/>=<sp/>temp_vec_all.size();<sp/>iAll<sp/>&lt;<sp/>IAll;<sp/>++iAll<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>I<sp/>=<sp/>temp_vec_all[iAll].size();<sp/>i<sp/>&lt;<sp/>I;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;int&gt;<sp/>coord<sp/>=<sp/>temp_vec_all[iAll][i]-&gt;GetCoords();</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>weight_uncert<sp/>=<sp/>sqrt(temp_vec_all[iAll][i]-&gt;<ref refid="d8/d06/classAPWeightSum_1a4d87acc9143fd3537d480944ebac0dcb" kindref="member">GetVariance</ref>());</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight_uncert<sp/>*=<sp/>(temp_vec_all[iAll][i]-&gt;GetExpectancy()<sp/>&lt;=<sp/>numeric_limits&lt;double&gt;::epsilon()<sp/>)<sp/>?<sp/>0.<sp/>:<sp/>evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1acd2b2164f8c2a086a37c992202bd945a" kindref="member">GetWeight</ref>()/temp_vec_all[iAll][i]-&gt;GetExpectancy();</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1a610f784ff4bd80c0211311f9e0917254" kindref="member">_linear_uncert</ref>[temp_vec_all[iAll][i]-&gt;GetID()]-&gt;SetBinContent(&amp;coord.front(),<sp/><ref refid="d8/d06/classAPWeightSum_1a610f784ff4bd80c0211311f9e0917254" kindref="member">_linear_uncert</ref>[temp_vec_all[iAll][i]-&gt;GetID()]-&gt;GetBinContent(&amp;coord.front())+weight_uncert);<sp/></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1a754a96e9f371996c446e4d22f4cc894e" kindref="member">_variance_nocorr</ref><sp/>+=<sp/>weight_uncert*weight_uncert;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>these<sp/>are<sp/>weights<sp/>for<sp/>ORed<sp/>triggers,<sp/>for<sp/>instance<sp/>dimuon<sp/>OR<sp/>single<sp/>muon<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>treat<sp/>everything<sp/>as<sp/>ORed:<sp/>calculate<sp/>weight<sp/>for<sp/>each<sp/>type,<sp/>then<sp/>combine<sp/>weights<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>objects<sp/>of<sp/>same<sp/>type<sp/>are<sp/>ORed:<sp/>kMuon,<sp/>kTau,<sp/>kElectron,<sp/>kJet,<sp/>kMuonMO,<sp/>kTauMO,<sp/>kElectronMO,<sp/>kJetMo<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>objects<sp/>of<sp/>different<sp/>type<sp/>are<sp/>handled<sp/>differently<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>type<sp/>is<sp/>kMOANDed,<sp/>everything<sp/>is<sp/>ANDed.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>type<sp/>is<sp/>kMOORed,<sp/>kMuonMO,<sp/>kTauMO,<sp/>kElectronMO,<sp/>kJetMO<sp/>are<sp/>ANDed;<sp/>all<sp/>others<sp/>are<sp/>ORed<sp/>with<sp/>each<sp/>other!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1a3ad807d3139dbdb9f03a0ca4a2050171" kindref="member">GetType</ref>()<sp/>&gt;=<sp/>APEvtWeight::kORed<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>temp_weight_rel(12,1.);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculate<sp/>single<sp/>object<sp/>trigger<sp/>weights:<sp/>OR<sp/>of<sp/>all<sp/>objects<sp/>of<sp/>same<sp/>type:<sp/>kMuon,<sp/>kTau,<sp/>kElectron,<sp/>kJet,<sp/>kMuonMO,<sp/>kTauMO,<sp/>kElectronMO,<sp/>kJetMO<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>8;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>I<sp/>=<sp/>temp_vec_all[j].size();<sp/>i<sp/>&lt;<sp/>I;<sp/>++i<sp/>)<sp/>temp_weight_rel[j]<sp/>*=<sp/>(1.0<sp/>-<sp/>temp_vec_all[j][i]-&gt;GetExpectancy());</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>triggers<sp/>intended<sp/>to<sp/>be<sp/>used<sp/>in<sp/>ORing,<sp/>set<sp/>weight<sp/>to<sp/>1.<sp/>if<sp/>there<sp/>is<sp/>no<sp/>object<sp/>and<sp/>an<sp/>AND<sp/>is<sp/>require:<sp/>(if<sp/>no<sp/>object<sp/>is<sp/>added,<sp/>assume<sp/>none<sp/>is<sp/>required)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>j<sp/>&lt;<sp/>4<sp/>)<sp/>temp_weight_rel[j]<sp/>=<sp/>(temp_vec_all[j].size()<sp/>&gt;<sp/>0<sp/>||<sp/>evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1a3ad807d3139dbdb9f03a0ca4a2050171" kindref="member">GetType</ref>()<sp/>==<sp/>APEvtWeight::kORed<sp/>||<sp/>evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1a3ad807d3139dbdb9f03a0ca4a2050171" kindref="member">GetType</ref>()<sp/>==<sp/>APEvtWeight::kMOORed)<sp/>?<sp/>(1.0<sp/>-<sp/>temp_weight_rel[j])<sp/>:<sp/>1.;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>triggers<sp/>inteded<sp/>to<sp/>be<sp/>used<sp/>in<sp/>ANDing,<sp/>set<sp/>weight<sp/>to<sp/>1.<sp/>if<sp/>there<sp/>is<sp/>no<sp/>object<sp/>added<sp/>(if<sp/>none<sp/>is<sp/>added<sp/>assume<sp/>none<sp/>is<sp/>required)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>temp_weight_rel[j]<sp/>=<sp/>(temp_vec_all[j].size()<sp/>&gt;<sp/>0)<sp/>?<sp/>(1.0<sp/>-<sp/>temp_weight_rel[j])<sp/>:<sp/>1.;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculate<sp/>diobject<sp/>trigger<sp/>weights:<sp/>OR<sp/>of<sp/>all<sp/>objects<sp/>of<sp/>same<sp/>type<sp/>but<sp/>require<sp/>at<sp/>least<sp/>2:<sp/>kDiMuon,<sp/>kDiTau,<sp/>kDiElectron,<sp/>kDiJet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>8;<sp/>j<sp/>&lt;<sp/>12;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>temp_vec_all[j].size()<sp/>&gt;=<sp/>2<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>I<sp/>=<sp/>temp_vec_all[j].size();<sp/>i<sp/>&lt;<sp/>I;<sp/>++i)<sp/>temp_weight_rel[j]<sp/>*=<sp/>(1.0<sp/>-<sp/>temp_vec_all[j][i]-&gt;GetExpectancy());</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>I<sp/>=<sp/>temp_vec_all[j].size();<sp/>i<sp/>&lt;<sp/>I;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>temp_weight<sp/>=<sp/>temp_vec_all[j][i]-&gt;GetExpectancy();</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>I;<sp/>++k<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>k<sp/>==<sp/>i<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_weight<sp/>*=<sp/>(1.0<sp/>-<sp/>temp_vec_all[j][k]-&gt;GetExpectancy());</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_weight_rel[j]<sp/>+=<sp/>temp_weight;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>temp_weight_rel[j]<sp/>=<sp/>(temp_vec_all[j].size()<sp/>&gt;<sp/>0<sp/>||<sp/>evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1a3ad807d3139dbdb9f03a0ca4a2050171" kindref="member">GetType</ref>()<sp/>==<sp/>APEvtWeight::kORed<sp/>||<sp/>evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1a3ad807d3139dbdb9f03a0ca4a2050171" kindref="member">GetType</ref>()<sp/>==<sp/>APEvtWeight::kMOORed)<sp/>?<sp/>(1.0<sp/>-<sp/>temp_weight_rel[j])<sp/>:<sp/>1.;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculat<sp/>weight<sp/>for<sp/>multiobject<sp/>trigger<sp/>(AND<sp/>of<sp/>all<sp/>MO<sp/>objects)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>temp_weight_MO<sp/>=<sp/>1.;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_noObject_MO<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>4;<sp/>l<sp/>&lt;<sp/>8;<sp/>++l<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>temp_weight_MO<sp/>*=<sp/>temp_weight_rel[l];</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>temp_vec_all[l].size()<sp/>==<sp/>0<sp/>)<sp/>n_noObject_MO<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/></highlight><highlight class="comment">/*(evt_weight-&gt;GetType()<sp/>==<sp/>APEvtWeight::kORed<sp/>||<sp/>evt_weight-&gt;GetType()<sp/>==<sp/>APEvtWeight::kMOORed)<sp/>&amp;&amp;*/</highlight><highlight class="normal"><sp/>n_noObject_MO<sp/>&gt;=<sp/>2<sp/>)<sp/>temp_weight_MO<sp/>=<sp/>0.;<sp/></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>all<sp/>partial<sp/>weights<sp/>calculated;<sp/>now<sp/>calculate<sp/>uncertainties<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>single<sp/>object<sp/>triggers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>8;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>I<sp/>=<sp/>temp_vec_all[j].size();<sp/>i<sp/>&lt;<sp/>I;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;int&gt;<sp/>coord<sp/>=<sp/>temp_vec_all[j][i]-&gt;GetCoords();</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>weight_uncert<sp/>=<sp/>sqrt(temp_vec_all[j][i]-&gt;<ref refid="d8/d06/classAPWeightSum_1a4d87acc9143fd3537d480944ebac0dcb" kindref="member">GetVariance</ref>());</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>I;<sp/>++k<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>k<sp/>==<sp/>i<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight_uncert<sp/>*=<sp/>(1.0<sp/>-<sp/>temp_vec_all[j][k]-&gt;GetExpectancy());</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>4;<sp/>++l<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>l<sp/>==<sp/>j<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1a3ad807d3139dbdb9f03a0ca4a2050171" kindref="member">GetType</ref>()<sp/>==<sp/>APEvtWeight::kMOANDed<sp/>)<sp/>weight_uncert<sp/>*=<sp/>temp_weight_rel[l];</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1a3ad807d3139dbdb9f03a0ca4a2050171" kindref="member">GetType</ref>()<sp/>==<sp/>APEvtWeight::kORed<sp/>||<sp/>evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1a3ad807d3139dbdb9f03a0ca4a2050171" kindref="member">GetType</ref>()<sp/>==<sp/>APEvtWeight::kMOORed<sp/>)<sp/>weight_uncert<sp/>*=<sp/>(1.0<sp/>-<sp/>temp_weight_rel[l]);<sp/></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;WARNING:<sp/>handling<sp/>for<sp/>this<sp/>weight<sp/>type<sp/>is<sp/>unknown!<sp/>uncertainties<sp/>will<sp/>be<sp/>incorrect&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>8;<sp/>l<sp/>&lt;<sp/>12;<sp/>++l<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>l<sp/>==<sp/>j<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1a3ad807d3139dbdb9f03a0ca4a2050171" kindref="member">GetType</ref>()<sp/>==<sp/>APEvtWeight::kMOANDed<sp/>)<sp/>weight_uncert<sp/>*=<sp/>temp_weight_rel[l];</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1a3ad807d3139dbdb9f03a0ca4a2050171" kindref="member">GetType</ref>()<sp/>==<sp/>APEvtWeight::kORed<sp/>||<sp/>evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1a3ad807d3139dbdb9f03a0ca4a2050171" kindref="member">GetType</ref>()<sp/>==<sp/>APEvtWeight::kMOORed<sp/>)<sp/>weight_uncert<sp/>*=<sp/>(1.0<sp/>-<sp/>temp_weight_rel[l]);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;WARNING:<sp/>handling<sp/>for<sp/>this<sp/>weight<sp/>type<sp/>is<sp/>unknown!<sp/>uncertainties<sp/>will<sp/>be<sp/>incorrect&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>j<sp/>&lt;<sp/>4<sp/>||<sp/>j<sp/>&gt;<sp/>7<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1a3ad807d3139dbdb9f03a0ca4a2050171" kindref="member">GetType</ref>()<sp/>==<sp/>APEvtWeight::kMOANDed<sp/>)<sp/>weight_uncert<sp/>*=<sp/>temp_weight_MO;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1a3ad807d3139dbdb9f03a0ca4a2050171" kindref="member">GetType</ref>()<sp/>==<sp/>APEvtWeight::kORed<sp/>||<sp/>evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1a3ad807d3139dbdb9f03a0ca4a2050171" kindref="member">GetType</ref>()<sp/>==<sp/>APEvtWeight::kMOORed<sp/>)<sp/>weight_uncert<sp/>*=<sp/>(1.0<sp/>-<sp/>temp_weight_MO);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;WARNING:<sp/>handling<sp/>for<sp/>this<sp/>weight<sp/>type<sp/>is<sp/>unknown!<sp/>uncertainties<sp/>will<sp/>be<sp/>incorrect&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>j<sp/>&gt;=<sp/>4<sp/>&amp;&amp;<sp/>j<sp/>&lt;=<sp/>7<sp/>&amp;&amp;<sp/>temp_weight_rel[j]<sp/>&gt;<sp/>numeric_limits&lt;double&gt;::epsilon()<sp/>)<sp/>weight_uncert<sp/>=<sp/>weight_uncert*temp_weight_MO/temp_weight_rel[j];</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1a610f784ff4bd80c0211311f9e0917254" kindref="member">_linear_uncert</ref>[temp_vec_all[j][i]-&gt;GetID()]-&gt;SetBinContent(&amp;coord.front(),<sp/><ref refid="d8/d06/classAPWeightSum_1a610f784ff4bd80c0211311f9e0917254" kindref="member">_linear_uncert</ref>[temp_vec_all[j][i]-&gt;GetID()]-&gt;GetBinContent(&amp;coord.front())+weight_uncert);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1a754a96e9f371996c446e4d22f4cc894e" kindref="member">_variance_nocorr</ref><sp/>+=<sp/>weight_uncert*weight_uncert;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>diobject<sp/>triggers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>8;<sp/>j<sp/>&lt;<sp/>12;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>temp_vec_all[j].size()<sp/>&gt;=<sp/>2<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>I<sp/>=<sp/>temp_vec_all[j].size();<sp/>i<sp/>&lt;<sp/>I;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;int&gt;<sp/>coord<sp/>=<sp/>temp_vec_all[j][i]-&gt;GetCoords();</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>weight_uncert<sp/>=<sp/>sqrt(temp_vec_all[j][i]-&gt;<ref refid="d8/d06/classAPWeightSum_1a4d87acc9143fd3537d480944ebac0dcb" kindref="member">GetVariance</ref>());</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>weight_derivative<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>I;<sp/>++k<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>k<sp/>==<sp/>i<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>weight_derivative_temp<sp/>=<sp/>temp_vec_all[j][k]-&gt;GetExpectancy();</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>I;<sp/>++l<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>l<sp/>==<sp/>k<sp/>||<sp/>l<sp/>==<sp/>i<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight_derivative_temp<sp/>*=<sp/>(1.0<sp/>-<sp/>temp_vec_all[j][l]-&gt;GetExpectancy());</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight_derivative<sp/>+=<sp/>weight_derivative_temp;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight_uncert<sp/>*=<sp/>weight_derivative;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>4;<sp/>++l<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>l<sp/>==<sp/>j<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1a3ad807d3139dbdb9f03a0ca4a2050171" kindref="member">GetType</ref>()<sp/>==<sp/>APEvtWeight::kMOANDed<sp/>)<sp/>weight_uncert<sp/>*=<sp/>temp_weight_rel[l];</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1a3ad807d3139dbdb9f03a0ca4a2050171" kindref="member">GetType</ref>()<sp/>==<sp/>APEvtWeight::kORed<sp/>||<sp/>evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1a3ad807d3139dbdb9f03a0ca4a2050171" kindref="member">GetType</ref>()<sp/>==<sp/>APEvtWeight::kMOORed<sp/>)<sp/>weight_uncert<sp/>*=<sp/>(1.0<sp/>-<sp/>temp_weight_rel[l]);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;WARNING:<sp/>handling<sp/>for<sp/>this<sp/>weight<sp/>type<sp/>is<sp/>unknown!<sp/>uncertainties<sp/>will<sp/>be<sp/>incorrect&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>8;<sp/>l<sp/>&lt;<sp/>12;<sp/>++l<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>l<sp/>==<sp/>j<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1a3ad807d3139dbdb9f03a0ca4a2050171" kindref="member">GetType</ref>()<sp/>==<sp/>APEvtWeight::kMOANDed<sp/>)<sp/>weight_uncert<sp/>*=<sp/>temp_weight_rel[l];</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1a3ad807d3139dbdb9f03a0ca4a2050171" kindref="member">GetType</ref>()<sp/>==<sp/>APEvtWeight::kORed<sp/>||<sp/>evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1a3ad807d3139dbdb9f03a0ca4a2050171" kindref="member">GetType</ref>()<sp/>==<sp/>APEvtWeight::kMOORed<sp/>)<sp/>weight_uncert<sp/>*=<sp/>(1.0<sp/>-<sp/>temp_weight_rel[l]);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;WARNING:<sp/>handling<sp/>for<sp/>this<sp/>weight<sp/>type<sp/>is<sp/>unknown!<sp/>uncertainties<sp/>will<sp/>be<sp/>incorrect&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1a3ad807d3139dbdb9f03a0ca4a2050171" kindref="member">GetType</ref>()<sp/>==<sp/>APEvtWeight::kMOANDed<sp/>)<sp/>weight_uncert<sp/>*=<sp/>temp_weight_MO;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1a3ad807d3139dbdb9f03a0ca4a2050171" kindref="member">GetType</ref>()<sp/>==<sp/>APEvtWeight::kORed<sp/>||<sp/>evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1a3ad807d3139dbdb9f03a0ca4a2050171" kindref="member">GetType</ref>()<sp/>==<sp/>APEvtWeight::kMOORed<sp/>)<sp/>weight_uncert<sp/>*=<sp/>(1.0<sp/>-<sp/>temp_weight_MO);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;WARNING:<sp/>handling<sp/>for<sp/>this<sp/>weight<sp/>type<sp/>is<sp/>unknown!<sp/>uncertainties<sp/>will<sp/>be<sp/>incorrect&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>j<sp/>&gt;=<sp/>4<sp/>&amp;&amp;<sp/>j<sp/>&lt;=<sp/>7<sp/>&amp;&amp;<sp/>temp_weight_rel[j]<sp/>&gt;<sp/>numeric_limits&lt;double&gt;::epsilon()<sp/>)<sp/>weight_uncert<sp/>/=<sp/>temp_weight_rel[j];</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1a610f784ff4bd80c0211311f9e0917254" kindref="member">_linear_uncert</ref>[temp_vec_all[j][i]-&gt;GetID()]-&gt;SetBinContent(&amp;coord.front(),<sp/><ref refid="d8/d06/classAPWeightSum_1a610f784ff4bd80c0211311f9e0917254" kindref="member">_linear_uncert</ref>[temp_vec_all[j][i]-&gt;GetID()]-&gt;GetBinContent(&amp;coord.front())+weight_uncert);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1a754a96e9f371996c446e4d22f4cc894e" kindref="member">_variance_nocorr</ref><sp/>+=<sp/>weight_uncert*weight_uncert;<sp/></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1a0bec86316fab02681aec41329f2584fe" kindref="member">_variance_sys</ref><sp/>+=<sp/>ext_weight<sp/>*<sp/>evt_weight-&gt;<ref refid="d8/d7f/classAPEvtWeight_1af89679fc3d2d31026e6fba1f07e76bc4" kindref="member">GetSysVariance</ref>();</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>_isComputed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="448"><highlight class="normal">}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d06/classAPWeightSum_1adcd91205ea827623fcaed86c04a500be" kindref="member">APWeightSum::Compute</ref>()<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1a5eb9c992587781905e0543a6f2c4fa86" kindref="member">_variance</ref><sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1a1eab3008b66549fdca839308c2f3f4b1" kindref="member">_variance_fullcorr</ref><sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iLinearUncert<sp/>=<sp/>0,<sp/>ILinearUncert<sp/>=<sp/><ref refid="d8/d06/classAPWeightSum_1a610f784ff4bd80c0211311f9e0917254" kindref="member">_linear_uncert</ref>.size();<sp/>iLinearUncert<sp/>&lt;<sp/>ILinearUncert;<sp/>++iLinearUncert)<sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="d8/d06/classAPWeightSum_1a610f784ff4bd80c0211311f9e0917254" kindref="member">_linear_uncert</ref>[iLinearUncert]<sp/>==<sp/>0<sp/>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>temp_linear_uncerts<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>I<sp/>=<sp/><ref refid="d8/d06/classAPWeightSum_1a610f784ff4bd80c0211311f9e0917254" kindref="member">_linear_uncert</ref>[iLinearUncert]-&gt;GetNbins();<sp/>i<sp/>&lt;<sp/>I;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bin_content<sp/>=<sp/><ref refid="d8/d06/classAPWeightSum_1a610f784ff4bd80c0211311f9e0917254" kindref="member">_linear_uncert</ref>[iLinearUncert]-&gt;GetBinContent(i);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1a5eb9c992587781905e0543a6f2c4fa86" kindref="member">_variance</ref><sp/>+=<sp/>bin_content*bin_content;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>temp_linear_uncerts<sp/>+=<sp/>bin_content;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d06/classAPWeightSum_1a1eab3008b66549fdca839308c2f3f4b1" kindref="member">_variance_fullcorr</ref><sp/>+=<sp/>temp_linear_uncerts*temp_linear_uncerts;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>_isComputed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="465"><highlight class="normal">}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal">THnSparse*<sp/><ref refid="d8/d06/classAPWeightSum_1a715aa9a75486da70ce28d2bb0769659a" kindref="member">APWeightSum::GetUncertHistogram</ref>(<sp/><ref refid="d5/d8d/classAPReweightBase" kindref="compound">APReweightBase</ref>*<sp/>weighter<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>temp_ID<sp/>=<sp/>weighter-&gt;<ref refid="d5/d8d/classAPReweightBase_1a11f0f5d34d75dc0e42e93c79cd868c3b" kindref="member">GetID</ref>();</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>temp_ID<sp/>&gt;<sp/><ref refid="d8/d06/classAPWeightSum_1a610f784ff4bd80c0211311f9e0917254" kindref="member">_linear_uncert</ref>.size()-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;WARNING:<sp/>ID<sp/>unknown.<sp/>Returning<sp/>0-pointer!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d8/d06/classAPWeightSum_1a610f784ff4bd80c0211311f9e0917254" kindref="member">_linear_uncert</ref>[temp_ID];</highlight></codeline>
<codeline lineno="474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal">vector&lt;THnSparse*&gt;<sp/><ref refid="d8/d06/classAPWeightSum_1a0e204b36b0425adfec9cb517c5962bc0" kindref="member">APWeightSum::GetAllUncertHistograms</ref>(<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d8/d06/classAPWeightSum_1a610f784ff4bd80c0211311f9e0917254" kindref="member">_linear_uncert</ref>;</highlight></codeline>
<codeline lineno="478"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/ReweightUtils/Root/APWeightSum.cxx"/>
  </compounddef>
</doxygen>
