<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="de/d8f/OutputStream_8cxx" kind="file">
    <compoundname>OutputStream.cxx</compoundname>
    <includes refid="da/d9f/OutputStream_8h" local="no">EventLoop/OutputStream.h</includes>
    <includes refid="d7/d36/Algorithm_8h" local="no">EventLoop/Algorithm.h</includes>
    <includes refid="d3/dac/Assert_8h" local="no">RootCoreUtils/Assert.h</includes>
    <includes refid="d8/da4/DiskOutput_8h" local="no">SampleHandler/DiskOutput.h</includes>
    <incdepgraph>
      <node id="128367">
        <label>SampleHandler/SampleHandler.h</label>
        <link refid="d2/da1/SampleHandler_8h_source"/>
        <childnode refid="128361" relation="include">
        </childnode>
        <childnode refid="128368" relation="include">
        </childnode>
        <childnode refid="128369" relation="include">
        </childnode>
        <childnode refid="128370" relation="include">
        </childnode>
        <childnode refid="128358" relation="include">
        </childnode>
        <childnode refid="128359" relation="include">
        </childnode>
      </node>
      <node id="128373">
        <label>EventLoop/StatusCode.h</label>
        <link refid="d0/d16/EventLoop_2EventLoop_2StatusCode_8h_source"/>
        <childnode refid="128357" relation="include">
        </childnode>
      </node>
      <node id="128364">
        <label>RootCoreUtils/Deprecated.h</label>
        <link refid="d1/d0f/RootCoreUtils_2RootCoreUtils_2Deprecated_8h_source"/>
        <childnode refid="128363" relation="include">
        </childnode>
      </node>
      <node id="128365">
        <label>string</label>
      </node>
      <node id="128370">
        <label>map</label>
      </node>
      <node id="128360">
        <label>SampleHandler/MetaObject.h</label>
        <link refid="d7/d50/MetaObject_8h_source"/>
        <childnode refid="128361" relation="include">
        </childnode>
        <childnode refid="128362" relation="include">
        </childnode>
        <childnode refid="128364" relation="include">
        </childnode>
        <childnode refid="128365" relation="include">
        </childnode>
        <childnode refid="128366" relation="include">
        </childnode>
      </node>
      <node id="128355">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/Root/OutputStream.cxx</label>
        <link refid="OutputStream.cxx"/>
        <childnode refid="128356" relation="include">
        </childnode>
        <childnode refid="128371" relation="include">
        </childnode>
        <childnode refid="128362" relation="include">
        </childnode>
        <childnode refid="128374" relation="include">
        </childnode>
      </node>
      <node id="128357">
        <label>EventLoop/Global.h</label>
        <link refid="d1/daf/EventLoop_2EventLoop_2Global_8h_source"/>
      </node>
      <node id="128359">
        <label>TObject.h</label>
      </node>
      <node id="128358">
        <label>vector</label>
      </node>
      <node id="128363">
        <label>RootCoreUtils/Global.h</label>
        <link refid="d6/d7f/RootCoreUtils_2RootCoreUtils_2Global_8h_source"/>
      </node>
      <node id="128369">
        <label>iosfwd</label>
      </node>
      <node id="128371">
        <label>EventLoop/Algorithm.h</label>
        <link refid="d7/d36/Algorithm_8h_source"/>
        <childnode refid="128357" relation="include">
        </childnode>
        <childnode refid="128372" relation="include">
        </childnode>
        <childnode refid="128373" relation="include">
        </childnode>
      </node>
      <node id="128372">
        <label>TNamed.h</label>
      </node>
      <node id="128374">
        <label>SampleHandler/DiskOutput.h</label>
        <link refid="d8/da4/DiskOutput_8h_source"/>
        <childnode refid="128361" relation="include">
        </childnode>
        <childnode refid="128359" relation="include">
        </childnode>
      </node>
      <node id="128362">
        <label>RootCoreUtils/Assert.h</label>
        <link refid="d3/dac/Assert_8h_source"/>
        <childnode refid="128363" relation="include">
        </childnode>
      </node>
      <node id="128361">
        <label>SampleHandler/Global.h</label>
        <link refid="d3/df9/SampleHandler_2SampleHandler_2Global_8h_source"/>
      </node>
      <node id="128368">
        <label>memory</label>
      </node>
      <node id="128356">
        <label>EventLoop/OutputStream.h</label>
        <link refid="da/d9f/OutputStream_8h_source"/>
        <childnode refid="128357" relation="include">
        </childnode>
        <childnode refid="128358" relation="include">
        </childnode>
        <childnode refid="128359" relation="include">
        </childnode>
        <childnode refid="128360" relation="include">
        </childnode>
        <childnode refid="128367" relation="include">
        </childnode>
      </node>
      <node id="128366">
        <label>TCollection.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="de/d8f/OutputStream_8cxx_1a47cf0c629f78591d48414ca21af01915" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ClassImp</definition>
        <argsstring>(EL::OutputStream) namespace EL</argsstring>
        <name>ClassImp</name>
        <param>
          <type><ref refid="d5/dfe/classEL_1_1OutputStream" kindref="compound">EL::OutputStream</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/Root/OutputStream.cxx" line="27" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/Root/OutputStream.cxx" bodystart="24" bodyend="179"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>Nils<sp/>Krumnack<sp/>2011.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>(See<sp/>accompanying<sp/>file<sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Please<sp/>feel<sp/>free<sp/>to<sp/>contact<sp/>me<sp/>(krumnack@iastate.edu)<sp/>for<sp/>bug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>reports,<sp/>feature<sp/>suggestions,<sp/>praise<sp/>and<sp/>complaints.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EventLoop/OutputStream.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EventLoop/Algorithm.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;RootCoreUtils/Assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SampleHandler/DiskOutput.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>method<sp/>implementations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal">ClassImp<sp/>(<ref refid="d5/dfe/classEL_1_1OutputStream" kindref="compound">EL::OutputStream</ref>)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">namespace<sp/>EL</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>OutputStream::optType<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;EventLoop_OutputStreamType&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>OutputStream::optMergeCmd<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;EventLoop_MergeCmd&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>OutputStream::optContainerSuffix<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;EventLoop_DSSuffix&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputStream<sp/>::</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>testInvariant<sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="34"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_INVARIANT<sp/>(!m_label.empty());</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><ref refid="d5/dfe/classEL_1_1OutputStream_1a9a7c0c1250f127fbc26c5bdfe583d595" kindref="member">OutputStream ::</ref></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><ref refid="d5/dfe/classEL_1_1OutputStream_1a9a7c0c1250f127fbc26c5bdfe583d595" kindref="member">  OutputStream</ref><sp/>()</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_label<sp/>(</highlight><highlight class="stringliteral">&quot;out&quot;</highlight><highlight class="normal">),<sp/>m_output<sp/>(0)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_NEW_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="d5/dfe/classEL_1_1OutputStream_1a9a7c0c1250f127fbc26c5bdfe583d595" kindref="member">OutputStream ::</ref></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><ref refid="d5/dfe/classEL_1_1OutputStream_1a9a7c0c1250f127fbc26c5bdfe583d595" kindref="member">  OutputStream</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>val_label)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_label<sp/>(val_label),<sp/>m_output<sp/>(0)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_REQUIRE_SOFT<sp/>(!val_label.empty());</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_NEW_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="d5/dfe/classEL_1_1OutputStream_1a9a7c0c1250f127fbc26c5bdfe583d595" kindref="member">OutputStream ::</ref></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><ref refid="d5/dfe/classEL_1_1OutputStream_1a9a7c0c1250f127fbc26c5bdfe583d595" kindref="member">  OutputStream</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>val_label,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>val_type)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_label<sp/>(val_label),<sp/>m_output<sp/>(0)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_REQUIRE_SOFT<sp/>(!val_label.empty());</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>m_options.setString(optType,<sp/>val_type);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_NEW_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><ref refid="d5/dfe/classEL_1_1OutputStream_1a9a7c0c1250f127fbc26c5bdfe583d595" kindref="member">OutputStream ::</ref></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><ref refid="d5/dfe/classEL_1_1OutputStream_1a9a7c0c1250f127fbc26c5bdfe583d595" kindref="member">  OutputStream</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>OutputStream&amp;<sp/>that)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>TObject<sp/>(that),<sp/>m_label<sp/>(that.m_label),<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_options<sp/>(that.m_options),<sp/>m_output<sp/>(0)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_READ_INVARIANT<sp/>(&amp;that);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(that.m_output<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_output<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="d6/d99/classSH_1_1DiskOutput" kindref="compound" tooltip="a class representing an output location for files">SH::DiskOutput</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(that.m_output-&gt;Clone<sp/>());</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RCU_ASSERT<sp/>(m_output<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><ref refid="d5/dfe/classEL_1_1OutputStream_1ac5721f92f9fda6846d320fd16d239807" kindref="member">OutputStream ::</ref></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><ref refid="d5/dfe/classEL_1_1OutputStream_1ac5721f92f9fda6846d320fd16d239807" kindref="member">  ~OutputStream</ref><sp/>()</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_DESTROY_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_output;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>OutputStream&amp;<sp/><ref refid="d5/dfe/classEL_1_1OutputStream_1aae935fcbf9b027b81bd07ff0b6c15e82" kindref="member">OutputStream ::</ref></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><ref refid="d5/dfe/classEL_1_1OutputStream_1aae935fcbf9b027b81bd07ff0b6c15e82" kindref="member">  operator = </ref>(OutputStream<sp/>that)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>invariant<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>that.<ref refid="d5/dfe/classEL_1_1OutputStream_1aa6484707117e6e89951ea124ef905792" kindref="member">swap</ref><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/dfe/classEL_1_1OutputStream_1aa6484707117e6e89951ea124ef905792" kindref="member">OutputStream ::</ref></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><ref refid="d5/dfe/classEL_1_1OutputStream_1aa6484707117e6e89951ea124ef905792" kindref="member">  swap</ref><sp/>(OutputStream&amp;<sp/>that)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_CHANGE_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_CHANGE_INVARIANT<sp/>(&amp;that);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>m_label.swap<sp/>(that.m_label);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>m_options.<ref refid="db/d3a/classSH_1_1MetaObject_1a810234b81e92ac98c7df779249e7a14a" kindref="member" tooltip="standard swap">swap</ref><sp/>(that.m_options);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d99/classSH_1_1DiskOutput" kindref="compound" tooltip="a class representing an output location for files">SH::DiskOutput</ref><sp/>*tmp_output<sp/>=<sp/>m_output;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>m_output<sp/>=<sp/>that.m_output;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>that.m_output<sp/>=<sp/>tmp_output;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="d5/dfe/classEL_1_1OutputStream_1a9ef5507e9336b95aace7e2086bc369d2" kindref="member">OutputStream ::</ref></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><ref refid="d5/dfe/classEL_1_1OutputStream_1a9ef5507e9336b95aace7e2086bc369d2" kindref="member">  label</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="128"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_READ_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_label;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/dfe/classEL_1_1OutputStream_1a9ef5507e9336b95aace7e2086bc369d2" kindref="member">OutputStream ::</ref></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><ref refid="d5/dfe/classEL_1_1OutputStream_1a9ef5507e9336b95aace7e2086bc369d2" kindref="member">  label</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>val_label)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_CHANGE_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_REQUIRE_SOFT<sp/>(!val_label.empty());</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>m_label<sp/>=<sp/>val_label;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><ref refid="db/d3a/classSH_1_1MetaObject" kindref="compound" tooltip="A class that manages meta-data to be associated with an object.">SH::MetaObject</ref><sp/>*<ref refid="d5/dfe/classEL_1_1OutputStream_1accb97d83127add7d304d9c60cdffc3cf" kindref="member">OutputStream ::</ref></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><ref refid="d5/dfe/classEL_1_1OutputStream_1accb97d83127add7d304d9c60cdffc3cf" kindref="member">  options</ref><sp/>()</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_READ_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;m_options;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d3a/classSH_1_1MetaObject" kindref="compound" tooltip="A class that manages meta-data to be associated with an object.">SH::MetaObject</ref><sp/>*<ref refid="d5/dfe/classEL_1_1OutputStream_1accb97d83127add7d304d9c60cdffc3cf" kindref="member">OutputStream ::</ref></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><ref refid="d5/dfe/classEL_1_1OutputStream_1accb97d83127add7d304d9c60cdffc3cf" kindref="member">  options</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="156"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_READ_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;m_options;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d99/classSH_1_1DiskOutput" kindref="compound" tooltip="a class representing an output location for files">SH::DiskOutput</ref><sp/>*<ref refid="d5/dfe/classEL_1_1OutputStream_1acef69c26ba130f5a090701e8a89219f5" kindref="member">OutputStream ::</ref></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><ref refid="d5/dfe/classEL_1_1OutputStream_1acef69c26ba130f5a090701e8a89219f5" kindref="member">  output</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="165"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_READ_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_output;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/dfe/classEL_1_1OutputStream_1acef69c26ba130f5a090701e8a89219f5" kindref="member">OutputStream ::</ref></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><ref refid="d5/dfe/classEL_1_1OutputStream_1acef69c26ba130f5a090701e8a89219f5" kindref="member">  output</ref><sp/>(<ref refid="d6/d99/classSH_1_1DiskOutput" kindref="compound" tooltip="a class representing an output location for files">SH::DiskOutput</ref><sp/>*output_swallow)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_CHANGE_INVARIANT<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_output;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>m_output<sp/>=<sp/>output_swallow;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/Root/OutputStream.cxx"/>
  </compounddef>
</doxygen>
