<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="de/d37/TrigDecisionCnvTool_8cxx" kind="file">
    <compoundname>TrigDecisionCnvTool.cxx</compoundname>
    <includes local="yes">AthenaKernel/errorcheck.h</includes>
    <includes local="yes">TrigDecisionEvent/TrigDecision.h</includes>
    <includes refid="d5/db5/HLTChainList_8h" local="yes">TrigConfHLTData/HLTChainList.h</includes>
    <includes refid="d2/dfa/TrigDecisionCnvTool_8h" local="yes">TrigDecisionCnvTool.h</includes>
    <incdepgraph>
      <node id="454605">
        <label>boost/multi_index/ordered_index.hpp</label>
      </node>
      <node id="454670">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="454672">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="454630" relation="include">
        </childnode>
        <childnode refid="454597" relation="include">
        </childnode>
        <childnode refid="454637" relation="include">
        </childnode>
        <childnode refid="454638" relation="include">
        </childnode>
      </node>
      <node id="454614">
        <label>AsgTools/IAsgTool.h</label>
        <link refid="df/dd4/IAsgTool_8h_source"/>
        <childnode refid="454590" relation="include">
        </childnode>
        <childnode refid="454615" relation="include">
        </childnode>
        <childnode refid="454616" relation="include">
        </childnode>
        <childnode refid="454617" relation="include">
        </childnode>
      </node>
      <node id="454673">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="454640">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="454626" relation="include">
        </childnode>
        <childnode refid="454628" relation="include">
        </childnode>
        <childnode refid="454641" relation="include">
        </childnode>
        <childnode refid="454639" relation="include">
        </childnode>
      </node>
      <node id="454599">
        <label>TrigConfHLTData/HLTLevel.h</label>
        <link refid="dc/d46/HLTLevel_8h_source"/>
        <childnode refid="454590" relation="include">
        </childnode>
      </node>
      <node id="454636">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="454638">
        <label>functional</label>
      </node>
      <node id="454635">
        <label>limits</label>
      </node>
      <node id="454641">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="454668">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="454617">
        <label>GaudiKernel/IAlgTool.h</label>
      </node>
      <node id="454632">
        <label>iterator</label>
      </node>
      <node id="454656">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="454590" relation="include">
        </childnode>
        <childnode refid="454657" relation="include">
        </childnode>
      </node>
      <node id="454680">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="454627" relation="include">
        </childnode>
        <childnode refid="454681" relation="include">
        </childnode>
        <childnode refid="454682" relation="include">
        </childnode>
        <childnode refid="454649" relation="include">
        </childnode>
        <childnode refid="454590" relation="include">
        </childnode>
      </node>
      <node id="454653">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="454592" relation="include">
        </childnode>
        <childnode refid="454633" relation="include">
        </childnode>
      </node>
      <node id="454618">
        <label>TrigConfInterfaces/IHLTConfigSvc.h</label>
        <link refid="db/def/IHLTConfigSvc_8h_source"/>
        <childnode refid="454619" relation="include">
        </childnode>
        <childnode refid="454620" relation="include">
        </childnode>
      </node>
      <node id="454609">
        <label>stdint.h</label>
      </node>
      <node id="454650">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="454628" relation="include">
        </childnode>
        <childnode refid="454649" relation="include">
        </childnode>
      </node>
      <node id="454645">
        <label>RVersion.h</label>
      </node>
      <node id="454629">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="454630" relation="include">
        </childnode>
        <childnode refid="454637" relation="include">
        </childnode>
        <childnode refid="454638" relation="include">
        </childnode>
      </node>
      <node id="454634">
        <label>cmath</label>
      </node>
      <node id="454684">
        <label>cassert</label>
      </node>
      <node id="454613">
        <label>TrigDecisionInterface/ITrigDecisionTool.h</label>
        <link refid="d4/d40/ITrigDecisionTool_8h_source"/>
        <childnode refid="454590" relation="include">
        </childnode>
        <childnode refid="454592" relation="include">
        </childnode>
        <childnode refid="454614" relation="include">
        </childnode>
      </node>
      <node id="454682">
        <label>stdexcept</label>
      </node>
      <node id="454671">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="454587">
        <label>AthenaKernel/errorcheck.h</label>
      </node>
      <node id="454615">
        <label>AsgTools/AsgToolsConf.h</label>
        <link refid="df/db7/AsgToolsConf_8h_source"/>
      </node>
      <node id="454590">
        <label>string</label>
      </node>
      <node id="454674">
        <label>AthContainers/AuxVectorData.h</label>
        <link refid="d9/df2/AuxVectorData_8h"/>
        <childnode refid="454627" relation="include">
        </childnode>
        <childnode refid="454626" relation="include">
        </childnode>
        <childnode refid="454656" relation="include">
        </childnode>
        <childnode refid="454653" relation="include">
        </childnode>
        <childnode refid="454642" relation="include">
        </childnode>
        <childnode refid="454675" relation="include">
        </childnode>
        <childnode refid="454676" relation="include">
        </childnode>
        <childnode refid="454659" relation="include">
        </childnode>
        <childnode refid="454592" relation="include">
        </childnode>
        <childnode refid="454597" relation="include">
        </childnode>
        <childnode refid="454633" relation="include">
        </childnode>
        <childnode refid="454677" relation="include">
        </childnode>
        <childnode refid="454678" relation="include">
        </childnode>
        <childnode refid="454666" relation="include">
        </childnode>
        <childnode refid="454679" relation="include">
        </childnode>
      </node>
      <node id="454648">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="454628" relation="include">
        </childnode>
        <childnode refid="454649" relation="include">
        </childnode>
      </node>
      <node id="454677">
        <label>AthContainers/tools/likely.h</label>
        <link refid="d6/dd6/likely_8h"/>
      </node>
      <node id="454593">
        <label>map</label>
      </node>
      <node id="454646">
        <label>RootMetaSelection.h</label>
      </node>
      <node id="454663">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="454687">
        <label>EventInfo/TriggerInfo.h</label>
      </node>
      <node id="454595">
        <label>TrigConfL1Data/TrigConfData.h</label>
        <link refid="da/da8/TrigConfData_8h_source"/>
        <childnode refid="454591" relation="include">
        </childnode>
        <childnode refid="454590" relation="include">
        </childnode>
      </node>
      <node id="454600">
        <label>fstream</label>
      </node>
      <node id="454678">
        <label>AthContainers/tools/assume.h</label>
        <link refid="d2/d20/assume_8h"/>
      </node>
      <node id="454660">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="454612">
        <label>GaudiKernel/ServiceHandle.h</label>
      </node>
      <node id="454625">
        <label>AthContainersInterfaces/IAuxElement.h</label>
        <link refid="dd/d7a/IAuxElement_8h"/>
      </node>
      <node id="454644">
        <label>AthLinks/tools/selection_ns.h</label>
        <link refid="d3/dec/selection__ns_8h"/>
        <childnode refid="454645" relation="include">
        </childnode>
        <childnode refid="454646" relation="include">
        </childnode>
      </node>
      <node id="454676">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="454669">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="454610">
        <label>AthenaBaseComps/AthAlgTool.h</label>
      </node>
      <node id="454655">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="454656" relation="include">
        </childnode>
        <childnode refid="454635" relation="include">
        </childnode>
        <childnode refid="454609" relation="include">
        </childnode>
        <childnode refid="454658" relation="include">
        </childnode>
      </node>
      <node id="454611">
        <label>GaudiKernel/ToolHandle.h</label>
      </node>
      <node id="454627">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="454628" relation="include">
        </childnode>
        <childnode refid="454629" relation="include">
        </childnode>
      </node>
      <node id="454630">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="454631" relation="include">
        </childnode>
        <childnode refid="454597" relation="include">
        </childnode>
        <childnode refid="454632" relation="include">
        </childnode>
        <childnode refid="454628" relation="include">
        </childnode>
        <childnode refid="454633" relation="include">
        </childnode>
        <childnode refid="454634" relation="include">
        </childnode>
        <childnode refid="454635" relation="include">
        </childnode>
        <childnode refid="454590" relation="include">
        </childnode>
        <childnode refid="454636" relation="include">
        </childnode>
      </node>
      <node id="454621">
        <label>xAODTriggerCnv/ITrigDecisionCnvTool.h</label>
        <link refid="d5/d1d/ITrigDecisionCnvTool_8h_source"/>
        <childnode refid="454617" relation="include">
        </childnode>
        <childnode refid="454622" relation="include">
        </childnode>
      </node>
      <node id="454622">
        <label>xAODTrigger/TrigDecision.h</label>
        <link refid="d9/d6b/TrigDecision_8h_source"/>
        <childnode refid="454623" relation="include">
        </childnode>
        <childnode refid="454686" relation="include">
        </childnode>
      </node>
      <node id="454596">
        <label>TrigConfHLTData/HLTPrescale.h</label>
        <link refid="df/da4/HLTPrescale_8h_source"/>
        <childnode refid="454591" relation="include">
        </childnode>
        <childnode refid="454590" relation="include">
        </childnode>
        <childnode refid="454593" relation="include">
        </childnode>
        <childnode refid="454592" relation="include">
        </childnode>
        <childnode refid="454597" relation="include">
        </childnode>
        <childnode refid="454595" relation="include">
        </childnode>
        <childnode refid="454598" relation="include">
        </childnode>
      </node>
      <node id="454649">
        <label>typeinfo</label>
      </node>
      <node id="454683">
        <label>AthContainers/AuxElement.icc</label>
        <link refid="d2/d37/AuxElement_8icc"/>
        <childnode refid="454677" relation="include">
        </childnode>
        <childnode refid="454684" relation="include">
        </childnode>
      </node>
      <node id="454619">
        <label>GaudiKernel/IService.h</label>
      </node>
      <node id="454658">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="454675">
        <label>AthenaKernel/ILockable.h</label>
      </node>
      <node id="454643">
        <label>AthLinks/DataLinkBase.h</label>
        <link refid="db/da8/DataLinkBase_8h_source"/>
        <childnode refid="454609" relation="include">
        </childnode>
      </node>
      <node id="454589">
        <label>TrigConfHLTData/HLTChainList.h</label>
        <link refid="d5/db5/HLTChainList_8h_source"/>
        <childnode refid="454590" relation="include">
        </childnode>
        <childnode refid="454591" relation="include">
        </childnode>
        <childnode refid="454592" relation="include">
        </childnode>
        <childnode refid="454593" relation="include">
        </childnode>
        <childnode refid="454594" relation="include">
        </childnode>
        <childnode refid="454598" relation="include">
        </childnode>
        <childnode refid="454602" relation="include">
        </childnode>
        <childnode refid="454603" relation="include">
        </childnode>
        <childnode refid="454604" relation="include">
        </childnode>
        <childnode refid="454605" relation="include">
        </childnode>
        <childnode refid="454606" relation="include">
        </childnode>
        <childnode refid="454607" relation="include">
        </childnode>
      </node>
      <node id="454657">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="454662">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="454598">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="454639">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="454647">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="454627" relation="include">
        </childnode>
        <childnode refid="454648" relation="include">
        </childnode>
        <childnode refid="454650" relation="include">
        </childnode>
        <childnode refid="454651" relation="include">
        </childnode>
        <childnode refid="454664" relation="include">
        </childnode>
        <childnode refid="454666" relation="include">
        </childnode>
        <childnode refid="454628" relation="include">
        </childnode>
        <childnode refid="454649" relation="include">
        </childnode>
        <childnode refid="454592" relation="include">
        </childnode>
        <childnode refid="454672" relation="include">
        </childnode>
        <childnode refid="454673" relation="include">
        </childnode>
      </node>
      <node id="454592">
        <label>vector</label>
      </node>
      <node id="454620">
        <label>TrigConfInterfaces/IIHLTConfigSvc.h</label>
        <link refid="dd/db0/IIHLTConfigSvc_8h_source"/>
        <childnode refid="454609" relation="include">
        </childnode>
      </node>
      <node id="454597">
        <label>utility</label>
      </node>
      <node id="454659">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="454604">
        <label>boost/multi_index/hashed_index.hpp</label>
      </node>
      <node id="454667">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="454652">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="454666">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="454667" relation="include">
        </childnode>
        <childnode refid="454668" relation="include">
        </childnode>
        <childnode refid="454669" relation="include">
        </childnode>
        <childnode refid="454670" relation="include">
        </childnode>
        <childnode refid="454671" relation="include">
        </childnode>
      </node>
      <node id="454607">
        <label>boost/multi_index/composite_key.hpp</label>
      </node>
      <node id="454591">
        <label>iosfwd</label>
      </node>
      <node id="454633">
        <label>cstdlib</label>
      </node>
      <node id="454681">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="454626">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="454627" relation="include">
        </childnode>
        <childnode refid="454628" relation="include">
        </childnode>
        <childnode refid="454639" relation="include">
        </childnode>
      </node>
      <node id="454628">
        <label>cstddef</label>
      </node>
      <node id="454602">
        <label>boost/multi_index_container.hpp</label>
      </node>
      <node id="454679">
        <label>AthContainers/AuxVectorData.icc</label>
        <link refid="da/de7/AuxVectorData_8icc"/>
        <childnode refid="454647" relation="include">
        </childnode>
        <childnode refid="454640" relation="include">
        </childnode>
        <childnode refid="454626" relation="include">
        </childnode>
        <childnode refid="454677" relation="include">
        </childnode>
        <childnode refid="454678" relation="include">
        </childnode>
      </node>
      <node id="454616">
        <label>AsgTools/AsgToolMacros.h</label>
        <link refid="d1/d68/AsgToolMacros_8h_source"/>
      </node>
      <node id="454685">
        <label>xAODCore/BaseInfo.h</label>
        <link refid="d3/d17/BaseInfo_8h_source"/>
        <childnode refid="454641" relation="include">
        </childnode>
      </node>
      <node id="454651">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="454648" relation="include">
        </childnode>
        <childnode refid="454652" relation="include">
        </childnode>
        <childnode refid="454653" relation="include">
        </childnode>
        <childnode refid="454654" relation="include">
        </childnode>
        <childnode refid="454659" relation="include">
        </childnode>
        <childnode refid="454649" relation="include">
        </childnode>
        <childnode refid="454592" relation="include">
        </childnode>
        <childnode refid="454631" relation="include">
        </childnode>
        <childnode refid="454609" relation="include">
        </childnode>
        <childnode refid="454661" relation="include">
        </childnode>
        <childnode refid="454662" relation="include">
        </childnode>
        <childnode refid="454663" relation="include">
        </childnode>
      </node>
      <node id="454661">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="454601">
        <label>set</label>
      </node>
      <node id="454686">
        <label>xAODCore/CLASS_DEF.h</label>
        <link refid="d6/d20/xAODCore_2xAODCore_2CLASS__DEF_8h"/>
        <childnode refid="454639" relation="include">
        </childnode>
      </node>
      <node id="454665">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="454654">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="454652" relation="include">
        </childnode>
        <childnode refid="454655" relation="include">
        </childnode>
        <childnode refid="454659" relation="include">
        </childnode>
        <childnode refid="454592" relation="include">
        </childnode>
        <childnode refid="454660" relation="include">
        </childnode>
      </node>
      <node id="454631">
        <label>algorithm</label>
      </node>
      <node id="454588">
        <label>TrigDecisionEvent/TrigDecision.h</label>
      </node>
      <node id="454624">
        <label>AthContainers/AuxElement.h</label>
        <link refid="d1/d6f/AuxElement_8h"/>
        <childnode refid="454625" relation="include">
        </childnode>
        <childnode refid="454626" relation="include">
        </childnode>
        <childnode refid="454640" relation="include">
        </childnode>
        <childnode refid="454642" relation="include">
        </childnode>
        <childnode refid="454647" relation="include">
        </childnode>
        <childnode refid="454674" relation="include">
        </childnode>
        <childnode refid="454653" relation="include">
        </childnode>
        <childnode refid="454680" relation="include">
        </childnode>
        <childnode refid="454677" relation="include">
        </childnode>
        <childnode refid="454628" relation="include">
        </childnode>
        <childnode refid="454683" relation="include">
        </childnode>
      </node>
      <node id="454623">
        <label>xAODTrigger/versions/TrigDecision_v1.h</label>
        <link refid="d1/ddd/TrigDecision__v1_8h_source"/>
        <childnode refid="454609" relation="include">
        </childnode>
        <childnode refid="454592" relation="include">
        </childnode>
        <childnode refid="454624" relation="include">
        </childnode>
        <childnode refid="454685" relation="include">
        </childnode>
      </node>
      <node id="454642">
        <label>AthLinks/DataLink.h</label>
        <link refid="da/de8/DataLink_8h_source"/>
        <childnode refid="454609" relation="include">
        </childnode>
        <childnode refid="454590" relation="include">
        </childnode>
        <childnode refid="454643" relation="include">
        </childnode>
        <childnode refid="454644" relation="include">
        </childnode>
      </node>
      <node id="454603">
        <label>boost/multi_index/mem_fun.hpp</label>
      </node>
      <node id="454586">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTriggerCnv/src/TrigDecisionCnvTool.cxx</label>
        <link refid="TrigDecisionCnvTool.cxx"/>
        <childnode refid="454587" relation="include">
        </childnode>
        <childnode refid="454588" relation="include">
        </childnode>
        <childnode refid="454589" relation="include">
        </childnode>
        <childnode refid="454608" relation="include">
        </childnode>
      </node>
      <node id="454608">
        <label>TrigDecisionCnvTool.h</label>
        <link refid="d2/dfa/TrigDecisionCnvTool_8h_source"/>
        <childnode refid="454609" relation="include">
        </childnode>
        <childnode refid="454592" relation="include">
        </childnode>
        <childnode refid="454610" relation="include">
        </childnode>
        <childnode refid="454611" relation="include">
        </childnode>
        <childnode refid="454612" relation="include">
        </childnode>
        <childnode refid="454613" relation="include">
        </childnode>
        <childnode refid="454618" relation="include">
        </childnode>
        <childnode refid="454621" relation="include">
        </childnode>
        <childnode refid="454687" relation="include">
        </childnode>
      </node>
      <node id="454606">
        <label>boost/multi_index/random_access_index.hpp</label>
      </node>
      <node id="454637">
        <label>memory</label>
      </node>
      <node id="454594">
        <label>TrigConfHLTData/HLTChain.h</label>
        <link refid="d4/d72/HLTChain_8h_source"/>
        <childnode refid="454595" relation="include">
        </childnode>
        <childnode refid="454596" relation="include">
        </childnode>
        <childnode refid="454599" relation="include">
        </childnode>
        <childnode refid="454590" relation="include">
        </childnode>
        <childnode refid="454591" relation="include">
        </childnode>
        <childnode refid="454600" relation="include">
        </childnode>
        <childnode refid="454592" relation="include">
        </childnode>
        <childnode refid="454593" relation="include">
        </childnode>
        <childnode refid="454601" relation="include">
        </childnode>
        <childnode refid="454598" relation="include">
        </childnode>
      </node>
      <node id="454664">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="454650" relation="include">
        </childnode>
        <childnode refid="454651" relation="include">
        </childnode>
        <childnode refid="454665" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="d2/dee/namespacexAODMaker">xAODMaker</innernamespace>
    <innernamespace refid="d8/d4a/namespacexAODMaker_1_1TrigDefs">xAODMaker::TrigDefs</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>$Id:<sp/>TrigDecisionCnvTool.cxx<sp/>688265<sp/>2015-08-08<sp/>16:31:45Z<sp/>stelzer<sp/>$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gaudi/Athena<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;AthenaKernel/errorcheck.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Trigger<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigDecisionEvent/TrigDecision.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigConfHLTData/HLTChainList.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Local<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigDecisionCnvTool.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">xAODMaker<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>contents<sp/>of<sp/>TrigDecisionTool/Conditions.h<sp/>until</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>header<sp/>is<sp/>moved<sp/>to<sp/>TrigDecisionInterface.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">TrigDefs<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Conditions<sp/>Mask<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>we<sp/>should<sp/>do<sp/>this<sp/>with<sp/>enum<sp/>but<sp/>there<sp/>are<sp/>issues<sp/>with<sp/>python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>so<sp/>we&apos;ll<sp/>code<sp/>it<sp/>as<sp/>int<sp/>for<sp/>now.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>requireDecision<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x1;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...<sp/>otherwise<sp/>ignore<sp/>the<sp/>decision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>static<sp/>unsigned<sp/>int<sp/>passedThrough<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x1<sp/>&lt;&lt;<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...<sp/>otherwise<sp/>ignore<sp/>the<sp/>passedThrough<sp/>requirement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>static<sp/>unsigned<sp/>int<sp/>allowResurrectedDecision<sp/>=<sp/>0x1<sp/>&lt;&lt;<sp/>2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...<sp/>otherwise<sp/>require<sp/>that<sp/>it<sp/>wasn&apos;t<sp/>resurrected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>enforceLogicalFlow<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x1<sp/>&lt;&lt;<sp/>5;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...<sp/>otherwise<sp/>we<sp/>only<sp/>care<sp/>about<sp/>this<sp/>trigger<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>static<sp/>unsigned<sp/>int<sp/>eventAccepted<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x1<sp/>&lt;&lt;<sp/>6;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...<sp/>an<sp/>event<sp/>was<sp/>written<sp/>out<sp/>(useful<sp/>for<sp/>trigger<sp/>rates)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>static<sp/>unsigned<sp/>int<sp/>ignoreIOV<sp/>=<sp/>0x1<sp/>&lt;&lt;<sp/>15;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>static<sp/>unsigned<sp/>int<sp/>alsoDeactivateTEs<sp/>=<sp/>0x1<sp/>&lt;&lt;<sp/>16;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>static<sp/>unsigned<sp/>int<sp/>ignoreFDR<sp/>=<sp/>0x1<sp/>&lt;&lt;<sp/>17;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Physics<sp/>=<sp/>requireDecision<sp/>|<sp/>enforceLogicalFlow;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>static<sp/>unsigned<sp/>int<sp/>fullChain<sp/>=<sp/>enforceLogicalFlow;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bit<sp/>location<sp/>placeholders<sp/>for<sp/>isPassedBit()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>EF_passedRaw<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=0x1;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>EF_passThrough<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=0x1<sp/>&lt;&lt;<sp/>1;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>EF_prescaled<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=0x1<sp/>&lt;&lt;<sp/>2;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>EF_resurrected<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=0x1<sp/>&lt;&lt;<sp/>3;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>L2_passedRaw<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=0x1<sp/>&lt;&lt;<sp/>8;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>L2_passThrough<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=0x1<sp/>&lt;&lt;<sp/>9;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>L2_prescaled<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=0x1<sp/>&lt;&lt;<sp/>10;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>L2_resurrected<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=0x1<sp/>&lt;&lt;<sp/>11;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>static<sp/>unsigned<sp/>int<sp/>L1_isPassedAfterPrescale<sp/><sp/>=<sp/>0x1<sp/>&lt;&lt;<sp/>16;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>static<sp/>unsigned<sp/>int<sp/>L1_isPassedBeforePrescale<sp/>=<sp/>0x1<sp/>&lt;&lt;<sp/>17;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>static<sp/>unsigned<sp/>int<sp/>L1_isPassedAfterVeto<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x1<sp/>&lt;&lt;<sp/>18;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>static<sp/>unsigned<sp/>int<sp/>EF_error<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x1<sp/>&lt;&lt;<sp/>19;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>static<sp/>unsigned<sp/>int<sp/>L2_error<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x1<sp/>&lt;&lt;<sp/>20;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>MAXIMUM_CHAIN_ID<sp/>=<sp/>8192;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>BITSET_SIZE<sp/>=<sp/>MAXIMUM_CHAIN_ID<sp/>/<sp/>32;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><ref refid="dd/dcd/classxAODMaker_1_1TrigDecisionCnvTool_1a013b2b4154b1bd895f8d74c41659f7eb" kindref="member" tooltip="Regular AlgTool constructor.">TrigDecisionCnvTool::TrigDecisionCnvTool</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>type,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IInterface*<sp/>parent<sp/>)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>AthAlgTool(<sp/>type,<sp/>name,<sp/>parent<sp/>),</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_tdt(<sp/></highlight><highlight class="stringliteral">&quot;Trig::TrigDecisionTool/TrigDecisionTool&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_trigconf(<sp/></highlight><highlight class="stringliteral">&quot;TrigConf::TrigConfigSvc/TrigConfigSvc&quot;</highlight><highlight class="normal">,<sp/>name<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Declare<sp/>the<sp/>interface(s)<sp/>provided<sp/>by<sp/>the<sp/>tool:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>declareInterface&lt;<sp/>ITrigDecisionCnvTool<sp/>&gt;(<sp/>this<sp/>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>declareProperty<sp/>(</highlight><highlight class="stringliteral">&quot;TrigDecisionTool&quot;</highlight><highlight class="normal">,<sp/>m_tdt);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/>StatusCode<sp/><ref refid="dd/dcd/classxAODMaker_1_1TrigDecisionCnvTool_1ac89decd72b082629b086b21f39e6a97e" kindref="member" tooltip="Function initialising the tool.">TrigDecisionCnvTool::initialize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Greet<sp/>the<sp/>user:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_INFO(<sp/></highlight><highlight class="stringliteral">&quot;Initializing<sp/>-<sp/>Package<sp/>version:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>PACKAGE_VERSION<sp/>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>needed<sp/>component(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(<sp/>m_tdt.retrieve()<sp/>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(<sp/>m_trigconf.retrieve()<sp/>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>gracefully:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/>StatusCode<sp/><ref refid="dd/dcd/classxAODMaker_1_1TrigDecisionCnvTool_1ac40f0b0c7da7f3167d2a7c6eb91810af" kindref="member" tooltip="Function filling an xAOD::TrigDecision object with information.">TrigDecisionCnvTool::convert</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrigDec::TrigDecision*<sp/>aod,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/d7b/classxAOD_1_1TrigDecision__v1" kindref="compound">xAOD::TrigDecision</ref>*<sp/>xaod,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TriggerInfo<sp/>*<sp/>triggerInfo)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(<sp/></highlight><highlight class="stringliteral">&quot;converting<sp/>TrigDecision<sp/>to<sp/>xAOD::TrigDecision&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>trigger<sp/>configuration<sp/>key:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xaod-&gt;<ref refid="da/d7b/classxAOD_1_1TrigDecision__v1_1ab3da3afe841ed46ea931d89d16386f5c" kindref="member" tooltip="Set the Super Master Key describing this object.">setSMK</ref>(<sp/>aod-&gt;masterKey()<sp/>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>LVL1<sp/>information:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xaod-&gt;<ref refid="da/d7b/classxAOD_1_1TrigDecision__v1_1afff1b26c90eea73cc7669d2660a4270c" kindref="member" tooltip="Set the bunch group code of the current event.">setBGCode</ref>(<sp/>aod-&gt;BGCode()<sp/>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(<sp/></highlight><highlight class="stringliteral">&quot;converting<sp/>BGCode<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::hex<sp/>&lt;&lt;<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>aod-&gt;BGCode()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>(size<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(aod-&gt;BGCode())<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(xaod-&gt;<ref refid="da/d7b/classxAOD_1_1TrigDecision__v1_1add321db14c52f78a711f6c6a1bebebff" kindref="member" tooltip="Get the bunch group code of the current event.">bgCode</ref>())<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>aod-&gt;getL1Result().isConfigured()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(<sp/></highlight><highlight class="stringliteral">&quot;setting<sp/>L1<sp/>info<sp/>from<sp/>old<sp/>TrigDecision&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xaod-&gt;<ref refid="da/d7b/classxAOD_1_1TrigDecision__v1_1ad23e3a1c1f1fc3d2faf39bbbce38c353" kindref="member" tooltip="Set the Trigger After Veto bits.">setTAV</ref>(<sp/>aod-&gt;getL1Result().itemsAfterVeto()<sp/>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xaod-&gt;<ref refid="da/d7b/classxAOD_1_1TrigDecision__v1_1abfbf5a10d17098b06b9946e7e6d8de35" kindref="member" tooltip="Set the Trigger After Prescale bits.">setTAP</ref>(<sp/>aod-&gt;getL1Result().itemsAfterPrescale()<sp/>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xaod-&gt;<ref refid="da/d7b/classxAOD_1_1TrigDecision__v1_1a0c897c06b1dcaceb4a7e8ca68a9c890e" kindref="member" tooltip="Set the Trigger Before Prescale bits.">setTBP</ref>(<sp/>aod-&gt;getL1Result().itemsBeforePrescale()<sp/>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>triggerInfo<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>){</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(<sp/></highlight><highlight class="stringliteral">&quot;setting<sp/>L1<sp/>info<sp/>from<sp/>TriggerInfo<sp/>(l1<sp/>size<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>triggerInfo-&gt;level1TriggerInfo().size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>L1SIZE<sp/>=<sp/>triggerInfo-&gt;level1TriggerInfo().size()/3;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint32_t&gt;::const_iterator<sp/>begin,<sp/>end;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>begin<sp/>=<sp/>triggerInfo-&gt;level1TriggerInfo().begin();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>=<sp/>begin;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::advance(end,L1SIZE);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint32_t&gt;<sp/>tbp(begin,end);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>begin<sp/>=<sp/>end;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::advance(end,L1SIZE);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint32_t&gt;<sp/>tap(begin,end);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>begin<sp/>=<sp/>end;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::advance(end,L1SIZE);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint32_t&gt;<sp/>tav(begin,end);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xaod-&gt;<ref refid="da/d7b/classxAOD_1_1TrigDecision__v1_1ad23e3a1c1f1fc3d2faf39bbbce38c353" kindref="member" tooltip="Set the Trigger After Veto bits.">setTAV</ref>(<sp/>tav<sp/>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xaod-&gt;<ref refid="da/d7b/classxAOD_1_1TrigDecision__v1_1abfbf5a10d17098b06b9946e7e6d8de35" kindref="member" tooltip="Set the Trigger After Prescale bits.">setTAP</ref>(<sp/>tap<sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xaod-&gt;<ref refid="da/d7b/classxAOD_1_1TrigDecision__v1_1a0c897c06b1dcaceb4a7e8ca68a9c890e" kindref="member" tooltip="Set the Trigger Before Prescale bits.">setTBP</ref>(<sp/>tbp<sp/>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(<sp/></highlight><highlight class="stringliteral">&quot;TBP<sp/>size<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>xaod-&gt;<ref refid="da/d7b/classxAOD_1_1TrigDecision__v1_1aa7c96f37b24bb17f4894427a41413813" kindref="member" tooltip="Get the Trigger Before Prescale bits.">tbp</ref>().size()<sp/>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(<sp/></highlight><highlight class="stringliteral">&quot;TAP<sp/>size<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>xaod-&gt;<ref refid="da/d7b/classxAOD_1_1TrigDecision__v1_1a2f059ec225daf9c69ca921bd39a0d0f5" kindref="member" tooltip="Get the Trigger After Prescale bits.">tap</ref>().size()<sp/>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(<sp/></highlight><highlight class="stringliteral">&quot;TAV<sp/>size<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>xaod-&gt;<ref refid="da/d7b/classxAOD_1_1TrigDecision__v1_1ad5ed3f835f38bd8d4f43854acc5af25f" kindref="member" tooltip="Get the Trigger After Veto bits.">tav</ref>().size()<sp/>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(<sp/></highlight><highlight class="stringliteral">&quot;can<sp/>not<sp/>set<sp/>L1<sp/>info<sp/>as<sp/>the<sp/>old<sp/>TrigDecision<sp/>has<sp/>no<sp/>L1Result<sp/>and<sp/>there<sp/>is<sp/>no<sp/>TriggerInfo<sp/>available&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>basic<sp/>HLT<sp/>information:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xaod-&gt;<ref refid="da/d7b/classxAOD_1_1TrigDecision__v1_1af2ad66798d17d081d0240287aa985f84" kindref="member" tooltip="Set a summary of all errors that happened during the LVL2 execution.">setLVL2ErrorBits</ref>(<sp/>aod-&gt;getL2Result().error_bits()<sp/>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xaod-&gt;<ref refid="da/d7b/classxAOD_1_1TrigDecision__v1_1ac97650031260e7a006d5f478867cc6a6" kindref="member" tooltip="Set a summary of all errors that happened during the EF execution.">setEFErrorBits</ref><sp/><sp/>(<sp/>aod-&gt;getEFResult().error_bits()<sp/>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xaod-&gt;<ref refid="da/d7b/classxAOD_1_1TrigDecision__v1_1ad2cda01065cc4b7ed33bc952f71282a0" kindref="member" tooltip="Set whether the LVL2 result is truncated.">setLVL2Truncated</ref>(<sp/>aod-&gt;getL2Result().isHLTResultTruncated()<sp/>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xaod-&gt;<ref refid="da/d7b/classxAOD_1_1TrigDecision__v1_1a4da5d57260bbf3b26072732878b7043b" kindref="member" tooltip="Set whether the EF result is truncated.">setEFTruncated</ref><sp/><sp/>(<sp/>aod-&gt;getEFResult().isHLTResultTruncated()<sp/>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>the<sp/>HLT<sp/>decision<sp/>bits<sp/>using<sp/>the<sp/>TDT.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>LVL2<sp/>bitsets:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>l2PassedPhysics(<sp/>BITSET_SIZE,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>l2PassedRaw<sp/><sp/><sp/><sp/>(<sp/>BITSET_SIZE,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>l2PassedThrough(<sp/>BITSET_SIZE,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>l2Prescaled<sp/><sp/><sp/><sp/>(<sp/>BITSET_SIZE,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>l2Resurrected<sp/><sp/>(<sp/>BITSET_SIZE,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>EF<sp/>bitsets:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>efPassedPhysics(<sp/>BITSET_SIZE,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>efPassedRaw<sp/><sp/><sp/><sp/>(<sp/>BITSET_SIZE,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>efPassedThrough(<sp/>BITSET_SIZE,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>efPrescaled<sp/><sp/><sp/><sp/>(<sp/>BITSET_SIZE,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>uint32_t<sp/>&gt;<sp/>efResurrected<sp/><sp/>(<sp/>BITSET_SIZE,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>a<sp/>list<sp/>of<sp/>all<sp/>the<sp/>HLT<sp/>chains:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/dfb/classTrigConf_1_1HLTChainList" kindref="compound" tooltip="list of all HLT chains in a trigger menu">TrigConf::HLTChainList</ref>&amp;<sp/>chains<sp/>=<sp/>m_trigconf-&gt;chains();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>over<sp/>all<sp/>the<sp/>chains:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TrigConf::HLTChainList::const_iterator<sp/>chain_itr<sp/>=<sp/>chains.begin();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TrigConf::HLTChainList::const_iterator<sp/>chain_end<sp/>=<sp/>chains.end();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>;<sp/>chain_itr<sp/>!=<sp/>chain_end;<sp/>++chain_itr<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Decide<sp/>whether<sp/>to<sp/>care<sp/>about<sp/>the<sp/>chain<sp/>or<sp/>not:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>static_cast&lt;<sp/>uint32_t<sp/>&gt;(<sp/>(<sp/>*chain_itr<sp/>)-&gt;chain_counter()<sp/>)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;=<sp/>MAXIMUM_CHAIN_ID<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>decision<sp/>for<sp/>the<sp/>chain:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>bits<sp/>=</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_tdt-&gt;isPassedBits(<sp/>(<sp/>*chain_itr<sp/>)-&gt;chain_name()<sp/>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Decide<sp/>which<sp/>level<sp/>the<sp/>chain<sp/>is<sp/>from:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>*chain_itr<sp/>)-&gt;level_enum()<sp/>==<sp/>TrigConf::L2<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>different<sp/>decisions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(<sp/>setBit(<sp/>l2PassedPhysics,<sp/>(<sp/>*chain_itr<sp/>)-&gt;chain_counter(),</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_tdt-&gt;isPassed(<sp/>(<sp/>*chain_itr<sp/>)-&gt;chain_name(),</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TrigDefs::Physics<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(<sp/>setBit(<sp/>l2PassedRaw,<sp/>(<sp/>*chain_itr<sp/>)-&gt;chain_counter(),</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>bits<sp/>&amp;<sp/>TrigDefs::L2_passedRaw<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(<sp/>setBit(<sp/>l2PassedThrough,<sp/>(<sp/>*chain_itr<sp/>)-&gt;chain_counter(),</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>bits<sp/>&amp;<sp/>TrigDefs::L2_passThrough<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(<sp/>setBit(<sp/>l2Prescaled,<sp/>(<sp/>*chain_itr<sp/>)-&gt;chain_counter(),</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>bits<sp/>&amp;<sp/>TrigDefs::L2_prescaled<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(<sp/>setBit(<sp/>l2Resurrected,<sp/>(<sp/>*chain_itr<sp/>)-&gt;chain_counter(),</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>bits<sp/>&amp;<sp/>TrigDefs::L2_resurrected<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>EF<sp/>and<sp/>HLT<sp/>results<sp/>are<sp/>treated<sp/>the<sp/>same:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>different<sp/>decisions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(<sp/>setBit(<sp/>efPassedPhysics,<sp/>(<sp/>*chain_itr<sp/>)-&gt;chain_counter(),</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_tdt-&gt;isPassed(<sp/>(<sp/>*chain_itr<sp/>)-&gt;chain_name(),</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TrigDefs::Physics<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(<sp/>setBit(<sp/>efPassedRaw,<sp/>(<sp/>*chain_itr<sp/>)-&gt;chain_counter(),</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>bits<sp/>&amp;<sp/>TrigDefs::EF_passedRaw<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(<sp/>setBit(<sp/>efPassedThrough,<sp/>(<sp/>*chain_itr<sp/>)-&gt;chain_counter(),</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>bits<sp/>&amp;<sp/>TrigDefs::EF_passThrough<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(<sp/>setBit(<sp/>efPrescaled,<sp/>(<sp/>*chain_itr<sp/>)-&gt;chain_counter(),</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>bits<sp/>&amp;<sp/>TrigDefs::EF_prescaled<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(<sp/>setBit(<sp/>efResurrected,<sp/>(<sp/>*chain_itr<sp/>)-&gt;chain_counter(),</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>bits<sp/>&amp;<sp/>TrigDefs::EF_resurrected<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Put<sp/>the<sp/>bit-patterns<sp/>into<sp/>the<sp/>output<sp/>object:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xaod-&gt;<ref refid="da/d7b/classxAOD_1_1TrigDecision__v1_1a75ffe2ed99563c526d644ed52e74e703" kindref="member" tooltip="Set the LVL2 physics decision bits.">setLVL2PassedPhysics</ref>(<sp/>l2PassedPhysics<sp/>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xaod-&gt;<ref refid="da/d7b/classxAOD_1_1TrigDecision__v1_1a87215435d39f00fb69e7788f43389228" kindref="member" tooltip="Set the LVL2 passed-raw bits.">setLVL2PassedRaw</ref><sp/><sp/><sp/><sp/>(<sp/>l2PassedRaw<sp/>);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xaod-&gt;<ref refid="da/d7b/classxAOD_1_1TrigDecision__v1_1ab7032623a954f7484bb8b235d3be33ae" kindref="member" tooltip="Set the LVL2 pass-through bits.">setLVL2PassedThrough</ref>(<sp/>l2PassedThrough<sp/>);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xaod-&gt;<ref refid="da/d7b/classxAOD_1_1TrigDecision__v1_1a611427f32fb1103d7cb6dcc1cb2776f4" kindref="member" tooltip="Set the LVL2 prescaled bits.">setLVL2Prescaled</ref><sp/><sp/><sp/><sp/>(<sp/>l2Prescaled<sp/>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xaod-&gt;<ref refid="da/d7b/classxAOD_1_1TrigDecision__v1_1a072213c31a2a288808be5639514464bb" kindref="member" tooltip="Set the LVL2 resurrected bits.">setLVL2Resurrected</ref><sp/><sp/>(<sp/>l2Resurrected<sp/>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xaod-&gt;<ref refid="da/d7b/classxAOD_1_1TrigDecision__v1_1a4063d743d4f7bf97289b1d0ccd3ff080" kindref="member" tooltip="Set the EF physics decision bits.">setEFPassedPhysics</ref>(<sp/>efPassedPhysics<sp/>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xaod-&gt;<ref refid="da/d7b/classxAOD_1_1TrigDecision__v1_1a98a6032167e284ee8576c2fee191bb25" kindref="member" tooltip="Set the EF passed-raw bits.">setEFPassedRaw</ref><sp/><sp/><sp/><sp/>(<sp/>efPassedRaw<sp/>);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xaod-&gt;<ref refid="da/d7b/classxAOD_1_1TrigDecision__v1_1a636c62d18958b4e147b271d7da486b54" kindref="member" tooltip="Set the EF pass-through bits.">setEFPassedThrough</ref>(<sp/>efPassedThrough<sp/>);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xaod-&gt;<ref refid="da/d7b/classxAOD_1_1TrigDecision__v1_1a5e5d64bbd6a4da24865bf3dfb42137eb" kindref="member" tooltip="Set the EF prescaled bits.">setEFPrescaled</ref><sp/><sp/><sp/><sp/>(<sp/>efPrescaled<sp/>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xaod-&gt;<ref refid="da/d7b/classxAOD_1_1TrigDecision__v1_1a654ce0c9c642f8ffd410dced8054b48b" kindref="member" tooltip="Set the EF resurrected bits.">setEFResurrected</ref><sp/><sp/>(<sp/>efResurrected<sp/>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>gracefully:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/>StatusCode<sp/>TrigDecisionCnvTool::setBit(<sp/>std::vector&lt;<sp/>uint32_t<sp/>&gt;&amp;<sp/>bitset,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>chainId,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>operation<sp/>will<sp/>be<sp/>successful:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>chainId<sp/>&gt;=<sp/>MAXIMUM_CHAIN_ID<sp/>)<sp/>||</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>bitset.size()<sp/>&lt;<sp/>BITSET_SIZE<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Decide<sp/>which<sp/>bit<sp/>to<sp/>modify<sp/>exactly:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>word<sp/>=<sp/>chainId<sp/>/<sp/>32;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bit<sp/><sp/>=<sp/>chainId<sp/>%<sp/>32;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>value<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Turn<sp/>the<sp/>bit<sp/>on:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitset[<sp/>word<sp/>]<sp/>=<sp/>bitset[<sp/>word<sp/>]<sp/>|<sp/>(<sp/>0x1<sp/>&lt;&lt;<sp/>bit<sp/>);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Turn<sp/>the<sp/>bit<sp/>off:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitset[<sp/>word<sp/>]<sp/>=<sp/>bitset[<sp/>word<sp/>]<sp/>&amp;<sp/>(<sp/>~<sp/>(<sp/>0x1<sp/>&lt;&lt;<sp/>bit<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Everything<sp/>went<sp/>fine:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>xAODMaker</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTriggerCnv/src/TrigDecisionCnvTool.cxx"/>
  </compounddef>
</doxygen>
