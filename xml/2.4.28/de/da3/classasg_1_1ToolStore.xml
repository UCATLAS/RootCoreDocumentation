<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="de/da3/classasg_1_1ToolStore" kind="class" prot="public">
    <compoundname>asg::ToolStore</compoundname>
    <includes refid="df/d02/ToolStore_8h" local="no">ToolStore.h</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="de/da3/classasg_1_1ToolStore_1aefae91f50993718b4569fd22fa718797" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>StatusCode</type>
        <definition>StatusCode asg::ToolStore::put</definition>
        <argsstring>(IAsgTool *ptool)</argsstring>
        <name>put</name>
        <param>
          <type><ref refid="d4/d20/classasg_1_1IAsgTool" kindref="compound">IAsgTool</ref> *</type>
          <declname>ptool</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Store a named tool by its name. The name must be non-blank and not already exist in the store. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/ToolStore.h" line="35" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/Root/ToolStore.cxx" bodystart="38" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="de/da3/classasg_1_1ToolStore_1a96f8e98c6c80c107aefc913c26b3789d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>StatusCode</type>
        <definition>StatusCode asg::ToolStore::put</definition>
        <argsstring>(IAsgTool *ptool, const std::string &amp;name)</argsstring>
        <name>put</name>
        <param>
          <type><ref refid="d4/d20/classasg_1_1IAsgTool" kindref="compound">IAsgTool</ref> *</type>
          <declname>ptool</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Store a tool by an alternate name. The name must be non-blank and not already exist in the store. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/ToolStore.h" line="39" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/Root/ToolStore.cxx" bodystart="67" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="de/da3/classasg_1_1ToolStore_1a421a7c63d1c59d1eab6f310e4dc4c8a4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d4/d20/classasg_1_1IAsgTool" kindref="compound">IAsgTool</ref> *</type>
        <definition>IAsgTool * asg::ToolStore::get</definition>
        <argsstring>(const std::string &amp;name, bool silent=false)</argsstring>
        <name>get</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>silent</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Retrieve a tool by name. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/ToolStore.h" line="42" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/Root/ToolStore.cxx" bodystart="91" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="de/da3/classasg_1_1ToolStore_1a6437adf77dc359213d8ec2a12d2ab656" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="d1/def/classT" kindref="compound">T</ref> *</type>
        <definition>static T* asg::ToolStore::get</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>get</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Retrieve a tool by name and interface. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/ToolStore.h" line="46" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/ToolStore.h" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="de/da3/classasg_1_1ToolStore_1a259c916ba7cd7be879b21f27e81821bb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>static bool asg::ToolStore::contains</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>contains</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Check whether a tool with a given type and name is known in the store. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/ToolStore.h" line="53" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/ToolStore.h" bodystart="53" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="de/da3/classasg_1_1ToolStore_1aca6b49381b2d7b61747021b54e42aa07" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>StatusCode</type>
        <definition>StatusCode asg::ToolStore::remove</definition>
        <argsstring>(const IAsgTool *tool)</argsstring>
        <name>remove</name>
        <param>
          <type>const <ref refid="d4/d20/classasg_1_1IAsgTool" kindref="compound">IAsgTool</ref> *</type>
          <declname>tool</declname>
        </param>
        <briefdescription>
<para>Remove the specified tool from the store. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/ToolStore.h" line="59" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/Root/ToolStore.cxx" bodystart="104" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="de/da3/classasg_1_1ToolStore_1a166c6ea8ce9aec823ac979dcbca3c31a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>StatusCode</type>
        <definition>StatusCode asg::ToolStore::remove</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>remove</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Remove a tool with a given name from the store. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/ToolStore.h" line="61" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/Root/ToolStore.cxx" bodystart="110" bodyend="115"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="d4/dc4/structA" kindref="compound">A</ref> light-weight replacement for ToolSvc for ROOT analysis</para><para>In order to allow tools to find each other through ToolHandles, just like in <ref refid="d5/dc5/namespaceAthena" kindref="compound">Athena</ref>, we need a global registry of all of the tools that the user instantiates in his/her job.</para><para>This class does exactly this. All created dual-use tools register themselves in it, so that other components could later on find them.</para><para><simplesect kind="author"><para>David Adams &lt;<ulink url="mailto:dladams@bnl.gov">dladams@bnl.gov</ulink>&gt; </para><simplesectsep/><para>Attila Krasznahorkay &lt;<ulink url="mailto:Attila.Krasznahorkay@cern.ch">Attila.Krasznahorkay@cern.ch</ulink>&gt;</para></simplesect>
<simplesect kind="rcs"><title>Revision</title><para>671353 </para></simplesect>
<simplesect kind="rcs"><title>Date</title><para>2015-06-01 15:33:51 +0200 (Mon, 01 Jun 2015) </para></simplesect>
</para>    </detaileddescription>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/ToolStore.h" line="30" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgTools/AsgTools/ToolStore.h" bodystart="30" bodyend="63"/>
    <listofallmembers>
      <member refid="de/da3/classasg_1_1ToolStore_1a259c916ba7cd7be879b21f27e81821bb" prot="public" virt="non-virtual"><scope>asg::ToolStore</scope><name>contains</name></member>
      <member refid="de/da3/classasg_1_1ToolStore_1a421a7c63d1c59d1eab6f310e4dc4c8a4" prot="public" virt="non-virtual"><scope>asg::ToolStore</scope><name>get</name></member>
      <member refid="de/da3/classasg_1_1ToolStore_1a6437adf77dc359213d8ec2a12d2ab656" prot="public" virt="non-virtual"><scope>asg::ToolStore</scope><name>get</name></member>
      <member refid="de/da3/classasg_1_1ToolStore_1aefae91f50993718b4569fd22fa718797" prot="public" virt="non-virtual"><scope>asg::ToolStore</scope><name>put</name></member>
      <member refid="de/da3/classasg_1_1ToolStore_1a96f8e98c6c80c107aefc913c26b3789d" prot="public" virt="non-virtual"><scope>asg::ToolStore</scope><name>put</name></member>
      <member refid="de/da3/classasg_1_1ToolStore_1aca6b49381b2d7b61747021b54e42aa07" prot="public" virt="non-virtual"><scope>asg::ToolStore</scope><name>remove</name></member>
      <member refid="de/da3/classasg_1_1ToolStore_1a166c6ea8ce9aec823ac979dcbca3c31a" prot="public" virt="non-virtual"><scope>asg::ToolStore</scope><name>remove</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
