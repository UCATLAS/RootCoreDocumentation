<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="de/dc5/structxAOD_1_1MissingETComposition" kind="struct" prot="public">
    <compoundname>xAOD::MissingETComposition</compoundname>
    <includes refid="d1/d18/MissingETComposition_8h" local="no">MissingETComposition.h</includes>
      <sectiondef kind="user-defined">
      <header>Adding data to the composition map</header>
      <description><para><anchor id="_1amgrp3693553179498c809cc80ab8310d7f38"/> <anchor id="de/dc5/structxAOD_1_1MissingETComposition_1metcomp_insertion"/> </para></description>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1ac73f93e4ea8ea905110539ec7464a78f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::MissingETComposition::add</definition>
        <argsstring>(MissingETComponentMap *pMap, const MissingET *pMET, MissingETBase::Types::bitmask_t sw=MissingETBase::Status::clearedStatus())</argsstring>
        <name>add</name>
        <param>
          <type><ref refid="d0/d58/classxAOD_1_1MissingETComponentMap__v1" kindref="compound">MissingETComponentMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const <ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound">MissingET</ref> *</type>
          <declname>pMET</declname>
        </param>
        <param>
          <type><ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member">MissingETBase::Types::bitmask_t</ref></type>
          <declname>sw</declname>
          <defval>MissingETBase::Status::clearedStatus()</defval>
        </param>
        <briefdescription>
<para>Adding a <ref refid="dd/d44/namespacexAOD_1a3c42c356018f6111557bd691272349b7" kindref="member">MissingET </ref> object to the map. </para>        </briefdescription>
        <detaileddescription>
<para>This function should be called for a given <ref refid="dd/d44/namespacexAOD_1a3c42c356018f6111557bd691272349b7" kindref="member">MissingET </ref> object before <ref refid="de/dc5/structxAOD_1_1MissingETComposition_1a3499794992868dd91d78f775b072cbc8" kindref="member">MissingETComposition::insert</ref> is invoked for the same object. Note that the the rules for adding a MET object do not allow to add the same object more than once to a given <ref refid="dd/d44/namespacexAOD_1a33023266d4b13fde258b2142d3dd139a" kindref="member">MissingETComponentMap </ref>.</para><para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the object is not already in the map, else <computeroutput>false</computeroutput>.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pMap</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to modifiable <ref refid="" kindref="compound">MissingETComponentMap </ref> object (the map to which the <ref refid="" kindref="compound">MissingET </ref> object added. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pMET</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to non-modifiable <ref refid="" kindref="compound">MissingET </ref> object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sw</parametername>
</parameternamelist>
<parameterdescription>
<para>bitmask indicating contribution status (optional, default is <ref refid="db/d4d/structMissingETBase_1_1Status_1a592a63c3771abf1287a7a07326b32c34" kindref="member">MissingETBase::Status::clearedStatus()</ref>) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="34" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="23" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1a3499794992868dd91d78f775b072cbc8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::MissingETComposition::insert</definition>
        <argsstring>(MissingETComponentMap *pMap, const MissingET *pMET, const IParticle *pPart, MissingETBase::Types::weight_t weight=MissingETBase::Types::weight_t())</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="d0/d58/classxAOD_1_1MissingETComponentMap__v1" kindref="compound">MissingETComponentMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const <ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound">MissingET</ref> *</type>
          <declname>pMET</declname>
        </param>
        <param>
          <type>const <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref> *</type>
          <declname>pPart</declname>
        </param>
        <param>
          <type><ref refid="dc/da3/classxAOD_1_1MissingETComponent__v1_1_1Weight" kindref="compound">MissingETBase::Types::weight_t</ref></type>
          <declname>weight</declname>
          <defval><ref refid="dc/da3/classxAOD_1_1MissingETComponent__v1_1_1Weight" kindref="compound">MissingETBase::Types::weight_t</ref>()</defval>
        </param>
        <briefdescription>
<para>Insert contributing signal or physics object by pointer, with optional kinematic weight object. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if insertion successful according to the rules lined out here</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pMET</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to non-modifiable MET object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pPart</parametername>
</parameternamelist>
<parameterdescription>
<para>generic pointer to non-modifiable physics or signal object contributing to the MET object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">weight</parametername>
</parameternamelist>
<parameterdescription>
<para>kinematic weights of the contribution (optional, for default see <ref refid="dc/da3/classxAOD_1_1MissingETComponent__v1_1_1Weight_1ac0063648bd7648f202db5db3c98d53df" kindref="member">MissingETComponent::Weight::Weight() </ref> constructor) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="44" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="36" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1ae4b7a6d0cf815f07b6c5fe7f0fddb6f7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::MissingETComposition::insert</definition>
        <argsstring>(MissingETComponentMap *pMap, const MissingET *pMET, const IParticle *pPart, const MissingETBase::Types::object_vector_t &amp;signalList, MissingETBase::Types::weight_t weight=MissingETBase::Types::weight_t(), MissingETBase::UsageHandler::Policy p=MissingETBase::UsageHandler::OnlyCluster)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="d0/d58/classxAOD_1_1MissingETComponentMap__v1" kindref="compound">MissingETComponentMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const <ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound">MissingET</ref> *</type>
          <declname>pMET</declname>
        </param>
        <param>
          <type>const <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref> *</type>
          <declname>pPart</declname>
        </param>
        <param>
          <type>const <ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1a4ed057deea2d9517006928914e605e8d" kindref="member">MissingETBase::Types::object_vector_t</ref> &amp;</type>
          <declname>signalList</declname>
        </param>
        <param>
          <type><ref refid="dc/da3/classxAOD_1_1MissingETComponent__v1_1_1Weight" kindref="compound">MissingETBase::Types::weight_t</ref></type>
          <declname>weight</declname>
          <defval><ref refid="dc/da3/classxAOD_1_1MissingETComponent__v1_1_1Weight" kindref="compound">MissingETBase::Types::weight_t</ref>()</defval>
        </param>
        <param>
          <type><ref refid="de/dd2/namespaceMissingETBase_1_1UsageHandler_1adc82230b57f6a7bcfbffe1e66c06130e" kindref="member">MissingETBase::UsageHandler::Policy</ref></type>
          <declname>p</declname>
          <defval>MissingETBase::UsageHandler::OnlyCluster</defval>
        </param>
        <briefdescription>
<para>Insert MET object and contributing object by pointers, with list of signals and optional kinematic weight object. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="de/dc5/structxAOD_1_1MissingETComposition_1a3499794992868dd91d78f775b072cbc8" kindref="member">insert(MissingETComponentMap*,const MissingET*,const IParticle*,MissingETBase::Types::weight_t)</ref></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">signalList</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to non-modifiable list of (base type) pointers to signals associated with the given physics or signal object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p</parametername>
</parameternamelist>
<parameterdescription>
<para>signal type indicator (optional, default is MissingETBase:UsageHandler::OnlyCluster) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="54" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1a471fc3aa9a62586f58775f7f9b206930" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::MissingETComposition::insert</definition>
        <argsstring>(MissingETComponentMap *pMap, const MissingET *pMET, const IParticle *pPart, double wpx, double wpy, double wet)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="d0/d58/classxAOD_1_1MissingETComponentMap__v1" kindref="compound">MissingETComponentMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const <ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound">MissingET</ref> *</type>
          <declname>pMET</declname>
        </param>
        <param>
          <type>const <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref> *</type>
          <declname>pPart</declname>
        </param>
        <param>
          <type>double</type>
          <declname>wpx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>wpy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>wet</declname>
        </param>
        <briefdescription>
<para>Insert MET object and contributing object by pointers, with individual weights. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if insertion successful according to the rules lined out here</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pMET</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to non-modifiable MET object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pPart</parametername>
</parameternamelist>
<parameterdescription>
<para>generic pointer to non-modifiable physics or signal object contributing to the MET object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wpx</parametername>
</parameternamelist>
<parameterdescription>
<para>kinematic weight <formula id="39">$ w_{x} $</formula> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wpy</parametername>
</parameternamelist>
<parameterdescription>
<para>kinematic weight <formula id="40">$ w_{y} $</formula> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wet</parametername>
</parameternamelist>
<parameterdescription>
<para>kinematic weight <formula id="41">$ w_{\rm T} $</formula> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="65" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="39" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1ae8501f7505d12c9b5bfce5fc4fb3b21f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::MissingETComposition::insert</definition>
        <argsstring>(MissingETComponentMap *pMap, const MissingET *pMET, const IParticle *pPart, const MissingETBase::Types::object_vector_t &amp;signalList, double wpx, double wpy, double wet, MissingETBase::UsageHandler::Policy p=MissingETBase::UsageHandler::OnlyCluster)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="d0/d58/classxAOD_1_1MissingETComponentMap__v1" kindref="compound">MissingETComponentMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const <ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound">MissingET</ref> *</type>
          <declname>pMET</declname>
        </param>
        <param>
          <type>const <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref> *</type>
          <declname>pPart</declname>
        </param>
        <param>
          <type>const <ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1a4ed057deea2d9517006928914e605e8d" kindref="member">MissingETBase::Types::object_vector_t</ref> &amp;</type>
          <declname>signalList</declname>
        </param>
        <param>
          <type>double</type>
          <declname>wpx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>wpy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>wet</declname>
        </param>
        <param>
          <type><ref refid="de/dd2/namespaceMissingETBase_1_1UsageHandler_1adc82230b57f6a7bcfbffe1e66c06130e" kindref="member">MissingETBase::UsageHandler::Policy</ref></type>
          <declname>p</declname>
          <defval>MissingETBase::UsageHandler::OnlyCluster</defval>
        </param>
        <briefdescription>
<para>Insert MET object and contributing object by pointers, with list of signals and individual weight components. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="de/dc5/structxAOD_1_1MissingETComposition_1a471fc3aa9a62586f58775f7f9b206930" kindref="member">insert(MissingETComponentMap*,const MissingET*,const IParticle*,double,double,double)</ref></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">signalList</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to non-modifiable list of (base type) pointers to signals associated with the given physics or signal object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p</parametername>
</parameternamelist>
<parameterdescription>
<para>signal type indicator (optional, default is MissingETBase:UsageHandler::OnlyCluster) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="74" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="57" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1a6cd8dafda02a085c026cc07a479ed93a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::MissingETComposition::updateLinks</definition>
        <argsstring>(MissingETComponentMap *pMap)</argsstring>
        <name>updateLinks</name>
        <param>
          <type><ref refid="d0/d58/classxAOD_1_1MissingETComponentMap__v1" kindref="compound">MissingETComponentMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <briefdescription>
<para>Update all ElementLinks in all contributions. </para>        </briefdescription>
        <detaileddescription>
<para>This function triggers an update of all ElementLinks stored in the map entries. This may be necessary in case a <ref refid="" kindref="compound">MissingETComponent </ref> object has been filled with POD MET, particle, and/or signal objects, thus rendering the corresponding <ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref> incomplete. If the linked to objects are stored in a collection later, this function makes sure that all ElementLinks are updated with the collection pointer.</para><para><simplesect kind="warning"><para>Usually MET terms are reconstructed from signal or physics objects stored in a collection. In this case this function does not need to be used at all, as all ElemenntLinks to contributing objects are complete. On the other hand, the <ref refid="" kindref="compound">MissingET </ref> in the contribution is usually still a POD when the composition map entry for the corresponding MET term is generated, and the <ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref> to it requires an update later, when the <ref refid="" kindref="compound">MissingET </ref> object is stored in a <ref refid="" kindref="compound">MissingEETContainer </ref>. In this case <ref refid="de/dc5/structxAOD_1_1MissingETComposition_1a87a7216748fc3698738b13642fc38516" kindref="member">MissingETComposition::updateMETLinks(MissingETComponentMap*)</ref> should be used after the MET object is inserted in its container, as it is much faster (only scans the small number of <ref refid="" kindref="compound">MissingETComponent </ref> objects in the map).</para></simplesect>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if all links in all MET contributions in the composition map are updated correctly. In case of an unsuccessful update attempt, or an invalid pointer to the <ref refid="" kindref="compound">MissingETComponentMap </ref> object (NULL pointer), <computeroutput>false</computeroutput> is returned.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pMap</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer referencing a modifiable MET composition map.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This method involves a scan of all <ref refid="" kindref="compound">MissingETComponent </ref> objects stored in the map, and a scan of the contributing object list in these MET contributions. This can be costly in terms off CPU usage. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="98" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="65" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1a87a7216748fc3698738b13642fc38516" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::MissingETComposition::updateMETLinks</definition>
        <argsstring>(MissingETComponentMap *pMap)</argsstring>
        <name>updateMETLinks</name>
        <param>
          <type><ref refid="d0/d58/classxAOD_1_1MissingETComponentMap__v1" kindref="compound">MissingETComponentMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <briefdescription>
<para>Update all ElementLinks to MET objects only in all contributions. </para>        </briefdescription>
        <detaileddescription>
<para>This function triggers an update of all ElementLinks stored in the map entries. This may be necessary in case a <ref refid="" kindref="compound">MissingETComponent </ref> object has been filled with POD <ref refid="" kindref="compound">MissingET </ref>, thus rendering the corresponding <ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref> incomplete. If the linked to MET objects are stored in a collection later, this function makes sure that the ElementLinks are updated with the collection pointer.</para><para><simplesect kind="return"><para><computeroutput>true</computeroutput> if all links to <ref refid="" kindref="compound">MissingET </ref> objects in all MET contributions in the composition map are updated correctly. In case of an unsuccessful update attempt, or an invalid pointer to the <ref refid="" kindref="compound">MissingETComponentMap </ref> object (NULL pointer), <computeroutput>false</computeroutput> is returned.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pMap</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer referencing a modifiable MET composition map.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This method involves a scan of all <ref refid="" kindref="compound">MissingETComponent </ref> objects stored in the map. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="115" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="73" bodyend="79"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Find a contributing particle</header>
      <description><para><anchor id="_1amgrp7088b2601e5e00cdaab647241ae954f7"/> </para></description>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1a1d4bcb5a390af5c363a40f6a7fe975d3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound">MissingETComponentMap::const_iterator</ref></type>
        <definition>MissingETComponentMap::const_iterator xAOD::MissingETComposition::find</definition>
        <argsstring>(const MissingETComponentMap *pMap, const MissingET *pmetObj)</argsstring>
        <name>find</name>
        <param>
          <type>const <ref refid="d0/d58/classxAOD_1_1MissingETComponentMap__v1" kindref="compound">MissingETComponentMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const <ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound">MissingET</ref> *</type>
          <declname>pmetObj</declname>
        </param>
        <briefdescription>
<para>Find non-modifiable contribution for a given MET object. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Const iterator pointing to a non-modifiable <ref refid="" kindref="compound">MissingETComponent </ref> object linked to given object (particle) if found, else return end (const) iterator. The first occurance is returned, independent of the status of the contribution.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmetObj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to valid <ref refid="" kindref="compound">MissingET </ref> object.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This method performs a linear search with at most <computeroutput><ref refid="da/deb/structN" kindref="compound">N</ref></computeroutput> iterations (<computeroutput><ref refid="da/deb/structN" kindref="compound">N</ref></computeroutput> is the number of contributions in the composition map). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="130" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="92" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1a98b82045872775ee4ad4b80a54a23e9b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound">MissingETComponentMap::iterator</ref></type>
        <definition>MissingETComponentMap::iterator xAOD::MissingETComposition::find</definition>
        <argsstring>(MissingETComponentMap *pMap, const MissingET *pmetObj)</argsstring>
        <name>find</name>
        <param>
          <type><ref refid="d0/d58/classxAOD_1_1MissingETComponentMap__v1" kindref="compound">MissingETComponentMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const <ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound">MissingET</ref> *</type>
          <declname>pmetObj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="131" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="95" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1a2181f176870e7555cf617b244aae051b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound">MissingETComponentMap::const_iterator</ref></type>
        <definition>MissingETComponentMap::const_iterator xAOD::MissingETComposition::find</definition>
        <argsstring>(const MissingETComponentMap *pMap, const std::string &amp;metName)</argsstring>
        <name>find</name>
        <param>
          <type>const <ref refid="d0/d58/classxAOD_1_1MissingETComponentMap__v1" kindref="compound">MissingETComponentMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>metName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="132" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="98" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1a4c2df2765e88adf62639243f4bf496fd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound">MissingETComponentMap::iterator</ref></type>
        <definition>MissingETComponentMap::iterator xAOD::MissingETComposition::find</definition>
        <argsstring>(MissingETComponentMap *pMap, const std::string &amp;metName)</argsstring>
        <name>find</name>
        <param>
          <type><ref refid="d0/d58/classxAOD_1_1MissingETComponentMap__v1" kindref="compound">MissingETComponentMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>metName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="133" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="101" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1ac0e19114a6259f8c42f9e9a7f4027ab8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound">MissingETComponentMap::const_iterator</ref></type>
        <definition>MissingETComponentMap::const_iterator xAOD::MissingETComposition::find</definition>
        <argsstring>(const MissingETComponentMap *pMap, MissingETBase::Types::bitmask_t src)</argsstring>
        <name>find</name>
        <param>
          <type>const <ref refid="d0/d58/classxAOD_1_1MissingETComponentMap__v1" kindref="compound">MissingETComponentMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type><ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member">MissingETBase::Types::bitmask_t</ref></type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="134" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="104" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1aaf68bb8aef87f51d1b558f2cd767c541" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound">MissingETComponentMap::iterator</ref></type>
        <definition>MissingETComponentMap::iterator xAOD::MissingETComposition::find</definition>
        <argsstring>(MissingETComponentMap *pMap, MissingETBase::Types::bitmask_t src)</argsstring>
        <name>find</name>
        <param>
          <type><ref refid="d0/d58/classxAOD_1_1MissingETComponentMap__v1" kindref="compound">MissingETComponentMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type><ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member">MissingETBase::Types::bitmask_t</ref></type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="135" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="107" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1ae86ec39d9950e95ecba35551dd964f4e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t xAOD::MissingETComposition::findIndex</definition>
        <argsstring>(const MissingETComponentMap *pMap, const MissingET *pmetObj)</argsstring>
        <name>findIndex</name>
        <param>
          <type>const <ref refid="d0/d58/classxAOD_1_1MissingETComponentMap__v1" kindref="compound">MissingETComponentMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const <ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound">MissingET</ref> *</type>
          <declname>pmetObj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="136"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1aeabb8b34bc5b36762ba8e8748c7acb8a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t xAOD::MissingETComposition::findIndex</definition>
        <argsstring>(const MissingETComponentMap *pMap, const std::string &amp;metName)</argsstring>
        <name>findIndex</name>
        <param>
          <type>const <ref refid="d0/d58/classxAOD_1_1MissingETComponentMap__v1" kindref="compound">MissingETComponentMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>metName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="137"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1aee23498ba08416f5d54efe1ef70e7522" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t xAOD::MissingETComposition::findIndex</definition>
        <argsstring>(const MissingETComponentMap *pMap, MissingETBase::Types::bitmask_t src)</argsstring>
        <name>findIndex</name>
        <param>
          <type>const <ref refid="d0/d58/classxAOD_1_1MissingETComponentMap__v1" kindref="compound">MissingETComponentMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type><ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member">MissingETBase::Types::bitmask_t</ref></type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="138"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1a44fe2d7b764b89da69059d3897aea0c6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound">MissingETComponentMap::const_iterator</ref></type>
        <definition>MissingETAssociationMap::const_iterator xAOD::MissingETComposition::find</definition>
        <argsstring>(const MissingETComponentMap *pMap, const IParticle *pPart)</argsstring>
        <name>find</name>
        <param>
          <type>const <ref refid="d0/d58/classxAOD_1_1MissingETComponentMap__v1" kindref="compound">MissingETComponentMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref> *</type>
          <declname>pPart</declname>
        </param>
        <briefdescription>
<para>Find non-modifiable contribution for given particle. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Const iterator pointing to non-modifiable <ref refid="" kindref="compound">MissingETComponent </ref> object linked to given object (particle) with a given status if found, else return end (const) iterator. The first occurance with a given status is returned.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pPart</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to non-modifiable object possibly contributing to a given MET object. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="149" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="110" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1a8439787011fcdd47b2a7fc3636fe40e9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound">MissingETComponentMap::iterator</ref></type>
        <definition>MissingETAssociationMap::iterator xAOD::MissingETComposition::find</definition>
        <argsstring>(MissingETComponentMap *pMap, const IParticle *pPart)</argsstring>
        <name>find</name>
        <param>
          <type><ref refid="d0/d58/classxAOD_1_1MissingETComponentMap__v1" kindref="compound">MissingETComponentMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref> *</type>
          <declname>pPart</declname>
        </param>
        <briefdescription>
<para>Find modifiable contribution for given particle. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Iterator pointing to non-modifiable <ref refid="" kindref="compound">MissingETComponent </ref> object linked to given object (particle) if found, else return end iterator. The first occurance is returned, independent of the status of the contribution.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pPart</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to non-modifiable object possibly contributing to a given MET object. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="158" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="121" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1a49fc927037b2c523726d28985a5deb1b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound">MissingETAssociationMap::const_iterator</ref></type>
        <definition>MissingETAssociationMap::const_iterator xAOD::MissingETComposition::find</definition>
        <argsstring>(const MissingETAssociationMap *pMap, const Jet *pJet)</argsstring>
        <name>find</name>
        <param>
          <type>const <ref refid="d5/d3a/classxAOD_1_1MissingETAssociationMap__v1" kindref="compound">MissingETAssociationMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const <ref refid="db/d9c/classxAOD_1_1Jet__v1" kindref="compound">Jet</ref> *</type>
          <declname>pJet</declname>
        </param>
        <briefdescription>
<para>Find non-modifiable contribution for a given MET object. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Const iterator pointing to a non-modifiable <ref refid="" kindref="compound">MissingETAssociation </ref> object linked to given object (particle) if found, else return end (const) iterator. The first occurance is returned, independent of the status of the contribution.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pJet</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to valid <ref refid="" kindref="compound">Jet </ref> object.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This method performs a linear search with at most <computeroutput><ref refid="da/deb/structN" kindref="compound">N</ref></computeroutput> iterations (<computeroutput><ref refid="da/deb/structN" kindref="compound">N</ref></computeroutput> is the number of contributions in the association map). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="366" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="343" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1ae342dfb5f3ca0327d2734b0aa41720cf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound">MissingETAssociationMap::iterator</ref></type>
        <definition>MissingETAssociationMap::iterator xAOD::MissingETComposition::find</definition>
        <argsstring>(MissingETAssociationMap *pMap, const Jet *pJet)</argsstring>
        <name>find</name>
        <param>
          <type><ref refid="d5/d3a/classxAOD_1_1MissingETAssociationMap__v1" kindref="compound">MissingETAssociationMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const <ref refid="db/d9c/classxAOD_1_1Jet__v1" kindref="compound">Jet</ref> *</type>
          <declname>pJet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="367" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="346" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1aba4dd650863e91637e2e46340e462e43" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound">MissingETAssociationMap::const_iterator</ref></type>
        <definition>static MissingETAssociationMap::const_iterator xAOD::MissingETComposition::find</definition>
        <argsstring>(const MissingETAssociationMap *pMap, const IParticle *pPart)</argsstring>
        <name>find</name>
        <param>
          <type>const <ref refid="d5/d3a/classxAOD_1_1MissingETAssociationMap__v1" kindref="compound">MissingETAssociationMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref> *</type>
          <declname>pPart</declname>
        </param>
        <briefdescription>
<para>Find non-modifiable contribution for given particle. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Const iterator pointing to non-modifiable <ref refid="" kindref="compound">MissingETAssociation </ref> object linked to given object (particle) with a given status if found, else return end (const) iterator. The first occurance with a given status is returned.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pPart</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to non-modifiable object possibly contributing to a given MET object. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="377"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1a3f54df7c00d9c8d672096ec633e7f810" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound">MissingETAssociationMap::iterator</ref></type>
        <definition>static MissingETAssociationMap::iterator xAOD::MissingETComposition::find</definition>
        <argsstring>(MissingETAssociationMap *pMap, const IParticle *pPart)</argsstring>
        <name>find</name>
        <param>
          <type><ref refid="d5/d3a/classxAOD_1_1MissingETAssociationMap__v1" kindref="compound">MissingETAssociationMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref> *</type>
          <declname>pPart</declname>
        </param>
        <briefdescription>
<para>Find modifiable contribution for given particle. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Iterator pointing to non-modifiable <ref refid="" kindref="compound">MissingETAssociation </ref> object linked to given object (particle) if found, else return end iterator. The first occurance is returned, independent of the status of the contribution.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pPart</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to non-modifiable object possibly contributing to a given MET object. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="386"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access contribution</header>
      <description><para><anchor id="_1amgrpb5c78df2130c51eb6b9975b0048d5ba6"/> </para></description>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1ae7c9e5f791b0a9daf40ef0d7b570ddfc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound">MissingETComponentMap::const_iterator</ref></type>
        <definition>static MissingETComponentMap::const_iterator xAOD::MissingETComposition::begin</definition>
        <argsstring>(const MissingETComponentMap *pMap)</argsstring>
        <name>begin</name>
        <param>
          <type>const <ref refid="d0/d58/classxAOD_1_1MissingETComponentMap__v1" kindref="compound">MissingETComponentMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <briefdescription>
<para>Const iterator access to beginning of composition map. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Const iterator referencing the first entry in <ref refid="" kindref="compound">MissingETComponentMap </ref>. It the map is empty MissingETComposition::end(const MissingETComponentMap*) is returned.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pMap</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to non-modifiable composition map.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>Handing a NULL pointer to this function will lead to a program termination (crash). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="172"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1a7342d99ec09f624d58687fdd3139fc24" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound">MissingETComponentMap::iterator</ref></type>
        <definition>static MissingETComponentMap::iterator xAOD::MissingETComposition::begin</definition>
        <argsstring>(MissingETComponentMap *pMap)</argsstring>
        <name>begin</name>
        <param>
          <type><ref refid="d0/d58/classxAOD_1_1MissingETComponentMap__v1" kindref="compound">MissingETComponentMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <briefdescription>
<para>Iterator access to beginning of composition map. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Iterator referencing the first entry in <ref refid="" kindref="compound">MissingETComponentMap </ref>. It the map is empty MissingETComposition::end(const MissingETComponentMap*) is returned.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pMap</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to non-modifiable composition map.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>Handing a NULL pointer to this function will lead to a program termination (crash). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="182"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1a594daebd34bd9328f05a521b5a90ad4a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound">MissingETComponentMap::const_iterator</ref></type>
        <definition>static MissingETComponentMap::const_iterator xAOD::MissingETComposition::end</definition>
        <argsstring>(const MissingETComponentMap *pMap)</argsstring>
        <name>end</name>
        <param>
          <type>const <ref refid="d0/d58/classxAOD_1_1MissingETComponentMap__v1" kindref="compound">MissingETComponentMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="183"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1ace5822ceb955df79f4fd8c03941f4cac" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d70/classDataModel__detail_1_1iterator" kindref="compound">MissingETComponentMap::iterator</ref></type>
        <definition>static MissingETComponentMap::iterator xAOD::MissingETComposition::end</definition>
        <argsstring>(MissingETComponentMap *pMap)</argsstring>
        <name>end</name>
        <param>
          <type><ref refid="d0/d58/classxAOD_1_1MissingETComponentMap__v1" kindref="compound">MissingETComponentMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="184"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1a184aeb308dda96aba277d3c787e6cfa4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d8/d38/classxAOD_1_1MissingETComponent__v1" kindref="compound">MissingETComponent</ref> *</type>
        <definition>const MissingETComponent * xAOD::MissingETComposition::getComponent</definition>
        <argsstring>(const MissingETComponentMap *pMap, const IParticle *pPart)</argsstring>
        <name>getComponent</name>
        <param>
          <type>const <ref refid="d0/d58/classxAOD_1_1MissingETComponentMap__v1" kindref="compound">MissingETComponentMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref> *</type>
          <declname>pPart</declname>
        </param>
        <briefdescription>
<para>Access non-modifiable contribution object. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Pointer to non-modifiable <ref refid="" kindref="compound">MissingETComponent </ref> object if contribution of referenced object (particle) found, else NULL.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pPart</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to non-modifiable object possibly contributing to a given MET object. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="194" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="132" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1ad4af57ca21c480fe54d249c245527ac2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d8/d38/classxAOD_1_1MissingETComponent__v1" kindref="compound">MissingETComponent</ref> *</type>
        <definition>const MissingETComponent * xAOD::MissingETComposition::getComponent</definition>
        <argsstring>(const MissingETComponentMap *pMap, const MissingET *pmetObj)</argsstring>
        <name>getComponent</name>
        <param>
          <type>const <ref refid="d0/d58/classxAOD_1_1MissingETComponentMap__v1" kindref="compound">MissingETComponentMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const <ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound">MissingET</ref> *</type>
          <declname>pmetObj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="195" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="144" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1a71cde1b23bffd2e8453ef63263640af1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d8/d38/classxAOD_1_1MissingETComponent__v1" kindref="compound">MissingETComponent</ref> *</type>
        <definition>const MissingETComponent * xAOD::MissingETComposition::getComponent</definition>
        <argsstring>(const MissingETComponentMap *pMap, const std::string &amp;metName)</argsstring>
        <name>getComponent</name>
        <param>
          <type>const <ref refid="d0/d58/classxAOD_1_1MissingETComponentMap__v1" kindref="compound">MissingETComponentMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>metName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="196" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="150" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1a8bb9c5ec3097e20a0d5540d5f3094128" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d8/d38/classxAOD_1_1MissingETComponent__v1" kindref="compound">MissingETComponent</ref> *</type>
        <definition>const MissingETComponent * xAOD::MissingETComposition::getComponent</definition>
        <argsstring>(const MissingETComponentMap *pMap, MissingETBase::Types::bitmask_t src)</argsstring>
        <name>getComponent</name>
        <param>
          <type>const <ref refid="d0/d58/classxAOD_1_1MissingETComponentMap__v1" kindref="compound">MissingETComponentMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type><ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member">MissingETBase::Types::bitmask_t</ref></type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="197" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="156" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1a6a3d2d0d5a061d213867806933969db3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d8/d38/classxAOD_1_1MissingETComponent__v1" kindref="compound">MissingETComponent</ref> *</type>
        <definition>MissingETComponent * xAOD::MissingETComposition::getComponent</definition>
        <argsstring>(MissingETComponentMap *pMap, const IParticle *pPart)</argsstring>
        <name>getComponent</name>
        <param>
          <type><ref refid="d0/d58/classxAOD_1_1MissingETComponentMap__v1" kindref="compound">MissingETComponentMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref> *</type>
          <declname>pPart</declname>
        </param>
        <briefdescription>
<para>Access non-modifiable contribution object. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Pointer to modifiable <ref refid="" kindref="compound">MissingETComponent </ref> object if contribution of referenced object (particle) found, else NULL. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="203" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="138" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1a928cca1b63217716e17bb41496ddd555" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d8/d38/classxAOD_1_1MissingETComponent__v1" kindref="compound">MissingETComponent</ref> *</type>
        <definition>MissingETComponent * xAOD::MissingETComposition::getComponent</definition>
        <argsstring>(MissingETComponentMap *pMap, const MissingET *pmetObj)</argsstring>
        <name>getComponent</name>
        <param>
          <type><ref refid="d0/d58/classxAOD_1_1MissingETComponentMap__v1" kindref="compound">MissingETComponentMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const <ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound">MissingET</ref> *</type>
          <declname>pmetObj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="204" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="147" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1a725a55ce8bbd9922d8e57a8e4bffc2c8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d8/d38/classxAOD_1_1MissingETComponent__v1" kindref="compound">MissingETComponent</ref> *</type>
        <definition>MissingETComponent * xAOD::MissingETComposition::getComponent</definition>
        <argsstring>(MissingETComponentMap *pMap, const std::string &amp;metName)</argsstring>
        <name>getComponent</name>
        <param>
          <type><ref refid="d0/d58/classxAOD_1_1MissingETComponentMap__v1" kindref="compound">MissingETComponentMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>metName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="205" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="153" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1a44f2f31ae353fb7065dc4d406effdc19" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d8/d38/classxAOD_1_1MissingETComponent__v1" kindref="compound">MissingETComponent</ref> *</type>
        <definition>MissingETComponent * xAOD::MissingETComposition::getComponent</definition>
        <argsstring>(MissingETComponentMap *pMap, MissingETBase::Types::bitmask_t src)</argsstring>
        <name>getComponent</name>
        <param>
          <type><ref refid="d0/d58/classxAOD_1_1MissingETComponentMap__v1" kindref="compound">MissingETComponentMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type><ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member">MissingETBase::Types::bitmask_t</ref></type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="206" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="159" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1acf7fe92968659509aa2b0faed662548a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; const <ref refid="d5/d15/classxAOD_1_1MissingETAssociation__v1" kindref="compound">MissingETAssociation</ref> * &gt;</type>
        <definition>std::vector&lt; const MissingETAssociation * &gt; xAOD::MissingETComposition::getAssociations</definition>
        <argsstring>(const MissingETAssociationMap *pMap, const IParticle *pPart)</argsstring>
        <name>getAssociations</name>
        <param>
          <type>const <ref refid="d5/d3a/classxAOD_1_1MissingETAssociationMap__v1" kindref="compound">MissingETAssociationMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref> *</type>
          <declname>pPart</declname>
        </param>
        <briefdescription>
<para>Access non-modifiable contribution object. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Pointer to non-modifiable <ref refid="" kindref="compound">MissingETAssociation </ref> object if contribution of referenced object (particle) found, else NULL.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pPart</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to non-modifiable object possibly contributing to a given MET object. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="400" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="402" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1ab31dbfc25edab1245f8266896fc3a517" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec" kindref="compound">MissingETBase::Types::constvec_t</ref></type>
        <definition>MissingETBase::Types::constvec_t xAOD::MissingETComposition::getConstVec</definition>
        <argsstring>(const MissingETAssociationMap *pMap, const IParticle *pPart, MissingETBase::UsageHandler::Policy p)</argsstring>
        <name>getConstVec</name>
        <param>
          <type>const <ref refid="d5/d3a/classxAOD_1_1MissingETAssociationMap__v1" kindref="compound">MissingETAssociationMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref> *</type>
          <declname>pPart</declname>
        </param>
        <param>
          <type><ref refid="de/dd2/namespaceMissingETBase_1_1UsageHandler_1adc82230b57f6a7bcfbffe1e66c06130e" kindref="member">MissingETBase::UsageHandler::Policy</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="401" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="371" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1a8d55e0ac890b1511828c27c14bd78508" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::MissingETComposition::objSelected</definition>
        <argsstring>(const MissingETAssociationMap *pMap, const IParticle *obj)</argsstring>
        <name>objSelected</name>
        <param>
          <type>const <ref refid="d5/d3a/classxAOD_1_1MissingETAssociationMap__v1" kindref="compound">MissingETAssociationMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="402" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="385" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1a9782b8586b46abbfeb826438da6244a9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::MissingETComposition::selectIfNoOverlaps</definition>
        <argsstring>(const MissingETAssociationMap *pMap, const IParticle *obj, MissingETBase::UsageHandler::Policy p)</argsstring>
        <name>selectIfNoOverlaps</name>
        <param>
          <type>const <ref refid="d5/d3a/classxAOD_1_1MissingETAssociationMap__v1" kindref="compound">MissingETAssociationMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="de/dd2/namespaceMissingETBase_1_1UsageHandler_1adc82230b57f6a7bcfbffe1e66c06130e" kindref="member">MissingETBase::UsageHandler::Policy</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="403" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="392" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1a8e4d9669725e74530d33392052960a6b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d5/d15/classxAOD_1_1MissingETAssociation__v1" kindref="compound">MissingETAssociation</ref> *</type>
        <definition>const MissingETAssociation * xAOD::MissingETComposition::getAssociation</definition>
        <argsstring>(const MissingETAssociationMap *pMap, const Jet *pJet)</argsstring>
        <name>getAssociation</name>
        <param>
          <type>const <ref refid="d5/d3a/classxAOD_1_1MissingETAssociationMap__v1" kindref="compound">MissingETAssociationMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const <ref refid="db/d9c/classxAOD_1_1Jet__v1" kindref="compound">Jet</ref> *</type>
          <declname>pJet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="404" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="426" bodyend="427"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1abb2f9e509e84612914baac9fa16ee89f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="d5/d15/classxAOD_1_1MissingETAssociation__v1" kindref="compound">MissingETAssociation</ref> * &gt;</type>
        <definition>std::vector&lt; MissingETAssociation * &gt; xAOD::MissingETComposition::getAssociations</definition>
        <argsstring>(MissingETAssociationMap *pMap, const IParticle *pPart)</argsstring>
        <name>getAssociations</name>
        <param>
          <type><ref refid="d5/d3a/classxAOD_1_1MissingETAssociationMap__v1" kindref="compound">MissingETAssociationMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref> *</type>
          <declname>pPart</declname>
        </param>
        <briefdescription>
<para>Access non-modifiable contribution object. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Pointer to modifiable <ref refid="" kindref="compound">MissingETAssociation </ref> object if contribution of referenced object (particle) found, else NULL. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="411" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="414" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1a745cb41a6289c9ef3c280c52b5d039f7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d15/classxAOD_1_1MissingETAssociation__v1" kindref="compound">MissingETAssociation</ref> *</type>
        <definition>MissingETAssociation * xAOD::MissingETComposition::getAssociation</definition>
        <argsstring>(MissingETAssociationMap *pMap, const Jet *pJet)</argsstring>
        <name>getAssociation</name>
        <param>
          <type><ref refid="d5/d3a/classxAOD_1_1MissingETAssociationMap__v1" kindref="compound">MissingETAssociationMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const <ref refid="db/d9c/classxAOD_1_1Jet__v1" kindref="compound">Jet</ref> *</type>
          <declname>pJet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="412" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="429" bodyend="430"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access contribution parameters and linked objects</header>
      <description><para><anchor id="_1amgrpd974012f9af3a8f638d896aa320b30ff"/> </para></description>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1a33094e58a9a5b2243bf037227e12894b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dc/da3/classxAOD_1_1MissingETComponent__v1_1_1Weight" kindref="compound">MissingETBase::Types::weight_t</ref></type>
        <definition>MissingETBase::Types::weight_t xAOD::MissingETComposition::getWeight</definition>
        <argsstring>(const MissingETComponentMap *pMap, const IParticle *pPart)</argsstring>
        <name>getWeight</name>
        <param>
          <type>const <ref refid="d0/d58/classxAOD_1_1MissingETComponentMap__v1" kindref="compound">MissingETComponentMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref> *</type>
          <declname>pPart</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="211" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="165" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1ae4b69476c5bf7d84b472709b316b7289" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dc/da3/classxAOD_1_1MissingETComponent__v1_1_1Weight" kindref="compound">MissingETBase::Types::weight_t</ref></type>
        <definition>MissingETBase::Types::weight_t xAOD::MissingETComposition::getWeight</definition>
        <argsstring>(MissingETComponentMap::const_iterator fCont, const IParticle *pPart)</argsstring>
        <name>getWeight</name>
        <param>
          <type><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound">MissingETComponentMap::const_iterator</ref></type>
          <declname>fCont</declname>
        </param>
        <param>
          <type>const <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref> *</type>
          <declname>pPart</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="212" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="169" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1a5316410cf4a7a228f71a15734b387cd6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member">MissingETBase::Types::bitmask_t</ref></type>
        <definition>MissingETBase::Types::bitmask_t xAOD::MissingETComposition::getStatusWord</definition>
        <argsstring>(const MissingETComponentMap *pMap, const MissingET *pmetObj)</argsstring>
        <name>getStatusWord</name>
        <param>
          <type>const <ref refid="d0/d58/classxAOD_1_1MissingETComponentMap__v1" kindref="compound">MissingETComponentMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const <ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound">MissingET</ref> *</type>
          <declname>pmetObj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="213" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="173" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1a0d9b5882e77512e6e3d481c4090944db" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member">MissingETBase::Types::bitmask_t</ref></type>
        <definition>MissingETBase::Types::bitmask_t xAOD::MissingETComposition::getStatusWord</definition>
        <argsstring>(MissingETComponentMap::const_iterator fCont)</argsstring>
        <name>getStatusWord</name>
        <param>
          <type><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound">MissingETComponentMap::const_iterator</ref></type>
          <declname>fCont</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="214" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="176" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1a93e870d48807b7c76b4fa19499b8347a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound">MissingET</ref> *</type>
        <definition>const MissingET * xAOD::MissingETComposition::getMissingET</definition>
        <argsstring>(const MissingETComponentMap *pMap, const IParticle *pPart)</argsstring>
        <name>getMissingET</name>
        <param>
          <type>const <ref refid="d0/d58/classxAOD_1_1MissingETComponentMap__v1" kindref="compound">MissingETComponentMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref> *</type>
          <declname>pPart</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="215" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="180" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1ada46abcd832a5cb3a17a3807e850e890" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound">MissingET</ref> *</type>
        <definition>const MissingET * xAOD::MissingETComposition::getMissingET</definition>
        <argsstring>(MissingETComponentMap::const_iterator fCont)</argsstring>
        <name>getMissingET</name>
        <param>
          <type><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound">MissingETComponentMap::const_iterator</ref></type>
          <declname>fCont</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="216" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="183" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1a2fe4f3ae86c5bdf662a9e71c61c7e4e8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound">MissingET</ref> *</type>
        <definition>const MissingET * xAOD::MissingETComposition::getMissingET</definition>
        <argsstring>(const MissingETComponentMap *pMap, const std::string &amp;name)</argsstring>
        <name>getMissingET</name>
        <param>
          <type>const <ref refid="d0/d58/classxAOD_1_1MissingETComponentMap__v1" kindref="compound">MissingETComponentMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="217" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="186" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1aad226d325fd3d29918116c1cc6fdd33b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound">MissingET</ref> *</type>
        <definition>const MissingET * xAOD::MissingETComposition::getMissingET</definition>
        <argsstring>(const MissingETComponentMap *pMap, MissingETBase::Types::bitmask_t sw)</argsstring>
        <name>getMissingET</name>
        <param>
          <type>const <ref refid="d0/d58/classxAOD_1_1MissingETComponentMap__v1" kindref="compound">MissingETComponentMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type><ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member">MissingETBase::Types::bitmask_t</ref></type>
          <declname>sw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="218" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="189" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1a93dcf33a735b2a325a8583774f32c875" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="db/d9c/classxAOD_1_1Jet__v1" kindref="compound">Jet</ref> *</type>
        <definition>const Jet * xAOD::MissingETComposition::getRefJet</definition>
        <argsstring>(const MissingETAssociationMap *pMap, const IParticle *pPart)</argsstring>
        <name>getRefJet</name>
        <param>
          <type>const <ref refid="d5/d3a/classxAOD_1_1MissingETAssociationMap__v1" kindref="compound">MissingETAssociationMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref> *</type>
          <declname>pPart</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="421" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="436" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1a40b03242b9b2027008d3c802e9ffb5a8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="db/d9c/classxAOD_1_1Jet__v1" kindref="compound">Jet</ref> *</type>
        <definition>const Jet * xAOD::MissingETComposition::getRefJet</definition>
        <argsstring>(MissingETAssociationMap::const_iterator fCont)</argsstring>
        <name>getRefJet</name>
        <param>
          <type><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound">MissingETAssociationMap::const_iterator</ref></type>
          <declname>fCont</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="422" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="442" bodyend="443"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Adding data to the association map</header>
      <description><para><anchor id="_1amgrp2ad0f3685413f65205e00f9984debf82"/> <anchor id="de/dc5/structxAOD_1_1MissingETComposition_1metassoc_insertion"/> </para></description>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1a9556bcdf79d0fd1dad377c2b9fcf8874" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::MissingETComposition::add</definition>
        <argsstring>(MissingETAssociationMap *pMap, const Jet *pJet, const std::vector&lt; ElementLink&lt; IParticleContainer &gt; &gt; &amp;jetconst=std::vector&lt; ElementLink&lt; IParticleContainer &gt; &gt;(), const MissingETBase::Types::constvec_t &amp;trkvec=MissingETBase::Types::constvec_t())</argsstring>
        <name>add</name>
        <param>
          <type><ref refid="d5/d3a/classxAOD_1_1MissingETAssociationMap__v1" kindref="compound">MissingETAssociationMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const <ref refid="db/d9c/classxAOD_1_1Jet__v1" kindref="compound">Jet</ref> *</type>
          <declname>pJet</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref>&lt; <ref refid="d0/d4d/classDataVector" kindref="compound">IParticleContainer</ref> &gt; &gt; &amp;</type>
          <declname>jetconst</declname>
          <defval>std::vector&lt; <ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref>&lt; <ref refid="d0/d4d/classDataVector" kindref="compound">IParticleContainer</ref> &gt; &gt;()</defval>
        </param>
        <param>
          <type>const <ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec" kindref="compound">MissingETBase::Types::constvec_t</ref> &amp;</type>
          <declname>trkvec</declname>
          <defval><ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec" kindref="compound">MissingETBase::Types::constvec_t</ref>()</defval>
        </param>
        <briefdescription>
<para>Adding a <ref refid="dd/d44/namespacexAOD_1a061b8e46a27adb6d8ae3669c2753a0d3" kindref="member">Jet </ref> object to the map. </para>        </briefdescription>
        <detaileddescription>
<para>This function should be called for a given <ref refid="dd/d44/namespacexAOD_1a061b8e46a27adb6d8ae3669c2753a0d3" kindref="member">Jet </ref> object before <ref refid="de/dc5/structxAOD_1_1MissingETComposition_1a3499794992868dd91d78f775b072cbc8" kindref="member">MissingETComposition::insert</ref> is invoked for the same object. Note that the the rules for adding a MET object do not allow to add the same object more than once to a given <ref refid="dd/d44/namespacexAOD_1add4f810a92467b0c480b139da4159527" kindref="member">MissingETAssociationMap </ref>.</para><para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the object is not already in the map, else <computeroutput>false</computeroutput>.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pMap</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to modifiable <ref refid="" kindref="compound">MissingETAssociationMap </ref> object (the map to which the <ref refid="" kindref="compound">Jet </ref> object added. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pJet</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to non-modifiable <ref refid="" kindref="compound">Jet </ref> object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">jetconst</parametername>
</parameternamelist>
<parameterdescription>
<para>vector of elementlinks to jet constituents. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="285" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="196" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1ad164ff08656a687ce9403701fdefa623" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::MissingETComposition::add</definition>
        <argsstring>(MissingETAssociationMap *pMap, const Jet *pJet, const std::vector&lt; const IParticle * &gt; &amp;jetracks=std::vector&lt; const IParticle * &gt;())</argsstring>
        <name>add</name>
        <param>
          <type><ref refid="d5/d3a/classxAOD_1_1MissingETAssociationMap__v1" kindref="compound">MissingETAssociationMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const <ref refid="db/d9c/classxAOD_1_1Jet__v1" kindref="compound">Jet</ref> *</type>
          <declname>pJet</declname>
        </param>
        <param>
          <type>const std::vector&lt; const <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref> * &gt; &amp;</type>
          <declname>jetracks</declname>
          <defval>std::vector&lt; const <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref> * &gt;()</defval>
        </param>
        <briefdescription>
<para>Adding a <ref refid="dd/d44/namespacexAOD_1a061b8e46a27adb6d8ae3669c2753a0d3" kindref="member">Jet </ref> object to the map. </para>        </briefdescription>
        <detaileddescription>
<para>This function should be called for a given <ref refid="dd/d44/namespacexAOD_1a061b8e46a27adb6d8ae3669c2753a0d3" kindref="member">Jet </ref> object before <ref refid="de/dc5/structxAOD_1_1MissingETComposition_1a3499794992868dd91d78f775b072cbc8" kindref="member">MissingETComposition::insert</ref> is invoked for the same object. Note that the the rules for adding a MET object do not allow to add the same object more than once to a given <ref refid="dd/d44/namespacexAOD_1add4f810a92467b0c480b139da4159527" kindref="member">MissingETAssociationMap </ref>.</para><para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the object is not already in the map, else <computeroutput>false</computeroutput>.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pMap</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to modifiable <ref refid="" kindref="compound">MissingETAssociationMap </ref> object (the map to which the <ref refid="" kindref="compound">Jet </ref> object added. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pJet</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to non-modifiable <ref refid="" kindref="compound">Jet </ref> object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">jettracks</parametername>
</parameternamelist>
<parameterdescription>
<para>vector of pointers to tracks associated to jet. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="300" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="214" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1ace2a60c396eacda3c64575739916542e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::MissingETComposition::addMiscAssociation</definition>
        <argsstring>(MissingETAssociationMap *pMap)</argsstring>
        <name>addMiscAssociation</name>
        <param>
          <type><ref refid="d5/d3a/classxAOD_1_1MissingETAssociationMap__v1" kindref="compound">MissingETAssociationMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <briefdescription>
<para>Add an association to hold objects not associated to any jet. </para>        </briefdescription>
        <detaileddescription>
<para>In some cases, e.g. muons, it&apos;s useful to have a dummy association, so that overlap removal can be handled for objects not associated to a jet.</para><para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the object is not already in the map, else <computeroutput>false</computeroutput>.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pMap</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to modifiable <ref refid="" kindref="compound">MissingETAssociationMap </ref> object (the map to which the <ref refid="" kindref="compound">Jet </ref> object added. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="311" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="237" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1ab90fe0fd2a19253fc7179e648b70b028" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::MissingETComposition::insert</definition>
        <argsstring>(MissingETAssociationMap *pMap, size_t jetIndex, const IParticle *pPart, const std::vector&lt; const IParticle * &gt; &amp;constlist)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="d5/d3a/classxAOD_1_1MissingETAssociationMap__v1" kindref="compound">MissingETAssociationMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>jetIndex</declname>
        </param>
        <param>
          <type>const <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref> *</type>
          <declname>pPart</declname>
        </param>
        <param>
          <type>const std::vector&lt; const <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref> * &gt; &amp;</type>
          <declname>constlist</declname>
        </param>
        <briefdescription>
<para>Insert contributing object to jet referenced by index, with constVecs for track and calo constituents. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if insertion successful according to the rules lined out here</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pJet</parametername>
</parameternamelist>
<parameterdescription>
<para>non-modifiable pointer to the reference jet </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pPart</parametername>
</parameternamelist>
<parameterdescription>
<para>generic pointer to non-modifiable physics or signal object contributing to the MET object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">constList</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to non-modifiable list of (base type) pointers to signals associated with the given physics object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="321" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="247" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1a6c7441276d479ea9b45938ad6c7e0601" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::MissingETComposition::insert</definition>
        <argsstring>(MissingETAssociationMap *pMap, const Jet *pJet, const IParticle *pPart, const std::vector&lt; const IParticle * &gt; &amp;constlist)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="d5/d3a/classxAOD_1_1MissingETAssociationMap__v1" kindref="compound">MissingETAssociationMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const <ref refid="db/d9c/classxAOD_1_1Jet__v1" kindref="compound">Jet</ref> *</type>
          <declname>pJet</declname>
        </param>
        <param>
          <type>const <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref> *</type>
          <declname>pPart</declname>
        </param>
        <param>
          <type>const std::vector&lt; const <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref> * &gt; &amp;</type>
          <declname>constlist</declname>
        </param>
        <briefdescription>
<para>Insert contributing object to jet referenced by pointer, with constVecs for track and calo constituents. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if insertion successful according to the rules lined out here</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pJet</parametername>
</parameternamelist>
<parameterdescription>
<para>non-modifiable pointer to the reference jet </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pPart</parametername>
</parameternamelist>
<parameterdescription>
<para>generic pointer to non-modifiable physics or signal object contributing to the MET object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">constList</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to non-modifiable list of (base type) pointers to signals associated with the given physics object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="331" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="263" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1a98c6c453bf3c6aef28a7ddd04b41fac5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::MissingETComposition::insert</definition>
        <argsstring>(MissingETAssociationMap *pMap, const IParticle *pPart, const std::vector&lt; const IParticle * &gt; &amp;constlist, std::map&lt; const IParticle *, MissingETBase::Types::constvec_t &gt; pOverride=std::map&lt; const IParticle *, MissingETBase::Types::constvec_t &gt;())</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="d5/d3a/classxAOD_1_1MissingETAssociationMap__v1" kindref="compound">MissingETAssociationMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref> *</type>
          <declname>pPart</declname>
        </param>
        <param>
          <type>const std::vector&lt; const <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref> * &gt; &amp;</type>
          <declname>constlist</declname>
        </param>
        <param>
          <type>std::map&lt; const <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref> *, <ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec" kindref="compound">MissingETBase::Types::constvec_t</ref> &gt;</type>
          <declname>pOverride</declname>
          <defval>std::map&lt; const <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref> *, <ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec" kindref="compound">MissingETBase::Types::constvec_t</ref> &gt;()</defval>
        </param>
        <briefdescription>
<para>Insert contributing object, finding the appropriate association automatically. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if insertion successful according to the rules lined out here</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pPart</parametername>
</parameternamelist>
<parameterdescription>
<para>generic pointer to non-modifiable physics or signal object contributing to the MET object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">constList</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to non-modifiable list of (base type) pointers to signals associated with the given physics object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="340" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="276" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1ac07ea7de19028bf572a0f4f915a650c5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::MissingETComposition::setJetConstSum</definition>
        <argsstring>(MissingETAssociationMap *metMap, const Jet *jet, const std::vector&lt; const IParticle * &gt; &amp;altConsts, std::map&lt; const IParticle *, MissingETBase::Types::constvec_t &gt; pOverride)</argsstring>
        <name>setJetConstSum</name>
        <param>
          <type><ref refid="d5/d3a/classxAOD_1_1MissingETAssociationMap__v1" kindref="compound">MissingETAssociationMap</ref> *</type>
          <declname>metMap</declname>
        </param>
        <param>
          <type>const <ref refid="db/d9c/classxAOD_1_1Jet__v1" kindref="compound">Jet</ref> *</type>
          <declname>jet</declname>
        </param>
        <param>
          <type>const std::vector&lt; const <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref> * &gt; &amp;</type>
          <declname>altConsts</declname>
        </param>
        <param>
          <type>std::map&lt; const <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref> *, <ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec" kindref="compound">MissingETBase::Types::constvec_t</ref> &gt;</type>
          <declname>pOverride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="343" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="306" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1af561bac719dad196486a8b191a935695" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::MissingETComposition::insertMisc</definition>
        <argsstring>(MissingETAssociationMap *pMap, const IParticle *pPart, const std::vector&lt; const IParticle * &gt; &amp;constlist)</argsstring>
        <name>insertMisc</name>
        <param>
          <type><ref refid="d5/d3a/classxAOD_1_1MissingETAssociationMap__v1" kindref="compound">MissingETAssociationMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type>const <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref> *</type>
          <declname>pPart</declname>
        </param>
        <param>
          <type>const std::vector&lt; const <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref> * &gt; &amp;</type>
          <declname>constlist</declname>
        </param>
        <briefdescription>
<para>Insert contributing object into miscellaneous association. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if insertion successful according to the rules lined out here</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pPart</parametername>
</parameternamelist>
<parameterdescription>
<para>generic pointer to non-modifiable physics or signal object contributing to the MET object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">constList</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to non-modifiable list of (base type) pointers to signals associated with the given physics object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="351" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComposition.cxx" bodystart="322" bodyend="341"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="de/dc5/structxAOD_1_1MissingETComposition_1a3d6fde29de5594e4bdd33547257c6ce6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>OBJTYPE</declname>
            <defname>OBJTYPE</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>static bool xAOD::MissingETComposition::fillMissingET</definition>
        <argsstring>(const MissingETComponentMap *pMap, MissingET *pMET, MissingETBase::Types::bitmask_t=MissingETBase::Status::clearedStatus())</argsstring>
        <name>fillMissingET</name>
        <param>
          <type>const <ref refid="d0/d58/classxAOD_1_1MissingETComponentMap__v1" kindref="compound">MissingETComponentMap</ref> *</type>
          <declname>pMap</declname>
        </param>
        <param>
          <type><ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound">MissingET</ref> *</type>
          <declname>pMET</declname>
        </param>
        <param>
          <type><ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member">MissingETBase::Types::bitmask_t</ref></type>
          <defval>MissingETBase::Status::clearedStatus()</defval>
        </param>
        <briefdescription>
<para>Fill a given MissingET object. </para>        </briefdescription>
        <detaileddescription>
<para>This method fills a referenced MissingET object with kinematics from a specific object type. This method is useful if contributions to a given MET term are of one object type only (basically true for all hard MET terms). For the soft MET term, which may be composed of contributions from tracks and clusters, one could invoke this method twice (once for each object type) for the same MissingET object. The method does not reset the MissingET object, it strictly adds the contributions from objects of the requested type.</para><para><simplesect kind="return"><para><computeroutput>true</computeroutput> if anything added to the referenced <ref refid="" kindref="compound">MissingET </ref> object, else <computeroutput>false</computeroutput>.</para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>OBJTYPE</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="dd/dc8/namespacexAOD_1_1Type_1a96c48d2d85466ace623036af49f84434" kindref="member">xAOD::Type::ObjectType</ref> requested to contribute to the MET object.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pMET</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to modifiable MET object to be updated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">status</parametername>
</parameternamelist>
<parameterdescription>
<para>statusword filter to be applied as a contribution filter (optional, default is <ref refid="db/d4d/structMissingETBase_1_1Status_1a592a63c3771abf1287a7a07326b32c34" kindref="member">MissingETBase::Status::clearedStatus()</ref>) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="238" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" bodystart="236" bodyend="264"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Collection of functions managing the MET composition map and association map. </para>    </briefdescription>
    <detaileddescription>
<para><bold>Preliminaries</bold></para><para>This struct does not contain any private data, and does not support any storable data. It collects functions interacting with the data objects providing the composition of a given missing transverse momentum (MET) reconstruction configuration. One set of these data objects includes <ref refid="" kindref="compound">MissingETComponent </ref> for the description of the contributions to a given MET, and <ref refid="" kindref="compound">MissingETComponentMap </ref>, which collects all contributions to a full and consistent MET and thus describes its configuration in terms of contributions from the all physics and signal objects in the event. The other set consists of <ref refid="" kindref="compound">MissingETAssociation </ref> that stores objects matched to a reconstructed jet, and <ref refid="" kindref="compound">MissingETAssociationMap </ref>, which encodes all overlaps between objects in a physics event.</para><para><bold>Introduction</bold></para><para>The principal data objects describing the composition of a given reconstructed MET are (1) the <ref refid="" kindref="compound">MissingETComponent </ref> object and (2) the <ref refid="" kindref="compound">MissingETComponentMap </ref> object. The first one describes the contributions to a given MET term, as documented <ref refid="" kindref="compound">here </ref>, and the second object is a collection of MET contibutions describing the composition of the fully reconstructed MET.</para><para>To permit the rebuilding of MET more easily without recourse to the constituent collections, we define (1) the <ref refid="" kindref="compound">MissingETAssociation </ref> object and (2) the <ref refid="" kindref="compound">MissingETAssociationMap </ref> object. The first one describes the objects matched to a reconstructed jet, as documented <ref refid="" kindref="compound">here </ref>, and the second object is a collection of associations, holding all overlap removal decisions for objects in the event.</para><para>The interaction with these data objects and the rules applied to these interactions are provided by the functions collected in the <ref refid="de/dc5/structxAOD_1_1MissingETComposition" kindref="compound">MissingETComposition</ref> structure.</para><para><anchor id="de/dc5/structxAOD_1_1MissingETComposition_1metcom_insertion_rules"/> <bold>Insertion rules</bold> (<ref refid="de/dc5/structxAOD_1_1MissingETComposition_1metcomp_insertion" kindref="member">link to code documentation</ref>)</para><para>Two different levels of</para><para><bold>Example: add data to the composition map</bold></para><para>Each tool reconstructing a MET term is expected to add a <ref refid="" kindref="compound">MissingET </ref> object to a composition map. The sequence in the tool&apos;s execute method should look like this:</para><para><programlisting><codeline><highlight class="normal"><sp/><sp/><sp/>StatusCode<sp/>METElectronTool::executeTool(<ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound" tooltip="Principal data object for Missing ET.">xAOD::MissingET</ref>*<sp/>pMET,<ref refid="d0/d58/classxAOD_1_1MissingETComponentMap__v1" kindref="compound">xAOD::MissingETComponentMap</ref>*<sp/>pMap)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::EgammaContainer</ref><sp/>pCont<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>this-&gt;evtStore()-&gt;retrieve(pCont,</highlight><highlight class="stringliteral">&quot;ElectronContainer&quot;</highlight><highlight class="normal">).isFailure()<sp/>)<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>allocate<sp/>ElectronContainer&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;<sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pMET-&gt;<ref refid="dd/d06/classxAOD_1_1MissingET__v1_1af3785408201280f9d2c24f8ac1b37260" kindref="member" tooltip="Set the name of the MET object.">setName</ref>(</highlight><highlight class="stringliteral">&quot;METElectron&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>name<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pMET-&gt;<ref refid="dd/d06/classxAOD_1_1MissingET__v1_1a5bc5e160ff911d218556b7ad4d4805ef" kindref="member" tooltip="Set the source of the MET object.">setSource</ref>(<ref refid="d3/dee/structMissingETBase_1_1Source_1a54e69f5a8cc723e45602b7a4ae703c86" kindref="member" tooltip="Standard MET term from reconstructed electrons.">MissingETBase::Source::electron</ref>());<sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>source<sp/>indicator</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!MissingETComposition::add(pMap,pMET,MissingETBase::Status::electron())<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>ATH_MSG_WARNING(</highlight><highlight class="stringliteral">&quot;MissingET<sp/>object<sp/>&lt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pMET-&gt;<ref refid="dd/d06/classxAOD_1_1MissingET__v1_1ae6b20c7d85d71e38ad573ae81d556615" kindref="member" tooltip="Identifier getters.">name</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>already<sp/>in<sp/>composition<sp/>map&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;<sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::EgammaContainer::const_iterator</ref><sp/>fEle(pCont-&gt;<ref refid="d0/d4d/classDataVector_1a66c78bd83eeb15e5616a898557598b36" kindref="member" tooltip="Return a const_iterator pointing at the beginning of the collection.">begin</ref>());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d17/classDataModel__detail_1_1const__iterator" kindref="compound" tooltip="Const iterator class for DataVector/DataList. ">xAOD::EgammaContainer::const_iterator</ref><sp/>lEle(pCont-&gt;<ref refid="d0/d4d/classDataVector_1a1d5dd5515d2c9bc20f417830f5d05b5e" kindref="member" tooltip="Return a const_iterator pointing past the end of the collection.">end</ref>());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MissingETBase::MissingETBase::Types::object_vector_t<sp/>clusterList;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>fEle<sp/>!=<sp/>lEle;<sp/>++fEle<sp/>)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>this-&gt;filter(*fEle)<sp/>)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>select<sp/>electrons</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clusterList.clear();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>accepted<sp/>electron:<sp/>clear<sp/>cluster<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;extractClusters(*fEle,clusterList);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>accepted<sp/>electron:<sp/>extract<sp/>list<sp/>of<sp/>clusters<sp/>associated<sp/>with<sp/>the<sp/>electron<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!pMap-&gt;checkOverlap(clusterList)<sp/>)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>accepted<sp/>electron:<sp/>check<sp/>for<sp/>signal<sp/>overlap</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMet.add((*fEle)-&gt;p4().Px(),(*fEle)-&gt;p4().Py(),(*fEle)-&gt;pt());<sp/></highlight><highlight class="comment">//<sp/>accepted<sp/>electron/no<sp/>overlap:<sp/>add<sp/>to<sp/>MET<sp/>object<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MissingETComposition::insert(pMap,pMET,*fEle,clusterList);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>accepted<sp/>electron/no<sp/>overlap:<sp/>add<sp/>to<sp/>composition<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>no<sp/>signal<sp/>overlap</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>accepted<sp/>electron</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>loop<sp/>on<sp/>all<sp/>electrons</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
</programlisting></para><para>In this example <ref refid="de/dc5/structxAOD_1_1MissingETComposition_1ac73f93e4ea8ea905110539ec7464a78f" kindref="member">MissingETComposition::add(MissingETComponentMap*,const MissingET*,MissingETBase::Types::bitmask_t sw)</ref> and MissingETComposition::insert(MissingETComponentMap*,const MissingET*,const MissingETBase::Types::weight_t&amp;) are used. </para>    </detaileddescription>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" line="16" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/xAODMissingET/MissingETComposition.h" bodystart="15" bodyend="425"/>
    <listofallmembers>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1ac73f93e4ea8ea905110539ec7464a78f" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>add</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1a9556bcdf79d0fd1dad377c2b9fcf8874" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>add</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1ad164ff08656a687ce9403701fdefa623" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>add</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1ace2a60c396eacda3c64575739916542e" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>addMiscAssociation</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1ae7c9e5f791b0a9daf40ef0d7b570ddfc" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>begin</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1a7342d99ec09f624d58687fdd3139fc24" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>begin</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1a594daebd34bd9328f05a521b5a90ad4a" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>end</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1ace5822ceb955df79f4fd8c03941f4cac" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>end</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1a3d6fde29de5594e4bdd33547257c6ce6" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>fillMissingET</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1a1d4bcb5a390af5c363a40f6a7fe975d3" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>find</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1a98b82045872775ee4ad4b80a54a23e9b" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>find</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1a2181f176870e7555cf617b244aae051b" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>find</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1a4c2df2765e88adf62639243f4bf496fd" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>find</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1ac0e19114a6259f8c42f9e9a7f4027ab8" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>find</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1aaf68bb8aef87f51d1b558f2cd767c541" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>find</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1a44fe2d7b764b89da69059d3897aea0c6" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>find</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1a8439787011fcdd47b2a7fc3636fe40e9" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>find</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1a49fc927037b2c523726d28985a5deb1b" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>find</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1ae342dfb5f3ca0327d2734b0aa41720cf" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>find</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1aba4dd650863e91637e2e46340e462e43" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>find</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1a3f54df7c00d9c8d672096ec633e7f810" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>find</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1ae86ec39d9950e95ecba35551dd964f4e" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>findIndex</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1aeabb8b34bc5b36762ba8e8748c7acb8a" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>findIndex</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1aee23498ba08416f5d54efe1ef70e7522" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>findIndex</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1a8e4d9669725e74530d33392052960a6b" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>getAssociation</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1a745cb41a6289c9ef3c280c52b5d039f7" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>getAssociation</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1acf7fe92968659509aa2b0faed662548a" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>getAssociations</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1abb2f9e509e84612914baac9fa16ee89f" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>getAssociations</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1a184aeb308dda96aba277d3c787e6cfa4" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>getComponent</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1ad4af57ca21c480fe54d249c245527ac2" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>getComponent</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1a71cde1b23bffd2e8453ef63263640af1" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>getComponent</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1a8bb9c5ec3097e20a0d5540d5f3094128" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>getComponent</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1a6a3d2d0d5a061d213867806933969db3" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>getComponent</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1a928cca1b63217716e17bb41496ddd555" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>getComponent</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1a725a55ce8bbd9922d8e57a8e4bffc2c8" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>getComponent</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1a44f2f31ae353fb7065dc4d406effdc19" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>getComponent</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1ab31dbfc25edab1245f8266896fc3a517" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>getConstVec</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1a93e870d48807b7c76b4fa19499b8347a" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>getMissingET</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1ada46abcd832a5cb3a17a3807e850e890" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>getMissingET</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1a2fe4f3ae86c5bdf662a9e71c61c7e4e8" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>getMissingET</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1aad226d325fd3d29918116c1cc6fdd33b" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>getMissingET</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1a93dcf33a735b2a325a8583774f32c875" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>getRefJet</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1a40b03242b9b2027008d3c802e9ffb5a8" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>getRefJet</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1a5316410cf4a7a228f71a15734b387cd6" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>getStatusWord</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1a0d9b5882e77512e6e3d481c4090944db" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>getStatusWord</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1a33094e58a9a5b2243bf037227e12894b" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>getWeight</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1ae4b69476c5bf7d84b472709b316b7289" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>getWeight</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1a3499794992868dd91d78f775b072cbc8" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>insert</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1ae4b7a6d0cf815f07b6c5fe7f0fddb6f7" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>insert</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1a471fc3aa9a62586f58775f7f9b206930" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>insert</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1ae8501f7505d12c9b5bfce5fc4fb3b21f" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>insert</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1ab90fe0fd2a19253fc7179e648b70b028" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>insert</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1a6c7441276d479ea9b45938ad6c7e0601" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>insert</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1a98c6c453bf3c6aef28a7ddd04b41fac5" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>insert</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1af561bac719dad196486a8b191a935695" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>insertMisc</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1a8d55e0ac890b1511828c27c14bd78508" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>objSelected</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1a9782b8586b46abbfeb826438da6244a9" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>selectIfNoOverlaps</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1ac07ea7de19028bf572a0f4f915a650c5" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>setJetConstSum</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1a6cd8dafda02a085c026cc07a479ed93a" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>updateLinks</name></member>
      <member refid="de/dc5/structxAOD_1_1MissingETComposition_1a87a7216748fc3698738b13642fc38516" prot="public" virt="non-virtual"><scope>xAOD::MissingETComposition</scope><name>updateMETLinks</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
