<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="de/d6c/egammaMVATree_8h" kind="file">
    <compoundname>egammaMVATree.h</compoundname>
    <includes local="no">functional</includes>
    <includes local="no">string</includes>
    <includes local="no">map</includes>
    <includes local="no">array</includes>
    <includes local="no">vector</includes>
    <includes local="no">tuple</includes>
    <includes local="no">cmath</includes>
    <includes local="no">set</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">numeric</includes>
    <includes refid="d6/d1c/Egamma_8h" local="yes">xAODEgamma/Egamma.h</includes>
    <includes refid="dc/db4/Electron_8h" local="yes">xAODEgamma/Electron.h</includes>
    <includes refid="d4/df7/Photon_8h" local="yes">xAODEgamma/Photon.h</includes>
    <includes refid="d0/d71/EgammaxAODHelpers_8h" local="yes">xAODEgamma/EgammaxAODHelpers.h</includes>
    <includes refid="db/d88/CaloCluster_8h" local="yes">xAODCaloEvent/CaloCluster.h</includes>
    <includes local="no">TTree.h</includes>
    <includes local="no">TLorentzVector.h</includes>
    <includes refid="d3/d61/AsgMessaging_8h" local="no">AsgTools/AsgMessaging.h</includes>
    <includes refid="db/de6/egammaMVALayerDepth_8h" local="no">egammaMVACalib/egammaMVALayerDepth.h</includes>
    <includedby refid="d1/deb/egammaMVATool_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/Root/egammaMVATool.cxx</includedby>
    <includedby refid="da/df3/egammaMVATree_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/Root/egammaMVATree.cxx</includedby>
    <incdepgraph>
      <node id="115745">
        <label>list</label>
      </node>
      <node id="115754">
        <label>AthContainers/tools/DVL_algorithms.icc</label>
        <link refid="df/daa/DVL__algorithms_8icc"/>
        <childnode refid="115739" relation="include">
        </childnode>
        <childnode refid="115746" relation="include">
        </childnode>
        <childnode refid="115657" relation="include">
        </childnode>
        <childnode refid="115735" relation="include">
        </childnode>
        <childnode refid="115664" relation="include">
        </childnode>
      </node>
      <node id="115739">
        <label>AthContainers/tools/DVLNoBase.h</label>
        <link refid="d7/d92/DVLNoBase_8h"/>
      </node>
      <node id="115699">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="115761">
        <label>AthContainers/tools/DVLDataBucket.h</label>
        <link refid="d4/d16/DVLDataBucket_8h"/>
        <childnode refid="115762" relation="include">
        </childnode>
        <childnode refid="115740" relation="include">
        </childnode>
        <childnode refid="115670" relation="include">
        </childnode>
        <childnode refid="115763" relation="include">
        </childnode>
      </node>
      <node id="115701">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="115663" relation="include">
        </childnode>
        <childnode refid="115665" relation="include">
        </childnode>
        <childnode refid="115670" relation="include">
        </childnode>
        <childnode refid="115636" relation="include">
        </childnode>
      </node>
      <node id="115831">
        <label>AsgTools/IAsgTool.h</label>
        <link refid="df/dd4/IAsgTool_8h_source"/>
        <childnode refid="115637" relation="include">
        </childnode>
        <childnode refid="115826" relation="include">
        </childnode>
        <childnode refid="115832" relation="include">
        </childnode>
        <childnode refid="115833" relation="include">
        </childnode>
      </node>
      <node id="115702">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="115672">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="115659" relation="include">
        </childnode>
        <childnode refid="115661" relation="include">
        </childnode>
        <childnode refid="115673" relation="include">
        </childnode>
        <childnode refid="115671" relation="include">
        </childnode>
      </node>
      <node id="115773">
        <label>EventPrimitives/EventPrimitives.h</label>
        <link refid="d1/d54/EventPrimitives_8h_source"/>
        <childnode refid="115774" relation="include">
        </childnode>
        <childnode refid="115775" relation="include">
        </childnode>
        <childnode refid="115776" relation="include">
        </childnode>
      </node>
      <node id="115669">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="115636">
        <label>functional</label>
      </node>
      <node id="115736">
        <label>boost/version.hpp</label>
      </node>
      <node id="115668">
        <label>limits</label>
      </node>
      <node id="115810">
        <label>xAODEgamma/EgammaxAODHelpers.h</label>
        <link refid="d0/d71/EgammaxAODHelpers_8h_source"/>
        <childnode refid="115811" relation="include">
        </childnode>
        <childnode refid="115812" relation="include">
        </childnode>
        <childnode refid="115781" relation="include">
        </childnode>
        <childnode refid="115813" relation="include">
        </childnode>
        <childnode refid="115808" relation="include">
        </childnode>
        <childnode refid="115815" relation="include">
        </childnode>
        <childnode refid="115661" relation="include">
        </childnode>
        <childnode refid="115643" relation="include">
        </childnode>
        <childnode refid="115640" relation="include">
        </childnode>
      </node>
      <node id="115673">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="115820">
        <label>xAODTruth/TruthVertexFwd.h</label>
        <link refid="d5/d1a/TruthVertexFwd_8h_source"/>
      </node>
      <node id="115697">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="115833">
        <label>GaudiKernel/IAlgTool.h</label>
      </node>
      <node id="115666">
        <label>iterator</label>
      </node>
      <node id="115724">
        <label>xAODCaloEvent/versions/CaloClusterBadChannelData_v1.h</label>
        <link refid="d5/d3a/CaloClusterBadChannelData__v1_8h_source"/>
        <childnode refid="115721" relation="include">
        </childnode>
        <childnode refid="115640" relation="include">
        </childnode>
      </node>
      <node id="115685">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="115637" relation="include">
        </childnode>
        <childnode refid="115686" relation="include">
        </childnode>
      </node>
      <node id="115726">
        <label>CaloEvent/CaloRecoStatus.h</label>
      </node>
      <node id="115644">
        <label>cstdint</label>
      </node>
      <node id="115777">
        <label>CxxUtils/final.h</label>
        <link refid="da/d9b/final_8h"/>
      </node>
      <node id="115760">
        <label>SGTools/ClassName.h</label>
      </node>
      <node id="115821">
        <label>xAODTruth/versions/TruthParticleContainer_v1.h</label>
        <link refid="dd/d30/TruthParticleContainer__v1_8h_source"/>
        <childnode refid="115730" relation="include">
        </childnode>
        <childnode refid="115769" relation="include">
        </childnode>
        <childnode refid="115818" relation="include">
        </childnode>
        <childnode refid="115822" relation="include">
        </childnode>
      </node>
      <node id="115766">
        <label>AthContainers/DataVector.icc</label>
        <link refid="da/de6/DataVector_8icc"/>
        <childnode refid="115767" relation="include">
        </childnode>
        <childnode refid="115734" relation="include">
        </childnode>
        <childnode refid="115668" relation="include">
        </childnode>
        <childnode refid="115636" relation="include">
        </childnode>
        <childnode refid="115768" relation="include">
        </childnode>
      </node>
      <node id="115709">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="115660" relation="include">
        </childnode>
        <childnode refid="115710" relation="include">
        </childnode>
        <childnode refid="115711" relation="include">
        </childnode>
        <childnode refid="115678" relation="include">
        </childnode>
        <childnode refid="115637" relation="include">
        </childnode>
      </node>
      <node id="115682">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="115640" relation="include">
        </childnode>
        <childnode refid="115667" relation="include">
        </childnode>
      </node>
      <node id="115649">
        <label>stdint.h</label>
      </node>
      <node id="115746">
        <label>AthContainers/tools/DVLCast.h</label>
        <link refid="df/d5c/DVLCast_8h"/>
        <childnode refid="115668" relation="include">
        </childnode>
        <childnode refid="115747" relation="include">
        </childnode>
        <childnode refid="115678" relation="include">
        </childnode>
        <childnode refid="115667" relation="include">
        </childnode>
        <childnode refid="115661" relation="include">
        </childnode>
      </node>
      <node id="115732">
        <label>AthContainers/IndexTrackingPolicy.h</label>
        <link refid="d0/da5/IndexTrackingPolicy_8h"/>
      </node>
      <node id="115679">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="115661" relation="include">
        </childnode>
        <childnode refid="115678" relation="include">
        </childnode>
      </node>
      <node id="115796">
        <label>Eigen/Geometry</label>
      </node>
      <node id="115652">
        <label>RVersion.h</label>
      </node>
      <node id="115811">
        <label>xAODEgamma/EgammaFwd.h</label>
        <link refid="dc/d0f/EgammaFwd_8h_source"/>
      </node>
      <node id="115662">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="115663" relation="include">
        </childnode>
        <childnode refid="115670" relation="include">
        </childnode>
        <childnode refid="115636" relation="include">
        </childnode>
      </node>
      <node id="115836">
        <label>AthenaBaseComps/AthMsgStreamMacros.h</label>
      </node>
      <node id="115729">
        <label>xAODCaloEvent/versions/CaloClusterContainer_v1.h</label>
        <link refid="d8/dda/CaloClusterContainer__v1_8h_source"/>
        <childnode refid="115730" relation="include">
        </childnode>
        <childnode refid="115769" relation="include">
        </childnode>
        <childnode refid="115719" relation="include">
        </childnode>
      </node>
      <node id="115642">
        <label>cmath</label>
      </node>
      <node id="115713">
        <label>cassert</label>
      </node>
      <node id="115737">
        <label>boost/mpl/if.hpp</label>
      </node>
      <node id="115756">
        <label>boost/static_assert.hpp</label>
      </node>
      <node id="115711">
        <label>stdexcept</label>
      </node>
      <node id="115829">
        <label>AsgTools/MsgLevel.h</label>
        <link refid="de/d80/MsgLevel_8h"/>
        <childnode refid="115637" relation="include">
        </childnode>
        <childnode refid="115826" relation="include">
        </childnode>
        <childnode refid="115830" relation="include">
        </childnode>
      </node>
      <node id="115700">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="115645">
        <label>numeric</label>
      </node>
      <node id="115775">
        <label>Eigen/Core</label>
      </node>
      <node id="115743">
        <label>boost/type_traits/is_pointer.hpp</label>
      </node>
      <node id="115783">
        <label>xAODTracking/VertexContainerFwd.h</label>
        <link refid="d0/dc4/VertexContainerFwd_8h_source"/>
        <childnode refid="115730" relation="include">
        </childnode>
        <childnode refid="115784" relation="include">
        </childnode>
      </node>
      <node id="115789">
        <label>xAODTracking/TrackParticleContainerFwd.h</label>
        <link refid="de/dea/TrackParticleContainerFwd_8h_source"/>
        <childnode refid="115730" relation="include">
        </childnode>
        <childnode refid="115769" relation="include">
        </childnode>
        <childnode refid="115790" relation="include">
        </childnode>
      </node>
      <node id="115751">
        <label>boost/iterator/iterator_adaptor.hpp</label>
      </node>
      <node id="115656">
        <label>TLorentzVector.h</label>
      </node>
      <node id="115809">
        <label>xAODEgamma/PhotonFwd.h</label>
        <link refid="dd/d2c/PhotonFwd_8h_source"/>
      </node>
      <node id="115818">
        <label>xAODTruth/versions/TruthParticle_v1.h</label>
        <link refid="d3/d3b/TruthParticle__v1_8h_source"/>
        <childnode refid="115648" relation="include">
        </childnode>
        <childnode refid="115655" relation="include">
        </childnode>
        <childnode refid="115714" relation="include">
        </childnode>
        <childnode refid="115819" relation="include">
        </childnode>
      </node>
      <node id="115826">
        <label>AsgTools/AsgToolsConf.h</label>
        <link refid="df/db7/AsgToolsConf_8h_source"/>
      </node>
      <node id="115721">
        <label>CaloGeoHelpers/CaloSampling.h</label>
        <link refid="d7/d85/CaloSampling_8h_source"/>
        <childnode refid="115637" relation="include">
        </childnode>
        <childnode refid="115722" relation="include">
        </childnode>
      </node>
      <node id="115637">
        <label>string</label>
      </node>
      <node id="115703">
        <label>AthContainers/AuxVectorData.h</label>
        <link refid="d9/df2/AuxVectorData_8h"/>
        <childnode refid="115660" relation="include">
        </childnode>
        <childnode refid="115659" relation="include">
        </childnode>
        <childnode refid="115685" relation="include">
        </childnode>
        <childnode refid="115682" relation="include">
        </childnode>
        <childnode refid="115674" relation="include">
        </childnode>
        <childnode refid="115704" relation="include">
        </childnode>
        <childnode refid="115705" relation="include">
        </childnode>
        <childnode refid="115688" relation="include">
        </childnode>
        <childnode refid="115640" relation="include">
        </childnode>
        <childnode refid="115665" relation="include">
        </childnode>
        <childnode refid="115667" relation="include">
        </childnode>
        <childnode refid="115706" relation="include">
        </childnode>
        <childnode refid="115707" relation="include">
        </childnode>
        <childnode refid="115695" relation="include">
        </childnode>
        <childnode refid="115708" relation="include">
        </childnode>
      </node>
      <node id="115677">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="115661" relation="include">
        </childnode>
        <childnode refid="115678" relation="include">
        </childnode>
      </node>
      <node id="115782">
        <label>versions/TrackParticle_v1.h</label>
        <link refid="d2/d7f/TrackParticle__v1_8h_source"/>
        <childnode refid="115720" relation="include">
        </childnode>
        <childnode refid="115649" relation="include">
        </childnode>
        <childnode refid="115648" relation="include">
        </childnode>
        <childnode refid="115730" relation="include">
        </childnode>
        <childnode refid="115655" relation="include">
        </childnode>
        <childnode refid="115780" relation="include">
        </childnode>
        <childnode refid="115783" relation="include">
        </childnode>
        <childnode refid="115785" relation="include">
        </childnode>
        <childnode refid="115786" relation="include">
        </childnode>
      </node>
      <node id="115706">
        <label>AthContainers/tools/likely.h</label>
        <link refid="d6/dd6/likely_8h"/>
      </node>
      <node id="115778">
        <label>xAODEgamma/Electron.h</label>
        <link refid="dc/db4/Electron_8h_source"/>
        <childnode refid="115779" relation="include">
        </childnode>
      </node>
      <node id="115748">
        <label>AthContainers/tools/DVLIterator.h</label>
        <link refid="d3/dc7/DVLIterator_8h_source"/>
        <childnode refid="115731" relation="include">
        </childnode>
        <childnode refid="115746" relation="include">
        </childnode>
        <childnode refid="115749" relation="include">
        </childnode>
        <childnode refid="115751" relation="include">
        </childnode>
        <childnode refid="115736" relation="include">
        </childnode>
        <childnode refid="115666" relation="include">
        </childnode>
        <childnode refid="115667" relation="include">
        </childnode>
      </node>
      <node id="115762">
        <label>SGTools/DataBucket.h</label>
      </node>
      <node id="115771">
        <label>xAODPrimitives/IsolationType.h</label>
        <link refid="d2/d36/IsolationType_8h_source"/>
      </node>
      <node id="115638">
        <label>map</label>
      </node>
      <node id="115822">
        <label>xAODTruth/TruthParticleContainerFwd.h</label>
        <link refid="dd/d8f/TruthParticleContainerFwd_8h_source"/>
        <childnode refid="115730" relation="include">
        </childnode>
        <childnode refid="115769" relation="include">
        </childnode>
        <childnode refid="115823" relation="include">
        </childnode>
      </node>
      <node id="115763">
        <label>AthContainers/tools/DVLDataBucket.icc</label>
        <link refid="d3/d21/DVLDataBucket_8icc"/>
        <childnode refid="115764" relation="include">
        </childnode>
      </node>
      <node id="115770">
        <label>xAODPrimitives/IsolationCorrection.h</label>
        <link refid="d3/de5/xAODPrimitives_2xAODPrimitives_2IsolationCorrection_8h_source"/>
        <childnode refid="115720" relation="include">
        </childnode>
        <childnode refid="115640" relation="include">
        </childnode>
      </node>
      <node id="115764">
        <label>SGTools/IRegisterTransient.h</label>
      </node>
      <node id="115653">
        <label>RootMetaSelection.h</label>
      </node>
      <node id="115692">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="115797">
        <label>VxVertex/VxTrackAtVertex.h</label>
      </node>
      <node id="115753">
        <label>AthContainers/tools/DVL_algorithms.h</label>
        <link refid="d0/d7a/DVL__algorithms_8h"/>
        <childnode refid="115748" relation="include">
        </childnode>
        <childnode refid="115666" relation="include">
        </childnode>
        <childnode refid="115664" relation="include">
        </childnode>
        <childnode refid="115754" relation="include">
        </childnode>
      </node>
      <node id="115815">
        <label>xAODEgamma/EgammaTruthxAODHelpers.h</label>
        <link refid="d0/d59/EgammaTruthxAODHelpers_8h_source"/>
        <childnode refid="115811" relation="include">
        </childnode>
        <childnode refid="115814" relation="include">
        </childnode>
        <childnode refid="115809" relation="include">
        </childnode>
        <childnode refid="115790" relation="include">
        </childnode>
        <childnode refid="115816" relation="include">
        </childnode>
        <childnode refid="115817" relation="include">
        </childnode>
        <childnode refid="115661" relation="include">
        </childnode>
        <childnode refid="115643" relation="include">
        </childnode>
      </node>
      <node id="115707">
        <label>AthContainers/tools/assume.h</label>
        <link refid="d2/d20/assume_8h"/>
      </node>
      <node id="115837">
        <label>egammaMVACalib/egammaMVALayerDepth.h</label>
        <link refid="db/de6/egammaMVALayerDepth_8h_source"/>
        <childnode refid="115639" relation="include">
        </childnode>
      </node>
      <node id="115689">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="115806">
        <label>xAODTracking/VertexContainer.h</label>
        <link refid="d6/dd8/VertexContainer_8h_source"/>
        <childnode refid="115793" relation="include">
        </childnode>
        <childnode refid="115807" relation="include">
        </childnode>
        <childnode refid="115727" relation="include">
        </childnode>
      </node>
      <node id="115791">
        <label>xAODEgamma/Photon.h</label>
        <link refid="d4/df7/Photon_8h_source"/>
        <childnode refid="115792" relation="include">
        </childnode>
      </node>
      <node id="115749">
        <label>AthContainers/tools/ElementProxy.h</label>
        <link refid="db/d26/ElementProxy_8h"/>
        <childnode refid="115731" relation="include">
        </childnode>
        <childnode refid="115651" relation="include">
        </childnode>
        <childnode refid="115670" relation="include">
        </childnode>
        <childnode refid="115750" relation="include">
        </childnode>
      </node>
      <node id="115830">
        <label>GaudiKernel/IMessageSvc.h</label>
      </node>
      <node id="115658">
        <label>AthContainersInterfaces/IAuxElement.h</label>
        <link refid="dd/d7a/IAuxElement_8h"/>
      </node>
      <node id="115651">
        <label>AthLinks/tools/selection_ns.h</label>
        <link refid="d3/dec/selection__ns_8h"/>
        <childnode refid="115652" relation="include">
        </childnode>
        <childnode refid="115653" relation="include">
        </childnode>
      </node>
      <node id="115705">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="115698">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="115635">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/egammaMVACalib/egammaMVATree.h</label>
        <link refid="egammaMVATree.h"/>
        <childnode refid="115636" relation="include">
        </childnode>
        <childnode refid="115637" relation="include">
        </childnode>
        <childnode refid="115638" relation="include">
        </childnode>
        <childnode refid="115639" relation="include">
        </childnode>
        <childnode refid="115640" relation="include">
        </childnode>
        <childnode refid="115641" relation="include">
        </childnode>
        <childnode refid="115642" relation="include">
        </childnode>
        <childnode refid="115643" relation="include">
        </childnode>
        <childnode refid="115644" relation="include">
        </childnode>
        <childnode refid="115645" relation="include">
        </childnode>
        <childnode refid="115646" relation="include">
        </childnode>
        <childnode refid="115778" relation="include">
        </childnode>
        <childnode refid="115791" relation="include">
        </childnode>
        <childnode refid="115810" relation="include">
        </childnode>
        <childnode refid="115718" relation="include">
        </childnode>
        <childnode refid="115824" relation="include">
        </childnode>
        <childnode refid="115656" relation="include">
        </childnode>
        <childnode refid="115825" relation="include">
        </childnode>
        <childnode refid="115837" relation="include">
        </childnode>
      </node>
      <node id="115790">
        <label>xAODTracking/TrackParticleFwd.h</label>
        <link refid="d1/dc4/TrackParticleFwd_8h_source"/>
      </node>
      <node id="115747">
        <label>limits.h</label>
      </node>
      <node id="115741">
        <label>AthContainers/tools/ClassID.h</label>
        <link refid="de/de2/ClassID_8h"/>
        <childnode refid="115742" relation="include">
        </childnode>
      </node>
      <node id="115807">
        <label>xAODTracking/versions/VertexContainer_v1.h</label>
        <link refid="d2/dda/VertexContainer__v1_8h_source"/>
        <childnode refid="115730" relation="include">
        </childnode>
        <childnode refid="115794" relation="include">
        </childnode>
      </node>
      <node id="115684">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="115685" relation="include">
        </childnode>
        <childnode refid="115668" relation="include">
        </childnode>
        <childnode refid="115649" relation="include">
        </childnode>
        <childnode refid="115687" relation="include">
        </childnode>
      </node>
      <node id="115660">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="115661" relation="include">
        </childnode>
        <childnode refid="115662" relation="include">
        </childnode>
      </node>
      <node id="115650">
        <label>AthLinks/ElementLinkBase.h</label>
        <link refid="d0/d16/ElementLinkBase_8h_source"/>
        <childnode refid="115649" relation="include">
        </childnode>
      </node>
      <node id="115776">
        <label>Eigen/Dense</label>
      </node>
      <node id="115663">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="115664" relation="include">
        </childnode>
        <childnode refid="115665" relation="include">
        </childnode>
        <childnode refid="115666" relation="include">
        </childnode>
        <childnode refid="115661" relation="include">
        </childnode>
        <childnode refid="115667" relation="include">
        </childnode>
        <childnode refid="115642" relation="include">
        </childnode>
        <childnode refid="115668" relation="include">
        </childnode>
        <childnode refid="115637" relation="include">
        </childnode>
        <childnode refid="115669" relation="include">
        </childnode>
      </node>
      <node id="115734">
        <label>AthContainers/tools/ATHCONTAINERS_ASSERT.h</label>
        <link refid="de/d6b/ATHCONTAINERS__ASSERT_8h"/>
        <childnode refid="115713" relation="include">
        </childnode>
      </node>
      <node id="115655">
        <label>xAODBase/IParticle.h</label>
        <link refid="d5/dac/IParticle_8h_source"/>
        <childnode refid="115656" relation="include">
        </childnode>
        <childnode refid="115657" relation="include">
        </childnode>
        <childnode refid="115714" relation="include">
        </childnode>
        <childnode refid="115673" relation="include">
        </childnode>
      </node>
      <node id="115812">
        <label>xAODCaloEvent/CaloClusterFwd.h</label>
        <link refid="d9/d35/CaloClusterFwd_8h_source"/>
      </node>
      <node id="115714">
        <label>ObjectType.h</label>
        <link refid="d8/d04/ObjectType_8h_source"/>
        <childnode refid="115715" relation="include">
        </childnode>
      </node>
      <node id="115719">
        <label>xAODCaloEvent/versions/CaloCluster_v1.h</label>
        <link refid="dc/d4b/CaloCluster__v1_8h_source"/>
        <childnode refid="115649" relation="include">
        </childnode>
        <childnode refid="115720" relation="include">
        </childnode>
        <childnode refid="115655" relation="include">
        </childnode>
        <childnode refid="115721" relation="include">
        </childnode>
        <childnode refid="115723" relation="include">
        </childnode>
        <childnode refid="115648" relation="include">
        </childnode>
        <childnode refid="115725" relation="include">
        </childnode>
        <childnode refid="115726" relation="include">
        </childnode>
      </node>
      <node id="115750">
        <label>AthContainers/tools/ElementProxy.icc</label>
        <link refid="d6/d70/ElementProxy_8icc"/>
        <childnode refid="115746" relation="include">
        </childnode>
        <childnode refid="115734" relation="include">
        </childnode>
      </node>
      <node id="115779">
        <label>xAODEgamma/versions/Electron_v1.h</label>
        <link refid="df/d27/Electron__v1_8h_source"/>
        <childnode refid="115648" relation="include">
        </childnode>
        <childnode refid="115647" relation="include">
        </childnode>
        <childnode refid="115717" relation="include">
        </childnode>
        <childnode refid="115780" relation="include">
        </childnode>
        <childnode refid="115781" relation="include">
        </childnode>
        <childnode refid="115787" relation="include">
        </childnode>
        <childnode refid="115777" relation="include">
        </childnode>
        <childnode refid="115688" relation="include">
        </childnode>
      </node>
      <node id="115678">
        <label>typeinfo</label>
      </node>
      <node id="115780">
        <label>xAODTracking/TrackingPrimitives.h</label>
        <link refid="d2/d4c/TrackingPrimitives_8h_source"/>
        <childnode refid="115773" relation="include">
        </childnode>
      </node>
      <node id="115712">
        <label>AthContainers/AuxElement.icc</label>
        <link refid="d2/d37/AuxElement_8icc"/>
        <childnode refid="115706" relation="include">
        </childnode>
        <childnode refid="115713" relation="include">
        </childnode>
      </node>
      <node id="115718">
        <label>xAODCaloEvent/CaloCluster.h</label>
        <link refid="db/d88/CaloCluster_8h_source"/>
        <childnode refid="115719" relation="include">
        </childnode>
        <childnode refid="115727" relation="include">
        </childnode>
      </node>
      <node id="115730">
        <label>AthContainers/DataVector.h</label>
        <link refid="d7/dd6/DataVector_8h"/>
        <childnode refid="115709" relation="include">
        </childnode>
        <childnode refid="115731" relation="include">
        </childnode>
        <childnode refid="115732" relation="include">
        </childnode>
        <childnode refid="115733" relation="include">
        </childnode>
        <childnode refid="115739" relation="include">
        </childnode>
        <childnode refid="115740" relation="include">
        </childnode>
        <childnode refid="115746" relation="include">
        </childnode>
        <childnode refid="115748" relation="include">
        </childnode>
        <childnode refid="115752" relation="include">
        </childnode>
        <childnode refid="115753" relation="include">
        </childnode>
        <childnode refid="115749" relation="include">
        </childnode>
        <childnode refid="115755" relation="include">
        </childnode>
        <childnode refid="115651" relation="include">
        </childnode>
        <childnode refid="115756" relation="include">
        </childnode>
        <childnode refid="115757" relation="include">
        </childnode>
        <childnode refid="115751" relation="include">
        </childnode>
        <childnode refid="115640" relation="include">
        </childnode>
        <childnode refid="115678" relation="include">
        </childnode>
        <childnode refid="115636" relation="include">
        </childnode>
        <childnode refid="115758" relation="include">
        </childnode>
        <childnode refid="115664" relation="include">
        </childnode>
        <childnode refid="115711" relation="include">
        </childnode>
        <childnode refid="115666" relation="include">
        </childnode>
        <childnode refid="115673" relation="include">
        </childnode>
        <childnode refid="115759" relation="include">
        </childnode>
        <childnode refid="115761" relation="include">
        </childnode>
        <childnode refid="115765" relation="include">
        </childnode>
        <childnode refid="115766" relation="include">
        </childnode>
      </node>
      <node id="115799">
        <label>xAODTracking/NeutralParticle.h</label>
        <link refid="d4/daa/NeutralParticle_8h_source"/>
        <childnode refid="115800" relation="include">
        </childnode>
        <childnode refid="115727" relation="include">
        </childnode>
      </node>
      <node id="115720">
        <label>bitset</label>
      </node>
      <node id="115687">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="115654">
        <label>AthLinks/tools/TypeTools.h</label>
        <link refid="dd/db1/TypeTools_8h_source"/>
      </node>
      <node id="115641">
        <label>tuple</label>
      </node>
      <node id="115704">
        <label>AthenaKernel/ILockable.h</label>
      </node>
      <node id="115835">
        <label>AsgTools/MsgStreamMacros.h</label>
        <link refid="d3/ded/AsgTools_2AsgTools_2MsgStreamMacros_8h_source"/>
        <childnode refid="115826" relation="include">
        </childnode>
        <childnode refid="115829" relation="include">
        </childnode>
        <childnode refid="115836" relation="include">
        </childnode>
      </node>
      <node id="115675">
        <label>AthLinks/DataLinkBase.h</label>
        <link refid="db/da8/DataLinkBase_8h_source"/>
        <childnode refid="115649" relation="include">
        </childnode>
      </node>
      <node id="115794">
        <label>xAODTracking/versions/Vertex_v1.h</label>
        <link refid="d7/dcc/Vertex__v1_8h_source"/>
        <childnode refid="115640" relation="include">
        </childnode>
        <childnode refid="115657" relation="include">
        </childnode>
        <childnode refid="115648" relation="include">
        </childnode>
        <childnode refid="115773" relation="include">
        </childnode>
        <childnode refid="115795" relation="include">
        </childnode>
        <childnode refid="115797" relation="include">
        </childnode>
        <childnode refid="115780" relation="include">
        </childnode>
        <childnode refid="115789" relation="include">
        </childnode>
        <childnode refid="115798" relation="include">
        </childnode>
        <childnode refid="115714" relation="include">
        </childnode>
        <childnode refid="115805" relation="include">
        </childnode>
      </node>
      <node id="115686">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="115691">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="115740">
        <label>AthContainers/tools/DVLInfo.h</label>
        <link refid="d3/d2e/DVLInfo_8h"/>
        <childnode refid="115741" relation="include">
        </childnode>
        <childnode refid="115733" relation="include">
        </childnode>
        <childnode refid="115678" relation="include">
        </childnode>
        <childnode refid="115661" relation="include">
        </childnode>
        <childnode refid="115669" relation="include">
        </childnode>
        <childnode refid="115743" relation="include">
        </childnode>
        <childnode refid="115690" relation="include">
        </childnode>
        <childnode refid="115744" relation="include">
        </childnode>
      </node>
      <node id="115671">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="115774">
        <label>unistd.h</label>
      </node>
      <node id="115759">
        <label>AthContainers/ClassName.h</label>
        <link refid="dd/d6b/AthContainers_2AthContainers_2ClassName_8h_source"/>
        <childnode refid="115760" relation="include">
        </childnode>
      </node>
      <node id="115676">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="115660" relation="include">
        </childnode>
        <childnode refid="115677" relation="include">
        </childnode>
        <childnode refid="115679" relation="include">
        </childnode>
        <childnode refid="115680" relation="include">
        </childnode>
        <childnode refid="115693" relation="include">
        </childnode>
        <childnode refid="115695" relation="include">
        </childnode>
        <childnode refid="115661" relation="include">
        </childnode>
        <childnode refid="115678" relation="include">
        </childnode>
        <childnode refid="115640" relation="include">
        </childnode>
        <childnode refid="115701" relation="include">
        </childnode>
        <childnode refid="115702" relation="include">
        </childnode>
      </node>
      <node id="115640">
        <label>vector</label>
      </node>
      <node id="115769">
        <label>xAODBase/IParticleContainer.h</label>
        <link refid="dd/d2d/IParticleContainer_8h_source"/>
        <childnode refid="115730" relation="include">
        </childnode>
        <childnode refid="115655" relation="include">
        </childnode>
        <childnode refid="115671" relation="include">
        </childnode>
      </node>
      <node id="115767">
        <label>AthContainers/tools/CompareAndPrint.h</label>
        <link refid="d5/da8/CompareAndPrint_8h_source"/>
        <childnode refid="115664" relation="include">
        </childnode>
        <childnode refid="115678" relation="include">
        </childnode>
      </node>
      <node id="115793">
        <label>xAODTracking/Vertex.h</label>
        <link refid="d9/d2d/Vertex_8h_source"/>
        <childnode refid="115794" relation="include">
        </childnode>
      </node>
      <node id="115802">
        <label>xAODTracking/versions/NeutralParticleContainer_v1.h</label>
        <link refid="d6/d5f/NeutralParticleContainer__v1_8h_source"/>
        <childnode refid="115649" relation="include">
        </childnode>
        <childnode refid="115730" relation="include">
        </childnode>
        <childnode refid="115800" relation="include">
        </childnode>
        <childnode refid="115803" relation="include">
        </childnode>
      </node>
      <node id="115792">
        <label>xAODEgamma/versions/Photon_v1.h</label>
        <link refid="d3/d5c/Photon__v1_8h_source"/>
        <childnode refid="115648" relation="include">
        </childnode>
        <childnode refid="115793" relation="include">
        </childnode>
        <childnode refid="115806" relation="include">
        </childnode>
        <childnode refid="115787" relation="include">
        </childnode>
        <childnode refid="115647" relation="include">
        </childnode>
        <childnode refid="115808" relation="include">
        </childnode>
        <childnode refid="115777" relation="include">
        </childnode>
        <childnode refid="115688" relation="include">
        </childnode>
      </node>
      <node id="115768">
        <label>AthContainers/tools/DVLEltBaseInfo.icc</label>
        <link refid="dd/d5e/DVLEltBaseInfo_8icc"/>
      </node>
      <node id="115723">
        <label>xAODCaloEvent/CaloClusterBadChannelData.h</label>
        <link refid="d1/d93/CaloClusterBadChannelData_8h_source"/>
        <childnode refid="115724" relation="include">
        </childnode>
      </node>
      <node id="115665">
        <label>utility</label>
      </node>
      <node id="115765">
        <label>SGTools/DataBucketTraitFwd.h</label>
      </node>
      <node id="115639">
        <label>array</label>
      </node>
      <node id="115688">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="115828">
        <label>sstream</label>
      </node>
      <node id="115647">
        <label>xAODEgamma/versions/Egamma_v1.h</label>
        <link refid="d9/d42/Egamma__v1_8h_source"/>
        <childnode refid="115648" relation="include">
        </childnode>
        <childnode refid="115655" relation="include">
        </childnode>
        <childnode refid="115716" relation="include">
        </childnode>
        <childnode refid="115717" relation="include">
        </childnode>
        <childnode refid="115718" relation="include">
        </childnode>
        <childnode refid="115728" relation="include">
        </childnode>
        <childnode refid="115770" relation="include">
        </childnode>
        <childnode refid="115771" relation="include">
        </childnode>
        <childnode refid="115772" relation="include">
        </childnode>
        <childnode refid="115773" relation="include">
        </childnode>
        <childnode refid="115777" relation="include">
        </childnode>
        <childnode refid="115688" relation="include">
        </childnode>
        <childnode refid="115649" relation="include">
        </childnode>
      </node>
      <node id="115728">
        <label>xAODCaloEvent/CaloClusterContainer.h</label>
        <link refid="da/dc3/CaloClusterContainer_8h_source"/>
        <childnode refid="115718" relation="include">
        </childnode>
        <childnode refid="115729" relation="include">
        </childnode>
        <childnode refid="115727" relation="include">
        </childnode>
      </node>
      <node id="115816">
        <label>xAODTruth/TruthParticleContainer.h</label>
        <link refid="d9/dbc/TruthParticleContainer_8h_source"/>
        <childnode refid="115817" relation="include">
        </childnode>
        <childnode refid="115821" relation="include">
        </childnode>
        <childnode refid="115727" relation="include">
        </childnode>
      </node>
      <node id="115819">
        <label>xAODTruth/TruthVertexContainerFwd.h</label>
        <link refid="da/ddf/TruthVertexContainerFwd_8h_source"/>
        <childnode refid="115730" relation="include">
        </childnode>
        <childnode refid="115820" relation="include">
        </childnode>
      </node>
      <node id="115795">
        <label>GeoPrimitives/GeoPrimitives.h</label>
        <link refid="d7/d87/GeoPrimitives_8h_source"/>
        <childnode refid="115774" relation="include">
        </childnode>
        <childnode refid="115796" relation="include">
        </childnode>
      </node>
      <node id="115784">
        <label>xAODTracking/VertexFwd.h</label>
        <link refid="d9/ddd/VertexFwd_8h_source"/>
      </node>
      <node id="115738">
        <label>AthContainers/AuxVectorBase.icc</label>
        <link refid="d4/d50/AuxVectorBase_8icc"/>
      </node>
      <node id="115696">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="115681">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="115813">
        <label>xAODEgamma/ElectronxAODHelpers.h</label>
        <link refid="df/dec/ElectronxAODHelpers_8h_source"/>
        <childnode refid="115814" relation="include">
        </childnode>
        <childnode refid="115790" relation="include">
        </childnode>
        <childnode refid="115661" relation="include">
        </childnode>
        <childnode refid="115643" relation="include">
        </childnode>
        <childnode refid="115640" relation="include">
        </childnode>
      </node>
      <node id="115695">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="115696" relation="include">
        </childnode>
        <childnode refid="115697" relation="include">
        </childnode>
        <childnode refid="115698" relation="include">
        </childnode>
        <childnode refid="115699" relation="include">
        </childnode>
        <childnode refid="115700" relation="include">
        </childnode>
      </node>
      <node id="115722">
        <label>CaloGeoHelpers/CaloSampling.def</label>
      </node>
      <node id="115715">
        <label>iosfwd</label>
      </node>
      <node id="115667">
        <label>cstdlib</label>
      </node>
      <node id="115781">
        <label>xAODTracking/TrackParticle.h</label>
        <link refid="d2/d15/TrackParticle_8h_source"/>
        <childnode refid="115782" relation="include">
        </childnode>
        <childnode refid="115727" relation="include">
        </childnode>
      </node>
      <node id="115758">
        <label>iostream</label>
      </node>
      <node id="115710">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="115788">
        <label>xAODTracking/versions/TrackParticleContainer_v1.h</label>
        <link refid="d7/d3b/TrackParticleContainer__v1_8h_source"/>
        <childnode refid="115649" relation="include">
        </childnode>
        <childnode refid="115730" relation="include">
        </childnode>
        <childnode refid="115782" relation="include">
        </childnode>
        <childnode refid="115789" relation="include">
        </childnode>
      </node>
      <node id="115659">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="115660" relation="include">
        </childnode>
        <childnode refid="115661" relation="include">
        </childnode>
        <childnode refid="115671" relation="include">
        </childnode>
      </node>
      <node id="115661">
        <label>cstddef</label>
      </node>
      <node id="115834">
        <label>GaudiKernel/MsgStream.h</label>
      </node>
      <node id="115827">
        <label>AsgTools/MsgStream.h</label>
        <link refid="d3/d95/AsgTools_2AsgTools_2MsgStream_8h_source"/>
        <childnode refid="115637" relation="include">
        </childnode>
        <childnode refid="115828" relation="include">
        </childnode>
        <childnode refid="115826" relation="include">
        </childnode>
        <childnode refid="115829" relation="include">
        </childnode>
        <childnode refid="115831" relation="include">
        </childnode>
        <childnode refid="115834" relation="include">
        </childnode>
      </node>
      <node id="115708">
        <label>AthContainers/AuxVectorData.icc</label>
        <link refid="da/de7/AuxVectorData_8icc"/>
        <childnode refid="115676" relation="include">
        </childnode>
        <childnode refid="115672" relation="include">
        </childnode>
        <childnode refid="115659" relation="include">
        </childnode>
        <childnode refid="115706" relation="include">
        </childnode>
        <childnode refid="115707" relation="include">
        </childnode>
      </node>
      <node id="115832">
        <label>AsgTools/AsgToolMacros.h</label>
        <link refid="d1/d68/AsgToolMacros_8h_source"/>
      </node>
      <node id="115805">
        <label>xAODCore/BaseInfo.h</label>
        <link refid="d3/d17/BaseInfo_8h_source"/>
        <childnode refid="115673" relation="include">
        </childnode>
      </node>
      <node id="115717">
        <label>xAODEgamma/EgammaEnums.h</label>
        <link refid="d4/d8f/EgammaEnums_8h_source"/>
      </node>
      <node id="115801">
        <label>TrkNeutralParameters/NeutralParameters.h</label>
      </node>
      <node id="115744">
        <label>AthContainers/tools/DVLInfo.icc</label>
        <link refid="da/d83/DVLInfo_8icc"/>
        <childnode refid="115731" relation="include">
        </childnode>
        <childnode refid="115640" relation="include">
        </childnode>
        <childnode refid="115745" relation="include">
        </childnode>
        <childnode refid="115713" relation="include">
        </childnode>
        <childnode refid="115667" relation="include">
        </childnode>
        <childnode refid="115673" relation="include">
        </childnode>
      </node>
      <node id="115680">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="115677" relation="include">
        </childnode>
        <childnode refid="115681" relation="include">
        </childnode>
        <childnode refid="115682" relation="include">
        </childnode>
        <childnode refid="115683" relation="include">
        </childnode>
        <childnode refid="115688" relation="include">
        </childnode>
        <childnode refid="115678" relation="include">
        </childnode>
        <childnode refid="115640" relation="include">
        </childnode>
        <childnode refid="115664" relation="include">
        </childnode>
        <childnode refid="115649" relation="include">
        </childnode>
        <childnode refid="115690" relation="include">
        </childnode>
        <childnode refid="115691" relation="include">
        </childnode>
        <childnode refid="115692" relation="include">
        </childnode>
      </node>
      <node id="115785">
        <label>TrkParameters/TrackParameters.h</label>
      </node>
      <node id="115646">
        <label>xAODEgamma/Egamma.h</label>
        <link refid="d6/d1c/Egamma_8h_source"/>
        <childnode refid="115647" relation="include">
        </childnode>
      </node>
      <node id="115817">
        <label>xAODTruth/TruthParticle.h</label>
        <link refid="dd/d44/TruthParticle_8h_source"/>
        <childnode refid="115818" relation="include">
        </childnode>
      </node>
      <node id="115716">
        <label>xAODEgamma/EgammaDefs.h</label>
        <link refid="dd/d34/EgammaDefs_8h_source"/>
        <childnode refid="115649" relation="include">
        </childnode>
      </node>
      <node id="115800">
        <label>versions/NeutralParticle_v1.h</label>
        <link refid="da/d85/NeutralParticle__v1_8h_source"/>
        <childnode refid="115648" relation="include">
        </childnode>
        <childnode refid="115730" relation="include">
        </childnode>
        <childnode refid="115655" relation="include">
        </childnode>
        <childnode refid="115780" relation="include">
        </childnode>
        <childnode refid="115783" relation="include">
        </childnode>
        <childnode refid="115720" relation="include">
        </childnode>
        <childnode refid="115649" relation="include">
        </childnode>
        <childnode refid="115801" relation="include">
        </childnode>
      </node>
      <node id="115825">
        <label>AsgTools/AsgMessaging.h</label>
        <link refid="d3/d61/AsgMessaging_8h_source"/>
        <childnode refid="115637" relation="include">
        </childnode>
        <childnode refid="115826" relation="include">
        </childnode>
        <childnode refid="115827" relation="include">
        </childnode>
        <childnode refid="115835" relation="include">
        </childnode>
      </node>
      <node id="115804">
        <label>xAODTracking/NeutralParticleFwd.h</label>
        <link refid="d4/d90/NeutralParticleFwd_8h_source"/>
      </node>
      <node id="115814">
        <label>xAODEgamma/ElectronFwd.h</label>
        <link refid="db/d18/ElectronFwd_8h_source"/>
      </node>
      <node id="115808">
        <label>xAODEgamma/PhotonxAODHelpers.h</label>
        <link refid="d5/d20/PhotonxAODHelpers_8h_source"/>
        <childnode refid="115809" relation="include">
        </childnode>
        <childnode refid="115784" relation="include">
        </childnode>
        <childnode refid="115790" relation="include">
        </childnode>
        <childnode refid="115717" relation="include">
        </childnode>
        <childnode refid="115795" relation="include">
        </childnode>
        <childnode refid="115661" relation="include">
        </childnode>
        <childnode refid="115643" relation="include">
        </childnode>
        <childnode refid="115640" relation="include">
        </childnode>
      </node>
      <node id="115690">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="115824">
        <label>TTree.h</label>
      </node>
      <node id="115798">
        <label>xAODTracking/NeutralParticleContainer.h</label>
        <link refid="da/d7f/NeutralParticleContainer_8h_source"/>
        <childnode refid="115799" relation="include">
        </childnode>
        <childnode refid="115802" relation="include">
        </childnode>
        <childnode refid="115727" relation="include">
        </childnode>
      </node>
      <node id="115733">
        <label>AthContainers/AuxVectorBase.h</label>
        <link refid="d7/d18/AuxVectorBase_8h"/>
        <childnode refid="115703" relation="include">
        </childnode>
        <childnode refid="115731" relation="include">
        </childnode>
        <childnode refid="115732" relation="include">
        </childnode>
        <childnode refid="115657" relation="include">
        </childnode>
        <childnode refid="115676" relation="include">
        </childnode>
        <childnode refid="115709" relation="include">
        </childnode>
        <childnode refid="115734" relation="include">
        </childnode>
        <childnode refid="115672" relation="include">
        </childnode>
        <childnode refid="115735" relation="include">
        </childnode>
        <childnode refid="115640" relation="include">
        </childnode>
        <childnode refid="115738" relation="include">
        </childnode>
      </node>
      <node id="115772">
        <label>xAODPrimitives/IsolationFlavour.h</label>
        <link refid="da/d23/IsolationFlavour_8h_source"/>
      </node>
      <node id="115643">
        <label>set</label>
      </node>
      <node id="115727">
        <label>xAODCore/CLASS_DEF.h</label>
        <link refid="d6/d20/xAODCore_2xAODCore_2CLASS__DEF_8h"/>
        <childnode refid="115671" relation="include">
        </childnode>
      </node>
      <node id="115694">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="115683">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="115681" relation="include">
        </childnode>
        <childnode refid="115684" relation="include">
        </childnode>
        <childnode refid="115688" relation="include">
        </childnode>
        <childnode refid="115640" relation="include">
        </childnode>
        <childnode refid="115689" relation="include">
        </childnode>
      </node>
      <node id="115664">
        <label>algorithm</label>
      </node>
      <node id="115725">
        <label>CaloEvent/CaloClusterCellLinkContainer.h</label>
      </node>
      <node id="115755">
        <label>AthContainers/tools/IsMostDerivedFlag.h</label>
        <link refid="d5/dfa/IsMostDerivedFlag_8h"/>
      </node>
      <node id="115786">
        <label>TrkTrack/TrackCollection.h</label>
      </node>
      <node id="115657">
        <label>AthContainers/AuxElement.h</label>
        <link refid="d1/d6f/AuxElement_8h"/>
        <childnode refid="115658" relation="include">
        </childnode>
        <childnode refid="115659" relation="include">
        </childnode>
        <childnode refid="115672" relation="include">
        </childnode>
        <childnode refid="115674" relation="include">
        </childnode>
        <childnode refid="115676" relation="include">
        </childnode>
        <childnode refid="115703" relation="include">
        </childnode>
        <childnode refid="115682" relation="include">
        </childnode>
        <childnode refid="115709" relation="include">
        </childnode>
        <childnode refid="115706" relation="include">
        </childnode>
        <childnode refid="115661" relation="include">
        </childnode>
        <childnode refid="115712" relation="include">
        </childnode>
      </node>
      <node id="115674">
        <label>AthLinks/DataLink.h</label>
        <link refid="da/de8/DataLink_8h_source"/>
        <childnode refid="115649" relation="include">
        </childnode>
        <childnode refid="115637" relation="include">
        </childnode>
        <childnode refid="115675" relation="include">
        </childnode>
        <childnode refid="115651" relation="include">
        </childnode>
      </node>
      <node id="115752">
        <label>AthContainers/tools/DVL_iter_swap.h</label>
        <link refid="d6/ddb/DVL__iter__swap_8h"/>
        <childnode refid="115748" relation="include">
        </childnode>
        <childnode refid="115734" relation="include">
        </childnode>
        <childnode refid="115666" relation="include">
        </childnode>
      </node>
      <node id="115731">
        <label>AthContainers/OwnershipPolicy.h</label>
        <link refid="d3/da4/OwnershipPolicy_8h_source"/>
      </node>
      <node id="115648">
        <label>AthLinks/ElementLink.h</label>
        <link refid="dc/d24/ElementLink_8h_source"/>
        <childnode refid="115649" relation="include">
        </childnode>
        <childnode refid="115637" relation="include">
        </childnode>
        <childnode refid="115650" relation="include">
        </childnode>
        <childnode refid="115651" relation="include">
        </childnode>
        <childnode refid="115654" relation="include">
        </childnode>
      </node>
      <node id="115787">
        <label>xAODTracking/TrackParticleContainer.h</label>
        <link refid="da/d31/TrackParticleContainer_8h_source"/>
        <childnode refid="115781" relation="include">
        </childnode>
        <childnode refid="115788" relation="include">
        </childnode>
        <childnode refid="115727" relation="include">
        </childnode>
      </node>
      <node id="115742">
        <label>GaudiKernel/ClassID.h</label>
      </node>
      <node id="115757">
        <label>boost/type_traits.hpp</label>
      </node>
      <node id="115670">
        <label>memory</label>
      </node>
      <node id="115803">
        <label>xAODTracking/NeutralParticleContainerFwd.h</label>
        <link refid="d2/db4/NeutralParticleContainerFwd_8h_source"/>
        <childnode refid="115730" relation="include">
        </childnode>
        <childnode refid="115769" relation="include">
        </childnode>
        <childnode refid="115804" relation="include">
        </childnode>
      </node>
      <node id="115693">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="115679" relation="include">
        </childnode>
        <childnode refid="115680" relation="include">
        </childnode>
        <childnode refid="115694" relation="include">
        </childnode>
      </node>
      <node id="115823">
        <label>xAODTruth/TruthParticleFwd.h</label>
        <link refid="de/d03/TruthParticleFwd_8h_source"/>
      </node>
      <node id="115735">
        <label>AthContainersInterfaces/AuxStore_traits.h</label>
        <link refid="dd/d70/AuxStore__traits_8h"/>
        <childnode refid="115658" relation="include">
        </childnode>
        <childnode refid="115672" relation="include">
        </childnode>
        <childnode refid="115659" relation="include">
        </childnode>
        <childnode refid="115690" relation="include">
        </childnode>
        <childnode refid="115736" relation="include">
        </childnode>
        <childnode refid="115737" relation="include">
        </childnode>
        <childnode refid="115637" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="d5/dbb/classegammaMVATreeEgamma" prot="public">egammaMVATreeEgamma</innerclass>
    <innerclass refid="d2/d00/classegammaMVATreePhoton" prot="public">egammaMVATreePhoton</innerclass>
    <innerclass refid="d9/d4d/classegammaMVATreeElectron" prot="public">egammaMVATreeElectron</innerclass>
    <innerclass refid="dd/d94/structegammaMVATreeHelpers_1_1ConversionHelper" prot="public">egammaMVATreeHelpers::ConversionHelper</innerclass>
    <innernamespace refid="dd/d39/namespacedetail">detail</innernamespace>
    <innernamespace refid="d4/d0f/namespaceegammaMVATreeHelpers">egammaMVATreeHelpers</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>EGAMMAMVACALIB_EGAMMAMVATREE</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>EGAMMAMVACALIB_EGAMMAMVATREE</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tuple&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;numeric&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODEgamma/Egamma.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODEgamma/Electron.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODEgamma/Photon.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODEgamma/EgammaxAODHelpers.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODCaloEvent/CaloCluster.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TTree.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TLorentzVector.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AsgTools/AsgMessaging.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;egammaMVACalib/egammaMVALayerDepth.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor">#ifndef<sp/>__CINT__</highlight></codeline>
<codeline lineno="51" refid="dd/d39/namespacedetail" refkind="compound"><highlight class="preprocessor"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>best<sp/>solution<sp/>here<sp/>should<sp/>be<sp/>to<sp/>don&apos;t<sp/>implement<sp/>first<sp/>template<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>raise<sp/>compilation<sp/>error.<sp/>But<sp/>maybe<sp/>there<sp/>are<sp/>problems<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>linking<sp/>dictionaries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>ROOT_type_name()<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>static_assert((sizeof(T)<sp/>==<sp/>0),<sp/>&quot;type<sp/>is<sp/>not<sp/>int/float/bool&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>ROOT_type_name&lt;int&gt;()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;I&quot;</highlight><highlight class="normal">;<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>ROOT_type_name&lt;float&gt;()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;F&quot;</highlight><highlight class="normal">;<sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>ROOT_type_name&lt;bool&gt;()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;O&quot;</highlight><highlight class="normal">;<sp/>}<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="67" refid="d5/dbb/classegammaMVATreeEgamma" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d5/dbb/classegammaMVATreeEgamma" kindref="compound">egammaMVATreeEgamma</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>TTree,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>asg::<ref refid="d1/d97/classasg_1_1AsgMessaging_1aa6e565de0931b6458b932cbb6a8ec55f" kindref="member" tooltip="Constructor with a name.">AsgMessaging</ref></highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>egammaMVATreeEgamma()<sp/>:<sp/>TTree(),<sp/>asg::AsgMessaging(&quot;egammaMVATreeEgamma&quot;)<sp/>{<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><ref refid="d5/dbb/classegammaMVATreeEgamma" kindref="compound">egammaMVATreeEgamma</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>prefix,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;std::string&gt;&amp;<sp/>variables,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_layer_corrected=</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>using<sp/>pointer<sp/>version,<sp/>so<sp/>that<sp/>trigger<sp/>can<sp/>use<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>interface<sp/>with<sp/>egamma<sp/>=<sp/>nullptr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>move<sp/>to<sp/>const<sp/>reference,<sp/>to<sp/>do<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>1.<sp/>MVA<sp/>must<sp/>know<sp/>in<sp/>advance<sp/>the<sp/>input<sp/>variables<sp/>(in<sp/>the<sp/>MVA<sp/>weights)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>2.<sp/>remove<sp/>particleType<sp/>(Rconv<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>Rconv<sp/>&lt;<sp/>800)<sp/>from<sp/>TMVACalib:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>particle<sp/>type<sp/>should<sp/>be<sp/>written<sp/>in<sp/>the<sp/>MVA<sp/>weights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/dbb/classegammaMVATreeEgamma_1a0d119f0d86d948b8b9c9ba5e9d0e6753" kindref="member">update</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d2b/classxAOD_1_1Egamma" kindref="compound" tooltip="Class describing an e/gamma.">xAOD::Egamma</ref>*<sp/>egamma);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/dbb/classegammaMVATreeEgamma_1a0d119f0d86d948b8b9c9ba5e9d0e6753" kindref="member">update</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d2b/classxAOD_1_1Egamma" kindref="compound" tooltip="Class describing an e/gamma.">xAOD::Egamma</ref>*<sp/>egamma,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d91/classxAOD_1_1CaloCluster__v1" kindref="compound">xAOD::CaloCluster</ref>*<sp/>cluster);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_variables(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;std::string&gt;&amp;<sp/>variables);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>std::string<sp/>m_prefix;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_use_layer_corrected<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/def/classT" kindref="compound">T</ref>*<sp/>get_ptr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="93"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert((</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d1/def/classT" kindref="compound">T</ref>)<sp/>==<sp/>0),<sp/></highlight><highlight class="stringliteral">&quot;Type<sp/>must<sp/>be<sp/>int/float&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MAPSTRINGFUNCTION,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CONTAINER&gt;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>search_var_and_add(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>var_name,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MAPSTRINGFUNCTION&amp;<sp/>map_string_function,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONTAINER&amp;<sp/>container)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>WARNING:<sp/>pay<sp/>attention<sp/>to<sp/>iterator/pointer<sp/>invalidation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it_function<sp/>=<sp/>map_string_function.find(var_name);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it_function<sp/>!=<sp/>map_string_function.end())<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>container.emplace_back(var_name,<sp/>it_function-&gt;second,<sp/><ref refid="d1/def/classT" kindref="compound">T</ref>());</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MAPSTRINGFUNCTION,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CONTAINER&gt;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>create_structure(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;std::string&gt;<sp/>vars,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MAPSTRINGFUNCTION&amp;<sp/>map_string_function,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONTAINER&amp;<sp/>container)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>WARNING:<sp/>pay<sp/>attention<sp/>to<sp/>iterator/pointer<sp/>invalidation:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>populate<sp/>container,<sp/>then<sp/>access<sp/>to<sp/>pointers.<sp/>Do<sp/>not<sp/>mix!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>var_name<sp/>:<sp/>vars)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>search_var_and_add&lt;float&gt;(var_name,<sp/>map_string_function,<sp/>container);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>it:<sp/>container)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;creating<sp/>branch<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::get&lt;0&gt;(it)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>at<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>&amp;std::get&lt;2&gt;(it));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>root_type_name<sp/>=<sp/>detail::ROOT_type_name&lt;T&gt;();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(not<sp/>root_type_name.empty())<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Branch((std::get&lt;0&gt;(it)).c_str(),<sp/>&amp;std::get&lt;2&gt;(it),<sp/>(std::get&lt;0&gt;(it)<sp/>+<sp/>&quot;/&quot;<sp/>+<sp/>root_type_name).c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//else<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>ATH_MSG_WARNING(&quot;type<sp/>of<sp/>&quot;<sp/>&lt;&lt;<sp/>std::get&lt;0&gt;(it)<sp/>&lt;&lt;<sp/>&quot;<sp/>is<sp/>not<sp/>int/float/bool&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Branch((std::get&lt;0&gt;(it)).c_str(),<sp/>&amp;std::get&lt;2&gt;(it));</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::tuple&lt;std::string,<sp/>std::function&lt;float(const<sp/>xAOD::CaloCluster&amp;)&gt;,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;<sp/>FloatElement;<sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>std::vector&lt;FloatElement&gt;<sp/>m_functions_float_from_calo_cluster;<sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::tuple&lt;std::string,<sp/>std::function&lt;float(const<sp/>xAOD::Egamma&amp;)&gt;,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;<sp/>FloatElementParticle;<sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>std::vector&lt;FloatElementParticle&gt;<sp/>m_functions_float_from_particle;<sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/def/classT" kindref="compound">T</ref>&amp;<sp/>get_ref(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>var_name)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="140"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/def/classT" kindref="compound">T</ref>*<sp/>ptr<sp/>=<sp/>get_ptr&lt;T&gt;(var_name);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ptr)<sp/>{<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;var<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>var_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>not<sp/>present&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*ptr;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//#ifdef<sp/>ROOTCORE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//ClassDef(egammaMVATreeEgamma,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal">};</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>egammaMVATreeEgamma::get_ptr&lt;float&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>egammaMVATreeEgamma::get_ptr&lt;int&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="d4/d0f/namespaceegammaMVATreeHelpers" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">egammaMVATreeHelpers<sp/>{<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="dd/d94/structegammaMVATreeHelpers_1_1ConversionHelper" kindref="compound">ConversionHelper</ref>;<sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="d2/d00/classegammaMVATreePhoton" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d2/d00/classegammaMVATreePhoton" kindref="compound">egammaMVATreePhoton</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="d5/dbb/classegammaMVATreeEgamma" kindref="compound">egammaMVATreeEgamma</ref></highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><ref refid="d2/d00/classegammaMVATreePhoton" kindref="compound">egammaMVATreePhoton</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;std::string&gt;&amp;<sp/>variables,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_layer_corrected=</highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>force_conversion_to_zero_when_null_photon=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d42/classxAOD_1_1Photon" kindref="compound" tooltip="Class describing an photon.">xAOD::Photon</ref>*<sp/>photon);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d42/classxAOD_1_1Photon" kindref="compound" tooltip="Class describing an photon.">xAOD::Photon</ref>*<sp/>photon,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d91/classxAOD_1_1CaloCluster__v1" kindref="compound">xAOD::CaloCluster</ref>*<sp/>cluster);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_force_conversion_to_zero_when_null_photon;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/def/classT" kindref="compound">T</ref>*<sp/>get_ptr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>var_name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>egammaMVATreeEgamma::get_ptr&lt;T&gt;(var_name);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_variables(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;std::string&gt;&amp;<sp/>variables);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::tuple&lt;std::string,<sp/>std::function&lt;float(const<sp/>xAOD::Photon&amp;)&gt;,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;<sp/>FloatElement;<sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::tuple&lt;std::string,<sp/>std::function&lt;int(const<sp/>xAOD::Photon&amp;)&gt;,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>IntElement;<sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::tuple&lt;std::string,<sp/>std::function&lt;float(const<sp/>egammaMVATreeHelpers::ConversionHelper&amp;)&gt;,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;<sp/>FloatElementConv;<sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::tuple&lt;std::string,<sp/>std::function&lt;int(const<sp/>egammaMVATreeHelpers::ConversionHelper&amp;)&gt;,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>IntElementConv;<sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>std::vector&lt;FloatElement&gt;<sp/>m_functions_float_from_photon;<sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>std::vector&lt;IntElement&gt;<sp/>m_functions_int_from_photon;<sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>std::vector&lt;FloatElementConv&gt;<sp/>m_functions_float_from_ConversionHelper;<sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>std::vector&lt;IntElementConv&gt;<sp/>m_functions_int_from_ConversionHelper;<sp/></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/def/classT" kindref="compound">T</ref>&amp;<sp/>get_ref(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>var_name)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="181"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/def/classT" kindref="compound">T</ref>*<sp/>ptr<sp/>=<sp/>get_ptr&lt;T&gt;(var_name);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ptr)<sp/>{<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;var<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>var_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>not<sp/>present&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*ptr;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">//#ifdef<sp/>ROOTCORE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ClassDef(egammaMVATreePhoton,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">//#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal">};</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>egammaMVATreePhoton::get_ptr&lt;float&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>egammaMVATreePhoton::get_ptr&lt;int&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="d9/d4d/classegammaMVATreeElectron" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d9/d4d/classegammaMVATreeElectron" kindref="compound">egammaMVATreeElectron</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="d5/dbb/classegammaMVATreeEgamma" kindref="compound">egammaMVATreeEgamma</ref></highlight></codeline>
<codeline lineno="195"><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><ref refid="d9/d4d/classegammaMVATreeElectron" kindref="compound">egammaMVATreeElectron</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;std::string&gt;&amp;<sp/>variables,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_layer_corrected=</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/da6/classxAOD_1_1Electron" kindref="compound" tooltip="Class describing an electron.">xAOD::Electron</ref>*<sp/>electron);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/da6/classxAOD_1_1Electron" kindref="compound" tooltip="Class describing an electron.">xAOD::Electron</ref>*<sp/>electron,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d91/classxAOD_1_1CaloCluster__v1" kindref="compound">xAOD::CaloCluster</ref>*<sp/>cluster);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/def/classT" kindref="compound">T</ref>*<sp/>get_ptr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>var_name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>egammaMVATreeEgamma::get_ptr&lt;T&gt;(var_name);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_variables(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;std::string&gt;&amp;<sp/>variables);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::tuple&lt;std::string,<sp/>std::function&lt;float(const<sp/>xAOD::Electron&amp;)&gt;,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;<sp/>FloatElement;<sp/></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::tuple&lt;std::string,<sp/>std::function&lt;int(const<sp/>xAOD::Electron&amp;)&gt;,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>IntElement;<sp/></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>std::vector&lt;FloatElement&gt;<sp/>m_functions_float_from_electron;<sp/></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>std::vector&lt;IntElement&gt;<sp/>m_functions_int_from_electron;<sp/></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/def/classT" kindref="compound">T</ref>&amp;<sp/>get_ref(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>var_name)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="213"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/def/classT" kindref="compound">T</ref>*<sp/>ptr<sp/>=<sp/>get_ptr&lt;T&gt;(var_name);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ptr)<sp/>{<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;var<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>var_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>not<sp/>present&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*ptr;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment">//#ifdef<sp/>ROOTCORE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//ClassDef(egammaMVATreeElectron,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="comment">//#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal">};</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>egammaMVATreePhoton::get_ptr&lt;float&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>egammaMVATreePhoton::get_ptr&lt;int&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">egammaMVATreeHelpers</highlight></codeline>
<codeline lineno="228"><highlight class="normal">{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>inline<sp/>functions<sp/>to<sp/>avoid<sp/>duplicates<sp/>problem<sp/>during<sp/>linking<sp/>(and<sp/>performance)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cluster<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>REMEMBER<sp/>to<sp/>add<sp/>the<sp/>functions<sp/>using<sp/>corrected<sp/>layer<sp/>energies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>compute_cl_eta(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d91/classxAOD_1_1CaloCluster__v1" kindref="compound">xAOD::CaloCluster</ref>&amp;<sp/>cluster)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cluster.<ref refid="dd/d91/classxAOD_1_1CaloCluster__v1_1a1d8549783e3ea14d493d843256e4a925" kindref="member" tooltip="The pseudorapidity () of the particle.">eta</ref>();<sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>compute_cl_phi(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d91/classxAOD_1_1CaloCluster__v1" kindref="compound">xAOD::CaloCluster</ref>&amp;<sp/>cluster)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cluster.<ref refid="dd/d91/classxAOD_1_1CaloCluster__v1_1aae8d85d09cb4805e5b9219e03e77da0e" kindref="member" tooltip="The azimuthal angle () of the particle.">phi</ref>();<sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>compute_cl_e(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d91/classxAOD_1_1CaloCluster__v1" kindref="compound">xAOD::CaloCluster</ref>&amp;<sp/>cluster)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cluster.<ref refid="dd/d91/classxAOD_1_1CaloCluster__v1_1a48cb5e55ecfd3a2a77e1ba2afe4ab5d3" kindref="member" tooltip="The total energy of the particle.">e</ref>();<sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>compute_cl_etaCalo(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d91/classxAOD_1_1CaloCluster__v1" kindref="compound">xAOD::CaloCluster</ref>&amp;<sp/>cluster)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<sp/>(cluster.<ref refid="dd/d91/classxAOD_1_1CaloCluster__v1_1aa5a145a111302a485124029ceedd0be6" kindref="member" tooltip="Retrieve individual moment.">retrieveMoment</ref>(<ref refid="dd/d91/classxAOD_1_1CaloCluster__v1_1aa91f1b5a4ed623de012f0dff0b9df2d7a214c633e23b3d2614fff381449122d5f" kindref="member" tooltip="Eta in the calo frame (for egamma).">xAOD::CaloCluster::ETACALOFRAME</ref>,<sp/>tmp)))<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;etaCalo<sp/>not<sp/>found<sp/>in<sp/>CaloCluster<sp/>object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>compute_cl_phiCalo(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d91/classxAOD_1_1CaloCluster__v1" kindref="compound">xAOD::CaloCluster</ref>&amp;<sp/>cluster)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<sp/>(cluster.<ref refid="dd/d91/classxAOD_1_1CaloCluster__v1_1aa5a145a111302a485124029ceedd0be6" kindref="member" tooltip="Retrieve individual moment.">retrieveMoment</ref>(<ref refid="dd/d91/classxAOD_1_1CaloCluster__v1_1aa91f1b5a4ed623de012f0dff0b9df2d7a7888f476a3ea337e8e37a4da622bf483" kindref="member" tooltip="Phi in the calo frame (for egamma).">xAOD::CaloCluster::PHICALOFRAME</ref>,<sp/>tmp)))<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;phiCalo<sp/>not<sp/>found<sp/>in<sp/>CaloCluster<sp/>object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>compute_cl_etas1(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d91/classxAOD_1_1CaloCluster__v1" kindref="compound">xAOD::CaloCluster</ref>&amp;<sp/>cluster)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cluster.<ref refid="dd/d91/classxAOD_1_1CaloCluster__v1_1ab4ac5c364b9d7da754464b61eef9779b" kindref="member" tooltip="Get the eta in one layer of the EM Calo.">etaBE</ref>(1);<sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>compute_cl_etas2(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d91/classxAOD_1_1CaloCluster__v1" kindref="compound">xAOD::CaloCluster</ref>&amp;<sp/>cluster)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cluster.<ref refid="dd/d91/classxAOD_1_1CaloCluster__v1_1ab4ac5c364b9d7da754464b61eef9779b" kindref="member" tooltip="Get the eta in one layer of the EM Calo.">etaBE</ref>(2);<sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>compute_rawcl_Es0(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d91/classxAOD_1_1CaloCluster__v1" kindref="compound">xAOD::CaloCluster</ref>&amp;<sp/>cl)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cl.<ref refid="dd/d91/classxAOD_1_1CaloCluster__v1_1a443c16eb7a013ea5abedecc99c3a951e" kindref="member" tooltip="Get the energy in one layer of the EM Calo.">energyBE</ref>(0);<sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*inline<sp/>std::function&lt;float(const<sp/>xAOD::CaloCluster&amp;)&gt;<sp/>compute_rawcl_Es0_auto(bool<sp/>use_corrected)</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/><sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(use_corrected)<sp/>return<sp/>[](const<sp/>xAOD::CaloCluster&amp;<sp/>cl)<sp/>{<sp/>return<sp/>cl.energyBE(0);<sp/>};</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>return<sp/>[](const<sp/>xAOD::CaloCluster&amp;<sp/>cl)<sp/>{<sp/>return<sp/>cl.energyBE(0);<sp/>};</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>compute_rawcl_Es1(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d91/classxAOD_1_1CaloCluster__v1" kindref="compound">xAOD::CaloCluster</ref>&amp;<sp/>cl)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cl.<ref refid="dd/d91/classxAOD_1_1CaloCluster__v1_1a443c16eb7a013ea5abedecc99c3a951e" kindref="member" tooltip="Get the energy in one layer of the EM Calo.">energyBE</ref>(1);<sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>compute_rawcl_Es2(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d91/classxAOD_1_1CaloCluster__v1" kindref="compound">xAOD::CaloCluster</ref>&amp;<sp/>cl)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cl.<ref refid="dd/d91/classxAOD_1_1CaloCluster__v1_1a443c16eb7a013ea5abedecc99c3a951e" kindref="member" tooltip="Get the energy in one layer of the EM Calo.">energyBE</ref>(2);<sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>compute_rawcl_Es3(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d91/classxAOD_1_1CaloCluster__v1" kindref="compound">xAOD::CaloCluster</ref>&amp;<sp/>cl)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cl.<ref refid="dd/d91/classxAOD_1_1CaloCluster__v1_1a443c16eb7a013ea5abedecc99c3a951e" kindref="member" tooltip="Get the energy in one layer of the EM Calo.">energyBE</ref>(3);<sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>compute_correctedcl_Es0(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d91/classxAOD_1_1CaloCluster__v1" kindref="compound">xAOD::CaloCluster</ref>&amp;<sp/>cl)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cl.<ref refid="d5/d4c/classxAOD_1_1IParticle_1a73d35d149fce4bcc1ce55da0faf8e0d5" kindref="member">isAvailable</ref>&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;correctedcl_Es0&quot;</highlight><highlight class="normal">)<sp/>?<sp/>cl.<ref refid="dc/db0/classSG_1_1AuxElement_1a1fc119dd13bd2c74f2ce4f2ba19c8898" kindref="member" tooltip="Fetch an aux data variable, as a const reference.">auxdataConst</ref>&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;correctedcl_Es0&quot;</highlight><highlight class="normal">)<sp/>:<sp/>cl.<ref refid="dd/d91/classxAOD_1_1CaloCluster__v1_1a443c16eb7a013ea5abedecc99c3a951e" kindref="member" tooltip="Get the energy in one layer of the EM Calo.">energyBE</ref>(0);<sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>compute_correctedcl_Es1(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d91/classxAOD_1_1CaloCluster__v1" kindref="compound">xAOD::CaloCluster</ref>&amp;<sp/>cl)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cl.<ref refid="d5/d4c/classxAOD_1_1IParticle_1a73d35d149fce4bcc1ce55da0faf8e0d5" kindref="member">isAvailable</ref>&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;correctedcl_Es1&quot;</highlight><highlight class="normal">)<sp/>?<sp/>cl.<ref refid="dc/db0/classSG_1_1AuxElement_1a1fc119dd13bd2c74f2ce4f2ba19c8898" kindref="member" tooltip="Fetch an aux data variable, as a const reference.">auxdataConst</ref>&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;correctedcl_Es1&quot;</highlight><highlight class="normal">)<sp/>:<sp/>cl.<ref refid="dd/d91/classxAOD_1_1CaloCluster__v1_1a443c16eb7a013ea5abedecc99c3a951e" kindref="member" tooltip="Get the energy in one layer of the EM Calo.">energyBE</ref>(1);<sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>compute_correctedcl_Es2(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d91/classxAOD_1_1CaloCluster__v1" kindref="compound">xAOD::CaloCluster</ref>&amp;<sp/>cl)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cl.<ref refid="d5/d4c/classxAOD_1_1IParticle_1a73d35d149fce4bcc1ce55da0faf8e0d5" kindref="member">isAvailable</ref>&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;correctedcl_Es2&quot;</highlight><highlight class="normal">)<sp/>?<sp/>cl.<ref refid="dc/db0/classSG_1_1AuxElement_1a1fc119dd13bd2c74f2ce4f2ba19c8898" kindref="member" tooltip="Fetch an aux data variable, as a const reference.">auxdataConst</ref>&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;correctedcl_Es2&quot;</highlight><highlight class="normal">)<sp/>:<sp/>cl.<ref refid="dd/d91/classxAOD_1_1CaloCluster__v1_1a443c16eb7a013ea5abedecc99c3a951e" kindref="member" tooltip="Get the energy in one layer of the EM Calo.">energyBE</ref>(2);<sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>compute_correctedcl_Es3(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d91/classxAOD_1_1CaloCluster__v1" kindref="compound">xAOD::CaloCluster</ref>&amp;<sp/>cl)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cl.<ref refid="d5/d4c/classxAOD_1_1IParticle_1a73d35d149fce4bcc1ce55da0faf8e0d5" kindref="member">isAvailable</ref>&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;correctedcl_Es3&quot;</highlight><highlight class="normal">)<sp/>?<sp/>cl.<ref refid="dc/db0/classSG_1_1AuxElement_1a1fc119dd13bd2c74f2ce4f2ba19c8898" kindref="member" tooltip="Fetch an aux data variable, as a const reference.">auxdataConst</ref>&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;correctedcl_Es3&quot;</highlight><highlight class="normal">)<sp/>:<sp/>cl.<ref refid="dd/d91/classxAOD_1_1CaloCluster__v1_1a443c16eb7a013ea5abedecc99c3a951e" kindref="member" tooltip="Get the energy in one layer of the EM Calo.">energyBE</ref>(3);<sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>compute_rawcl_Eacc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d91/classxAOD_1_1CaloCluster__v1" kindref="compound">xAOD::CaloCluster</ref>&amp;<sp/>cl)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cl.<ref refid="dd/d91/classxAOD_1_1CaloCluster__v1_1a443c16eb7a013ea5abedecc99c3a951e" kindref="member" tooltip="Get the energy in one layer of the EM Calo.">energyBE</ref>(1)<sp/>+<sp/>cl.<ref refid="dd/d91/classxAOD_1_1CaloCluster__v1_1a443c16eb7a013ea5abedecc99c3a951e" kindref="member" tooltip="Get the energy in one layer of the EM Calo.">energyBE</ref>(2)<sp/>+<sp/>cl.<ref refid="dd/d91/classxAOD_1_1CaloCluster__v1_1a443c16eb7a013ea5abedecc99c3a951e" kindref="member" tooltip="Get the energy in one layer of the EM Calo.">energyBE</ref>(3);<sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>compute_rawcl_f0(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d91/classxAOD_1_1CaloCluster__v1" kindref="compound">xAOD::CaloCluster</ref>&amp;<sp/>cl)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cl.<ref refid="dd/d91/classxAOD_1_1CaloCluster__v1_1a443c16eb7a013ea5abedecc99c3a951e" kindref="member" tooltip="Get the energy in one layer of the EM Calo.">energyBE</ref>(0)<sp/>/<sp/>(cl.<ref refid="dd/d91/classxAOD_1_1CaloCluster__v1_1a443c16eb7a013ea5abedecc99c3a951e" kindref="member" tooltip="Get the energy in one layer of the EM Calo.">energyBE</ref>(1)<sp/>+<sp/>cl.<ref refid="dd/d91/classxAOD_1_1CaloCluster__v1_1a443c16eb7a013ea5abedecc99c3a951e" kindref="member" tooltip="Get the energy in one layer of the EM Calo.">energyBE</ref>(2)<sp/>+<sp/>cl.<ref refid="dd/d91/classxAOD_1_1CaloCluster__v1_1a443c16eb7a013ea5abedecc99c3a951e" kindref="member" tooltip="Get the energy in one layer of the EM Calo.">energyBE</ref>(3));<sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>compute_correctedcl_Eacc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d91/classxAOD_1_1CaloCluster__v1" kindref="compound">xAOD::CaloCluster</ref>&amp;<sp/>cl)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>compute_correctedcl_Es1(cl)<sp/>+<sp/>compute_correctedcl_Es2(cl)<sp/>+<sp/>compute_correctedcl_Es3(cl);<sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>compute_correctedcl_f0(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d91/classxAOD_1_1CaloCluster__v1" kindref="compound">xAOD::CaloCluster</ref>&amp;<sp/>cl)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>compute_correctedcl_Es0(cl)<sp/>/<sp/>(compute_correctedcl_Eacc(cl));<sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>compute_calibHitsShowerDepth(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::array&lt;float,<sp/>4&gt;&amp;<sp/>cl,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>eta)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::array&lt;float,<sp/>4&gt;<sp/>radius(get_MVAradius(eta));</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>loop<sp/>unrolling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>denominator<sp/>=<sp/>cl[0]<sp/>+<sp/>cl[1]<sp/>+<sp/>cl[2]<sp/>+<sp/>cl[3];</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(denominator<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(radius[0]<sp/>*<sp/>cl[0]</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>radius[1]<sp/>*<sp/>cl[1]</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>radius[2]<sp/>*<sp/>cl[2]</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>radius[3]<sp/>*<sp/>cl[3])<sp/>/<sp/>denominator;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>compute_rawcl_calibHitsShowerDepth(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d91/classxAOD_1_1CaloCluster__v1" kindref="compound">xAOD::CaloCluster</ref>&amp;<sp/>cl)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::array&lt;float,<sp/>4&gt;<sp/>cluster_array<sp/>{<sp/>compute_rawcl_Es0(cl),</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compute_rawcl_Es1(cl),</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compute_rawcl_Es2(cl),</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compute_rawcl_Es3(cl)<sp/>};</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>compute_calibHitsShowerDepth(cluster_array,<sp/>compute_cl_eta(cl));</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>compute_correctedcl_calibHitsShowerDepth(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d91/classxAOD_1_1CaloCluster__v1" kindref="compound">xAOD::CaloCluster</ref>&amp;<sp/>cl)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::array&lt;float,<sp/>4&gt;<sp/>cluster_array<sp/>{<sp/>compute_correctedcl_Es0(cl),</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compute_correctedcl_Es1(cl),</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compute_correctedcl_Es2(cl),</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compute_correctedcl_Es3(cl)<sp/>};</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>compute_calibHitsShowerDepth(cluster_array,<sp/>compute_cl_eta(cl));</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>electron<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>compute_el_charge(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/da6/classxAOD_1_1Electron" kindref="compound" tooltip="Class describing an electron.">xAOD::Electron</ref>&amp;<sp/>el)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>el.charge();<sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>compute_el_tracketa(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/da6/classxAOD_1_1Electron" kindref="compound" tooltip="Class describing an electron.">xAOD::Electron</ref>&amp;<sp/>el)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>el.trackParticle()-&gt;eta();<sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>compute_el_trackpt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/da6/classxAOD_1_1Electron" kindref="compound" tooltip="Class describing an electron.">xAOD::Electron</ref>&amp;<sp/>el)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>el.trackParticle()-&gt;pt();<sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>compute_el_trackz0(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/da6/classxAOD_1_1Electron" kindref="compound" tooltip="Class describing an electron.">xAOD::Electron</ref>&amp;<sp/>el)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>el.trackParticle()-&gt;z0();<sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>compute_el_refittedTrack_qoverp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/da6/classxAOD_1_1Electron" kindref="compound" tooltip="Class describing an electron.">xAOD::Electron</ref>&amp;<sp/>el)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>el.trackParticle()-&gt;qOverP();<sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>compute_el_author(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/da6/classxAOD_1_1Electron" kindref="compound" tooltip="Class describing an electron.">xAOD::Electron</ref>&amp;<sp/>el)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>el.auxdata&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;author&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>photon<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>compute_ph_convFlag(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d42/classxAOD_1_1Photon" kindref="compound" tooltip="Class describing an photon.">xAOD::Photon</ref>&amp;<sp/>ph)<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>original<sp/>=<sp/>xAOD::EgammaHelpers::conversionType(&amp;ph);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(original<sp/>==<sp/>3)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(original<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>original;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324" refid="dd/d94/structegammaMVATreeHelpers_1_1ConversionHelper" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="dd/d94/structegammaMVATreeHelpers_1_1ConversionHelper" kindref="compound">ConversionHelper</ref></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d94/structegammaMVATreeHelpers_1_1ConversionHelper" kindref="compound">ConversionHelper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d42/classxAOD_1_1Photon" kindref="compound" tooltip="Class describing an photon.">xAOD::Photon</ref>*<sp/>ph)</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_vertex(ph<sp/>?<sp/>ph-&gt;vertex()<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_tp0(m_vertex<sp/>?<sp/>m_vertex-&gt;trackParticle(0)<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_tp1(m_vertex<sp/>?<sp/>m_vertex-&gt;trackParticle(1)<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pt1conv(0.),<sp/>m_pt2conv(0.)</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d1/d97/classasg_1_1AsgMessaging" kindref="compound">asg::AsgMessaging</ref><sp/>static_msg(</highlight><highlight class="stringliteral">&quot;ConversionHelper&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>static_msg.<ref refid="d1/d97/classasg_1_1AsgMessaging_1ade3c4b8227d4dd544df9b5aee53363c3" kindref="member">msg</ref>(MSG::DEBUG)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;init<sp/>conversion<sp/>helper&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_vertex)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor&lt;float&gt;</ref><sp/>accPt1(</highlight><highlight class="stringliteral">&quot;pt1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">SG::AuxElement::Accessor&lt;float&gt;</ref><sp/>accPt2(</highlight><highlight class="stringliteral">&quot;pt2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(accPt1.<ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" kindref="member" tooltip="Test to see if this variable exists in the store.">isAvailable</ref>(*m_vertex)<sp/>&amp;&amp;<sp/>accPt2.<ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" kindref="member" tooltip="Test to see if this variable exists in the store.">isAvailable</ref>(*m_vertex))</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pt1conv<sp/>=<sp/>accPt1(*m_vertex);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pt2conv<sp/>=<sp/>accPt2(*m_vertex);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_msg.<ref refid="d1/d97/classasg_1_1AsgMessaging_1ade3c4b8227d4dd544df9b5aee53363c3" kindref="member">msg</ref>(MSG::WARNING)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;pt1/pt2<sp/>not<sp/>available,<sp/>will<sp/>approximate<sp/>from<sp/>first<sp/>measurements&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pt1conv<sp/>=<sp/>getPtAtFirstMeasurement(m_tp0);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pt2conv<sp/>=<sp/>getPtAtFirstMeasurement(m_tp1);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d94/structegammaMVATreeHelpers_1_1ConversionHelper" kindref="compound">ConversionHelper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d42/classxAOD_1_1Photon" kindref="compound" tooltip="Class describing an photon.">xAOD::Photon</ref>&amp;<sp/>ph)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="dd/d94/structegammaMVATreeHelpers_1_1ConversionHelper" kindref="compound">ConversionHelper</ref>(&amp;ph)<sp/>{<sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>delegating<sp/>constr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ph_Rconv()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_vertex<sp/>?<sp/>hypot(m_vertex-&gt;<ref refid="db/dd1/classxAOD_1_1Vertex__v1_1a8aa3c36b9384e92fa6119ac0c633c3a6" kindref="member" tooltip="Returns the 3-pos.">position</ref>().x(),<sp/>m_vertex-&gt;<ref refid="db/dd1/classxAOD_1_1Vertex__v1_1a8aa3c36b9384e92fa6119ac0c633c3a6" kindref="member" tooltip="Returns the 3-pos.">position</ref>().y())<sp/>:<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ph_zconv()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_vertex<sp/>?<sp/>m_vertex-&gt;<ref refid="db/dd1/classxAOD_1_1Vertex__v1_1a8aa3c36b9384e92fa6119ac0c633c3a6" kindref="member" tooltip="Returns the 3-pos.">position</ref>().z()<sp/>:<sp/>0.;<sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ph_convtrk1nPixHits()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_tp0)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>hits;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_tp0-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a356dee9b1911c93d3673a9b791f9df5c" kindref="member">summaryValue</ref>(hits,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aac9135b8ddfaa5a9bc727bf21d396f556" kindref="member" tooltip="these are the pixel hits, including the b-layer [unit8_t].">xAOD::numberOfPixelHits</ref>);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hits;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ph_convtrk2nPixHits()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_tp1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>hits;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_tp1-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a356dee9b1911c93d3673a9b791f9df5c" kindref="member">summaryValue</ref>(hits,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aac9135b8ddfaa5a9bc727bf21d396f556" kindref="member" tooltip="these are the pixel hits, including the b-layer [unit8_t].">xAOD::numberOfPixelHits</ref>);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hits;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ph_convtrk1nSCTHits()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_tp0)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>hits;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_tp0-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a356dee9b1911c93d3673a9b791f9df5c" kindref="member">summaryValue</ref>(hits,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aab24f8cfe1b239d03666babf80ec9bee2" kindref="member" tooltip="number of hits in SCT [unit8_t].">xAOD::numberOfSCTHits</ref>);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hits;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ph_convtrk2nSCTHits()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_tp1)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>hits;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_tp1-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a356dee9b1911c93d3673a9b791f9df5c" kindref="member">summaryValue</ref>(hits,<sp/><ref refid="dd/d44/namespacexAOD_1ae3c28999f91d7b9b98c4142a0eb8286aab24f8cfe1b239d03666babf80ec9bee2" kindref="member" tooltip="number of hits in SCT [unit8_t].">xAOD::numberOfSCTHits</ref>);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hits;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ph_pt1conv()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pt1conv;<sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ph_pt2conv()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pt2conv;<sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ph_ptconv()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>evaluate<sp/>if<sp/>move<sp/>to<sp/>this<sp/>new<sp/>definition,<sp/>by<sp/>now<sp/>keep<sp/>the<sp/>previous<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>be<sp/>consistent<sp/>with<sp/>the<sp/>training</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>m_vertex<sp/>?<sp/>xAOD::EgammaHelpers::momentumAtVertex(*m_vertex).perp()<sp/>:<sp/>0.;<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TLorentzVector<sp/>sum;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_tp0)<sp/>sum<sp/>+=<sp/>m_tp0-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a604c64ea8bf6798578e67def61bd6389" kindref="member" tooltip="The full 4-momentum of the particle.">p4</ref>();</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_tp1)<sp/>sum<sp/>+=<sp/>m_tp1-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a604c64ea8bf6798578e67def61bd6389" kindref="member" tooltip="The full 4-momentum of the particle.">p4</ref>();</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sum.Perp();</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>getPtAtFirstMeasurement(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref>*<sp/>tp)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="393"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tp)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tp-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a35ca4b9ff22a5876ef544ff48c599e62" kindref="member" tooltip="Returns the number of additional parameters stored in the TrackParticle.">numberOfParameters</ref>();<sp/>++i)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tp-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a661e5f40a4f58c6b8aa0e0a9b00a681d" kindref="member" tooltip="Return the ParameterPosition of the parameters at &amp;#39;index&amp;#39;.">parameterPosition</ref>(i)<sp/>==<sp/><ref refid="dd/d44/namespacexAOD_1af1f41a465c80c364db070f606afe5c4eaba58565347b9bd6a91e15e8ab6dd3e1d" kindref="member" tooltip="Parameter defined at the position of the 1st measurement.">xAOD::FirstMeasurement</ref>)</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hypot(tp-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a8f4a468844babafe3edd06cd4f8cfd12" kindref="member" tooltip="Returns the parameter x momentum component, for &amp;#39;index&amp;#39;.">parameterPX</ref>(i),<sp/>tp-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1aed110d5ef1c1e330366b7d04fe6516e0" kindref="member" tooltip="Returns the parameter y momentum component, for &amp;#39;index&amp;#39;.">parameterPY</ref>(i));</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d1/d97/classasg_1_1AsgMessaging" kindref="compound">asg::AsgMessaging</ref><sp/>static_msg(</highlight><highlight class="stringliteral">&quot;ConversionHelper&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>static_msg.<ref refid="d1/d97/classasg_1_1AsgMessaging_1ade3c4b8227d4dd544df9b5aee53363c3" kindref="member">msg</ref>(MSG::WARNING)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>first<sp/>parameter,<sp/>return<sp/>pt<sp/>at<sp/>perigee&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tp-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a4354004bc5b79bf39d3ea87ed4347387" kindref="member" tooltip="The transverse momentum () of the particle.">pt</ref>();</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref>*<sp/>m_vertex;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref>*<sp/>m_tp0;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref>*<sp/>m_tp1;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>m_pt1conv,<sp/>m_pt2conv;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/egammaMVACalib/egammaMVATree.h"/>
  </compounddef>
</doxygen>
