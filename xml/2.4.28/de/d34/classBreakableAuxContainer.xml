<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="de/d34/classBreakableAuxContainer" kind="class" prot="public">
    <compoundname>BreakableAuxContainer</compoundname>
    <basecompoundref refid="de/d65/classxAOD_1_1AuxContainerBase" prot="public" virt="non-virtual">xAOD::AuxContainerBase</basecompoundref>
      <sectiondef kind="user-defined">
      <header>Test variables</header>
      <description><para><anchor id="_1amgrp1173a1ac5974cd9960fd8edae2417ed9"/> </para></description>
      <memberdef kind="variable" id="de/d34/classBreakableAuxContainer_1a6ef61cefc2ded3f8a180e8026452ec0d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt; int &gt; BreakableAuxContainer::testVar1</definition>
        <argsstring></argsstring>
        <name>testVar1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/test/ut_xaodcore_safedeepcopy_test.cxx" line="44" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/test/ut_xaodcore_safedeepcopy_test.cxx" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/d34/classBreakableAuxContainer_1ab3e0daeb3ed78546e64d8359239b6259" prot="private" static="no" mutable="no">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt; float &gt; BreakableAuxContainer::testVar2</definition>
        <argsstring></argsstring>
        <name>testVar2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/test/ut_xaodcore_safedeepcopy_test.cxx" line="45" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/test/ut_xaodcore_safedeepcopy_test.cxx" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/d34/classBreakableAuxContainer_1a981ec15de8744e90273c1b4367285a23" prot="private" static="no" mutable="no">
        <type>std::vector&lt; short &gt;</type>
        <definition>std::vector&lt; short &gt; BreakableAuxContainer::testVar3</definition>
        <argsstring></argsstring>
        <name>testVar3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/test/ut_xaodcore_safedeepcopy_test.cxx" line="46" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/test/ut_xaodcore_safedeepcopy_test.cxx" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Functions &quot;breaking&quot; various variables in the container</header>
      <description><para><anchor id="_1amgrpd021fe1271c70a629f5268993256c5a4"/> </para></description>
      <memberdef kind="function" id="de/d34/classBreakableAuxContainer_1a3ef688743a4a09f2aee41aa4b91acaeb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BreakableAuxContainer::breakTestVar1</definition>
        <argsstring>()</argsstring>
        <name>breakTestVar1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/test/ut_xaodcore_safedeepcopy_test.cxx" line="30" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/test/ut_xaodcore_safedeepcopy_test.cxx" bodystart="30" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="de/d34/classBreakableAuxContainer_1a8e21a168d14132ef47914610688bb5ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BreakableAuxContainer::breakTestVar2</definition>
        <argsstring>()</argsstring>
        <name>breakTestVar2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/test/ut_xaodcore_safedeepcopy_test.cxx" line="33" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/test/ut_xaodcore_safedeepcopy_test.cxx" bodystart="33" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="de/d34/classBreakableAuxContainer_1a7511c466279792a645f92becbc8aaebb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BreakableAuxContainer::breakTestVar3</definition>
        <argsstring>()</argsstring>
        <name>breakTestVar3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/test/ut_xaodcore_safedeepcopy_test.cxx" line="36" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/test/ut_xaodcore_safedeepcopy_test.cxx" bodystart="36" bodyend="38"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="de/d34/classBreakableAuxContainer_1a7e6b930ea67b2b020a00eb8de6e49a66" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>BreakableAuxContainer::BreakableAuxContainer</definition>
        <argsstring>()</argsstring>
        <name>BreakableAuxContainer</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/test/ut_xaodcore_safedeepcopy_test.cxx" line="21" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/test/ut_xaodcore_safedeepcopy_test.cxx" bodystart="21" bodyend="26"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Auxiliary container used during the tests. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2511">
        <label>SG::IAuxStoreHolder</label>
        <link refid="dc/d42/classSG_1_1IAuxStoreHolder"/>
      </node>
      <node id="2506">
        <label>BreakableAuxContainer</label>
        <link refid="de/d34/classBreakableAuxContainer"/>
        <childnode refid="2507" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2509">
        <label>SG::IConstAuxStore</label>
        <link refid="d3/dd5/classSG_1_1IConstAuxStore"/>
      </node>
      <node id="2510">
        <label>SG::IAuxStoreIO</label>
        <link refid="db/d37/classSG_1_1IAuxStoreIO"/>
      </node>
      <node id="2507">
        <label>xAOD::AuxContainerBase</label>
        <link refid="de/d65/classxAOD_1_1AuxContainerBase"/>
        <childnode refid="2508" relation="public-inheritance">
        </childnode>
        <childnode refid="2510" relation="public-inheritance">
        </childnode>
        <childnode refid="2511" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2508">
        <label>SG::IAuxStore</label>
        <link refid="dc/d05/classSG_1_1IAuxStore"/>
        <childnode refid="2509" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2517">
        <label>SG::IAuxStoreHolder</label>
        <link refid="dc/d42/classSG_1_1IAuxStoreHolder"/>
      </node>
      <node id="2528">
        <label>Internal::rehash_base&lt;Internal::prime_rehash_policy , hashtable&lt;Value , Value , Alloc , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="db/d2b/classInternal_1_1rehash__base"/>
      </node>
      <node id="2529">
        <label>Internal::hash_code_base&lt;Value , Value , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , cache_hash_code&gt;</label>
        <link refid="d0/d2e/classInternal_1_1hash__code__base"/>
      </node>
      <node id="2522">
        <label>Internal::hash_code_base&lt;size_t , size_t , Internal::identity&lt; size_t &gt; , std::equal_to&lt; size_t &gt; , hash&lt; size_t &gt; , Internal::mod_range_hashing , Internal::default_ranged_hash , cache_hash_code&gt;</label>
        <link refid="d0/d2e/classInternal_1_1hash__code__base"/>
      </node>
      <node id="2527">
        <label>SG::hashtable&lt; Value, Value, Alloc, Internal::identity&lt; Value &gt;, Pred, Hash, Internal::mod_range_hashing, Internal::default_ranged_hash, Internal::prime_rehash_policy, cache_hash_code, true, true &gt;</label>
        <link refid="de/d63/classSG_1_1hashtable"/>
        <childnode refid="2528" relation="public-inheritance">
        </childnode>
        <childnode refid="2529" relation="public-inheritance">
        </childnode>
        <childnode refid="2530" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2512">
        <label>BreakableAuxContainer</label>
        <link refid="de/d34/classBreakableAuxContainer"/>
        <childnode refid="2513" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2524">
        <label>string</label>
      </node>
      <node id="2523">
        <label>Internal::map_base&lt;size_t , size_t , Internal::identity&lt; size_t &gt; , unique_keys, hashtable&lt;size_t , size_t , std::allocator&lt; size_t &gt; , Internal::identity&lt; size_t &gt; , std::equal_to&lt; size_t &gt; , hash&lt; size_t &gt; , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="d1/d54/classInternal_1_1map__base"/>
      </node>
      <node id="2518">
        <label>xAOD::AuxSelection</label>
        <link refid="d6/dd6/classxAOD_1_1AuxSelection"/>
        <childnode refid="2519" relation="usage">
          <edgelabel>m_auxids</edgelabel>
        </childnode>
      </node>
      <node id="2515">
        <label>SG::IConstAuxStore</label>
        <link refid="d3/dd5/classSG_1_1IConstAuxStore"/>
      </node>
      <node id="2516">
        <label>SG::IAuxStoreIO</label>
        <link refid="db/d37/classSG_1_1IAuxStoreIO"/>
      </node>
      <node id="2520">
        <label>SG::hashtable&lt; size_t, size_t, std::allocator&lt; size_t &gt;, Internal::identity&lt; size_t &gt;, std::equal_to&lt; size_t &gt;, hash&lt; size_t &gt;, Internal::mod_range_hashing, Internal::default_ranged_hash, Internal::prime_rehash_policy, false, true, true &gt;</label>
        <link refid="de/d63/classSG_1_1hashtable"/>
        <childnode refid="2521" relation="public-inheritance">
        </childnode>
        <childnode refid="2522" relation="public-inheritance">
        </childnode>
        <childnode refid="2523" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2513">
        <label>xAOD::AuxContainerBase</label>
        <link refid="de/d65/classxAOD_1_1AuxContainerBase"/>
        <childnode refid="2514" relation="public-inheritance">
        </childnode>
        <childnode refid="2516" relation="public-inheritance">
        </childnode>
        <childnode refid="2517" relation="public-inheritance">
        </childnode>
        <childnode refid="2514" relation="usage">
          <edgelabel>m_store</edgelabel>
        </childnode>
        <childnode refid="2518" relation="usage">
          <edgelabel>m_selection</edgelabel>
        </childnode>
        <childnode refid="2524" relation="usage">
          <edgelabel>m_name</edgelabel>
        </childnode>
        <childnode refid="2525" relation="usage">
          <edgelabel>m_mutex</edgelabel>
        </childnode>
        <childnode refid="2516" relation="usage">
          <edgelabel>m_storeIO</edgelabel>
        </childnode>
        <childnode refid="2526" relation="usage">
          <edgelabel>m_auxids</edgelabel>
        </childnode>
      </node>
      <node id="2514">
        <label>SG::IAuxStore</label>
        <link refid="dc/d05/classSG_1_1IAuxStore"/>
        <childnode refid="2515" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2526">
        <label>SG::unordered_set&lt; Value, Hash, Pred, Alloc, cache_hash_code &gt;</label>
        <link refid="dd/dac/classSG_1_1unordered__set"/>
        <childnode refid="2527" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2530">
        <label>Internal::map_base&lt;Value , Value , Internal::identity&lt; Value &gt; , unique_keys, hashtable&lt;Value , Value , Alloc , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="d1/d54/classInternal_1_1map__base"/>
      </node>
      <node id="2521">
        <label>Internal::rehash_base&lt;Internal::prime_rehash_policy , hashtable&lt;size_t , size_t , std::allocator&lt; size_t &gt; , Internal::identity&lt; size_t &gt; , std::equal_to&lt; size_t &gt; , hash&lt; size_t &gt; , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="db/d2b/classInternal_1_1rehash__base"/>
      </node>
      <node id="2525">
        <label>mutex</label>
      </node>
      <node id="2519">
        <label>SG::unordered_set&lt; size_t &gt;</label>
        <link refid="dd/dac/classSG_1_1unordered__set"/>
        <childnode refid="2520" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/test/ut_xaodcore_safedeepcopy_test.cxx" line="17" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/test/ut_xaodcore_safedeepcopy_test.cxx" bodystart="17" bodyend="49"/>
    <listofallmembers>
      <member refid="dc/d42/classSG_1_1IAuxStoreHolder_1a52b405d522a75932698443c3f01611f9a94fd1895e790e358290b074ea49edbe2" prot="public" virt="non-virtual"><scope>BreakableAuxContainer</scope><name>AST_ContainerStore</name></member>
      <member refid="dc/d42/classSG_1_1IAuxStoreHolder_1a52b405d522a75932698443c3f01611f9afb6416cb757f8628e0383b707c99b19a" prot="public" virt="non-virtual"><scope>BreakableAuxContainer</scope><name>AST_ObjectStore</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a607470123bbcc9ff49e9b6d1d908713c" prot="public" virt="non-virtual"><scope>BreakableAuxContainer</scope><name>AuxContainerBase</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1acb22b1f9ef80b9c567defd21ac53ac26" prot="public" virt="non-virtual"><scope>BreakableAuxContainer</scope><name>AuxContainerBase</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1abc174c20398c8a8b4c67d241ea83c339" prot="public" virt="non-virtual"><scope>BreakableAuxContainer</scope><name>AuxContainerBase</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a03785f5dc3c056c2844aa85b400b17da" prot="public" virt="non-virtual"><scope>BreakableAuxContainer</scope><name>auxid_set_t</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1af1b96ab47e53693b6ac1fbc426f97ec1" prot="public" virt="non-virtual"><scope>BreakableAuxContainer</scope><name>auxid_t</name></member>
      <member refid="dc/d42/classSG_1_1IAuxStoreHolder_1a52b405d522a75932698443c3f01611f9" prot="public" virt="non-virtual"><scope>BreakableAuxContainer</scope><name>AuxStoreType</name></member>
      <member refid="de/d34/classBreakableAuxContainer_1a7e6b930ea67b2b020a00eb8de6e49a66" prot="public" virt="non-virtual"><scope>BreakableAuxContainer</scope><name>BreakableAuxContainer</name></member>
      <member refid="de/d34/classBreakableAuxContainer_1a3ef688743a4a09f2aee41aa4b91acaeb" prot="public" virt="non-virtual"><scope>BreakableAuxContainer</scope><name>breakTestVar1</name></member>
      <member refid="de/d34/classBreakableAuxContainer_1a8e21a168d14132ef47914610688bb5ab" prot="public" virt="non-virtual"><scope>BreakableAuxContainer</scope><name>breakTestVar2</name></member>
      <member refid="de/d34/classBreakableAuxContainer_1a7511c466279792a645f92becbc8aaebb" prot="public" virt="non-virtual"><scope>BreakableAuxContainer</scope><name>breakTestVar3</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a27c734e6ded2c198eb31c995e5febf31" prot="public" virt="virtual"><scope>BreakableAuxContainer</scope><name>clearDecorations</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a7e2003cda04239dd53f2692982221a25" prot="public" virt="virtual"><scope>BreakableAuxContainer</scope><name>getAuxIDs</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1abd931077f3f670a7b466100fc19d7be6" prot="public" virt="virtual"><scope>BreakableAuxContainer</scope><name>getData</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a623c9fdb10a510db05133053b61bd2a5" prot="public" virt="virtual"><scope>BreakableAuxContainer</scope><name>getData</name></member>
      <member refid="dc/d05/classSG_1_1IAuxStore_1a0a6b90ed812993712727c76b64953c48" prot="public" virt="pure-virtual" ambiguityscope="SG::IAuxStore::"><scope>BreakableAuxContainer</scope><name>getData</name></member>
      <member refid="d3/dd5/classSG_1_1IConstAuxStore_1aa73e6e5474cdc0d38fe3367740876c59" prot="public" virt="pure-virtual" ambiguityscope="SG::IConstAuxStore::"><scope>BreakableAuxContainer</scope><name>getData</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1af911ebaa620ad08df6d75899e27bd21b" prot="public" virt="virtual"><scope>BreakableAuxContainer</scope><name>getDecoration</name></member>
      <member refid="d3/dd5/classSG_1_1IConstAuxStore_1a96728593e3bc1da60d3bdd28291969f0" prot="public" virt="pure-virtual" ambiguityscope="SG::IAuxStore::"><scope>BreakableAuxContainer</scope><name>getDecoration</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a92646d86c4946fb3841dc3f53ab04485" prot="public" virt="virtual"><scope>BreakableAuxContainer</scope><name>getDynamicAuxIDs</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a7152d204081065ad79e535d76f41e8db" prot="public" virt="virtual"><scope>BreakableAuxContainer</scope><name>getIOData</name></member>
      <member refid="db/d37/classSG_1_1IAuxStoreIO_1a55ba7c049509f9b6a8b5c57e9322bcc9" prot="public" virt="pure-virtual" ambiguityscope="SG::IAuxStoreIO::"><scope>BreakableAuxContainer</scope><name>getIOData</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1ae3851a65287f9115f7f6885e22662bf8" prot="public" virt="virtual"><scope>BreakableAuxContainer</scope><name>getIOType</name></member>
      <member refid="db/d37/classSG_1_1IAuxStoreIO_1a25c3d7891a19f3881f932c3484031df2" prot="public" virt="pure-virtual" ambiguityscope="SG::IAuxStoreIO::"><scope>BreakableAuxContainer</scope><name>getIOType</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a6442be9f01736a35bc8ee8ebaed5767b" prot="public" virt="virtual"><scope>BreakableAuxContainer</scope><name>getSelectedAuxIDs</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a95c2ba90ffb73ba97cc201f7ee161d97" prot="public" virt="virtual"><scope>BreakableAuxContainer</scope><name>getStore</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a39e74adfd119e834ec218f897d790cfb" prot="public" virt="virtual"><scope>BreakableAuxContainer</scope><name>getStoreType</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a3aad1dbe545c483a0facf9350a67724d" prot="public" virt="virtual"><scope>BreakableAuxContainer</scope><name>getWritableAuxIDs</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a52541675fc27e485d755e514a22fcf4d" prot="public" virt="virtual"><scope>BreakableAuxContainer</scope><name>lock</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1ae7e82d567c8c499ad429832170f2b4a6" prot="public" virt="non-virtual"><scope>BreakableAuxContainer</scope><name>name</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1af9ad8d05566f429b63711abea410bde9" prot="public" virt="non-virtual"><scope>BreakableAuxContainer</scope><name>operator=</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1ae1a4cd803cd96309193a7df23d581cab" prot="protected" virt="non-virtual"><scope>BreakableAuxContainer</scope><name>regAuxVar</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a9402c029d8a77f9150091ec805768a44" prot="protected" virt="non-virtual"><scope>BreakableAuxContainer</scope><name>regAuxVar</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a459706651829d59a33ace8bbc49bc173" prot="public" virt="virtual"><scope>BreakableAuxContainer</scope><name>reserve</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a8e885c6f28a73c6e4e0bbd33b244f1c7" prot="public" virt="virtual"><scope>BreakableAuxContainer</scope><name>resize</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1ab69feb0eab5baa91ebb4750fd0a17c44" prot="public" virt="virtual"><scope>BreakableAuxContainer</scope><name>selectAux</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a17e0da702737d4bdd66aa4c4d5fcee43" prot="public" virt="non-virtual"><scope>BreakableAuxContainer</scope><name>setName</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a564074605df56f289545e81781b27c94" prot="public" virt="virtual"><scope>BreakableAuxContainer</scope><name>setOption</name></member>
      <member refid="dc/d05/classSG_1_1IAuxStore_1a371646fff1258a9f81b35d26eca3ac45" prot="public" virt="virtual" ambiguityscope="SG::IAuxStore::"><scope>BreakableAuxContainer</scope><name>setOption</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a73e7691d63ed2168a6dc034882e0501b" prot="public" virt="virtual"><scope>BreakableAuxContainer</scope><name>setStore</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a2282b0bd500c18d2c3d3b52c2287999c" prot="public" virt="virtual"><scope>BreakableAuxContainer</scope><name>shift</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a1a8a180de3ed24bf7161ce0da86fdfb0" prot="public" virt="virtual"><scope>BreakableAuxContainer</scope><name>size</name></member>
      <member refid="de/d34/classBreakableAuxContainer_1a6ef61cefc2ded3f8a180e8026452ec0d" prot="private" virt="non-virtual"><scope>BreakableAuxContainer</scope><name>testVar1</name></member>
      <member refid="de/d34/classBreakableAuxContainer_1ab3e0daeb3ed78546e64d8359239b6259" prot="private" virt="non-virtual"><scope>BreakableAuxContainer</scope><name>testVar2</name></member>
      <member refid="de/d34/classBreakableAuxContainer_1a981ec15de8744e90273c1b4367285a23" prot="private" virt="non-virtual"><scope>BreakableAuxContainer</scope><name>testVar3</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1ab0cbc8fb53d52b6e7b54870f0d3aa7ad" prot="public" virt="non-virtual"><scope>BreakableAuxContainer</scope><name>~AuxContainerBase</name></member>
      <member refid="dc/d42/classSG_1_1IAuxStoreHolder_1a51489d2a5109fe92f83a8f34ff89c57b" prot="public" virt="virtual"><scope>BreakableAuxContainer</scope><name>~IAuxStoreHolder</name></member>
      <member refid="db/d37/classSG_1_1IAuxStoreIO_1a78166aac5abe83f66eef9946a23ced75" prot="public" virt="virtual"><scope>BreakableAuxContainer</scope><name>~IAuxStoreIO</name></member>
      <member refid="d3/dd5/classSG_1_1IConstAuxStore_1a2acc9ded5fe9a64c8f508d3c0d7431a5" prot="public" virt="virtual"><scope>BreakableAuxContainer</scope><name>~IConstAuxStore</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
