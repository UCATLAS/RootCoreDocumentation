<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="de/d34/namespaceTrig_1_1FeatureAccessImpl" kind="namespace">
    <compoundname>Trig::FeatureAccessImpl</compoundname>
    <innerclass refid="db/d37/structTrig_1_1FeatureAccessImpl_1_1isDataVector" prot="public">Trig::FeatureAccessImpl::isDataVector</innerclass>
    <innerclass refid="d2/d0f/structTrig_1_1FeatureAccessImpl_1_1insert__and__flatten_3_01T_00_01STORED_00_01false_00_01LINK_01_4" prot="public">Trig::FeatureAccessImpl::insert_and_flatten&lt; T, STORED, false, LINK &gt;</innerclass>
    <innerclass refid="d0/de6/structTrig_1_1FeatureAccessImpl_1_1insert__and__flatten_3_01T_00_01CONT_00_01true_00_01LINK_01_4" prot="public">Trig::FeatureAccessImpl::insert_and_flatten&lt; T, CONT, true, LINK &gt;</innerclass>
    <innerclass refid="d2/d2c/structTrig_1_1FeatureAccessImpl_1_1print__features_3_01LINK_00_01true_01_4" prot="public">Trig::FeatureAccessImpl::print_features&lt; LINK, true &gt;</innerclass>
    <innerclass refid="d3/d43/structTrig_1_1FeatureAccessImpl_1_1print__features_3_01LINK_00_01false_01_4" prot="public">Trig::FeatureAccessImpl::print_features&lt; LINK, false &gt;</innerclass>
    <innerclass refid="df/dbd/structTrig_1_1FeatureAccessImpl_1_1true__type" prot="public">Trig::FeatureAccessImpl::true_type</innerclass>
    <innerclass refid="de/d8e/structTrig_1_1FeatureAccessImpl_1_1false__type" prot="public">Trig::FeatureAccessImpl::false_type</innerclass>
    <innerclass refid="d4/d3e/structTrig_1_1FeatureAccessImpl_1_1get__type_3_01true_01_4" prot="public">Trig::FeatureAccessImpl::get_type&lt; true &gt;</innerclass>
    <innerclass refid="d2/d37/structTrig_1_1FeatureAccessImpl_1_1get__type_3_01false_01_4" prot="public">Trig::FeatureAccessImpl::get_type&lt; false &gt;</innerclass>
    <innerclass refid="d2/d1a/structTrig_1_1FeatureAccessImpl_1_1get__links" prot="public">Trig::FeatureAccessImpl::get_links</innerclass>
    <innerclass refid="d9/da2/structTrig_1_1FeatureAccessImpl_1_1getFlagsHelper_3_01T_00_01STORED_00_01true_01_4" prot="public">Trig::FeatureAccessImpl::getFlagsHelper&lt; T, STORED, true &gt;</innerclass>
    <innerclass refid="db/d6b/structTrig_1_1FeatureAccessImpl_1_1getFlagsHelper_3_01T_00_01STORED_00_01false_01_4" prot="public">Trig::FeatureAccessImpl::getFlagsHelper&lt; T, STORED, false &gt;</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="de/d34/namespaceTrig_1_1FeatureAccessImpl_1a22566906d4f7fe522d621ca1207405b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/d62/classHLT_1_1TriggerElement_1_1FeatureAccessHelper" kindref="compound">HLT::TriggerElement::FeatureAccessHelper</ref></type>
        <definition>HLT::TriggerElement::FeatureAccessHelper Trig::FeatureAccessImpl::getTypelessBits</definition>
        <argsstring>(const HLT::TriggerElement *te, const HLT::TrigNavStructure *navigation)</argsstring>
        <name>getTypelessBits</name>
        <param>
          <type>const <ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound">HLT::TriggerElement</ref> *</type>
          <declname>te</declname>
        </param>
        <param>
          <type>const <ref refid="d9/d08/classHLT_1_1TrigNavStructure" kindref="compound">HLT::TrigNavStructure</ref> *</type>
          <declname>navigation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/Root/FeatureCollectStandalone.cxx" line="21"/>
      </memberdef>
      <memberdef kind="function" id="de/d34/namespaceTrig_1_1FeatureAccessImpl_1a2b8a62bf40e96a2f9a6b080563682802" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Trig::FeatureAccessImpl::typelessCollect</definition>
        <argsstring>(const HLT::TriggerElement *te, HLT::class_id_type clid, std::vector&lt; Trig::TypelessFeature &gt; &amp;data, const std::string &amp;label, unsigned int condition, HLT::TrigNavStructure *navigation)</argsstring>
        <name>typelessCollect</name>
        <param>
          <type>const <ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound">HLT::TriggerElement</ref> *</type>
          <declname>te</declname>
        </param>
        <param>
          <type>HLT::class_id_type</type>
          <declname>clid</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="de/dd5/classTrig_1_1TypelessFeature" kindref="compound">Trig::TypelessFeature</ref> &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>condition</declname>
        </param>
        <param>
          <type><ref refid="d9/d08/classHLT_1_1TrigNavStructure" kindref="compound">HLT::TrigNavStructure</ref> *</type>
          <declname>navigation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/Root/FeatureCollectStandalone.cxx" line="63"/>
      </memberdef>
      <memberdef kind="function" id="de/d34/namespaceTrig_1_1FeatureAccessImpl_1a1975d404426193b93f336e0f2fdbe608" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d9/d20/classTrigPassBits" kindref="compound">TrigPassBits</ref> *</type>
        <definition>const TrigPassBits * Trig::FeatureAccessImpl::getBits</definition>
        <argsstring>(size_t sz, const HLT::TriggerElement *te, const std::string &amp;, HLT::NavigationCore *navigation)</argsstring>
        <name>getBits</name>
        <param>
          <type>size_t</type>
          <declname>sz</declname>
        </param>
        <param>
          <type>const <ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound">HLT::TriggerElement</ref> *</type>
          <declname>te</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <defname>label</defname>
        </param>
        <param>
          <type>HLT::NavigationCore *</type>
          <declname>navigation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/src/FeatureCollectAthena.cxx" line="19"/>
      </memberdef>
      <memberdef kind="function" id="de/d34/namespaceTrig_1_1FeatureAccessImpl_1a00025a71a11c85e68fddbe05f61abe94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref> *</type>
        <definition>const TrigPassFlags * Trig::FeatureAccessImpl::getFlags</definition>
        <argsstring>(size_t size, const HLT::TriggerElement *te, const std::string &amp;label, HLT::NavigationCore *navigation)</argsstring>
        <name>getFlags</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const <ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound">HLT::TriggerElement</ref> *</type>
          <declname>te</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>HLT::NavigationCore *</type>
          <declname>navigation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/src/FeatureCollectAthena.cxx" line="37"/>
      </memberdef>
      <memberdef kind="function" id="de/d34/namespaceTrig_1_1FeatureAccessImpl_1a159134b4541428a90dec7faedd97c7be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Trig::FeatureAccessImpl::l1collect</definition>
        <argsstring>(const HLT::TriggerElement *te, std::vector&lt; Trig::Feature&lt; T &gt; &gt; &amp;data, unsigned int condition, const std::vector&lt; T &gt; &amp;(LVL1_ROI::*method)() const, HLT::TrigNavStructure *navstructure)</argsstring>
        <name>l1collect</name>
        <param>
          <type>const <ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound">HLT::TriggerElement</ref> *</type>
          <declname>te</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Trig::Feature</ref>&lt; <ref refid="d1/def/classT" kindref="compound">T</ref> &gt; &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>condition</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="d1/def/classT" kindref="compound">T</ref> &gt; &amp;(LVL1_ROI::*)() const </type>
          <declname>method</declname>
        </param>
        <param>
          <type><ref refid="d9/d08/classHLT_1_1TrigNavStructure" kindref="compound">HLT::TrigNavStructure</ref> *</type>
          <declname>navstructure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/src/FeatureCollectAthena.cxx" line="51" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/src/FeatureCollectAthena.cxx" bodystart="49" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="de/d34/namespaceTrig_1_1FeatureAccessImpl_1a77c755d5db01a24ac44641f5069732fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void Trig::FeatureAccessImpl::collect&lt; Muon_ROI &gt;</definition>
        <argsstring>(const HLT::TriggerElement *te, std::vector&lt; Trig::Feature&lt; Muon_ROI &gt; &gt; &amp;data, const std::string &amp;, unsigned int condition, const std::string &amp;, HLT::TrigNavStructure *navigation)</argsstring>
        <name>collect&lt; Muon_ROI &gt;</name>
        <param>
          <type>const <ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound">HLT::TriggerElement</ref> *</type>
          <declname>te</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Trig::Feature</ref>&lt; Muon_ROI &gt; &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>condition</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <param>
          <type><ref refid="d9/d08/classHLT_1_1TrigNavStructure" kindref="compound">HLT::TrigNavStructure</ref> *</type>
          <declname>navigation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/src/FeatureCollectAthena.cxx" line="76"/>
      </memberdef>
      <memberdef kind="function" id="de/d34/namespaceTrig_1_1FeatureAccessImpl_1a762bdb11606d1720fdcecefa258922ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void Trig::FeatureAccessImpl::collect&lt; EmTau_ROI &gt;</definition>
        <argsstring>(const HLT::TriggerElement *te, std::vector&lt; Trig::Feature&lt; EmTau_ROI &gt; &gt; &amp;data, const std::string &amp;, unsigned int condition, const std::string &amp;, HLT::TrigNavStructure *navigation)</argsstring>
        <name>collect&lt; EmTau_ROI &gt;</name>
        <param>
          <type>const <ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound">HLT::TriggerElement</ref> *</type>
          <declname>te</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Trig::Feature</ref>&lt; EmTau_ROI &gt; &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>condition</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <param>
          <type><ref refid="d9/d08/classHLT_1_1TrigNavStructure" kindref="compound">HLT::TrigNavStructure</ref> *</type>
          <declname>navigation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/src/FeatureCollectAthena.cxx" line="81"/>
      </memberdef>
      <memberdef kind="function" id="de/d34/namespaceTrig_1_1FeatureAccessImpl_1a3cffb73be8f569e38f6abcbbc47b1628" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void Trig::FeatureAccessImpl::collect&lt; Jet_ROI &gt;</definition>
        <argsstring>(const HLT::TriggerElement *te, std::vector&lt; Trig::Feature&lt; Jet_ROI &gt; &gt; &amp;data, const std::string &amp;, unsigned int condition, const std::string &amp;, HLT::TrigNavStructure *navigation)</argsstring>
        <name>collect&lt; Jet_ROI &gt;</name>
        <param>
          <type>const <ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound">HLT::TriggerElement</ref> *</type>
          <declname>te</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Trig::Feature</ref>&lt; Jet_ROI &gt; &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>condition</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <param>
          <type><ref refid="d9/d08/classHLT_1_1TrigNavStructure" kindref="compound">HLT::TrigNavStructure</ref> *</type>
          <declname>navigation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/src/FeatureCollectAthena.cxx" line="86"/>
      </memberdef>
      <memberdef kind="function" id="de/d34/namespaceTrig_1_1FeatureAccessImpl_1add5f9dcfb424daace6964412d0b8cc1c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ROI</type>
          </param>
          <param>
            <type>typename ROICONTAINER</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Trig::FeatureAccessImpl::xAODcollect</definition>
        <argsstring>(const HLT::TriggerElement *te, std::vector&lt; Trig::Feature&lt; ROI &gt; &gt; &amp;data, unsigned int condition, HLT::TrigNavStructure *navstructure, const std::string &amp;sgkey)</argsstring>
        <name>xAODcollect</name>
        <param>
          <type>const <ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound">HLT::TriggerElement</ref> *</type>
          <declname>te</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Trig::Feature</ref>&lt; ROI &gt; &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>condition</declname>
        </param>
        <param>
          <type><ref refid="d9/d08/classHLT_1_1TrigNavStructure" kindref="compound">HLT::TrigNavStructure</ref> *</type>
          <declname>navstructure</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>sgkey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/src/FeatureCollectAthena.cxx" line="91" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/src/FeatureCollectAthena.cxx" bodystart="91" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="de/d34/namespaceTrig_1_1FeatureAccessImpl_1ac39d07f7b09c375f58c6479b363e48ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void Trig::FeatureAccessImpl::collect&lt; xAOD::EmTauRoI &gt;</definition>
        <argsstring>(const HLT::TriggerElement *te, std::vector&lt; Trig::Feature&lt; xAOD::EmTauRoI &gt; &gt; &amp;data, const std::string &amp;, unsigned int condition, const std::string &amp;, HLT::TrigNavStructure *navigation)</argsstring>
        <name>collect&lt; xAOD::EmTauRoI &gt;</name>
        <param>
          <type>const <ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound">HLT::TriggerElement</ref> *</type>
          <declname>te</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Trig::Feature</ref>&lt; <ref refid="da/d1c/classxAOD_1_1EmTauRoI__v2" kindref="compound">xAOD::EmTauRoI</ref> &gt; &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>condition</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <param>
          <type><ref refid="d9/d08/classHLT_1_1TrigNavStructure" kindref="compound">HLT::TrigNavStructure</ref> *</type>
          <declname>navigation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/src/FeatureCollectAthena.cxx" line="124"/>
      </memberdef>
      <memberdef kind="function" id="de/d34/namespaceTrig_1_1FeatureAccessImpl_1a7f780f015751c1422dea22e01aa43223" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void Trig::FeatureAccessImpl::collect&lt; xAOD::MuonRoI &gt;</definition>
        <argsstring>(const HLT::TriggerElement *te, std::vector&lt; Trig::Feature&lt; xAOD::MuonRoI &gt; &gt; &amp;data, const std::string &amp;, unsigned int condition, const std::string &amp;, HLT::TrigNavStructure *navigation)</argsstring>
        <name>collect&lt; xAOD::MuonRoI &gt;</name>
        <param>
          <type>const <ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound">HLT::TriggerElement</ref> *</type>
          <declname>te</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Trig::Feature</ref>&lt; <ref refid="d9/d4f/classxAOD_1_1MuonRoI__v1" kindref="compound">xAOD::MuonRoI</ref> &gt; &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>condition</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <param>
          <type><ref refid="d9/d08/classHLT_1_1TrigNavStructure" kindref="compound">HLT::TrigNavStructure</ref> *</type>
          <declname>navigation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/src/FeatureCollectAthena.cxx" line="129"/>
      </memberdef>
      <memberdef kind="function" id="de/d34/namespaceTrig_1_1FeatureAccessImpl_1a679d025f4f3a55ad72ec77462094ef29" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void Trig::FeatureAccessImpl::collect&lt; xAOD::JetRoI &gt;</definition>
        <argsstring>(const HLT::TriggerElement *te, std::vector&lt; Trig::Feature&lt; xAOD::JetRoI &gt; &gt; &amp;data, const std::string &amp;, unsigned int condition, const std::string &amp;, HLT::TrigNavStructure *navigation)</argsstring>
        <name>collect&lt; xAOD::JetRoI &gt;</name>
        <param>
          <type>const <ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound">HLT::TriggerElement</ref> *</type>
          <declname>te</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Trig::Feature</ref>&lt; <ref refid="da/dbb/classxAOD_1_1JetRoI__v2" kindref="compound">xAOD::JetRoI</ref> &gt; &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>condition</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <param>
          <type><ref refid="d9/d08/classHLT_1_1TrigNavStructure" kindref="compound">HLT::TrigNavStructure</ref> *</type>
          <declname>navigation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/src/FeatureCollectAthena.cxx" line="134"/>
      </memberdef>
      <memberdef kind="function" id="de/d34/namespaceTrig_1_1FeatureAccessImpl_1a6afe7cabad2c00d6c9366fc0a6abb2af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref></type>
        <definition>TrigPassFlags Trig::FeatureAccessImpl::getFlags</definition>
        <argsstring>(const Trig::Feature&lt; EmTau_ROI &gt; &amp;, const TrigPassFlags *, HLT::NavigationCore *)</argsstring>
        <name>getFlags</name>
        <param>
          <type>const <ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Trig::Feature</ref>&lt; EmTau_ROI &gt; &amp;</type>
          <defname>f</defname>
        </param>
        <param>
          <type>const <ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref> *</type>
          <defname>orig_tpf</defname>
        </param>
        <param>
          <type>HLT::NavigationCore *</type>
          <defname>navigation</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/src/FeatureCollectAthena.cxx" line="140"/>
      </memberdef>
      <memberdef kind="function" id="de/d34/namespaceTrig_1_1FeatureAccessImpl_1aec36a9b6cddbdcf8a05a0adf89806fb6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref></type>
        <definition>TrigPassFlags Trig::FeatureAccessImpl::getFlags</definition>
        <argsstring>(const Trig::Feature&lt; Muon_ROI &gt; &amp;, const TrigPassFlags *, HLT::NavigationCore *)</argsstring>
        <name>getFlags</name>
        <param>
          <type>const <ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Trig::Feature</ref>&lt; Muon_ROI &gt; &amp;</type>
          <defname>f</defname>
        </param>
        <param>
          <type>const <ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref> *</type>
          <defname>orig_tpf</defname>
        </param>
        <param>
          <type>HLT::NavigationCore *</type>
          <defname>navigation</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/src/FeatureCollectAthena.cxx" line="144"/>
      </memberdef>
      <memberdef kind="function" id="de/d34/namespaceTrig_1_1FeatureAccessImpl_1a8af501f4b825b1df2afa8dcfbd9f9df1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref></type>
        <definition>TrigPassFlags Trig::FeatureAccessImpl::getFlags</definition>
        <argsstring>(const Trig::Feature&lt; Jet_ROI &gt; &amp;, const TrigPassFlags *, HLT::NavigationCore *)</argsstring>
        <name>getFlags</name>
        <param>
          <type>const <ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Trig::Feature</ref>&lt; Jet_ROI &gt; &amp;</type>
          <defname>f</defname>
        </param>
        <param>
          <type>const <ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref> *</type>
          <defname>orig_tpf</defname>
        </param>
        <param>
          <type>HLT::NavigationCore *</type>
          <defname>navigation</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/src/FeatureCollectAthena.cxx" line="148"/>
      </memberdef>
      <memberdef kind="function" id="de/d34/namespaceTrig_1_1FeatureAccessImpl_1a4f40b652bcc33db2d16479341d2345c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
        </templateparamlist>
        <type>const boost::disable_if_c&lt; <ref refid="db/d37/structTrig_1_1FeatureAccessImpl_1_1isDataVector" kindref="compound">isDataVector</ref>&lt; <ref refid="d1/def/classT" kindref="compound">T</ref> &gt;::value, <ref refid="d1/def/classT" kindref="compound">T</ref> &gt;::type *</type>
        <definition>const boost::enable_if_c&lt; isDataVector&lt; T &gt;::value, T &gt;::type * Trig::FeatureAccessImpl::use_or_construct</definition>
        <argsstring>(const T *source, const HLT::TriggerElement *, const std::string &amp;, unsigned int, HLT::NavigationCore *)</argsstring>
        <name>use_or_construct</name>
        <param>
          <type>const <ref refid="d1/def/classT" kindref="compound">T</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const <ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound">HLT::TriggerElement</ref> *</type>
          <defname>te</defname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <defname>label</defname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>int</declname>
          <defname>condition</defname>
        </param>
        <param>
          <type>HLT::NavigationCore *</type>
          <defname>navigation</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureCollectAthena.h" line="95" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureCollectAthena.h" bodystart="103" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="de/d34/namespaceTrig_1_1FeatureAccessImpl_1a6a26bc0bd981bbf28c31ad8ffd44f525" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Trig::FeatureAccessImpl::collect</definition>
        <argsstring>(const HLT::TriggerElement *te, std::vector&lt; Trig::Feature&lt; T &gt; &gt; &amp;data, const std::string &amp;label, unsigned int condition, const std::string &amp;teName, HLT::TrigNavStructure *navstructure)</argsstring>
        <name>collect</name>
        <param>
          <type>const <ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound">HLT::TriggerElement</ref> *</type>
          <declname>te</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Trig::Feature</ref>&lt; <ref refid="d1/def/classT" kindref="compound">T</ref> &gt; &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>condition</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>teName</declname>
        </param>
        <param>
          <type><ref refid="d9/d08/classHLT_1_1TrigNavStructure" kindref="compound">HLT::TrigNavStructure</ref> *</type>
          <declname>navstructure</declname>
        </param>
        <briefdescription>
<para>actual feature acceess implementation It has (thanks to the ClassTraits) functionality to flatten containers of containers. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureCollectAthena.h" line="289" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureCollectAthena.h" bodystart="288" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="de/d34/namespaceTrig_1_1FeatureAccessImpl_1a48e604057ecdb76415d00da3d42abead" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CONT</type>
          </param>
        </templateparamlist>
        <type><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref></type>
        <definition>TrigPassFlags Trig::FeatureAccessImpl::build_flags</definition>
        <argsstring>(const typename boost::enable_if_c&lt; isDataVector&lt; CONT &gt;::value, CONT &gt;::type *orig_cont, const CONT *cont, const TrigPassFlags *orig_tpf)</argsstring>
        <name>build_flags</name>
        <param>
          <type>const typename boost::enable_if_c&lt; <ref refid="db/d37/structTrig_1_1FeatureAccessImpl_1_1isDataVector" kindref="compound">isDataVector</ref>&lt; CONT &gt;::value, CONT &gt;::type *</type>
          <declname>orig_cont</declname>
        </param>
        <param>
          <type>const CONT *</type>
          <declname>cont</declname>
        </param>
        <param>
          <type>const <ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref> *</type>
          <declname>orig_tpf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureCollectAthena.h" line="351" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureCollectAthena.h" bodystart="351" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="de/d34/namespaceTrig_1_1FeatureAccessImpl_1a902607295d4e922055aba52fc4d8463d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref></type>
        <definition>TrigPassFlags Trig::FeatureAccessImpl::build_flags</definition>
        <argsstring>(const typename boost::disable_if_c&lt; isDataVector&lt; T &gt;::value, T &gt;::type *orig, const T *feature, const TrigPassFlags *orig_tpf)</argsstring>
        <name>build_flags</name>
        <param>
          <type>const typename boost::disable_if_c&lt; <ref refid="db/d37/structTrig_1_1FeatureAccessImpl_1_1isDataVector" kindref="compound">isDataVector</ref>&lt; <ref refid="d1/def/classT" kindref="compound">T</ref> &gt;::value, <ref refid="d1/def/classT" kindref="compound">T</ref> &gt;::type *</type>
          <declname>orig</declname>
        </param>
        <param>
          <type>const <ref refid="d1/def/classT" kindref="compound">T</ref> *</type>
          <declname>feature</declname>
        </param>
        <param>
          <type>const <ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref> *</type>
          <declname>orig_tpf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureCollectAthena.h" line="377" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureCollectAthena.h" bodystart="377" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="de/d34/namespaceTrig_1_1FeatureAccessImpl_1affd3d404e25e0347e3bf6766bcf990fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
          <param>
            <type>class STORED</type>
          </param>
        </templateparamlist>
        <type><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref></type>
        <definition>TrigPassFlags Trig::FeatureAccessImpl::build_flags2</definition>
        <argsstring>(const STORED *orig_cont, const T *obj, const TrigPassFlags *orig_tpf)</argsstring>
        <name>build_flags2</name>
        <param>
          <type>const STORED *</type>
          <declname>orig_cont</declname>
        </param>
        <param>
          <type>const <ref refid="d1/def/classT" kindref="compound">T</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const <ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref> *</type>
          <declname>orig_tpf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureCollectAthena.h" line="390" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureCollectAthena.h" bodystart="389" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="de/d34/namespaceTrig_1_1FeatureAccessImpl_1a1e768d6d728c78e3cb183f7d765d7c99" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref></type>
        <definition>TrigPassFlags Trig::FeatureAccessImpl::getFlags</definition>
        <argsstring>(const Trig::Feature&lt; T &gt; &amp;f, const TrigPassFlags *orig_tpf, HLT::NavigationCore *navigation)</argsstring>
        <name>getFlags</name>
        <param>
          <type>const <ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Trig::Feature</ref>&lt; <ref refid="d1/def/classT" kindref="compound">T</ref> &gt; &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const <ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref> *</type>
          <declname>orig_tpf</declname>
        </param>
        <param>
          <type>HLT::NavigationCore *</type>
          <declname>navigation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureCollectAthena.h" line="435" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureCollectAthena.h" bodystart="435" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="de/d34/namespaceTrig_1_1FeatureAccessImpl_1a4e237523967b8d118144c493f169073f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename REQUESTED</type>
          </param>
          <param>
            <type>typename STORED</type>
          </param>
          <param>
            <type>typename CONTAINER</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; <ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Trig::Feature</ref>&lt; REQUESTED &gt; &gt;</type>
        <definition>std::vector&lt; Trig::Feature&lt; REQUESTED &gt; &gt; Trig::FeatureAccessImpl::typedGet</definition>
        <argsstring>(const std::vector&lt; TypelessFeature &gt; &amp;features, HLT::TrigNavStructure *navigation, EventPtr_t store, const std::string &amp;container_name=ClassID_traits&lt; CONTAINER &gt;::typeName())</argsstring>
        <name>typedGet</name>
        <param>
          <type>const std::vector&lt; <ref refid="de/dd5/classTrig_1_1TypelessFeature" kindref="compound">TypelessFeature</ref> &gt; &amp;</type>
          <declname>features</declname>
        </param>
        <param>
          <type><ref refid="d9/d08/classHLT_1_1TrigNavStructure" kindref="compound">HLT::TrigNavStructure</ref> *</type>
          <declname>navigation</declname>
        </param>
        <param>
          <type><ref refid="dd/d95/classStoreGateSvc" kindref="compound">EventPtr_t</ref></type>
          <declname>store</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>container_name</declname>
          <defval><ref refid="d0/dbd/structClassID__traits" kindref="compound">ClassID_traits</ref>&lt; CONTAINER &gt;::typeName()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureCollectStandalone.h" line="66" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureCollectStandalone.h" bodystart="123" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="de/d34/namespaceTrig_1_1FeatureAccessImpl_1a4d78a1bcb2450c854b52bec042f08e17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename STORED</type>
          </param>
          <param>
            <type>typename REQUESTED</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Trig::FeatureAccessImpl::insert_element</definition>
        <argsstring>(std::vector&lt; Trig::Feature&lt; REQUESTED &gt; &gt; &amp;, Trig::TypelessFeature &amp;, const STORED *)</argsstring>
        <name>insert_element</name>
        <param>
          <type>std::vector&lt; <ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Trig::Feature</ref>&lt; REQUESTED &gt; &gt; &amp;</type>
        </param>
        <param>
          <type><ref refid="de/dd5/classTrig_1_1TypelessFeature" kindref="compound">Trig::TypelessFeature</ref> &amp;</type>
        </param>
        <param>
          <type>const STORED *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureCollectStandalone.h" line="73"/>
      </memberdef>
      <memberdef kind="function" id="de/d34/namespaceTrig_1_1FeatureAccessImpl_1a0da115c3fc13cd969257b07df8b8994f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename REQUESTED</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Trig::FeatureAccessImpl::insert_element</definition>
        <argsstring>(std::vector&lt; Trig::Feature&lt; REQUESTED &gt; &gt; &amp;result, Trig::TypelessFeature &amp;feature, const REQUESTED *element)</argsstring>
        <name>insert_element</name>
        <param>
          <type>std::vector&lt; <ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Trig::Feature</ref>&lt; REQUESTED &gt; &gt; &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="de/dd5/classTrig_1_1TypelessFeature" kindref="compound">Trig::TypelessFeature</ref> &amp;</type>
          <declname>feature</declname>
        </param>
        <param>
          <type>const REQUESTED *</type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureCollectStandalone.h" line="76" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureCollectStandalone.h" bodystart="76" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="de/d34/namespaceTrig_1_1FeatureAccessImpl_1a392a6b06dbed58ad8140cc39365c3363" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename STORED</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Trig::FeatureAccessImpl::insert_flatten_if</definition>
        <argsstring>(std::vector&lt; Trig::Feature&lt; STORED &gt; &gt; &amp;result, const Trig::TypelessFeature &amp;feature, const std::shared_ptr&lt; const STORED &gt; &amp;newfeature)</argsstring>
        <name>insert_flatten_if</name>
        <param>
          <type>std::vector&lt; <ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Trig::Feature</ref>&lt; STORED &gt; &gt; &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="de/dd5/classTrig_1_1TypelessFeature" kindref="compound">Trig::TypelessFeature</ref> &amp;</type>
          <declname>feature</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; const STORED &gt; &amp;</type>
          <declname>newfeature</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureCollectStandalone.h" line="82" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureCollectStandalone.h" bodystart="82" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="de/d34/namespaceTrig_1_1FeatureAccessImpl_1a870e42bfd3d10409dfec050fd13899aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename REQUESTED</type>
          </param>
          <param>
            <type>typename STORED</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Trig::FeatureAccessImpl::insert_flatten_if</definition>
        <argsstring>(std::vector&lt; Trig::Feature&lt; REQUESTED &gt; &gt; &amp;result, const Trig::TypelessFeature &amp;feature, const std::shared_ptr&lt; const STORED &gt; &amp;newfeature)</argsstring>
        <name>insert_flatten_if</name>
        <param>
          <type>std::vector&lt; <ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Trig::Feature</ref>&lt; REQUESTED &gt; &gt; &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="de/dd5/classTrig_1_1TypelessFeature" kindref="compound">Trig::TypelessFeature</ref> &amp;</type>
          <declname>feature</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; const STORED &gt; &amp;</type>
          <declname>newfeature</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureCollectStandalone.h" line="87" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureCollectStandalone.h" bodystart="87" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="de/d34/namespaceTrig_1_1FeatureAccessImpl_1a29ea00fa2f9a9770aef3b34de14fd168" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename STORED</type>
          </param>
        </templateparamlist>
        <type>std::shared_ptr&lt; const STORED &gt;</type>
        <definition>std::shared_ptr&lt;const STORED&gt; Trig::FeatureAccessImpl::filter_if</definition>
        <argsstring>(boost::mpl::bool_&lt; true &gt; is_same, std::shared_ptr&lt; const STORED &gt; &amp;original, const TrigPassBits *bits)</argsstring>
        <name>filter_if</name>
        <param>
          <type>boost::mpl::bool_&lt; true &gt;</type>
          <declname>is_same</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; const STORED &gt; &amp;</type>
          <declname>original</declname>
        </param>
        <param>
          <type>const <ref refid="d9/d20/classTrigPassBits" kindref="compound">TrigPassBits</ref> *</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureCollectStandalone.h" line="95" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureCollectStandalone.h" bodystart="95" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="de/d34/namespaceTrig_1_1FeatureAccessImpl_1ab9d257a11c5c9ee46479cca8fe1459d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename STORED</type>
          </param>
        </templateparamlist>
        <type>std::shared_ptr&lt; const STORED &gt;</type>
        <definition>std::shared_ptr&lt;const STORED&gt; Trig::FeatureAccessImpl::filter_if</definition>
        <argsstring>(boost::mpl::bool_&lt; false &gt;, std::shared_ptr&lt; const STORED &gt; &amp;original, const TrigPassBits *)</argsstring>
        <name>filter_if</name>
        <param>
          <type>boost::mpl::bool_&lt; false &gt;</type>
        </param>
        <param>
          <type>std::shared_ptr&lt; const STORED &gt; &amp;</type>
          <declname>original</declname>
        </param>
        <param>
          <type>const <ref refid="d9/d20/classTrigPassBits" kindref="compound">TrigPassBits</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureCollectStandalone.h" line="117" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureCollectStandalone.h" bodystart="117" bodyend="120"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This is the implementation of the <ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Feature</ref> collection for <ref refid="d5/dc5/namespaceAthena" kindref="compound">Athena</ref></para><para>This is the implementation of the <ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Feature</ref> collection for ASG </para>    </detaileddescription>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/Root/FeatureCollectStandalone.cxx" line="19"/>
  </compounddef>
</doxygen>
