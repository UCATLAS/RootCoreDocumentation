<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="de/d65/classxAOD_1_1AuxContainerBase" kind="class" prot="public">
    <compoundname>xAOD::AuxContainerBase</compoundname>
    <basecompoundref refid="dc/d05/classSG_1_1IAuxStore" prot="public" virt="non-virtual">SG::IAuxStore</basecompoundref>
    <basecompoundref refid="db/d37/classSG_1_1IAuxStoreIO" prot="public" virt="non-virtual">SG::IAuxStoreIO</basecompoundref>
    <basecompoundref refid="dc/d42/classSG_1_1IAuxStoreHolder" prot="public" virt="non-virtual">SG::IAuxStoreHolder</basecompoundref>
    <derivedcompoundref refid="de/d34/classBreakableAuxContainer" prot="public" virt="non-virtual">BreakableAuxContainer</derivedcompoundref>
    <derivedcompoundref refid="d2/dcb/classxAOD_1_1AFPDataAuxContainer__v1" prot="public" virt="non-virtual">xAOD::AFPDataAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="df/d12/classxAOD_1_1AFPSiHitAuxContainer__v1" prot="public" virt="non-virtual">xAOD::AFPSiHitAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d7/da4/classxAOD_1_1AFPTrackAuxContainer__v1" prot="public" virt="non-virtual">xAOD::AFPTrackAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="df/d19/classxAOD_1_1ALFADataAuxContainer__v1" prot="public" virt="non-virtual">xAOD::ALFADataAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="dd/d9e/classxAOD_1_1BCMRawDataAuxContainer__v1" prot="public" virt="non-virtual">xAOD::BCMRawDataAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d3/db5/classxAOD_1_1BTaggingAuxContainer__v1" prot="public" virt="non-virtual">xAOD::BTaggingAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d9/d96/classxAOD_1_1BTaggingTrigAuxContainer__v1" prot="public" virt="non-virtual">xAOD::BTaggingTrigAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="dd/da7/classxAOD_1_1BTagVertexAuxContainer__v1" prot="public" virt="non-virtual">xAOD::BTagVertexAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d8/dcc/classxAOD_1_1BunchConfAuxContainer__v1" prot="public" virt="non-virtual">xAOD::BunchConfAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d9/d78/classxAOD_1_1CaloClusterAuxContainer__v1" prot="public" virt="non-virtual">xAOD::CaloClusterAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="dd/d85/classxAOD_1_1CaloClusterAuxContainer__v2" prot="public" virt="non-virtual">xAOD::CaloClusterAuxContainer_v2</derivedcompoundref>
    <derivedcompoundref refid="d1/dd4/classxAOD_1_1CaloClusterTrigAuxContainer__v1" prot="public" virt="non-virtual">xAOD::CaloClusterTrigAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="dd/dff/classxAOD_1_1CaloTowerAuxContainer__v1" prot="public" virt="non-virtual">xAOD::CaloTowerAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d2/de1/classxAOD_1_1CMMCPHitsAuxContainer__v1" prot="public" virt="non-virtual">xAOD::CMMCPHitsAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d8/d52/classxAOD_1_1CMMEtSumsAuxContainer__v1" prot="public" virt="non-virtual">xAOD::CMMEtSumsAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d8/dda/classxAOD_1_1CMMJetHitsAuxContainer__v1" prot="public" virt="non-virtual">xAOD::CMMJetHitsAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d9/d21/classxAOD_1_1CMXCPHitsAuxContainer__v1" prot="public" virt="non-virtual">xAOD::CMXCPHitsAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d7/d8f/classxAOD_1_1CMXCPTobAuxContainer__v1" prot="public" virt="non-virtual">xAOD::CMXCPTobAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d2/d7b/classxAOD_1_1CMXEtSumsAuxContainer__v1" prot="public" virt="non-virtual">xAOD::CMXEtSumsAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d4/d33/classxAOD_1_1CMXJetHitsAuxContainer__v1" prot="public" virt="non-virtual">xAOD::CMXJetHitsAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="dc/d8a/classxAOD_1_1CMXJetTobAuxContainer__v1" prot="public" virt="non-virtual">xAOD::CMXJetTobAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d5/d22/classxAOD_1_1CMXRoIAuxContainer__v1" prot="public" virt="non-virtual">xAOD::CMXRoIAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d0/d4d/classxAOD_1_1CompositeParticleAuxContainer__v1" prot="public" virt="non-virtual">xAOD::CompositeParticleAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d3/d5c/classxAOD_1_1CPMHitsAuxContainer__v1" prot="public" virt="non-virtual">xAOD::CPMHitsAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="de/d6c/classxAOD_1_1CPMRoIAuxContainer__v1" prot="public" virt="non-virtual">xAOD::CPMRoIAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d8/dd3/classxAOD_1_1CPMTobRoIAuxContainer__v1" prot="public" virt="non-virtual">xAOD::CPMTobRoIAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d1/d23/classxAOD_1_1CPMTowerAuxContainer__v1" prot="public" virt="non-virtual">xAOD::CPMTowerAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="de/d8f/classxAOD_1_1CPMTowerAuxContainer__v2" prot="public" virt="non-virtual">xAOD::CPMTowerAuxContainer_v2</derivedcompoundref>
    <derivedcompoundref refid="d4/de9/classxAOD_1_1CutBookkeeperAuxContainer__v1" prot="public" virt="non-virtual">xAOD::CutBookkeeperAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d0/d4a/classxAOD_1_1DiTauJetAuxContainer__v1" prot="public" virt="non-virtual">xAOD::DiTauJetAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d9/d23/classxAOD_1_1EgammaAuxContainer__v1" prot="public" virt="non-virtual">xAOD::EgammaAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d8/dcf/classxAOD_1_1ElectronAuxContainer__v2" prot="public" virt="non-virtual">xAOD::ElectronAuxContainer_v2</derivedcompoundref>
    <derivedcompoundref refid="d8/dde/classxAOD_1_1ElectronAuxContainer__v3" prot="public" virt="non-virtual">xAOD::ElectronAuxContainer_v3</derivedcompoundref>
    <derivedcompoundref refid="d2/d55/classxAOD_1_1ElectronTrigAuxContainer__v1" prot="public" virt="non-virtual">xAOD::ElectronTrigAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="db/db7/classxAOD_1_1EmTauRoIAuxContainer__v1" prot="public" virt="non-virtual">xAOD::EmTauRoIAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d2/d5d/classxAOD_1_1EmTauRoIAuxContainer__v2" prot="public" virt="non-virtual">xAOD::EmTauRoIAuxContainer_v2</derivedcompoundref>
    <derivedcompoundref refid="d5/d41/classxAOD_1_1EventInfoAuxContainer__v1" prot="public" virt="non-virtual">xAOD::EventInfoAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="df/dab/classxAOD_1_1ForwardEventInfoAuxContainer__v1" prot="public" virt="non-virtual">xAOD::ForwardEventInfoAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="df/d4e/classxAOD_1_1HIEventShapeAuxContainer__v1" prot="public" virt="non-virtual">xAOD::HIEventShapeAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="dd/d98/classxAOD_1_1HIEventShapeAuxContainer__v2" prot="public" virt="non-virtual">xAOD::HIEventShapeAuxContainer_v2</derivedcompoundref>
    <derivedcompoundref refid="dc/d27/classxAOD_1_1JEMEtSumsAuxContainer__v1" prot="public" virt="non-virtual">xAOD::JEMEtSumsAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d5/d49/classxAOD_1_1JEMEtSumsAuxContainer__v2" prot="public" virt="non-virtual">xAOD::JEMEtSumsAuxContainer_v2</derivedcompoundref>
    <derivedcompoundref refid="d7/d49/classxAOD_1_1JEMHitsAuxContainer__v1" prot="public" virt="non-virtual">xAOD::JEMHitsAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="df/df8/classxAOD_1_1JEMRoIAuxContainer__v1" prot="public" virt="non-virtual">xAOD::JEMRoIAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="de/dde/classxAOD_1_1JEMTobRoIAuxContainer__v1" prot="public" virt="non-virtual">xAOD::JEMTobRoIAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d6/dc1/classxAOD_1_1JetAuxContainer__v1" prot="public" virt="non-virtual">xAOD::JetAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d4/dd6/classxAOD_1_1JetElementAuxContainer__v1" prot="public" virt="non-virtual">xAOD::JetElementAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="df/df9/classxAOD_1_1JetElementAuxContainer__v2" prot="public" virt="non-virtual">xAOD::JetElementAuxContainer_v2</derivedcompoundref>
    <derivedcompoundref refid="d5/da1/classxAOD_1_1JetRoIAuxContainer__v1" prot="public" virt="non-virtual">xAOD::JetRoIAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="dc/de3/classxAOD_1_1JetRoIAuxContainer__v2" prot="public" virt="non-virtual">xAOD::JetRoIAuxContainer_v2</derivedcompoundref>
    <derivedcompoundref refid="d3/d70/classxAOD_1_1L1TopoRawDataAuxContainer__v1" prot="public" virt="non-virtual">xAOD::L1TopoRawDataAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d2/dd9/classxAOD_1_1L2CombinedMuonAuxContainer__v1" prot="public" virt="non-virtual">xAOD::L2CombinedMuonAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="dc/d9c/classxAOD_1_1L2IsoMuonAuxContainer__v1" prot="public" virt="non-virtual">xAOD::L2IsoMuonAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="de/d6f/classxAOD_1_1L2StandAloneMuonAuxContainer__v1" prot="public" virt="non-virtual">xAOD::L2StandAloneMuonAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="de/d00/classxAOD_1_1L2StandAloneMuonAuxContainer__v2" prot="public" virt="non-virtual">xAOD::L2StandAloneMuonAuxContainer_v2</derivedcompoundref>
    <derivedcompoundref refid="d2/dbf/classxAOD_1_1LumiBlockRangeAuxContainer__v1" prot="public" virt="non-virtual">xAOD::LumiBlockRangeAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d8/d0e/classxAOD_1_1MBTSModuleAuxContainer__v1" prot="public" virt="non-virtual">xAOD::MBTSModuleAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="db/d72/classxAOD_1_1MissingETAuxAssociationMap__v1" prot="public" virt="non-virtual">xAOD::MissingETAuxAssociationMap_v1</derivedcompoundref>
    <derivedcompoundref refid="d4/db2/classxAOD_1_1MissingETAuxAssociationMap__v2" prot="public" virt="non-virtual">xAOD::MissingETAuxAssociationMap_v2</derivedcompoundref>
    <derivedcompoundref refid="da/ddb/classxAOD_1_1MissingETAuxComponentMap__v1" prot="public" virt="non-virtual">xAOD::MissingETAuxComponentMap_v1</derivedcompoundref>
    <derivedcompoundref refid="d9/dbe/classxAOD_1_1MissingETAuxContainer__v1" prot="public" virt="non-virtual">xAOD::MissingETAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d2/d02/classxAOD_1_1MuonAuxContainer__v1" prot="public" virt="non-virtual">xAOD::MuonAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="dc/d51/classxAOD_1_1MuonAuxContainer__v2" prot="public" virt="non-virtual">xAOD::MuonAuxContainer_v2</derivedcompoundref>
    <derivedcompoundref refid="d9/d01/classxAOD_1_1MuonAuxContainer__v3" prot="public" virt="non-virtual">xAOD::MuonAuxContainer_v3</derivedcompoundref>
    <derivedcompoundref refid="d7/d59/classxAOD_1_1MuonRoIAuxContainer__v1" prot="public" virt="non-virtual">xAOD::MuonRoIAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="df/da2/classxAOD_1_1MuonSegmentAuxContainer__v1" prot="public" virt="non-virtual">xAOD::MuonSegmentAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="da/dcf/classxAOD_1_1NeutralParticleAuxContainer__v1" prot="public" virt="non-virtual">xAOD::NeutralParticleAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d1/d9d/classxAOD_1_1ParticleAuxContainer__v1" prot="public" virt="non-virtual">xAOD::ParticleAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d2/d07/classxAOD_1_1PFOAuxContainer__v1" prot="public" virt="non-virtual">xAOD::PFOAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="da/d08/classxAOD_1_1PhotonAuxContainer__v2" prot="public" virt="non-virtual">xAOD::PhotonAuxContainer_v2</derivedcompoundref>
    <derivedcompoundref refid="df/d1b/classxAOD_1_1PhotonAuxContainer__v3" prot="public" virt="non-virtual">xAOD::PhotonAuxContainer_v3</derivedcompoundref>
    <derivedcompoundref refid="db/d66/classxAOD_1_1PhotonTrigAuxContainer__v1" prot="public" virt="non-virtual">xAOD::PhotonTrigAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d2/d8e/classxAOD_1_1RODHeaderAuxContainer__v1" prot="public" virt="non-virtual">xAOD::RODHeaderAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d3/d5e/classxAOD_1_1RODHeaderAuxContainer__v2" prot="public" virt="non-virtual">xAOD::RODHeaderAuxContainer_v2</derivedcompoundref>
    <derivedcompoundref refid="df/d41/classxAOD_1_1SCTRawHitValidationAuxContainer__v1" prot="public" virt="non-virtual">xAOD::SCTRawHitValidationAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d9/d19/classxAOD_1_1SlowMuonAuxContainer__v1" prot="public" virt="non-virtual">xAOD::SlowMuonAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d0/d6a/classxAOD_1_1TauJetAuxContainer__v1" prot="public" virt="non-virtual">xAOD::TauJetAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d3/d84/classxAOD_1_1TauJetAuxContainer__v2" prot="public" virt="non-virtual">xAOD::TauJetAuxContainer_v2</derivedcompoundref>
    <derivedcompoundref refid="d4/da2/classxAOD_1_1TrackMeasurementValidationAuxContainer__v1" prot="public" virt="non-virtual">xAOD::TrackMeasurementValidationAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d7/d63/classxAOD_1_1TrackParticleAuxContainer__v1" prot="public" virt="non-virtual">xAOD::TrackParticleAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="db/d68/classxAOD_1_1TrackParticleAuxContainer__v2" prot="public" virt="non-virtual">xAOD::TrackParticleAuxContainer_v2</derivedcompoundref>
    <derivedcompoundref refid="da/d17/classxAOD_1_1TrackParticleAuxContainer__v3" prot="public" virt="non-virtual">xAOD::TrackParticleAuxContainer_v3</derivedcompoundref>
    <derivedcompoundref refid="dc/d51/classxAOD_1_1TrackParticleClusterAssociationAuxContainer__v1" prot="public" virt="non-virtual">xAOD::TrackParticleClusterAssociationAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="dc/d2d/classxAOD_1_1TrackStateValidationAuxContainer__v1" prot="public" virt="non-virtual">xAOD::TrackStateValidationAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d1/dc6/classxAOD_1_1TrigBphysAuxContainer__v1" prot="public" virt="non-virtual">xAOD::TrigBphysAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d8/d1a/classxAOD_1_1TrigCaloClusterAuxContainer__v1" prot="public" virt="non-virtual">xAOD::TrigCaloClusterAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d0/d41/classxAOD_1_1TrigElectronAuxContainer__v1" prot="public" virt="non-virtual">xAOD::TrigElectronAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d4/d60/classxAOD_1_1TrigEMClusterAuxContainer__v2" prot="public" virt="non-virtual">xAOD::TrigEMClusterAuxContainer_v2</derivedcompoundref>
    <derivedcompoundref refid="dc/d5a/classxAOD_1_1TriggerMenuAuxContainer__v1" prot="public" virt="non-virtual">xAOD::TriggerMenuAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d0/d37/classxAOD_1_1TriggerTowerAuxContainer__v1" prot="public" virt="non-virtual">xAOD::TriggerTowerAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d2/daf/classxAOD_1_1TriggerTowerAuxContainer__v2" prot="public" virt="non-virtual">xAOD::TriggerTowerAuxContainer_v2</derivedcompoundref>
    <derivedcompoundref refid="dd/d0e/classxAOD_1_1TrigHisto2DAuxContainer__v1" prot="public" virt="non-virtual">xAOD::TrigHisto2DAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d3/dea/classxAOD_1_1TrigMissingETAuxContainer__v1" prot="public" virt="non-virtual">xAOD::TrigMissingETAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d6/d51/classxAOD_1_1TrigPassBitsAuxContainer__v1" prot="public" virt="non-virtual">xAOD::TrigPassBitsAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="de/dac/classxAOD_1_1TrigPhotonAuxContainer__v1" prot="public" virt="non-virtual">xAOD::TrigPhotonAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="dc/d2d/classxAOD_1_1TrigRingerRingsAuxContainer__v1" prot="public" virt="non-virtual">xAOD::TrigRingerRingsAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="da/d42/classxAOD_1_1TrigRingerRingsAuxContainer__v2" prot="public" virt="non-virtual">xAOD::TrigRingerRingsAuxContainer_v2</derivedcompoundref>
    <derivedcompoundref refid="d8/d81/classxAOD_1_1TrigRNNOutputAuxContainer__v1" prot="public" virt="non-virtual">xAOD::TrigRNNOutputAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d0/d06/classxAOD_1_1TrigRNNOutputAuxContainer__v2" prot="public" virt="non-virtual">xAOD::TrigRNNOutputAuxContainer_v2</derivedcompoundref>
    <derivedcompoundref refid="d1/dd2/classxAOD_1_1TrigSpacePointCountsAuxContainer__v1" prot="public" virt="non-virtual">xAOD::TrigSpacePointCountsAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d8/dad/classxAOD_1_1TrigT2MbtsBitsAuxContainer__v1" prot="public" virt="non-virtual">xAOD::TrigT2MbtsBitsAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d7/dac/classxAOD_1_1TrigT2ZdcSignalsAuxContainer__v1" prot="public" virt="non-virtual">xAOD::TrigT2ZdcSignalsAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d9/d78/classxAOD_1_1TrigTrackCountsAuxContainer__v1" prot="public" virt="non-virtual">xAOD::TrigTrackCountsAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d0/d7e/classxAOD_1_1TrigVertexCountsAuxContainer__v1" prot="public" virt="non-virtual">xAOD::TrigVertexCountsAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d8/d7f/classxAOD_1_1TruthEventAuxContainer__v1" prot="public" virt="non-virtual">xAOD::TruthEventAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d7/dc3/classxAOD_1_1TruthMetaDataAuxContainer__v1" prot="public" virt="non-virtual">xAOD::TruthMetaDataAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="da/de8/classxAOD_1_1TruthParticleAuxContainer__v1" prot="public" virt="non-virtual">xAOD::TruthParticleAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="d8/ddf/classxAOD_1_1TruthPileupEventAuxContainer__v1" prot="public" virt="non-virtual">xAOD::TruthPileupEventAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="db/d75/classxAOD_1_1TruthVertexAuxContainer__v1" prot="public" virt="non-virtual">xAOD::TruthVertexAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="df/d95/classxAOD_1_1VertexAuxContainer__v1" prot="public" virt="non-virtual">xAOD::VertexAuxContainer_v1</derivedcompoundref>
    <derivedcompoundref refid="de/d88/classxAOD_1_1ZdcModuleAuxContainer__v1" prot="public" virt="non-virtual">xAOD::ZdcModuleAuxContainer_v1</derivedcompoundref>
    <includes refid="d0/d70/AuxContainerBase_8h" local="no">AuxContainerBase.h</includes>
    <innerclass refid="dd/d37/structxAOD_1_1AuxContainerBase_1_1TSAuxidSet" prot="private">xAOD::AuxContainerBase::TSAuxidSet</innerclass>
      <sectiondef kind="user-defined">
      <header>Functions implementing the SG::IAuxStoreHolder interface</header>
      <description><para><anchor id="_1amgrpb1d942c7d59298c451f4641067ca2f65"/> </para></description>
      <memberdef kind="function" id="de/d65/classxAOD_1_1AuxContainerBase_1a95c2ba90ffb73ba97cc201f7ee161d97" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="dc/d05/classSG_1_1IAuxStore" kindref="compound">SG::IAuxStore</ref> *</type>
        <definition>SG::IAuxStore * xAOD::AuxContainerBase::getStore</definition>
        <argsstring>() const </argsstring>
        <name>getStore</name>
        <reimplements refid="dc/d42/classSG_1_1IAuxStoreHolder_1ae8a47c0d7ed7325508cb94ca3570a5cd">getStore</reimplements>
        <briefdescription>
<para>Get the currently used internal store object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="73" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxContainerBase.cxx" bodystart="144" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="de/d65/classxAOD_1_1AuxContainerBase_1a73e7691d63ed2168a6dc034882e0501b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void xAOD::AuxContainerBase::setStore</definition>
        <argsstring>(SG::IAuxStore *store)</argsstring>
        <name>setStore</name>
        <reimplements refid="dc/d42/classSG_1_1IAuxStoreHolder_1aea3c4b6aa04dc1581af2c77562adb90d">setStore</reimplements>
        <param>
          <type><ref refid="dc/d05/classSG_1_1IAuxStore" kindref="compound">SG::IAuxStore</ref> *</type>
          <declname>store</declname>
        </param>
        <briefdescription>
<para>Set a different internal store object. </para>        </briefdescription>
        <detaileddescription>
<para>This function is used by the I/O infrastructure to possibly put a store object into this one, which can interact with dynamic variables directly.</para><para>Note that the object takes ownership of the received store.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>store</parametername>
</parameternamelist>
<parameterdescription>
<para>The store that should be used for dynamic variable handling inside the object from now on </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="75" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxContainerBase.cxx" bodystart="158" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="de/d65/classxAOD_1_1AuxContainerBase_1a39e74adfd119e834ec218f897d790cfb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="dc/d42/classSG_1_1IAuxStoreHolder_1a52b405d522a75932698443c3f01611f9" kindref="member">AuxStoreType</ref></type>
        <definition>virtual AuxStoreType xAOD::AuxContainerBase::getStoreType</definition>
        <argsstring>() const </argsstring>
        <name>getStoreType</name>
        <reimplements refid="dc/d42/classSG_1_1IAuxStoreHolder_1a5cbc4fb29e1ed8c561da079455790a24">getStoreType</reimplements>
        <briefdescription>
<para>Return the type of the store object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="77" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" bodystart="77" bodyend="77"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Functions implementing the SG::IConstAuxStore interface</header>
      <description><para><anchor id="_1amgrp923490749c1bddf7b538181b97b1ea70"/> </para></description>
      <memberdef kind="function" id="de/d65/classxAOD_1_1AuxContainerBase_1abd931077f3f670a7b466100fc19d7be6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const void *</type>
        <definition>const void * xAOD::AuxContainerBase::getData</definition>
        <argsstring>(auxid_t auxid) const </argsstring>
        <name>getData</name>
        <param>
          <type><ref refid="de/d65/classxAOD_1_1AuxContainerBase_1af1b96ab47e53693b6ac1fbc426f97ec1" kindref="member">auxid_t</ref></type>
          <declname>auxid</declname>
        </param>
        <briefdescription>
<para>Get a pointer to a given array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="85" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxContainerBase.cxx" bodystart="201" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="de/d65/classxAOD_1_1AuxContainerBase_1a7e2003cda04239dd53f2692982221a25" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">auxid_set_t</ref> &amp;</type>
        <definition>const AuxContainerBase::auxid_set_t &amp; xAOD::AuxContainerBase::getAuxIDs</definition>
        <argsstring>() const </argsstring>
        <name>getAuxIDs</name>
        <reimplements refid="d3/dd5/classSG_1_1IConstAuxStore_1a3be9ddcb2b1198c3cab03c7b94764a3d">getAuxIDs</reimplements>
        <briefdescription>
<para>Get the types(names) of variables handled by this container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="88" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxContainerBase.cxx" bodystart="232" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="de/d65/classxAOD_1_1AuxContainerBase_1af911ebaa620ad08df6d75899e27bd21b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void *</type>
        <definition>void * xAOD::AuxContainerBase::getDecoration</definition>
        <argsstring>(auxid_t auxid, size_t size, size_t capacity)</argsstring>
        <name>getDecoration</name>
        <param>
          <type><ref refid="de/d65/classxAOD_1_1AuxContainerBase_1af1b96ab47e53693b6ac1fbc426f97ec1" kindref="member">auxid_t</ref></type>
          <declname>auxid</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>capacity</declname>
        </param>
        <briefdescription>
<para>Get a pointer to a given array, as a decoration. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="92" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxContainerBase.cxx" bodystart="238" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="de/d65/classxAOD_1_1AuxContainerBase_1a52541675fc27e485d755e514a22fcf4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void xAOD::AuxContainerBase::lock</definition>
        <argsstring>()</argsstring>
        <name>lock</name>
        <reimplements refid="d3/dd5/classSG_1_1IConstAuxStore_1a6bf19cb8961665a0d4672e2d4f719aa5">lock</reimplements>
        <briefdescription>
<para>Lock the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="95" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxContainerBase.cxx" bodystart="278" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="de/d65/classxAOD_1_1AuxContainerBase_1a27c734e6ded2c198eb31c995e5febf31" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void xAOD::AuxContainerBase::clearDecorations</definition>
        <argsstring>()</argsstring>
        <name>clearDecorations</name>
        <reimplements refid="d3/dd5/classSG_1_1IConstAuxStore_1ab3dec2e6bc75789344ec9d31c8b8a3c3">clearDecorations</reimplements>
        <briefdescription>
<para>Clear all decorations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="98" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxContainerBase.cxx" bodystart="292" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="de/d65/classxAOD_1_1AuxContainerBase_1a1a8a180de3ed24bf7161ce0da86fdfb0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>size_t xAOD::AuxContainerBase::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <reimplements refid="d3/dd5/classSG_1_1IConstAuxStore_1af71be6076fcf09fd0f8c1d53e704548d">size</reimplements>
        <briefdescription>
<para>Get the size of the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="101" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxContainerBase.cxx" bodystart="322" bodyend="346"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Functions implementing the SG::IAuxStore interface</header>
      <description><para><anchor id="_1amgrp44b120bee999133a29277c27a0f31e6d"/> </para></description>
      <memberdef kind="function" id="de/d65/classxAOD_1_1AuxContainerBase_1a623c9fdb10a510db05133053b61bd2a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void *</type>
        <definition>void * xAOD::AuxContainerBase::getData</definition>
        <argsstring>(auxid_t auxid, size_t size, size_t capacity)</argsstring>
        <name>getData</name>
        <param>
          <type><ref refid="de/d65/classxAOD_1_1AuxContainerBase_1af1b96ab47e53693b6ac1fbc426f97ec1" kindref="member">auxid_t</ref></type>
          <declname>auxid</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>capacity</declname>
        </param>
        <briefdescription>
<para>Get a pointer to a given array, creating the array if necessary. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="110" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxContainerBase.cxx" bodystart="356" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="de/d65/classxAOD_1_1AuxContainerBase_1a3aad1dbe545c483a0facf9350a67724d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">auxid_set_t</ref> &amp;</type>
        <definition>const AuxContainerBase::auxid_set_t &amp; xAOD::AuxContainerBase::getWritableAuxIDs</definition>
        <argsstring>() const </argsstring>
        <name>getWritableAuxIDs</name>
        <reimplements refid="dc/d05/classSG_1_1IAuxStore_1a691e17d3a91d2733af73a4c5ae17e625">getWritableAuxIDs</reimplements>
        <briefdescription>
<para>Return a set of writable data identifiers. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="113" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxContainerBase.cxx" bodystart="387" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="de/d65/classxAOD_1_1AuxContainerBase_1a8e885c6f28a73c6e4e0bbd33b244f1c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void xAOD::AuxContainerBase::resize</definition>
        <argsstring>(size_t size)</argsstring>
        <name>resize</name>
        <reimplements refid="dc/d05/classSG_1_1IAuxStore_1a3e35266b4688361e2c804b68b73892e0">resize</reimplements>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Resize the arrays to a given size. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="116" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxContainerBase.cxx" bodystart="402" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="de/d65/classxAOD_1_1AuxContainerBase_1a459706651829d59a33ace8bbc49bc173" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void xAOD::AuxContainerBase::reserve</definition>
        <argsstring>(size_t size)</argsstring>
        <name>reserve</name>
        <reimplements refid="dc/d05/classSG_1_1IAuxStore_1a76c099cf5b1e88b8bdfebf4c014e4d1b">reserve</reimplements>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Reserve a given size for the arrays. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="118" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxContainerBase.cxx" bodystart="427" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="de/d65/classxAOD_1_1AuxContainerBase_1a2282b0bd500c18d2c3d3b52c2287999c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void xAOD::AuxContainerBase::shift</definition>
        <argsstring>(size_t pos, ptrdiff_t offs)</argsstring>
        <name>shift</name>
        <reimplements refid="dc/d05/classSG_1_1IAuxStore_1abd4ea23e3b5eb58f8e747daaf2279068">shift</reimplements>
        <param>
          <type>size_t</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>ptrdiff_t</type>
          <declname>offs</declname>
        </param>
        <briefdescription>
<para>Shift the contents of the stored arrays. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="120" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxContainerBase.cxx" bodystart="452" bodyend="475"/>
      </memberdef>
      <memberdef kind="function" id="de/d65/classxAOD_1_1AuxContainerBase_1a564074605df56f289545e81781b27c94" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool xAOD::AuxContainerBase::setOption</definition>
        <argsstring>(auxid_t id, const SG::AuxDataOption &amp;option)</argsstring>
        <name>setOption</name>
        <param>
          <type><ref refid="de/d65/classxAOD_1_1AuxContainerBase_1af1b96ab47e53693b6ac1fbc426f97ec1" kindref="member">auxid_t</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="d7/d31/classSG_1_1AuxDataOption" kindref="compound">SG::AuxDataOption</ref> &amp;</type>
          <declname>option</declname>
        </param>
        <briefdescription>
<para>Make an option setting on an aux variable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="122" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxContainerBase.cxx" bodystart="478" bodyend="488"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Functions implementing the SG::IAuxStoreIO interface</header>
      <description><para><anchor id="_1amgrp88b4583fe2141202fa4506158a6ce938"/> </para></description>
      <memberdef kind="function" id="de/d65/classxAOD_1_1AuxContainerBase_1a7152d204081065ad79e535d76f41e8db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const void *</type>
        <definition>const void * xAOD::AuxContainerBase::getIOData</definition>
        <argsstring>(auxid_t auxid) const </argsstring>
        <name>getIOData</name>
        <param>
          <type><ref refid="de/d65/classxAOD_1_1AuxContainerBase_1af1b96ab47e53693b6ac1fbc426f97ec1" kindref="member">auxid_t</ref></type>
          <declname>auxid</declname>
        </param>
        <briefdescription>
<para>Get a pointer to the data being stored for one aux data item. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="130" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxContainerBase.cxx" bodystart="499" bodyend="522"/>
      </memberdef>
      <memberdef kind="function" id="de/d65/classxAOD_1_1AuxContainerBase_1ae3851a65287f9115f7f6885e22662bf8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const std::type_info *</type>
        <definition>const std::type_info * xAOD::AuxContainerBase::getIOType</definition>
        <argsstring>(auxid_t auxid) const </argsstring>
        <name>getIOType</name>
        <param>
          <type><ref refid="de/d65/classxAOD_1_1AuxContainerBase_1af1b96ab47e53693b6ac1fbc426f97ec1" kindref="member">auxid_t</ref></type>
          <declname>auxid</declname>
        </param>
        <briefdescription>
<para>Return the type of the data to be stored for one aux data item. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="133" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxContainerBase.cxx" bodystart="524" bodyend="538"/>
      </memberdef>
      <memberdef kind="function" id="de/d65/classxAOD_1_1AuxContainerBase_1a92646d86c4946fb3841dc3f53ab04485" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">auxid_set_t</ref> &amp;</type>
        <definition>const AuxContainerBase::auxid_set_t &amp; xAOD::AuxContainerBase::getDynamicAuxIDs</definition>
        <argsstring>() const </argsstring>
        <name>getDynamicAuxIDs</name>
        <reimplements refid="db/d37/classSG_1_1IAuxStoreIO_1a09fa260bc3e6871d748d3342c602af69">getDynamicAuxIDs</reimplements>
        <briefdescription>
<para>Get the types(names) of variables created dynamically. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="136" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxContainerBase.cxx" bodystart="541" bodyend="558"/>
      </memberdef>
      <memberdef kind="function" id="de/d65/classxAOD_1_1AuxContainerBase_1ab69feb0eab5baa91ebb4750fd0a17c44" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void xAOD::AuxContainerBase::selectAux</definition>
        <argsstring>(const std::set&lt; std::string &gt; &amp;attributes)</argsstring>
        <name>selectAux</name>
        <reimplements refid="db/d37/classSG_1_1IAuxStoreIO_1a0ddbdecb0f824866d4dd51b666264a67">selectAux</reimplements>
        <param>
          <type>const std::set&lt; std::string &gt; &amp;</type>
          <declname>attributes</declname>
        </param>
        <briefdescription>
<para>Select dynamic Aux attributes by name (for writing). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="139" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxContainerBase.cxx" bodystart="561" bodyend="568"/>
      </memberdef>
      <memberdef kind="function" id="de/d65/classxAOD_1_1AuxContainerBase_1a6442be9f01736a35bc8ee8ebaed5767b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">SG::auxid_set_t</ref> &amp;</type>
        <definition>const AuxContainerBase::auxid_set_t &amp; xAOD::AuxContainerBase::getSelectedAuxIDs</definition>
        <argsstring>() const </argsstring>
        <name>getSelectedAuxIDs</name>
        <reimplements refid="db/d37/classSG_1_1IAuxStoreIO_1ad902a6d9ee41b239fbca73870cebe237">getSelectedAuxIDs</reimplements>
        <briefdescription>
<para>Get the IDs of the selected dynamic Aux variables (for writing). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="142" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxContainerBase.cxx" bodystart="571" bodyend="589"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Functions managing the instance name of the container</header>
      <description><para><anchor id="_1amgrp7ac7d0ae987769343410b8f8ebd39e5a"/> </para></description>
      <memberdef kind="function" id="de/d65/classxAOD_1_1AuxContainerBase_1ae7e82d567c8c499ad429832170f2b4a6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * xAOD::AuxContainerBase::name</definition>
        <argsstring>() const </argsstring>
        <name>name</name>
        <briefdescription>
<para>Get the name of the container instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="150" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxContainerBase.cxx" bodystart="594" bodyend="597"/>
      </memberdef>
      <memberdef kind="function" id="de/d65/classxAOD_1_1AuxContainerBase_1a17e0da702737d4bdd66aa4c4d5fcee43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::AuxContainerBase::setName</definition>
        <argsstring>(const char *name)</argsstring>
        <name>setName</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Set the name of the container instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="152" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxContainerBase.cxx" bodystart="599" bodyend="603"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="de/d65/classxAOD_1_1AuxContainerBase_1af1b96ab47e53693b6ac1fbc426f97ec1" prot="public" static="no">
        <type><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member">SG::auxid_t</ref></type>
        <definition>typedef SG::auxid_t xAOD::AuxContainerBase::auxid_t</definition>
        <argsstring></argsstring>
        <name>auxid_t</name>
        <briefdescription>
<para>The aux ID type definition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="53" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="de/d65/classxAOD_1_1AuxContainerBase_1a03785f5dc3c056c2844aa85b400b17da" prot="public" static="no">
        <type><ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">SG::auxid_set_t</ref></type>
        <definition>typedef SG::auxid_set_t xAOD::AuxContainerBase::auxid_set_t</definition>
        <argsstring></argsstring>
        <name>auxid_set_t</name>
        <briefdescription>
<para>The aux ID set type definition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="55" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="de/d65/classxAOD_1_1AuxContainerBase_1a1824a76c88f5a790abab80fd18efd6ce" prot="private" static="no">
        <type>AthContainers_detail::mutex</type>
        <definition>typedef AthContainers_detail::mutex xAOD::AuxContainerBase::mutex_t</definition>
        <argsstring></argsstring>
        <name>mutex_t</name>
        <briefdescription>
<para>Mutex for multithread synchronization. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="193" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="de/d65/classxAOD_1_1AuxContainerBase_1a864dc805cf56d429d89b7060292c1295" prot="private" static="no">
        <type>AthContainers_detail::lock_guard&lt; mutex_t &gt;</type>
        <definition>typedef AthContainers_detail::lock_guard&lt; mutex_t &gt; xAOD::AuxContainerBase::guard_t</definition>
        <argsstring></argsstring>
        <name>guard_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="194" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="de/d65/classxAOD_1_1AuxContainerBase_1a2305ca1ea068bf5cc202b8f800a1a2b3" prot="private" static="no" mutable="no">
        <type><ref refid="d6/dd6/classxAOD_1_1AuxSelection" kindref="compound">AuxSelection</ref></type>
        <definition>AuxSelection xAOD::AuxContainerBase::m_selection</definition>
        <argsstring></argsstring>
        <name>m_selection</name>
        <briefdescription>
<para>Dynamic attributes selection implementation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="174" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/d65/classxAOD_1_1AuxContainerBase_1ad34bd0e5c389d795df6da68c91b336ae" prot="private" static="no" mutable="yes">
        <type><ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">auxid_set_t</ref></type>
        <definition>auxid_set_t xAOD::AuxContainerBase::m_auxids</definition>
        <argsstring></argsstring>
        <name>m_auxids</name>
        <briefdescription>
<para>Internal list of all available variables. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="176" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/d65/classxAOD_1_1AuxContainerBase_1adebaa69d6d0b6369a4a95fd633eeb9da" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="de/d12/classSG_1_1IAuxTypeVector" kindref="compound">SG::IAuxTypeVector</ref> * &gt;</type>
        <definition>std::vector&lt; SG::IAuxTypeVector* &gt; xAOD::AuxContainerBase::m_vecs</definition>
        <argsstring></argsstring>
        <name>m_vecs</name>
        <briefdescription>
<para>Internal list of all managed variables. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="178" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/d65/classxAOD_1_1AuxContainerBase_1a5e121a87db7eadcc33c3c78f4a3c3a75" prot="private" static="no" mutable="no">
        <type><ref refid="dc/d05/classSG_1_1IAuxStore" kindref="compound">SG::IAuxStore</ref> *</type>
        <definition>SG::IAuxStore* xAOD::AuxContainerBase::m_store</definition>
        <argsstring></argsstring>
        <name>m_store</name>
        <briefdescription>
<para>Internal dynamic auxiliary store object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="181" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/d65/classxAOD_1_1AuxContainerBase_1ac32104e943ba5affaf7620e14547db68" prot="private" static="no" mutable="no">
        <type><ref refid="db/d37/classSG_1_1IAuxStoreIO" kindref="compound">SG::IAuxStoreIO</ref> *</type>
        <definition>SG::IAuxStoreIO* xAOD::AuxContainerBase::m_storeIO</definition>
        <argsstring></argsstring>
        <name>m_storeIO</name>
        <briefdescription>
<para>The IO interface to the internal auxiliary store. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="183" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/d65/classxAOD_1_1AuxContainerBase_1a6abbd43d363f495310787f54f75ec232" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool xAOD::AuxContainerBase::m_ownsStore</definition>
        <argsstring></argsstring>
        <name>m_ownsStore</name>
        <briefdescription>
<para>Flag deciding if the object owns the dynamic store or not. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="185" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/d65/classxAOD_1_1AuxContainerBase_1a204b7af7f61d5a48f608b687e7b1f95e" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool xAOD::AuxContainerBase::m_locked</definition>
        <argsstring></argsstring>
        <name>m_locked</name>
        <briefdescription>
<para>Has the container been locked? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="187" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/d65/classxAOD_1_1AuxContainerBase_1a1f2afcfb6b55b05289896574c763e4b8" prot="private" static="no" mutable="yes">
        <type>size_t</type>
        <definition>size_t xAOD::AuxContainerBase::m_tick</definition>
        <argsstring></argsstring>
        <name>m_tick</name>
        <briefdescription>
<para>Count changes to <computeroutput>m_auxids</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="190" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/d65/classxAOD_1_1AuxContainerBase_1a861b7a6fbb925220f89a1a767ca3a771" prot="private" static="no" mutable="yes">
        <type>mutex_t</type>
        <definition>mutex_t xAOD::AuxContainerBase::m_mutex</definition>
        <argsstring></argsstring>
        <name>m_mutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="195" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/d65/classxAOD_1_1AuxContainerBase_1addfa6cea7df8a44dfcda390837c7e528" prot="private" static="no" mutable="yes">
        <type>AthContainers_detail::thread_specific_ptr&lt; TSAuxidSet &gt;</type>
        <definition>AthContainers_detail::thread_specific_ptr&lt; TSAuxidSet &gt; xAOD::AuxContainerBase::m_tsAuxids</definition>
        <argsstring></argsstring>
        <name>m_tsAuxids</name>
        <briefdescription>
<para>Thread-local versions of the auxid set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="205" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/d65/classxAOD_1_1AuxContainerBase_1a8b14e126cf97a7b005b042f2d33be24d" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string xAOD::AuxContainerBase::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <briefdescription>
<para>Name of the container in memory. Set externally. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="208" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="de/d65/classxAOD_1_1AuxContainerBase_1a607470123bbcc9ff49e9b6d1d908713c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xAOD::AuxContainerBase::AuxContainerBase</definition>
        <argsstring>(bool allowDynamicVars=true)</argsstring>
        <name>AuxContainerBase</name>
        <param>
          <type>bool</type>
          <declname>allowDynamicVars</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="58" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxContainerBase.cxx" bodystart="20" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="de/d65/classxAOD_1_1AuxContainerBase_1acb22b1f9ef80b9c567defd21ac53ac26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xAOD::AuxContainerBase::AuxContainerBase</definition>
        <argsstring>(const AuxContainerBase &amp;parent)</argsstring>
        <name>AuxContainerBase</name>
        <param>
          <type>const <ref refid="de/d65/classxAOD_1_1AuxContainerBase" kindref="compound">AuxContainerBase</ref> &amp;</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
<para>This is an interesting one. The internal variables of <ref refid="de/d65/classxAOD_1_1AuxContainerBase" kindref="compound">AuxContainerBase</ref> are set up by the derived class(es) at construction. So, this internal state is not to be copied!</para><para>However, since the derived classes (the contents of their regular members) are allowed to be copied, let&apos;s not make this constructor private. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="60" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxContainerBase.cxx" bodystart="43" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="de/d65/classxAOD_1_1AuxContainerBase_1abc174c20398c8a8b4c67d241ea83c339" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xAOD::AuxContainerBase::AuxContainerBase</definition>
        <argsstring>(const SG::IAuxStore *store)</argsstring>
        <name>AuxContainerBase</name>
        <param>
          <type>const <ref refid="dc/d05/classSG_1_1IAuxStore" kindref="compound">SG::IAuxStore</ref> *</type>
          <declname>store</declname>
        </param>
        <briefdescription>
<para>Constructor receiving a &quot;dynamic auxiliary store&quot;. </para>        </briefdescription>
        <detaileddescription>
<para>This constructor is used to wrap another object that is stored in StoreGate, and hence we should not take ownership of.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>store</parametername>
</parameternamelist>
<parameterdescription>
<para>Another store that should be wrapped, but not owned </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="62" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxContainerBase.cxx" bodystart="67" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="de/d65/classxAOD_1_1AuxContainerBase_1ab0cbc8fb53d52b6e7b54870f0d3aa7ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xAOD::AuxContainerBase::~AuxContainerBase</definition>
        <argsstring>()</argsstring>
        <name>~AuxContainerBase</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="64" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxContainerBase.cxx" bodystart="83" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="de/d65/classxAOD_1_1AuxContainerBase_1af9ad8d05566f429b63711abea410bde9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="de/d65/classxAOD_1_1AuxContainerBase" kindref="compound">AuxContainerBase</ref> &amp;</type>
        <definition>AuxContainerBase &amp; xAOD::AuxContainerBase::operator=</definition>
        <argsstring>(const AuxContainerBase &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="de/d65/classxAOD_1_1AuxContainerBase" kindref="compound">AuxContainerBase</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Assignment operator. </para>        </briefdescription>
        <detaileddescription>
<para>Just like the copy constructor, this operator doesn&apos;t actually copy anything either. It&apos;s just here to make it clear to C++ that the internal state of these objects is not to be messed with.</para><para><simplesect kind="return"><para><ref refid="d4/dc4/structA" kindref="compound">A</ref> reference to this same object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="67" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/AuxContainerBase.cxx" bodystart="102" bodyend="137"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="de/d65/classxAOD_1_1AuxContainerBase_1ae1a4cd803cd96309193a7df23d581cab" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void xAOD::AuxContainerBase::regAuxVar</definition>
        <argsstring>(const std::string &amp;name, std::vector&lt; T &gt; &amp;vec)</argsstring>
        <name>regAuxVar</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="d1/def/classT" kindref="compound">T</ref> &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Register one of the persistent variables internally. </para>        </briefdescription>
        <detaileddescription>
<para>The user is expected to use this function inside the constructor of the derived class.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the variable. Same as the C++ variable&apos;s name. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vec</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d4/dc4/structA" kindref="compound">A</ref> reference to the auxiliary variable inside the object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="160" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.icc" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="de/d65/classxAOD_1_1AuxContainerBase_1a9402c029d8a77f9150091ec805768a44" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void xAOD::AuxContainerBase::regAuxVar</definition>
        <argsstring>(const std::string &amp;name, SG::PackedContainer&lt; T &gt; &amp;vec)</argsstring>
        <name>regAuxVar</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="dd/d01/classSG_1_1PackedContainer" kindref="compound">SG::PackedContainer</ref>&lt; <ref refid="d1/def/classT" kindref="compound">T</ref> &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Register one of the persistent variables internally. </para>        </briefdescription>
        <detaileddescription>
<para>The user is expected to use this function inside the constructor of the derived class.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the variable. Same as the C++ variable&apos;s name. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vec</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d4/dc4/structA" kindref="compound">A</ref> reference to the auxiliary variable inside the object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="165" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.icc" bodystart="78" bodyend="81"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="de/d65/classxAOD_1_1AuxContainerBase_1a0d3ffe7293acfc7defdeb52f493512f2" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ELT</type>
          </param>
          <param>
            <type>typename CONT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void xAOD::AuxContainerBase::regAuxVar1</definition>
        <argsstring>(const std::string &amp;name, CONT &amp;vec)</argsstring>
        <name>regAuxVar1</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>CONT &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Common code between regAuxVar cases. </para>        </briefdescription>
        <detaileddescription>
<para>Common code between vector and PackedContainer cases. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="171" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.icc" bodystart="31" bodyend="59"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Common base class for the auxiliary containers</para><para>To make the development of auxiliary containers simpler, they can all inherit from this one class. Then all they need to do is just to declare their data members, everything else is taken care of by this transient base class.</para><para><simplesect kind="author"><para>Attila Krasznahorkay &lt;<ulink url="mailto:Attila.Krasznahorkay@cern.ch">Attila.Krasznahorkay@cern.ch</ulink>&gt;</para></simplesect>
<simplesect kind="rcs"><title>Revision</title><para>633391 </para></simplesect>
<simplesect kind="rcs"><title>Date</title><para>2014-12-03 16:58:38 +0100 (Wed, 03 Dec 2014) </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="1562">
        <label>xAOD::TauJetAuxContainer_v1</label>
        <link refid="d0/d6a/classxAOD_1_1TauJetAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1563">
        <label>xAOD::TauJetAuxContainer_v2</label>
        <link refid="d3/d84/classxAOD_1_1TauJetAuxContainer__v2"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1595">
        <label>xAOD::TruthVertexAuxContainer_v1</label>
        <link refid="db/d75/classxAOD_1_1TruthVertexAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1596">
        <label>xAOD::VertexAuxContainer_v1</label>
        <link refid="df/d95/classxAOD_1_1VertexAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1576">
        <label>xAOD::TriggerTowerAuxContainer_v1</label>
        <link refid="d0/d37/classxAOD_1_1TriggerTowerAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1577">
        <label>xAOD::TriggerTowerAuxContainer_v2</label>
        <link refid="d2/daf/classxAOD_1_1TriggerTowerAuxContainer__v2"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1482">
        <label>SG::IAuxStoreHolder</label>
        <link refid="dc/d42/classSG_1_1IAuxStoreHolder"/>
      </node>
      <node id="1495">
        <label>xAOD::CaloClusterTrigAuxContainer_v1</label>
        <link refid="d1/dd4/classxAOD_1_1CaloClusterTrigAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1505">
        <label>xAOD::CMXRoIAuxContainer_v1</label>
        <link refid="d5/d22/classxAOD_1_1CMXRoIAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1501">
        <label>xAOD::CMXCPTobAuxContainer_v1</label>
        <link refid="d7/d8f/classxAOD_1_1CMXCPTobAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1587">
        <label>xAOD::TrigT2MbtsBitsAuxContainer_v1</label>
        <link refid="d8/dad/classxAOD_1_1TrigT2MbtsBitsAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1496">
        <label>xAOD::CaloTowerAuxContainer_v1</label>
        <link refid="dd/dff/classxAOD_1_1CaloTowerAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1554">
        <label>xAOD::PFOAuxContainer_v1</label>
        <link refid="d2/d07/classxAOD_1_1PFOAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1573">
        <label>xAOD::TrigElectronAuxContainer_v1</label>
        <link refid="d0/d41/classxAOD_1_1TrigElectronAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1491">
        <label>xAOD::BTagVertexAuxContainer_v1</label>
        <link refid="dd/da7/classxAOD_1_1BTagVertexAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1543">
        <label>xAOD::MissingETAuxAssociationMap_v1</label>
        <link refid="db/d72/classxAOD_1_1MissingETAuxAssociationMap__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1544">
        <label>xAOD::MissingETAuxAssociationMap_v2</label>
        <link refid="d4/db2/classxAOD_1_1MissingETAuxAssociationMap__v2"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1506">
        <label>xAOD::CompositeParticleAuxContainer_v1</label>
        <link refid="d0/d4d/classxAOD_1_1CompositeParticleAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1528">
        <label>xAOD::JEMHitsAuxContainer_v1</label>
        <link refid="d7/d49/classxAOD_1_1JEMHitsAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1557">
        <label>xAOD::PhotonTrigAuxContainer_v1</label>
        <link refid="db/d66/classxAOD_1_1PhotonTrigAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1497">
        <label>xAOD::CMMCPHitsAuxContainer_v1</label>
        <link refid="d2/de1/classxAOD_1_1CMMCPHitsAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1510">
        <label>xAOD::CPMTowerAuxContainer_v1</label>
        <link refid="d1/d23/classxAOD_1_1CPMTowerAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1511">
        <label>xAOD::CPMTowerAuxContainer_v2</label>
        <link refid="de/d8f/classxAOD_1_1CPMTowerAuxContainer__v2"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1575">
        <label>xAOD::TriggerMenuAuxContainer_v1</label>
        <link refid="dc/d5a/classxAOD_1_1TriggerMenuAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1565">
        <label>xAOD::TrackParticleAuxContainer_v1</label>
        <link refid="d7/d63/classxAOD_1_1TrackParticleAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1566">
        <label>xAOD::TrackParticleAuxContainer_v2</label>
        <link refid="db/d68/classxAOD_1_1TrackParticleAuxContainer__v2"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1538">
        <label>xAOD::L2IsoMuonAuxContainer_v1</label>
        <link refid="dc/d9c/classxAOD_1_1L2IsoMuonAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1567">
        <label>xAOD::TrackParticleAuxContainer_v3</label>
        <link refid="da/d17/classxAOD_1_1TrackParticleAuxContainer__v3"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1484">
        <label>xAOD::AFPDataAuxContainer_v1</label>
        <link refid="d2/dcb/classxAOD_1_1AFPDataAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1483">
        <label>BreakableAuxContainer</label>
        <link refid="de/d34/classBreakableAuxContainer"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1509">
        <label>xAOD::CPMTobRoIAuxContainer_v1</label>
        <link refid="d8/dd3/classxAOD_1_1CPMTobRoIAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1499">
        <label>xAOD::CMMJetHitsAuxContainer_v1</label>
        <link refid="d8/dda/classxAOD_1_1CMMJetHitsAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1545">
        <label>xAOD::MissingETAuxComponentMap_v1</label>
        <link refid="da/ddb/classxAOD_1_1MissingETAuxComponentMap__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1504">
        <label>xAOD::CMXJetTobAuxContainer_v1</label>
        <link refid="dc/d8a/classxAOD_1_1CMXJetTobAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1568">
        <label>xAOD::TrackParticleClusterAssociationAuxContainer_v1</label>
        <link refid="dc/d51/classxAOD_1_1TrackParticleClusterAssociationAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1531">
        <label>xAOD::JetAuxContainer_v1</label>
        <link refid="d6/dc1/classxAOD_1_1JetAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1526">
        <label>xAOD::JEMEtSumsAuxContainer_v1</label>
        <link refid="dc/d27/classxAOD_1_1JEMEtSumsAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1527">
        <label>xAOD::JEMEtSumsAuxContainer_v2</label>
        <link refid="d5/d49/classxAOD_1_1JEMEtSumsAuxContainer__v2"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1524">
        <label>xAOD::HIEventShapeAuxContainer_v1</label>
        <link refid="df/d4e/classxAOD_1_1HIEventShapeAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1525">
        <label>xAOD::HIEventShapeAuxContainer_v2</label>
        <link refid="dd/d98/classxAOD_1_1HIEventShapeAuxContainer__v2"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1513">
        <label>xAOD::DiTauJetAuxContainer_v1</label>
        <link refid="d0/d4a/classxAOD_1_1DiTauJetAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1586">
        <label>xAOD::TrigSpacePointCountsAuxContainer_v1</label>
        <link refid="d1/dd2/classxAOD_1_1TrigSpacePointCountsAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1532">
        <label>xAOD::JetElementAuxContainer_v1</label>
        <link refid="d4/dd6/classxAOD_1_1JetElementAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1533">
        <label>xAOD::JetElementAuxContainer_v2</label>
        <link refid="df/df9/classxAOD_1_1JetElementAuxContainer__v2"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1546">
        <label>xAOD::MissingETAuxContainer_v1</label>
        <link refid="d9/dbe/classxAOD_1_1MissingETAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1530">
        <label>xAOD::JEMTobRoIAuxContainer_v1</label>
        <link refid="de/dde/classxAOD_1_1JEMTobRoIAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1523">
        <label>xAOD::ForwardEventInfoAuxContainer_v1</label>
        <link refid="df/dab/classxAOD_1_1ForwardEventInfoAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1578">
        <label>xAOD::TrigHisto2DAuxContainer_v1</label>
        <link refid="dd/d0e/classxAOD_1_1TrigHisto2DAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1572">
        <label>xAOD::TrigEMClusterAuxContainer_v1</label>
        <link refid="d5/d46/classxAOD_1_1TrigEMClusterAuxContainer__v1"/>
        <childnode refid="1571" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1574">
        <label>xAOD::TrigEMClusterAuxContainer_v2</label>
        <link refid="d4/d60/classxAOD_1_1TrigEMClusterAuxContainer__v2"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1536">
        <label>xAOD::L1TopoRawDataAuxContainer_v1</label>
        <link refid="d3/d70/classxAOD_1_1L1TopoRawDataAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1529">
        <label>xAOD::JEMRoIAuxContainer_v1</label>
        <link refid="df/df8/classxAOD_1_1JEMRoIAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1480">
        <label>SG::IConstAuxStore</label>
        <link refid="d3/dd5/classSG_1_1IConstAuxStore"/>
      </node>
      <node id="1522">
        <label>xAOD::EventInfoAuxContainer_v1</label>
        <link refid="d5/d41/classxAOD_1_1EventInfoAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1542">
        <label>xAOD::MBTSModuleAuxContainer_v1</label>
        <link refid="d8/d0e/classxAOD_1_1MBTSModuleAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1551">
        <label>xAOD::MuonSegmentAuxContainer_v1</label>
        <link refid="df/da2/classxAOD_1_1MuonSegmentAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1481">
        <label>SG::IAuxStoreIO</label>
        <link refid="db/d37/classSG_1_1IAuxStoreIO"/>
      </node>
      <node id="1500">
        <label>xAOD::CMXCPHitsAuxContainer_v1</label>
        <link refid="d9/d21/classxAOD_1_1CMXCPHitsAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1490">
        <label>xAOD::BTaggingTrigAuxContainer_v1</label>
        <link refid="d9/d96/classxAOD_1_1BTaggingTrigAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1558">
        <label>xAOD::RODHeaderAuxContainer_v1</label>
        <link refid="d2/d8e/classxAOD_1_1RODHeaderAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1559">
        <label>xAOD::RODHeaderAuxContainer_v2</label>
        <link refid="d3/d5e/classxAOD_1_1RODHeaderAuxContainer__v2"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1592">
        <label>xAOD::TruthMetaDataAuxContainer_v1</label>
        <link refid="d7/dc3/classxAOD_1_1TruthMetaDataAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1560">
        <label>xAOD::SCTRawHitValidationAuxContainer_v1</label>
        <link refid="df/d41/classxAOD_1_1SCTRawHitValidationAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1591">
        <label>xAOD::TruthEventAuxContainer_v1</label>
        <link refid="d8/d7f/classxAOD_1_1TruthEventAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1507">
        <label>xAOD::CPMHitsAuxContainer_v1</label>
        <link refid="d3/d5c/classxAOD_1_1CPMHitsAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1579">
        <label>xAOD::TrigMissingETAuxContainer_v1</label>
        <link refid="d3/dea/classxAOD_1_1TrigMissingETAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1478">
        <label>xAOD::AuxContainerBase</label>
        <link refid="de/d65/classxAOD_1_1AuxContainerBase"/>
        <childnode refid="1479" relation="public-inheritance">
        </childnode>
        <childnode refid="1481" relation="public-inheritance">
        </childnode>
        <childnode refid="1482" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1590">
        <label>xAOD::TrigVertexCountsAuxContainer_v1</label>
        <link refid="d0/d7e/classxAOD_1_1TrigVertexCountsAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1479">
        <label>SG::IAuxStore</label>
        <link refid="dc/d05/classSG_1_1IAuxStore"/>
        <childnode refid="1480" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1561">
        <label>xAOD::SlowMuonAuxContainer_v1</label>
        <link refid="d9/d19/classxAOD_1_1SlowMuonAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1547">
        <label>xAOD::MuonAuxContainer_v1</label>
        <link refid="d2/d02/classxAOD_1_1MuonAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1582">
        <label>xAOD::TrigRingerRingsAuxContainer_v1</label>
        <link refid="dc/d2d/classxAOD_1_1TrigRingerRingsAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1548">
        <label>xAOD::MuonAuxContainer_v2</label>
        <link refid="dc/d51/classxAOD_1_1MuonAuxContainer__v2"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1583">
        <label>xAOD::TrigRingerRingsAuxContainer_v2</label>
        <link refid="da/d42/classxAOD_1_1TrigRingerRingsAuxContainer__v2"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1549">
        <label>xAOD::MuonAuxContainer_v3</label>
        <link refid="d9/d01/classxAOD_1_1MuonAuxContainer__v3"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1487">
        <label>xAOD::ALFADataAuxContainer_v1</label>
        <link refid="df/d19/classxAOD_1_1ALFADataAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1508">
        <label>xAOD::CPMRoIAuxContainer_v1</label>
        <link refid="de/d6c/classxAOD_1_1CPMRoIAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1520">
        <label>xAOD::EmTauRoIAuxContainer_v1</label>
        <link refid="db/db7/classxAOD_1_1EmTauRoIAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1521">
        <label>xAOD::EmTauRoIAuxContainer_v2</label>
        <link refid="d2/d5d/classxAOD_1_1EmTauRoIAuxContainer__v2"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1537">
        <label>xAOD::L2CombinedMuonAuxContainer_v1</label>
        <link refid="d2/dd9/classxAOD_1_1L2CombinedMuonAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1485">
        <label>xAOD::AFPSiHitAuxContainer_v1</label>
        <link refid="df/d12/classxAOD_1_1AFPSiHitAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1588">
        <label>xAOD::TrigT2ZdcSignalsAuxContainer_v1</label>
        <link refid="d7/dac/classxAOD_1_1TrigT2ZdcSignalsAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1539">
        <label>xAOD::L2StandAloneMuonAuxContainer_v1</label>
        <link refid="de/d6f/classxAOD_1_1L2StandAloneMuonAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1540">
        <label>xAOD::L2StandAloneMuonAuxContainer_v2</label>
        <link refid="de/d00/classxAOD_1_1L2StandAloneMuonAuxContainer__v2"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1534">
        <label>xAOD::JetRoIAuxContainer_v1</label>
        <link refid="d5/da1/classxAOD_1_1JetRoIAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1535">
        <label>xAOD::JetRoIAuxContainer_v2</label>
        <link refid="dc/de3/classxAOD_1_1JetRoIAuxContainer__v2"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1594">
        <label>xAOD::TruthPileupEventAuxContainer_v1</label>
        <link refid="d8/ddf/classxAOD_1_1TruthPileupEventAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1593">
        <label>xAOD::TruthParticleAuxContainer_v1</label>
        <link refid="da/de8/classxAOD_1_1TruthParticleAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1515">
        <label>xAOD::ElectronAuxContainer_v1</label>
        <link refid="d9/de6/classxAOD_1_1ElectronAuxContainer__v1"/>
        <childnode refid="1514" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1517">
        <label>xAOD::ElectronAuxContainer_v2</label>
        <link refid="d8/dcf/classxAOD_1_1ElectronAuxContainer__v2"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1518">
        <label>xAOD::ElectronAuxContainer_v3</label>
        <link refid="d8/dde/classxAOD_1_1ElectronAuxContainer__v3"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1597">
        <label>xAOD::ZdcModuleAuxContainer_v1</label>
        <link refid="de/d88/classxAOD_1_1ZdcModuleAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1514">
        <label>xAOD::EgammaAuxContainer_v1</label>
        <link refid="d9/d23/classxAOD_1_1EgammaAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1492">
        <label>xAOD::BunchConfAuxContainer_v1</label>
        <link refid="d8/dcc/classxAOD_1_1BunchConfAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1570">
        <label>xAOD::TrigBphysAuxContainer_v1</label>
        <link refid="d1/dc6/classxAOD_1_1TrigBphysAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1569">
        <label>xAOD::TrackStateValidationAuxContainer_v1</label>
        <link refid="dc/d2d/classxAOD_1_1TrackStateValidationAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1571">
        <label>xAOD::TrigCaloClusterAuxContainer_v1</label>
        <link refid="d8/d1a/classxAOD_1_1TrigCaloClusterAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1552">
        <label>xAOD::NeutralParticleAuxContainer_v1</label>
        <link refid="da/dcf/classxAOD_1_1NeutralParticleAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1519">
        <label>xAOD::ElectronTrigAuxContainer_v1</label>
        <link refid="d2/d55/classxAOD_1_1ElectronTrigAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1516">
        <label>xAOD::PhotonAuxContainer_v1</label>
        <link refid="d6/d16/classxAOD_1_1PhotonAuxContainer__v1"/>
        <childnode refid="1514" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1580">
        <label>xAOD::TrigPassBitsAuxContainer_v1</label>
        <link refid="d6/d51/classxAOD_1_1TrigPassBitsAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1555">
        <label>xAOD::PhotonAuxContainer_v2</label>
        <link refid="da/d08/classxAOD_1_1PhotonAuxContainer__v2"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1556">
        <label>xAOD::PhotonAuxContainer_v3</label>
        <link refid="df/d1b/classxAOD_1_1PhotonAuxContainer__v3"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1489">
        <label>xAOD::BTaggingAuxContainer_v1</label>
        <link refid="d3/db5/classxAOD_1_1BTaggingAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1512">
        <label>xAOD::CutBookkeeperAuxContainer_v1</label>
        <link refid="d4/de9/classxAOD_1_1CutBookkeeperAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1541">
        <label>xAOD::LumiBlockRangeAuxContainer_v1</label>
        <link refid="d2/dbf/classxAOD_1_1LumiBlockRangeAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1493">
        <label>xAOD::CaloClusterAuxContainer_v1</label>
        <link refid="d9/d78/classxAOD_1_1CaloClusterAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1494">
        <label>xAOD::CaloClusterAuxContainer_v2</label>
        <link refid="dd/d85/classxAOD_1_1CaloClusterAuxContainer__v2"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1550">
        <label>xAOD::MuonRoIAuxContainer_v1</label>
        <link refid="d7/d59/classxAOD_1_1MuonRoIAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1488">
        <label>xAOD::BCMRawDataAuxContainer_v1</label>
        <link refid="dd/d9e/classxAOD_1_1BCMRawDataAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1503">
        <label>xAOD::CMXJetHitsAuxContainer_v1</label>
        <link refid="d4/d33/classxAOD_1_1CMXJetHitsAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1581">
        <label>xAOD::TrigPhotonAuxContainer_v1</label>
        <link refid="de/dac/classxAOD_1_1TrigPhotonAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1584">
        <label>xAOD::TrigRNNOutputAuxContainer_v1</label>
        <link refid="d8/d81/classxAOD_1_1TrigRNNOutputAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1585">
        <label>xAOD::TrigRNNOutputAuxContainer_v2</label>
        <link refid="d0/d06/classxAOD_1_1TrigRNNOutputAuxContainer__v2"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1486">
        <label>xAOD::AFPTrackAuxContainer_v1</label>
        <link refid="d7/da4/classxAOD_1_1AFPTrackAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1553">
        <label>xAOD::ParticleAuxContainer_v1</label>
        <link refid="d1/d9d/classxAOD_1_1ParticleAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1502">
        <label>xAOD::CMXEtSumsAuxContainer_v1</label>
        <link refid="d2/d7b/classxAOD_1_1CMXEtSumsAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1589">
        <label>xAOD::TrigTrackCountsAuxContainer_v1</label>
        <link refid="d9/d78/classxAOD_1_1TrigTrackCountsAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1564">
        <label>xAOD::TrackMeasurementValidationAuxContainer_v1</label>
        <link refid="d4/da2/classxAOD_1_1TrackMeasurementValidationAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1498">
        <label>xAOD::CMMEtSumsAuxContainer_v1</label>
        <link refid="d8/d52/classxAOD_1_1CMMEtSumsAuxContainer__v1"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1602">
        <label>SG::IAuxStoreHolder</label>
        <link refid="dc/d42/classSG_1_1IAuxStoreHolder"/>
      </node>
      <node id="1613">
        <label>Internal::rehash_base&lt;Internal::prime_rehash_policy , hashtable&lt;Value , Value , Alloc , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="db/d2b/classInternal_1_1rehash__base"/>
      </node>
      <node id="1614">
        <label>Internal::hash_code_base&lt;Value , Value , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , cache_hash_code&gt;</label>
        <link refid="d0/d2e/classInternal_1_1hash__code__base"/>
      </node>
      <node id="1607">
        <label>Internal::hash_code_base&lt;size_t , size_t , Internal::identity&lt; size_t &gt; , std::equal_to&lt; size_t &gt; , hash&lt; size_t &gt; , Internal::mod_range_hashing , Internal::default_ranged_hash , cache_hash_code&gt;</label>
        <link refid="d0/d2e/classInternal_1_1hash__code__base"/>
      </node>
      <node id="1612">
        <label>SG::hashtable&lt; Value, Value, Alloc, Internal::identity&lt; Value &gt;, Pred, Hash, Internal::mod_range_hashing, Internal::default_ranged_hash, Internal::prime_rehash_policy, cache_hash_code, true, true &gt;</label>
        <link refid="de/d63/classSG_1_1hashtable"/>
        <childnode refid="1613" relation="public-inheritance">
        </childnode>
        <childnode refid="1614" relation="public-inheritance">
        </childnode>
        <childnode refid="1615" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1609">
        <label>string</label>
      </node>
      <node id="1608">
        <label>Internal::map_base&lt;size_t , size_t , Internal::identity&lt; size_t &gt; , unique_keys, hashtable&lt;size_t , size_t , std::allocator&lt; size_t &gt; , Internal::identity&lt; size_t &gt; , std::equal_to&lt; size_t &gt; , hash&lt; size_t &gt; , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="d1/d54/classInternal_1_1map__base"/>
      </node>
      <node id="1603">
        <label>xAOD::AuxSelection</label>
        <link refid="d6/dd6/classxAOD_1_1AuxSelection"/>
        <childnode refid="1604" relation="usage">
          <edgelabel>m_auxids</edgelabel>
        </childnode>
      </node>
      <node id="1600">
        <label>SG::IConstAuxStore</label>
        <link refid="d3/dd5/classSG_1_1IConstAuxStore"/>
      </node>
      <node id="1601">
        <label>SG::IAuxStoreIO</label>
        <link refid="db/d37/classSG_1_1IAuxStoreIO"/>
      </node>
      <node id="1605">
        <label>SG::hashtable&lt; size_t, size_t, std::allocator&lt; size_t &gt;, Internal::identity&lt; size_t &gt;, std::equal_to&lt; size_t &gt;, hash&lt; size_t &gt;, Internal::mod_range_hashing, Internal::default_ranged_hash, Internal::prime_rehash_policy, false, true, true &gt;</label>
        <link refid="de/d63/classSG_1_1hashtable"/>
        <childnode refid="1606" relation="public-inheritance">
        </childnode>
        <childnode refid="1607" relation="public-inheritance">
        </childnode>
        <childnode refid="1608" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1598">
        <label>xAOD::AuxContainerBase</label>
        <link refid="de/d65/classxAOD_1_1AuxContainerBase"/>
        <childnode refid="1599" relation="public-inheritance">
        </childnode>
        <childnode refid="1601" relation="public-inheritance">
        </childnode>
        <childnode refid="1602" relation="public-inheritance">
        </childnode>
        <childnode refid="1599" relation="usage">
          <edgelabel>m_store</edgelabel>
        </childnode>
        <childnode refid="1603" relation="usage">
          <edgelabel>m_selection</edgelabel>
        </childnode>
        <childnode refid="1609" relation="usage">
          <edgelabel>m_name</edgelabel>
        </childnode>
        <childnode refid="1610" relation="usage">
          <edgelabel>m_mutex</edgelabel>
        </childnode>
        <childnode refid="1601" relation="usage">
          <edgelabel>m_storeIO</edgelabel>
        </childnode>
        <childnode refid="1611" relation="usage">
          <edgelabel>m_auxids</edgelabel>
        </childnode>
      </node>
      <node id="1599">
        <label>SG::IAuxStore</label>
        <link refid="dc/d05/classSG_1_1IAuxStore"/>
        <childnode refid="1600" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1611">
        <label>SG::unordered_set&lt; Value, Hash, Pred, Alloc, cache_hash_code &gt;</label>
        <link refid="dd/dac/classSG_1_1unordered__set"/>
        <childnode refid="1612" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1615">
        <label>Internal::map_base&lt;Value , Value , Internal::identity&lt; Value &gt; , unique_keys, hashtable&lt;Value , Value , Alloc , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="d1/d54/classInternal_1_1map__base"/>
      </node>
      <node id="1606">
        <label>Internal::rehash_base&lt;Internal::prime_rehash_policy , hashtable&lt;size_t , size_t , std::allocator&lt; size_t &gt; , Internal::identity&lt; size_t &gt; , std::equal_to&lt; size_t &gt; , hash&lt; size_t &gt; , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="db/d2b/classInternal_1_1rehash__base"/>
      </node>
      <node id="1610">
        <label>mutex</label>
      </node>
      <node id="1604">
        <label>SG::unordered_set&lt; size_t &gt;</label>
        <link refid="dd/dac/classSG_1_1unordered__set"/>
        <childnode refid="1605" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" line="49" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxContainerBase.h" bodystart="43" bodyend="210"/>
    <listofallmembers>
      <member refid="dc/d42/classSG_1_1IAuxStoreHolder_1a52b405d522a75932698443c3f01611f9a94fd1895e790e358290b074ea49edbe2" prot="public" virt="non-virtual"><scope>xAOD::AuxContainerBase</scope><name>AST_ContainerStore</name></member>
      <member refid="dc/d42/classSG_1_1IAuxStoreHolder_1a52b405d522a75932698443c3f01611f9afb6416cb757f8628e0383b707c99b19a" prot="public" virt="non-virtual"><scope>xAOD::AuxContainerBase</scope><name>AST_ObjectStore</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a607470123bbcc9ff49e9b6d1d908713c" prot="public" virt="non-virtual"><scope>xAOD::AuxContainerBase</scope><name>AuxContainerBase</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1acb22b1f9ef80b9c567defd21ac53ac26" prot="public" virt="non-virtual"><scope>xAOD::AuxContainerBase</scope><name>AuxContainerBase</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1abc174c20398c8a8b4c67d241ea83c339" prot="public" virt="non-virtual"><scope>xAOD::AuxContainerBase</scope><name>AuxContainerBase</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a03785f5dc3c056c2844aa85b400b17da" prot="public" virt="non-virtual"><scope>xAOD::AuxContainerBase</scope><name>auxid_set_t</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1af1b96ab47e53693b6ac1fbc426f97ec1" prot="public" virt="non-virtual"><scope>xAOD::AuxContainerBase</scope><name>auxid_t</name></member>
      <member refid="dc/d42/classSG_1_1IAuxStoreHolder_1a52b405d522a75932698443c3f01611f9" prot="public" virt="non-virtual"><scope>xAOD::AuxContainerBase</scope><name>AuxStoreType</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a27c734e6ded2c198eb31c995e5febf31" prot="public" virt="virtual"><scope>xAOD::AuxContainerBase</scope><name>clearDecorations</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a7e2003cda04239dd53f2692982221a25" prot="public" virt="virtual"><scope>xAOD::AuxContainerBase</scope><name>getAuxIDs</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1abd931077f3f670a7b466100fc19d7be6" prot="public" virt="virtual"><scope>xAOD::AuxContainerBase</scope><name>getData</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a623c9fdb10a510db05133053b61bd2a5" prot="public" virt="virtual"><scope>xAOD::AuxContainerBase</scope><name>getData</name></member>
      <member refid="dc/d05/classSG_1_1IAuxStore_1a0a6b90ed812993712727c76b64953c48" prot="public" virt="pure-virtual" ambiguityscope="SG::IAuxStore::"><scope>xAOD::AuxContainerBase</scope><name>getData</name></member>
      <member refid="d3/dd5/classSG_1_1IConstAuxStore_1aa73e6e5474cdc0d38fe3367740876c59" prot="public" virt="pure-virtual" ambiguityscope="SG::IConstAuxStore::"><scope>xAOD::AuxContainerBase</scope><name>getData</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1af911ebaa620ad08df6d75899e27bd21b" prot="public" virt="virtual"><scope>xAOD::AuxContainerBase</scope><name>getDecoration</name></member>
      <member refid="d3/dd5/classSG_1_1IConstAuxStore_1a96728593e3bc1da60d3bdd28291969f0" prot="public" virt="pure-virtual" ambiguityscope="SG::IAuxStore::"><scope>xAOD::AuxContainerBase</scope><name>getDecoration</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a92646d86c4946fb3841dc3f53ab04485" prot="public" virt="virtual"><scope>xAOD::AuxContainerBase</scope><name>getDynamicAuxIDs</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a7152d204081065ad79e535d76f41e8db" prot="public" virt="virtual"><scope>xAOD::AuxContainerBase</scope><name>getIOData</name></member>
      <member refid="db/d37/classSG_1_1IAuxStoreIO_1a55ba7c049509f9b6a8b5c57e9322bcc9" prot="public" virt="pure-virtual" ambiguityscope="SG::IAuxStoreIO::"><scope>xAOD::AuxContainerBase</scope><name>getIOData</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1ae3851a65287f9115f7f6885e22662bf8" prot="public" virt="virtual"><scope>xAOD::AuxContainerBase</scope><name>getIOType</name></member>
      <member refid="db/d37/classSG_1_1IAuxStoreIO_1a25c3d7891a19f3881f932c3484031df2" prot="public" virt="pure-virtual" ambiguityscope="SG::IAuxStoreIO::"><scope>xAOD::AuxContainerBase</scope><name>getIOType</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a6442be9f01736a35bc8ee8ebaed5767b" prot="public" virt="virtual"><scope>xAOD::AuxContainerBase</scope><name>getSelectedAuxIDs</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a95c2ba90ffb73ba97cc201f7ee161d97" prot="public" virt="virtual"><scope>xAOD::AuxContainerBase</scope><name>getStore</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a39e74adfd119e834ec218f897d790cfb" prot="public" virt="virtual"><scope>xAOD::AuxContainerBase</scope><name>getStoreType</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a3aad1dbe545c483a0facf9350a67724d" prot="public" virt="virtual"><scope>xAOD::AuxContainerBase</scope><name>getWritableAuxIDs</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a864dc805cf56d429d89b7060292c1295" prot="private" virt="non-virtual"><scope>xAOD::AuxContainerBase</scope><name>guard_t</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a52541675fc27e485d755e514a22fcf4d" prot="public" virt="virtual"><scope>xAOD::AuxContainerBase</scope><name>lock</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1ad34bd0e5c389d795df6da68c91b336ae" prot="private" virt="non-virtual"><scope>xAOD::AuxContainerBase</scope><name>m_auxids</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a204b7af7f61d5a48f608b687e7b1f95e" prot="private" virt="non-virtual"><scope>xAOD::AuxContainerBase</scope><name>m_locked</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a861b7a6fbb925220f89a1a767ca3a771" prot="private" virt="non-virtual"><scope>xAOD::AuxContainerBase</scope><name>m_mutex</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a8b14e126cf97a7b005b042f2d33be24d" prot="private" virt="non-virtual"><scope>xAOD::AuxContainerBase</scope><name>m_name</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a6abbd43d363f495310787f54f75ec232" prot="private" virt="non-virtual"><scope>xAOD::AuxContainerBase</scope><name>m_ownsStore</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a2305ca1ea068bf5cc202b8f800a1a2b3" prot="private" virt="non-virtual"><scope>xAOD::AuxContainerBase</scope><name>m_selection</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a5e121a87db7eadcc33c3c78f4a3c3a75" prot="private" virt="non-virtual"><scope>xAOD::AuxContainerBase</scope><name>m_store</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1ac32104e943ba5affaf7620e14547db68" prot="private" virt="non-virtual"><scope>xAOD::AuxContainerBase</scope><name>m_storeIO</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a1f2afcfb6b55b05289896574c763e4b8" prot="private" virt="non-virtual"><scope>xAOD::AuxContainerBase</scope><name>m_tick</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1addfa6cea7df8a44dfcda390837c7e528" prot="private" virt="non-virtual"><scope>xAOD::AuxContainerBase</scope><name>m_tsAuxids</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1adebaa69d6d0b6369a4a95fd633eeb9da" prot="private" virt="non-virtual"><scope>xAOD::AuxContainerBase</scope><name>m_vecs</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a1824a76c88f5a790abab80fd18efd6ce" prot="private" virt="non-virtual"><scope>xAOD::AuxContainerBase</scope><name>mutex_t</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1ae7e82d567c8c499ad429832170f2b4a6" prot="public" virt="non-virtual"><scope>xAOD::AuxContainerBase</scope><name>name</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1af9ad8d05566f429b63711abea410bde9" prot="public" virt="non-virtual"><scope>xAOD::AuxContainerBase</scope><name>operator=</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1ae1a4cd803cd96309193a7df23d581cab" prot="protected" virt="non-virtual"><scope>xAOD::AuxContainerBase</scope><name>regAuxVar</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a9402c029d8a77f9150091ec805768a44" prot="protected" virt="non-virtual"><scope>xAOD::AuxContainerBase</scope><name>regAuxVar</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a0d3ffe7293acfc7defdeb52f493512f2" prot="private" virt="non-virtual"><scope>xAOD::AuxContainerBase</scope><name>regAuxVar1</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a459706651829d59a33ace8bbc49bc173" prot="public" virt="virtual"><scope>xAOD::AuxContainerBase</scope><name>reserve</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a8e885c6f28a73c6e4e0bbd33b244f1c7" prot="public" virt="virtual"><scope>xAOD::AuxContainerBase</scope><name>resize</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1ab69feb0eab5baa91ebb4750fd0a17c44" prot="public" virt="virtual"><scope>xAOD::AuxContainerBase</scope><name>selectAux</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a17e0da702737d4bdd66aa4c4d5fcee43" prot="public" virt="non-virtual"><scope>xAOD::AuxContainerBase</scope><name>setName</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a564074605df56f289545e81781b27c94" prot="public" virt="virtual"><scope>xAOD::AuxContainerBase</scope><name>setOption</name></member>
      <member refid="dc/d05/classSG_1_1IAuxStore_1a371646fff1258a9f81b35d26eca3ac45" prot="public" virt="virtual" ambiguityscope="SG::IAuxStore::"><scope>xAOD::AuxContainerBase</scope><name>setOption</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a73e7691d63ed2168a6dc034882e0501b" prot="public" virt="virtual"><scope>xAOD::AuxContainerBase</scope><name>setStore</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a2282b0bd500c18d2c3d3b52c2287999c" prot="public" virt="virtual"><scope>xAOD::AuxContainerBase</scope><name>shift</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1a1a8a180de3ed24bf7161ce0da86fdfb0" prot="public" virt="virtual"><scope>xAOD::AuxContainerBase</scope><name>size</name></member>
      <member refid="de/d65/classxAOD_1_1AuxContainerBase_1ab0cbc8fb53d52b6e7b54870f0d3aa7ad" prot="public" virt="non-virtual"><scope>xAOD::AuxContainerBase</scope><name>~AuxContainerBase</name></member>
      <member refid="dc/d42/classSG_1_1IAuxStoreHolder_1a51489d2a5109fe92f83a8f34ff89c57b" prot="public" virt="virtual"><scope>xAOD::AuxContainerBase</scope><name>~IAuxStoreHolder</name></member>
      <member refid="db/d37/classSG_1_1IAuxStoreIO_1a78166aac5abe83f66eef9946a23ced75" prot="public" virt="virtual"><scope>xAOD::AuxContainerBase</scope><name>~IAuxStoreIO</name></member>
      <member refid="d3/dd5/classSG_1_1IConstAuxStore_1a2acc9ded5fe9a64c8f508d3c0d7431a5" prot="public" virt="virtual"><scope>xAOD::AuxContainerBase</scope><name>~IConstAuxStore</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
