<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="de/de2/TypedHolder_8h" kind="file">
    <compoundname>TypedHolder.h</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">stdexcept</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">boost/type_traits/is_same.hpp</includes>
    <includes refid="df/d30/TypelessHolder_8h" local="yes">TrigNavStructure/TypelessHolder.h</includes>
    <includes refid="d7/d71/TriggerElement_8h" local="yes">TrigNavStructure/TriggerElement.h</includes>
    <includes refid="d3/da4/OwnershipPolicy_8h" local="yes">AthContainers/OwnershipPolicy.h</includes>
    <includes refid="df/db7/AsgToolsConf_8h" local="yes">AsgTools/AsgToolsConf.h</includes>
    <includes local="yes">StoreGate/StoreGateSvc.h</includes>
    <includes refid="d3/d61/AsgMessaging_8h" local="yes">AsgTools/AsgMessaging.h</includes>
    <includedby refid="d9/d17/FeatureCollectStandalone_8h" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureCollectStandalone.h</includedby>
    <includedby refid="d2/d07/TypedHolder_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/Root/TypedHolder.cxx</includedby>
    <incdepgraph>
      <node id="328998">
        <label>StoreGate/StoreGateSvc.h</label>
      </node>
      <node id="329004">
        <label>AsgTools/IAsgTool.h</label>
        <link refid="df/dd4/IAsgTool_8h_source"/>
        <childnode refid="328988" relation="include">
        </childnode>
        <childnode refid="328997" relation="include">
        </childnode>
        <childnode refid="329005" relation="include">
        </childnode>
        <childnode refid="329006" relation="include">
        </childnode>
      </node>
      <node id="329006">
        <label>GaudiKernel/IAlgTool.h</label>
      </node>
      <node id="328987">
        <label>TrigNavStructure/BaseHolder.h</label>
        <link refid="df/d37/BaseHolder_8h_source"/>
        <childnode refid="328988" relation="include">
        </childnode>
        <childnode refid="328989" relation="include">
        </childnode>
        <childnode refid="328990" relation="include">
        </childnode>
      </node>
      <node id="328991">
        <label>stdint.h</label>
      </node>
      <node id="329009">
        <label>AthenaBaseComps/AthMsgStreamMacros.h</label>
      </node>
      <node id="328983">
        <label>stdexcept</label>
      </node>
      <node id="329002">
        <label>AsgTools/MsgLevel.h</label>
        <link refid="de/d80/MsgLevel_8h"/>
        <childnode refid="328988" relation="include">
        </childnode>
        <childnode refid="328997" relation="include">
        </childnode>
        <childnode refid="329003" relation="include">
        </childnode>
      </node>
      <node id="328997">
        <label>AsgTools/AsgToolsConf.h</label>
        <link refid="df/db7/AsgToolsConf_8h_source"/>
      </node>
      <node id="328988">
        <label>string</label>
      </node>
      <node id="328994">
        <label>map</label>
      </node>
      <node id="328981">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/TypedHolder.h</label>
        <link refid="TypedHolder.h"/>
        <childnode refid="328982" relation="include">
        </childnode>
        <childnode refid="328983" relation="include">
        </childnode>
        <childnode refid="328984" relation="include">
        </childnode>
        <childnode refid="328985" relation="include">
        </childnode>
        <childnode refid="328986" relation="include">
        </childnode>
        <childnode refid="328993" relation="include">
        </childnode>
        <childnode refid="328996" relation="include">
        </childnode>
        <childnode refid="328997" relation="include">
        </childnode>
        <childnode refid="328998" relation="include">
        </childnode>
        <childnode refid="328999" relation="include">
        </childnode>
      </node>
      <node id="328992">
        <label>boost/variant.hpp</label>
      </node>
      <node id="329003">
        <label>GaudiKernel/IMessageSvc.h</label>
      </node>
      <node id="328990">
        <label>TrigNavStructure/Types.h</label>
        <link refid="d5/d81/TrigNavStructure_2Types_8h_source"/>
        <childnode refid="328991" relation="include">
        </childnode>
        <childnode refid="328992" relation="include">
        </childnode>
      </node>
      <node id="328993">
        <label>TrigNavStructure/TriggerElement.h</label>
        <link refid="d7/d71/TriggerElement_8h_source"/>
        <childnode refid="328994" relation="include">
        </childnode>
        <childnode refid="328989" relation="include">
        </childnode>
        <childnode refid="328988" relation="include">
        </childnode>
        <childnode refid="328991" relation="include">
        </childnode>
        <childnode refid="328995" relation="include">
        </childnode>
        <childnode refid="328990" relation="include">
        </childnode>
      </node>
      <node id="329008">
        <label>AsgTools/MsgStreamMacros.h</label>
        <link refid="d3/ded/AsgTools_2AsgTools_2MsgStreamMacros_8h_source"/>
        <childnode refid="328997" relation="include">
        </childnode>
        <childnode refid="329002" relation="include">
        </childnode>
        <childnode refid="329009" relation="include">
        </childnode>
      </node>
      <node id="328989">
        <label>vector</label>
      </node>
      <node id="329001">
        <label>sstream</label>
      </node>
      <node id="328995">
        <label>iostream</label>
      </node>
      <node id="328986">
        <label>TrigNavStructure/TypelessHolder.h</label>
        <link refid="df/d30/TypelessHolder_8h_source"/>
        <childnode refid="328987" relation="include">
        </childnode>
      </node>
      <node id="329007">
        <label>GaudiKernel/MsgStream.h</label>
      </node>
      <node id="329000">
        <label>AsgTools/MsgStream.h</label>
        <link refid="d3/d95/AsgTools_2AsgTools_2MsgStream_8h_source"/>
        <childnode refid="328988" relation="include">
        </childnode>
        <childnode refid="329001" relation="include">
        </childnode>
        <childnode refid="328997" relation="include">
        </childnode>
        <childnode refid="329002" relation="include">
        </childnode>
        <childnode refid="329004" relation="include">
        </childnode>
        <childnode refid="329007" relation="include">
        </childnode>
      </node>
      <node id="329005">
        <label>AsgTools/AsgToolMacros.h</label>
        <link refid="d1/d68/AsgToolMacros_8h_source"/>
      </node>
      <node id="328999">
        <label>AsgTools/AsgMessaging.h</label>
        <link refid="d3/d61/AsgMessaging_8h_source"/>
        <childnode refid="328988" relation="include">
        </childnode>
        <childnode refid="328997" relation="include">
        </childnode>
        <childnode refid="329000" relation="include">
        </childnode>
        <childnode refid="329008" relation="include">
        </childnode>
      </node>
      <node id="328984">
        <label>type_traits</label>
      </node>
      <node id="328996">
        <label>AthContainers/OwnershipPolicy.h</label>
        <link refid="d3/da4/OwnershipPolicy_8h_source"/>
      </node>
      <node id="328982">
        <label>memory</label>
      </node>
      <node id="328985">
        <label>boost/type_traits/is_same.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="329012">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Combination.h</label>
        <link refid="dd/daf/Combination_8h_source"/>
        <childnode refid="329013" relation="include">
        </childnode>
        <childnode refid="329030" relation="include">
        </childnode>
        <childnode refid="329031" relation="include">
        </childnode>
        <childnode refid="329023" relation="include">
        </childnode>
        <childnode refid="329024" relation="include">
        </childnode>
      </node>
      <node id="329016">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CPAnalysisExamples/CPAnalysisExamples/ToolExamplesAlg.h</label>
        <link refid="d4/d75/ToolExamplesAlg_8h_source"/>
      </node>
      <node id="329031">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureContainer.h</label>
        <link refid="d5/de8/FeatureContainer_8h_source"/>
        <childnode refid="329032" relation="include">
        </childnode>
        <childnode refid="329013" relation="include">
        </childnode>
        <childnode refid="329030" relation="include">
        </childnode>
        <childnode refid="329023" relation="include">
        </childnode>
      </node>
      <node id="329037">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SUSYTools/SUSYTools/SUSYToolsDict.h</label>
        <link refid="dc/ded/SUSYToolsDict_8h_source"/>
      </node>
      <node id="329036">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SUSYTools/SUSYTools/SUSYObjDef_xAOD.h</label>
        <link refid="d0/daf/SUSYObjDef__xAOD_8h_source"/>
        <childnode refid="329037" relation="include">
        </childnode>
      </node>
      <node id="329014">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/TrigDecisionToolCore.h</label>
        <link refid="de/d03/TrigDecisionToolCore_8h_source"/>
        <childnode refid="329015" relation="include">
        </childnode>
        <childnode refid="329023" relation="include">
        </childnode>
      </node>
      <node id="329018">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigAnalysisTest/TrigAnalysisTest/ITest.h</label>
        <link refid="dd/d82/ITest_8h_source"/>
        <childnode refid="329017" relation="include">
        </childnode>
        <childnode refid="329019" relation="include">
        </childnode>
        <childnode refid="329020" relation="include">
        </childnode>
        <childnode refid="329021" relation="include">
        </childnode>
      </node>
      <node id="329026">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TriggerMatchingTool/TriggerMatchingTool/TriggerMatchingToolDict.h</label>
        <link refid="de/db3/TriggerMatchingToolDict_8h_source"/>
      </node>
      <node id="329015">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/TrigDecisionTool.h</label>
        <link refid="d7/df7/TrigDecisionTool_8h_source"/>
        <childnode refid="329016" relation="include">
        </childnode>
        <childnode refid="329017" relation="include">
        </childnode>
        <childnode refid="329018" relation="include">
        </childnode>
        <childnode refid="329022" relation="include">
        </childnode>
        <childnode refid="329023" relation="include">
        </childnode>
        <childnode refid="329024" relation="include">
        </childnode>
        <childnode refid="329027" relation="include">
        </childnode>
        <childnode refid="329028" relation="include">
        </childnode>
      </node>
      <node id="329010">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/TypedHolder.h</label>
        <link refid="TypedHolder.h"/>
        <childnode refid="329011" relation="include">
        </childnode>
      </node>
      <node id="329038">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/ChainGroupFunctions.h</label>
        <link refid="d3/d14/ChainGroupFunctions_8h_source"/>
        <childnode refid="329014" relation="include">
        </childnode>
        <childnode refid="329023" relation="include">
        </childnode>
      </node>
      <node id="329033">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SUSYTools/SUSYTools/ISUSYObjDef_xAODTool.h</label>
        <link refid="d1/d7a/ISUSYObjDef__xAODTool_8h_source"/>
        <childnode refid="329034" relation="include">
        </childnode>
        <childnode refid="329035" relation="include">
        </childnode>
        <childnode refid="329036" relation="include">
        </childnode>
      </node>
      <node id="329021">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigAnalysisTest/TrigAnalysisTest/TestFactory.h</label>
        <link refid="d7/d5f/TestFactory_8h_source"/>
      </node>
      <node id="329022">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigAnalysisTest/TrigAnalysisTest/TriggersFiredTest.h</label>
        <link refid="da/d06/TriggersFiredTest_8h_source"/>
      </node>
      <node id="329029">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigTauMatching/TrigTauMatching/TrigTauMatchingDict.h</label>
        <link refid="dc/d01/TrigTauMatchingDict_8h_source"/>
      </node>
      <node id="329034">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SUSYTools/src/ApplySUSYTools.h</label>
        <link refid="dd/dcc/ApplySUSYTools_8h_source"/>
      </node>
      <node id="329019">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigAnalysisTest/TrigAnalysisTest/BasicTriggerFired.h</label>
        <link refid="d5/dd0/BasicTriggerFired_8h_source"/>
      </node>
      <node id="329011">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureCollectStandalone.h</label>
        <link refid="d9/d17/FeatureCollectStandalone_8h_source"/>
        <childnode refid="329012" relation="include">
        </childnode>
        <childnode refid="329031" relation="include">
        </childnode>
      </node>
      <node id="329032">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/ChainGroup.h</label>
        <link refid="d2/dd8/ChainGroup_8h_source"/>
        <childnode refid="329033" relation="include">
        </childnode>
        <childnode refid="329038" relation="include">
        </childnode>
        <childnode refid="329039" relation="include">
        </childnode>
        <childnode refid="329013" relation="include">
        </childnode>
        <childnode refid="329030" relation="include">
        </childnode>
        <childnode refid="329014" relation="include">
        </childnode>
        <childnode refid="329023" relation="include">
        </childnode>
      </node>
      <node id="329030">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/ExpertMethods.h</label>
        <link refid="dd/d57/ExpertMethods_8h_source"/>
        <childnode refid="329014" relation="include">
        </childnode>
        <childnode refid="329023" relation="include">
        </childnode>
      </node>
      <node id="329035">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SUSYTools/src/SUSYToolsAlg.h</label>
        <link refid="d4/dd2/SUSYToolsAlg_8h_source"/>
      </node>
      <node id="329020">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigAnalysisTest/TrigAnalysisTest/Run1BStoxAODTrigger.h</label>
        <link refid="dd/d41/Run1BStoxAODTrigger_8h_source"/>
      </node>
      <node id="329017">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigAnalysisTest/TrigAnalysisTest/AthenaTestHarness.h</label>
        <link refid="d5/d93/AthenaTestHarness_8h_source"/>
      </node>
      <node id="329025">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TriggerMatchingTool/TriggerMatchingTool/MatchingImplementation.h</label>
        <link refid="d1/d9b/MatchingImplementation_8h_source"/>
      </node>
      <node id="329039">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/ConfigurationAccess.h</label>
        <link refid="df/d4d/ConfigurationAccess_8h_source"/>
        <childnode refid="329014" relation="include">
        </childnode>
        <childnode refid="329023" relation="include">
        </childnode>
      </node>
      <node id="329028">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigTauMatching/TrigTauMatching/TrigTauMatching.h</label>
        <link refid="dc/d5a/TrigTauMatching_8h_source"/>
        <childnode refid="329029" relation="include">
        </childnode>
      </node>
      <node id="329023">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/TrigDecisionToolDict.h</label>
        <link refid="d4/df1/TrigDecisionToolDict_8h_source"/>
      </node>
      <node id="329027">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigTauMatching/src/TrigTauMatching_example.h</label>
        <link refid="d7/d96/TrigTauMatching__example_8h_source"/>
      </node>
      <node id="329013">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/DecisionAccess.h</label>
        <link refid="d7/d07/DecisionAccess_8h_source"/>
        <childnode refid="329014" relation="include">
        </childnode>
        <childnode refid="329023" relation="include">
        </childnode>
      </node>
      <node id="329024">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TriggerMatchingTool/TriggerMatchingTool/MatchingTool.h</label>
        <link refid="df/d10/MatchingTool_8h_source"/>
        <childnode refid="329025" relation="include">
        </childnode>
        <childnode refid="329026" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="d3/d2b/classHLT_1_1TypedHolder" prot="public">HLT::TypedHolder</innerclass>
    <innernamespace refid="dd/d7f/namespaceHLTNavDetails">HLTNavDetails</innernamespace>
    <innernamespace refid="dc/d8d/namespaceHLT">HLT</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="de/de2/TypedHolder_8h_1ab7d51750a9d98949b3dbee063e82728d" prot="public" static="no">
        <type><ref refid="dd/d95/classStoreGateSvc" kindref="compound">StoreGateSvc</ref> *</type>
        <definition>typedef StoreGateSvc* EventPtr</definition>
        <argsstring></argsstring>
        <name>EventPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/TypedHolder.h" line="28" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/TypedHolder.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Emacs<sp/>-*-<sp/>c++<sp/>-*-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TRIGNAVSTRUCTURE_TYPEDHOLDER_H</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TRIGNAVSTRUCTURE_TYPEDHOLDER_H</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/type_traits/is_same.hpp&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigNavStructure/TypelessHolder.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigNavStructure/TriggerElement.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigNavStructure/TypelessHolder.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;AthContainers/OwnershipPolicy.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ASGTOOL_STANDALONE<sp/>//guarded<sp/>b/c<sp/>athena<sp/>includes<sp/>its<sp/>own</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d0/d66/ClassID__traits_8h" kindref="compound" tooltip="File providing the ClassID_traits traits class.">xAODCore/ClassID_traits.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;AsgTools/AsgToolsConf.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ASGTOOL_STANDALONE</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;AsgTools/SgTEvent.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="d2/dd3/classasg_1_1SgTEvent" kindref="compound">asg::SgTEvent</ref>*<sp/><ref refid="dd/d95/classStoreGateSvc" kindref="compound" tooltip="Dummy implementation useful for simple testing.">EventPtr</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//ASGTOOL_STANDALONE</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ASGTOOL_ATHENA</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;StoreGate/StoreGateSvc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="dd/d95/classStoreGateSvc" kindref="compound" tooltip="Dummy implementation useful for simple testing.">StoreGateSvc</ref>*<sp/><ref refid="dd/d95/classStoreGateSvc" kindref="compound" tooltip="Dummy implementation useful for simple testing.">EventPtr</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//ASGTOOL_ATHENA</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;AsgTools/AsgMessaging.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//forward<sp/>declarations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="de/dc9/classTrigRoiDescriptor" kindref="compound" tooltip="Describes the Region of Ineterest geometry It has basically 9 parameters.">TrigRoiDescriptor</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="de/df5/classTrigRoiDescriptorCollection" kindref="compound">TrigRoiDescriptorCollection</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">HLTNavDetails{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>std::string<sp/>formatSGkey(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>prefix,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>containername,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label);</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">HLT{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FEATURE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CONTAINER&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TypedHolder;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TypedHolder&lt;<ref refid="de/dc9/classTrigRoiDescriptor" kindref="compound" tooltip="Describes the Region of Ineterest geometry It has basically 9 parameters.">TrigRoiDescriptor</ref>,<ref refid="de/df5/classTrigRoiDescriptorCollection" kindref="compound">TrigRoiDescriptorCollection</ref>&gt;;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FEATURE,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CONTAINER&gt;</highlight></codeline>
<codeline lineno="61" refid="d3/d2b/classHLT_1_1TypedHolder" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d3/d2b/classHLT_1_1TypedHolder" kindref="compound" tooltip="doubly templated class interfacing access to feature containers in StoreGate.">TypedHolder</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="d1/de7/classHLT_1_1TypelessHolder" kindref="compound">TypelessHolder</ref>,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>asg::AsgMessaging<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value&gt;<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>StatusCode_if<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;boost::is_same&lt;T,CONTAINER&gt;::value<sp/>==<sp/>value,StatusCode&gt;::type;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="d3/d2b/classHLT_1_1TypedHolder_1aaf7ecd9c31fb51caf55086e51d237930" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d2b/classHLT_1_1TypedHolder" kindref="compound" tooltip="doubly templated class interfacing access to feature containers in StoreGate.">TypedHolder</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/d7d/classHLT_1_1BaseHolder" kindref="compound">BaseHolder</ref>&amp;<sp/>baseholder,<sp/><ref refid="dd/d95/classStoreGateSvc" kindref="compound" tooltip="Dummy implementation useful for simple testing.">EventPtr</ref><sp/>store,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>container_name<sp/>=<sp/><ref refid="d0/dbd/structClassID__traits" kindref="compound">ClassID_traits&lt;CONTAINER&gt;::typeName</ref>())<sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="d1/de7/classHLT_1_1TypelessHolder" kindref="compound">TypelessHolder</ref>(baseholder.typeClid(),baseholder.label(),baseholder.subTypeIndex()),<sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>asg::<ref refid="d1/d97/classasg_1_1AsgMessaging_1aa6e565de0931b6458b932cbb6a8ec55f" kindref="member" tooltip="Constructor with a name.">AsgMessaging</ref>(</highlight><highlight class="stringliteral">&quot;TypedHolder&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>m_store(store),</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cont(0)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if(!clidCheck&lt;FEATURE&gt;())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//throw<sp/>std::runtime_error(&quot;attempted<sp/>construction<sp/>with<sp/>CLID<sp/>mismatch!<sp/>Check<sp/>template<sp/>parameter<sp/>and<sp/>passed<sp/>typeless<sp/>holder&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_key<sp/>=<sp/>HLTNavDetails::formatSGkey(</highlight><highlight class="stringliteral">&quot;HLT&quot;</highlight><highlight class="normal">,container_name,this-&gt;label());</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85" refid="d3/d2b/classHLT_1_1TypedHolder_1a788d73d3e9d01aee04f0fd049630bc3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d2b/classHLT_1_1TypedHolder" kindref="compound" tooltip="doubly templated class interfacing access to feature containers in StoreGate.">TypedHolder</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/de7/classHLT_1_1TypelessHolder" kindref="compound">TypelessHolder</ref>&amp;<sp/>typeless,<sp/><ref refid="dd/d95/classStoreGateSvc" kindref="compound" tooltip="Dummy implementation useful for simple testing.">EventPtr</ref><sp/>store,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>container_name<sp/>=<sp/><ref refid="d0/dbd/structClassID__traits" kindref="compound">ClassID_traits&lt;CONTAINER&gt;::typeName</ref>())<sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="d1/de7/classHLT_1_1TypelessHolder" kindref="compound">TypelessHolder</ref>(typeless),</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>asg::<ref refid="d1/d97/classasg_1_1AsgMessaging_1aa6e565de0931b6458b932cbb6a8ec55f" kindref="member" tooltip="Constructor with a name.">AsgMessaging</ref>(</highlight><highlight class="stringliteral">&quot;TypedHolder&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>m_store(store),</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cont(0)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(!clidCheck&lt;FEATURE&gt;())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>throw<sp/>std::runtime_error(&quot;attempted<sp/>construction<sp/>with<sp/>CLID<sp/>mismatch!<sp/>Check<sp/>template<sp/>parameter<sp/>and<sp/>passed<sp/>typeless<sp/>holder&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_key<sp/>=<sp/>HLTNavDetails::formatSGkey(</highlight><highlight class="stringliteral">&quot;HLT&quot;</highlight><highlight class="normal">,container_name,this-&gt;label());</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="d3/d2b/classHLT_1_1TypedHolder_1a8209d7e5d3c460d5a1f2859dff00d35d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="d3/d2b/classHLT_1_1TypedHolder_1a8209d7e5d3c460d5a1f2859dff00d35d" kindref="member" tooltip="key used to access EventStore">key</ref>(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_key;}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="d3/d2b/classHLT_1_1TypedHolder_1a0bbd99124600d06ac7da51f89066599b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/>StatusCode_if&lt;T,true&gt;<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/def/classT" kindref="compound">T</ref>*&amp;<sp/>destination,<sp/><ref refid="dc/d50/classHLT_1_1TriggerElement_1_1ObjectIndex" kindref="compound" tooltip="Helper class for conversion from/to int stored in TE and pair of ints used in Navigation...">HLT::TriggerElement::ObjectIndex</ref><sp/>idx){</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(syncWithStore().isFailure()){</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;accessing<sp/>holder<sp/>with<sp/>key:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="d3/d2b/classHLT_1_1TypedHolder_1a8209d7e5d3c460d5a1f2859dff00d35d" kindref="member" tooltip="key used to access EventStore">key</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>sync<sp/>with<sp/>store<sp/>failed<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_cont-&gt;size()<sp/>&lt;<sp/>idx.objectsEnd()){</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;accessing<sp/>holder<sp/>with<sp/>key:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="d3/d2b/classHLT_1_1TypedHolder_1a8209d7e5d3c460d5a1f2859dff00d35d" kindref="member" tooltip="key used to access EventStore">key</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>index<sp/>past<sp/>range<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;idx<sp/>range<sp/>is:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>idx.objectsBegin()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>idx.objectsEnd()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>container<sp/>size:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_cont-&gt;size());</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>we<sp/>get<sp/>a<sp/>fresh<sp/>pointer<sp/>as<sp/>were<sp/>about<sp/>to<sp/>set<sp/>it<sp/>to<sp/>a<sp/>newly<sp/>created<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(destination){</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ATH_MSG_ERROR(&quot;reference<sp/>pointe<sp/>provided<sp/>is<sp/>already<sp/>set&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CONTAINER*<sp/>nonConstDestination<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CONTAINER(<ref refid="dd/d59/namespaceSG_1acd9d1a31242c6243cc1c6fab0fbc7cd8ad7d4cf2303700f0966e4140f236c4bf1" kindref="member" tooltip="this data object is a view, it does not own its elmts">SG::VIEW_ELEMENTS</ref>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>cast<sp/>to<sp/>be<sp/>able<sp/>to<sp/>use<sp/>non<sp/>const<sp/>iterators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CONTAINER*<sp/>src<sp/>=<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">CONTAINER*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(m_cont);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CONTAINER::iterator<sp/>beg<sp/>=<sp/>src-&gt;begin();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CONTAINER::iterator<sp/>end<sp/>=<sp/>src-&gt;begin();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::advance(beg,<sp/>idx.objectsBegin());</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::advance(end,<sp/>idx.objectsEnd());</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nonConstDestination-&gt;insert(nonConstDestination-&gt;end(),<sp/>beg,<sp/>end);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>now<sp/>own<sp/>we<sp/>don&apos;t<sp/>want<sp/>anybody<sp/>modifying<sp/>the<sp/>container</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>destination<sp/>=<sp/>nonConstDestination;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="d3/d2b/classHLT_1_1TypedHolder_1a70dd41fb17ebd07f572d8a95fc401c0c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/>StatusCode_if&lt;T,false&gt;<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/def/classT" kindref="compound">T</ref>*&amp;<sp/>destination,<sp/><ref refid="dc/d50/classHLT_1_1TriggerElement_1_1ObjectIndex" kindref="compound" tooltip="Helper class for conversion from/to int stored in TE and pair of ints used in Navigation...">HLT::TriggerElement::ObjectIndex</ref><sp/>idx){</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((idx.objectsEnd()<sp/>-<sp/>idx.objectsBegin())!=1){</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ATH_MSG_ERROR(&quot;accessing<sp/>holder<sp/>with<sp/>key:<sp/>&quot;<sp/>&lt;&lt;<sp/>key()<sp/>&lt;&lt;<sp/>&quot;index<sp/>is<sp/>not<sp/>single<sp/>element:<sp/>&quot;<sp/>&lt;&lt;<sp/>idx.objectsBegin()<sp/>&lt;&lt;<sp/>&quot;:&quot;<sp/>&lt;&lt;<sp/>idx.objectsEnd());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(syncWithStore().isFailure()){</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ATH_MSG_ERROR(&quot;accessing<sp/>holder<sp/>with<sp/>key:<sp/>&quot;<sp/>&lt;&lt;<sp/>key()<sp/>&lt;&lt;<sp/>&quot;<sp/>sync<sp/>with<sp/>store<sp/>failed<sp/>&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_cont-&gt;size()<sp/>&lt;<sp/>idx.objectsBegin()){</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ATH_MSG_ERROR(&quot;accessing<sp/>holder<sp/>with<sp/>key:<sp/>&quot;<sp/>&lt;&lt;<sp/>key()<sp/>&lt;&lt;<sp/>&quot;<sp/>index<sp/>past<sp/>range<sp/>&quot;<sp/>&lt;&lt;<sp/>&quot;indexBegin<sp/>is:<sp/>&quot;<sp/>&lt;&lt;<sp/>idx.objectsBegin()<sp/>&lt;&lt;<sp/>&quot;<sp/>container<sp/>size:<sp/>&quot;<sp/>&lt;&lt;<sp/>m_cont-&gt;size()<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//everything<sp/>went<sp/>fine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>destination<sp/>=<sp/>m_cont-&gt;at(idx.objectsBegin());</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>StatusCode<sp/>syncWithStore(){</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_cont)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>StatusCode<sp/>sc<sp/>=<sp/>m_store-&gt;retrieve(m_cont,<ref refid="d3/d2b/classHLT_1_1TypedHolder_1a8209d7e5d3c460d5a1f2859dff00d35d" kindref="member" tooltip="key used to access EventStore">key</ref>());</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sanity<sp/>checks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sc.isFailure())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!m_cont)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>TypedHolder(){;}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d95/classStoreGateSvc" kindref="compound" tooltip="Dummy implementation useful for simple testing.">EventPtr</ref><sp/>m_store;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CONTAINER*<sp/>m_cont;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>m_key;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>};<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight><highlight class="comment">//namespace<sp/>HLT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigNavStructure/TrigNavStructure/TypedHolder.h"/>
  </compounddef>
</doxygen>
