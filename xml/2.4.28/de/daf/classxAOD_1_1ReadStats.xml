<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="de/daf/classxAOD_1_1ReadStats" kind="class" prot="public">
    <compoundname>xAOD::ReadStats</compoundname>
    <includes refid="d6/dda/ReadStats_8h" local="no">ReadStats.h</includes>
      <sectiondef kind="user-defined">
      <header>Raw information accessor/setter functions</header>
      <description><para><anchor id="_1amgrp3e5eaf0f07593ad03c019ee2e74c870d"/> </para></description>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1a36dc4b142ea1b595187f8b093cbff274" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::ReadStats::setBytesRead</definition>
        <argsstring>(::Long64_t num)</argsstring>
        <name>setBytesRead</name>
        <param>
          <type>::Long64_t</type>
          <declname>num</declname>
        </param>
        <briefdescription>
<para>Set how many bytes were read in total during the analysis. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="147" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="532" bodyend="536"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1ae99f22c0b484f828b642316699183f27" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>::Long64_t</type>
        <definition>Long64_t xAOD::ReadStats::bytesRead</definition>
        <argsstring>() const </argsstring>
        <name>bytesRead</name>
        <briefdescription>
<para>Get how many bytes were read in total during the analysis. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="149" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="538" bodyend="541"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1a96800f5a49be4cef66ee31fe367abf43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::ReadStats::setBranchNum</definition>
        <argsstring>(::Int_t num)</argsstring>
        <name>setBranchNum</name>
        <param>
          <type>::Int_t</type>
          <declname>num</declname>
        </param>
        <briefdescription>
<para>Set the total number of branches on the input. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="152" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="543" bodyend="547"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1a471479be37942250a756f8f4aa3bc24c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>::Int_t</type>
        <definition>Int_t xAOD::ReadStats::branchNum</definition>
        <argsstring>() const </argsstring>
        <name>branchNum</name>
        <briefdescription>
<para>Get the total number of branches on the input. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="154" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="549" bodyend="552"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1a8b053b3e6ef1eec40daaa1bac0c6e58c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::ReadStats::setFileReads</definition>
        <argsstring>(::Int_t num)</argsstring>
        <name>setFileReads</name>
        <param>
          <type>::Int_t</type>
          <declname>num</declname>
        </param>
        <briefdescription>
<para>Set the total number of file read calls. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="157" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="554" bodyend="558"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1ac08c48fa80199e64a007d545490650fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>::Int_t</type>
        <definition>Int_t xAOD::ReadStats::fileReads</definition>
        <argsstring>() const </argsstring>
        <name>fileReads</name>
        <briefdescription>
<para>Get the total number of file read calls. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="159" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="560" bodyend="563"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1ace7752b4d6131eeefa91bb8f479b9ac7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::ReadStats::setCacheSize</definition>
        <argsstring>(::Int_t size)</argsstring>
        <name>setCacheSize</name>
        <param>
          <type>::Int_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Set the TTreeCache size used. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="162" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="565" bodyend="569"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1ac43fdea87dc5e3539ae14477c2b96654" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>::Int_t</type>
        <definition>Int_t xAOD::ReadStats::cacheSize</definition>
        <argsstring>() const </argsstring>
        <name>cacheSize</name>
        <briefdescription>
<para>Get the TTreeCache size used. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="164" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="571" bodyend="574"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1ac135ff98814a52474558aa16c74b810c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::ReadStats::setReadTime</definition>
        <argsstring>(::Double_t time)</argsstring>
        <name>setReadTime</name>
        <param>
          <type>::Double_t</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Set the time spent in reading the data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="167" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="576" bodyend="580"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1ad8603253943c09762ecc71dccd04ffa5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>::Double_t</type>
        <definition>Double_t xAOD::ReadStats::readTime</definition>
        <argsstring>() const </argsstring>
        <name>readTime</name>
        <briefdescription>
<para>Get the time spent in reading the data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="169" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="582" bodyend="585"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1a7ef71f6a956919d5689f9980a08ceecc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::ReadStats::setUnzipTime</definition>
        <argsstring>(::Double_t time)</argsstring>
        <name>setUnzipTime</name>
        <param>
          <type>::Double_t</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Set the time spent in unzipping the data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="172" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="587" bodyend="591"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1ab01a58106f50a2412367a9bc4cc33083" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>::Double_t</type>
        <definition>Double_t xAOD::ReadStats::unzipTime</definition>
        <argsstring>() const </argsstring>
        <name>unzipTime</name>
        <briefdescription>
<para>Get the time spent in unzipping the data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="174" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="593" bodyend="596"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1a46ebc11a37bdaca1afcc8203239fb2c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::ReadStats::setProcessTime</definition>
        <argsstring>(::Double_t time)</argsstring>
        <name>setProcessTime</name>
        <param>
          <type>::Double_t</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Set the time spent in processing events. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="177" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="598" bodyend="602"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1a3b63e8d1b22061211b0b78892513ed19" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>::Double_t</type>
        <definition>Double_t xAOD::ReadStats::processTime</definition>
        <argsstring>() const </argsstring>
        <name>processTime</name>
        <briefdescription>
<para>Get the time spent in processing events. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="179" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="604" bodyend="607"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Functions used for filling the object</header>
      <description><para><anchor id="_1amgrpd65099f5c3171dfe1191be9dbd1bed44"/> </para></description>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1af7e91275e5072ee3af203fef4fee2c01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dee/classxAOD_1_1BranchStats" kindref="compound">BranchStats</ref> *</type>
        <definition>BranchStats * xAOD::ReadStats::branch</definition>
        <argsstring>(const std::string &amp;prefix, SG::auxid_t auxid)</argsstring>
        <name>branch</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member">SG::auxid_t</ref></type>
          <declname>auxid</declname>
        </param>
        <briefdescription>
<para>Access the description of a branch. Creating it if necessary. </para>        </briefdescription>
        <detaileddescription>
<para>This function is used to access a branch&apos;s description for modification. The function creates the description object if it doesn&apos;t exist yet.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>prefix</parametername>
</parameternamelist>
<parameterdescription>
<para>The prefix for the <ref refid="dd/d44/namespacexAOD" kindref="compound">xAOD</ref> branch </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>auxid</parametername>
</parameternamelist>
<parameterdescription>
<para>The auxiliary ID of the variable belonging to the branch </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="d4/dc4/structA" kindref="compound">A</ref> pointer to the object holding the access statistics </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="190" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="616" bodyend="644"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1ad23eed58dce298f9afcd62617e8ea75e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d2/dee/classxAOD_1_1BranchStats" kindref="compound">BranchStats</ref> *</type>
        <definition>const BranchStats * xAOD::ReadStats::branch</definition>
        <argsstring>(const std::string &amp;prefix, SG::auxid_t auxid) const </argsstring>
        <name>branch</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member">SG::auxid_t</ref></type>
          <declname>auxid</declname>
        </param>
        <briefdescription>
<para>Get information about a specific variable. </para>        </briefdescription>
        <detaileddescription>
<para>Get the access statistics of a single <ref refid="dd/d44/namespacexAOD" kindref="compound">xAOD</ref> branch</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>prefix</parametername>
</parameternamelist>
<parameterdescription>
<para>The prefix for the <ref refid="dd/d44/namespacexAOD" kindref="compound">xAOD</ref> branch </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>auxid</parametername>
</parameternamelist>
<parameterdescription>
<para>The auxiliary ID of the variable belonging to the branch </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="d4/dc4/structA" kindref="compound">A</ref> pointer to the object describing the access statistics, or a null pointer if the branch is unknown </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="193" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="653" bodyend="667"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1a617fc365848c3839b347f21270c22c0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/dee/classxAOD_1_1BranchStats" kindref="compound">BranchStats</ref> *</type>
        <definition>BranchStats * xAOD::ReadStats::container</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>container</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Access the description of a container. Creating it if necessary. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="198" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="669" bodyend="679"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1a980ab446ee592b50a46c9a6269d294c9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d2/dee/classxAOD_1_1BranchStats" kindref="compound">BranchStats</ref> *</type>
        <definition>const BranchStats * xAOD::ReadStats::container</definition>
        <argsstring>(const std::string &amp;name) const </argsstring>
        <name>container</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Access the description of a container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="200" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="681" bodyend="691"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1aeb53d319411d09080e43461a43767d95" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="de/daf/classxAOD_1_1ReadStats_1ade4ac9f5a7e246eaf0ba9eb0b322a0b7" kindref="member">Map_t</ref> &amp;</type>
        <definition>const ReadStats::Map_t &amp; xAOD::ReadStats::branches</definition>
        <argsstring>() const </argsstring>
        <name>branches</name>
        <briefdescription>
<para>Get all variable information. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="203" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="693" bodyend="696"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1a86a774f9cccfc52d61c990dae0c0c9e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="de/daf/classxAOD_1_1ReadStats_1af2868b1b0aaedc7abd02661a328f7dc8" kindref="member">MapC_t</ref> &amp;</type>
        <definition>const ReadStats::MapC_t &amp; xAOD::ReadStats::containers</definition>
        <argsstring>() const </argsstring>
        <name>containers</name>
        <briefdescription>
<para>Get information about all the containers. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="205" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="698" bodyend="701"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Function used for merging objects of this type</header>
      <description><para><anchor id="_1amgrpc185afe81170296f914eebdf9a3f5e37"/> </para></description>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1afd0ddc26cab62f984632d5512bd64ddb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xAOD::ReadStats::isCompatible</definition>
        <argsstring>(const ReadStats &amp;rh) const </argsstring>
        <name>isCompatible</name>
        <param>
          <type>const <ref refid="de/daf/classxAOD_1_1ReadStats" kindref="compound">ReadStats</ref> &amp;</type>
          <declname>rh</declname>
        </param>
        <briefdescription>
<para>Function checking if two objects are &quot;compatible&quot;. </para>        </briefdescription>
        <detaileddescription>
<para>This function checks whether two objects are &quot;compatible&quot; with each other. This just means that it checks whether it appears as if the two statistics objects would&apos;ve been recorded from the same input type or not.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rh</parametername>
</parameternamelist>
<parameterdescription>
<para>Object to compare to this object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the two objects are compatible, <computeroutput>false</computeroutput> otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="213" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="712" bodyend="720"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1af5d5513a5a02518bb1c0a98ec7ff0133" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="de/daf/classxAOD_1_1ReadStats" kindref="compound">ReadStats</ref> &amp;</type>
        <definition>ReadStats &amp; xAOD::ReadStats::add</definition>
        <argsstring>(const ReadStats &amp;rh)</argsstring>
        <name>add</name>
        <param>
          <type>const <ref refid="de/daf/classxAOD_1_1ReadStats" kindref="compound">ReadStats</ref> &amp;</type>
          <declname>rh</declname>
        </param>
        <briefdescription>
<para>Function merging two objects. </para>        </briefdescription>
        <detaileddescription>
<para>This function is used to merge the information from two objects.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rh</parametername>
</parameternamelist>
<parameterdescription>
<para>The object to be merged into this one </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="d4/dc4/structA" kindref="compound">A</ref> reference to the merged object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="215" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="727" bodyend="755"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1a1f46f7e58ed9133f8ddd2689d431f061" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="de/daf/classxAOD_1_1ReadStats" kindref="compound">ReadStats</ref> &amp;</type>
        <definition>ReadStats &amp; xAOD::ReadStats::operator+=</definition>
        <argsstring>(const ReadStats &amp;rh)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="de/daf/classxAOD_1_1ReadStats" kindref="compound">ReadStats</ref> &amp;</type>
          <declname>rh</declname>
        </param>
        <briefdescription>
<para>Operator merging two objects. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="217" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="757" bodyend="760"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1a62782e694c51c18955b1e986ff60a932" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>::Int_t</type>
        <definition>Int_t xAOD::ReadStats::Merge</definition>
        <argsstring>(::TCollection *coll)</argsstring>
        <name>Merge</name>
        <param>
          <type>::TCollection *</type>
          <declname>coll</declname>
        </param>
        <briefdescription>
<para>Function merging the information from multiple objects. </para>        </briefdescription>
        <detaileddescription>
<para>This function makes it possible to properly merge objects coming from PROOF workers, or from separate ROOT files.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coll</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d4/dc4/structA" kindref="compound">A</ref> collection of <ref refid="de/daf/classxAOD_1_1ReadStats" kindref="compound">xAOD::ReadStats</ref> objects </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>0</computeroutput> in case of failure, a positive number in case of success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="220" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="1115" bodyend="1145"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Function for setting up a TTreeCache object</header>
      <description><para><anchor id="_1amgrpe9dffccf9b5635b96c90b6293def6973"/> </para></description>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1a9b1d9807a99e292a7c632f7ecf44b1be" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::ReadStats::addToTreeCache</definition>
        <argsstring>(::TTree *tree) const </argsstring>
        <name>addToTreeCache</name>
        <param>
          <type>::TTree *</type>
          <declname>tree</declname>
        </param>
        <briefdescription>
<para>Add all branches that were ever accessed, to the TTreeCache. </para>        </briefdescription>
        <detaileddescription>
<para>This function can be used to add all the branches that this object knows about, to the cache of the TTree given to the function.</para><para>It can be useful for blankly enabling caching for all the variables that an <ref refid="dd/d44/namespacexAOD" kindref="compound">xAOD</ref> analysis accessed previously.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>Tree for which the caching should be configured </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="228" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="770" bodyend="781"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1aa5a9d47874424406cf764356b2c115e3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::ReadStats::addToTreeCacheByEntries</definition>
        <argsstring>(::TTree *tree,::Long64_t minEntries) const </argsstring>
        <name>addToTreeCacheByEntries</name>
        <param>
          <type>::TTree *</type>
          <declname>tree</declname>
        </param>
        <param>
          <type>::Long64_t</type>
          <declname>minEntries</declname>
        </param>
        <briefdescription>
<para>Add the branches accessed more than n times to the TTreeCache. </para>        </briefdescription>
        <detaileddescription>
<para>This should be one of the most useful functions of this class. It can be used to selectively enable the caching for the branches which were accessed more than a specified number of times in a previous running.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>Tree for which the caching should be configured </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minEntries</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum number of entries read from the variable to qualify for caching </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="231" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="791" bodyend="803"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1abf614b19f1f925c70ddc2815db29e327" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::ReadStats::addToTreeCacheByEntryFrac</definition>
        <argsstring>(::TTree *tree,::Double_t minEvFraction) const </argsstring>
        <name>addToTreeCacheByEntryFrac</name>
        <param>
          <type>::TTree *</type>
          <declname>tree</declname>
        </param>
        <param>
          <type>::Double_t</type>
          <declname>minEvFraction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add the branches accessed more than a given fraction of times to the TTreeCache</para><para>This should be one of the most useful functions of this class. It can be used to selectively enable the caching for the branches which were accessed more than a specified fraction of times in a previous running. This is slightly more general than the version of this function expecting an absolute entry number.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>Tree for which the caching should be configured </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minEvFraction</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum fraction of entries read from the branches that should be added to the cache </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="235" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="815" bodyend="828"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1a728e94ad612e2a578302e36f9205f733" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::ReadStats::addToTreeCacheByBytes</definition>
        <argsstring>(::TTree *tree,::Long64_t minBytes) const </argsstring>
        <name>addToTreeCacheByBytes</name>
        <param>
          <type>::TTree *</type>
          <declname>tree</declname>
        </param>
        <param>
          <type>::Long64_t</type>
          <declname>minBytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add the branches from which more than x bytes were read, to the TTreeCache</para><para>This function can be used to add all the variables to the cache from which more than some bytes were read in a previous running.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>Tree for which the caching should be configured </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minBytes</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum number of bytes read from the variable to qualify for caching </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="238" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="837" bodyend="849"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1ab0e77e31ee3ab33a55e947b1eebdc2ff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::ReadStats::addToTreeCacheByByteFrac</definition>
        <argsstring>(::TTree *tree,::Double_t minByteFraction) const </argsstring>
        <name>addToTreeCacheByByteFrac</name>
        <param>
          <type>::TTree *</type>
          <declname>tree</declname>
        </param>
        <param>
          <type>::Double_t</type>
          <declname>minByteFraction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add the branches from whith more than a given fraction of the bytes were read, to the TTreeCache</para><para>This function can be used to add all the variables to the cache from which more than some fraction of the bytes were read in a previous running.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>Tree for which the caching should be configured </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minByteFraction</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum fraction of bytes read from the variable to qualify for caching </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="242" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="860" bodyend="873"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Functions accessing branch names according to certain rules</header>
      <description><para><anchor id="_1amgrp228f66ae3c586e345ba1d576705899cd"/> </para></description>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1a1c5e44b9889c24f2c3db0d3565595a22" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; xAOD::ReadStats::branchesByEntries</definition>
        <argsstring>(::Long64_t minEntries) const </argsstring>
        <name>branchesByEntries</name>
        <param>
          <type>::Long64_t</type>
          <declname>minEntries</declname>
        </param>
        <briefdescription>
<para>Get the branches accessed more than n times. </para>        </briefdescription>
        <detaileddescription>
<para>This function can be used to get a list of branch names that were accessed more than a specified number of times in the analysis.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>minEntries</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum number of entries read from the variables </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="d4/dc4/structA" kindref="compound">A</ref> list of branch names fulfilling the requirement </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="251" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="882" bodyend="885"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1ad8cb4d105dbc9636b4fac067023a2b90" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; xAOD::ReadStats::branchesByEntryFrac</definition>
        <argsstring>(::Double_t minEvFraction) const </argsstring>
        <name>branchesByEntryFrac</name>
        <param>
          <type>::Double_t</type>
          <declname>minEvFraction</declname>
          <defname>minEvFrac</defname>
        </param>
        <briefdescription>
<para>Get the branches accessed more than a given fraction of times. </para>        </briefdescription>
        <detaileddescription>
<para>This function can be used to get a list of branch names that were accessed more than some fraction of times in the analysis.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>minEvFrac</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum fraction of entries read from the variables </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="d4/dc4/structA" kindref="compound">A</ref> list of branch names fulfilling the requirement </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="254" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="894" bodyend="898"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1ad6b44dbf32f329c1e287cc3955194bda" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; xAOD::ReadStats::branchesByBytes</definition>
        <argsstring>(::Long64_t minBytes) const </argsstring>
        <name>branchesByBytes</name>
        <param>
          <type>::Long64_t</type>
          <declname>minBytes</declname>
        </param>
        <briefdescription>
<para>Get the branches from which more than x bytes were read. </para>        </briefdescription>
        <detaileddescription>
<para>This function can be used to get a list of branch names from which more than a specified number of bytes were read in the analysis.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>minBytes</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum number of bytes read from the variables </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="d4/dc4/structA" kindref="compound">A</ref> list of branch names fulfilling the requirement </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="257" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="907" bodyend="910"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1acd6e7d2312ec39fe55ffc81995ace595" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; xAOD::ReadStats::branchesByByteFrac</definition>
        <argsstring>(::Double_t minByteFraction) const </argsstring>
        <name>branchesByByteFrac</name>
        <param>
          <type>::Double_t</type>
          <declname>minByteFraction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the branches from which more than a given fraction of bytes were read</para><para>This function can be used to get a list of branch names from which more than a specified fraction of bytes were read in the analysis.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>minByteFraction</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum fraction of bytes read from the variables </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="d4/dc4/structA" kindref="compound">A</ref> list of branch names fulfilling the requirement </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="261" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="920" bodyend="924"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Functions getting the statistics as histograms</header>
      <description><para><anchor id="_1amgrp7acf429e94f762ef7007c209fdb53c92"/> </para></description>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1a6b2c8ff72557ea9b1bed94f0d1f2dc1e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>::TH1 *</type>
        <definition>TH1 * xAOD::ReadStats::treeAccessStat</definition>
        <argsstring>() const </argsstring>
        <name>treeAccessStat</name>
        <briefdescription>
<para>Get a histogram with the TTree access statistics. </para>        </briefdescription>
        <detaileddescription>
<para>This function can be used to produce a nice histogram showing how many TTrees were accessed by how many of the branches.</para><para>Note that the caller is responsible for deleting the created histogram.</para><para><simplesect kind="return"><para>The histogram showing the distribution </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="269" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="933" bodyend="969"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1affd82f32ea9c8a80929f89651749efdf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>::TH1 *</type>
        <definition>TH1 * xAOD::ReadStats::entryReadStat</definition>
        <argsstring>() const </argsstring>
        <name>entryReadStat</name>
        <briefdescription>
<para>Get a histogram with the entry reading statistics. </para>        </briefdescription>
        <detaileddescription>
<para>This function can be used to produce a nice histogram showing how many entries were accessed by how many of the branches.</para><para>Note that the caller is responsible for deleting the created histogram.</para><para><simplesect kind="return"><para>The histogram showing the distribution </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="271" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="978" bodyend="1015"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1a194aa764d99916cd0f843a1e31d4d7b3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>::TH1 *</type>
        <definition>TH1 * xAOD::ReadStats::zippedByteReadStat</definition>
        <argsstring>() const </argsstring>
        <name>zippedByteReadStat</name>
        <briefdescription>
<para>Get a histogram with the zipped byte reading statistics. </para>        </briefdescription>
        <detaileddescription>
<para>This function can be used to produce a nice histogram showing how many raw bytes were accessed by how many of the branches.</para><para>Note that the caller is responsible for deleting the created histogram.</para><para><simplesect kind="return"><para>The histogram showing the distribution </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="273" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="1024" bodyend="1060"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1ad4780dec4edef9ade273a8639f859962" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>::TH1 *</type>
        <definition>TH1 * xAOD::ReadStats::unzippedByteReadStat</definition>
        <argsstring>() const </argsstring>
        <name>unzippedByteReadStat</name>
        <briefdescription>
<para>Get a histogram with the unzipped byte reading statistics. </para>        </briefdescription>
        <detaileddescription>
<para>This function can be used to produce a nice histogram showing how many uncompressed bytes were accessed by how many of the branches.</para><para>Note that the caller is responsible for deleting the created histogram.</para><para><simplesect kind="return"><para>The histogram showing the distribution </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="275" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="1069" bodyend="1106"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="de/daf/classxAOD_1_1ReadStats_1a3a66f7ff996557c262fc9e9d5918b57c" prot="public" static="no">
        <type>std::vector&lt; <ref refid="d2/dee/classxAOD_1_1BranchStats" kindref="compound">BranchStats</ref> * &gt;</type>
        <definition>typedef std::vector&lt; BranchStats* &gt; xAOD::ReadStats::Vector_t</definition>
        <argsstring></argsstring>
        <name>Vector_t</name>
        <briefdescription>
<para><ref refid="dd/dc8/namespacexAOD_1_1Type" kindref="compound">Type</ref> of the internal vectors describing one auxiliary store. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="122" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="de/daf/classxAOD_1_1ReadStats_1ade4ac9f5a7e246eaf0ba9eb0b322a0b7" prot="public" static="no">
        <type>std::map&lt; std::string, <ref refid="de/daf/classxAOD_1_1ReadStats_1a3a66f7ff996557c262fc9e9d5918b57c" kindref="member">Vector_t</ref> &gt;</type>
        <definition>typedef std::map&lt; std::string, Vector_t &gt; xAOD::ReadStats::Map_t</definition>
        <argsstring></argsstring>
        <name>Map_t</name>
        <briefdescription>
<para><ref refid="dd/dc8/namespacexAOD_1_1Type" kindref="compound">Type</ref> of the internal object gathering information on aux branches. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="124" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="de/daf/classxAOD_1_1ReadStats_1af2868b1b0aaedc7abd02661a328f7dc8" prot="public" static="no">
        <type>std::map&lt; std::string, <ref refid="d2/dee/classxAOD_1_1BranchStats" kindref="compound">BranchStats</ref> &gt;</type>
        <definition>typedef std::map&lt; std::string, BranchStats &gt; xAOD::ReadStats::MapC_t</definition>
        <argsstring></argsstring>
        <name>MapC_t</name>
        <briefdescription>
<para><ref refid="dd/dc8/namespacexAOD_1_1Type" kindref="compound">Type</ref> of the internal object gathering information on containers. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="127" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="de/daf/classxAOD_1_1ReadStats_1ae716a023678766db02fb48fb07677840" prot="private" static="no" mutable="no">
        <type><ref refid="de/daf/classxAOD_1_1ReadStats_1ade4ac9f5a7e246eaf0ba9eb0b322a0b7" kindref="member">Map_t</ref></type>
        <definition>Map_t xAOD::ReadStats::m_branches</definition>
        <argsstring></argsstring>
        <name>m_branches</name>
        <briefdescription>
<para>Full Statistics about the branches. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="306" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/daf/classxAOD_1_1ReadStats_1a9ddb9d60c2808575dd013a6635c474ef" prot="private" static="no" mutable="no">
        <type><ref refid="de/daf/classxAOD_1_1ReadStats_1af2868b1b0aaedc7abd02661a328f7dc8" kindref="member">MapC_t</ref></type>
        <definition>MapC_t xAOD::ReadStats::m_containers</definition>
        <argsstring></argsstring>
        <name>m_containers</name>
        <briefdescription>
<para>Statistics about the containers. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="308" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/daf/classxAOD_1_1ReadStats_1af9bea861cfbd5e00bed2294b2f743593" prot="private" static="no" mutable="no">
        <type>::Long64_t</type>
        <definition>::Long64_t xAOD::ReadStats::m_bytesRead</definition>
        <argsstring></argsstring>
        <name>m_bytesRead</name>
        <briefdescription>
<para>Total number of bytes read. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="311" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" bodystart="311" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/daf/classxAOD_1_1ReadStats_1aab0abe94261b256725be05faea127f63" prot="private" static="no" mutable="no">
        <type>::Int_t</type>
        <definition>::Int_t xAOD::ReadStats::m_branchNum</definition>
        <argsstring></argsstring>
        <name>m_branchNum</name>
        <briefdescription>
<para>Total number of branches in the input <ref refid="dd/d44/namespacexAOD" kindref="compound">xAOD</ref> TTree. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="313" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/daf/classxAOD_1_1ReadStats_1a0176b695b866c974f95b68079dc91b2f" prot="private" static="no" mutable="no">
        <type>::Int_t</type>
        <definition>::Int_t xAOD::ReadStats::m_fileReads</definition>
        <argsstring></argsstring>
        <name>m_fileReads</name>
        <briefdescription>
<para>Total number of file reading operations during the analysis. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="315" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/daf/classxAOD_1_1ReadStats_1a6e570bdddc84beda85cdb95790da866e" prot="private" static="no" mutable="no">
        <type>::Int_t</type>
        <definition>::Int_t xAOD::ReadStats::m_cacheSize</definition>
        <argsstring></argsstring>
        <name>m_cacheSize</name>
        <briefdescription>
<para>Cache size used in the analysis. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="317" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/daf/classxAOD_1_1ReadStats_1aa757ef1e8a4d6154f121eadb89468f14" prot="private" static="no" mutable="no">
        <type>::Double_t</type>
        <definition>::Double_t xAOD::ReadStats::m_readTime</definition>
        <argsstring></argsstring>
        <name>m_readTime</name>
        <briefdescription>
<para>Time spent reading the events. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="319" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/daf/classxAOD_1_1ReadStats_1afd1cd9774ce3aa2705414b5ed6548a4c" prot="private" static="no" mutable="no">
        <type>::Double_t</type>
        <definition>::Double_t xAOD::ReadStats::m_unzipTime</definition>
        <argsstring></argsstring>
        <name>m_unzipTime</name>
        <briefdescription>
<para>Time spent unzipping the events. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="321" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" bodystart="321" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/daf/classxAOD_1_1ReadStats_1acd2bfaca5d372caa2398b78ff70f70a2" prot="private" static="no" mutable="no">
        <type>::Double_t</type>
        <definition>::Double_t xAOD::ReadStats::m_processTime</definition>
        <argsstring></argsstring>
        <name>m_processTime</name>
        <briefdescription>
<para>Time spent in processing the events. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="323" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" bodystart="323" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/daf/classxAOD_1_1ReadStats_1a1f3f6e507feed5bc521aa0a8cc8a70d5" prot="private" static="no" mutable="no">
        <type>::Long64_t</type>
        <definition>::Long64_t xAOD::ReadStats::m_nEvents</definition>
        <argsstring></argsstring>
        <name>m_nEvents</name>
        <briefdescription>
<para>Total num events. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="326" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" bodystart="326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/daf/classxAOD_1_1ReadStats_1a3c519257d4ad0786f2091e6aad6383eb" prot="private" static="no" mutable="no">
        <type>::Long64_t</type>
        <definition>::Long64_t xAOD::ReadStats::m_nEventsProcessed</definition>
        <argsstring></argsstring>
        <name>m_nEventsProcessed</name>
        <briefdescription>
<para>Total processed events. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="328" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" bodystart="328" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1a70d1efdae99bc17d6132e2578683478e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xAOD::ReadStats::ReadStats</definition>
        <argsstring>(const char *name=&quot;xAODReadStats&quot;, const char *title=&quot;xAOD reading statistics&quot;)</argsstring>
        <name>ReadStats</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
          <defval>&quot;xAODReadStats&quot;</defval>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
          <defval>&quot;xAOD reading statistics&quot;</defval>
        </param>
        <briefdescription>
<para>Constructor just specifying the name of the object. </para>        </briefdescription>
        <detaileddescription>
<para>In order to be able to stream such objects, they have to have an explicit name. It can be specified using this constructor, but usually leaving the default is just fine.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name for the object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional title for the object (not used for anything) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="131" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="437" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1aa998e97ef53e5f7b136d5fe3186bbb9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xAOD::ReadStats::ReadStats</definition>
        <argsstring>(const ReadStats &amp;parent)</argsstring>
        <name>ReadStats</name>
        <param>
          <type>const <ref refid="de/daf/classxAOD_1_1ReadStats" kindref="compound">ReadStats</ref> &amp;</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
<para>It&apos;s probably not needed actually, but I wanted to be explicit about how the copy constructor should behave.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>The object that&apos;s being copied </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="133" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="451" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1a82ff96ea706a4cb6d98255fea78a4f91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xAOD::ReadStats::~ReadStats</definition>
        <argsstring>()</argsstring>
        <name>~ReadStats</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
<para>The destructor needs to clean up all the <ref refid="d2/dee/classxAOD_1_1BranchStats" kindref="compound">BranchStats</ref> objects that were created on the heap. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="135" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="467" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1abce9cc7c674be45fb74ba52dcb2f92b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="de/daf/classxAOD_1_1ReadStats" kindref="compound">ReadStats</ref> &amp;</type>
        <definition>ReadStats &amp; xAOD::ReadStats::operator=</definition>
        <argsstring>(const ReadStats &amp;parent)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="de/daf/classxAOD_1_1ReadStats" kindref="compound">ReadStats</ref> &amp;</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
<para>Assignment operator. </para>        </briefdescription>
        <detaileddescription>
<para>This is probably not needed either, but again, I wanted to be explicit.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>The object that&apos;s being copied </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="d4/dc4/structA" kindref="compound">A</ref> reference to the copied object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="138" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="487" bodyend="512"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1a163f84bfb29be8972da6edd23cb97569" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::ReadStats::Clear</definition>
        <argsstring>(::Option_t *opt=&quot;&quot;)</argsstring>
        <name>Clear</name>
        <param>
          <type>::Option_t *</type>
          <declname>opt</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Clear the statistics information (inherited from TNamed...). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="141" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="514" bodyend="530"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1a3c6be198116fbefa568b02a668c2f678" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::ReadStats::Print</definition>
        <argsstring>(::Option_t *option=&quot;&quot;) const </argsstring>
        <name>Print</name>
        <param>
          <type>::Option_t *</type>
          <declname>option</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Print information about the collected statistics. </para>        </briefdescription>
        <detaileddescription>
<para>Standard ROOT printing function. It prints the gathered information about the variables accessed in an analysis.</para><para>The option parameter understands the following value(s):<itemizedlist>
<listitem><para>&quot;Summary&quot;: Only the summary information is printed.</para></listitem><listitem><para>&quot;ByEntries&quot;: Order the variables by the number of entries read from them.</para></listitem><listitem><para>&quot;ByBytes&quot;: Order the variables by the number of bytes read from them.</para></listitem></itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>option</parametername>
</parameternamelist>
<parameterdescription>
<para>Possible options for the printing </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="280" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="1159" bodyend="1317"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1aa93717a49aa87e5d2a93b70f68b720e2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::ReadStats::printSmartSlimmingBranchList</definition>
        <argsstring>(bool autoIncludeLinks=false) const </argsstring>
        <name>printSmartSlimmingBranchList</name>
        <param>
          <type>bool</type>
          <declname>autoIncludeLinks</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Print the accessed variables, formatted for smart slimming. </para>        </briefdescription>
        <detaileddescription>
<para>This is a tricky function. It prints the list of accessed variables in a way that can be copy-pasted directly into the ItemList of a derivation job. (Or into the C++ code of some analysis code.)</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>autoIncludeLinks</parametername>
</parameternamelist>
<parameterdescription>
<para>Since removing links from objects can cause problems for slow-merging in <ref refid="d5/dc5/namespaceAthena" kindref="compound">Athena</ref>, one can request all <ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref> variables to be added to the variable list, irrespective whether they&apos;re needed or not. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>Object used to collect the information </para>        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="283" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="1329" bodyend="1413"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1a5a4fed8561d2d0608e5b0233b6aee8e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::ReadStats::nextEvent</definition>
        <argsstring>()</argsstring>
        <name>nextEvent</name>
        <briefdescription>
<para>Function incrementing the processed event counter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="286" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="1415" bodyend="1420"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1a8a795298e395c859c8cf19cb5f8ee824" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>::Long64_t</type>
        <definition>Long64_t xAOD::ReadStats::nEvents</definition>
        <argsstring>() const </argsstring>
        <name>nEvents</name>
        <briefdescription>
<para>Function getting the total number of input event. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="289" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="1422" bodyend="1425"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1adcf47a37c51a7d3f353db7863e4a6ca4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::ReadStats::setNEvents</definition>
        <argsstring>(::Long64_t nevents)</argsstring>
        <name>setNEvents</name>
        <param>
          <type>::Long64_t</type>
          <declname>nevents</declname>
        </param>
        <briefdescription>
<para>Function setting the total number of input events. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="291" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="1427" bodyend="1431"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1a9c997abd86a5639e361c1652cad0f7c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::ReadStats::readBranch</definition>
        <argsstring>(const std::string &amp;prefix, SG::auxid_t auxid)</argsstring>
        <name>readBranch</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member">SG::auxid_t</ref></type>
          <declname>auxid</declname>
        </param>
        <briefdescription>
<para>Function incrementing the read counter on a specific branch. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="297" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="1433" bodyend="1441"/>
      </memberdef>
      <memberdef kind="function" id="de/daf/classxAOD_1_1ReadStats_1ac50385ba41e2c6cc6ec48ba8fd1eeae3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xAOD::ReadStats::readContainer</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>readContainer</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Function incrementing the read counter on a specific container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="302" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/Root/ReadStats.cxx" bodystart="1443" bodyend="1450"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Class describing the access statistics of a collection of branches</para><para>Objects of this class are used to describe the access pattern of an <ref refid="dd/d44/namespacexAOD" kindref="compound">xAOD</ref> analysis. The object can also be used to optimize the caching for the analysis in subsequent runs.</para><para><simplesect kind="author"><para>Attila Krasznahorkay &lt;<ulink url="mailto:Attila.Krasznahorkay@cern.ch">Attila.Krasznahorkay@cern.ch</ulink>&gt;</para></simplesect>
<simplesect kind="rcs"><title>Revision</title><para>642099 </para></simplesect>
<simplesect kind="rcs"><title>Date</title><para>2015-01-27 17:43:18 +0100 (Tue, 27 Jan 2015) </para></simplesect>
</para>    </detaileddescription>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" line="118" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/tools/ReadStats.h" bodystart="118" bodyend="332"/>
    <listofallmembers>
      <member refid="de/daf/classxAOD_1_1ReadStats_1af5d5513a5a02518bb1c0a98ec7ff0133" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>add</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1a9b1d9807a99e292a7c632f7ecf44b1be" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>addToTreeCache</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1ab0e77e31ee3ab33a55e947b1eebdc2ff" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>addToTreeCacheByByteFrac</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1a728e94ad612e2a578302e36f9205f733" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>addToTreeCacheByBytes</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1aa5a9d47874424406cf764356b2c115e3" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>addToTreeCacheByEntries</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1abf614b19f1f925c70ddc2815db29e327" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>addToTreeCacheByEntryFrac</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1af7e91275e5072ee3af203fef4fee2c01" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>branch</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1ad23eed58dce298f9afcd62617e8ea75e" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>branch</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1aeb53d319411d09080e43461a43767d95" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>branches</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1acd6e7d2312ec39fe55ffc81995ace595" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>branchesByByteFrac</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1ad6b44dbf32f329c1e287cc3955194bda" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>branchesByBytes</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1a1c5e44b9889c24f2c3db0d3565595a22" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>branchesByEntries</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1ad8cb4d105dbc9636b4fac067023a2b90" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>branchesByEntryFrac</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1a471479be37942250a756f8f4aa3bc24c" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>branchNum</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1ae99f22c0b484f828b642316699183f27" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>bytesRead</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1ac43fdea87dc5e3539ae14477c2b96654" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>cacheSize</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1a163f84bfb29be8972da6edd23cb97569" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>Clear</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1a617fc365848c3839b347f21270c22c0a" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>container</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1a980ab446ee592b50a46c9a6269d294c9" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>container</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1a86a774f9cccfc52d61c990dae0c0c9e5" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>containers</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1affd82f32ea9c8a80929f89651749efdf" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>entryReadStat</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1ac08c48fa80199e64a007d545490650fd" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>fileReads</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1afd0ddc26cab62f984632d5512bd64ddb" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>isCompatible</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1ae716a023678766db02fb48fb07677840" prot="private" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>m_branches</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1aab0abe94261b256725be05faea127f63" prot="private" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>m_branchNum</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1af9bea861cfbd5e00bed2294b2f743593" prot="private" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>m_bytesRead</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1a6e570bdddc84beda85cdb95790da866e" prot="private" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>m_cacheSize</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1a9ddb9d60c2808575dd013a6635c474ef" prot="private" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>m_containers</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1a0176b695b866c974f95b68079dc91b2f" prot="private" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>m_fileReads</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1a1f3f6e507feed5bc521aa0a8cc8a70d5" prot="private" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>m_nEvents</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1a3c519257d4ad0786f2091e6aad6383eb" prot="private" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>m_nEventsProcessed</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1acd2bfaca5d372caa2398b78ff70f70a2" prot="private" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>m_processTime</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1aa757ef1e8a4d6154f121eadb89468f14" prot="private" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>m_readTime</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1afd1cd9774ce3aa2705414b5ed6548a4c" prot="private" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>m_unzipTime</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1ade4ac9f5a7e246eaf0ba9eb0b322a0b7" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>Map_t</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1af2868b1b0aaedc7abd02661a328f7dc8" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>MapC_t</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1a62782e694c51c18955b1e986ff60a932" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>Merge</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1a8a795298e395c859c8cf19cb5f8ee824" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>nEvents</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1a5a4fed8561d2d0608e5b0233b6aee8e7" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>nextEvent</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1a1f46f7e58ed9133f8ddd2689d431f061" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>operator+=</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1abce9cc7c674be45fb74ba52dcb2f92b6" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>operator=</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1a3c6be198116fbefa568b02a668c2f678" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>Print</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1aa93717a49aa87e5d2a93b70f68b720e2" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>printSmartSlimmingBranchList</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1a3b63e8d1b22061211b0b78892513ed19" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>processTime</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1a9c997abd86a5639e361c1652cad0f7c7" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>readBranch</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1ac50385ba41e2c6cc6ec48ba8fd1eeae3" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>readContainer</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1a70d1efdae99bc17d6132e2578683478e" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>ReadStats</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1aa998e97ef53e5f7b136d5fe3186bbb9e" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>ReadStats</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1ad8603253943c09762ecc71dccd04ffa5" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>readTime</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1a96800f5a49be4cef66ee31fe367abf43" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>setBranchNum</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1a36dc4b142ea1b595187f8b093cbff274" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>setBytesRead</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1ace7752b4d6131eeefa91bb8f479b9ac7" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>setCacheSize</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1a8b053b3e6ef1eec40daaa1bac0c6e58c" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>setFileReads</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1adcf47a37c51a7d3f353db7863e4a6ca4" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>setNEvents</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1a46ebc11a37bdaca1afcc8203239fb2c9" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>setProcessTime</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1ac135ff98814a52474558aa16c74b810c" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>setReadTime</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1a7ef71f6a956919d5689f9980a08ceecc" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>setUnzipTime</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1a6b2c8ff72557ea9b1bed94f0d1f2dc1e" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>treeAccessStat</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1ad4780dec4edef9ade273a8639f859962" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>unzippedByteReadStat</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1ab01a58106f50a2412367a9bc4cc33083" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>unzipTime</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1a3a66f7ff996557c262fc9e9d5918b57c" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>Vector_t</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1a194aa764d99916cd0f843a1e31d4d7b3" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>zippedByteReadStat</name></member>
      <member refid="de/daf/classxAOD_1_1ReadStats_1a82ff96ea706a4cb6d98255fea78a4f91" prot="public" virt="non-virtual"><scope>xAOD::ReadStats</scope><name>~ReadStats</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
