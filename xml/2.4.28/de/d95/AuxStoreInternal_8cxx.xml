<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="de/d95/AuxStoreInternal_8cxx" kind="file">
    <compoundname>AuxStoreInternal.cxx</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">sstream</includes>
    <includes refid="d3/d0f/AuxStoreInternal_8h" local="yes">AthContainers/AuxStoreInternal.h</includes>
    <includes refid="db/d7f/AuxTypeRegistry_8h" local="yes">AthContainers/AuxTypeRegistry.h</includes>
    <includes refid="d4/d43/PackedParameters_8h" local="yes">AthContainers/PackedParameters.h</includes>
    <includes refid="d4/d03/exceptions_8h" local="yes">AthContainers/exceptions.h</includes>
    <includes refid="da/d8e/foreach_8h" local="yes">AthContainers/tools/foreach.h</includes>
    <includes refid="da/d41/error_8h" local="yes">AthContainers/tools/error.h</includes>
    <incdepgraph>
      <node id="71258">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="71280">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="71238" relation="include">
        </childnode>
        <childnode refid="71240" relation="include">
        </childnode>
        <childnode refid="71247" relation="include">
        </childnode>
        <childnode refid="71248" relation="include">
        </childnode>
      </node>
      <node id="71281">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="71233">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="71234" relation="include">
        </childnode>
        <childnode refid="71236" relation="include">
        </childnode>
        <childnode refid="71250" relation="include">
        </childnode>
        <childnode refid="71249" relation="include">
        </childnode>
      </node>
      <node id="71246">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="71248">
        <label>functional</label>
      </node>
      <node id="71244">
        <label>limits</label>
      </node>
      <node id="71250">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="71256">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="71241">
        <label>iterator</label>
      </node>
      <node id="71270">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="71245" relation="include">
        </childnode>
        <childnode refid="71271" relation="include">
        </childnode>
      </node>
      <node id="71282">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="71235" relation="include">
        </childnode>
        <childnode refid="71283" relation="include">
        </childnode>
        <childnode refid="71284" relation="include">
        </childnode>
        <childnode refid="71252" relation="include">
        </childnode>
        <childnode refid="71245" relation="include">
        </childnode>
      </node>
      <node id="71267">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="71261" relation="include">
        </childnode>
        <childnode refid="71242" relation="include">
        </childnode>
      </node>
      <node id="71272">
        <label>stdint.h</label>
      </node>
      <node id="71264">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="71236" relation="include">
        </childnode>
        <childnode refid="71252" relation="include">
        </childnode>
      </node>
      <node id="71286">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="71251">
        <label>AthContainersInterfaces/IAuxStoreIO.h</label>
        <link refid="d9/db5/IAuxStoreIO_8h"/>
        <childnode refid="71235" relation="include">
        </childnode>
        <childnode refid="71252" relation="include">
        </childnode>
        <childnode refid="71253" relation="include">
        </childnode>
        <childnode refid="71249" relation="include">
        </childnode>
      </node>
      <node id="71237">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="71238" relation="include">
        </childnode>
        <childnode refid="71247" relation="include">
        </childnode>
        <childnode refid="71248" relation="include">
        </childnode>
      </node>
      <node id="71243">
        <label>cmath</label>
      </node>
      <node id="71284">
        <label>stdexcept</label>
      </node>
      <node id="71259">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="71288">
        <label>AthenaKernel/errorcheck.h</label>
      </node>
      <node id="71245">
        <label>string</label>
      </node>
      <node id="71263">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="71236" relation="include">
        </childnode>
        <childnode refid="71252" relation="include">
        </childnode>
      </node>
      <node id="71277">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="71274">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="71229">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/AuxStoreInternal.cxx</label>
        <link refid="AuxStoreInternal.cxx"/>
        <childnode refid="71230" relation="include">
        </childnode>
        <childnode refid="71231" relation="include">
        </childnode>
        <childnode refid="71232" relation="include">
        </childnode>
        <childnode refid="71262" relation="include">
        </childnode>
        <childnode refid="71269" relation="include">
        </childnode>
        <childnode refid="71282" relation="include">
        </childnode>
        <childnode refid="71285" relation="include">
        </childnode>
        <childnode refid="71287" relation="include">
        </childnode>
      </node>
      <node id="71285">
        <label>AthContainers/tools/foreach.h</label>
        <link refid="da/d8e/foreach_8h"/>
        <childnode refid="71286" relation="include">
        </childnode>
      </node>
      <node id="71257">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="71269">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="71270" relation="include">
        </childnode>
        <childnode refid="71244" relation="include">
        </childnode>
        <childnode refid="71272" relation="include">
        </childnode>
        <childnode refid="71273" relation="include">
        </childnode>
      </node>
      <node id="71235">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="71236" relation="include">
        </childnode>
        <childnode refid="71237" relation="include">
        </childnode>
      </node>
      <node id="71238">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="71239" relation="include">
        </childnode>
        <childnode refid="71240" relation="include">
        </childnode>
        <childnode refid="71241" relation="include">
        </childnode>
        <childnode refid="71236" relation="include">
        </childnode>
        <childnode refid="71242" relation="include">
        </childnode>
        <childnode refid="71243" relation="include">
        </childnode>
        <childnode refid="71244" relation="include">
        </childnode>
        <childnode refid="71245" relation="include">
        </childnode>
        <childnode refid="71246" relation="include">
        </childnode>
      </node>
      <node id="71287">
        <label>AthContainers/tools/error.h</label>
        <link refid="da/d41/error_8h"/>
        <childnode refid="71288" relation="include">
        </childnode>
        <childnode refid="71289" relation="include">
        </childnode>
      </node>
      <node id="71252">
        <label>typeinfo</label>
      </node>
      <node id="71273">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="71271">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="71276">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="71249">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="71262">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="71235" relation="include">
        </childnode>
        <childnode refid="71263" relation="include">
        </childnode>
        <childnode refid="71264" relation="include">
        </childnode>
        <childnode refid="71265" relation="include">
        </childnode>
        <childnode refid="71278" relation="include">
        </childnode>
        <childnode refid="71254" relation="include">
        </childnode>
        <childnode refid="71236" relation="include">
        </childnode>
        <childnode refid="71252" relation="include">
        </childnode>
        <childnode refid="71261" relation="include">
        </childnode>
        <childnode refid="71280" relation="include">
        </childnode>
        <childnode refid="71281" relation="include">
        </childnode>
      </node>
      <node id="71261">
        <label>vector</label>
      </node>
      <node id="71240">
        <label>utility</label>
      </node>
      <node id="71260">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="71231">
        <label>sstream</label>
      </node>
      <node id="71289">
        <label>GaudiKernel/System.h</label>
      </node>
      <node id="71255">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="71266">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="71254">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="71255" relation="include">
        </childnode>
        <childnode refid="71256" relation="include">
        </childnode>
        <childnode refid="71257" relation="include">
        </childnode>
        <childnode refid="71258" relation="include">
        </childnode>
        <childnode refid="71259" relation="include">
        </childnode>
      </node>
      <node id="71242">
        <label>cstdlib</label>
      </node>
      <node id="71283">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="71230">
        <label>iostream</label>
      </node>
      <node id="71234">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="71235" relation="include">
        </childnode>
        <childnode refid="71236" relation="include">
        </childnode>
        <childnode refid="71249" relation="include">
        </childnode>
      </node>
      <node id="71236">
        <label>cstddef</label>
      </node>
      <node id="71265">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="71263" relation="include">
        </childnode>
        <childnode refid="71266" relation="include">
        </childnode>
        <childnode refid="71267" relation="include">
        </childnode>
        <childnode refid="71268" relation="include">
        </childnode>
        <childnode refid="71260" relation="include">
        </childnode>
        <childnode refid="71252" relation="include">
        </childnode>
        <childnode refid="71261" relation="include">
        </childnode>
        <childnode refid="71239" relation="include">
        </childnode>
        <childnode refid="71272" relation="include">
        </childnode>
        <childnode refid="71275" relation="include">
        </childnode>
        <childnode refid="71276" relation="include">
        </childnode>
        <childnode refid="71277" relation="include">
        </childnode>
      </node>
      <node id="71275">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="71253">
        <label>set</label>
      </node>
      <node id="71279">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="71268">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="71266" relation="include">
        </childnode>
        <childnode refid="71269" relation="include">
        </childnode>
        <childnode refid="71260" relation="include">
        </childnode>
        <childnode refid="71261" relation="include">
        </childnode>
        <childnode refid="71274" relation="include">
        </childnode>
      </node>
      <node id="71239">
        <label>algorithm</label>
      </node>
      <node id="71232">
        <label>AthContainers/AuxStoreInternal.h</label>
        <link refid="d3/d0f/AuxStoreInternal_8h"/>
        <childnode refid="71233" relation="include">
        </childnode>
        <childnode refid="71251" relation="include">
        </childnode>
        <childnode refid="71254" relation="include">
        </childnode>
        <childnode refid="71260" relation="include">
        </childnode>
        <childnode refid="71261" relation="include">
        </childnode>
        <childnode refid="71250" relation="include">
        </childnode>
        <childnode refid="71249" relation="include">
        </childnode>
      </node>
      <node id="71247">
        <label>memory</label>
      </node>
      <node id="71278">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="71264" relation="include">
        </childnode>
        <childnode refid="71265" relation="include">
        </childnode>
        <childnode refid="71279" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="dd/d59/namespaceSG">SG</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>$Id$</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d3/d0f/AuxStoreInternal_8h" kindref="compound" tooltip="An auxiliary data store that holds data internally.">AthContainers/AuxStoreInternal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="db/d7f/AuxTypeRegistry_8h" kindref="compound" tooltip="Handle mappings between names and auxid_t.">AthContainers/AuxTypeRegistry.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d4/d43/PackedParameters_8h" kindref="compound" tooltip="Describe how the contents of a PackedContainer are to be saved.">AthContainers/PackedParameters.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d4/d03/exceptions_8h" kindref="compound" tooltip="Exceptions that can be thrown from AthContainers.">AthContainers/exceptions.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="da/d8e/foreach_8h" kindref="compound" tooltip="foreach helper for standalone build.">AthContainers/tools/foreach.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="da/d41/error_8h" kindref="compound" tooltip="Helper for emitting error messages.">AthContainers/tools/error.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">SG<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1adaae95b4226c1514d5327ae16c9a15cd" kindref="member" tooltip="Constructor.">AuxStoreInternal::AuxStoreInternal</ref><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>standalone<sp/></highlight><highlight class="comment">/*=<sp/>false*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>:<sp/>m_standalone<sp/>(standalone),</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>m_tick<sp/>(0),</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>m_locked<sp/>(false)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1ac2a5ec4bc88d4ee304348a6e03b4a52b" kindref="member" tooltip="Destructor.">AuxStoreInternal::~AuxStoreInternal</ref>()</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>ATHCONTAINERS_FOREACH<sp/>(IAuxTypeVector*<sp/>p,<sp/>m_vecs)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>delete<sp/>p;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1adaae95b4226c1514d5327ae16c9a15cd" kindref="member" tooltip="Constructor.">AuxStoreInternal</ref>::<ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1adaae95b4226c1514d5327ae16c9a15cd" kindref="member" tooltip="Constructor.">AuxStoreInternal</ref><sp/>(const<sp/><ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1adaae95b4226c1514d5327ae16c9a15cd" kindref="member" tooltip="Constructor.">AuxStoreInternal</ref>&amp;<sp/>other)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>:<sp/>m_standalone<sp/>(other.m_standalone),</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>m_isDecoration<sp/>(other.m_isDecoration),</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>m_auxids<sp/>(other.m_auxids),</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>m_tick<sp/>(1),</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>m_locked<sp/>(other.m_locked)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1a7ac1985447a8d2b73561a434f06822ab" kindref="member" tooltip="Return the number of elements in the store.">size</ref><sp/>=<sp/>other.m_vecs.size();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>m_vecs.resize<sp/>(size);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(other.m_vecs[i])</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_vecs[i]<sp/>=<sp/>other.m_vecs[i]-&gt;clone();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1aea3863b3a7e4cf2909150703358cfde3" kindref="member" tooltip="Return the standalone flag.">AuxStoreInternal::standalone</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="71"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_standalone;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1a90b2121f7a3ae82b0cd339cb5d212d48" kindref="member" tooltip="Return the data vector for one aux data item.">AuxStoreInternal::getData</ref><sp/>(<ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">auxid_t</ref><sp/>auxid)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="87"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>guard_t<sp/>guard<sp/>(m_mutex);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(auxid<sp/>&gt;=<sp/>m_vecs.size()<sp/>||<sp/>!m_vecs[auxid])<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>With<sp/>the<sp/>new<sp/>behavior<sp/>of<sp/>SG::AuxElement::Accessor::isAvailable,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>shouldn&apos;t<sp/>print<sp/>an<sp/>error<sp/>message<sp/>here.<sp/>Asking<sp/>the<sp/>store<sp/>whether</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>has<sp/>an<sp/>element<sp/>using<sp/>this<sp/>function<sp/>is<sp/>not<sp/>necessarily<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>error<sp/>condition<sp/>by<sp/>now.<sp/>In<sp/>any<sp/>case,<sp/>the<sp/>DataVector<sp/>code<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>complain<sp/>itself<sp/>in<sp/>case<sp/>of<sp/>an<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_vecs[auxid]-&gt;toPtr();</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1a90b2121f7a3ae82b0cd339cb5d212d48" kindref="member" tooltip="Return the data vector for one aux data item.">AuxStoreInternal::getData</ref><sp/>(<ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">auxid_t</ref><sp/>auxid,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>capacity)</highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1a03062bb63e56d14e49d32d8927554cfd" kindref="member" tooltip="Return the data vector for one aux data item.">getDataInternal</ref><sp/>(auxid,<sp/>size,<sp/>capacity,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1aff9be84c9b5f841639e7bc471d07c983" kindref="member" tooltip="Return the data vector for one aux data decoration item.">AuxStoreInternal::getDecoration</ref><sp/>(<ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">auxid_t</ref><sp/>auxid,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>capacity)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>guard_t<sp/>guard<sp/>(m_mutex);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_vecs.size()<sp/>&lt;=<sp/>auxid)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>m_vecs.resize<sp/>(auxid+1);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>m_isDecoration.resize<sp/>(auxid+1);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_vecs[auxid]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>m_vecs[auxid]<sp/>=<sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry_1ab22c247525e0883b46012f14b6f5a048" kindref="member" tooltip="Return the singleton registry instance.">AuxTypeRegistry::instance</ref>().makeVector<sp/>(auxid,<sp/>size,<sp/>capacity);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1ae216aba6bd1f3798955b19b0ecc16555" kindref="member" tooltip="Add a new auxid to the set of those being managed by this store.">addAuxID</ref><sp/>(auxid);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_locked)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_isDecoration[auxid]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_locked<sp/>&amp;&amp;<sp/>!m_isDecoration[auxid])</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>ExcStoreLocked<sp/>(auxid);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_vecs[auxid]-&gt;toPtr();</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1adcba0811d598f897ae6c482373428629" kindref="member" tooltip="Change the size of all aux data vectors.">AuxStoreInternal::resize</ref><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz)</highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>guard_t<sp/>guard<sp/>(m_mutex);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_locked)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>ExcStoreLocked<sp/>(</highlight><highlight class="stringliteral">&quot;resize&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>ATHCONTAINERS_FOREACH<sp/>(IAuxTypeVector*<sp/>v,<sp/>m_vecs)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;resize<sp/>(sz);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1ae92332871a87ade0bd1e48dafa994d97" kindref="member" tooltip="Change the capacity of all aux data vectors.">AuxStoreInternal::reserve</ref><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz)</highlight></codeline>
<codeline lineno="196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>guard_t<sp/>guard<sp/>(m_mutex);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_locked)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>ExcStoreLocked<sp/>(</highlight><highlight class="stringliteral">&quot;reserve&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>ATHCONTAINERS_FOREACH<sp/>(IAuxTypeVector*<sp/>v,<sp/>m_vecs)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;reserve<sp/>(sz);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1a2adc1853052fd2b9fd101fb382471f9b" kindref="member" tooltip="Shift the elements of the container.">AuxStoreInternal::shift</ref><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos,<sp/>ptrdiff_t<sp/>offs)</highlight></codeline>
<codeline lineno="230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>guard_t<sp/>guard<sp/>(m_mutex);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_locked)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>ExcStoreLocked<sp/>(</highlight><highlight class="stringliteral">&quot;shift&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>ATHCONTAINERS_FOREACH<sp/>(IAuxTypeVector*<sp/>v,<sp/>m_vecs)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;shift<sp/>(pos,<sp/>offs);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">SG::auxid_set_t</ref>&amp;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1a40f6e8146486daebb9cc12c2b5a626a6" kindref="member" tooltip="Return a set of identifiers for existing data items in this store.">AuxStoreInternal::getAuxIDs</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="250"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>guard_t<sp/>guard<sp/>(m_mutex);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_tsAuxids.get()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>m_tsAuxids.reset<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TSAuxidSet<sp/>(m_tick,<sp/>m_auxids));</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_tsAuxids-&gt;m_tick<sp/>!=<sp/>m_tick)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>m_tsAuxids-&gt;m_set<sp/>=<sp/>m_auxids;<sp/><sp/></highlight><highlight class="comment">//<sp/>May<sp/>need<sp/>to<sp/>optimize<sp/>this!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>m_tsAuxids-&gt;m_tick<sp/>=<sp/>m_tick;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_tsAuxids-&gt;m_set;</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">SG::auxid_set_t</ref>&amp;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1a23e266b01b787a058136bc93af631f65" kindref="member" tooltip="Return a set of identifiers for writable data items in this store.">AuxStoreInternal::getWritableAuxIDs</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="271"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1a40f6e8146486daebb9cc12c2b5a626a6" kindref="member" tooltip="Return a set of identifiers for existing data items in this store.">getAuxIDs</ref>();</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1aaec13f56e9bdb228a96d2a2a65792682" kindref="member" tooltip="Return a pointer to the data to be stored for one aux data item.">AuxStoreInternal::getIODataInternal</ref><sp/>(<ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">auxid_t</ref><sp/>auxid,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>quiet)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="288"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>guard_t<sp/>guard<sp/>(m_mutex);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(auxid<sp/>&gt;=<sp/>m_vecs.size()<sp/>||<sp/>!m_vecs[auxid])<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!quiet)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>ss;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Requested<sp/>variable<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry_1ab22c247525e0883b46012f14b6f5a048" kindref="member" tooltip="Return the singleton registry instance.">SG::AuxTypeRegistry::instance</ref>().getName<sp/>(auxid)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>auxid<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>doesn&apos;t<sp/>exist&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATHCONTAINERS_ERROR(</highlight><highlight class="stringliteral">&quot;AuxStoreInternal::getIODataInternal&quot;</highlight><highlight class="normal">,<sp/>ss.str());</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_standalone)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_vecs[auxid]-&gt;toPtr();</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_vecs[auxid]-&gt;toVector();</highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1ac71290fd48a08ff4131de1e645b6b4dc" kindref="member" tooltip="Return a pointer to the data to be stored for one aux data item.">AuxStoreInternal::getIOData</ref><sp/>(<ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">auxid_t</ref><sp/>auxid)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="318"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1aaec13f56e9bdb228a96d2a2a65792682" kindref="member" tooltip="Return a pointer to the data to be stored for one aux data item.">getIODataInternal</ref><sp/>(auxid,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::type_info*<sp/><ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1a6a2b47cb515c1adc83220af6169ea9c0" kindref="member" tooltip="Return the type of the data to be stored for one aux data item.">AuxStoreInternal::getIOType</ref><sp/>(<ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">auxid_t</ref><sp/>auxid)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="335"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_standalone)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry_1ab22c247525e0883b46012f14b6f5a048" kindref="member" tooltip="Return the singleton registry instance.">SG::AuxTypeRegistry::instance</ref>().getType<sp/>(auxid);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>guard_t<sp/>guard<sp/>(m_mutex);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(auxid<sp/>&lt;<sp/>m_vecs.size()<sp/>&amp;&amp;<sp/>m_vecs[auxid])<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::type_info*<sp/>ret<sp/>=<sp/>m_vecs[auxid]-&gt;objType();</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry_1ab22c247525e0883b46012f14b6f5a048" kindref="member" tooltip="Return the singleton registry instance.">SG::AuxTypeRegistry::instance</ref>().getVecType<sp/>(auxid);</highlight></codeline>
<codeline lineno="344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dac/classSG_1_1unordered__set" kindref="compound">SG::auxid_set_t</ref>&amp;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1a34ca465f3964b730da47ff59389f8545" kindref="member" tooltip="Get the list of all variables that need to be handled.">AuxStoreInternal::getDynamicAuxIDs</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="352"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1a40f6e8146486daebb9cc12c2b5a626a6" kindref="member" tooltip="Return a set of identifiers for existing data items in this store.">getAuxIDs</ref>();</highlight></codeline>
<codeline lineno="354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1acd230c41baaae91d3dc2cc1ae9a3b59b" kindref="member" tooltip="Lock the container.">AuxStoreInternal::lock</ref>()</highlight></codeline>
<codeline lineno="364"><highlight class="normal">{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>guard_t<sp/>guard<sp/>(m_mutex);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>m_locked<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1a2e98e97b3ca01a085f39e33027d63834" kindref="member" tooltip="Clear all decorations.">AuxStoreInternal::clearDecorations</ref>()</highlight></codeline>
<codeline lineno="378"><highlight class="normal">{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>guard_t<sp/>guard<sp/>(m_mutex);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">auxid_t</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>0;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;<sp/>m_vecs.size();<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">++)<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_isDecoration[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">])<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_isDecoration[id]<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_vecs[id];</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_vecs[id]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_auxids.erase<sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++m_tick;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1a7ac1985447a8d2b73561a434f06822ab" kindref="member" tooltip="Return the number of elements in the store.">AuxStoreInternal::size</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="398"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>guard_t<sp/>guard<sp/>(m_mutex);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>ATHCONTAINERS_FOREACH<sp/>(<ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">SG::auxid_t</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>m_auxids)<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;<sp/>m_vecs.size()<sp/>&amp;&amp;<sp/>m_vecs[id]<sp/>&amp;&amp;<sp/>m_vecs[id]-&gt;size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_vecs[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">]-&gt;<ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1a7ac1985447a8d2b73561a434f06822ab" kindref="member" tooltip="Return the number of elements in the store.">size</ref>();</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1abacba50e0977995f28182caefc75d9ad" kindref="member" tooltip="Set an option for an auxiliary data variable.">AuxStoreInternal::setOption</ref><sp/>(<ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">auxid_t</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AuxDataOption&amp;<sp/>option)</highlight></codeline>
<codeline lineno="418"><highlight class="normal">{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>this<sp/>variable<sp/>exist<sp/>in<sp/>this<sp/>store?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>exists<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>guard_t<sp/>guard<sp/>(m_mutex);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;<sp/>m_vecs.size()<sp/>&amp;&amp;<sp/>m_vecs[id]<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exists<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>not,<sp/>and<sp/>we<sp/>have<sp/>a<sp/>packing<sp/>parameter<sp/>request,<sp/>then<sp/>create<sp/>the<sp/>variable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!exists)<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d5/dc1/classSG_1_1PackedParameters_1a00cad74348560687381e448c7780e757" kindref="member" tooltip="Test to see if option is a recognized packing option.">PackedParameters::isValidOption</ref><sp/>(option))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/><ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1a7ac1985447a8d2b73561a434f06822ab" kindref="member" tooltip="Return the number of elements in the store.">size</ref>();</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1a03062bb63e56d14e49d32d8927554cfd" kindref="member" tooltip="Return the data vector for one aux data item.">getDataInternal</ref><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>sz,<sp/>sz,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>the<sp/>option<sp/>setting.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>guard_t<sp/>guard<sp/>(m_mutex);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_vecs[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">]-&gt;<ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1abacba50e0977995f28182caefc75d9ad" kindref="member" tooltip="Set an option for an auxiliary data variable.">setOption</ref><sp/>(option))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>didn&apos;t<sp/>work.<sp/><sp/>If<sp/>this<sp/>is<sp/>a<sp/>packing<sp/>request,<sp/>then<sp/>try<sp/>to<sp/>convert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>variable<sp/>to<sp/>packed<sp/>form<sp/>and<sp/>retry.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d5/dc1/classSG_1_1PackedParameters_1a00cad74348560687381e448c7780e757" kindref="member" tooltip="Test to see if option is a recognized packing option.">PackedParameters::isValidOption</ref><sp/>(option))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>IAuxTypeVector*<sp/>packed<sp/>=<sp/>m_vecs[id]-&gt;toPacked();</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(packed)<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Converted<sp/>to<sp/>packed<sp/>form.<sp/><sp/>Replace<sp/>the<sp/>object<sp/>and<sp/>retry.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_vecs[id];</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>m_vecs[id]<sp/>=<sp/>packed;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>packed-&gt;setOption<sp/>(option);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Didn&apos;t<sp/>work.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1ae216aba6bd1f3798955b19b0ecc16555" kindref="member" tooltip="Add a new auxid to the set of those being managed by this store.">AuxStoreInternal::addAuxID</ref><sp/>(<ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">auxid_t</ref><sp/>auxid)</highlight></codeline>
<codeline lineno="459"><highlight class="normal">{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>m_auxids.insert<sp/>(auxid);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>++m_tick;</highlight></codeline>
<codeline lineno="462"><highlight class="normal">}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1a03062bb63e56d14e49d32d8927554cfd" kindref="member" tooltip="Return the data vector for one aux data item.">AuxStoreInternal::getDataInternal</ref><sp/>(<ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member" tooltip="Identifier for a particular aux data item.">auxid_t</ref><sp/>auxid,</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>capacity,</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>no_lock_check)</highlight></codeline>
<codeline lineno="486"><highlight class="normal">{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/>guard_t<sp/>guard<sp/>(m_mutex);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_vecs.size()<sp/>&lt;=<sp/>auxid)<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>m_vecs.resize<sp/>(auxid+1);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>m_isDecoration.resize<sp/>(auxid+1);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_vecs[auxid]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_locked<sp/>&amp;&amp;<sp/>!no_lock_check)</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>ExcStoreLocked<sp/>(auxid);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>m_vecs[auxid]<sp/>=<sp/><ref refid="db/d33/classSG_1_1AuxTypeRegistry_1ab22c247525e0883b46012f14b6f5a048" kindref="member" tooltip="Return the singleton registry instance.">AuxTypeRegistry::instance</ref>().makeVector<sp/>(auxid,<sp/>size,<sp/>capacity);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d1c/classSG_1_1AuxStoreInternal_1ae216aba6bd1f3798955b19b0ecc16555" kindref="member" tooltip="Add a new auxid to the set of those being managed by this store.">addAuxID</ref><sp/>(auxid);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_vecs[auxid]-&gt;toPtr();</highlight></codeline>
<codeline lineno="499"><highlight class="normal">}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>SG</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/AuxStoreInternal.cxx"/>
  </compounddef>
</doxygen>
