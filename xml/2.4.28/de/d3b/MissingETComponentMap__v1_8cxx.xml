<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="de/d3b/MissingETComponentMap__v1_8cxx" kind="file">
    <compoundname>MissingETComponentMap_v1.cxx</compoundname>
    <includes refid="dd/ddb/MissingETComponentMap__v1_8h" local="yes">xAODMissingET/versions/MissingETComponentMap_v1.h</includes>
    <includes refid="d5/d10/MissingETContainer_8h" local="yes">xAODMissingET/MissingETContainer.h</includes>
    <includes refid="db/d88/CaloCluster_8h" local="yes">xAODCaloEvent/CaloCluster.h</includes>
    <includes refid="d2/d15/TrackParticle_8h" local="yes">xAODTracking/TrackParticle.h</includes>
    <includes refid="dd/d2d/IParticleContainer_8h" local="yes">xAODBase/IParticleContainer.h</includes>
    <includes refid="d8/d04/ObjectType_8h" local="yes">xAODBase/ObjectType.h</includes>
    <includes local="no">iterator</includes>
    <includes local="no">cstdio</includes>
    <incdepgraph>
      <node id="392675">
        <label>list</label>
      </node>
      <node id="392684">
        <label>AthContainers/tools/DVL_algorithms.icc</label>
        <link refid="df/daa/DVL__algorithms_8icc"/>
        <childnode refid="392669" relation="include">
        </childnode>
        <childnode refid="392676" relation="include">
        </childnode>
        <childnode refid="392660" relation="include">
        </childnode>
        <childnode refid="392665" relation="include">
        </childnode>
        <childnode refid="392601" relation="include">
        </childnode>
      </node>
      <node id="392669">
        <label>AthContainers/tools/DVLNoBase.h</label>
        <link refid="d7/d92/DVLNoBase_8h"/>
      </node>
      <node id="392639">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="392691">
        <label>AthContainers/tools/DVLDataBucket.h</label>
        <link refid="d4/d16/DVLDataBucket_8h"/>
        <childnode refid="392692" relation="include">
        </childnode>
        <childnode refid="392670" relation="include">
        </childnode>
        <childnode refid="392609" relation="include">
        </childnode>
        <childnode refid="392693" relation="include">
        </childnode>
      </node>
      <node id="392656">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="392600" relation="include">
        </childnode>
        <childnode refid="392602" relation="include">
        </childnode>
        <childnode refid="392609" relation="include">
        </childnode>
        <childnode refid="392610" relation="include">
        </childnode>
      </node>
      <node id="392658">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="392618" relation="include">
        </childnode>
        <childnode refid="392598" relation="include">
        </childnode>
        <childnode refid="392659" relation="include">
        </childnode>
        <childnode refid="392619" relation="include">
        </childnode>
      </node>
      <node id="392657">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="392733">
        <label>EventPrimitives/EventPrimitives.h</label>
        <link refid="d1/d54/EventPrimitives_8h_source"/>
        <childnode refid="392734" relation="include">
        </childnode>
        <childnode refid="392735" relation="include">
        </childnode>
        <childnode refid="392736" relation="include">
        </childnode>
      </node>
      <node id="392608">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="392610">
        <label>functional</label>
      </node>
      <node id="392666">
        <label>boost/version.hpp</label>
      </node>
      <node id="392606">
        <label>limits</label>
      </node>
      <node id="392659">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="392762">
        <label>xAODBTagging/versions/BTaggingContainer_v1.h</label>
        <link refid="d9/d93/BTaggingContainer__v1_8h_source"/>
        <childnode refid="392595" relation="include">
        </childnode>
        <childnode refid="392726" relation="include">
        </childnode>
      </node>
      <node id="392637">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="392703">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="392603">
        <label>iterator</label>
      </node>
      <node id="392775">
        <label>xAODCaloEvent/versions/CaloClusterBadChannelData_v1.h</label>
        <link refid="d5/d3a/CaloClusterBadChannelData__v1_8h_source"/>
        <childnode refid="392772" relation="include">
        </childnode>
        <childnode refid="392623" relation="include">
        </childnode>
      </node>
      <node id="392620">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="392607" relation="include">
        </childnode>
        <childnode refid="392621" relation="include">
        </childnode>
      </node>
      <node id="392721">
        <label>xAODJet/Jet.h</label>
        <link refid="da/db7/Jet_8h_source"/>
        <childnode refid="392722" relation="include">
        </childnode>
        <childnode refid="392717" relation="include">
        </childnode>
      </node>
      <node id="392708">
        <label>SGTools/ClassID_traits.h</label>
      </node>
      <node id="392777">
        <label>CaloEvent/CaloRecoStatus.h</label>
      </node>
      <node id="392760">
        <label>xAODBTagging/versions/BTagVertex_v1.h</label>
        <link refid="d6/df4/BTagVertex__v1_8h_source"/>
        <childnode refid="392660" relation="include">
        </childnode>
        <childnode refid="392711" relation="include">
        </childnode>
        <childnode refid="392704" relation="include">
        </childnode>
        <childnode refid="392706" relation="include">
        </childnode>
        <childnode refid="392728" relation="include">
        </childnode>
        <childnode refid="392745" relation="include">
        </childnode>
        <childnode refid="392744" relation="include">
        </childnode>
        <childnode refid="392723" relation="include">
        </childnode>
        <childnode refid="392623" relation="include">
        </childnode>
        <childnode refid="392607" relation="include">
        </childnode>
        <childnode refid="392619" relation="include">
        </childnode>
      </node>
      <node id="392768">
        <label>xAODJet/versions/JetContainer_v1.h</label>
        <link refid="df/d28/JetContainer__v1_8h_source"/>
        <childnode refid="392595" relation="include">
        </childnode>
        <childnode refid="392722" relation="include">
        </childnode>
      </node>
      <node id="392702">
        <label>xAODMissingET/versions/MissingETBase.h</label>
        <link refid="d4/da9/MissingETBase_8h_source"/>
        <childnode refid="392598" relation="include">
        </childnode>
        <childnode refid="392605" relation="include">
        </childnode>
        <childnode refid="392623" relation="include">
        </childnode>
        <childnode refid="392607" relation="include">
        </childnode>
        <childnode refid="392703" relation="include">
        </childnode>
      </node>
      <node id="392690">
        <label>SGTools/ClassName.h</label>
      </node>
      <node id="392696">
        <label>AthContainers/DataVector.icc</label>
        <link refid="da/de6/DataVector_8icc"/>
        <childnode refid="392697" relation="include">
        </childnode>
        <childnode refid="392664" relation="include">
        </childnode>
        <childnode refid="392606" relation="include">
        </childnode>
        <childnode refid="392610" relation="include">
        </childnode>
        <childnode refid="392698" relation="include">
        </childnode>
      </node>
      <node id="392596">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="392597" relation="include">
        </childnode>
        <childnode refid="392611" relation="include">
        </childnode>
        <childnode refid="392612" relation="include">
        </childnode>
        <childnode refid="392613" relation="include">
        </childnode>
        <childnode refid="392607" relation="include">
        </childnode>
      </node>
      <node id="392622">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="392623" relation="include">
        </childnode>
        <childnode refid="392604" relation="include">
        </childnode>
      </node>
      <node id="392709">
        <label>AthContainers/ConstDataVector.icc</label>
        <link refid="d2/d61/ConstDataVector_8icc"/>
        <childnode refid="392710" relation="include">
        </childnode>
        <childnode refid="392610" relation="include">
        </childnode>
      </node>
      <node id="392625">
        <label>stdint.h</label>
      </node>
      <node id="392676">
        <label>AthContainers/tools/DVLCast.h</label>
        <link refid="df/d5c/DVLCast_8h"/>
        <childnode refid="392606" relation="include">
        </childnode>
        <childnode refid="392677" relation="include">
        </childnode>
        <childnode refid="392613" relation="include">
        </childnode>
        <childnode refid="392604" relation="include">
        </childnode>
        <childnode refid="392598" relation="include">
        </childnode>
      </node>
      <node id="392644">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="392598" relation="include">
        </childnode>
        <childnode refid="392613" relation="include">
        </childnode>
      </node>
      <node id="392615">
        <label>AthContainers/IndexTrackingPolicy.h</label>
        <link refid="d0/da5/IndexTrackingPolicy_8h"/>
      </node>
      <node id="392748">
        <label>Eigen/Geometry</label>
      </node>
      <node id="392628">
        <label>RVersion.h</label>
      </node>
      <node id="392593">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComponentMap_v1.cxx</label>
        <link refid="MissingETComponentMap_v1.cxx"/>
        <childnode refid="392594" relation="include">
        </childnode>
        <childnode refid="392714" relation="include">
        </childnode>
        <childnode refid="392770" relation="include">
        </childnode>
        <childnode refid="392729" relation="include">
        </childnode>
        <childnode refid="392706" relation="include">
        </childnode>
        <childnode refid="392699" relation="include">
        </childnode>
        <childnode refid="392603" relation="include">
        </childnode>
        <childnode refid="392778" relation="include">
        </childnode>
      </node>
      <node id="392599">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="392600" relation="include">
        </childnode>
        <childnode refid="392609" relation="include">
        </childnode>
        <childnode refid="392610" relation="include">
        </childnode>
      </node>
      <node id="392605">
        <label>cmath</label>
      </node>
      <node id="392663">
        <label>cassert</label>
      </node>
      <node id="392667">
        <label>boost/mpl/if.hpp</label>
      </node>
      <node id="392686">
        <label>boost/static_assert.hpp</label>
      </node>
      <node id="392710">
        <label>boost/iterator/transform_iterator.hpp</label>
      </node>
      <node id="392612">
        <label>stdexcept</label>
      </node>
      <node id="392714">
        <label>xAODMissingET/MissingETContainer.h</label>
        <link refid="d5/d10/MissingETContainer_8h_source"/>
        <childnode refid="392715" relation="include">
        </childnode>
        <childnode refid="392718" relation="include">
        </childnode>
        <childnode refid="392717" relation="include">
        </childnode>
      </node>
      <node id="392640">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="392735">
        <label>Eigen/Core</label>
      </node>
      <node id="392673">
        <label>boost/type_traits/is_pointer.hpp</label>
      </node>
      <node id="392737">
        <label>xAODTracking/VertexContainerFwd.h</label>
        <link refid="d0/dc4/VertexContainerFwd_8h_source"/>
        <childnode refid="392595" relation="include">
        </childnode>
        <childnode refid="392738" relation="include">
        </childnode>
      </node>
      <node id="392742">
        <label>xAODTracking/TrackParticleContainerFwd.h</label>
        <link refid="de/dea/TrackParticleContainerFwd_8h_source"/>
        <childnode refid="392595" relation="include">
        </childnode>
        <childnode refid="392706" relation="include">
        </childnode>
        <childnode refid="392743" relation="include">
        </childnode>
      </node>
      <node id="392681">
        <label>boost/iterator/iterator_adaptor.hpp</label>
      </node>
      <node id="392705">
        <label>TLorentzVector.h</label>
      </node>
      <node id="392772">
        <label>CaloGeoHelpers/CaloSampling.h</label>
        <link refid="d7/d85/CaloSampling_8h_source"/>
        <childnode refid="392607" relation="include">
        </childnode>
        <childnode refid="392773" relation="include">
        </childnode>
      </node>
      <node id="392607">
        <label>string</label>
      </node>
      <node id="392617">
        <label>AthContainers/AuxVectorData.h</label>
        <link refid="d9/df2/AuxVectorData_8h"/>
        <childnode refid="392597" relation="include">
        </childnode>
        <childnode refid="392618" relation="include">
        </childnode>
        <childnode refid="392620" relation="include">
        </childnode>
        <childnode refid="392622" relation="include">
        </childnode>
        <childnode refid="392624" relation="include">
        </childnode>
        <childnode refid="392630" relation="include">
        </childnode>
        <childnode refid="392631" relation="include">
        </childnode>
        <childnode refid="392632" relation="include">
        </childnode>
        <childnode refid="392623" relation="include">
        </childnode>
        <childnode refid="392602" relation="include">
        </childnode>
        <childnode refid="392604" relation="include">
        </childnode>
        <childnode refid="392633" relation="include">
        </childnode>
        <childnode refid="392634" relation="include">
        </childnode>
        <childnode refid="392635" relation="include">
        </childnode>
        <childnode refid="392641" relation="include">
        </childnode>
      </node>
      <node id="392643">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="392598" relation="include">
        </childnode>
        <childnode refid="392613" relation="include">
        </childnode>
      </node>
      <node id="392730">
        <label>versions/TrackParticle_v1.h</label>
        <link refid="d2/d7f/TrackParticle__v1_8h_source"/>
        <childnode refid="392731" relation="include">
        </childnode>
        <childnode refid="392625" relation="include">
        </childnode>
        <childnode refid="392711" relation="include">
        </childnode>
        <childnode refid="392595" relation="include">
        </childnode>
        <childnode refid="392704" relation="include">
        </childnode>
        <childnode refid="392732" relation="include">
        </childnode>
        <childnode refid="392737" relation="include">
        </childnode>
        <childnode refid="392739" relation="include">
        </childnode>
        <childnode refid="392740" relation="include">
        </childnode>
      </node>
      <node id="392633">
        <label>AthContainers/tools/likely.h</label>
        <link refid="d6/dd6/likely_8h"/>
      </node>
      <node id="392726">
        <label>xAODBTagging/versions/BTagging_v1.h</label>
        <link refid="dc/da1/BTagging__v1_8h_source"/>
        <childnode refid="392660" relation="include">
        </childnode>
        <childnode refid="392711" relation="include">
        </childnode>
        <childnode refid="392727" relation="include">
        </childnode>
        <childnode refid="392728" relation="include">
        </childnode>
        <childnode refid="392744" relation="include">
        </childnode>
        <childnode refid="392758" relation="include">
        </childnode>
        <childnode refid="392723" relation="include">
        </childnode>
        <childnode refid="392623" relation="include">
        </childnode>
        <childnode refid="392607" relation="include">
        </childnode>
        <childnode refid="392688" relation="include">
        </childnode>
        <childnode refid="392619" relation="include">
        </childnode>
      </node>
      <node id="392722">
        <label>xAODJet/versions/Jet_v1.h</label>
        <link refid="df/d71/Jet__v1_8h_source"/>
        <childnode refid="392723" relation="include">
        </childnode>
        <childnode refid="392711" relation="include">
        </childnode>
        <childnode refid="392704" relation="include">
        </childnode>
        <childnode refid="392706" relation="include">
        </childnode>
        <childnode refid="392724" relation="include">
        </childnode>
        <childnode refid="392763" relation="include">
        </childnode>
        <childnode refid="392766" relation="include">
        </childnode>
        <childnode refid="392764" relation="include">
        </childnode>
        <childnode refid="392767" relation="include">
        </childnode>
      </node>
      <node id="392678">
        <label>AthContainers/tools/DVLIterator.h</label>
        <link refid="d3/dc7/DVLIterator_8h_source"/>
        <childnode refid="392614" relation="include">
        </childnode>
        <childnode refid="392676" relation="include">
        </childnode>
        <childnode refid="392679" relation="include">
        </childnode>
        <childnode refid="392681" relation="include">
        </childnode>
        <childnode refid="392666" relation="include">
        </childnode>
        <childnode refid="392603" relation="include">
        </childnode>
        <childnode refid="392604" relation="include">
        </childnode>
      </node>
      <node id="392692">
        <label>SGTools/DataBucket.h</label>
      </node>
      <node id="392723">
        <label>map</label>
      </node>
      <node id="392693">
        <label>AthContainers/tools/DVLDataBucket.icc</label>
        <link refid="d3/d21/DVLDataBucket_8icc"/>
        <childnode refid="392694" relation="include">
        </childnode>
      </node>
      <node id="392694">
        <label>SGTools/IRegisterTransient.h</label>
      </node>
      <node id="392629">
        <label>RootMetaSelection.h</label>
      </node>
      <node id="392653">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="392749">
        <label>VxVertex/VxTrackAtVertex.h</label>
      </node>
      <node id="392683">
        <label>AthContainers/tools/DVL_algorithms.h</label>
        <link refid="d0/d7a/DVL__algorithms_8h"/>
        <childnode refid="392678" relation="include">
        </childnode>
        <childnode refid="392603" relation="include">
        </childnode>
        <childnode refid="392601" relation="include">
        </childnode>
        <childnode refid="392684" relation="include">
        </childnode>
      </node>
      <node id="392634">
        <label>AthContainers/tools/assume.h</label>
        <link refid="d2/d20/assume_8h"/>
      </node>
      <node id="392765">
        <label>Math/Vector4D.h</label>
      </node>
      <node id="392650">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="392744">
        <label>xAODTracking/VertexContainer.h</label>
        <link refid="d6/dd8/VertexContainer_8h_source"/>
        <childnode refid="392745" relation="include">
        </childnode>
        <childnode refid="392757" relation="include">
        </childnode>
        <childnode refid="392717" relation="include">
        </childnode>
      </node>
      <node id="392679">
        <label>AthContainers/tools/ElementProxy.h</label>
        <link refid="db/d26/ElementProxy_8h"/>
        <childnode refid="392614" relation="include">
        </childnode>
        <childnode refid="392627" relation="include">
        </childnode>
        <childnode refid="392609" relation="include">
        </childnode>
        <childnode refid="392680" relation="include">
        </childnode>
      </node>
      <node id="392661">
        <label>AthContainersInterfaces/IAuxElement.h</label>
        <link refid="dd/d7a/IAuxElement_8h"/>
      </node>
      <node id="392627">
        <label>AthLinks/tools/selection_ns.h</label>
        <link refid="d3/dec/selection__ns_8h"/>
        <childnode refid="392628" relation="include">
        </childnode>
        <childnode refid="392629" relation="include">
        </childnode>
      </node>
      <node id="392631">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="392638">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="392743">
        <label>xAODTracking/TrackParticleFwd.h</label>
        <link refid="d1/dc4/TrackParticleFwd_8h_source"/>
      </node>
      <node id="392727">
        <label>xAODBTagging/BTaggingEnums.h</label>
        <link refid="dd/de5/BTaggingEnums_8h_source"/>
      </node>
      <node id="392677">
        <label>limits.h</label>
      </node>
      <node id="392671">
        <label>AthContainers/tools/ClassID.h</label>
        <link refid="de/de2/ClassID_8h"/>
        <childnode refid="392672" relation="include">
        </childnode>
      </node>
      <node id="392757">
        <label>xAODTracking/versions/VertexContainer_v1.h</label>
        <link refid="d2/dda/VertexContainer__v1_8h_source"/>
        <childnode refid="392595" relation="include">
        </childnode>
        <childnode refid="392746" relation="include">
        </childnode>
      </node>
      <node id="392648">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="392620" relation="include">
        </childnode>
        <childnode refid="392606" relation="include">
        </childnode>
        <childnode refid="392625" relation="include">
        </childnode>
        <childnode refid="392649" relation="include">
        </childnode>
      </node>
      <node id="392597">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="392598" relation="include">
        </childnode>
        <childnode refid="392599" relation="include">
        </childnode>
      </node>
      <node id="392712">
        <label>AthLinks/ElementLinkBase.h</label>
        <link refid="d0/d16/ElementLinkBase_8h_source"/>
        <childnode refid="392625" relation="include">
        </childnode>
      </node>
      <node id="392736">
        <label>Eigen/Dense</label>
      </node>
      <node id="392600">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="392601" relation="include">
        </childnode>
        <childnode refid="392602" relation="include">
        </childnode>
        <childnode refid="392603" relation="include">
        </childnode>
        <childnode refid="392598" relation="include">
        </childnode>
        <childnode refid="392604" relation="include">
        </childnode>
        <childnode refid="392605" relation="include">
        </childnode>
        <childnode refid="392606" relation="include">
        </childnode>
        <childnode refid="392607" relation="include">
        </childnode>
        <childnode refid="392608" relation="include">
        </childnode>
      </node>
      <node id="392664">
        <label>AthContainers/tools/ATHCONTAINERS_ASSERT.h</label>
        <link refid="de/d6b/ATHCONTAINERS__ASSERT_8h"/>
        <childnode refid="392663" relation="include">
        </childnode>
      </node>
      <node id="392704">
        <label>xAODBase/IParticle.h</label>
        <link refid="d5/dac/IParticle_8h_source"/>
        <childnode refid="392705" relation="include">
        </childnode>
        <childnode refid="392660" relation="include">
        </childnode>
        <childnode refid="392699" relation="include">
        </childnode>
        <childnode refid="392659" relation="include">
        </childnode>
      </node>
      <node id="392699">
        <label>xAODBase/ObjectType.h</label>
        <link refid="d8/d04/ObjectType_8h_source"/>
        <childnode refid="392700" relation="include">
        </childnode>
      </node>
      <node id="392771">
        <label>xAODCaloEvent/versions/CaloCluster_v1.h</label>
        <link refid="dc/d4b/CaloCluster__v1_8h_source"/>
        <childnode refid="392625" relation="include">
        </childnode>
        <childnode refid="392731" relation="include">
        </childnode>
        <childnode refid="392704" relation="include">
        </childnode>
        <childnode refid="392772" relation="include">
        </childnode>
        <childnode refid="392774" relation="include">
        </childnode>
        <childnode refid="392711" relation="include">
        </childnode>
        <childnode refid="392776" relation="include">
        </childnode>
        <childnode refid="392777" relation="include">
        </childnode>
      </node>
      <node id="392766">
        <label>xAODJet/JetAttributes.h</label>
        <link refid="d3/df8/JetAttributes_8h"/>
      </node>
      <node id="392680">
        <label>AthContainers/tools/ElementProxy.icc</label>
        <link refid="d6/d70/ElementProxy_8icc"/>
        <childnode refid="392676" relation="include">
        </childnode>
        <childnode refid="392664" relation="include">
        </childnode>
      </node>
      <node id="392613">
        <label>typeinfo</label>
      </node>
      <node id="392732">
        <label>xAODTracking/TrackingPrimitives.h</label>
        <link refid="d2/d4c/TrackingPrimitives_8h_source"/>
        <childnode refid="392733" relation="include">
        </childnode>
      </node>
      <node id="392662">
        <label>AthContainers/AuxElement.icc</label>
        <link refid="d2/d37/AuxElement_8icc"/>
        <childnode refid="392633" relation="include">
        </childnode>
        <childnode refid="392663" relation="include">
        </childnode>
      </node>
      <node id="392778">
        <label>cstdio</label>
      </node>
      <node id="392770">
        <label>xAODCaloEvent/CaloCluster.h</label>
        <link refid="db/d88/CaloCluster_8h_source"/>
        <childnode refid="392771" relation="include">
        </childnode>
        <childnode refid="392717" relation="include">
        </childnode>
      </node>
      <node id="392595">
        <label>AthContainers/DataVector.h</label>
        <link refid="d7/dd6/DataVector_8h"/>
        <childnode refid="392596" relation="include">
        </childnode>
        <childnode refid="392614" relation="include">
        </childnode>
        <childnode refid="392615" relation="include">
        </childnode>
        <childnode refid="392616" relation="include">
        </childnode>
        <childnode refid="392669" relation="include">
        </childnode>
        <childnode refid="392670" relation="include">
        </childnode>
        <childnode refid="392676" relation="include">
        </childnode>
        <childnode refid="392678" relation="include">
        </childnode>
        <childnode refid="392682" relation="include">
        </childnode>
        <childnode refid="392683" relation="include">
        </childnode>
        <childnode refid="392679" relation="include">
        </childnode>
        <childnode refid="392685" relation="include">
        </childnode>
        <childnode refid="392627" relation="include">
        </childnode>
        <childnode refid="392686" relation="include">
        </childnode>
        <childnode refid="392687" relation="include">
        </childnode>
        <childnode refid="392681" relation="include">
        </childnode>
        <childnode refid="392623" relation="include">
        </childnode>
        <childnode refid="392613" relation="include">
        </childnode>
        <childnode refid="392610" relation="include">
        </childnode>
        <childnode refid="392688" relation="include">
        </childnode>
        <childnode refid="392601" relation="include">
        </childnode>
        <childnode refid="392612" relation="include">
        </childnode>
        <childnode refid="392603" relation="include">
        </childnode>
        <childnode refid="392659" relation="include">
        </childnode>
        <childnode refid="392689" relation="include">
        </childnode>
        <childnode refid="392691" relation="include">
        </childnode>
        <childnode refid="392695" relation="include">
        </childnode>
        <childnode refid="392696" relation="include">
        </childnode>
      </node>
      <node id="392751">
        <label>xAODTracking/NeutralParticle.h</label>
        <link refid="d4/daa/NeutralParticle_8h_source"/>
        <childnode refid="392752" relation="include">
        </childnode>
        <childnode refid="392717" relation="include">
        </childnode>
      </node>
      <node id="392731">
        <label>bitset</label>
      </node>
      <node id="392649">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="392713">
        <label>AthLinks/tools/TypeTools.h</label>
        <link refid="dd/db1/TypeTools_8h_source"/>
      </node>
      <node id="392630">
        <label>AthenaKernel/ILockable.h</label>
      </node>
      <node id="392626">
        <label>AthLinks/DataLinkBase.h</label>
        <link refid="db/da8/DataLinkBase_8h_source"/>
        <childnode refid="392625" relation="include">
        </childnode>
      </node>
      <node id="392746">
        <label>xAODTracking/versions/Vertex_v1.h</label>
        <link refid="d7/dcc/Vertex__v1_8h_source"/>
        <childnode refid="392623" relation="include">
        </childnode>
        <childnode refid="392660" relation="include">
        </childnode>
        <childnode refid="392711" relation="include">
        </childnode>
        <childnode refid="392733" relation="include">
        </childnode>
        <childnode refid="392747" relation="include">
        </childnode>
        <childnode refid="392749" relation="include">
        </childnode>
        <childnode refid="392732" relation="include">
        </childnode>
        <childnode refid="392742" relation="include">
        </childnode>
        <childnode refid="392750" relation="include">
        </childnode>
        <childnode refid="392699" relation="include">
        </childnode>
        <childnode refid="392719" relation="include">
        </childnode>
      </node>
      <node id="392621">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="392652">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="392670">
        <label>AthContainers/tools/DVLInfo.h</label>
        <link refid="d3/d2e/DVLInfo_8h"/>
        <childnode refid="392671" relation="include">
        </childnode>
        <childnode refid="392616" relation="include">
        </childnode>
        <childnode refid="392613" relation="include">
        </childnode>
        <childnode refid="392598" relation="include">
        </childnode>
        <childnode refid="392608" relation="include">
        </childnode>
        <childnode refid="392673" relation="include">
        </childnode>
        <childnode refid="392651" relation="include">
        </childnode>
        <childnode refid="392674" relation="include">
        </childnode>
      </node>
      <node id="392619">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="392734">
        <label>unistd.h</label>
      </node>
      <node id="392689">
        <label>AthContainers/ClassName.h</label>
        <link refid="dd/d6b/AthContainers_2AthContainers_2ClassName_8h_source"/>
        <childnode refid="392690" relation="include">
        </childnode>
      </node>
      <node id="392642">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="392597" relation="include">
        </childnode>
        <childnode refid="392643" relation="include">
        </childnode>
        <childnode refid="392644" relation="include">
        </childnode>
        <childnode refid="392645" relation="include">
        </childnode>
        <childnode refid="392654" relation="include">
        </childnode>
        <childnode refid="392635" relation="include">
        </childnode>
        <childnode refid="392598" relation="include">
        </childnode>
        <childnode refid="392613" relation="include">
        </childnode>
        <childnode refid="392623" relation="include">
        </childnode>
        <childnode refid="392656" relation="include">
        </childnode>
        <childnode refid="392657" relation="include">
        </childnode>
      </node>
      <node id="392623">
        <label>vector</label>
      </node>
      <node id="392706">
        <label>xAODBase/IParticleContainer.h</label>
        <link refid="dd/d2d/IParticleContainer_8h_source"/>
        <childnode refid="392595" relation="include">
        </childnode>
        <childnode refid="392704" relation="include">
        </childnode>
        <childnode refid="392619" relation="include">
        </childnode>
      </node>
      <node id="392697">
        <label>AthContainers/tools/CompareAndPrint.h</label>
        <link refid="d5/da8/CompareAndPrint_8h_source"/>
        <childnode refid="392601" relation="include">
        </childnode>
        <childnode refid="392613" relation="include">
        </childnode>
      </node>
      <node id="392745">
        <label>xAODTracking/Vertex.h</label>
        <link refid="d9/d2d/Vertex_8h_source"/>
        <childnode refid="392746" relation="include">
        </childnode>
      </node>
      <node id="392754">
        <label>xAODTracking/versions/NeutralParticleContainer_v1.h</label>
        <link refid="d6/d5f/NeutralParticleContainer__v1_8h_source"/>
        <childnode refid="392625" relation="include">
        </childnode>
        <childnode refid="392595" relation="include">
        </childnode>
        <childnode refid="392752" relation="include">
        </childnode>
        <childnode refid="392755" relation="include">
        </childnode>
      </node>
      <node id="392767">
        <label>xAODJet/JetContainerInfo.h</label>
        <link refid="d8/d2a/JetContainerInfo_8h_source"/>
        <childnode refid="392607" relation="include">
        </childnode>
      </node>
      <node id="392707">
        <label>AthContainers/ConstDataVector.h</label>
        <link refid="d2/d0d/ConstDataVector_8h"/>
        <childnode refid="392595" relation="include">
        </childnode>
        <childnode refid="392708" relation="include">
        </childnode>
        <childnode refid="392709" relation="include">
        </childnode>
      </node>
      <node id="392698">
        <label>AthContainers/tools/DVLEltBaseInfo.icc</label>
        <link refid="dd/d5e/DVLEltBaseInfo_8icc"/>
      </node>
      <node id="392724">
        <label>xAODBTagging/BTaggingContainer.h</label>
        <link refid="d8/d3b/BTaggingContainer_8h_source"/>
        <childnode refid="392725" relation="include">
        </childnode>
        <childnode refid="392762" relation="include">
        </childnode>
        <childnode refid="392717" relation="include">
        </childnode>
      </node>
      <node id="392774">
        <label>xAODCaloEvent/CaloClusterBadChannelData.h</label>
        <link refid="d1/d93/CaloClusterBadChannelData_8h_source"/>
        <childnode refid="392775" relation="include">
        </childnode>
      </node>
      <node id="392602">
        <label>utility</label>
      </node>
      <node id="392695">
        <label>SGTools/DataBucketTraitFwd.h</label>
      </node>
      <node id="392632">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="392716">
        <label>xAODMissingET/versions/MissingET_v1.h</label>
        <link refid="df/d79/MissingET__v1_8h_source"/>
        <childnode refid="392660" relation="include">
        </childnode>
        <childnode refid="392704" relation="include">
        </childnode>
        <childnode refid="392702" relation="include">
        </childnode>
        <childnode refid="392607" relation="include">
        </childnode>
        <childnode refid="392610" relation="include">
        </childnode>
        <childnode refid="392602" relation="include">
        </childnode>
      </node>
      <node id="392747">
        <label>GeoPrimitives/GeoPrimitives.h</label>
        <link refid="d7/d87/GeoPrimitives_8h_source"/>
        <childnode refid="392734" relation="include">
        </childnode>
        <childnode refid="392748" relation="include">
        </childnode>
      </node>
      <node id="392738">
        <label>xAODTracking/VertexFwd.h</label>
        <link refid="d9/ddd/VertexFwd_8h_source"/>
      </node>
      <node id="392668">
        <label>AthContainers/AuxVectorBase.icc</label>
        <link refid="d4/d50/AuxVectorBase_8icc"/>
      </node>
      <node id="392636">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="392759">
        <label>xAODBTagging/BTagVertex.h</label>
        <link refid="d4/d51/BTagVertex_8h_source"/>
        <childnode refid="392760" relation="include">
        </childnode>
      </node>
      <node id="392715">
        <label>xAODMissingET/MissingET.h</label>
        <link refid="d0/d22/MissingET_8h_source"/>
        <childnode refid="392716" relation="include">
        </childnode>
        <childnode refid="392717" relation="include">
        </childnode>
      </node>
      <node id="392646">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="392718">
        <label>xAODMissingET/versions/MissingETContainer_v1.h</label>
        <link refid="df/df3/MissingETContainer__v1_8h_source"/>
        <childnode refid="392595" relation="include">
        </childnode>
        <childnode refid="392702" relation="include">
        </childnode>
        <childnode refid="392716" relation="include">
        </childnode>
        <childnode refid="392607" relation="include">
        </childnode>
        <childnode refid="392719" relation="include">
        </childnode>
      </node>
      <node id="392635">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="392636" relation="include">
        </childnode>
        <childnode refid="392637" relation="include">
        </childnode>
        <childnode refid="392638" relation="include">
        </childnode>
        <childnode refid="392639" relation="include">
        </childnode>
        <childnode refid="392640" relation="include">
        </childnode>
      </node>
      <node id="392773">
        <label>CaloGeoHelpers/CaloSampling.def</label>
      </node>
      <node id="392769">
        <label>xAODMissingET/versions/MissingETComponent_v1.h</label>
        <link refid="d1/d98/MissingETComponent__v1_8h"/>
        <childnode refid="392660" relation="include">
        </childnode>
        <childnode refid="392704" relation="include">
        </childnode>
        <childnode refid="392706" relation="include">
        </childnode>
        <childnode refid="392701" relation="include">
        </childnode>
        <childnode refid="392714" relation="include">
        </childnode>
        <childnode refid="392623" relation="include">
        </childnode>
      </node>
      <node id="392700">
        <label>iosfwd</label>
      </node>
      <node id="392604">
        <label>cstdlib</label>
      </node>
      <node id="392729">
        <label>xAODTracking/TrackParticle.h</label>
        <link refid="d2/d15/TrackParticle_8h_source"/>
        <childnode refid="392730" relation="include">
        </childnode>
        <childnode refid="392717" relation="include">
        </childnode>
      </node>
      <node id="392688">
        <label>iostream</label>
      </node>
      <node id="392611">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="392741">
        <label>xAODTracking/versions/TrackParticleContainer_v1.h</label>
        <link refid="d7/d3b/TrackParticleContainer__v1_8h_source"/>
        <childnode refid="392625" relation="include">
        </childnode>
        <childnode refid="392595" relation="include">
        </childnode>
        <childnode refid="392730" relation="include">
        </childnode>
        <childnode refid="392742" relation="include">
        </childnode>
      </node>
      <node id="392618">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="392597" relation="include">
        </childnode>
        <childnode refid="392598" relation="include">
        </childnode>
        <childnode refid="392619" relation="include">
        </childnode>
      </node>
      <node id="392598">
        <label>cstddef</label>
      </node>
      <node id="392641">
        <label>AthContainers/AuxVectorData.icc</label>
        <link refid="da/de7/AuxVectorData_8icc"/>
        <childnode refid="392642" relation="include">
        </childnode>
        <childnode refid="392658" relation="include">
        </childnode>
        <childnode refid="392618" relation="include">
        </childnode>
        <childnode refid="392633" relation="include">
        </childnode>
        <childnode refid="392634" relation="include">
        </childnode>
      </node>
      <node id="392719">
        <label>xAODCore/BaseInfo.h</label>
        <link refid="d3/d17/BaseInfo_8h_source"/>
        <childnode refid="392659" relation="include">
        </childnode>
      </node>
      <node id="392725">
        <label>xAODBTagging/BTagging.h</label>
        <link refid="d2/d81/BTagging_8h_source"/>
        <childnode refid="392726" relation="include">
        </childnode>
      </node>
      <node id="392764">
        <label>xAODJet/JetTypes.h</label>
        <link refid="d6/d2a/JetTypes_8h_source"/>
        <childnode refid="392765" relation="include">
        </childnode>
      </node>
      <node id="392763">
        <label>xAODJet/JetConstituentVector.h</label>
        <link refid="de/dd4/JetConstituentVector_8h_source"/>
        <childnode refid="392711" relation="include">
        </childnode>
        <childnode refid="392704" relation="include">
        </childnode>
        <childnode refid="392706" relation="include">
        </childnode>
        <childnode refid="392764" relation="include">
        </childnode>
      </node>
      <node id="392753">
        <label>TrkNeutralParameters/NeutralParameters.h</label>
      </node>
      <node id="392674">
        <label>AthContainers/tools/DVLInfo.icc</label>
        <link refid="da/d83/DVLInfo_8icc"/>
        <childnode refid="392614" relation="include">
        </childnode>
        <childnode refid="392623" relation="include">
        </childnode>
        <childnode refid="392675" relation="include">
        </childnode>
        <childnode refid="392663" relation="include">
        </childnode>
        <childnode refid="392604" relation="include">
        </childnode>
        <childnode refid="392659" relation="include">
        </childnode>
      </node>
      <node id="392645">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="392643" relation="include">
        </childnode>
        <childnode refid="392646" relation="include">
        </childnode>
        <childnode refid="392622" relation="include">
        </childnode>
        <childnode refid="392647" relation="include">
        </childnode>
        <childnode refid="392632" relation="include">
        </childnode>
        <childnode refid="392613" relation="include">
        </childnode>
        <childnode refid="392623" relation="include">
        </childnode>
        <childnode refid="392601" relation="include">
        </childnode>
        <childnode refid="392625" relation="include">
        </childnode>
        <childnode refid="392651" relation="include">
        </childnode>
        <childnode refid="392652" relation="include">
        </childnode>
        <childnode refid="392653" relation="include">
        </childnode>
      </node>
      <node id="392701">
        <label>xAODMissingET/versions/MissingETCompositionBase.h</label>
        <link refid="d9/d25/MissingETCompositionBase_8h_source"/>
        <childnode refid="392702" relation="include">
        </childnode>
        <childnode refid="392704" relation="include">
        </childnode>
        <childnode refid="392706" relation="include">
        </childnode>
        <childnode refid="392707" relation="include">
        </childnode>
        <childnode refid="392711" relation="include">
        </childnode>
        <childnode refid="392714" relation="include">
        </childnode>
        <childnode refid="392720" relation="include">
        </childnode>
        <childnode refid="392623" relation="include">
        </childnode>
        <childnode refid="392603" relation="include">
        </childnode>
      </node>
      <node id="392739">
        <label>TrkParameters/TrackParameters.h</label>
      </node>
      <node id="392720">
        <label>xAODJet/JetContainer.h</label>
        <link refid="d5/d55/JetContainer_8h_source"/>
        <childnode refid="392721" relation="include">
        </childnode>
        <childnode refid="392768" relation="include">
        </childnode>
        <childnode refid="392717" relation="include">
        </childnode>
      </node>
      <node id="392752">
        <label>versions/NeutralParticle_v1.h</label>
        <link refid="da/d85/NeutralParticle__v1_8h_source"/>
        <childnode refid="392711" relation="include">
        </childnode>
        <childnode refid="392595" relation="include">
        </childnode>
        <childnode refid="392704" relation="include">
        </childnode>
        <childnode refid="392732" relation="include">
        </childnode>
        <childnode refid="392737" relation="include">
        </childnode>
        <childnode refid="392731" relation="include">
        </childnode>
        <childnode refid="392625" relation="include">
        </childnode>
        <childnode refid="392753" relation="include">
        </childnode>
      </node>
      <node id="392756">
        <label>xAODTracking/NeutralParticleFwd.h</label>
        <link refid="d4/d90/NeutralParticleFwd_8h_source"/>
      </node>
      <node id="392651">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="392750">
        <label>xAODTracking/NeutralParticleContainer.h</label>
        <link refid="da/d7f/NeutralParticleContainer_8h_source"/>
        <childnode refid="392751" relation="include">
        </childnode>
        <childnode refid="392754" relation="include">
        </childnode>
        <childnode refid="392717" relation="include">
        </childnode>
      </node>
      <node id="392616">
        <label>AthContainers/AuxVectorBase.h</label>
        <link refid="d7/d18/AuxVectorBase_8h"/>
        <childnode refid="392617" relation="include">
        </childnode>
        <childnode refid="392614" relation="include">
        </childnode>
        <childnode refid="392615" relation="include">
        </childnode>
        <childnode refid="392660" relation="include">
        </childnode>
        <childnode refid="392642" relation="include">
        </childnode>
        <childnode refid="392596" relation="include">
        </childnode>
        <childnode refid="392664" relation="include">
        </childnode>
        <childnode refid="392658" relation="include">
        </childnode>
        <childnode refid="392665" relation="include">
        </childnode>
        <childnode refid="392623" relation="include">
        </childnode>
        <childnode refid="392668" relation="include">
        </childnode>
      </node>
      <node id="392717">
        <label>xAODCore/CLASS_DEF.h</label>
        <link refid="d6/d20/xAODCore_2xAODCore_2CLASS__DEF_8h"/>
        <childnode refid="392619" relation="include">
        </childnode>
      </node>
      <node id="392655">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="392647">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="392646" relation="include">
        </childnode>
        <childnode refid="392648" relation="include">
        </childnode>
        <childnode refid="392632" relation="include">
        </childnode>
        <childnode refid="392623" relation="include">
        </childnode>
        <childnode refid="392650" relation="include">
        </childnode>
      </node>
      <node id="392601">
        <label>algorithm</label>
      </node>
      <node id="392776">
        <label>CaloEvent/CaloClusterCellLinkContainer.h</label>
      </node>
      <node id="392685">
        <label>AthContainers/tools/IsMostDerivedFlag.h</label>
        <link refid="d5/dfa/IsMostDerivedFlag_8h"/>
      </node>
      <node id="392740">
        <label>TrkTrack/TrackCollection.h</label>
      </node>
      <node id="392660">
        <label>AthContainers/AuxElement.h</label>
        <link refid="d1/d6f/AuxElement_8h"/>
        <childnode refid="392661" relation="include">
        </childnode>
        <childnode refid="392618" relation="include">
        </childnode>
        <childnode refid="392658" relation="include">
        </childnode>
        <childnode refid="392624" relation="include">
        </childnode>
        <childnode refid="392642" relation="include">
        </childnode>
        <childnode refid="392617" relation="include">
        </childnode>
        <childnode refid="392622" relation="include">
        </childnode>
        <childnode refid="392596" relation="include">
        </childnode>
        <childnode refid="392633" relation="include">
        </childnode>
        <childnode refid="392598" relation="include">
        </childnode>
        <childnode refid="392662" relation="include">
        </childnode>
      </node>
      <node id="392624">
        <label>AthLinks/DataLink.h</label>
        <link refid="da/de8/DataLink_8h_source"/>
        <childnode refid="392625" relation="include">
        </childnode>
        <childnode refid="392607" relation="include">
        </childnode>
        <childnode refid="392626" relation="include">
        </childnode>
        <childnode refid="392627" relation="include">
        </childnode>
      </node>
      <node id="392682">
        <label>AthContainers/tools/DVL_iter_swap.h</label>
        <link refid="d6/ddb/DVL__iter__swap_8h"/>
        <childnode refid="392678" relation="include">
        </childnode>
        <childnode refid="392664" relation="include">
        </childnode>
        <childnode refid="392603" relation="include">
        </childnode>
      </node>
      <node id="392614">
        <label>AthContainers/OwnershipPolicy.h</label>
        <link refid="d3/da4/OwnershipPolicy_8h_source"/>
      </node>
      <node id="392711">
        <label>AthLinks/ElementLink.h</label>
        <link refid="dc/d24/ElementLink_8h_source"/>
        <childnode refid="392625" relation="include">
        </childnode>
        <childnode refid="392607" relation="include">
        </childnode>
        <childnode refid="392712" relation="include">
        </childnode>
        <childnode refid="392627" relation="include">
        </childnode>
        <childnode refid="392713" relation="include">
        </childnode>
      </node>
      <node id="392761">
        <label>xAODBTagging/versions/BTagVertexContainer_v1.h</label>
        <link refid="d1/d37/BTagVertexContainer__v1_8h_source"/>
        <childnode refid="392595" relation="include">
        </childnode>
        <childnode refid="392760" relation="include">
        </childnode>
      </node>
      <node id="392728">
        <label>xAODTracking/TrackParticleContainer.h</label>
        <link refid="da/d31/TrackParticleContainer_8h_source"/>
        <childnode refid="392729" relation="include">
        </childnode>
        <childnode refid="392741" relation="include">
        </childnode>
        <childnode refid="392717" relation="include">
        </childnode>
      </node>
      <node id="392672">
        <label>GaudiKernel/ClassID.h</label>
      </node>
      <node id="392594">
        <label>xAODMissingET/versions/MissingETComponentMap_v1.h</label>
        <link refid="dd/ddb/MissingETComponentMap__v1_8h_source"/>
        <childnode refid="392595" relation="include">
        </childnode>
        <childnode refid="392699" relation="include">
        </childnode>
        <childnode refid="392701" relation="include">
        </childnode>
        <childnode refid="392715" relation="include">
        </childnode>
        <childnode refid="392769" relation="include">
        </childnode>
        <childnode refid="392607" relation="include">
        </childnode>
        <childnode refid="392623" relation="include">
        </childnode>
        <childnode refid="392723" relation="include">
        </childnode>
        <childnode refid="392719" relation="include">
        </childnode>
      </node>
      <node id="392687">
        <label>boost/type_traits.hpp</label>
      </node>
      <node id="392609">
        <label>memory</label>
      </node>
      <node id="392755">
        <label>xAODTracking/NeutralParticleContainerFwd.h</label>
        <link refid="d2/db4/NeutralParticleContainerFwd_8h_source"/>
        <childnode refid="392595" relation="include">
        </childnode>
        <childnode refid="392706" relation="include">
        </childnode>
        <childnode refid="392756" relation="include">
        </childnode>
      </node>
      <node id="392654">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="392644" relation="include">
        </childnode>
        <childnode refid="392645" relation="include">
        </childnode>
        <childnode refid="392655" relation="include">
        </childnode>
      </node>
      <node id="392665">
        <label>AthContainersInterfaces/AuxStore_traits.h</label>
        <link refid="dd/d70/AuxStore__traits_8h"/>
        <childnode refid="392661" relation="include">
        </childnode>
        <childnode refid="392658" relation="include">
        </childnode>
        <childnode refid="392618" relation="include">
        </childnode>
        <childnode refid="392651" relation="include">
        </childnode>
        <childnode refid="392666" relation="include">
        </childnode>
        <childnode refid="392667" relation="include">
        </childnode>
        <childnode refid="392607" relation="include">
        </childnode>
      </node>
      <node id="392758">
        <label>xAODBTagging/BTagVertexContainer.h</label>
        <link refid="d5/da2/BTagVertexContainer_8h_source"/>
        <childnode refid="392759" relation="include">
        </childnode>
        <childnode refid="392761" relation="include">
        </childnode>
        <childnode refid="392717" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODMissingET/versions/MissingETComponentMap_v1.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODMissingET/MissingETContainer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODCaloEvent/CaloCluster.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODTracking/TrackParticle.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODBase/IParticleContainer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODBase/ObjectType.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iterator&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdio&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">xAOD;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="comment">//<sp/>Internally<sp/>used<sp/>constants<sp/>//</highlight></codeline>
<codeline lineno="20"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>MissingETComponentMap_v1::m_clusterLinkReserve<sp/>=<sp/>10000;<sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>MissingETComponentMap_v1::m_trackLinkReserve<sp/><sp/><sp/>=<sp/>10000;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>MissingETComponentMap_v1::m_maxClusterSize<sp/><sp/><sp/><sp/><sp/>=<sp/>5000;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>MissingETComponentMap_v1::m_maxTrackSize<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>5000;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>MissingETComponentMap_v1::m_maxSignalSize<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>fmax(m_maxTrackSize,m_maxClusterSize);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="comment">//<sp/>Constructors<sp/>and<sp/>destructor<sp/>//</highlight></codeline>
<codeline lineno="30"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">MissingETComponentMap_v1::MissingETComponentMap_v1(<ref refid="dd/d59/namespaceSG_1acd9d1a31242c6243cc1c6fab0fbc7cd8" kindref="member" tooltip="describes the possible element ownership policies (see e.g. DataVector)">SG::OwnershipPolicy</ref><sp/>own,<sp/><ref refid="dd/d59/namespaceSG_1a9f3d699f65390b7f8baf54d9cd634573" kindref="member">SG::IndexTrackingPolicy</ref><sp/>trackIndices)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">DataVector</ref>&lt;<ref refid="d8/d38/classxAOD_1_1MissingETComponent__v1" kindref="compound" tooltip="MET component descriptor contains object links and corresponding parameters.">MissingETComponent_v1</ref>&gt;(own,trackIndices)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>,<sp/>m_lastMETObject((const<sp/><ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound" tooltip="Principal data object for Missing ET.">MissingET</ref>*)0)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>,<sp/>m_lastContribIndex(MissingETBase::Numerical::invalidIndex())</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>this-&gt;f_setupLookupCache(m_clusterLinks,m_clusterLinkReserve);<sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>this-&gt;f_setupLookupCache(m_trackLinks,m_trackLinkReserve);<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">MissingETComponentMap_v1::MissingETComponentMap_v1(MissingETComponentMap_v1::iterator<sp/>first,<sp/>MissingETComponentMap_v1::iterator<sp/>last,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d59/namespaceSG_1acd9d1a31242c6243cc1c6fab0fbc7cd8" kindref="member" tooltip="describes the possible element ownership policies (see e.g. DataVector)">SG::OwnershipPolicy</ref><sp/>own,<sp/><ref refid="dd/d59/namespaceSG_1a9f3d699f65390b7f8baf54d9cd634573" kindref="member">SG::IndexTrackingPolicy</ref><sp/>trackIndices)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">DataVector</ref>&lt;<ref refid="d8/d38/classxAOD_1_1MissingETComponent__v1" kindref="compound" tooltip="MET component descriptor contains object links and corresponding parameters.">MissingETComponent_v1</ref>&gt;(first,last,own,trackIndices)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>,<sp/>m_lastMETObject((const<sp/><ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound" tooltip="Principal data object for Missing ET.">MissingET</ref>*)0)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>,<sp/>m_lastContribIndex(MissingETBase::Numerical::invalidIndex())</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>this-&gt;f_setupLookupCache(m_clusterLinks,m_clusterLinkReserve);<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>this-&gt;f_setupLookupCache(m_trackLinks,m_trackLinkReserve);<sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">MissingETComponentMap_v1::~MissingETComponentMap_v1()</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{<sp/>this-&gt;clearCache();<sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="comment">//<sp/>Finders<sp/>//</highlight></codeline>
<codeline lineno="56"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">MissingETComponentMap_v1::const_iterator<sp/>MissingETComponentMap_v1::find(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound" tooltip="Principal data object for Missing ET.">MissingET</ref>*<sp/>pMET)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="58"><highlight class="keyword"></highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pMET<sp/>==<sp/>m_lastMETObject<sp/>)<sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>const_iterator<sp/>fCont(this-&gt;begin());<sp/>std::advance&lt;const_iterator&gt;(fCont,m_lastContribIndex);<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fCont;<sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;f_findConst(pMET);<sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">MissingETComponentMap_v1::iterator<sp/>MissingETComponentMap_v1::find(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound" tooltip="Principal data object for Missing ET.">MissingET</ref>*<sp/>pMET)</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pMET<sp/>==<sp/>m_lastMETObject<sp/>)<sp/>{<sp/><ref refid="d9/d2f/classxAOD_1_1JetConstituentVector_1_1iterator" kindref="compound">iterator</ref><sp/>fCont(this-&gt;begin());<sp/>std::advance&lt;iterator&gt;(fCont,m_lastContribIndex);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fCont;<sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;f_find(pMET);<sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">MissingETComponentMap_v1::const_iterator<sp/>MissingETComponentMap_v1::find(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="71"><highlight class="keyword"></highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_lastMETObject<sp/>==<sp/>0<sp/>||<sp/>m_lastMETObject-&gt;name()<sp/>!=<sp/>name<sp/>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;f_findConst(name);<sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/>const_iterator<sp/>fCont(this-&gt;begin());<sp/>std::advance&lt;const_iterator&gt;(fCont,m_lastContribIndex);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fCont;<sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal">MissingETComponentMap_v1::iterator<sp/>MissingETComponentMap_v1::find(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_lastMETObject<sp/>==<sp/>0<sp/>||<sp/>m_lastMETObject-&gt;name()<sp/>!=<sp/>name<sp/>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;f_find(name);<sp/>}<sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><ref refid="d9/d2f/classxAOD_1_1JetConstituentVector_1_1iterator" kindref="compound">iterator</ref><sp/>fCont(this-&gt;begin());<sp/>std::advance&lt;iterator&gt;(fCont,m_lastContribIndex);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fCont;<sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal">MissingETComponentMap_v1::const_iterator<sp/>MissingETComponentMap_v1::find(<ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member" tooltip="Type for status word bit mask.">MissingETBase::Types::bitmask_t</ref><sp/>src)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="83"><highlight class="keyword"></highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_lastMETObject<sp/>==<sp/>0<sp/>||<sp/>m_lastMETObject-&gt;source()<sp/>!=<sp/>src<sp/>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;f_findConst(src);<sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/>const_iterator<sp/>fCont(this-&gt;begin());<sp/>std::advance&lt;const_iterator&gt;(fCont,m_lastContribIndex);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fCont;<sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">MissingETComponentMap_v1::iterator<sp/>MissingETComponentMap_v1::find(<ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member" tooltip="Type for status word bit mask.">MissingETBase::Types::bitmask_t</ref><sp/>src)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_lastMETObject<sp/>==<sp/>0<sp/>||<sp/>m_lastMETObject-&gt;source()<sp/>!=<sp/>src<sp/>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;f_find(src);<sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><ref refid="d9/d2f/classxAOD_1_1JetConstituentVector_1_1iterator" kindref="compound">iterator</ref><sp/>fCont(this-&gt;begin());<sp/>std::advance&lt;iterator&gt;(fCont,m_lastContribIndex);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fCont;<sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>MissingETComponentMap_v1::findIndex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound" tooltip="Principal data object for Missing ET.">MissingET</ref>*<sp/>pMET)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="95"><highlight class="keyword"></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_lastMETObject<sp/>!=<sp/>pMET<sp/>)<sp/>{<sp/>this-&gt;f_findConst(pMET);<sp/>}<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_lastContribIndex;<sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>MissingETComponentMap_v1::findIndex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="98"><highlight class="keyword"></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_lastMETObject<sp/>==<sp/>0<sp/>||<sp/>this-&gt;at(m_lastContribIndex)-&gt;metObject()-&gt;name()<sp/>!=<sp/>name<sp/>)<sp/>{<sp/>this-&gt;f_findConst(name);<sp/>}<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_lastContribIndex;<sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>MissingETComponentMap_v1::findIndex(<ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member" tooltip="Type for status word bit mask.">MissingETBase::Types::bitmask_t</ref><sp/>sw)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="101"><highlight class="keyword"></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_lastMETObject<sp/>==<sp/>0<sp/>||<sp/>this-&gt;at(m_lastContribIndex)-&gt;statusWord()<sp/>!=<sp/>sw<sp/>)<sp/>{<sp/>this-&gt;f_findConst(sw);<sp/>}<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_lastContribIndex;<sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="comment">//<sp/>Protected<sp/>finders<sp/>//</highlight></codeline>
<codeline lineno="106"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">MissingETComponentMap_v1::const_iterator<sp/>MissingETComponentMap_v1::f_findConst(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound" tooltip="Principal data object for Missing ET.">MissingET</ref>*<sp/>pMET)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="108"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>const_iterator<sp/>fCont(this-&gt;begin());</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>const_iterator<sp/>lCont(this-&gt;end());</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>fCont<sp/>!=<sp/>lCont<sp/>&amp;&amp;<sp/>(*fCont)-&gt;metObject()<sp/>!=<sp/>pMET<sp/>)<sp/>{<sp/>++fCont;<sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>this-&gt;f_setConstCache(fCont);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fCont;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal">MissingETComponentMap_v1::iterator<sp/>MissingETComponentMap_v1::f_find(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound" tooltip="Principal data object for Missing ET.">MissingET</ref>*<sp/>pMET)</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><ref refid="d9/d2f/classxAOD_1_1JetConstituentVector_1_1iterator" kindref="compound">iterator</ref><sp/>fCont(this-&gt;begin());</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><ref refid="d9/d2f/classxAOD_1_1JetConstituentVector_1_1iterator" kindref="compound">iterator</ref><sp/>lCont(this-&gt;end());</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>fCont<sp/>!=<sp/>lCont<sp/>&amp;&amp;<sp/>(*fCont)-&gt;metObject()<sp/>!=<sp/>pMET<sp/>)<sp/>{<sp/>++fCont;<sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>this-&gt;f_setCache(fCont);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fCont;</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal">MissingETComponentMap_v1::const_iterator<sp/>MissingETComponentMap_v1::f_findConst(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="126"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>const_iterator<sp/>fCont(this-&gt;begin());</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>const_iterator<sp/>lCont(this-&gt;end());</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fCont<sp/>!=<sp/>lCont<sp/>&amp;&amp;<sp/>(*fCont)-&gt;metObject()-&gt;name()<sp/>!=<sp/>name<sp/>)<sp/>{<sp/>++fCont;<sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>this-&gt;f_setConstCache(fCont);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fCont;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal">MissingETComponentMap_v1::iterator<sp/>MissingETComponentMap_v1::f_find(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><ref refid="d9/d2f/classxAOD_1_1JetConstituentVector_1_1iterator" kindref="compound">iterator</ref><sp/>fCont(this-&gt;begin());</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><ref refid="d9/d2f/classxAOD_1_1JetConstituentVector_1_1iterator" kindref="compound">iterator</ref><sp/>lCont(this-&gt;end());</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>fCont<sp/>!=<sp/>lCont<sp/>&amp;&amp;<sp/>(*fCont)-&gt;metObject()-&gt;name()<sp/>!=<sp/>name<sp/>)<sp/>{<sp/>++fCont;<sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>this-&gt;f_setCache(fCont);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fCont;</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal">MissingETComponentMap_v1::const_iterator<sp/>MissingETComponentMap_v1::f_findConst(<ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member" tooltip="Type for status word bit mask.">MissingETBase::Types::bitmask_t</ref><sp/>src)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="144"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>const_iterator<sp/>fCont(this-&gt;begin());</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>const_iterator<sp/>lCont(this-&gt;end());</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>fCont<sp/>!=<sp/>lCont<sp/>&amp;&amp;<sp/>(*fCont)-&gt;metObject()-&gt;source()<sp/>!=<sp/>src<sp/>)<sp/>{<sp/>++fCont;<sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>this-&gt;f_setConstCache(fCont);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fCont;</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal">MissingETComponentMap_v1::iterator<sp/>MissingETComponentMap_v1::f_find(<ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member" tooltip="Type for status word bit mask.">MissingETBase::Types::bitmask_t</ref><sp/>src)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><ref refid="d9/d2f/classxAOD_1_1JetConstituentVector_1_1iterator" kindref="compound">iterator</ref><sp/>fCont(this-&gt;begin());</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><ref refid="d9/d2f/classxAOD_1_1JetConstituentVector_1_1iterator" kindref="compound">iterator</ref><sp/>lCont(this-&gt;end());</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>fCont<sp/>!=<sp/>lCont<sp/>&amp;&amp;<sp/>(*fCont)-&gt;metObject()-&gt;source()<sp/>!=<sp/>src<sp/>)<sp/>{<sp/>++fCont;<sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>this-&gt;f_setCache(fCont);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fCont;</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingETComponentMap_v1::f_setConstCache(const_iterator<sp/>fCont)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="162"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>fCont<sp/>!=<sp/>this-&gt;end()<sp/>)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_lastMETObject<sp/><sp/><sp/><sp/>=<sp/>(*fCont)-&gt;metObject();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_lastContribIndex<sp/>=<sp/>(size_t)std::distance&lt;const_iterator&gt;(this-&gt;begin(),fCont);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/>m_lastMETObject<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound" tooltip="Principal data object for Missing ET.">MissingET</ref>*)0;<sp/>m_lastContribIndex<sp/>=<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>();<sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingETComponentMap_v1::f_setCache(<ref refid="d9/d2f/classxAOD_1_1JetConstituentVector_1_1iterator" kindref="compound">iterator</ref><sp/>fCont)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>fCont<sp/>!=<sp/>this-&gt;end()<sp/>)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_lastMETObject<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound" tooltip="Principal data object for Missing ET.">MissingET</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">((*fCont)-&gt;metObject());</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_lastContribIndex<sp/>=<sp/><sp/>std::distance&lt;iterator&gt;(this-&gt;begin(),fCont);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/>{<sp/>m_lastMETObject<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound" tooltip="Principal data object for Missing ET.">MissingET</ref>*)0;<sp/>m_lastContribIndex<sp/>=<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>();<sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="comment">//<sp/>Retrieve<sp/>MET<sp/>object<sp/>//</highlight></codeline>
<codeline lineno="184"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound" tooltip="Principal data object for Missing ET.">MissingET</ref>*<sp/>MissingETComponentMap_v1::retrieveMissingET(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="186"><highlight class="keyword"></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_lastMETObject<sp/>==<sp/>0<sp/>||<sp/>m_lastMETObject-&gt;name()<sp/>!=<sp/>name<sp/>)<sp/>{<sp/>this-&gt;f_findConst(name);<sp/>}<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_lastMETObject;<sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound" tooltip="Principal data object for Missing ET.">MissingET</ref>*<sp/>MissingETComponentMap_v1::retrieveMissingET(<ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member" tooltip="Type for status word bit mask.">MissingETBase::Types::bitmask_t</ref><sp/>src,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>excl)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="189"><highlight class="keyword"></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>excl<sp/>?<sp/>this-&gt;f_retrieveMissingETExcl(src)<sp/>:<sp/><sp/>this-&gt;f_retrieveMissingETIncl(src);<sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound" tooltip="Principal data object for Missing ET.">MissingET</ref>*<sp/>MissingETComponentMap_v1::retrieveMissingET(<ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member" tooltip="Type for status word bit mask.">MissingETBase::Types::bitmask_t</ref><sp/>src,<ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member" tooltip="Type for status word bit mask.">MissingETBase::Types::bitmask_t</ref><sp/>sw,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>excl)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="192"><highlight class="keyword"></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>excl<sp/>?<sp/>this-&gt;f_retrieveMissingETExcl(src,sw)<sp/>:<sp/>this-&gt;f_retrieveMissingETIncl(src,sw);<sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="comment">//<sp/>Internal<sp/>MET<sp/>object<sp/>retrieval<sp/>//</highlight></codeline>
<codeline lineno="197"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound" tooltip="Principal data object for Missing ET.">MissingET</ref>*<sp/>MissingETComponentMap_v1::f_retrieveMissingETExcl(<ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member" tooltip="Type for status word bit mask.">MissingETBase::Types::bitmask_t</ref><sp/>src)</highlight><highlight class="keyword"><sp/><sp/>const</highlight></codeline>
<codeline lineno="199"><highlight class="keyword"></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_lastMETObject<sp/>==<sp/>0<sp/>||<sp/>m_lastMETObject-&gt;source()<sp/>!=<sp/>src<sp/>)<sp/>{<sp/>this-&gt;f_findConst(src);<sp/>}<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_lastMETObject;<sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound" tooltip="Principal data object for Missing ET.">MissingET</ref>*<sp/>MissingETComponentMap_v1::f_retrieveMissingETExcl(<ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member" tooltip="Type for status word bit mask.">MissingETBase::Types::bitmask_t</ref><sp/>src,<ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member" tooltip="Type for status word bit mask.">MissingETBase::Types::bitmask_t</ref><sp/>sw)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="202"><highlight class="keyword"></highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_lastMETObject<sp/>==<sp/>0<sp/>||<sp/>(<sp/>m_lastMETObject-&gt;source()<sp/>!=<sp/>src<sp/>||<sp/>this-&gt;at(m_lastContribIndex)-&gt;statusWord()<sp/>!=<sp/>sw<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>const_iterator<sp/>fCont(this-&gt;begin());<sp/>const_iterator<sp/>lCont(this-&gt;end());</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>fCont<sp/>!=<sp/>lCont<sp/>&amp;&amp;<sp/>(<sp/>(*fCont)-&gt;metObject()-&gt;source()<sp/>!=<sp/>src<sp/>||<sp/>(*fCont)-&gt;statusWord()<sp/>!=<sp/>sw<sp/>)<sp/>)<sp/>{<sp/>++fCont;<sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;f_setConstCache(fCont);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_lastMETObject;<sp/></highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound" tooltip="Principal data object for Missing ET.">MissingET</ref>*<sp/>MissingETComponentMap_v1::f_retrieveMissingETIncl(<ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member" tooltip="Type for status word bit mask.">MissingETBase::Types::bitmask_t</ref><sp/>src)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="213"><highlight class="keyword"></highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_lastMETObject<sp/>==<sp/>0<sp/>||<sp/>!<ref refid="d3/dee/structMissingETBase_1_1Source_1ae8200253f0f51817d8c90e984fff7d1d" kindref="member" tooltip="Generic check for given pattern.">MissingETBase::Source::hasPattern</ref>(m_lastMETObject-&gt;source(),src)<sp/>)<sp/></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>const_iterator<sp/>fCont(this-&gt;begin());<sp/>const_iterator<sp/>lCont(this-&gt;end());</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>fCont<sp/>!=<sp/>lCont<sp/>&amp;&amp;<sp/>!<ref refid="d3/dee/structMissingETBase_1_1Source_1ae8200253f0f51817d8c90e984fff7d1d" kindref="member" tooltip="Generic check for given pattern.">MissingETBase::Source::hasPattern</ref>((*fCont)-&gt;metObject()-&gt;source(),src)<sp/>)<sp/>{<sp/>++fCont;<sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;f_setConstCache(fCont);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_lastMETObject;</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound" tooltip="Principal data object for Missing ET.">MissingET</ref>*<sp/>MissingETComponentMap_v1::f_retrieveMissingETIncl(<ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member" tooltip="Type for status word bit mask.">MissingETBase::Types::bitmask_t</ref><sp/>src,<ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member" tooltip="Type for status word bit mask.">MissingETBase::Types::bitmask_t</ref><sp/>sw)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="224"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_lastMETObject<sp/>==<sp/>0<sp/>||<sp/>(!<ref refid="d3/dee/structMissingETBase_1_1Source_1ae8200253f0f51817d8c90e984fff7d1d" kindref="member" tooltip="Generic check for given pattern.">MissingETBase::Source::hasPattern</ref>(m_lastMETObject-&gt;source(),src)<sp/>||<sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!MissingETBase::Status::Tags::hasPattern(this-&gt;at(m_lastContribIndex)-&gt;statusWord(),sw)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>const_iterator<sp/>fCont(this-&gt;begin());<sp/>const_iterator<sp/>lCont(this-&gt;end());</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>fCont!=<sp/>lCont<sp/>&amp;&amp;<sp/>(<sp/>!<ref refid="d3/dee/structMissingETBase_1_1Source_1ae8200253f0f51817d8c90e984fff7d1d" kindref="member" tooltip="Generic check for given pattern.">MissingETBase::Source::hasPattern</ref>((*fCont)-&gt;metObject()-&gt;source(),src)<sp/>||</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!MissingETBase::Status::Tags::hasPattern((*fCont)-&gt;statusWord(),sw)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>++fCont;<sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;f_setConstCache(fCont);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_lastMETObject;<sp/></highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="comment">//<sp/>Object<sp/>usage<sp/>management<sp/>//</highlight></codeline>
<codeline lineno="240"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETComponentMap_v1::checkUsage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><sp/><ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref>*<sp/>pPart,<ref refid="de/dd2/namespaceMissingETBase_1_1UsageHandler_1adc82230b57f6a7bcfbffe1e66c06130e" kindref="member" tooltip="Policies on usage checks.">MissingETBase::UsageHandler::Policy</ref><sp/>p)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="242"><highlight class="keyword"></highlight><highlight class="normal">{<sp/><ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1a4ed057deea2d9517006928914e605e8d" kindref="member" tooltip="Vector of object type.">MissingETBase::Types::object_vector_t</ref><sp/>objects;<sp/>objects.push_back(pPart);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;checkUsage(objects,p);<sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETComponentMap_v1::checkUsage(<ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1a4ed057deea2d9517006928914e605e8d" kindref="member" tooltip="Vector of object type.">MissingETBase::Types::object_vector_t</ref>&amp;<sp/>signals,<ref refid="de/dd2/namespaceMissingETBase_1_1UsageHandler_1adc82230b57f6a7bcfbffe1e66c06130e" kindref="member" tooltip="Policies on usage checks.">MissingETBase::UsageHandler::Policy</ref><sp/>p)</highlight><highlight class="keyword"><sp/>const<sp/></highlight></codeline>
<codeline lineno="245"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>retVal(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>p<sp/>)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="de/dd2/namespaceMissingETBase_1_1UsageHandler_1adc82230b57f6a7bcfbffe1e66c06130ea578ac2c907e0c34b50fbf6e7220dd9a5" kindref="member" tooltip="CaloCluster based only.">MissingETBase::UsageHandler::OnlyCluster</ref>:</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>f_extractSignal&lt;xAOD::Type::CaloCluster&gt;(signals)<sp/>)<sp/>{<sp/>retVal<sp/>=<sp/>this-&gt;f_checkObjectUsage(signals,m_clusterLinks);<sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="de/dd2/namespaceMissingETBase_1_1UsageHandler_1adc82230b57f6a7bcfbffe1e66c06130ea54f9180e3289c67d6c196acbd530b23d" kindref="member" tooltip="Track based only.">MissingETBase::UsageHandler::OnlyTrack</ref>:</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>f_extractSignal&lt;xAOD::Type::TrackParticle&gt;(signals)<sp/>)<sp/>{<sp/>retVal<sp/>=<sp/>this-&gt;f_checkObjectUsage(signals,m_trackLinks);<sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="de/dd2/namespaceMissingETBase_1_1UsageHandler_1adc82230b57f6a7bcfbffe1e66c06130eaef409ebca63dc0fd9a37c0741b10ece6" kindref="member" tooltip="Both cluster and track based.">MissingETBase::UsageHandler::TrackCluster</ref>:</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1a4ed057deea2d9517006928914e605e8d" kindref="member" tooltip="Vector of object type.">MissingETBase::Types::object_vector_t</ref><sp/>ins(signals.begin(),signals.end());</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nSig(0);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>f_extractSignal&lt;xAOD::Type::CaloCluster&gt;(signals)<sp/>)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>nSig<sp/>=<sp/>signals.size();<sp/>this-&gt;f_checkObjectUsage(signals,m_clusterLinks);<sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>f_extractSignal&lt;xAOD::Type::TrackParticle&gt;(ins)<sp/>)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>nSig<sp/>+=<sp/>ins.size();<sp/>this-&gt;f_checkObjectUsage(ins,m_trackLinks);<sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>signals.insert(signals.end(),ins.begin(),ins.end());</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>retVal<sp/>=<sp/>signals.size()<sp/>==<sp/>nSig;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="de/dd2/namespaceMissingETBase_1_1UsageHandler_1adc82230b57f6a7bcfbffe1e66c06130eaeb1607e7362104eae3082d4a54115369" kindref="member" tooltip="Physics object based.">MissingETBase::UsageHandler::PhysicsObject</ref>:</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>retVal<sp/>=<sp/>this-&gt;f_checkObjectUsage(signals,m_particleLinks);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>switch<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retVal;</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETComponentMap_v1::f_checkObjectUsage(<ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1a4ed057deea2d9517006928914e605e8d" kindref="member" tooltip="Vector of object type.">MissingETBase::Types::object_vector_t</ref>&amp;<sp/>signals,signal_vector_t&amp;<sp/>signalLinks)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="274"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>signals.empty()<sp/>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>new<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>signalLinks.empty()<sp/>)<sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>also<sp/>an<sp/>indication<sp/>that<sp/>there<sp/>is<sp/>no<sp/>overlap!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nSig(m_maxSignalSize);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d44/namespacexAOD_1af9180607c834ca3623ad4eb67d8bb273" kindref="member">IParticleContainer</ref>*<sp/>pCont<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="dd/d44/namespacexAOD_1af9180607c834ca3623ad4eb67d8bb273" kindref="member">IParticleContainer</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(signals.front()-&gt;container());</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(<sp/>pCont<sp/>==<sp/>0<sp/>)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{<sp/>printf(&quot;MissingETComponentMap::f_checkObjectUsage(...)<sp/>-<sp/>WARNING<sp/>-<sp/>cannot<sp/>cast<sp/>container<sp/>pointer<sp/>%p<sp/>to<sp/>IParticleContainer\n&quot;,(void*)signals.front()-&gt;container());<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nSig<sp/>=<sp/>pCont-&gt;size();</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1a1a4ec6396d234a4221c7502f482b8e42" kindref="member" tooltip="Type for links defined as index pairs.">indexedlink_t</ref><sp/>sw(<ref refid="d6/d1f/structMissingETBase_1_1Numerical_1af6fcb29fd4b5c174ebceade5101384a1" kindref="member" tooltip="Access invaalid link tag.">MissingETBase::Numerical::invalidLink</ref>().get&lt;0&gt;(),<ref refid="d6/d1f/structMissingETBase_1_1Numerical_1af6fcb29fd4b5c174ebceade5101384a1" kindref="member" tooltip="Access invaalid link tag.">MissingETBase::Numerical::invalidLink</ref>().get&lt;1&gt;());</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>signalLinks.resize(nSig,sw);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>loop<sp/>on<sp/>signals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>oldSize(signals.size());</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>MissingETBase::Types::object_vector_t::iterator<sp/>fSig(signals.begin());</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>fSig<sp/>!=<sp/>signals.end()<sp/>)<sp/></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>fIdx((*fSig)-&gt;index());<sp/></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>fIdx<sp/>&gt;=<sp/>signalLinks.size()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>invalid,<sp/>something<sp/>probably<sp/>went<sp/>wrong<sp/>in<sp/>reconstruction,<sp/>so<sp/>complain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>should<sp/>raise<sp/>an<sp/>out-of-range<sp/>exception</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;MissingETComponentMap::f_checkObjectUsage(...)<sp/>-<sp/>ERROR<sp/>-<sp/>searching<sp/>for<sp/>a<sp/>signal<sp/>with<sp/>index<sp/>(%lu)<sp/>beyond<sp/>signal<sp/>container<sp/>range<sp/>(%lu).&quot;</highlight><highlight class="normal">,<sp/>fIdx,<sp/>signalLinks.size());</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;MissingETComponentMap::f_checkObjectUsage(...)<sp/>-<sp/>ERROR<sp/>-<sp/>this<sp/>may<sp/>indicate<sp/>an<sp/>inconsistency<sp/>in<sp/>the<sp/>signal<sp/>containers.&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>signal<sp/>already<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>signalLinks.at(fIdx)<sp/>!=<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1af6fcb29fd4b5c174ebceade5101384a1" kindref="member" tooltip="Access invaalid link tag.">MissingETBase::Numerical::invalidLink</ref>()<sp/>)<sp/>{<sp/>fSig<sp/>=<sp/>signals.erase(fSig);<sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>signal<sp/>not<sp/>yet<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/>++fSig;<sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>loop<sp/>on<sp/>signals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>oldSize<sp/>!=<sp/>signals.size();<sp/></highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETComponentMap_v1::f_checkObjectUsage(<ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1a4ed057deea2d9517006928914e605e8d" kindref="member" tooltip="Vector of object type.">MissingETBase::Types::object_vector_t</ref>&amp;<sp/>objects,particle_map_t&amp;<sp/>physicsLinks)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="310"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>objects.empty()<sp/>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>oldSize(objects.size());</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>MissingETBase::Types::object_vector_t::iterator<sp/>fObj(objects.begin());</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>fObj<sp/>!=<sp/>objects.end()<sp/>)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>physicsLinks.find(*fObj)<sp/>!=<sp/>physicsLinks.end()<sp/>)<sp/>{<sp/>fObj<sp/>=<sp/>objects.erase(fObj);<sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/>++fObj;<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>objects.size()<sp/>!=<sp/>oldSize;</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="comment">//<sp/>Add<sp/>objects<sp/>//</highlight></codeline>
<codeline lineno="323"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETComponentMap_v1::addObjects(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound" tooltip="Principal data object for Missing ET.">MissingET</ref>*<sp/>pMET,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref>*<sp/>pPart,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1a4ed057deea2d9517006928914e605e8d" kindref="member" tooltip="Vector of object type.">MissingETBase::Types::object_vector_t</ref>&amp;<sp/>signalList,<ref refid="de/dd2/namespaceMissingETBase_1_1UsageHandler_1adc82230b57f6a7bcfbffe1e66c06130e" kindref="member" tooltip="Policies on usage checks.">MissingETBase::UsageHandler::Policy</ref><sp/>p)</highlight></codeline>
<codeline lineno="325"><highlight class="normal">{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flag(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>p<sp/>)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="de/dd2/namespaceMissingETBase_1_1UsageHandler_1adc82230b57f6a7bcfbffe1e66c06130ea578ac2c907e0c34b50fbf6e7220dd9a5" kindref="member" tooltip="CaloCluster based only.">MissingETBase::UsageHandler::OnlyCluster</ref>:</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>flag<sp/>=<sp/>this-&gt;setClusters(pMET,pPart,signalList);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="de/dd2/namespaceMissingETBase_1_1UsageHandler_1adc82230b57f6a7bcfbffe1e66c06130ea54f9180e3289c67d6c196acbd530b23d" kindref="member" tooltip="Track based only.">MissingETBase::UsageHandler::OnlyTrack</ref>:</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>flag<sp/>=<sp/>this-&gt;setTracks(pMET,pPart,signalList);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="de/dd2/namespaceMissingETBase_1_1UsageHandler_1adc82230b57f6a7bcfbffe1e66c06130eaef409ebca63dc0fd9a37c0741b10ece6" kindref="member" tooltip="Both cluster and track based.">MissingETBase::UsageHandler::TrackCluster</ref>:</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cFlg(this-&gt;setClusters(pMET,pPart,signalList));<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tFlg(this-&gt;setTracks(pMET,pPart,signalList));<sp/>flag<sp/>=<sp/>cFlg<sp/>||<sp/>tFlg;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}<sp/></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="de/dd2/namespaceMissingETBase_1_1UsageHandler_1adc82230b57f6a7bcfbffe1e66c06130eaeb1607e7362104eae3082d4a54115369" kindref="member" tooltip="Physics object based.">MissingETBase::UsageHandler::PhysicsObject</ref>:</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>flag<sp/>=<sp/>this-&gt;setObjects(pMET,pPart,signalList);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flag;</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETComponentMap_v1::setClusters(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound" tooltip="Principal data object for Missing ET.">MissingET</ref>*<sp/>pMET,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref>*<sp/>pPart,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1a4ed057deea2d9517006928914e605e8d" kindref="member" tooltip="Vector of object type.">MissingETBase::Types::object_vector_t</ref>&amp;<sp/>signalList)</highlight></codeline>
<codeline lineno="344"><highlight class="normal">{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>all<sp/>clusters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>input:<sp/>MissingET<sp/>object<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cIdx(this-&gt;findIndex(pMET));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>cIdx<sp/>==<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>input:<sp/>contributing<sp/>particle<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pIdx(this-&gt;at(cIdx)-&gt;findIndex(pPart));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pIdx<sp/>==<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/><sp/>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1a1a4ec6396d234a4221c7502f482b8e42" kindref="member" tooltip="Type for links defined as index pairs.">indexedlink_t</ref><sp/>ld(cIdx,pIdx);<sp/></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>cache<sp/>is<sp/>not<sp/>cleared</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>firstCluster<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>MissingETBase::Types::object_vector_t::const_iterator<sp/>fSig(signalList.begin());</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>MissingETBase::Types::object_vector_t::const_iterator<sp/>lSig(signalList.end());</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>fSig<sp/>!=<sp/>lSig;<sp/>++fSig<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((*fSig)-&gt;type()==<ref refid="dd/dc8/namespacexAOD_1_1Type_1a96c48d2d85466ace623036af49f84434a91e4294b187515e405e4ca9930e246a0" kindref="member" tooltip="The object is a calorimeter cluster.">xAOD::Type::CaloCluster</ref>)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(firstCluster)<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>firstCluster<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_clusterLinks.empty()<sp/>)<sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nClus(m_maxClusterSize);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d44/namespacexAOD_1af9180607c834ca3623ad4eb67d8bb273" kindref="member">IParticleContainer</ref>*<sp/>pCont(static_cast&lt;const<sp/>IParticleContainer*&gt;((*fSig)-&gt;container()));</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(<sp/>pCont<sp/>==<sp/>0<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>{<sp/>printf(&quot;MissingETComponentMap::setClusters(...)<sp/>-<sp/>WARNING<sp/><sp/><sp/>-<sp/>cannot<sp/>access<sp/>cluster<sp/>container<sp/>(invalid<sp/>NULL<sp/>pointer),<sp/>use<sp/>%i<sp/>words\n&quot;,(int)nClus);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nClus<sp/>=<sp/>pCont-&gt;size();</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_clusterLinks.resize(nClus,<ref refid="d6/d1f/structMissingETBase_1_1Numerical_1af6fcb29fd4b5c174ebceade5101384a1" kindref="member" tooltip="Access invaalid link tag.">MissingETBase::Numerical::invalidLink</ref>());</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>empty<sp/>cluster<sp/>link<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//first<sp/>cluster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>clusters<sp/>refer<sp/>to<sp/>the<sp/>same<sp/>MET<sp/>contribution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_clusterLinks[(*fSig)-&gt;index()]<sp/>=<sp/>ld;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>extract<sp/>CaloClusters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>loop<sp/>over<sp/>signal<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!firstCluster;<sp/></highlight><highlight class="comment">//<sp/>true<sp/>if<sp/>we<sp/>processed<sp/>any<sp/>clusters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal">}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETComponentMap_v1::setTracks(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound" tooltip="Principal data object for Missing ET.">MissingET</ref>*<sp/>pMET,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref>*<sp/>pPart,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1a4ed057deea2d9517006928914e605e8d" kindref="member" tooltip="Vector of object type.">MissingETBase::Types::object_vector_t</ref>&amp;<sp/>signalList)</highlight></codeline>
<codeline lineno="378"><highlight class="normal">{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>all<sp/>clusters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>input:<sp/>MissingET<sp/>object<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cIdx(this-&gt;findIndex(pMET));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>cIdx<sp/>==<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>input:<sp/>contributing<sp/>particle<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pIdx(this-&gt;at(cIdx)-&gt;findIndex(pPart));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pIdx<sp/>==<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/><sp/>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1a1a4ec6396d234a4221c7502f482b8e42" kindref="member" tooltip="Type for links defined as index pairs.">indexedlink_t</ref><sp/>ld(cIdx,pIdx);<sp/></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>cache<sp/>is<sp/>not<sp/>cleared</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>firstTrack<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nTrack(m_maxTrackSize);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>MissingETBase::Types::object_vector_t::const_iterator<sp/>fSig(signalList.begin());</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>MissingETBase::Types::object_vector_t::const_iterator<sp/>lSig(signalList.end());</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>fSig<sp/>!=<sp/>lSig;<sp/>++fSig<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((*fSig)-&gt;type()==<ref refid="dd/dc8/namespacexAOD_1_1Type_1a96c48d2d85466ace623036af49f84434ab58838237ad48f68b7dad0298ab4db1b" kindref="member" tooltip="The object is a charged track particle.">xAOD::Type::TrackParticle</ref>)<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(firstTrack)<sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>firstTrack<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_trackLinks.empty()<sp/>)<sp/>{<sp/></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d44/namespacexAOD_1af9180607c834ca3623ad4eb67d8bb273" kindref="member">IParticleContainer</ref>*<sp/>pCont(static_cast&lt;const<sp/>IParticleContainer*&gt;((*fSig)-&gt;container()));</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(<sp/>pCont<sp/>==<sp/>0<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>{<sp/>printf(&quot;MissingETComponentMap::setTracks(...)<sp/>-<sp/>WARNING<sp/><sp/><sp/>-<sp/>cannot<sp/>access<sp/>track<sp/>container<sp/>(invalid<sp/>NULL<sp/>pointer),<sp/>use<sp/>%i<sp/>words\n&quot;,(int)nTrack);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nTrack<sp/>=<sp/>pCont-&gt;size();</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_trackLinks.resize(nTrack,<ref refid="d6/d1f/structMissingETBase_1_1Numerical_1af6fcb29fd4b5c174ebceade5101384a1" kindref="member" tooltip="Access invaalid link tag.">MissingETBase::Numerical::invalidLink</ref>());</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>empty<sp/>track<sp/>link<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>first<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>tracks<sp/>refer<sp/>to<sp/>the<sp/>same<sp/>MET<sp/>contribution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_trackLinks[(*fSig)-&gt;index()]<sp/>=<sp/>ld;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>extract<sp/>TrackParticles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>loop<sp/>over<sp/>signal<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!firstTrack;<sp/></highlight><highlight class="comment">//<sp/>true<sp/>if<sp/>we<sp/>processed<sp/>any<sp/>clusters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETComponentMap_v1::setObjects(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound" tooltip="Principal data object for Missing ET.">MissingET</ref>*<sp/>pMET,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref>*<sp/>pPart,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1a4ed057deea2d9517006928914e605e8d" kindref="member" tooltip="Vector of object type.">MissingETBase::Types::object_vector_t</ref>&amp;<sp/>objects)</highlight></codeline>
<codeline lineno="412"><highlight class="normal">{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>input:<sp/>MissingET<sp/>object<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cIdx(this-&gt;findIndex(pMET));<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>cIdx<sp/>==<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>loop<sp/>input<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>oldSize(m_particleLinks.size());</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>MissingETBase::Types::object_vector_t::const_iterator<sp/>fObj(objects.begin());</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>MissingETBase::Types::object_vector_t::const_iterator<sp/>lObj(objects.end());</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>fObj<sp/>!=<sp/>lObj;<sp/>++fObj<sp/>)<sp/>{<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pIdx(this-&gt;at(cIdx)-&gt;findIndex(pPart));<sp/>m_particleLinks[*fObj]<sp/>=<sp/><ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1a1a4ec6396d234a4221c7502f482b8e42" kindref="member" tooltip="Type for links defined as index pairs.">indexedlink_t</ref>(cIdx,pIdx);<sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>oldSize<sp/>&lt;<sp/>m_particleLinks.size();</highlight></codeline>
<codeline lineno="422"><highlight class="normal">}<sp/></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="comment">//<sp/>Cache<sp/>handlers<sp/>//</highlight></codeline>
<codeline lineno="427"><highlight class="comment"></highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingETComponentMap_v1::f_setupLookupCache(signal_vector_t&amp;<sp/>signalLinks,</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>reserve)</highlight></codeline>
<codeline lineno="429"><highlight class="normal">{<sp/>signalLinks.clear();<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>reserve<sp/>&gt;<sp/>0<sp/>)<sp/>{<sp/>signalLinks.reserve(reserve);<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingETComponentMap_v1::f_clearLookupCache()</highlight></codeline>
<codeline lineno="432"><highlight class="normal">{<sp/>m_clusterLinks.clear();<sp/>m_trackLinks.clear();<sp/>m_particleLinks.clear();<sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingETComponentMap_v1::f_fillLookupCache()</highlight></codeline>
<codeline lineno="435"><highlight class="normal">{</highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>MissingETComponentMap_v1::getComponentIndex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref>*<sp/>pPart)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f_getIndex&lt;0&gt;(pPart);<sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>MissingETComponentMap_v1::getObjectIndex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">IParticle</ref>*<sp/>pPart)</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f_getIndex&lt;1&gt;(pPart);<sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>check<sp/>on<sp/>cluster<sp/>signal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>const<sp/>CaloCluster*<sp/>pClus(dynamic_cast&lt;const<sp/>CaloCluster*&gt;(pPart));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>if<sp/>(<sp/>pClus<sp/>!=<sp/>0<sp/>)<sp/>{<sp/>return<sp/><sp/>pClus-&gt;index()<sp/>&lt;<sp/>m_clusterLinks.size()<sp/>?<sp/>m_clusterLinks.at(pClus-&gt;index()).get&lt;1&gt;()<sp/>:<sp/>MissingETBase::Numerical::invalidIndex();<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>check<sp/>on<sp/>track<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>const<sp/>TrackParticle*<sp/>pTrk(dynamic_cast&lt;const<sp/>TrackParticle*&gt;(pPart));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>if<sp/>(<sp/>pTrk<sp/>!=<sp/>0<sp/>)<sp/>{<sp/>return<sp/>pTrk-&gt;index()<sp/>&lt;<sp/>m_trackLinks.size()<sp/>?<sp/>m_trackLinks.at(pTrk-&gt;index()).get&lt;1&gt;()<sp/>:<sp/>MissingETBase::Numerical::invalidIndex();<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>check<sp/>on<sp/>physics<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>particle_map_t::const_iterator<sp/>fPart(m_particleLinks.find(pPart));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>return<sp/>fPart<sp/>!=<sp/>m_particleLinks.end()<sp/>?<sp/>(fPart-&gt;second).get&lt;1&gt;()<sp/>:<sp/>MissingETBase::Numerical::invalidIndex();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="comment">//bool<sp/>MissingETComponent_v1::addLink(const<sp/>IParticle*<sp/>pPart,MissingETComponent*<sp/>pContrib,MissingETBase::Types::bitmask_t<sp/>status)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>cluster<sp/>signal<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>CaloCluster*<sp/>pClus<sp/>=<sp/>dynamic_cast&lt;const<sp/>CaloCluster*&gt;(pPart);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>if<sp/>(<sp/>pClus<sp/>!=<sp/>0<sp/>)<sp/>return<sp/>this-&gt;addCluster(pClus,pContrib,status);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>track<sp/>signal<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>TrackParticle*<sp/>pTrk<sp/>=<sp/>dynamic_cast&lt;const<sp/>TrackParticle*&gt;(pPart);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>if<sp/>(<sp/>pTrk<sp/>!=<sp/>0<sp/>)<sp/>return<sp/>this-&gt;addTrack(pTrk,pContrib,status);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>link<sp/>key<sp/>and<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>particle_key_t<sp/>key(pPart,status);<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>contrib_idx_t<sp/>idx<sp/>=<sp/>pContrib-&gt;index();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>to<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>particle_map_t::iterator<sp/>fLnk(m_partMETLookup.find(key));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if<sp/>(<sp/>fLnk<sp/>==<sp/>m_partMETLookup.end()<sp/>)<sp/>{<sp/>m_partMETLookup.insert(particle_map_t::value_type(key,idx));<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>else<sp/>{<sp/>fLnk-&gt;second<sp/>=<sp/>idx;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>return<sp/>true;<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="comment">//}<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="comment">//bool<sp/>MissingETComponent_v1::addCluster(const<sp/>CaloCluster*<sp/>pClus,MissingETComponent*<sp/>pContrib,MissingETBase::Types::bitmask_t<sp/>/*<sp/>status<sp/>*/)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if<sp/>(<sp/>m_clusterIndices.empty()<sp/>)<sp/>{<sp/>m_clusterIndices.resize(pClus-&gt;container()-&gt;size(),size_t(-1));<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if<sp/>(<sp/>!this-&gt;checkCluster(pClus)<sp/>)<sp/>{<sp/>m_clusterIndices[pClus-&gt;index()]<sp/>=<sp/>pContrib-&gt;index();<sp/>return<sp/>true;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>else<sp/>{<sp/>return<sp/>false;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="comment">//bool<sp/>MissingETComponent_v1::addTrack(const<sp/>TrackParticle*<sp/>pTrack,MissingETComponent*<sp/>pContrib,MissingETBase::Types::bitmask_ty<sp/>/*<sp/>status<sp/>*/<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>(<sp/>m_trackIndices.empty()<sp/>)<sp/>{<sp/>m_trackIndices.resize(pTrack-&gt;container()-&gt;size(),size_t(-1));<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if<sp/>(<sp/>!this-&gt;checkTrack(pTrack)<sp/>)<sp/>{<sp/>m_trackIndices[pTrack-&gt;index()]<sp/>=<sp/>pContrib-&gt;index();<sp/>return<sp/>true;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>else<sp/>{<sp/>return<sp/>false;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="comment">//bool<sp/>MissingETComponent_v1::checkCluster(const<sp/>CaloCluster*<sp/>pClus)<sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="comment">//{<sp/>return<sp/>pClus-&gt;index()<sp/>&lt;<sp/>m_clusterIndices.size()<sp/>&amp;&amp;<sp/>m_clusterIndices.at(pClus-&gt;index())<sp/>!=<sp/>size_t(-1);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="comment">//bool<sp/>MissingETComponenty_v1::checkTrack(const<sp/>TrackParticle*<sp/>pTrk)<sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="comment">//{<sp/>return<sp/>pTrk-&gt;index()<sp/>&lt;<sp/>m_trackIndices.size()<sp/>&amp;&amp;<sp/>m_trackIndices.at(pTrk-&gt;index())<sp/>!=<sp/>size_t(-1);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETComponentMap_v1.cxx"/>
  </compounddef>
</doxygen>
