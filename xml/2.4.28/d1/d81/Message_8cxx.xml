<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d1/d81/Message_8cxx" kind="file">
    <compoundname>Message.cxx</compoundname>
    <includes refid="d6/d56/RootCoreUtils_2RootCoreUtils_2Message_8h" local="no">RootCoreUtils/Message.h</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">cstring</includes>
    <includes local="no">iostream</includes>
    <includes local="no">sstream</includes>
    <includes refid="d3/dac/Assert_8h" local="no">RootCoreUtils/Assert.h</includes>
    <includes refid="d3/dbc/ExceptionMsg_8h" local="no">RootCoreUtils/ExceptionMsg.h</includes>
    <includes refid="d2/d5f/PrintMsg_8h" local="no">RootCoreUtils/PrintMsg.h</includes>
    <incdepgraph>
      <node id="263666">
        <label>string</label>
      </node>
      <node id="263664">
        <label>RootCoreUtils/ExceptionMsg.h</label>
        <link refid="d3/dbc/ExceptionMsg_8h_source"/>
        <childnode refid="263657" relation="include">
        </childnode>
        <childnode refid="263665" relation="include">
        </childnode>
        <childnode refid="263666" relation="include">
        </childnode>
      </node>
      <node id="263665">
        <label>exception</label>
      </node>
      <node id="263656">
        <label>RootCoreUtils/Message.h</label>
        <link refid="d6/d56/RootCoreUtils_2RootCoreUtils_2Message_8h_source"/>
        <childnode refid="263657" relation="include">
        </childnode>
        <childnode refid="263658" relation="include">
        </childnode>
      </node>
      <node id="263655">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/RootCoreUtils/Root/Message.cxx</label>
        <link refid="Message.cxx"/>
        <childnode refid="263656" relation="include">
        </childnode>
        <childnode refid="263659" relation="include">
        </childnode>
        <childnode refid="263660" relation="include">
        </childnode>
        <childnode refid="263661" relation="include">
        </childnode>
        <childnode refid="263662" relation="include">
        </childnode>
        <childnode refid="263663" relation="include">
        </childnode>
        <childnode refid="263664" relation="include">
        </childnode>
        <childnode refid="263667" relation="include">
        </childnode>
      </node>
      <node id="263662">
        <label>sstream</label>
      </node>
      <node id="263657">
        <label>RootCoreUtils/Global.h</label>
        <link refid="d6/d7f/RootCoreUtils_2RootCoreUtils_2Global_8h_source"/>
      </node>
      <node id="263658">
        <label>RootCoreUtils/MessageType.h</label>
        <link refid="dd/d02/MessageType_8h_source"/>
        <childnode refid="263657" relation="include">
        </childnode>
      </node>
      <node id="263659">
        <label>cstdlib</label>
      </node>
      <node id="263661">
        <label>iostream</label>
      </node>
      <node id="263667">
        <label>RootCoreUtils/PrintMsg.h</label>
        <link refid="d2/d5f/PrintMsg_8h_source"/>
        <childnode refid="263657" relation="include">
        </childnode>
        <childnode refid="263666" relation="include">
        </childnode>
        <childnode refid="263658" relation="include">
        </childnode>
      </node>
      <node id="263663">
        <label>RootCoreUtils/Assert.h</label>
        <link refid="d3/dac/Assert_8h_source"/>
        <childnode refid="263657" relation="include">
        </childnode>
      </node>
      <node id="263660">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <innernamespace refid="d9/d83/namespaceRCU">RCU</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>Nils<sp/>Krumnack<sp/>2013.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>(See<sp/>accompanying<sp/>file<sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Please<sp/>feel<sp/>free<sp/>to<sp/>contact<sp/>me<sp/>(krumnack@iastate.edu)<sp/>for<sp/>bug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>reports,<sp/>feature<sp/>suggestions,<sp/>praise<sp/>and<sp/>complaints.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;RootCoreUtils/Message.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;RootCoreUtils/Assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;RootCoreUtils/ExceptionMsg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;RootCoreUtils/PrintMsg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>method<sp/>implementations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">RCU</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><ref refid="db/d42/structRCU_1_1Message_1a4fc4f717b634e66070366cb7722d7761" kindref="member">Message ::</ref></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><ref refid="db/d42/structRCU_1_1Message_1a4fc4f717b634e66070366cb7722d7761" kindref="member">  Message</ref><sp/>()</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>package<sp/>(0),<sp/>file<sp/>(0),<sp/>line<sp/>(0),<sp/>type<sp/>(<ref refid="d9/d83/namespaceRCU_1aead8fc78ddc262a6e40e8eb6bf71955ea1d604967fcc3a6e26acb00777c572d1e" kindref="member" tooltip="description: unspecified message type">MESSAGE_UNSPECIFIED</ref>),</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/>(0)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Message<sp/>::</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>send<sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="41"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d83/namespaceRCU_1aead8fc78ddc262a6e40e8eb6bf71955e" kindref="member">MessageType</ref><sp/>mytype<sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mytype<sp/>&lt;<sp/>0<sp/>||<sp/>mytype<sp/>&gt;<sp/>MESSAGE_UNSPECIFIED)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mytype<sp/>=<sp/>MESSAGE_UNSPECIFIED;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>str;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(package<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">package<sp/></highlight><highlight class="normal">&lt;&lt;<sp/>&quot;:&quot;;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp<sp/>(file,<sp/></highlight><highlight class="stringliteral">&quot;../&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>str<sp/>&lt;&lt;<sp/>(file+3)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>str<sp/>&lt;&lt;<sp/>file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>&lt;&lt;<sp/>line<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mytype<sp/>!=<sp/>MESSAGE_UNSPECIFIED)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*type_names[MESSAGE_UNSPECIFIED]<sp/>=</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;message&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;warning&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;error&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;exception&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;abort&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>&lt;&lt;<sp/>type_names[mytype]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!str.str().empty())</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(message<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>&lt;&lt;<sp/>message;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(null)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*envname<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mytype<sp/>==<sp/>MESSAGE_ABORT)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>envname<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ROOTCOREUTILS_ABORT&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mytype<sp/>==<sp/>MESSAGE_EXCEPTION)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>envname<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ROOTCOREUTILS_EXCEPTION&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(envname)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*abort_type<sp/>=<sp/>getenv<sp/>(envname);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/d83/namespaceRCU_1aead8fc78ddc262a6e40e8eb6bf71955e" kindref="member">MessageType</ref><sp/>def_type<sp/>=<sp/><ref refid="d9/d83/namespaceRCU_1aead8fc78ddc262a6e40e8eb6bf71955ea3dbce95f8f4d8689e5df8f96f551a200" kindref="member" tooltip="description: send out an exception">MESSAGE_EXCEPTION</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(abort_type<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>mytype<sp/>=<sp/>def_type;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(abort_type,<sp/></highlight><highlight class="stringliteral">&quot;abort&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>mytype<sp/>=<sp/><ref refid="d9/d83/namespaceRCU_1aead8fc78ddc262a6e40e8eb6bf71955ea018bd98bb2d91f01ea292ea19a1bad85" kindref="member" tooltip="description: print and abort">MESSAGE_ABORT</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(abort_type,<sp/></highlight><highlight class="stringliteral">&quot;exception&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>mytype<sp/>=<sp/><ref refid="d9/d83/namespaceRCU_1aead8fc78ddc262a6e40e8eb6bf71955ea3dbce95f8f4d8689e5df8f96f551a200" kindref="member" tooltip="description: send out an exception">MESSAGE_EXCEPTION</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>mytype<sp/>=<sp/>def_type;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>RCU_WARN_MSG<sp/>(std::string<sp/>(</highlight><highlight class="stringliteral">&quot;unknown<sp/>value<sp/>for<sp/>ROOTCOREUTILS_ABORT<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>abort_type);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>str.str()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mytype<sp/>==<sp/>MESSAGE_EXCEPTION)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>ExceptionMsg<sp/>(file,<sp/>line,<sp/>str.str());</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mytype<sp/>==<sp/>MESSAGE_ABORT)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::abort<sp/>();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/RootCoreUtils/Root/Message.cxx"/>
  </compounddef>
</doxygen>
