<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d1/d0c/AuxStoreAccessorMacros_8h" kind="file">
    <compoundname>AuxStoreAccessorMacros.h</compoundname>
    <includedby refid="df/da8/TrackParticleClusterAssociation__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODAssociations/Root/TrackParticleClusterAssociation_v1.cxx</includedby>
    <includedby refid="d3/df0/BTagging__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTagging/Root/BTagging_v1.cxx</includedby>
    <includedby refid="d8/dbe/BTagVertex__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODBTagging/Root/BTagVertex_v1.cxx</includedby>
    <includedby refid="de/d8b/CaloCluster__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCaloEvent/Root/CaloCluster_v1.cxx</includedby>
    <includedby refid="d4/d63/CutBookkeeper__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCutFlow/Root/CutBookkeeper_v1.cxx</includedby>
    <includedby refid="db/d1b/Egamma__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Egamma_v1.cxx</includedby>
    <includedby refid="db/d59/Electron__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Electron_v1.cxx</includedby>
    <includedby refid="d2/d92/Photon__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEgamma/Root/Photon_v1.cxx</includedby>
    <includedby refid="de/d0d/EventInfo__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODEventInfo/Root/EventInfo_v1.cxx</includedby>
    <includedby refid="db/ddf/AFPData__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/Root/AFPData_v1.cxx</includedby>
    <includedby refid="dc/d14/AFPSiHit__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/Root/AFPSiHit_v1.cxx</includedby>
    <includedby refid="df/d1e/AFPTrack__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/Root/AFPTrack_v1.cxx</includedby>
    <includedby refid="d0/d1b/ALFAData__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/Root/ALFAData_v1.cxx</includedby>
    <includedby refid="d4/d21/ForwardEventInfo__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/Root/ForwardEventInfo_v1.cxx</includedby>
    <includedby refid="d1/d1f/MBTSModule__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/Root/MBTSModule_v1.cxx</includedby>
    <includedby refid="de/df9/ZdcModule__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/Root/ZdcModule_v1.cxx</includedby>
    <includedby refid="d4/dd2/HIEventShape__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODHIEvent/Root/HIEventShape_v1.cxx</includedby>
    <includedby refid="d1/db6/HIEventShape__v2_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODHIEvent/Root/HIEventShape_v2.cxx</includedby>
    <includedby refid="d7/d1d/BCMRawData__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODLuminosity/Root/BCMRawData_v1.cxx</includedby>
    <includedby refid="d5/d51/LumiBlockRange__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODLuminosity/Root/LumiBlockRange_v1.cxx</includedby>
    <includedby refid="d8/d1d/Muon__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/Muon_v1.cxx</includedby>
    <includedby refid="d2/da6/MuonSegment__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/MuonSegment_v1.cxx</includedby>
    <includedby refid="da/d49/SlowMuon__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMuon/Root/SlowMuon_v1.cxx</includedby>
    <includedby refid="d7/dd7/CompositeParticle__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODParticleEvent/Root/CompositeParticle_v1.cxx</includedby>
    <includedby refid="d5/d04/Particle__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODParticleEvent/Root/Particle_v1.cxx</includedby>
    <includedby refid="d8/d8d/PFO__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODPFlow/Root/PFO_v1.cxx</includedby>
    <includedby refid="df/da4/DiTauJet__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTau/Root/DiTauJet_v1.cxx</includedby>
    <includedby refid="d3/d9d/TauJet__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTau/Root/TauJet_v1.cxx</includedby>
    <includedby refid="d6/d81/TauJet__v2_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTau/Root/TauJet_v2.cxx</includedby>
    <includedby refid="d5/dad/NeutralParticle__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/NeutralParticle_v1.cxx</includedby>
    <includedby refid="d4/dbb/SCTRawHitValidation__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/SCTRawHitValidation_v1.cxx</includedby>
    <includedby refid="d9/de8/TrackMeasurementValidation__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/TrackMeasurementValidation_v1.cxx</includedby>
    <includedby refid="df/d88/TrackParticle__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/TrackParticle_v1.cxx</includedby>
    <includedby refid="d8/dc9/TrackParticlexAODHelpers_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/TrackParticlexAODHelpers.cxx</includedby>
    <includedby refid="da/ddc/TrackStateValidation__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/TrackStateValidation_v1.cxx</includedby>
    <includedby refid="d3/dab/Vertex__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTracking/Root/Vertex_v1.cxx</includedby>
    <includedby refid="dc/d74/TrigBphys__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigBphys/Root/TrigBphys_v1.cxx</includedby>
    <includedby refid="de/dc8/TrigCaloCluster__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigCalo/Root/TrigCaloCluster_v1.cxx</includedby>
    <includedby refid="d6/daf/TrigEMCluster__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigCalo/Root/TrigEMCluster_v1.cxx</includedby>
    <includedby refid="d5/d8b/TrigElectron__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigEgamma/Root/TrigElectron_v1.cxx</includedby>
    <includedby refid="d0/d75/TrigPhoton__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigEgamma/Root/TrigPhoton_v1.cxx</includedby>
    <includedby refid="d2/d70/BunchConf__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/Root/BunchConf_v1.cxx</includedby>
    <includedby refid="dd/dfd/EmTauRoI__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/Root/EmTauRoI_v1.cxx</includedby>
    <includedby refid="d1/db3/EmTauRoI__v2_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/Root/EmTauRoI_v2.cxx</includedby>
    <includedby refid="df/df0/EnergySumRoI__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/Root/EnergySumRoI_v1.cxx</includedby>
    <includedby refid="d6/d7a/JetEtRoI__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/Root/JetEtRoI_v1.cxx</includedby>
    <includedby refid="d4/daa/JetRoI__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/Root/JetRoI_v1.cxx</includedby>
    <includedby refid="d6/dd9/JetRoI__v2_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/Root/JetRoI_v2.cxx</includedby>
    <includedby refid="d0/d2b/MuonRoI__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/Root/MuonRoI_v1.cxx</includedby>
    <includedby refid="d6/ddf/RoiDescriptorStore__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/Root/RoiDescriptorStore_v1.cxx</includedby>
    <includedby refid="d2/d23/TrigComposite__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/Root/TrigComposite_v1.cxx</includedby>
    <includedby refid="d9/dac/TrigDecision__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/Root/TrigDecision_v1.cxx</includedby>
    <includedby refid="d6/df5/TriggerMenu__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/Root/TriggerMenu_v1.cxx</includedby>
    <includedby refid="d4/de0/TrigNavigation__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/Root/TrigNavigation_v1.cxx</includedby>
    <includedby refid="d8/df3/TrigPassBits__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigger/Root/TrigPassBits_v1.cxx</includedby>
    <includedby refid="de/d58/CMMCPHits__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/CMMCPHits_v1.cxx</includedby>
    <includedby refid="d9/db3/CMMEtSums__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/CMMEtSums_v1.cxx</includedby>
    <includedby refid="d9/d90/CMMJetHits__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/CMMJetHits_v1.cxx</includedby>
    <includedby refid="de/d28/CMMRoI__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/CMMRoI_v1.cxx</includedby>
    <includedby refid="da/d19/CMXCPHits__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/CMXCPHits_v1.cxx</includedby>
    <includedby refid="dc/dcc/CMXCPTob__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/CMXCPTob_v1.cxx</includedby>
    <includedby refid="db/d45/CMXEtSums__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/CMXEtSums_v1.cxx</includedby>
    <includedby refid="d8/d66/CMXJetHits__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/CMXJetHits_v1.cxx</includedby>
    <includedby refid="de/d5c/CMXJetTob__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/CMXJetTob_v1.cxx</includedby>
    <includedby refid="d1/d28/CMXRoI__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/CMXRoI_v1.cxx</includedby>
    <includedby refid="d3/d7c/CPMHits__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/CPMHits_v1.cxx</includedby>
    <includedby refid="d8/d03/CPMRoI__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/CPMRoI_v1.cxx</includedby>
    <includedby refid="d5/d10/CPMTobRoI__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/CPMTobRoI_v1.cxx</includedby>
    <includedby refid="df/df0/CPMTower__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/CPMTower_v1.cxx</includedby>
    <includedby refid="d9/d78/CPMTower__v2_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/CPMTower_v2.cxx</includedby>
    <includedby refid="de/d5e/JEMEtSums__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/JEMEtSums_v1.cxx</includedby>
    <includedby refid="dc/d36/JEMEtSums__v2_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/JEMEtSums_v2.cxx</includedby>
    <includedby refid="db/dd6/JEMHits__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/JEMHits_v1.cxx</includedby>
    <includedby refid="de/d09/JEMRoI__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/JEMRoI_v1.cxx</includedby>
    <includedby refid="d4/dae/JEMTobRoI__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/JEMTobRoI_v1.cxx</includedby>
    <includedby refid="dc/d01/JetElement__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/JetElement_v1.cxx</includedby>
    <includedby refid="dd/d82/JetElement__v2_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/JetElement_v2.cxx</includedby>
    <includedby refid="da/dd3/L1TopoRawData__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/L1TopoRawData_v1.cxx</includedby>
    <includedby refid="d8/d8d/RODHeader__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/RODHeader_v1.cxx</includedby>
    <includedby refid="de/dd3/RODHeader__v2_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/RODHeader_v2.cxx</includedby>
    <includedby refid="db/d02/TriggerTower__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/TriggerTower_v1.cxx</includedby>
    <includedby refid="dc/dd8/TriggerTower__v2_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigL1Calo/Root/TriggerTower_v2.cxx</includedby>
    <includedby refid="d4/d55/TrigHisto2D__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigMinBias/Root/TrigHisto2D_v1.cxx</includedby>
    <includedby refid="da/d1e/TrigSpacePointCounts__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigMinBias/Root/TrigSpacePointCounts_v1.cxx</includedby>
    <includedby refid="d9/d9c/TrigT2MbtsBits__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigMinBias/Root/TrigT2MbtsBits_v1.cxx</includedby>
    <includedby refid="d0/dbb/TrigT2ZdcSignals__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigMinBias/Root/TrigT2ZdcSignals_v1.cxx</includedby>
    <includedby refid="d8/d86/TrigTrackCounts__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigMinBias/Root/TrigTrackCounts_v1.cxx</includedby>
    <includedby refid="d3/db6/TrigVertexCounts__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigMinBias/Root/TrigVertexCounts_v1.cxx</includedby>
    <includedby refid="df/d5c/TrigMissingET__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigMissingET/Root/TrigMissingET_v1.cxx</includedby>
    <includedby refid="d6/d76/L2CombinedMuon__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigMuon/Root/L2CombinedMuon_v1.cxx</includedby>
    <includedby refid="d1/dd4/L2IsoMuon__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigMuon/Root/L2IsoMuon_v1.cxx</includedby>
    <includedby refid="d9/d3a/L2StandAloneMuon__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigMuon/Root/L2StandAloneMuon_v1.cxx</includedby>
    <includedby refid="dc/d76/L2StandAloneMuon__v2_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigMuon/Root/L2StandAloneMuon_v2.cxx</includedby>
    <includedby refid="dd/df2/TrigRingerRings__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigRinger/Root/TrigRingerRings_v1.cxx</includedby>
    <includedby refid="df/d7e/TrigRingerRings__v2_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigRinger/Root/TrigRingerRings_v2.cxx</includedby>
    <includedby refid="d7/d14/TrigRNNOutput__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigRinger/Root/TrigRNNOutput_v1.cxx</includedby>
    <includedby refid="d6/dcd/TrigRNNOutput__v2_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTrigRinger/Root/TrigRNNOutput_v2.cxx</includedby>
    <includedby refid="da/d10/TruthEvent__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/Root/TruthEvent_v1.cxx</includedby>
    <includedby refid="d7/df1/TruthEventBase__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/Root/TruthEventBase_v1.cxx</includedby>
    <includedby refid="db/d10/TruthMetaData__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/Root/TruthMetaData_v1.cxx</includedby>
    <includedby refid="d1/d3c/TruthParticle__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/Root/TruthParticle_v1.cxx</includedby>
    <includedby refid="d0/dee/TruthVertex__v1_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODTruth/Root/TruthVertex_v1.cxx</includedby>
    <invincdepgraph>
      <node id="361224">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/Root/AFPSiHit_v1.cxx</label>
        <link refid="dc/d14/AFPSiHit__v1_8cxx"/>
      </node>
      <node id="361223">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxStoreAccessorMacros.h</label>
        <link refid="AuxStoreAccessorMacros.h"/>
        <childnode refid="361224" relation="include">
        </childnode>
        <childnode refid="361225" relation="include">
        </childnode>
      </node>
      <node id="361225">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODForward/Root/AFPTrack_v1.cxx</label>
        <link refid="df/d1e/AFPTrack__v1_8cxx"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="d1/d0c/AuxStoreAccessorMacros_8h_1ac80581bff1345457d6647da29f666926" prot="public" static="no">
        <name>AUXSTORE_PRIMITIVE_SETTER_AND_GETTER</name>
        <param><defname>CL</defname></param>
        <param><defname>TYPE</defname></param>
        <param><defname>NAME</defname></param>
        <param><defname>SETTER</defname></param>
        <initializer>TYPE CL::NAME() const {                                   \
      static Accessor&lt; TYPE &gt; acc( #NAME );                  \
      return acc( *this );                                   \
   }                                                         \
   void CL::SETTER( TYPE value ) {                           \
      static Accessor&lt; TYPE &gt; acc( #NAME );                  \
      acc( *this ) = value;                                  \
      return;                                                \
   }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Macro creating the accessors of primitive auxiliary properties</para><para>The idea with this macro is to save ourselves a bit of time and typing. The macro assumes that for a given auxiliary variable, like a floating point variable of name &quot;sthg&quot;, we define the functions:</para><para><computeroutput> float sthg() const;<linebreak/>
 void setSthg( float value ); </computeroutput></para><para>in the <ref refid="dd/d44/namespacexAOD" kindref="compound">xAOD</ref> class&apos;s header. This macro provides the implementation code for these two functions.</para><para>So, in the previous case, we would use: <computeroutput> AUXSTORE_PRIMITIVE_SETTER_AND_GETTER( Dummy, float, sthg, setSthg ) </computeroutput></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>CL</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the <ref refid="dd/d44/namespacexAOD" kindref="compound">xAOD</ref> class </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TYPE</parametername>
</parameternamelist>
<parameterdescription>
<para>The (primitive) type name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NAME</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the auxiliary variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>SETTER</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the &quot;setter function&quot; </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxStoreAccessorMacros.h" line="41" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxStoreAccessorMacros.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d1/d0c/AuxStoreAccessorMacros_8h_1ab309183f126c0a786f36cec2856a3943" prot="public" static="no">
        <name>AUXSTORE_PRIMITIVE_GETTER</name>
        <param><defname>CL</defname></param>
        <param><defname>TYPE</defname></param>
        <param><defname>NAME</defname></param>
        <initializer>TYPE CL::NAME() const {                         \
      static Accessor&lt; TYPE &gt; acc( #NAME );        \
      return acc( *this );                         \
   }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Macro creating the reader function for a primitive auxiliary property</para><para>This macro is a simplified version of the previous one. It just provides the accessor function for reading an auxiliary variable. It can be useful when setting an auxiliary variable is done in a more involved function, but reading it is done through a simple accessor function.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>CL</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the <ref refid="dd/d44/namespacexAOD" kindref="compound">xAOD</ref> class </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TYPE</parametername>
</parameternamelist>
<parameterdescription>
<para>The (primitive) type name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NAME</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the auxiliary variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxStoreAccessorMacros.h" line="58" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxStoreAccessorMacros.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d1/d0c/AuxStoreAccessorMacros_8h_1ae1905d7295c905e42c12c2c351a80246" prot="public" static="no">
        <name>AUXSTORE_OBJECT_SETTER_AND_GETTER</name>
        <param><defname>CL</defname></param>
        <param><defname>TYPE</defname></param>
        <param><defname>NAME</defname></param>
        <param><defname>SETTER</defname></param>
        <initializer>const TYPE&amp; CL::NAME() const {                                 \
      static Accessor&lt; TYPE &gt; acc( #NAME );                       \
      return acc( *this );                                        \
   }                                                              \
   void CL::SETTER( const TYPE&amp; value ) {                         \
      static Accessor&lt; TYPE &gt; acc( #NAME );                       \
      acc( *this ) = value;                                       \
      return;                                                     \
   }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Macro creating the accessors of complex auxiliary properties</para><para>This macro should be used in the same way as the AUXSTORE_PRIMITIVE_SETTER_AND_GETTER one. However in contrary to that one, it assumes that the type given to it is heavy enough that it should be passed around using constant references instead of by value.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>CL</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the <ref refid="dd/d44/namespacexAOD" kindref="compound">xAOD</ref> class </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TYPE</parametername>
</parameternamelist>
<parameterdescription>
<para>The (complex) type name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NAME</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the auxiliary variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>SETTER</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the &quot;setter function&quot; </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxStoreAccessorMacros.h" line="81" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxStoreAccessorMacros.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d1/d0c/AuxStoreAccessorMacros_8h_1a0f08bb92bc0fb290a5a409d097d52f2f" prot="public" static="no">
        <name>AUXSTORE_OBJECT_MOVE</name>
        <param><defname>CL</defname></param>
        <param><defname>TYPE</defname></param>
        <param><defname>NAME</defname></param>
        <param><defname>SETTER</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Macro creating a move accessor for complex auxiliary properties.</para><para>This macro should be used in the same way as the AUXSTORE_OBJECT_SETTER_AND_GETTER one. In C++11, this will create a setter that takes its argument using move semantics. It is a no-op in C++98.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>CL</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the <ref refid="dd/d44/namespacexAOD" kindref="compound">xAOD</ref> class </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TYPE</parametername>
</parameternamelist>
<parameterdescription>
<para>The (complex) type name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NAME</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the auxiliary variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>SETTER</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the &quot;setter function&quot; </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxStoreAccessorMacros.h" line="97" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxStoreAccessorMacros.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d1/d0c/AuxStoreAccessorMacros_8h_1a93ef0fdd79b9f69ff074d1ea1ea83a06" prot="public" static="no">
        <name>AUXSTORE_OBJECT_GETTER</name>
        <param><defname>CL</defname></param>
        <param><defname>TYPE</defname></param>
        <param><defname>NAME</defname></param>
        <initializer>const TYPE&amp; CL::NAME() const {                  \
      static Accessor&lt; TYPE &gt; acc( #NAME );        \
      return acc( *this );                         \
   }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Macro creating the reader function for a complex auxiliary property</para><para>Just like AUXSTORE_OBJECT_SETTER_AND_GETTER, this macro also handles an auxiliary property that should be passed around using constant references.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>CL</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the <ref refid="dd/d44/namespacexAOD" kindref="compound">xAOD</ref> class </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TYPE</parametername>
</parameternamelist>
<parameterdescription>
<para>The (complex) type name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NAME</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the auxiliary variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxStoreAccessorMacros.h" line="122" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxStoreAccessorMacros.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d1/d0c/AuxStoreAccessorMacros_8h_1a387ab83ffb3768721c715ecdf1ed4f9d" prot="public" static="no">
        <name>AUXSTORE_PRIMITIVE_GETTER_WITH_CAST</name>
        <param><defname>CL</defname></param>
        <param><defname>PERSTYPE</defname></param>
        <param><defname>TRANSTYPE</defname></param>
        <param><defname>NAME</defname></param>
        <initializer>TRANSTYPE CL::NAME() const {                                         \
      static Accessor&lt; PERSTYPE &gt; acc( #NAME );                         \
      return static_cast&lt; TRANSTYPE &gt;( acc( *this ) );                  \
   }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Macro creating a getter function with a type conversion</para><para>In a number of cases we use a different primitive type in the interface classes than what we end up putting into the auxiliary store. In most cases we do double&lt;-&gt;float, and enum&lt;-&gt;int conversions in these cases.</para><para>This macro can be used to slightly lower the number of lines needed for implementing such a function.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>CL</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the <ref refid="dd/d44/namespacexAOD" kindref="compound">xAOD</ref> class </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PERSTYPE</parametername>
</parameternamelist>
<parameterdescription>
<para>The persistent (primitive) type name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TRANSTYPE</parametername>
</parameternamelist>
<parameterdescription>
<para>The transient (primitive) type name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NAME</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the auxiliary variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxStoreAccessorMacros.h" line="143" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxStoreAccessorMacros.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d1/d0c/AuxStoreAccessorMacros_8h_1a799fac387661fa7cd597f6cb95f6db58" prot="public" static="no">
        <name>AUXSTORE_PRIMITIVE_SETTER_WITH_CAST</name>
        <param><defname>CL</defname></param>
        <param><defname>PERSTYPE</defname></param>
        <param><defname>TRANSTYPE</defname></param>
        <param><defname>NAME</defname></param>
        <param><defname>SETTER</defname></param>
        <initializer>void CL::SETTER( TRANSTYPE value ) {                               \
      static Accessor&lt; PERSTYPE &gt; acc( #NAME );                       \
      acc( *this ) = static_cast&lt; PERSTYPE &gt;( value );                \
      return;                                                         \
   }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Macro creating a setter function with a type conversion</para><para>In a number of cases we use a different primitive type in the interface classes than what we end up putting into the auxiliary store. In most cases we do double&lt;-&gt;float, and enum&lt;-&gt;int conversions in these cases.</para><para>This macro can be used to slightly lower the number of lines needed for implementing such a function.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>CL</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the <ref refid="dd/d44/namespacexAOD" kindref="compound">xAOD</ref> class </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PERSTYPE</parametername>
</parameternamelist>
<parameterdescription>
<para>The persistent (primitive) type name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TRANSTYPE</parametername>
</parameternamelist>
<parameterdescription>
<para>The transient (primitive) type name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NAME</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the auxiliary variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxStoreAccessorMacros.h" line="165" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxStoreAccessorMacros.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Dear<sp/>emacs,<sp/>this<sp/>is<sp/>-*-<sp/>c++<sp/>-*-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>$Id:<sp/>AuxStoreAccessorMacros.h<sp/>633587<sp/>2014-12-04<sp/>09:09:41Z<sp/>ssnyder<sp/>$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>XAODCORE_AUXSTOREACCESSORMACROS_H</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>XAODCORE_AUXSTOREACCESSORMACROS_H</highlight></codeline>
<codeline lineno="5"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor">#define<sp/>AUXSTORE_PRIMITIVE_SETTER_AND_GETTER(CL,<sp/>TYPE,<sp/>NAME,<sp/>\</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SETTER)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"><sp/><sp/><sp/>TYPE<sp/>CL::NAME()<sp/>const<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>Accessor&lt;<sp/>TYPE<sp/>&gt;<sp/>acc(<sp/>#NAME<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>acc(<sp/>*this<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"><sp/><sp/><sp/>void<sp/>CL::SETTER(<sp/>TYPE<sp/>value<sp/>)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>Accessor&lt;<sp/>TYPE<sp/>&gt;<sp/>acc(<sp/>#NAME<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>acc(<sp/>*this<sp/>)<sp/>=<sp/>value;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor">#define<sp/>AUXSTORE_PRIMITIVE_GETTER(CL,<sp/>TYPE,<sp/>NAME<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"><sp/><sp/><sp/>TYPE<sp/>CL::NAME()<sp/>const<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>Accessor&lt;<sp/>TYPE<sp/>&gt;<sp/>acc(<sp/>#NAME<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>acc(<sp/>*this<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor">#define<sp/>AUXSTORE_OBJECT_SETTER_AND_GETTER(CL,<sp/>TYPE,<sp/>NAME,<sp/>SETTER)<sp/>\</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"><sp/><sp/><sp/>const<sp/>TYPE&amp;<sp/>CL::NAME()<sp/>const<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>Accessor&lt;<sp/>TYPE<sp/>&gt;<sp/>acc(<sp/>#NAME<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>acc(<sp/>*this<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="77"><highlight class="preprocessor"><sp/><sp/><sp/>void<sp/>CL::SETTER(<sp/>const<sp/>TYPE&amp;<sp/>value<sp/>)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="78"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>Accessor&lt;<sp/>TYPE<sp/>&gt;<sp/>acc(<sp/>#NAME<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="79"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>acc(<sp/>*this<sp/>)<sp/>=<sp/>value;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&lt;<sp/>201100</highlight></codeline>
<codeline lineno="97"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>define<sp/>AUXSTORE_OBJECT_MOVE(CL,<sp/>TYPE,<sp/>NAME,<sp/>SETTER)</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>define<sp/>AUXSTORE_OBJECT_MOVE(CL,<sp/>TYPE,<sp/>NAME,<sp/>SETTER)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"><sp/><sp/><sp/>void<sp/>CL::SETTER(<sp/>typename<sp/>SG::AuxDataTraits&lt;TYPE&gt;::element_type&amp;&amp;<sp/>value<sp/>)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>Accessor&lt;<sp/>TYPE<sp/>&gt;<sp/>acc(<sp/>#NAME<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>acc(<sp/>*this<sp/>)<sp/>=<sp/>std::move(value);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="103"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="104"><highlight class="preprocessor"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor">#define<sp/>AUXSTORE_OBJECT_GETTER(CL,<sp/>TYPE,<sp/>NAME<sp/>)<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"><sp/><sp/><sp/>const<sp/>TYPE&amp;<sp/>CL::NAME()<sp/>const<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="120"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>Accessor&lt;<sp/>TYPE<sp/>&gt;<sp/>acc(<sp/>#NAME<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="121"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>acc(<sp/>*this<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="138"><highlight class="preprocessor">#define<sp/>AUXSTORE_PRIMITIVE_GETTER_WITH_CAST(CL,<sp/>PERSTYPE,<sp/>TRANSTYPE,<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="139"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NAME)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="140"><highlight class="preprocessor"><sp/><sp/><sp/>TRANSTYPE<sp/>CL::NAME()<sp/>const<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="141"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>Accessor&lt;<sp/>PERSTYPE<sp/>&gt;<sp/>acc(<sp/>#NAME<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="142"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>static_cast&lt;<sp/>TRANSTYPE<sp/>&gt;(<sp/>acc(<sp/>*this<sp/>)<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="143"><highlight class="preprocessor"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="159"><highlight class="preprocessor">#define<sp/>AUXSTORE_PRIMITIVE_SETTER_WITH_CAST(CL,<sp/>PERSTYPE,<sp/>TRANSTYPE,<sp/><sp/>\</highlight></codeline>
<codeline lineno="160"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NAME,<sp/>SETTER)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="161"><highlight class="preprocessor"><sp/><sp/><sp/>void<sp/>CL::SETTER(<sp/>TRANSTYPE<sp/>value<sp/>)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="162"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>Accessor&lt;<sp/>PERSTYPE<sp/>&gt;<sp/>acc(<sp/>#NAME<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="163"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>acc(<sp/>*this<sp/>)<sp/>=<sp/>static_cast&lt;<sp/>PERSTYPE<sp/>&gt;(<sp/>value<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="165"><highlight class="preprocessor"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>XAODCORE_AUXSTOREACCESSORMACROS_H</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODCore/xAODCore/AuxStoreAccessorMacros.h"/>
  </compounddef>
</doxygen>
