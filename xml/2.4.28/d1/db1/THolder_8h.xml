<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d1/db1/THolder_8h" kind="file">
    <compoundname>THolder.h</compoundname>
    <includes local="no">map</includes>
    <includes local="no">Rtypes.h</includes>
    <includedby refid="d0/d23/TAuxBranchManager_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/Root/TAuxBranchManager.cxx</includedby>
    <includedby refid="d3/dd4/TEvent_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/Root/TEvent.cxx</includedby>
    <includedby refid="d5/d3a/THolder_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/Root/THolder.cxx</includedby>
    <includedby refid="d9/df5/TObjectManager_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/Root/TObjectManager.cxx</includedby>
    <includedby refid="d5/dd7/TPrimitiveAuxBranchManager_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/Root/TPrimitiveAuxBranchManager.cxx</includedby>
    <includedby refid="d4/dfb/TStore_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/Root/TStore.cxx</includedby>
    <includedby refid="dc/d67/TCDVHolderT_8h" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/tools/TCDVHolderT.h</includedby>
    <includedby refid="d0/da4/TFileMerger_8h" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/tools/TFileMerger.h</includedby>
    <incdepgraph>
      <node id="412780">
        <label>map</label>
      </node>
      <node id="412781">
        <label>Rtypes.h</label>
      </node>
      <node id="412779">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/tools/THolder.h</label>
        <link refid="THolder.h"/>
        <childnode refid="412780" relation="include">
        </childnode>
        <childnode refid="412781" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="412783">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/tools/TCDVHolderT.h</label>
        <link refid="dc/d67/TCDVHolderT_8h_source"/>
      </node>
      <node id="412784">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/tools/TFileMerger.h</label>
        <link refid="d0/da4/TFileMerger_8h_source"/>
      </node>
      <node id="412782">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/tools/THolder.h</label>
        <link refid="THolder.h"/>
        <childnode refid="412783" relation="include">
        </childnode>
        <childnode refid="412784" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="d0/d85/classxAOD_1_1THolder" prot="public">xAOD::THolder</innerclass>
    <innernamespace refid="d8/dcc/namespacestd">std</innernamespace>
    <innernamespace refid="dd/d44/namespacexAOD">xAOD</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Dear<sp/>emacs,<sp/>this<sp/>is<sp/>-*-<sp/>c++<sp/>-*-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>$Id:<sp/>THolder.h<sp/>725531<sp/>2016-02-22<sp/>16:14:25Z<sp/>krasznaa<sp/>$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>XAODROOTACCESS_TOOLS_THOLDER_H</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>XAODROOTACCESS_TOOLS_THOLDER_H</highlight></codeline>
<codeline lineno="5"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>STL<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ROOT<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Rtypes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Forward<sp/>declaration(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">std<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">type_info;</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TClass;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">xAOD<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="d0/d85/classxAOD_1_1THolder" refkind="compound"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d0/d85/classxAOD_1_1THolder" kindref="compound" tooltip="This class takes care of holding EDM objects in memory.">THolder</ref><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d85/classxAOD_1_1THolder_1a2020c29c9e01536adf5c06326089f43d" kindref="member" tooltip="Default constructor.">THolder</ref>();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d85/classxAOD_1_1THolder_1a2020c29c9e01536adf5c06326089f43d" kindref="member" tooltip="Default constructor.">THolder</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>::TClass*<sp/>type,<sp/>::Bool_t<sp/>owner<sp/>=<sp/>kTRUE<sp/>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d85/classxAOD_1_1THolder_1a2020c29c9e01536adf5c06326089f43d" kindref="member" tooltip="Default constructor.">THolder</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::type_info&amp;<sp/>type,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Bool_t<sp/>owner<sp/>=<sp/>kTRUE<sp/>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d85/classxAOD_1_1THolder_1a2020c29c9e01536adf5c06326089f43d" kindref="member" tooltip="Default constructor.">THolder</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d85/classxAOD_1_1THolder" kindref="compound" tooltip="This class takes care of holding EDM objects in memory.">THolder</ref>&amp;<sp/>parent<sp/>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d85/classxAOD_1_1THolder_1a2020c29c9e01536adf5c06326089f43d" kindref="member" tooltip="Default constructor.">THolder</ref>(<sp/><ref refid="d0/d85/classxAOD_1_1THolder" kindref="compound" tooltip="This class takes care of holding EDM objects in memory.">THolder</ref>&amp;&amp;<sp/>parent<sp/>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d0/d85/classxAOD_1_1THolder_1a0afb7d776dc3ef15ac169134593bf4e2" kindref="member" tooltip="The destructor cleans out the memory used by the managed object.">~THolder</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d85/classxAOD_1_1THolder" kindref="compound" tooltip="This class takes care of holding EDM objects in memory.">THolder</ref>&amp;<sp/><ref refid="d0/d85/classxAOD_1_1THolder_1a1e0c9c44b282258a4d7ec144055f92e6" kindref="member" tooltip="Assignment operator.">operator=</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d85/classxAOD_1_1THolder" kindref="compound" tooltip="This class takes care of holding EDM objects in memory.">THolder</ref>&amp;<sp/>rhs<sp/>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d85/classxAOD_1_1THolder" kindref="compound" tooltip="This class takes care of holding EDM objects in memory.">THolder</ref>&amp;<sp/><ref refid="d0/d85/classxAOD_1_1THolder_1a1e0c9c44b282258a4d7ec144055f92e6" kindref="member" tooltip="Assignment operator.">operator=</ref>(<sp/><ref refid="d0/d85/classxAOD_1_1THolder" kindref="compound" tooltip="This class takes care of holding EDM objects in memory.">THolder</ref>&amp;&amp;<sp/>rhs<sp/>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><ref refid="d0/d85/classxAOD_1_1THolder_1a83140cc8dbe76e4c9e8a485479f7613c" kindref="member" tooltip="Return a typeless pointer to the held object&amp;#39;s pointer.">getPtr</ref>();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>obj<sp/>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::Bool_t<sp/><ref refid="d0/d85/classxAOD_1_1THolder_1ab5d09bfde84e6a001fb44fb99fa4f030" kindref="member" tooltip="Check whether the holder owns its object.">isOwner</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/d85/classxAOD_1_1THolder_1a4f15b2a9902d9750a3768e5700ae61a2" kindref="member" tooltip="Set whether the holder should own its object.">setOwner</ref>(<sp/>::Bool_t<sp/>state<sp/>=<sp/>kTRUE<sp/>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="d0/d85/classxAOD_1_1THolder_1ad4b96bbfa1fa22ed4db52e6b421546b8" kindref="member" tooltip="Return the object as a specific pointer.">getAs</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::type_info&amp;<sp/>tid,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Bool_t<sp/>silent<sp/>=<sp/>kFALSE<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="d0/d85/classxAOD_1_1THolder_1ac20f281ae3e93761527d61575057961f" kindref="member" tooltip="Return the object as a specific, constant pointer.">getAsConst</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::type_info&amp;<sp/>tid,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Bool_t<sp/>silent<sp/>=<sp/>kFALSE<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::TClass*<sp/><ref refid="d0/d85/classxAOD_1_1THolder_1acb0cdae3b8f976c63d17572325746cc1" kindref="member" tooltip="Return the concrete type of the object.">getClass</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::type_info*<sp/><ref refid="d0/d85/classxAOD_1_1THolder_1a217a1d18d4b3664e5756b34f85068fba" kindref="member" tooltip="Return the concrete type of the object.">getTypeInfo</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/d85/classxAOD_1_1THolder_1aa57902250e744edbf975fc4251c6643e" kindref="member" tooltip="Renew the object in memory.">renew</ref>();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/d85/classxAOD_1_1THolder_1aa3fd2af8fe7606fe11418b17c2f2a601" kindref="member" tooltip="Internal function used to delete the managed object from memory.">deleteObject</ref>();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="d0/d85/classxAOD_1_1THolder_1a8c3554f272109bf5a2377ae24866893c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="d0/d85/classxAOD_1_1THolder_1a8c3554f272109bf5a2377ae24866893c" kindref="member" tooltip="Typeless pointer to the object in memory.">m_object</ref>;</highlight></codeline>
<codeline lineno="93" refid="d0/d85/classxAOD_1_1THolder_1ab330bab2ce644ac958127534aae1bbcd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::TClass*<sp/><ref refid="d0/d85/classxAOD_1_1THolder_1ab330bab2ce644ac958127534aae1bbcd" kindref="member" tooltip="Concrete type of the object being held on to.">m_type</ref>;</highlight></codeline>
<codeline lineno="95" refid="d0/d85/classxAOD_1_1THolder_1ad144585893f0afc8d21d3607ea03dbeb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::type_info*<sp/><ref refid="d0/d85/classxAOD_1_1THolder_1ad144585893f0afc8d21d3607ea03dbeb" kindref="member" tooltip="Concrete type of the object, if it doesn&amp;#39;t have a dictionary.">m_typeInfo</ref>;</highlight></codeline>
<codeline lineno="97" refid="d0/d85/classxAOD_1_1THolder_1af29d34b8ea4e9945f92d775f7f4cf7c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::Bool_t<sp/><ref refid="d0/d85/classxAOD_1_1THolder_1af29d34b8ea4e9945f92d775f7f4cf7c3" kindref="member" tooltip="A flag for whether the object owns what it points to.">m_owner</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="d0/d85/classxAOD_1_1THolder_1a30322b33558c6ab67a46e05648703ecc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;<sp/>const<sp/>std::type_info*,<sp/>TClass*<sp/>&gt;<sp/><ref refid="d0/d85/classxAOD_1_1THolder_1a30322b33558c6ab67a46e05648703ecc" kindref="member" tooltip="Type for the internal cache.">TypeCache_t</ref>;</highlight></codeline>
<codeline lineno="102" refid="d0/d85/classxAOD_1_1THolder_1aae464a8842a668de6b3f6b60a1e63986" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d0/d85/classxAOD_1_1THolder_1a30322b33558c6ab67a46e05648703ecc" kindref="member" tooltip="Type for the internal cache.">TypeCache_t</ref><sp/><ref refid="d0/d85/classxAOD_1_1THolder_1aae464a8842a668de6b3f6b60a1e63986" kindref="member" tooltip="Cache for the requested class types.">s_typeMap</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="d0/d85/classxAOD_1_1THolder_1ab3bbe8664d365f29c974b9635df39486" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;<sp/>void*,<sp/>int<sp/>&gt;<sp/><ref refid="d0/d85/classxAOD_1_1THolder_1ab3bbe8664d365f29c974b9635df39486" kindref="member" tooltip="Type implementing the instance counting.">SharedCount_t</ref>;</highlight></codeline>
<codeline lineno="107" refid="d0/d85/classxAOD_1_1THolder_1aa5f15c7a038163821af52bc9a0fa9769" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d0/d85/classxAOD_1_1THolder_1ab3bbe8664d365f29c974b9635df39486" kindref="member" tooltip="Type implementing the instance counting.">SharedCount_t</ref><sp/><ref refid="d0/d85/classxAOD_1_1THolder_1aa5f15c7a038163821af52bc9a0fa9769" kindref="member" tooltip="Variable counting the different object instances.">s_sharedCount</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/>};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>THolder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>xAOD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>XAODROOTACCESS_TOOLS_THOLDER_H</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/xAODRootAccess/tools/THolder.h"/>
  </compounddef>
</doxygen>
