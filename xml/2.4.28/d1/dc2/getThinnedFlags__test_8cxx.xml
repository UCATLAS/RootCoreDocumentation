<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d1/dc2/getThinnedFlags__test_8cxx" kind="file">
    <compoundname>getThinnedFlags_test.cxx</compoundname>
    <includes refid="df/dd0/getThinnedFlags_8h" local="yes">AthContainers/tools/getThinnedFlags.h</includes>
    <includes local="no">vector</includes>
    <includes local="no">iostream</includes>
    <includes local="no">cassert</includes>
    <includes refid="d0/dab/TestThinningSvc_8icc" local="yes">TestThinningSvc.icc</includes>
    <incdepgraph>
      <node id="74057">
        <label>AthContainers/tools/getThinnedFlags.h</label>
        <link refid="df/dd0/getThinnedFlags_8h"/>
        <childnode refid="74058" relation="include">
        </childnode>
        <childnode refid="74059" relation="include">
        </childnode>
        <childnode refid="74060" relation="include">
        </childnode>
      </node>
      <node id="74060">
        <label>AthContainers/tools/getThinnedFlags.icc</label>
        <link refid="d2/de2/getThinnedFlags_8icc"/>
      </node>
      <node id="74062">
        <label>cassert</label>
      </node>
      <node id="74066">
        <label>map</label>
      </node>
      <node id="74065">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="74056">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/getThinnedFlags_test.cxx</label>
        <link refid="getThinnedFlags_test.cxx"/>
        <childnode refid="74057" relation="include">
        </childnode>
        <childnode refid="74058" relation="include">
        </childnode>
        <childnode refid="74061" relation="include">
        </childnode>
        <childnode refid="74062" relation="include">
        </childnode>
        <childnode refid="74063" relation="include">
        </childnode>
      </node>
      <node id="74058">
        <label>vector</label>
      </node>
      <node id="74061">
        <label>iostream</label>
      </node>
      <node id="74059">
        <label>cstddef</label>
      </node>
      <node id="74063">
        <label>TestThinningSvc.icc</label>
        <link refid="d0/dab/TestThinningSvc_8icc"/>
        <childnode refid="74064" relation="include">
        </childnode>
        <childnode refid="74065" relation="include">
        </childnode>
        <childnode refid="74066" relation="include">
        </childnode>
      </node>
      <node id="74064">
        <label>SGTools/DataProxy.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="d1/dc2/getThinnedFlags__test_8cxx_1a1440a7779ac56f47a3f355ce4a8c7da0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test1</definition>
        <argsstring>()</argsstring>
        <name>test1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/getThinnedFlags_test.cxx" line="23" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/getThinnedFlags_test.cxx" bodystart="22" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="d1/dc2/getThinnedFlags__test_8cxx_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/getThinnedFlags_test.cxx" line="70" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/getThinnedFlags_test.cxx" bodystart="69" bodyend="73"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Regression tests for getThinnedFlags. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>scott snyder &lt;<ulink url="mailto:snyder@bnl.gov">snyder@bnl.gov</ulink>&gt; </para></simplesect>
<simplesect kind="date"><para>Jul, 2014 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>$Id$</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight><highlight class="preprocessor">#undef<sp/>NDEBUG</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>XAOD_STANDALONE</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="df/dd0/getThinnedFlags_8h" kindref="compound" tooltip="Return vector of flags giving which container elements were thinned.">AthContainers/tools/getThinnedFlags.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d0/dab/TestThinningSvc_8icc" kindref="compound" tooltip="Dummy thinning service, for regression tests.">TestThinningSvc.icc</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test1()</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;test1\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><ref refid="db/dc7/classTestThinningSvc" kindref="compound">TestThinningSvc</ref><sp/>svc;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>c;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>10;<sp/>i++)<sp/>c.push_back(i);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>c2;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>std::vector&lt;unsigned<sp/>char&gt;<sp/>flags;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>assert<sp/>(<ref refid="dd/d59/namespaceSG_1a3ac6516722abaa699af584c9677b4142" kindref="member" tooltip="Return vector of flags giving which container elements were thinned.">SG::getThinnedFlags</ref><sp/>(0,<sp/>c,<sp/>n,<sp/>flags)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>assert<sp/>(n<sp/>==<sp/>10);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>assert<sp/>(flags.empty());</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>assert<sp/>(<ref refid="dd/d59/namespaceSG_1a3ac6516722abaa699af584c9677b4142" kindref="member" tooltip="Return vector of flags giving which container elements were thinned.">SG::getThinnedFlags</ref><sp/>(&amp;svc,<sp/>c,<sp/>n,<sp/>flags)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>assert<sp/>(n<sp/>==<sp/>10);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>assert<sp/>(flags.empty());</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>svc.remap<sp/>(&amp;c2,<sp/>1,<sp/>2);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>assert<sp/>(<ref refid="dd/d59/namespaceSG_1a3ac6516722abaa699af584c9677b4142" kindref="member" tooltip="Return vector of flags giving which container elements were thinned.">SG::getThinnedFlags</ref><sp/>(&amp;svc,<sp/>c,<sp/>n,<sp/>flags)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>assert<sp/>(n<sp/>==<sp/>10);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>assert<sp/>(flags.empty());</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0,<sp/>i1=0;<sp/>i<sp/>&lt;<sp/>10;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i%2<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>svc.remap<sp/>(&amp;c,<sp/>i,<sp/>i1);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++i1;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>svc.remap<sp/>(&amp;c,<sp/>i,<sp/>IThinningSvc::RemovedIdx);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>assert<sp/>(<ref refid="dd/d59/namespaceSG_1a3ac6516722abaa699af584c9677b4142" kindref="member" tooltip="Return vector of flags giving which container elements were thinned.">SG::getThinnedFlags</ref><sp/>(&amp;svc,<sp/>c,<sp/>n,<sp/>flags)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>assert<sp/>(n<sp/>==<sp/>5);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>assert<sp/>(flags.size()<sp/>==<sp/>10);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>10;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>assert<sp/>(flags[i]<sp/>==<sp/>(i%2<sp/>==<sp/>1));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>test1();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>XAOD_STANDALONE</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/getThinnedFlags_test.cxx"/>
  </compounddef>
</doxygen>
