<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d1/d3b/TrigOperationalInfo_8cxx" kind="file">
    <compoundname>TrigOperationalInfo.cxx</compoundname>
    <includes refid="d4/daa/TrigOperationalInfo_8h" local="yes">TrigSteeringEvent/TrigOperationalInfo.h</includes>
    <includes local="no">sstream</includes>
    <includes local="no">cmath</includes>
    <incdepgraph>
      <node id="330633">
        <label>list</label>
      </node>
      <node id="330642">
        <label>AthContainers/tools/DVL_algorithms.icc</label>
        <link refid="df/daa/DVL__algorithms_8icc"/>
        <childnode refid="330627" relation="include">
        </childnode>
        <childnode refid="330634" relation="include">
        </childnode>
        <childnode refid="330618" relation="include">
        </childnode>
        <childnode refid="330623" relation="include">
        </childnode>
        <childnode refid="330561" relation="include">
        </childnode>
      </node>
      <node id="330627">
        <label>AthContainers/tools/DVLNoBase.h</label>
        <link refid="d7/d92/DVLNoBase_8h"/>
      </node>
      <node id="330597">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="330649">
        <label>AthContainers/tools/DVLDataBucket.h</label>
        <link refid="d4/d16/DVLDataBucket_8h"/>
        <childnode refid="330650" relation="include">
        </childnode>
        <childnode refid="330628" relation="include">
        </childnode>
        <childnode refid="330568" relation="include">
        </childnode>
        <childnode refid="330651" relation="include">
        </childnode>
      </node>
      <node id="330614">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="330560" relation="include">
        </childnode>
        <childnode refid="330562" relation="include">
        </childnode>
        <childnode refid="330568" relation="include">
        </childnode>
        <childnode refid="330569" relation="include">
        </childnode>
      </node>
      <node id="330616">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="330577" relation="include">
        </childnode>
        <childnode refid="330558" relation="include">
        </childnode>
        <childnode refid="330617" relation="include">
        </childnode>
        <childnode refid="330578" relation="include">
        </childnode>
      </node>
      <node id="330615">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="330567">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="330569">
        <label>functional</label>
      </node>
      <node id="330624">
        <label>boost/version.hpp</label>
      </node>
      <node id="330566">
        <label>limits</label>
      </node>
      <node id="330617">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="330595">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="330563">
        <label>iterator</label>
      </node>
      <node id="330579">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="330550" relation="include">
        </childnode>
        <childnode refid="330580" relation="include">
        </childnode>
      </node>
      <node id="330648">
        <label>SGTools/ClassName.h</label>
      </node>
      <node id="330654">
        <label>AthContainers/DataVector.icc</label>
        <link refid="da/de6/DataVector_8icc"/>
        <childnode refid="330655" relation="include">
        </childnode>
        <childnode refid="330622" relation="include">
        </childnode>
        <childnode refid="330566" relation="include">
        </childnode>
        <childnode refid="330569" relation="include">
        </childnode>
        <childnode refid="330656" relation="include">
        </childnode>
      </node>
      <node id="330556">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="330557" relation="include">
        </childnode>
        <childnode refid="330570" relation="include">
        </childnode>
        <childnode refid="330571" relation="include">
        </childnode>
        <childnode refid="330572" relation="include">
        </childnode>
        <childnode refid="330550" relation="include">
        </childnode>
      </node>
      <node id="330581">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="330551" relation="include">
        </childnode>
        <childnode refid="330564" relation="include">
        </childnode>
      </node>
      <node id="330583">
        <label>stdint.h</label>
      </node>
      <node id="330553">
        <label>CLIDSvc/CLASS_DEF.h</label>
      </node>
      <node id="330634">
        <label>AthContainers/tools/DVLCast.h</label>
        <link refid="df/d5c/DVLCast_8h"/>
        <childnode refid="330566" relation="include">
        </childnode>
        <childnode refid="330635" relation="include">
        </childnode>
        <childnode refid="330572" relation="include">
        </childnode>
        <childnode refid="330564" relation="include">
        </childnode>
        <childnode refid="330558" relation="include">
        </childnode>
      </node>
      <node id="330602">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="330558" relation="include">
        </childnode>
        <childnode refid="330572" relation="include">
        </childnode>
      </node>
      <node id="330574">
        <label>AthContainers/IndexTrackingPolicy.h</label>
        <link refid="d0/da5/IndexTrackingPolicy_8h"/>
      </node>
      <node id="330586">
        <label>RVersion.h</label>
      </node>
      <node id="330548">
        <label>TrigSteeringEvent/TrigOperationalInfo.h</label>
        <link refid="d4/daa/TrigOperationalInfo_8h_source"/>
        <childnode refid="330549" relation="include">
        </childnode>
        <childnode refid="330550" relation="include">
        </childnode>
        <childnode refid="330551" relation="include">
        </childnode>
        <childnode refid="330552" relation="include">
        </childnode>
        <childnode refid="330553" relation="include">
        </childnode>
        <childnode refid="330554" relation="include">
        </childnode>
      </node>
      <node id="330559">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="330560" relation="include">
        </childnode>
        <childnode refid="330568" relation="include">
        </childnode>
        <childnode refid="330569" relation="include">
        </childnode>
      </node>
      <node id="330565">
        <label>cmath</label>
      </node>
      <node id="330621">
        <label>cassert</label>
      </node>
      <node id="330625">
        <label>boost/mpl/if.hpp</label>
      </node>
      <node id="330644">
        <label>boost/static_assert.hpp</label>
      </node>
      <node id="330571">
        <label>stdexcept</label>
      </node>
      <node id="330598">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="330631">
        <label>boost/type_traits/is_pointer.hpp</label>
      </node>
      <node id="330639">
        <label>boost/iterator/iterator_adaptor.hpp</label>
      </node>
      <node id="330550">
        <label>string</label>
      </node>
      <node id="330576">
        <label>AthContainers/AuxVectorData.h</label>
        <link refid="d9/df2/AuxVectorData_8h"/>
        <childnode refid="330557" relation="include">
        </childnode>
        <childnode refid="330577" relation="include">
        </childnode>
        <childnode refid="330579" relation="include">
        </childnode>
        <childnode refid="330581" relation="include">
        </childnode>
        <childnode refid="330582" relation="include">
        </childnode>
        <childnode refid="330588" relation="include">
        </childnode>
        <childnode refid="330589" relation="include">
        </childnode>
        <childnode refid="330590" relation="include">
        </childnode>
        <childnode refid="330551" relation="include">
        </childnode>
        <childnode refid="330562" relation="include">
        </childnode>
        <childnode refid="330564" relation="include">
        </childnode>
        <childnode refid="330591" relation="include">
        </childnode>
        <childnode refid="330592" relation="include">
        </childnode>
        <childnode refid="330593" relation="include">
        </childnode>
        <childnode refid="330599" relation="include">
        </childnode>
      </node>
      <node id="330601">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="330558" relation="include">
        </childnode>
        <childnode refid="330572" relation="include">
        </childnode>
      </node>
      <node id="330591">
        <label>AthContainers/tools/likely.h</label>
        <link refid="d6/dd6/likely_8h"/>
      </node>
      <node id="330554">
        <label>TrigSteeringEvent/TrigOperationalInfoCollection.h</label>
        <link refid="de/d88/TrigOperationalInfoCollection_8h_source"/>
        <childnode refid="330555" relation="include">
        </childnode>
        <childnode refid="330617" relation="include">
        </childnode>
        <childnode refid="330548" relation="include">
        </childnode>
      </node>
      <node id="330636">
        <label>AthContainers/tools/DVLIterator.h</label>
        <link refid="d3/dc7/DVLIterator_8h_source"/>
        <childnode refid="330573" relation="include">
        </childnode>
        <childnode refid="330634" relation="include">
        </childnode>
        <childnode refid="330637" relation="include">
        </childnode>
        <childnode refid="330639" relation="include">
        </childnode>
        <childnode refid="330624" relation="include">
        </childnode>
        <childnode refid="330563" relation="include">
        </childnode>
        <childnode refid="330564" relation="include">
        </childnode>
      </node>
      <node id="330650">
        <label>SGTools/DataBucket.h</label>
      </node>
      <node id="330549">
        <label>map</label>
      </node>
      <node id="330651">
        <label>AthContainers/tools/DVLDataBucket.icc</label>
        <link refid="d3/d21/DVLDataBucket_8icc"/>
        <childnode refid="330652" relation="include">
        </childnode>
      </node>
      <node id="330652">
        <label>SGTools/IRegisterTransient.h</label>
      </node>
      <node id="330587">
        <label>RootMetaSelection.h</label>
      </node>
      <node id="330611">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="330641">
        <label>AthContainers/tools/DVL_algorithms.h</label>
        <link refid="d0/d7a/DVL__algorithms_8h"/>
        <childnode refid="330636" relation="include">
        </childnode>
        <childnode refid="330563" relation="include">
        </childnode>
        <childnode refid="330561" relation="include">
        </childnode>
        <childnode refid="330642" relation="include">
        </childnode>
      </node>
      <node id="330592">
        <label>AthContainers/tools/assume.h</label>
        <link refid="d2/d20/assume_8h"/>
      </node>
      <node id="330608">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="330637">
        <label>AthContainers/tools/ElementProxy.h</label>
        <link refid="db/d26/ElementProxy_8h"/>
        <childnode refid="330573" relation="include">
        </childnode>
        <childnode refid="330585" relation="include">
        </childnode>
        <childnode refid="330568" relation="include">
        </childnode>
        <childnode refid="330638" relation="include">
        </childnode>
      </node>
      <node id="330619">
        <label>AthContainersInterfaces/IAuxElement.h</label>
        <link refid="dd/d7a/IAuxElement_8h"/>
      </node>
      <node id="330585">
        <label>AthLinks/tools/selection_ns.h</label>
        <link refid="d3/dec/selection__ns_8h"/>
        <childnode refid="330586" relation="include">
        </childnode>
        <childnode refid="330587" relation="include">
        </childnode>
      </node>
      <node id="330589">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="330596">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="330635">
        <label>limits.h</label>
      </node>
      <node id="330629">
        <label>AthContainers/tools/ClassID.h</label>
        <link refid="de/de2/ClassID_8h"/>
        <childnode refid="330630" relation="include">
        </childnode>
      </node>
      <node id="330606">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="330579" relation="include">
        </childnode>
        <childnode refid="330566" relation="include">
        </childnode>
        <childnode refid="330583" relation="include">
        </childnode>
        <childnode refid="330607" relation="include">
        </childnode>
      </node>
      <node id="330557">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="330558" relation="include">
        </childnode>
        <childnode refid="330559" relation="include">
        </childnode>
      </node>
      <node id="330560">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="330561" relation="include">
        </childnode>
        <childnode refid="330562" relation="include">
        </childnode>
        <childnode refid="330563" relation="include">
        </childnode>
        <childnode refid="330558" relation="include">
        </childnode>
        <childnode refid="330564" relation="include">
        </childnode>
        <childnode refid="330565" relation="include">
        </childnode>
        <childnode refid="330566" relation="include">
        </childnode>
        <childnode refid="330550" relation="include">
        </childnode>
        <childnode refid="330567" relation="include">
        </childnode>
      </node>
      <node id="330622">
        <label>AthContainers/tools/ATHCONTAINERS_ASSERT.h</label>
        <link refid="de/d6b/ATHCONTAINERS__ASSERT_8h"/>
        <childnode refid="330621" relation="include">
        </childnode>
      </node>
      <node id="330638">
        <label>AthContainers/tools/ElementProxy.icc</label>
        <link refid="d6/d70/ElementProxy_8icc"/>
        <childnode refid="330634" relation="include">
        </childnode>
        <childnode refid="330622" relation="include">
        </childnode>
      </node>
      <node id="330572">
        <label>typeinfo</label>
      </node>
      <node id="330620">
        <label>AthContainers/AuxElement.icc</label>
        <link refid="d2/d37/AuxElement_8icc"/>
        <childnode refid="330591" relation="include">
        </childnode>
        <childnode refid="330621" relation="include">
        </childnode>
      </node>
      <node id="330555">
        <label>AthContainers/DataVector.h</label>
        <link refid="d7/dd6/DataVector_8h"/>
        <childnode refid="330556" relation="include">
        </childnode>
        <childnode refid="330573" relation="include">
        </childnode>
        <childnode refid="330574" relation="include">
        </childnode>
        <childnode refid="330575" relation="include">
        </childnode>
        <childnode refid="330627" relation="include">
        </childnode>
        <childnode refid="330628" relation="include">
        </childnode>
        <childnode refid="330634" relation="include">
        </childnode>
        <childnode refid="330636" relation="include">
        </childnode>
        <childnode refid="330640" relation="include">
        </childnode>
        <childnode refid="330641" relation="include">
        </childnode>
        <childnode refid="330637" relation="include">
        </childnode>
        <childnode refid="330643" relation="include">
        </childnode>
        <childnode refid="330585" relation="include">
        </childnode>
        <childnode refid="330644" relation="include">
        </childnode>
        <childnode refid="330645" relation="include">
        </childnode>
        <childnode refid="330639" relation="include">
        </childnode>
        <childnode refid="330551" relation="include">
        </childnode>
        <childnode refid="330572" relation="include">
        </childnode>
        <childnode refid="330569" relation="include">
        </childnode>
        <childnode refid="330646" relation="include">
        </childnode>
        <childnode refid="330561" relation="include">
        </childnode>
        <childnode refid="330571" relation="include">
        </childnode>
        <childnode refid="330563" relation="include">
        </childnode>
        <childnode refid="330617" relation="include">
        </childnode>
        <childnode refid="330647" relation="include">
        </childnode>
        <childnode refid="330649" relation="include">
        </childnode>
        <childnode refid="330653" relation="include">
        </childnode>
        <childnode refid="330654" relation="include">
        </childnode>
      </node>
      <node id="330607">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="330588">
        <label>AthenaKernel/ILockable.h</label>
      </node>
      <node id="330584">
        <label>AthLinks/DataLinkBase.h</label>
        <link refid="db/da8/DataLinkBase_8h_source"/>
        <childnode refid="330583" relation="include">
        </childnode>
      </node>
      <node id="330580">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="330610">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="330628">
        <label>AthContainers/tools/DVLInfo.h</label>
        <link refid="d3/d2e/DVLInfo_8h"/>
        <childnode refid="330629" relation="include">
        </childnode>
        <childnode refid="330575" relation="include">
        </childnode>
        <childnode refid="330572" relation="include">
        </childnode>
        <childnode refid="330558" relation="include">
        </childnode>
        <childnode refid="330567" relation="include">
        </childnode>
        <childnode refid="330631" relation="include">
        </childnode>
        <childnode refid="330609" relation="include">
        </childnode>
        <childnode refid="330632" relation="include">
        </childnode>
      </node>
      <node id="330578">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="330647">
        <label>AthContainers/ClassName.h</label>
        <link refid="dd/d6b/AthContainers_2AthContainers_2ClassName_8h_source"/>
        <childnode refid="330648" relation="include">
        </childnode>
      </node>
      <node id="330600">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="330557" relation="include">
        </childnode>
        <childnode refid="330601" relation="include">
        </childnode>
        <childnode refid="330602" relation="include">
        </childnode>
        <childnode refid="330603" relation="include">
        </childnode>
        <childnode refid="330612" relation="include">
        </childnode>
        <childnode refid="330593" relation="include">
        </childnode>
        <childnode refid="330558" relation="include">
        </childnode>
        <childnode refid="330572" relation="include">
        </childnode>
        <childnode refid="330551" relation="include">
        </childnode>
        <childnode refid="330614" relation="include">
        </childnode>
        <childnode refid="330615" relation="include">
        </childnode>
      </node>
      <node id="330551">
        <label>vector</label>
      </node>
      <node id="330655">
        <label>AthContainers/tools/CompareAndPrint.h</label>
        <link refid="d5/da8/CompareAndPrint_8h_source"/>
        <childnode refid="330561" relation="include">
        </childnode>
        <childnode refid="330572" relation="include">
        </childnode>
      </node>
      <node id="330656">
        <label>AthContainers/tools/DVLEltBaseInfo.icc</label>
        <link refid="dd/d5e/DVLEltBaseInfo_8icc"/>
      </node>
      <node id="330562">
        <label>utility</label>
      </node>
      <node id="330653">
        <label>SGTools/DataBucketTraitFwd.h</label>
      </node>
      <node id="330590">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="330657">
        <label>sstream</label>
      </node>
      <node id="330626">
        <label>AthContainers/AuxVectorBase.icc</label>
        <link refid="d4/d50/AuxVectorBase_8icc"/>
      </node>
      <node id="330594">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="330604">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="330593">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="330594" relation="include">
        </childnode>
        <childnode refid="330595" relation="include">
        </childnode>
        <childnode refid="330596" relation="include">
        </childnode>
        <childnode refid="330597" relation="include">
        </childnode>
        <childnode refid="330598" relation="include">
        </childnode>
      </node>
      <node id="330564">
        <label>cstdlib</label>
      </node>
      <node id="330646">
        <label>iostream</label>
      </node>
      <node id="330570">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="330577">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="330557" relation="include">
        </childnode>
        <childnode refid="330558" relation="include">
        </childnode>
        <childnode refid="330578" relation="include">
        </childnode>
      </node>
      <node id="330558">
        <label>cstddef</label>
      </node>
      <node id="330552">
        <label>GaudiKernel/MsgStream.h</label>
      </node>
      <node id="330599">
        <label>AthContainers/AuxVectorData.icc</label>
        <link refid="da/de7/AuxVectorData_8icc"/>
        <childnode refid="330600" relation="include">
        </childnode>
        <childnode refid="330616" relation="include">
        </childnode>
        <childnode refid="330577" relation="include">
        </childnode>
        <childnode refid="330591" relation="include">
        </childnode>
        <childnode refid="330592" relation="include">
        </childnode>
      </node>
      <node id="330547">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/src/TrigOperationalInfo.cxx</label>
        <link refid="TrigOperationalInfo.cxx"/>
        <childnode refid="330548" relation="include">
        </childnode>
        <childnode refid="330657" relation="include">
        </childnode>
        <childnode refid="330565" relation="include">
        </childnode>
      </node>
      <node id="330632">
        <label>AthContainers/tools/DVLInfo.icc</label>
        <link refid="da/d83/DVLInfo_8icc"/>
        <childnode refid="330573" relation="include">
        </childnode>
        <childnode refid="330551" relation="include">
        </childnode>
        <childnode refid="330633" relation="include">
        </childnode>
        <childnode refid="330621" relation="include">
        </childnode>
        <childnode refid="330564" relation="include">
        </childnode>
        <childnode refid="330617" relation="include">
        </childnode>
      </node>
      <node id="330603">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="330601" relation="include">
        </childnode>
        <childnode refid="330604" relation="include">
        </childnode>
        <childnode refid="330581" relation="include">
        </childnode>
        <childnode refid="330605" relation="include">
        </childnode>
        <childnode refid="330590" relation="include">
        </childnode>
        <childnode refid="330572" relation="include">
        </childnode>
        <childnode refid="330551" relation="include">
        </childnode>
        <childnode refid="330561" relation="include">
        </childnode>
        <childnode refid="330583" relation="include">
        </childnode>
        <childnode refid="330609" relation="include">
        </childnode>
        <childnode refid="330610" relation="include">
        </childnode>
        <childnode refid="330611" relation="include">
        </childnode>
      </node>
      <node id="330609">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="330575">
        <label>AthContainers/AuxVectorBase.h</label>
        <link refid="d7/d18/AuxVectorBase_8h"/>
        <childnode refid="330576" relation="include">
        </childnode>
        <childnode refid="330573" relation="include">
        </childnode>
        <childnode refid="330574" relation="include">
        </childnode>
        <childnode refid="330618" relation="include">
        </childnode>
        <childnode refid="330600" relation="include">
        </childnode>
        <childnode refid="330556" relation="include">
        </childnode>
        <childnode refid="330622" relation="include">
        </childnode>
        <childnode refid="330616" relation="include">
        </childnode>
        <childnode refid="330623" relation="include">
        </childnode>
        <childnode refid="330551" relation="include">
        </childnode>
        <childnode refid="330626" relation="include">
        </childnode>
      </node>
      <node id="330613">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="330605">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="330604" relation="include">
        </childnode>
        <childnode refid="330606" relation="include">
        </childnode>
        <childnode refid="330590" relation="include">
        </childnode>
        <childnode refid="330551" relation="include">
        </childnode>
        <childnode refid="330608" relation="include">
        </childnode>
      </node>
      <node id="330561">
        <label>algorithm</label>
      </node>
      <node id="330643">
        <label>AthContainers/tools/IsMostDerivedFlag.h</label>
        <link refid="d5/dfa/IsMostDerivedFlag_8h"/>
      </node>
      <node id="330618">
        <label>AthContainers/AuxElement.h</label>
        <link refid="d1/d6f/AuxElement_8h"/>
        <childnode refid="330619" relation="include">
        </childnode>
        <childnode refid="330577" relation="include">
        </childnode>
        <childnode refid="330616" relation="include">
        </childnode>
        <childnode refid="330582" relation="include">
        </childnode>
        <childnode refid="330600" relation="include">
        </childnode>
        <childnode refid="330576" relation="include">
        </childnode>
        <childnode refid="330581" relation="include">
        </childnode>
        <childnode refid="330556" relation="include">
        </childnode>
        <childnode refid="330591" relation="include">
        </childnode>
        <childnode refid="330558" relation="include">
        </childnode>
        <childnode refid="330620" relation="include">
        </childnode>
      </node>
      <node id="330582">
        <label>AthLinks/DataLink.h</label>
        <link refid="da/de8/DataLink_8h_source"/>
        <childnode refid="330583" relation="include">
        </childnode>
        <childnode refid="330550" relation="include">
        </childnode>
        <childnode refid="330584" relation="include">
        </childnode>
        <childnode refid="330585" relation="include">
        </childnode>
      </node>
      <node id="330640">
        <label>AthContainers/tools/DVL_iter_swap.h</label>
        <link refid="d6/ddb/DVL__iter__swap_8h"/>
        <childnode refid="330636" relation="include">
        </childnode>
        <childnode refid="330622" relation="include">
        </childnode>
        <childnode refid="330563" relation="include">
        </childnode>
      </node>
      <node id="330573">
        <label>AthContainers/OwnershipPolicy.h</label>
        <link refid="d3/da4/OwnershipPolicy_8h_source"/>
      </node>
      <node id="330630">
        <label>GaudiKernel/ClassID.h</label>
      </node>
      <node id="330645">
        <label>boost/type_traits.hpp</label>
      </node>
      <node id="330568">
        <label>memory</label>
      </node>
      <node id="330612">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="330602" relation="include">
        </childnode>
        <childnode refid="330603" relation="include">
        </childnode>
        <childnode refid="330613" relation="include">
        </childnode>
      </node>
      <node id="330623">
        <label>AthContainersInterfaces/AuxStore_traits.h</label>
        <link refid="dd/d70/AuxStore__traits_8h"/>
        <childnode refid="330619" relation="include">
        </childnode>
        <childnode refid="330616" relation="include">
        </childnode>
        <childnode refid="330577" relation="include">
        </childnode>
        <childnode refid="330609" relation="include">
        </childnode>
        <childnode refid="330624" relation="include">
        </childnode>
        <childnode refid="330625" relation="include">
        </childnode>
        <childnode refid="330550" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="d1/d3b/TrigOperationalInfo_8cxx_1ae814a7ce2fe29c2a54e45cabe2d3e038" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string str</definition>
        <argsstring>(const TrigOperationalInfo &amp;d)</argsstring>
        <name>str</name>
        <param>
          <type>const <ref refid="d0/dba/classTrigOperationalInfo" kindref="compound">TrigOperationalInfo</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/src/TrigOperationalInfo.cxx" line="53" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/src/TrigOperationalInfo.cxx" bodystart="53" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="d1/d3b/TrigOperationalInfo_8cxx_1ae67b311be7587964706eaeef297ea5dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>MsgStream &amp;</type>
        <definition>MsgStream&amp; operator&lt;&lt;</definition>
        <argsstring>(MsgStream &amp;m, const TrigOperationalInfo &amp;d)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>MsgStream &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>const <ref refid="d0/dba/classTrigOperationalInfo" kindref="compound">TrigOperationalInfo</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/src/TrigOperationalInfo.cxx" line="67" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/src/TrigOperationalInfo.cxx" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="d1/d3b/TrigOperationalInfo_8cxx_1a5746550660a91ae30484cdbab7b087df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const TrigOperationalInfo &amp;a, const TrigOperationalInfo &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="d0/dba/classTrigOperationalInfo" kindref="compound">TrigOperationalInfo</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="d0/dba/classTrigOperationalInfo" kindref="compound">TrigOperationalInfo</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/src/TrigOperationalInfo.cxx" line="73" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/src/TrigOperationalInfo.cxx" bodystart="73" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="d1/d3b/TrigOperationalInfo_8cxx_1a9e5d79e1f04774dc81a37c5c15a0393e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void diff</definition>
        <argsstring>(const TrigOperationalInfo &amp;a, const TrigOperationalInfo &amp;b, std::map&lt; std::string, double &gt; &amp;variableChange)</argsstring>
        <name>diff</name>
        <param>
          <type>const <ref refid="d0/dba/classTrigOperationalInfo" kindref="compound">TrigOperationalInfo</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="d0/dba/classTrigOperationalInfo" kindref="compound">TrigOperationalInfo</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, double &gt; &amp;</type>
          <declname>variableChange</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/src/TrigOperationalInfo.cxx" line="87" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/src/TrigOperationalInfo.cxx" bodystart="87" bodyend="107"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;TrigSteeringEvent/TrigOperationalInfo.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal">TrigOperationalInfo::TrigOperationalInfo()<sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="8"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal">TrigOperationalInfo::TrigOperationalInfo(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>keys,</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;&amp;<sp/>values)</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/>:<sp/>m_infoName<sp/>(keys),</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>m_infoValue<sp/>(values)</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TrigOperationalInfo::defined(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count(<sp/>m_infoName.begin(),<sp/>m_infoName.end(),<sp/>name<sp/>);<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>TrigOperationalInfo::get(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;::const_iterator<sp/>it;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>it<sp/>=<sp/>find<sp/>(<sp/>m_infoName.begin(),<sp/>m_infoName.end(),<sp/>name<sp/>);<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_infoValue[it<sp/>-<sp/>m_infoName.begin()];</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TrigOperationalInfo::set(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Tim<sp/>Martin<sp/>-<sp/>April<sp/>2016.<sp/>Removed<sp/>code<sp/>which<sp/>enforces<sp/>unique<sp/>names.<sp/>Rquired<sp/>by<sp/>use<sp/>in<sp/>Cost<sp/>Monitoring.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>m_infoName.push_back(name);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>m_infoValue.push_back(value);</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">std::pair&lt;std::vector&lt;std::string&gt;,<sp/>std::vector&lt;float&gt;<sp/>&gt;<sp/>TrigOperationalInfo::infos()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(m_infoName,<sp/>m_infoValue);</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>TrigOperationalInfo::getKeys()</highlight><highlight class="keyword"><sp/>const<sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_infoName;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;&amp;<sp/>TrigOperationalInfo::getValues()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_infoValue;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TrigOperationalInfo::updateAtLocation(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>location,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>m_infoValue.at(location)<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="comment">//<sp/>helper<sp/>operators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">std::string<sp/>str<sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/dba/classTrigOperationalInfo" kindref="compound" tooltip="This class defined generic object to store operational info available during triggering...">TrigOperationalInfo</ref>&amp;<sp/>d<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>std::pair&lt;std::vector&lt;std::string&gt;,<sp/>std::vector&lt;float&gt;<sp/>&gt;<sp/>quantities<sp/>=<sp/>d.infos();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;::const_iterator<sp/>keyIt<sp/>=<sp/>quantities.first.begin();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>std::vector&lt;float&gt;::const_iterator<sp/>valueIt<sp/><sp/><sp/><sp/><sp/>=<sp/>quantities.second.begin();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>quantities.first.size();<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>*keyIt<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>*valueIt;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>++keyIt;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>++valueIt;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ss.str();</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">MsgStream&amp;<sp/>operator&lt;&lt;<sp/>(<sp/>MsgStream&amp;<sp/>m,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/dba/classTrigOperationalInfo" kindref="compound" tooltip="This class defined generic object to store operational info available during triggering...">TrigOperationalInfo</ref>&amp;<sp/>d<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>m<sp/>&lt;&lt;<sp/>str(d);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d1/d43/DataList_8h_1a2f4af3db6bca5dc8d962d673635f0865" kindref="member" tooltip="List equality comparison.">operator== </ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/dba/classTrigOperationalInfo" kindref="compound" tooltip="This class defined generic object to store operational info available during triggering...">TrigOperationalInfo</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/dba/classTrigOperationalInfo" kindref="compound" tooltip="This class defined generic object to store operational info available during triggering...">TrigOperationalInfo</ref>&amp;<sp/>b<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>std::pair&lt;std::vector&lt;std::string&gt;,<sp/>std::vector&lt;float&gt;<sp/>&gt;<sp/>a_infos<sp/>=<sp/>a.infos();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>std::pair&lt;std::vector&lt;std::string&gt;,<sp/>std::vector&lt;float&gt;<sp/>&gt;<sp/>b_infos<sp/>=<sp/>b.infos();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>a_infos.first.size()<sp/>!=<sp/>b_infos.first.size())<sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>(a_infos.first<sp/><sp/>==<sp/>b_infos.first))</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>(a_infos.second<sp/><sp/>==<sp/>b_infos.second))</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diff(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/dba/classTrigOperationalInfo" kindref="compound" tooltip="This class defined generic object to store operational info available during triggering...">TrigOperationalInfo</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/dba/classTrigOperationalInfo" kindref="compound" tooltip="This class defined generic object to store operational info available during triggering...">TrigOperationalInfo</ref>&amp;<sp/>b,<sp/>std::map&lt;std::string,<sp/>double&gt;&amp;<sp/>variableChange<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>std::pair&lt;std::vector&lt;std::string&gt;,<sp/>std::vector&lt;float&gt;<sp/>&gt;<sp/>a_infos<sp/>=<sp/>a.infos();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>std::pair&lt;std::vector&lt;std::string&gt;,<sp/>std::vector&lt;float&gt;<sp/>&gt;<sp/>b_infos<sp/>=<sp/>b.infos();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>a_infos.first.size()<sp/>!=<sp/>b_infos.first.size())<sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>variableChange[</highlight><highlight class="stringliteral">&quot;size&quot;</highlight><highlight class="normal">]<sp/>=<sp/><sp/>a_infos.first.size()<sp/>-<sp/>b_infos.first.size();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;::const_iterator<sp/>a_keyIt<sp/>=<sp/>a_infos.first.begin();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>std::vector&lt;float&gt;::const_iterator<sp/>a_valueIt<sp/><sp/><sp/><sp/><sp/>=<sp/>a_infos.second.begin();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>a_infos.first.size();<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>b.defined(*a_keyIt)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b_val<sp/>=<sp/>b.get(*a_keyIt);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>variableChange[*a_keyIt]<sp/>=<sp/>*a_valueIt<sp/>-<sp/>b_val;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>variableChange[*a_keyIt+</highlight><highlight class="stringliteral">&quot;_abs&quot;</highlight><highlight class="normal">]<sp/>=<sp/>*a_valueIt;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>++a_keyIt;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>++a_valueIt;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/src/TrigOperationalInfo.cxx"/>
  </compounddef>
</doxygen>
