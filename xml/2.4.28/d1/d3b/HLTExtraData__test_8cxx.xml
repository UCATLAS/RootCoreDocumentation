<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d1/d3b/HLTExtraData__test_8cxx" kind="file">
    <compoundname>HLTExtraData_test.cxx</compoundname>
    <includes refid="dd/d01/HLTExtraData_8h" local="yes">TrigSteeringEvent/HLTExtraData.h</includes>
    <includes local="no">vector</includes>
    <incdepgraph>
      <node id="330782">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/test/HLTExtraData_test.cxx</label>
        <link refid="HLTExtraData_test.cxx"/>
        <childnode refid="330783" relation="include">
        </childnode>
        <childnode refid="330787" relation="include">
        </childnode>
      </node>
      <node id="330789">
        <label>iterator</label>
      </node>
      <node id="330790">
        <label>stdint.h</label>
      </node>
      <node id="330791">
        <label>string</label>
      </node>
      <node id="330783">
        <label>TrigSteeringEvent/HLTExtraData.h</label>
        <link refid="dd/d01/HLTExtraData_8h"/>
        <childnode refid="330784" relation="include">
        </childnode>
        <childnode refid="330791" relation="include">
        </childnode>
        <childnode refid="330787" relation="include">
        </childnode>
      </node>
      <node id="330784">
        <label>TrigSteeringEvent/StringSerializer.h</label>
        <link refid="da/d4a/TrigSteeringEvent_2TrigSteeringEvent_2StringSerializer_8h_source"/>
        <childnode refid="330785" relation="include">
        </childnode>
        <childnode refid="330786" relation="include">
        </childnode>
        <childnode refid="330787" relation="include">
        </childnode>
        <childnode refid="330788" relation="include">
        </childnode>
        <childnode refid="330789" relation="include">
        </childnode>
        <childnode refid="330790" relation="include">
        </childnode>
      </node>
      <node id="330787">
        <label>vector</label>
      </node>
      <node id="330786">
        <label>sstream</label>
      </node>
      <node id="330788">
        <label>cstdlib</label>
      </node>
      <node id="330785">
        <label>iostream</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="d1/d3b/HLTExtraData__test_8cxx_1a5e49a8aee55195b91c93b453bc08939e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ostream &amp;</type>
        <definition>ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(ostream &amp;os, const HLTExtraData &amp;x)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="d4/d14/classHLT_1_1HLTExtraData" kindref="compound">HLTExtraData</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/test/HLTExtraData_test.cxx" line="22" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/test/HLTExtraData_test.cxx" bodystart="21" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="d1/d3b/HLTExtraData__test_8cxx_1a8bf387e3d55681027e7ab4be2db51d03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const HLTExtraData &amp;x1, const HLTExtraData &amp;x2)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="d4/d14/classHLT_1_1HLTExtraData" kindref="compound">HLTExtraData</ref> &amp;</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>const <ref refid="d4/d14/classHLT_1_1HLTExtraData" kindref="compound">HLTExtraData</ref> &amp;</type>
          <declname>x2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/test/HLTExtraData_test.cxx" line="36" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/test/HLTExtraData_test.cxx" bodystart="35" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="d1/d3b/HLTExtraData__test_8cxx_1a981153f2cd10ff028166484363ed02d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const HLTExtraData &amp;x1, const HLTExtraData &amp;x2)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="d4/d14/classHLT_1_1HLTExtraData" kindref="compound">HLTExtraData</ref> &amp;</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>const <ref refid="d4/d14/classHLT_1_1HLTExtraData" kindref="compound">HLTExtraData</ref> &amp;</type>
          <declname>x2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/test/HLTExtraData_test.cxx" line="43" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/test/HLTExtraData_test.cxx" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="d1/d3b/HLTExtraData__test_8cxx_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/test/HLTExtraData_test.cxx" line="48" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/test/HLTExtraData_test.cxx" bodystart="47" bodyend="108"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#ifdef<sp/>XAOD_STANDALONE</highlight></codeline>
<codeline lineno="7"><highlight class="preprocessor"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;}</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="9"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>XAOD_STANDALONE</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dd/d01/HLTExtraData_8h" kindref="compound" tooltip="Definition of the HLT extra data in the HLTResult payload.">TrigSteeringEvent/HLTExtraData.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">HLT;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">ostream&amp;<sp/>operator&lt;&lt;<sp/>(ostream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d14/classHLT_1_1HLTExtraData" kindref="compound">HLTExtraData</ref>&amp;<sp/>x)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>x.<ref refid="d4/d14/classHLT_1_1HLTExtraData_1a91c5135f393e40761ee1a63c66102414" kindref="member" tooltip="application name">appName</ref>.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isprint<sp/>(x.<ref refid="d4/d14/classHLT_1_1HLTExtraData_1a91c5135f393e40761ee1a63c66102414" kindref="member" tooltip="application name">appName</ref>[i]))</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>x.<ref refid="d4/d14/classHLT_1_1HLTExtraData_1a91c5135f393e40761ee1a63c66102414" kindref="member" tooltip="application name">appName</ref>[i];</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\0x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::hex<sp/>&lt;&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)x.<ref refid="d4/d14/classHLT_1_1HLTExtraData_1a91c5135f393e40761ee1a63c66102414" kindref="member" tooltip="application name">appName</ref>[i]<sp/>&lt;&lt;<sp/>std::dec;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>x.<ref refid="d4/d14/classHLT_1_1HLTExtraData_1aedbc745bfba7b5887db0abad2eef865a" kindref="member" tooltip="various status codes (for prescale/COOL updates)">statusCode</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;x.<ref refid="d4/d14/classHLT_1_1HLTExtraData_1a0f729c05537e5ea29afa248ac46f199a" kindref="member" tooltip="For future use-cases (only use as last resort).">anonymous</ref>.size();<sp/>++i)<sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>x.<ref refid="d4/d14/classHLT_1_1HLTExtraData_1a0f729c05537e5ea29afa248ac46f199a" kindref="member" tooltip="For future use-cases (only use as last resort).">anonymous</ref>[i];</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d1/d43/DataList_8h_1a2f4af3db6bca5dc8d962d673635f0865" kindref="member" tooltip="List equality comparison.">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d14/classHLT_1_1HLTExtraData" kindref="compound">HLTExtraData</ref>&amp;<sp/>x1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d14/classHLT_1_1HLTExtraData" kindref="compound">HLTExtraData</ref>&amp;<sp/>x2)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(x1.<ref refid="d4/d14/classHLT_1_1HLTExtraData_1a91c5135f393e40761ee1a63c66102414" kindref="member" tooltip="application name">appName</ref>==x2.<ref refid="d4/d14/classHLT_1_1HLTExtraData_1a91c5135f393e40761ee1a63c66102414" kindref="member" tooltip="application name">appName</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1.<ref refid="d4/d14/classHLT_1_1HLTExtraData_1aedbc745bfba7b5887db0abad2eef865a" kindref="member" tooltip="various status codes (for prescale/COOL updates)">statusCode</ref>==x2.<ref refid="d4/d14/classHLT_1_1HLTExtraData_1aedbc745bfba7b5887db0abad2eef865a" kindref="member" tooltip="various status codes (for prescale/COOL updates)">statusCode</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1.<ref refid="d4/d14/classHLT_1_1HLTExtraData_1a0f729c05537e5ea29afa248ac46f199a" kindref="member" tooltip="For future use-cases (only use as last resort).">anonymous</ref>==x2.<ref refid="d4/d14/classHLT_1_1HLTExtraData_1a0f729c05537e5ea29afa248ac46f199a" kindref="member" tooltip="For future use-cases (only use as last resort).">anonymous</ref>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d1/d43/DataList_8h_1aa7a25d1b36f44af915a534c124985c2b" kindref="member" tooltip="Based on operator==.">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d14/classHLT_1_1HLTExtraData" kindref="compound">HLTExtraData</ref>&amp;<sp/>x1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d14/classHLT_1_1HLTExtraData" kindref="compound">HLTExtraData</ref>&amp;<sp/>x2)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(x1==x2);</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><ref refid="d4/d14/classHLT_1_1HLTExtraData" kindref="compound">HLTExtraData</ref><sp/>x1,<sp/>x2;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>vector&lt;uint32_t&gt;<sp/>v;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>(de)serialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>x1.<ref refid="d4/d14/classHLT_1_1HLTExtraData_1a91c5135f393e40761ee1a63c66102414" kindref="member" tooltip="application name">appName</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;My<sp/>application.name<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>x1.<ref refid="d4/d14/classHLT_1_1HLTExtraData_1aedbc745bfba7b5887db0abad2eef865a" kindref="member" tooltip="various status codes (for prescale/COOL updates)">statusCode</ref><sp/>=<sp/>2435;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>x1.<ref refid="d4/d14/classHLT_1_1HLTExtraData_1a0f729c05537e5ea29afa248ac46f199a" kindref="member" tooltip="For future use-cases (only use as last resort).">anonymous</ref>.push_back(77);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>x1.<ref refid="d4/d14/classHLT_1_1HLTExtraData_1a0f729c05537e5ea29afa248ac46f199a" kindref="member" tooltip="For future use-cases (only use as last resort).">anonymous</ref>.push_back(33);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>x1.<ref refid="d4/d14/classHLT_1_1HLTExtraData_1ab63c4d6a1a869a8e1ccddc3e6f9168b3" kindref="member">serialize</ref>(v);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>x2.<ref refid="d4/d14/classHLT_1_1HLTExtraData_1a69388b22e675b88d3b22c91357888e33" kindref="member">deserialize</ref>(v);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Storage<sp/>size:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>v.size()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Before:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>x1<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;After:<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>x2<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc(0);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x1!=x2)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>in<sp/>deserialization&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>deserialization<sp/>into<sp/>same<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>x2.<ref refid="d4/d14/classHLT_1_1HLTExtraData_1a69388b22e675b88d3b22c91357888e33" kindref="member">deserialize</ref>(v);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x1!=x2)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>in<sp/>second<sp/>deserialization&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="d4/d14/classHLT_1_1HLTExtraData" kindref="compound">HLTExtraData</ref><sp/>x3(v);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x1!=x3)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>in<sp/>deserialization<sp/>when<sp/>using<sp/>constructor&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>default<sp/>constructucted<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="d4/d14/classHLT_1_1HLTExtraData" kindref="compound">HLTExtraData</ref><sp/>x4;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>v.clear();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>x4.<ref refid="d4/d14/classHLT_1_1HLTExtraData_1ab63c4d6a1a869a8e1ccddc3e6f9168b3" kindref="member">serialize</ref>(v);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!v.empty())<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>Default<sp/>constructed<sp/>object<sp/>should<sp/>result<sp/>in<sp/>empty<sp/>payload&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>deserialization<sp/>from<sp/>empty<sp/>payload</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>x4.<ref refid="d4/d14/classHLT_1_1HLTExtraData_1a69388b22e675b88d3b22c91357888e33" kindref="member">deserialize</ref>(v);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x4<sp/>!=<sp/><ref refid="d4/d14/classHLT_1_1HLTExtraData" kindref="compound">HLTExtraData</ref>())<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>Serialization<sp/>from<sp/>empty<sp/>payload<sp/>should<sp/>result<sp/>in<sp/>default<sp/>object&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>garbage<sp/>input<sp/>(at<sp/>least<sp/>should<sp/>not<sp/>crash)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><ref refid="d4/d14/classHLT_1_1HLTExtraData" kindref="compound">HLTExtraData</ref><sp/>x5;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>vector&lt;uint32_t&gt;<sp/>garbage;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;20;<sp/>++i)<sp/>garbage.push_back(i);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>x5.<ref refid="d4/d14/classHLT_1_1HLTExtraData_1a69388b22e675b88d3b22c91357888e33" kindref="member">deserialize</ref>(garbage);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;From<sp/>garbage:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>x5<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/test/HLTExtraData_test.cxx"/>
  </compounddef>
</doxygen>
