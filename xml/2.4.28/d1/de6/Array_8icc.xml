<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d1/de6/Array_8icc" kind="file">
    <compoundname>Array.icc</compoundname>
    <includes refid="d8/d4b/unused_8h" local="yes">CxxUtils/unused.h</includes>
    <includes local="no">cassert</includes>
    <includedby refid="df/dd0/Array_8h" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.h</includedby>
    <incdepgraph>
      <node id="106534">
        <label>cassert</label>
      </node>
      <node id="106533">
        <label>CxxUtils/unused.h</label>
        <link refid="d8/d4b/unused_8h"/>
      </node>
      <node id="106532">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.icc</label>
        <link refid="Array.icc"/>
        <childnode refid="106533" relation="include">
        </childnode>
        <childnode refid="106534" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="106537">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/test/Array_test.cxx</label>
        <link refid="df/df7/Array__test_8cxx"/>
      </node>
      <node id="106535">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.icc</label>
        <link refid="Array.icc"/>
        <childnode refid="106536" relation="include">
        </childnode>
      </node>
      <node id="106536">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.h</label>
        <link refid="df/dd0/Array_8h"/>
        <childnode refid="106537" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="de/d12/namespaceCxxUtils">CxxUtils</innernamespace>
    <briefdescription>
<para>Simple multidimensional arrays (inline and template implementations). </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>scott snyder &lt;<ulink url="mailto:snyder@bnl.gov">snyder@bnl.gov</ulink>&gt; </para></simplesect>
<simplesect kind="date"><para>June, 2004 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>This<sp/>file&apos;s<sp/>extension<sp/>implies<sp/>that<sp/>it&apos;s<sp/>C,<sp/>but<sp/>it&apos;s<sp/>really<sp/>-*-<sp/>C++<sp/>-*-.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>$Id:<sp/>Array.icc,v<sp/>1.1<sp/>2009-03-20<sp/>20:44:22<sp/>ssnyder<sp/>Exp<sp/>$</highlight></codeline>
<codeline lineno="11"><highlight class="comment"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d8/d4b/unused_8h" kindref="compound" tooltip="Macro to mark a variable as unused.">CxxUtils/unused.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">CxxUtils<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ArrayIteratorChooser&lt;N&gt;::const_iterator</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><ref refid="d5/d27/classCxxUtils_1_1ArrayIteratorChooser_1af8b4ab406779e0d7e86746cc78edb0a7" kindref="member" tooltip="Construct an Array&amp;lt;N&amp;gt;::const_iterator.">ArrayIteratorChooser&lt;N&gt;::make_iterator</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Arrayrep*<sp/>rep,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offs)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1af8716c5726c944e8ba55f90a576949e3" kindref="member" tooltip="The iterator for this container.">const_iterator</ref><sp/>(rep,<sp/>offs);</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><ref refid="d4/d1b/classCxxUtils_1_1ArrayIteratorChooser_3_011_01_4_1ad1da6a79436e0075c255a9c982d7c37e" kindref="member" tooltip="Iterator type for an Array&amp;lt;1&amp;gt;.">ArrayIteratorChooser&lt;1&gt;::const_iterator</ref></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><ref refid="d5/d27/classCxxUtils_1_1ArrayIteratorChooser_1af8b4ab406779e0d7e86746cc78edb0a7" kindref="member" tooltip="Construct an Array&amp;lt;N&amp;gt;::const_iterator.">ArrayIteratorChooser&lt;1&gt;::make_iterator</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Arrayrep*<sp/>rep,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offs)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rep<sp/>?<sp/>&amp;rep-&gt;m_data[offs]<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//**********************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><ref refid="d5/dd9/classCxxUtils_1_1Array_1a140a13141f4e7584684e60437a5e9396" kindref="member" tooltip="Default constructor.">Array&lt;N&gt;::Array</ref><sp/>()</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>:<sp/>m_rep<sp/>(0),</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>m_offs<sp/>(0)</highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><ref refid="d5/dd9/classCxxUtils_1_1Array_1a140a13141f4e7584684e60437a5e9396" kindref="member" tooltip="Default constructor.">Array&lt;N&gt;::Array</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Arrayrep&amp;<sp/>rep)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>:<sp/>m_rep<sp/>(&amp;rep),</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>m_offs<sp/>(0)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>assert<sp/>(<ref refid="d5/dd9/classCxxUtils_1_1Array_1af055e952849ac49b2e122b8ba0ae04b3" kindref="member">m_rep</ref>-&gt;m_shape.size()<sp/>==<sp/><ref refid="da/deb/structN" kindref="compound">N</ref>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>assert<sp/>(<ref refid="d5/dd9/classCxxUtils_1_1Array_1af055e952849ac49b2e122b8ba0ae04b3" kindref="member">m_rep</ref>-&gt;m_sizes.size()<sp/>==<sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1af055e952849ac49b2e122b8ba0ae04b3" kindref="member">m_rep</ref>-&gt;m_shape.size());</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1abd36844e529259b2b764ef2b9a50e644" kindref="member" tooltip="Test for validity.">Array&lt;N&gt;::valid</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="95"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1af055e952849ac49b2e122b8ba0ae04b3" kindref="member">m_rep</ref><sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">std::vector&lt;unsigned<sp/>int&gt;<sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1ad4a962d70962e83f293e00daf146d7ed" kindref="member" tooltip="Return the array shape.">Array&lt;N&gt;::shape</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="109"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::vector&lt;unsigned<sp/>int&gt;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="d5/dd9/classCxxUtils_1_1Array_1af055e952849ac49b2e122b8ba0ae04b3" kindref="member">m_rep</ref>-&gt;m_shape.begin()<sp/>+<sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1af055e952849ac49b2e122b8ba0ae04b3" kindref="member">m_rep</ref>-&gt;m_shape.size()<sp/>-<sp/><ref refid="da/deb/structN" kindref="compound">N</ref>,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1af055e952849ac49b2e122b8ba0ae04b3" kindref="member">m_rep</ref>-&gt;m_shape.end());</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1a682d671307b58eb66a706a2af76cfb84" kindref="member" tooltip="Return the size of the array along one dimension.">Array&lt;N&gt;::size</ref><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim<sp/></highlight><highlight class="comment">/*=0*/</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="126"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>assert<sp/>(dim<sp/>&lt;<sp/><ref refid="da/deb/structN" kindref="compound">N</ref>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d5/dd9/classCxxUtils_1_1Array_1af055e952849ac49b2e122b8ba0ae04b3" kindref="member">m_rep</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1af055e952849ac49b2e122b8ba0ae04b3" kindref="member">m_rep</ref>-&gt;m_shape[<ref refid="d5/dd9/classCxxUtils_1_1Array_1af055e952849ac49b2e122b8ba0ae04b3" kindref="member">m_rep</ref>-&gt;m_shape.size()<sp/>-<sp/><ref refid="da/deb/structN" kindref="compound">N</ref><sp/>+<sp/>dim];</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal">Array&lt;<ref refid="da/deb/structN" kindref="compound">N</ref>-1&gt;<sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1af8fb023d8d5e219d961478c123efff70" kindref="member" tooltip="Array indexing.">Array&lt;N&gt;::operator[] </ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="144"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>assert<sp/>(i<sp/>&lt;<sp/>m_rep-&gt;<ref refid="d4/dc1/structCaloRec_1_1Arrayrep_1aeea9324049b2aaf8693a41a3eae55481" kindref="member">m_shape</ref>[<ref refid="d5/dd9/classCxxUtils_1_1Array_1af055e952849ac49b2e122b8ba0ae04b3" kindref="member">m_rep</ref>-&gt;m_shape.size()<sp/>-<sp/><ref refid="da/deb/structN" kindref="compound">N</ref>]);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1a140a13141f4e7584684e60437a5e9396" kindref="member" tooltip="Default constructor.">Array</ref>&lt;<ref refid="da/deb/structN" kindref="compound">N</ref>-1&gt;<sp/>(*<ref refid="d5/dd9/classCxxUtils_1_1Array_1af055e952849ac49b2e122b8ba0ae04b3" kindref="member">m_rep</ref>,<sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1afd68d80d38edf9ae0c9608d93e2e5a3d" kindref="member" tooltip="Offset in the Arrayrep&amp;#39;s data of the first element of this array.">m_offs</ref><sp/>+<sp/>i<sp/>*<sp/>m_rep-&gt;m_sizes[<ref refid="da/deb/structN" kindref="compound">N</ref>-1]);</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Arrayelt*<sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1aa6809b294f82601ec1753535c40b09be" kindref="member" tooltip="Return a direct pointer to array elements.">Array&lt;N&gt;::ptr</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="159"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;<ref refid="d5/dd9/classCxxUtils_1_1Array_1af055e952849ac49b2e122b8ba0ae04b3" kindref="member">m_rep</ref>-&gt;m_data[<ref refid="d5/dd9/classCxxUtils_1_1Array_1afd68d80d38edf9ae0c9608d93e2e5a3d" kindref="member" tooltip="Offset in the Arrayrep&amp;#39;s data of the first element of this array.">m_offs</ref>];</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Array&lt;N&gt;::const_iterator<sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1adafacdf32bab04c6eec523a1a82d50a3" kindref="member" tooltip="Return an iterator pointing at the beginning of the container.">Array&lt;N&gt;::begin</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="171"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ArrayIteratorChooser&lt;N&gt;::make_iterator<sp/>(<ref refid="d5/dd9/classCxxUtils_1_1Array_1af055e952849ac49b2e122b8ba0ae04b3" kindref="member">m_rep</ref>,<sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1afd68d80d38edf9ae0c9608d93e2e5a3d" kindref="member" tooltip="Offset in the Arrayrep&amp;#39;s data of the first element of this array.">m_offs</ref>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Array&lt;N&gt;::const_iterator<sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1a5b1a3899473201e02c71188267ab6afe" kindref="member" tooltip="Return an iterator pointing past the end of the container.">Array&lt;N&gt;::end</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="183"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offs<sp/>=<sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1af055e952849ac49b2e122b8ba0ae04b3" kindref="member">m_rep</ref><sp/>?<sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1afd68d80d38edf9ae0c9608d93e2e5a3d" kindref="member" tooltip="Offset in the Arrayrep&amp;#39;s data of the first element of this array.">m_offs</ref><sp/>+<sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1a682d671307b58eb66a706a2af76cfb84" kindref="member" tooltip="Return the size of the array along one dimension.">size</ref>()<sp/>*<sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1af055e952849ac49b2e122b8ba0ae04b3" kindref="member">m_rep</ref>-&gt;m_sizes[<ref refid="da/deb/structN" kindref="compound">N</ref>-1]<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ArrayIteratorChooser&lt;N&gt;::make_iterator<sp/>(<ref refid="d5/dd9/classCxxUtils_1_1Array_1af055e952849ac49b2e122b8ba0ae04b3" kindref="member">m_rep</ref>,<sp/>offs);</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><ref refid="d5/dd9/classCxxUtils_1_1Array_1a140a13141f4e7584684e60437a5e9396" kindref="member" tooltip="Default constructor.">Array&lt;N&gt;::Array</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Arrayrep&amp;<sp/>rep,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offs)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>:<sp/>m_rep<sp/>(&amp;rep),</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>m_offs<sp/>(offs)</highlight></codeline>
<codeline lineno="203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><ref refid="d5/dd9/classCxxUtils_1_1Array_1a140a13141f4e7584684e60437a5e9396" kindref="member" tooltip="Default constructor.">Array&lt;0&gt;::Array</ref><sp/>()</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>:<sp/>m_elt<sp/>(0)</highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><ref refid="d5/dd9/classCxxUtils_1_1Array_1a140a13141f4e7584684e60437a5e9396" kindref="member" tooltip="Default constructor.">Array&lt;0&gt;::Array</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Arrayrep&amp;<sp/>rep)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>:<sp/>m_elt<sp/>(&amp;rep.m_data[0])</highlight></codeline>
<codeline lineno="233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>assert<sp/>(rep.m_shape.size()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>assert<sp/>(rep.m_sizes.size()<sp/>==<sp/>rep.m_shape.size());</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1abd36844e529259b2b764ef2b9a50e644" kindref="member" tooltip="Test for validity.">Array&lt;0&gt;::valid</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="246"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_elt<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal">std::vector&lt;unsigned<sp/>int&gt;<sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1ad4a962d70962e83f293e00daf146d7ed" kindref="member" tooltip="Return the array shape.">Array&lt;0&gt;::shape</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="261"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::vector&lt;unsigned<sp/>int&gt;<sp/>();</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1a682d671307b58eb66a706a2af76cfb84" kindref="member" tooltip="Return the size of the array along one dimension.">Array&lt;0&gt;::size</ref><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UNUSED(dim)<sp/></highlight><highlight class="comment">/*=0*/</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="277"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>assert<sp/>(dim<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><ref refid="df/d88/classCxxUtils_1_1Array_3_010_01_4_1a2b5d848250c95ad8eca9c78a1f90da70" kindref="member" tooltip="Convert to a number.">Array&lt;0&gt;::operator Arrayelt</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="289"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*m_elt;</highlight></codeline>
<codeline lineno="291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="df/d88/classCxxUtils_1_1Array_3_010_01_4_1aa45b1387aebfbccd752a1befb293b92a" kindref="member" tooltip="Convert to an integer.">Array&lt;0&gt;::asint</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="300"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/>(*m_elt);</highlight></codeline>
<codeline lineno="302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><ref refid="d5/dd9/classCxxUtils_1_1Array_1a140a13141f4e7584684e60437a5e9396" kindref="member" tooltip="Default constructor.">Array&lt;0&gt;::Array</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Arrayrep&amp;<sp/>rep,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offs)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>:<sp/>m_elt<sp/>(&amp;rep.m_data[offs])</highlight></codeline>
<codeline lineno="317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="comment">//**********************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><ref refid="dd/d7c/classCxxUtils_1_1ArrayIterator_1_1pointer_1a1b0a8c21645e39d6c74c052c01f27649" kindref="member" tooltip="Proxy constructor.">ArrayIterator&lt;N&gt;::pointer::pointer</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ArrayIterator&amp;<sp/>i)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>:<sp/>m_a<sp/>(*i)</highlight></codeline>
<codeline lineno="331"><highlight class="normal">{</highlight></codeline>
<codeline lineno="332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ArrayIterator&lt;N&gt;::value_type</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><ref refid="dd/d7c/classCxxUtils_1_1ArrayIterator_1_1pointer_1a8db325e28f3d7092bb7f5461b100ed91" kindref="member" tooltip="Dereference the proxy.">ArrayIterator&lt;N&gt;::pointer::operator* </ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="342"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_a;</highlight></codeline>
<codeline lineno="344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ArrayIterator&lt;N&gt;::value_type*</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><ref refid="d4/d75/classCxxUtils_1_1ArrayIterator_1abb4469ea0205ddfbee768dacc58c565b" kindref="member" tooltip="Dereference the iterator.">ArrayIterator&lt;N&gt;::pointer::operator-&gt; </ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="356"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;m_a;</highlight></codeline>
<codeline lineno="358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><ref refid="d4/d75/classCxxUtils_1_1ArrayIterator_1a7320f356e0368bbd2155327aa3fe56f9" kindref="member" tooltip="Default constructor. Makes an invalid iterator.">ArrayIterator&lt;N&gt;::ArrayIterator</ref><sp/>()</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>:<sp/>m_rep<sp/>(0),</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>m_offs<sp/>(0)</highlight></codeline>
<codeline lineno="369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><ref refid="d4/d75/classCxxUtils_1_1ArrayIterator_1a7320f356e0368bbd2155327aa3fe56f9" kindref="member" tooltip="Default constructor. Makes an invalid iterator.">ArrayIterator&lt;N&gt;::ArrayIterator</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Arrayrep*<sp/>rep,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offs)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>:<sp/>m_rep<sp/>(rep),</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>m_offs<sp/>(offs)</highlight></codeline>
<codeline lineno="383"><highlight class="normal">{</highlight></codeline>
<codeline lineno="384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d75/classCxxUtils_1_1ArrayIterator_1a19d05bcdd0dad519e619ac758e0ec41d" kindref="member" tooltip="Equality comparison.">ArrayIterator&lt;N&gt;::operator== </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ArrayIterator&lt;N&gt;&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="394"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1af055e952849ac49b2e122b8ba0ae04b3" kindref="member">m_rep</ref><sp/>==<sp/>other.m_rep<sp/>&amp;&amp;<sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1afd68d80d38edf9ae0c9608d93e2e5a3d" kindref="member" tooltip="Offset in the Arrayrep&amp;#39;s data of the first element of this array.">m_offs</ref><sp/>==<sp/>other.m_offs;</highlight></codeline>
<codeline lineno="396"><highlight class="normal">}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d75/classCxxUtils_1_1ArrayIterator_1afd94f6fd0e60f8927237d80e62bf58bd" kindref="member" tooltip="Inequality comparison.">ArrayIterator&lt;N&gt;::operator!= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ArrayIterator&lt;N&gt;&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="406"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>other);</highlight></codeline>
<codeline lineno="408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d75/classCxxUtils_1_1ArrayIterator_1a334f2868423bd3230bea7886a5905368" kindref="member" tooltip="Less-than comparison.">ArrayIterator&lt;N&gt;::operator&lt; </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ArrayIterator&lt;N&gt;&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="420"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1af055e952849ac49b2e122b8ba0ae04b3" kindref="member">m_rep</ref><sp/>==<sp/>other.m_rep<sp/>&amp;&amp;<sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1afd68d80d38edf9ae0c9608d93e2e5a3d" kindref="member" tooltip="Offset in the Arrayrep&amp;#39;s data of the first element of this array.">m_offs</ref><sp/>&lt;<sp/>other.m_offs;</highlight></codeline>
<codeline lineno="422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d75/classCxxUtils_1_1ArrayIterator_1a55aa96160c7d6fb456f726937ec0e903" kindref="member" tooltip="Greater-than comparison.">ArrayIterator&lt;N&gt;::operator&gt; </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ArrayIterator&lt;N&gt;&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="434"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>other<sp/>&lt;<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d75/classCxxUtils_1_1ArrayIterator_1ac1f770b1f5f540d8d694da93a7528d9d" kindref="member" tooltip="Less-than-or-equal comparison.">ArrayIterator&lt;N&gt;::operator&lt;= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ArrayIterator&lt;N&gt;&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="448"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1af055e952849ac49b2e122b8ba0ae04b3" kindref="member">m_rep</ref><sp/>==<sp/>other.m_rep<sp/>&amp;&amp;<sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1afd68d80d38edf9ae0c9608d93e2e5a3d" kindref="member" tooltip="Offset in the Arrayrep&amp;#39;s data of the first element of this array.">m_offs</ref><sp/>&lt;=<sp/>other.m_offs;</highlight></codeline>
<codeline lineno="450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d75/classCxxUtils_1_1ArrayIterator_1aeb027bed6fafc58a5de51e97e09d9e2a" kindref="member" tooltip="Greater-than-or-equal comparison.">ArrayIterator&lt;N&gt;::operator&gt;= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ArrayIterator&lt;N&gt;&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="462"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>other<sp/>&lt;=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ArrayIterator&lt;N&gt;::value_type<sp/><ref refid="d4/d75/classCxxUtils_1_1ArrayIterator_1a34fd5df6bc476108bf21002f7f2ae525" kindref="member" tooltip="Dereference the iterator.">ArrayIterator&lt;N&gt;::operator* </ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="476"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>assert<sp/>(m_offs<sp/>&lt;<sp/>m_rep-&gt;<ref refid="d4/dc1/structCaloRec_1_1Arrayrep_1ab1b546c9fac55c1434c2049b0d396b4e" kindref="member" tooltip="The array data, stored using the C array ordering.">m_data</ref>.size());</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1a140a13141f4e7584684e60437a5e9396" kindref="member" tooltip="Default constructor.">Array</ref>&lt;<ref refid="da/deb/structN" kindref="compound">N</ref>-1&gt;<sp/>(*<ref refid="d5/dd9/classCxxUtils_1_1Array_1af055e952849ac49b2e122b8ba0ae04b3" kindref="member">m_rep</ref>,<sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1afd68d80d38edf9ae0c9608d93e2e5a3d" kindref="member" tooltip="Offset in the Arrayrep&amp;#39;s data of the first element of this array.">m_offs</ref>);</highlight></codeline>
<codeline lineno="479"><highlight class="normal">}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ArrayIterator&lt;N&gt;::pointer<sp/><ref refid="d4/d75/classCxxUtils_1_1ArrayIterator_1abb4469ea0205ddfbee768dacc58c565b" kindref="member" tooltip="Dereference the iterator.">ArrayIterator&lt;N&gt;::operator-&gt; </ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="493"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pointer<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="503"><highlight class="normal">ArrayIterator&lt;N&gt;&amp;<sp/><ref refid="d4/d75/classCxxUtils_1_1ArrayIterator_1afd8bed88fbdc17dab89ac3280a6f49c7" kindref="member" tooltip="Advance the iterator.">ArrayIterator&lt;N&gt;::operator++ </ref>()</highlight></codeline>
<codeline lineno="504"><highlight class="normal">{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1afd68d80d38edf9ae0c9608d93e2e5a3d" kindref="member" tooltip="Offset in the Arrayrep&amp;#39;s data of the first element of this array.">m_offs</ref><sp/>+=<sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1af055e952849ac49b2e122b8ba0ae04b3" kindref="member">m_rep</ref>-&gt;m_sizes[<ref refid="da/deb/structN" kindref="compound">N</ref>-1];</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="515"><highlight class="normal">ArrayIterator&lt;N&gt;<sp/><ref refid="d4/d75/classCxxUtils_1_1ArrayIterator_1afd8bed88fbdc17dab89ac3280a6f49c7" kindref="member" tooltip="Advance the iterator.">ArrayIterator&lt;N&gt;::operator++ </ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="516"><highlight class="normal">{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/>ArrayIterator<sp/>tmp<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1afd68d80d38edf9ae0c9608d93e2e5a3d" kindref="member" tooltip="Offset in the Arrayrep&amp;#39;s data of the first element of this array.">m_offs</ref><sp/>+=<sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1af055e952849ac49b2e122b8ba0ae04b3" kindref="member">m_rep</ref>-&gt;m_sizes[<ref refid="da/deb/structN" kindref="compound">N</ref>-1];</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="528"><highlight class="normal">ArrayIterator&lt;N&gt;&amp;<sp/><ref refid="d4/d75/classCxxUtils_1_1ArrayIterator_1aa50e87556dcfda18e98376801901c8b2" kindref="member" tooltip="Back up the iterator.">ArrayIterator&lt;N&gt;::operator-- </ref>()</highlight></codeline>
<codeline lineno="529"><highlight class="normal">{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1afd68d80d38edf9ae0c9608d93e2e5a3d" kindref="member" tooltip="Offset in the Arrayrep&amp;#39;s data of the first element of this array.">m_offs</ref><sp/>-=<sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1af055e952849ac49b2e122b8ba0ae04b3" kindref="member">m_rep</ref>-&gt;m_sizes[<ref refid="da/deb/structN" kindref="compound">N</ref>-1];</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="532"><highlight class="normal">}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="540"><highlight class="normal">ArrayIterator&lt;N&gt;<sp/><ref refid="d4/d75/classCxxUtils_1_1ArrayIterator_1aa50e87556dcfda18e98376801901c8b2" kindref="member" tooltip="Back up the iterator.">ArrayIterator&lt;N&gt;::operator-- </ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="541"><highlight class="normal">{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/>ArrayIterator<sp/>tmp<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1afd68d80d38edf9ae0c9608d93e2e5a3d" kindref="member" tooltip="Offset in the Arrayrep&amp;#39;s data of the first element of this array.">m_offs</ref><sp/>-=<sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1af055e952849ac49b2e122b8ba0ae04b3" kindref="member">m_rep</ref>-&gt;m_sizes[<ref refid="da/deb/structN" kindref="compound">N</ref>-1];</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="545"><highlight class="normal">}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ArrayIterator&lt;N&gt;::value_type</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><ref refid="d4/d75/classCxxUtils_1_1ArrayIterator_1a3d50c4e9e79e6b66af568cc4ad266b15" kindref="member" tooltip="Array indexing relative to the iterator.">ArrayIterator&lt;N&gt;::operator[] </ref>(difference_type<sp/>n)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="560"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offs<sp/>=<sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1afd68d80d38edf9ae0c9608d93e2e5a3d" kindref="member" tooltip="Offset in the Arrayrep&amp;#39;s data of the first element of this array.">m_offs</ref><sp/>+<sp/>n<sp/>*<sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1af055e952849ac49b2e122b8ba0ae04b3" kindref="member">m_rep</ref>-&gt;m_sizes[<ref refid="da/deb/structN" kindref="compound">N</ref>-1];</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>assert<sp/>(offs<sp/>&lt;<sp/>m_rep-&gt;<ref refid="d4/dc1/structCaloRec_1_1Arrayrep_1ab1b546c9fac55c1434c2049b0d396b4e" kindref="member" tooltip="The array data, stored using the C array ordering.">m_data</ref>.size());</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1a140a13141f4e7584684e60437a5e9396" kindref="member" tooltip="Default constructor.">Array</ref>&lt;<ref refid="da/deb/structN" kindref="compound">N</ref>-1&gt;<sp/>(*<ref refid="d5/dd9/classCxxUtils_1_1Array_1af055e952849ac49b2e122b8ba0ae04b3" kindref="member">m_rep</ref>,<sp/>offs);</highlight></codeline>
<codeline lineno="564"><highlight class="normal">}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="573"><highlight class="normal">ArrayIterator&lt;N&gt;&amp;<sp/><ref refid="d4/d75/classCxxUtils_1_1ArrayIterator_1a56842f4a76b72acf6064c453b6624287" kindref="member" tooltip="Advance the iterator.">ArrayIterator&lt;N&gt;::operator+= </ref>(difference_type<sp/>n)</highlight></codeline>
<codeline lineno="574"><highlight class="normal">{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1afd68d80d38edf9ae0c9608d93e2e5a3d" kindref="member" tooltip="Offset in the Arrayrep&amp;#39;s data of the first element of this array.">m_offs</ref><sp/>+=<sp/>n<sp/>*<sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1af055e952849ac49b2e122b8ba0ae04b3" kindref="member">m_rep</ref>-&gt;m_sizes[<ref refid="da/deb/structN" kindref="compound">N</ref>-1];</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="577"><highlight class="normal">}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="586"><highlight class="normal">ArrayIterator&lt;N&gt;<sp/><ref refid="d4/d75/classCxxUtils_1_1ArrayIterator_1a7f6e466e378413a9a0e983067d4435cc" kindref="member" tooltip="Return a new iterator pointing n steps ahead.">ArrayIterator&lt;N&gt;::operator+ </ref>(difference_type<sp/>n)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="587"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ArrayIterator<sp/>(<ref refid="d5/dd9/classCxxUtils_1_1Array_1af055e952849ac49b2e122b8ba0ae04b3" kindref="member">m_rep</ref>,<sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1afd68d80d38edf9ae0c9608d93e2e5a3d" kindref="member" tooltip="Offset in the Arrayrep&amp;#39;s data of the first element of this array.">m_offs</ref><sp/>+<sp/>n<sp/>*<sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1af055e952849ac49b2e122b8ba0ae04b3" kindref="member">m_rep</ref>-&gt;m_sizes[<ref refid="da/deb/structN" kindref="compound">N</ref>-1]);</highlight></codeline>
<codeline lineno="589"><highlight class="normal">}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="598"><highlight class="normal">ArrayIterator&lt;N&gt;&amp;<sp/><ref refid="d4/d75/classCxxUtils_1_1ArrayIterator_1ad951f5009d2b3ff418a2f8c2d8ab7a76" kindref="member" tooltip="Back up the iterator.">ArrayIterator&lt;N&gt;::operator-= </ref>(difference_type<sp/>n)</highlight></codeline>
<codeline lineno="599"><highlight class="normal">{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1afd68d80d38edf9ae0c9608d93e2e5a3d" kindref="member" tooltip="Offset in the Arrayrep&amp;#39;s data of the first element of this array.">m_offs</ref><sp/>-=<sp/>n<sp/>*<sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1af055e952849ac49b2e122b8ba0ae04b3" kindref="member">m_rep</ref>-&gt;m_sizes[<ref refid="da/deb/structN" kindref="compound">N</ref>-1];</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="602"><highlight class="normal">}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="611"><highlight class="normal">ArrayIterator&lt;N&gt;<sp/><ref refid="d4/d75/classCxxUtils_1_1ArrayIterator_1af2e035359cbaddca954e7cfa876f1013" kindref="member" tooltip="Return a new iterator pointing n steps behind.">ArrayIterator&lt;N&gt;::operator- </ref>(difference_type<sp/>n)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="612"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ArrayIterator<sp/>(<ref refid="d5/dd9/classCxxUtils_1_1Array_1af055e952849ac49b2e122b8ba0ae04b3" kindref="member">m_rep</ref>,<sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1afd68d80d38edf9ae0c9608d93e2e5a3d" kindref="member" tooltip="Offset in the Arrayrep&amp;#39;s data of the first element of this array.">m_offs</ref><sp/>-<sp/>n<sp/>*<sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1af055e952849ac49b2e122b8ba0ae04b3" kindref="member">m_rep</ref>-&gt;m_sizes[<ref refid="da/deb/structN" kindref="compound">N</ref>-1]);</highlight></codeline>
<codeline lineno="614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ArrayIterator&lt;N&gt;::difference_type</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><ref refid="d4/d75/classCxxUtils_1_1ArrayIterator_1af2e035359cbaddca954e7cfa876f1013" kindref="member" tooltip="Return a new iterator pointing n steps behind.">ArrayIterator&lt;N&gt;::operator- </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ArrayIterator&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="628"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="d5/dd9/classCxxUtils_1_1Array_1afd68d80d38edf9ae0c9608d93e2e5a3d" kindref="member" tooltip="Offset in the Arrayrep&amp;#39;s data of the first element of this array.">m_offs</ref><sp/>-<sp/>other.m_offs)<sp/>/<sp/><ref refid="d5/dd9/classCxxUtils_1_1Array_1af055e952849ac49b2e122b8ba0ae04b3" kindref="member">m_rep</ref>-&gt;m_sizes[<ref refid="da/deb/structN" kindref="compound">N</ref>-1];</highlight></codeline>
<codeline lineno="630"><highlight class="normal">}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="comment">//**********************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><ref refid="dc/dcc/classCxxUtils_1_1WritableArray_1a4778235225a438be0da4d631c935b1cb" kindref="member" tooltip="Constructor.">WritableArray&lt;N&gt;::WritableArray</ref><sp/>(Arrayrep&amp;<sp/>rep)</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/>:<sp/>Array&lt;<ref refid="da/deb/structN" kindref="compound">N</ref>&gt;<sp/>(rep)</highlight></codeline>
<codeline lineno="648"><highlight class="normal">{</highlight></codeline>
<codeline lineno="649"><highlight class="normal">}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal">WritableArray&lt;<ref refid="da/deb/structN" kindref="compound">N</ref>-1&gt;<sp/><ref refid="dc/dcc/classCxxUtils_1_1WritableArray_1adab6a71e4ccba671ea22b151c406ffbf" kindref="member" tooltip="Array indexing.">WritableArray&lt;N&gt;::operator[] </ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="663"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/>assert<sp/>(i<sp/>&lt;<sp/>this-&gt;<ref refid="d5/dd9/classCxxUtils_1_1Array_1af055e952849ac49b2e122b8ba0ae04b3" kindref="member">m_rep</ref>-&gt;m_shape[this-&gt;m_rep-&gt;m_shape.size()<sp/>-<sp/><ref refid="da/deb/structN" kindref="compound">N</ref>]);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dc/dcc/classCxxUtils_1_1WritableArray_1a4778235225a438be0da4d631c935b1cb" kindref="member" tooltip="Constructor.">WritableArray</ref>&lt;<ref refid="da/deb/structN" kindref="compound">N</ref>-1&gt;<sp/>(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="d4/dc1/structCaloRec_1_1Arrayrep_1acabdbf4626d6a6baa2744e87c1471687" kindref="member" tooltip="Default constructor.">Arrayrep</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/>(*this-&gt;<ref refid="d5/dd9/classCxxUtils_1_1Array_1af055e952849ac49b2e122b8ba0ae04b3" kindref="member">m_rep</ref>),</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d5/dd9/classCxxUtils_1_1Array_1afd68d80d38edf9ae0c9608d93e2e5a3d" kindref="member" tooltip="Offset in the Arrayrep&amp;#39;s data of the first element of this array.">m_offs</ref><sp/>+<sp/>i<sp/>*<sp/>this-&gt;<ref refid="d5/dd9/classCxxUtils_1_1Array_1af055e952849ac49b2e122b8ba0ae04b3" kindref="member">m_rep</ref>-&gt;m_sizes[<ref refid="da/deb/structN" kindref="compound">N</ref>-1]);</highlight></codeline>
<codeline lineno="667"><highlight class="normal">}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal">Arrayelt*<sp/><ref refid="dc/dcc/classCxxUtils_1_1WritableArray_1a24eeb1d0d270acf2a89c73e9c1ce5f8f" kindref="member" tooltip="Return a direct pointer to array elements.">WritableArray&lt;N&gt;::ptr</ref><sp/>()</highlight></codeline>
<codeline lineno="679"><highlight class="normal">{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">Arrayelt*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/>(&amp;this-&gt;<ref refid="d5/dd9/classCxxUtils_1_1Array_1af055e952849ac49b2e122b8ba0ae04b3" kindref="member">m_rep</ref>-&gt;m_data[this-&gt;<ref refid="d5/dd9/classCxxUtils_1_1Array_1afd68d80d38edf9ae0c9608d93e2e5a3d" kindref="member" tooltip="Offset in the Arrayrep&amp;#39;s data of the first element of this array.">m_offs</ref>]);</highlight></codeline>
<codeline lineno="681"><highlight class="normal">}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><ref refid="dc/dcc/classCxxUtils_1_1WritableArray_1a4778235225a438be0da4d631c935b1cb" kindref="member" tooltip="Constructor.">WritableArray&lt;N&gt;::WritableArray</ref><sp/>(Arrayrep&amp;<sp/>rep,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offs)</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/>:<sp/>Array&lt;<ref refid="da/deb/structN" kindref="compound">N</ref>&gt;<sp/>(rep,<sp/>offs)</highlight></codeline>
<codeline lineno="697"><highlight class="normal">{</highlight></codeline>
<codeline lineno="698"><highlight class="normal">}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><ref refid="dc/dcc/classCxxUtils_1_1WritableArray_1a4778235225a438be0da4d631c935b1cb" kindref="member" tooltip="Constructor.">WritableArray&lt;0&gt;::WritableArray</ref><sp/>(Arrayrep&amp;<sp/>rep)</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/>:<sp/>Array&lt;0&gt;<sp/>(rep)</highlight></codeline>
<codeline lineno="712"><highlight class="normal">{</highlight></codeline>
<codeline lineno="713"><highlight class="normal">}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal">WritableArray&lt;0&gt;&amp;<sp/><ref refid="d0/da2/classCxxUtils_1_1WritableArray_3_010_01_4_1a777b528b3894e20278f5413ce26ff441" kindref="member" tooltip="Assignment.">WritableArray&lt;0&gt;::operator= </ref>(Arrayelt<sp/>elt)</highlight></codeline>
<codeline lineno="725"><highlight class="normal">{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/>*</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">Arrayelt*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/>(m_elt)<sp/>=<sp/>elt;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="728"><highlight class="normal">}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><ref refid="dc/dcc/classCxxUtils_1_1WritableArray_1a4778235225a438be0da4d631c935b1cb" kindref="member" tooltip="Constructor.">WritableArray&lt;0&gt;::WritableArray</ref><sp/>(Arrayrep&amp;<sp/>rep,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offs)</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/>:<sp/>Array&lt;0&gt;<sp/>(rep,<sp/>offs)</highlight></codeline>
<codeline lineno="743"><highlight class="normal">{</highlight></codeline>
<codeline lineno="744"><highlight class="normal">}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="comment">//**********************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><ref refid="d3/dd4/classCxxUtils_1_1WritableArrayData_1aba8086359d9efd28e08a144d4733e45b" kindref="member" tooltip="Constructor.">WritableArrayData&lt;N&gt;::WritableArrayData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shape[])</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/>:<sp/>Arrayrep<sp/>(shape,<sp/><ref refid="da/deb/structN" kindref="compound">N</ref>),</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>WritableArray&lt;<ref refid="da/deb/structN" kindref="compound">N</ref>&gt;<sp/>(*static_cast&lt;Arrayrep*&gt;(this))</highlight></codeline>
<codeline lineno="761"><highlight class="normal">{</highlight></codeline>
<codeline lineno="762"><highlight class="normal">}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><ref refid="d3/dd4/classCxxUtils_1_1WritableArrayData_1aba8086359d9efd28e08a144d4733e45b" kindref="member" tooltip="Constructor.">WritableArrayData&lt;N&gt;::WritableArrayData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;unsigned<sp/>int&gt;&amp;<sp/>shape)</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/>:<sp/>Arrayrep<sp/>(shape),</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>WritableArray&lt;<ref refid="da/deb/structN" kindref="compound">N</ref>&gt;<sp/>(*static_cast&lt;Arrayrep*&gt;(this))</highlight></codeline>
<codeline lineno="776"><highlight class="normal">{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/>assert<sp/>(shape.size()<sp/>==<sp/><ref refid="da/deb/structN" kindref="compound">N</ref>);</highlight></codeline>
<codeline lineno="778"><highlight class="normal">}</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>CxxUtils</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.icc"/>
  </compounddef>
</doxygen>
