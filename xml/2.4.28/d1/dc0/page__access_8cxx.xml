<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d1/dc0/page__access_8cxx" kind="file">
    <compoundname>page_access.cxx</compoundname>
    <includes refid="d1/d9e/page__access_8h" local="yes">CxxUtils/page_access.h</includes>
    <incdepgraph>
      <node id="113456">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/page_access.cxx</label>
        <link refid="page_access.cxx"/>
        <childnode refid="113457" relation="include">
        </childnode>
      </node>
      <node id="113459">
        <label>sys/mman.h</label>
      </node>
      <node id="113457">
        <label>CxxUtils/page_access.h</label>
        <link refid="d1/d9e/page__access_8h_source"/>
        <childnode refid="113458" relation="include">
        </childnode>
        <childnode refid="113459" relation="include">
        </childnode>
      </node>
      <node id="113458">
        <label>cstdio</label>
      </node>
    </incdepgraph>
    <innernamespace refid="d3/d1d/namespaceathena">athena</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;CxxUtils/page_access.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">athena{</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>page_address(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>addr)<sp/>{<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)((long)addr<sp/>&amp;<sp/>~(PAGESIZE-1));<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>next_page_address(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>addr)<sp/>{<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(((long)addr<sp/>&amp;<sp/>~(PAGESIZE-1))<sp/>+<sp/>PAGESIZE);<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>page_protect(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>addr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prot)<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc=mprotect(page_address(addr),<sp/>PAGESIZE,<sp/>prot);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rc)<sp/>printf(</highlight><highlight class="stringliteral">&quot;page_protect<sp/>WARNING:<sp/>mprotect<sp/>heap<sp/>failed<sp/>for<sp/>void<sp/>*address<sp/>%p\n&quot;</highlight><highlight class="normal">,<sp/>addr);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>printf(</highlight><highlight class="stringliteral">&quot;page_protect<sp/>DEBUG:<sp/>set<sp/>protection<sp/>@%i<sp/>for<sp/>range<sp/>@%lx<sp/>-<sp/>@%lx<sp/>containing<sp/>void*<sp/>addr=%p\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prot,(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)page_address(addr),<sp/></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)page_address(addr)<sp/>+<sp/>PAGESIZE,<sp/>addr);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/Root/page_access.cxx"/>
  </compounddef>
</doxygen>
