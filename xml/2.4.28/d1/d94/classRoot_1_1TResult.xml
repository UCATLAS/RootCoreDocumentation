<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d1/d94/classRoot_1_1TResult" kind="class" prot="public">
    <compoundname>Root::TResult</compoundname>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="d1/d94/classRoot_1_1TResult_1ad98666cb07d58700124067b04117a28c" prot="protected" static="no" mutable="no">
        <type>TString</type>
        <definition>TString Root::TResult::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The name of the class instance </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" line="175" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d1/d94/classRoot_1_1TResult_1a25ddeed2d71ee521683d8739988cc57a" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Root::TResult::m_defaultResult</definition>
        <argsstring></argsstring>
        <name>m_defaultResult</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The default result value </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" line="181" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d94/classRoot_1_1TResult_1ac80658b775983a8811f496c8da7f5556" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; Root::TResult::m_result</definition>
        <argsstring></argsstring>
        <name>m_result</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The results </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" line="184" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d94/classRoot_1_1TResult_1a557d360cec1b39762c3ca1b3446f60ee" prot="private" static="no" mutable="no">
        <type>std::map&lt; TString, std::pair&lt; TString, unsigned int &gt; &gt;</type>
        <definition>std::map&lt; TString, std::pair&lt; TString, unsigned int &gt; &gt; Root::TResult::m_resultMap</definition>
        <argsstring></argsstring>
        <name>m_resultMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The map for mapping result names to their description and position </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" line="187" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d94/classRoot_1_1TResult_1ad0871d81fca544bb897b23dbc2559705" prot="private" static="no" mutable="no">
        <type>TString</type>
        <definition>TString Root::TResult::m_emptyString</definition>
        <argsstring></argsstring>
        <name>m_emptyString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>An empty string as default return for some member methods </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" line="190" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" bodystart="190" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d1/d94/classRoot_1_1TResult_1ae02bfe6b3b46800571a72b6f05b97f7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TResult::TResult</definition>
        <argsstring>(const char *name=&quot;TResult&quot;)</argsstring>
        <name>TResult</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
          <defval>&quot;TResult&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Standard constructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" line="28" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/Root/TResult.cxx" bodystart="30" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="d1/d94/classRoot_1_1TResult_1ac31fd72d0df4ff27a1c0e2e413d7d50f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TResult::TResult</definition>
        <argsstring>(const TResult &amp;parent)</argsstring>
        <name>TResult</name>
        <param>
          <type>const <ref refid="d1/d94/classRoot_1_1TResult" kindref="compound">TResult</ref> &amp;</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Standard copy constructor: DO NOT COPY IT! It is expensive to copy! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" line="31" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/Root/TResult.cxx" bodystart="45" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="d1/d94/classRoot_1_1TResult_1a4cd008c4a7238489e77ed245a3f34cbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d1/d94/classRoot_1_1TResult" kindref="compound">TResult</ref> &amp;</type>
        <definition>Root::TResult &amp; TResult::operator=</definition>
        <argsstring>(const TResult &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="d1/d94/classRoot_1_1TResult" kindref="compound">TResult</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Standard assignment operator: DO NOT COPY IT! It is expensive to copy! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" line="34" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/Root/TResult.cxx" bodystart="56" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="d1/d94/classRoot_1_1TResult_1a11d144d4803282e65ed122e5d8bb8ba0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>TResult::~TResult</definition>
        <argsstring>()</argsstring>
        <name>~TResult</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Standard destructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" line="37" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/Root/TResult.cxx" bodystart="76" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="d1/d94/classRoot_1_1TResult_1a9e345d53fba82fbcc61f3ff9271e7c5c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Root::TResult::operator double</definition>
        <argsstring>() const </argsstring>
        <name>operator double</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Overload the double operator; allows for: double myScaleFactor = double(myTResult) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" line="43" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="d1/d94/classRoot_1_1TResult_1a9fd269107bd1d9dde8140f51ce351a26" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Root::TResult::operator std::pair&lt; double, double &gt;</definition>
        <argsstring>() const </argsstring>
        <name>operator std::pair&lt; double, double &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Overload the double operator; allows for: std::pair&lt;double,double&gt; myScaleFactorAndUncertainty = std::pair&lt;double,double&gt;(myTResult) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" line="51" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="d1/d94/classRoot_1_1TResult_1a15814085f3227a6630bd4dacd78d29f2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Root::TResult::getEfficiency</definition>
        <argsstring>() const </argsstring>
        <name>getEfficiency</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the zeroth entry, by convention, this is the efficiency or scale factor or MVA response or... </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" line="57" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="d1/d94/classRoot_1_1TResult_1a2f7e1cb2f25af6921f3be7affa0f48ef" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Root::TResult::getScaleFactor</definition>
        <argsstring>() const </argsstring>
        <name>getScaleFactor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the zeroth entry, by convention, this is the efficiency or scale factor or MVA response or... </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" line="60" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="d1/d94/classRoot_1_1TResult_1ae4ae197f66e41d47ad9373c60bc5f8db" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Root::TResult::getMVAResponse</definition>
        <argsstring>() const </argsstring>
        <name>getMVAResponse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the zeroth entry, by convention, this is the efficiency or scale factor or MVA response or... </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" line="63" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="d1/d94/classRoot_1_1TResult_1a763a807d40e3583674810ca12514c298" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Root::TResult::getTotalUncertainty</definition>
        <argsstring>() const </argsstring>
        <name>getTotalUncertainty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the first entry, by convention, this is the total uncertainty </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" line="67" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="d1/d94/classRoot_1_1TResult_1a77c44c9b52c974e97d89cd65206c568c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* Root::TResult::getName</definition>
        <argsstring>() const </argsstring>
        <name>getName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the name of the class instance </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" line="74" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="d1/d94/classRoot_1_1TResult_1a1a48a5d4bdc8302a9a1839781ded8b38" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Root::TResult::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clear all stored values (not the names and descriptions thought) and assign the default value for each result </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" line="79" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" bodystart="78" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="d1/d94/classRoot_1_1TResult_1ae4e120a06563de9f490c553c3182ce50" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int Root::TResult::getNResults</definition>
        <argsstring>() const </argsstring>
        <name>getNResults</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of results defined </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" line="89" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="d1/d94/classRoot_1_1TResult_1ac29132f0031bb68c07df437abc47c839" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TResult::addResult</definition>
        <argsstring>(const TString &amp;resultName, const TString &amp;resultDescription)</argsstring>
        <name>addResult</name>
        <param>
          <type>const TString &amp;</type>
          <declname>resultName</declname>
        </param>
        <param>
          <type>const TString &amp;</type>
          <declname>resultDescription</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a result; returning the result position </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" line="93" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/Root/TResult.cxx" bodystart="86" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="d1/d94/classRoot_1_1TResult_1a0397abe1fd16d2ceb9707433a4971d6f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int Root::TResult::getResultPosition</definition>
        <argsstring>(const TString &amp;resultName) const </argsstring>
        <name>getResultPosition</name>
        <param>
          <type>const TString &amp;</type>
          <declname>resultName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the position of a result </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" line="98" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" bodystart="97" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="d1/d94/classRoot_1_1TResult_1a05f178657b4a1828aad0c0bc3d9c8d37" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const TString &amp;</type>
        <definition>const TString &amp; TResult::getResultName</definition>
        <argsstring>(unsigned int resultPosition) const </argsstring>
        <name>getResultName</name>
        <param>
          <type>unsigned int</type>
          <declname>resultPosition</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the name of a result, based on the result position (slow, avoid usage) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" line="105" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/Root/TResult.cxx" bodystart="105" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="d1/d94/classRoot_1_1TResult_1a84843939b6bbe666df7990e906bda4a0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const TString &amp;</type>
        <definition>const TString&amp; Root::TResult::getResultDescription</definition>
        <argsstring>(const TString &amp;resultName) const </argsstring>
        <name>getResultDescription</name>
        <param>
          <type>const TString &amp;</type>
          <declname>resultName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the description of a result, based on the result name </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" line="110" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" bodystart="109" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="d1/d94/classRoot_1_1TResult_1ae8a0721aee3cd8036cab8bb8b8ff7e13" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const TString &amp;</type>
        <definition>const TString &amp; TResult::getResultDescription</definition>
        <argsstring>(unsigned int resultPosition) const </argsstring>
        <name>getResultDescription</name>
        <param>
          <type>unsigned int</type>
          <declname>resultPosition</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the description of a result, based on the result position </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" line="116" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/Root/TResult.cxx" bodystart="133" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="d1/d94/classRoot_1_1TResult_1a3cae3493713d62f1ad05026c661826c0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Root::TResult::getResult</definition>
        <argsstring>(const TString &amp;resultName) const </argsstring>
        <name>getResult</name>
        <param>
          <type>const TString &amp;</type>
          <declname>resultName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a result, based on the result name (safer) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" line="121" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" bodystart="120" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="d1/d94/classRoot_1_1TResult_1aa1e08dbe5cfa53a7d9221ae0bfc35527" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Root::TResult::getResult</definition>
        <argsstring>(unsigned int resultPosition) const </argsstring>
        <name>getResult</name>
        <param>
          <type>unsigned int</type>
          <declname>resultPosition</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a result, based on the result position (faster) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" line="128" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" bodystart="127" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="d1/d94/classRoot_1_1TResult_1ad69388aec2086cdd20612d325fd72938" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; Root::TResult::getResults</definition>
        <argsstring>() const </argsstring>
        <name>getResults</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the vector of results (Don&apos;t use this as it is slow) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" line="135" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" bodystart="134" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="d1/d94/classRoot_1_1TResult_1a43f51dba755377b723d13ebdd2be73af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Root::TResult::setResult</definition>
        <argsstring>(const TString &amp;resultName, double resultResult)</argsstring>
        <name>setResult</name>
        <param>
          <type>const TString &amp;</type>
          <declname>resultName</declname>
        </param>
        <param>
          <type>double</type>
          <declname>resultResult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a result, based on the result name (safer) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" line="142" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" bodystart="141" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="d1/d94/classRoot_1_1TResult_1ac786ea7ca9bd66e197da0fe44f8f0aa6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Root::TResult::setResult</definition>
        <argsstring>(unsigned int resultPosition, double resultResult)</argsstring>
        <name>setResult</name>
        <param>
          <type>unsigned int</type>
          <declname>resultPosition</declname>
        </param>
        <param>
          <type>double</type>
          <declname>resultResult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a result, based on the result position (faster) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" line="149" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" bodystart="148" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="d1/d94/classRoot_1_1TResult_1a2d5b3ffbbed3cf6c55f7a0a924975449" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Root::TResult::setResultDescription</definition>
        <argsstring>(const TString &amp;resultName, const TString &amp;resultDescription)</argsstring>
        <name>setResultDescription</name>
        <param>
          <type>const TString &amp;</type>
          <declname>resultName</declname>
        </param>
        <param>
          <type>const TString &amp;</type>
          <declname>resultDescription</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a result, based on the result name (safer) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" line="157" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" bodystart="156" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="d1/d94/classRoot_1_1TResult_1aa181fa6a7783a5952033c586f25fe352" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TResult::setResultDescription</definition>
        <argsstring>(unsigned int resultPosition, const TString &amp;resultDescription)</argsstring>
        <name>setResultDescription</name>
        <param>
          <type>unsigned int</type>
          <declname>resultPosition</declname>
        </param>
        <param>
          <type>const TString &amp;</type>
          <declname>resultDescription</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a result, based on the result position (faster) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" line="163" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/Root/TResult.cxx" bodystart="162" bodyend="177"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" line="24" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PATCore/PATCore/TResult.h" bodystart="23" bodyend="193"/>
    <listofallmembers>
      <member refid="d1/d94/classRoot_1_1TResult_1ac29132f0031bb68c07df437abc47c839" prot="public" virt="non-virtual"><scope>Root::TResult</scope><name>addResult</name></member>
      <member refid="d1/d94/classRoot_1_1TResult_1a1a48a5d4bdc8302a9a1839781ded8b38" prot="public" virt="non-virtual"><scope>Root::TResult</scope><name>clear</name></member>
      <member refid="d1/d94/classRoot_1_1TResult_1a15814085f3227a6630bd4dacd78d29f2" prot="public" virt="non-virtual"><scope>Root::TResult</scope><name>getEfficiency</name></member>
      <member refid="d1/d94/classRoot_1_1TResult_1ae4ae197f66e41d47ad9373c60bc5f8db" prot="public" virt="non-virtual"><scope>Root::TResult</scope><name>getMVAResponse</name></member>
      <member refid="d1/d94/classRoot_1_1TResult_1a77c44c9b52c974e97d89cd65206c568c" prot="public" virt="non-virtual"><scope>Root::TResult</scope><name>getName</name></member>
      <member refid="d1/d94/classRoot_1_1TResult_1ae4e120a06563de9f490c553c3182ce50" prot="public" virt="non-virtual"><scope>Root::TResult</scope><name>getNResults</name></member>
      <member refid="d1/d94/classRoot_1_1TResult_1a3cae3493713d62f1ad05026c661826c0" prot="public" virt="non-virtual"><scope>Root::TResult</scope><name>getResult</name></member>
      <member refid="d1/d94/classRoot_1_1TResult_1aa1e08dbe5cfa53a7d9221ae0bfc35527" prot="public" virt="non-virtual"><scope>Root::TResult</scope><name>getResult</name></member>
      <member refid="d1/d94/classRoot_1_1TResult_1a84843939b6bbe666df7990e906bda4a0" prot="public" virt="non-virtual"><scope>Root::TResult</scope><name>getResultDescription</name></member>
      <member refid="d1/d94/classRoot_1_1TResult_1ae8a0721aee3cd8036cab8bb8b8ff7e13" prot="public" virt="non-virtual"><scope>Root::TResult</scope><name>getResultDescription</name></member>
      <member refid="d1/d94/classRoot_1_1TResult_1a05f178657b4a1828aad0c0bc3d9c8d37" prot="public" virt="non-virtual"><scope>Root::TResult</scope><name>getResultName</name></member>
      <member refid="d1/d94/classRoot_1_1TResult_1a0397abe1fd16d2ceb9707433a4971d6f" prot="public" virt="non-virtual"><scope>Root::TResult</scope><name>getResultPosition</name></member>
      <member refid="d1/d94/classRoot_1_1TResult_1ad69388aec2086cdd20612d325fd72938" prot="public" virt="non-virtual"><scope>Root::TResult</scope><name>getResults</name></member>
      <member refid="d1/d94/classRoot_1_1TResult_1a2f7e1cb2f25af6921f3be7affa0f48ef" prot="public" virt="non-virtual"><scope>Root::TResult</scope><name>getScaleFactor</name></member>
      <member refid="d1/d94/classRoot_1_1TResult_1a763a807d40e3583674810ca12514c298" prot="public" virt="non-virtual"><scope>Root::TResult</scope><name>getTotalUncertainty</name></member>
      <member refid="d1/d94/classRoot_1_1TResult_1a25ddeed2d71ee521683d8739988cc57a" prot="private" virt="non-virtual"><scope>Root::TResult</scope><name>m_defaultResult</name></member>
      <member refid="d1/d94/classRoot_1_1TResult_1ad0871d81fca544bb897b23dbc2559705" prot="private" virt="non-virtual"><scope>Root::TResult</scope><name>m_emptyString</name></member>
      <member refid="d1/d94/classRoot_1_1TResult_1ad98666cb07d58700124067b04117a28c" prot="protected" virt="non-virtual"><scope>Root::TResult</scope><name>m_name</name></member>
      <member refid="d1/d94/classRoot_1_1TResult_1ac80658b775983a8811f496c8da7f5556" prot="private" virt="non-virtual"><scope>Root::TResult</scope><name>m_result</name></member>
      <member refid="d1/d94/classRoot_1_1TResult_1a557d360cec1b39762c3ca1b3446f60ee" prot="private" virt="non-virtual"><scope>Root::TResult</scope><name>m_resultMap</name></member>
      <member refid="d1/d94/classRoot_1_1TResult_1a9e345d53fba82fbcc61f3ff9271e7c5c" prot="public" virt="non-virtual"><scope>Root::TResult</scope><name>operator double</name></member>
      <member refid="d1/d94/classRoot_1_1TResult_1a9fd269107bd1d9dde8140f51ce351a26" prot="public" virt="non-virtual"><scope>Root::TResult</scope><name>operator std::pair&lt; double, double &gt;</name></member>
      <member refid="d1/d94/classRoot_1_1TResult_1a4cd008c4a7238489e77ed245a3f34cbb" prot="public" virt="non-virtual"><scope>Root::TResult</scope><name>operator=</name></member>
      <member refid="d1/d94/classRoot_1_1TResult_1a43f51dba755377b723d13ebdd2be73af" prot="public" virt="non-virtual"><scope>Root::TResult</scope><name>setResult</name></member>
      <member refid="d1/d94/classRoot_1_1TResult_1ac786ea7ca9bd66e197da0fe44f8f0aa6" prot="public" virt="non-virtual"><scope>Root::TResult</scope><name>setResult</name></member>
      <member refid="d1/d94/classRoot_1_1TResult_1a2d5b3ffbbed3cf6c55f7a0a924975449" prot="public" virt="non-virtual"><scope>Root::TResult</scope><name>setResultDescription</name></member>
      <member refid="d1/d94/classRoot_1_1TResult_1aa181fa6a7783a5952033c586f25fe352" prot="public" virt="non-virtual"><scope>Root::TResult</scope><name>setResultDescription</name></member>
      <member refid="d1/d94/classRoot_1_1TResult_1ae02bfe6b3b46800571a72b6f05b97f7c" prot="public" virt="non-virtual"><scope>Root::TResult</scope><name>TResult</name></member>
      <member refid="d1/d94/classRoot_1_1TResult_1ac31fd72d0df4ff27a1c0e2e413d7d50f" prot="public" virt="non-virtual"><scope>Root::TResult</scope><name>TResult</name></member>
      <member refid="d1/d94/classRoot_1_1TResult_1a11d144d4803282e65ed122e5d8bb8ba0" prot="public" virt="virtual"><scope>Root::TResult</scope><name>~TResult</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
