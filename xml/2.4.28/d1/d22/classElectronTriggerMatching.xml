<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d1/d22/classElectronTriggerMatching" kind="class" prot="public">
    <compoundname>ElectronTriggerMatching</compoundname>
    <basecompoundref refid="df/d38/classLeptonTriggerMatching" prot="public" virt="non-virtual">LeptonTriggerMatching</basecompoundref>
    <includes refid="de/d4b/ElectronTriggerMatching_8h" local="no">ElectronTriggerMatching.h</includes>
    <innerclass refid="d7/d22/structElectronTriggerMatching_1_1DielectronChainInfo" prot="public">ElectronTriggerMatching::DielectronChainInfo</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d1/d22/classElectronTriggerMatching_1af57b33a183cd89f65a4ab84ed0fce322" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, <ref refid="d7/d22/structElectronTriggerMatching_1_1DielectronChainInfo" kindref="compound">DielectronChainInfo</ref> &gt;</type>
        <definition>std::map&lt;std::string, DielectronChainInfo&gt; ElectronTriggerMatching::m_DielectronChainMap</definition>
        <argsstring></argsstring>
        <name>m_DielectronChainMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/ElectronTriggerMatching.h" line="124" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/ElectronTriggerMatching.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d1/d22/classElectronTriggerMatching_1a602291dd39d5144f9be83e35627ba5e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ElectronTriggerMatching::ElectronTriggerMatching</definition>
        <argsstring>(const MTT__D3PDEvent *d3pd, TTree *TrigConfTree=0)</argsstring>
        <name>ElectronTriggerMatching</name>
        <param>
          <type>const <ref refid="d9/d11/classTriggerNavigationVariables" kindref="compound">MTT__D3PDEvent</ref> *</type>
          <declname>d3pd</declname>
        </param>
        <param>
          <type>TTree *</type>
          <declname>TrigConfTree</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>default constructor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>d3pd</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] class object used for the given ntuple analysis </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TrigConfTree</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] pointer of physicsMeta/TrigConfTree block [optional] </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/ElectronTriggerMatching.h" line="52" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/ElectronTriggerMatching.h" bodystart="48" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/classElectronTriggerMatching_1a149f0686bc8e1011318d0922c93db996" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual ElectronTriggerMatching::~ElectronTriggerMatching</definition>
        <argsstring>()</argsstring>
        <name>~ElectronTriggerMatching</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/ElectronTriggerMatching.h" line="63" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/ElectronTriggerMatching.h" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/classElectronTriggerMatching_1abd055ae0bfde1819ac5996f5620388cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ElectronTriggerMatching::match</definition>
        <argsstring>(const double eta, const double phi, const std::string &amp;chain)</argsstring>
        <name>match</name>
        <param>
          <type>const double</type>
          <declname>eta</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>chain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>look for matching EF electron trigger object</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eta</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] eta of an offline electron </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>phi</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] phi of an offline electron </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chain</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] single electron EF chain name. ex) &quot;EF_mu18&quot; </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if matching EF object was found false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/ElectronTriggerMatching.h" line="76" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/Root/ElectronTriggerMatching.cxx" bodystart="16" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/classElectronTriggerMatching_1a25a3223812bb8946331ec2896893e394" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ElectronTriggerMatching::matchDielectron</definition>
        <argsstring>(const TLorentzVector &amp;electron1, const TLorentzVector &amp;electron2, const std::string &amp;chain, bool &amp;result1, bool &amp;result2)</argsstring>
        <name>matchDielectron</name>
        <param>
          <type>const TLorentzVector &amp;</type>
          <declname>electron1</declname>
        </param>
        <param>
          <type>const TLorentzVector &amp;</type>
          <declname>electron2</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>chain</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>result1</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>result2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>look for matching EF di-electron trigger object</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>electron1</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] TLorentzVector of electron </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>electron2</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] TLorentzVector of electron </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chain</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] di-electron EF chain name. ex) &quot;EF_2e12&quot; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result1</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] bool values indicating if electron1 passed the di-muon trigger. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result2</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] bool values indicating if electron2 passed the di-muon trigger. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if matching EF object was found false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/ElectronTriggerMatching.h" line="91" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/Root/ElectronTriggerMatching.cxx" bodystart="28" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/classElectronTriggerMatching_1a19a82921090fed3c6c335bd11ef3a632" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ElectronTriggerMatching::matchDielectron</definition>
        <argsstring>(const TLorentzVector &amp;electron1, const TLorentzVector &amp;electron2, const std::string &amp;chain, std::pair&lt; bool, bool &gt; &amp;result1, std::pair&lt; bool, bool &gt; &amp;result2)</argsstring>
        <name>matchDielectron</name>
        <param>
          <type>const TLorentzVector &amp;</type>
          <declname>electron1</declname>
        </param>
        <param>
          <type>const TLorentzVector &amp;</type>
          <declname>electron2</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>chain</declname>
        </param>
        <param>
          <type>std::pair&lt; bool, bool &gt; &amp;</type>
          <declname>result1</declname>
        </param>
        <param>
          <type>std::pair&lt; bool, bool &gt; &amp;</type>
          <declname>result2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/ElectronTriggerMatching.h" line="97" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/Root/ElectronTriggerMatching.cxx" bodystart="60" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/classElectronTriggerMatching_1a470fe11062942972b7a17a06adfb6c50" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ElectronTriggerMatching::matchDielectron_python</definition>
        <argsstring>(const TLorentzVector &amp;electron1, const TLorentzVector &amp;electron2, const std::string &amp;chain)</argsstring>
        <name>matchDielectron_python</name>
        <param>
          <type>const TLorentzVector &amp;</type>
          <declname>electron1</declname>
        </param>
        <param>
          <type>const TLorentzVector &amp;</type>
          <declname>electron2</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>chain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/ElectronTriggerMatching.h" line="102" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/ElectronTriggerMatching.h" bodystart="99" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/classElectronTriggerMatching_1a6f672c0aa61f2e7ff82bd10be7aff1a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ElectronTriggerMatching::matchElectronMuon</definition>
        <argsstring>(const TLorentzVector &amp;electron, const TLorentzVector &amp;muon, const std::string &amp;chain)</argsstring>
        <name>matchElectronMuon</name>
        <param>
          <type>const TLorentzVector &amp;</type>
          <declname>electron</declname>
        </param>
        <param>
          <type>const TLorentzVector &amp;</type>
          <declname>muon</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>chain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>look for matching e/mu combined trigger object</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>electron</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] TLorentzVector of electron </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>muon</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] TLorentzVector of muon </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chain</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] electron-muon EF chain name. ex) &quot;EF_e12TVh_medium1_mu8&quot; </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if matching EF object was found false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/ElectronTriggerMatching.h" line="119" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/Root/ElectronTriggerMatching.cxx" bodystart="91" bodyend="137"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d1/d22/classElectronTriggerMatching_1a3467e0767ee9fb8338878288671dbb29" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double ElectronTriggerMatching::matchedTrackDetail</definition>
        <argsstring>(EFelectron &amp;efElectronId, const EFelectron &amp;usedEfElectronId, const double eta, const double phi, const std::string &amp;chainEventTrigger, const std::string &amp;threshold=std::string())</argsstring>
        <name>matchedTrackDetail</name>
        <param>
          <type><ref refid="d6/de0/structLeptonTriggerMatching_1_1EFelectron" kindref="compound">EFelectron</ref> &amp;</type>
          <declname>efElectronId</declname>
        </param>
        <param>
          <type>const <ref refid="d6/de0/structLeptonTriggerMatching_1_1EFelectron" kindref="compound">EFelectron</ref> &amp;</type>
          <declname>usedEfElectronId</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>eta</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>chainEventTrigger</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>threshold</declname>
          <defval>std::string()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/ElectronTriggerMatching.h" line="131" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/Root/ElectronTriggerMatching.cxx" bodystart="145" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/classElectronTriggerMatching_1a0a4b5f2d3edf6fb68c7ed9d0d78c3246" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; bool, bool &gt;</type>
        <definition>std::pair&lt; bool, bool &gt; ElectronTriggerMatching::matchDielectron</definition>
        <argsstring>(const TLorentzVector &amp;electron1, const TLorentzVector &amp;electron2, const DielectronChainInfo &amp;chainInfo)</argsstring>
        <name>matchDielectron</name>
        <param>
          <type>const TLorentzVector &amp;</type>
          <declname>electron1</declname>
        </param>
        <param>
          <type>const TLorentzVector &amp;</type>
          <declname>electron2</declname>
        </param>
        <param>
          <type>const <ref refid="d7/d22/structElectronTriggerMatching_1_1DielectronChainInfo" kindref="compound">DielectronChainInfo</ref> &amp;</type>
          <declname>chainInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/ElectronTriggerMatching.h" line="136" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/Root/ElectronTriggerMatching.cxx" bodystart="189" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/classElectronTriggerMatching_1a6946cf0d1ef11310df44f308330962ad" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ElectronTriggerMatching::decodeDielectronChain</definition>
        <argsstring>(DielectronChainInfo &amp;chainInfo)</argsstring>
        <name>decodeDielectronChain</name>
        <param>
          <type><ref refid="d7/d22/structElectronTriggerMatching_1_1DielectronChainInfo" kindref="compound">DielectronChainInfo</ref> &amp;</type>
          <declname>chainInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/ElectronTriggerMatching.h" line="138" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/Root/ElectronTriggerMatching.cxx" bodystart="215" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/classElectronTriggerMatching_1afe3058655f7de84757dbcb587cf5a9e3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ElectronTriggerMatching::decodeElectronMuonChain</definition>
        <argsstring>(const std::string &amp;chain, std::string &amp;threshold)</argsstring>
        <name>decodeElectronMuonChain</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>chain</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>threshold</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/ElectronTriggerMatching.h" line="141" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/Root/ElectronTriggerMatching.cxx" bodystart="257" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/classElectronTriggerMatching_1a68d644dd14cc0564efa65e5d6a8b7415" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ElectronTriggerMatching::createChainIdMapFromFile</definition>
        <argsstring>()</argsstring>
        <name>createChainIdMapFromFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/ElectronTriggerMatching.h" line="143" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/ElectronChainIdMap.h" bodystart="3" bodyend="147"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Toyonobu Okuyama </para><simplesectsep/><para>Takashi Matsushita This class implements method for electron trigger matching with navigation information in ntuple analysis.</para></simplesect>
Validated on NTUP_SMWZ. Should work on any ntuples which contains trigger navigation information </para>    </detaileddescription>
    <inheritancegraph>
      <node id="5911">
        <label>ElectronTriggerMatching</label>
        <link refid="d1/d22/classElectronTriggerMatching"/>
        <childnode refid="5912" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5912">
        <label>LeptonTriggerMatching</label>
        <link refid="df/d38/classLeptonTriggerMatching"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5915">
        <label>TriggerNavigationVariables</label>
        <link refid="d9/d11/classTriggerNavigationVariables"/>
      </node>
      <node id="5913">
        <label>ElectronTriggerMatching</label>
        <link refid="d1/d22/classElectronTriggerMatching"/>
        <childnode refid="5914" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5914">
        <label>LeptonTriggerMatching</label>
        <link refid="df/d38/classLeptonTriggerMatching"/>
        <childnode refid="5915" relation="usage">
          <edgelabel>m_d3pd</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/ElectronTriggerMatching.h" line="22" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigMuonEfficiency/TrigMuonEfficiency/ElectronTriggerMatching.h" bodystart="22" bodyend="144"/>
    <listofallmembers>
      <member refid="df/d38/classLeptonTriggerMatching_1aef129aede076dfacebaed48eea2a734ca7702ec51f4ad8e504cbb6bc78843984b" prot="public" virt="non-virtual"><scope>ElectronTriggerMatching</scope><name>CHAIN_CB</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1aef129aede076dfacebaed48eea2a734caf2237e8b9c2c5bf463ba2b92e8d42728" prot="public" virt="non-virtual"><scope>ElectronTriggerMatching</scope><name>CHAIN_MG</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1aef129aede076dfacebaed48eea2a734ca6ac3affadf46b886087bc1dd7d195fe6" prot="public" virt="non-virtual"><scope>ElectronTriggerMatching</scope><name>CHAIN_SA</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1a21c8281980c781412b1adbef39914f30" prot="public" virt="non-virtual"><scope>ElectronTriggerMatching</scope><name>createChainIdMapFile</name></member>
      <member refid="d1/d22/classElectronTriggerMatching_1a68d644dd14cc0564efa65e5d6a8b7415" prot="private" virt="non-virtual"><scope>ElectronTriggerMatching</scope><name>createChainIdMapFromFile</name></member>
      <member refid="d1/d22/classElectronTriggerMatching_1a6946cf0d1ef11310df44f308330962ad" prot="private" virt="non-virtual"><scope>ElectronTriggerMatching</scope><name>decodeDielectronChain</name></member>
      <member refid="d1/d22/classElectronTriggerMatching_1afe3058655f7de84757dbcb587cf5a9e3" prot="private" virt="non-virtual"><scope>ElectronTriggerMatching</scope><name>decodeElectronMuonChain</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1a6cdf6401b06699b42561cc1cdcb023dc" prot="protected" virt="non-virtual"><scope>ElectronTriggerMatching</scope><name>dR</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1a281e8198dd1c74d3b405d57c2cb51285" prot="public" virt="non-virtual"><scope>ElectronTriggerMatching</scope><name>dumpChainIdMap</name></member>
      <member refid="d1/d22/classElectronTriggerMatching_1a602291dd39d5144f9be83e35627ba5e0" prot="public" virt="non-virtual"><scope>ElectronTriggerMatching</scope><name>ElectronTriggerMatching</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1ab1a23f6fc8aa2530c8b9cb024f85d93d" prot="protected" virt="non-virtual"><scope>ElectronTriggerMatching</scope><name>getChainIndex</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1aebac2722657a696f4ce15a85b5443237" prot="public" virt="non-virtual"><scope>ElectronTriggerMatching</scope><name>getDeltaR</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1af5ba15a67d9af599d46134c556e02c43" prot="protected" virt="non-virtual"><scope>ElectronTriggerMatching</scope><name>getL1pt</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1aa4685968760881a700b4f79a51d605c5" prot="protected" virt="non-virtual"><scope>ElectronTriggerMatching</scope><name>index_match</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1a95096c18b4a7207c8f7cfeed8001bd32" prot="protected" virt="non-virtual"><scope>ElectronTriggerMatching</scope><name>isEqual</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1a4e54027a3b6d064ac0f3bf5fc08f7bcf" prot="protected" virt="non-virtual"><scope>ElectronTriggerMatching</scope><name>L1_isPassed</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1af23b737ca14958a176c50482ec767c43" prot="public" virt="non-virtual"><scope>ElectronTriggerMatching</scope><name>LeptonTriggerMatching</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1a0d15e51ff680f2356764b342e1c663a6" prot="protected" virt="non-virtual"><scope>ElectronTriggerMatching</scope><name>m_d3pd</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1afae2c16988ff9c95941d339241873864" prot="protected" virt="non-virtual"><scope>ElectronTriggerMatching</scope><name>m_debug</name></member>
      <member refid="d1/d22/classElectronTriggerMatching_1af57b33a183cd89f65a4ab84ed0fce322" prot="private" virt="non-virtual"><scope>ElectronTriggerMatching</scope><name>m_DielectronChainMap</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1adc88e509aee21a50424fd1335b9d8fc7" prot="protected" virt="non-virtual"><scope>ElectronTriggerMatching</scope><name>m_isIndexMatchUsed</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1a2f4c5c51baa97a40e3c75660d8e29d2a" prot="protected" virt="non-virtual"><scope>ElectronTriggerMatching</scope><name>m_isNavigationMatchUsed</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1ab3ac9eecc3335e6a8a066dbc269d34bc" prot="protected" virt="non-virtual"><scope>ElectronTriggerMatching</scope><name>m_MapOfChainIdMap</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1a856b639bbf36ff60a8221c48d2753801" prot="protected" virt="non-virtual"><scope>ElectronTriggerMatching</scope><name>m_matchingDr</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1a5d1b810ec7df1f09aa6c473bb1ab5bd5" prot="protected" virt="non-virtual"><scope>ElectronTriggerMatching</scope><name>m_NotFoundChain</name></member>
      <member refid="d1/d22/classElectronTriggerMatching_1abd055ae0bfde1819ac5996f5620388cf" prot="public" virt="non-virtual"><scope>ElectronTriggerMatching</scope><name>match</name></member>
      <member refid="d1/d22/classElectronTriggerMatching_1a25a3223812bb8946331ec2896893e394" prot="public" virt="non-virtual"><scope>ElectronTriggerMatching</scope><name>matchDielectron</name></member>
      <member refid="d1/d22/classElectronTriggerMatching_1a19a82921090fed3c6c335bd11ef3a632" prot="public" virt="non-virtual"><scope>ElectronTriggerMatching</scope><name>matchDielectron</name></member>
      <member refid="d1/d22/classElectronTriggerMatching_1a0a4b5f2d3edf6fb68c7ed9d0d78c3246" prot="private" virt="non-virtual"><scope>ElectronTriggerMatching</scope><name>matchDielectron</name></member>
      <member refid="d1/d22/classElectronTriggerMatching_1a470fe11062942972b7a17a06adfb6c50" prot="public" virt="non-virtual"><scope>ElectronTriggerMatching</scope><name>matchDielectron_python</name></member>
      <member refid="d1/d22/classElectronTriggerMatching_1a3467e0767ee9fb8338878288671dbb29" prot="private" virt="non-virtual"><scope>ElectronTriggerMatching</scope><name>matchedTrackDetail</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1a03cc8544dab5fdbc2d3edd3d621b4ad3" prot="protected" virt="non-virtual" ambiguityscope="LeptonTriggerMatching::"><scope>ElectronTriggerMatching</scope><name>matchedTrackDetail</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1ab95fa2e2fcc840496c5be860a1e7f1eb" prot="protected" virt="non-virtual" ambiguityscope="LeptonTriggerMatching::"><scope>ElectronTriggerMatching</scope><name>matchedTrackDetail</name></member>
      <member refid="d1/d22/classElectronTriggerMatching_1a6f672c0aa61f2e7ff82bd10be7aff1a6" prot="public" virt="non-virtual"><scope>ElectronTriggerMatching</scope><name>matchElectronMuon</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1aef129aede076dfacebaed48eea2a734c" prot="public" virt="non-virtual"><scope>ElectronTriggerMatching</scope><name>MuonChainType</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1ae03b08960ae00b6f90629270972a97eb" prot="protected" virt="non-virtual"><scope>ElectronTriggerMatching</scope><name>readTrigConfTree</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1a1e185959e78e94e1d210d6c0ddb0e384" prot="public" virt="non-virtual"><scope>ElectronTriggerMatching</scope><name>setDebug</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1a1d02d82cc7447f48c94f70715ee16f70" prot="public" virt="non-virtual"><scope>ElectronTriggerMatching</scope><name>setDeltaR</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1aaa92d9740069466b00e0ef2b74fe861a" prot="public" virt="non-virtual"><scope>ElectronTriggerMatching</scope><name>setTriggerNavigationVariables</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1a6a4984e45e938d6f6ab75cc6deaca76b" prot="public" virt="non-virtual"><scope>ElectronTriggerMatching</scope><name>showSMKeys</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1ac6442a640bd5f1857414e0367b1b9d72" prot="protected" virt="non-virtual"><scope>ElectronTriggerMatching</scope><name>tokenize</name></member>
      <member refid="d1/d22/classElectronTriggerMatching_1a149f0686bc8e1011318d0922c93db996" prot="public" virt="virtual"><scope>ElectronTriggerMatching</scope><name>~ElectronTriggerMatching</name></member>
      <member refid="df/d38/classLeptonTriggerMatching_1a88dbb2b105a2c462a336c81873613739" prot="public" virt="virtual"><scope>ElectronTriggerMatching</scope><name>~LeptonTriggerMatching</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
