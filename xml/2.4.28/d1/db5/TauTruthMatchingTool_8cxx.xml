<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d1/db5/TauTruthMatchingTool_8cxx" kind="file">
    <compoundname>TauTruthMatchingTool.cxx</compoundname>
    <includes refid="d3/dce/TauTruthMatchingTool_8h" local="no">TauAnalysisTools/TauTruthMatchingTool.h</includes>
    <includes refid="dc/d24/ElementLink_8h" local="yes">AthLinks/ElementLink.h</includes>
    <includes refid="dc/dcc/TruthVertex_8h" local="yes">xAODTruth/TruthVertex.h</includes>
    <includes refid="d9/d60/EventInfo_8h" local="yes">xAODEventInfo/EventInfo.h</includes>
    <includes refid="de/da2/MCTruthClassifier_8h" local="yes">MCTruthClassifier/MCTruthClassifier.h</includes>
    <incdepgraph>
      <node id="277926">
        <label>list</label>
      </node>
      <node id="278034">
        <label>AthContainers/tools/DVL_algorithms.icc</label>
        <link refid="df/daa/DVL__algorithms_8icc"/>
        <childnode refid="278020" relation="include">
        </childnode>
        <childnode refid="278026" relation="include">
        </childnode>
        <childnode refid="277949" relation="include">
        </childnode>
        <childnode refid="278016" relation="include">
        </childnode>
        <childnode refid="277956" relation="include">
        </childnode>
      </node>
      <node id="278020">
        <label>AthContainers/tools/DVLNoBase.h</label>
        <link refid="d7/d92/DVLNoBase_8h"/>
      </node>
      <node id="277993">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="278041">
        <label>AthContainers/tools/DVLDataBucket.h</label>
        <link refid="d4/d16/DVLDataBucket_8h"/>
        <childnode refid="278042" relation="include">
        </childnode>
        <childnode refid="278021" relation="include">
        </childnode>
        <childnode refid="277963" relation="include">
        </childnode>
        <childnode refid="278043" relation="include">
        </childnode>
      </node>
      <node id="277925">
        <label>atomic</label>
      </node>
      <node id="277995">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="277955" relation="include">
        </childnode>
        <childnode refid="277957" relation="include">
        </childnode>
        <childnode refid="277963" relation="include">
        </childnode>
        <childnode refid="277964" relation="include">
        </childnode>
      </node>
      <node id="277914">
        <label>AsgTools/IAsgTool.h</label>
        <link refid="df/dd4/IAsgTool_8h_source"/>
        <childnode refid="277915" relation="include">
        </childnode>
        <childnode refid="277913" relation="include">
        </childnode>
        <childnode refid="277916" relation="include">
        </childnode>
        <childnode refid="277917" relation="include">
        </childnode>
      </node>
      <node id="278150">
        <label>xAODEventInfo/EventInfo.h</label>
        <link refid="d9/d60/EventInfo_8h_source"/>
        <childnode refid="278151" relation="include">
        </childnode>
        <childnode refid="278068" relation="include">
        </childnode>
      </node>
      <node id="277996">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="277966">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="277951" relation="include">
        </childnode>
        <childnode refid="277953" relation="include">
        </childnode>
        <childnode refid="277967" relation="include">
        </childnode>
        <childnode refid="277965" relation="include">
        </childnode>
      </node>
      <node id="278057">
        <label>EventPrimitives/EventPrimitives.h</label>
        <link refid="d1/d54/EventPrimitives_8h_source"/>
        <childnode refid="278058" relation="include">
        </childnode>
        <childnode refid="278059" relation="include">
        </childnode>
        <childnode refid="278060" relation="include">
        </childnode>
      </node>
      <node id="277962">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="277964">
        <label>functional</label>
      </node>
      <node id="278017">
        <label>boost/version.hpp</label>
      </node>
      <node id="277961">
        <label>limits</label>
      </node>
      <node id="277967">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="278113">
        <label>xAODBTagging/versions/BTaggingContainer_v1.h</label>
        <link refid="d9/d93/BTaggingContainer__v1_8h_source"/>
        <childnode refid="278011" relation="include">
        </childnode>
        <childnode refid="278092" relation="include">
        </childnode>
      </node>
      <node id="278049">
        <label>xAODTruth/TruthVertexFwd.h</label>
        <link refid="d5/d1a/TruthVertexFwd_8h_source"/>
      </node>
      <node id="277991">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="277917">
        <label>GaudiKernel/IAlgTool.h</label>
      </node>
      <node id="277922">
        <label>AsgTools/Deprecated.h</label>
        <link refid="d4/d77/AsgTools_2AsgTools_2Deprecated_8h_source"/>
      </node>
      <node id="277958">
        <label>iterator</label>
      </node>
      <node id="278078">
        <label>xAODCaloEvent/versions/CaloClusterBadChannelData_v1.h</label>
        <link refid="d5/d3a/CaloClusterBadChannelData__v1_8h_source"/>
        <childnode refid="278075" relation="include">
        </childnode>
        <childnode refid="277933" relation="include">
        </childnode>
      </node>
      <node id="278141">
        <label>xAODCore/AuxContainerBase.h</label>
        <link refid="d0/d70/AuxContainerBase_8h_source"/>
        <childnode refid="277933" relation="include">
        </childnode>
        <childnode refid="277915" relation="include">
        </childnode>
        <childnode refid="277966" relation="include">
        </childnode>
        <childnode refid="278142" relation="include">
        </childnode>
        <childnode refid="278143" relation="include">
        </childnode>
        <childnode refid="277989" relation="include">
        </childnode>
        <childnode refid="277977" relation="include">
        </childnode>
        <childnode refid="277998" relation="include">
        </childnode>
        <childnode refid="278144" relation="include">
        </childnode>
        <childnode refid="278068" relation="include">
        </childnode>
        <childnode refid="278107" relation="include">
        </childnode>
      </node>
      <node id="277979">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="277915" relation="include">
        </childnode>
        <childnode refid="277980" relation="include">
        </childnode>
      </node>
      <node id="278088">
        <label>xAODJet/Jet.h</label>
        <link refid="da/db7/Jet_8h_source"/>
        <childnode refid="278089" relation="include">
        </childnode>
        <childnode refid="278068" relation="include">
        </childnode>
      </node>
      <node id="278143">
        <label>AthContainersInterfaces/IAuxStoreHolder.h</label>
        <link refid="d7/dab/IAuxStoreHolder_8h_source"/>
      </node>
      <node id="278080">
        <label>CaloEvent/CaloRecoStatus.h</label>
      </node>
      <node id="278111">
        <label>xAODBTagging/versions/BTagVertex_v1.h</label>
        <link refid="d6/df4/BTagVertex__v1_8h_source"/>
        <childnode refid="277949" relation="include">
        </childnode>
        <childnode refid="277940" relation="include">
        </childnode>
        <childnode refid="277947" relation="include">
        </childnode>
        <childnode refid="278071" relation="include">
        </childnode>
        <childnode refid="278061" relation="include">
        </childnode>
        <childnode refid="278095" relation="include">
        </childnode>
        <childnode refid="278094" relation="include">
        </childnode>
        <childnode refid="277927" relation="include">
        </childnode>
        <childnode refid="277933" relation="include">
        </childnode>
        <childnode refid="277915" relation="include">
        </childnode>
        <childnode refid="277965" relation="include">
        </childnode>
      </node>
      <node id="278126">
        <label>xAODJet/versions/JetContainer_v1.h</label>
        <link refid="df/d28/JetContainer__v1_8h_source"/>
        <childnode refid="278011" relation="include">
        </childnode>
        <childnode refid="278089" relation="include">
        </childnode>
      </node>
      <node id="278040">
        <label>SGTools/ClassName.h</label>
      </node>
      <node id="278121">
        <label>xAODTruth/versions/TruthParticleContainer_v1.h</label>
        <link refid="dd/d30/TruthParticleContainer__v1_8h_source"/>
        <childnode refid="278011" relation="include">
        </childnode>
        <childnode refid="278071" relation="include">
        </childnode>
        <childnode refid="277939" relation="include">
        </childnode>
        <childnode refid="278122" relation="include">
        </childnode>
      </node>
      <node id="278050">
        <label>xAODMuon/Muon.h</label>
        <link refid="d2/dfd/Muon_8h_source"/>
        <childnode refid="278051" relation="include">
        </childnode>
      </node>
      <node id="278046">
        <label>AthContainers/DataVector.icc</label>
        <link refid="da/de6/DataVector_8icc"/>
        <childnode refid="278047" relation="include">
        </childnode>
        <childnode refid="278015" relation="include">
        </childnode>
        <childnode refid="277961" relation="include">
        </childnode>
        <childnode refid="277964" relation="include">
        </childnode>
        <childnode refid="278048" relation="include">
        </childnode>
      </node>
      <node id="278003">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="277952" relation="include">
        </childnode>
        <childnode refid="278004" relation="include">
        </childnode>
        <childnode refid="278005" relation="include">
        </childnode>
        <childnode refid="277972" relation="include">
        </childnode>
        <childnode refid="277915" relation="include">
        </childnode>
      </node>
      <node id="277976">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="277933" relation="include">
        </childnode>
        <childnode refid="277959" relation="include">
        </childnode>
      </node>
      <node id="277941">
        <label>stdint.h</label>
      </node>
      <node id="278026">
        <label>AthContainers/tools/DVLCast.h</label>
        <link refid="df/d5c/DVLCast_8h"/>
        <childnode refid="277961" relation="include">
        </childnode>
        <childnode refid="278027" relation="include">
        </childnode>
        <childnode refid="277972" relation="include">
        </childnode>
        <childnode refid="277959" relation="include">
        </childnode>
        <childnode refid="277953" relation="include">
        </childnode>
      </node>
      <node id="278013">
        <label>AthContainers/IndexTrackingPolicy.h</label>
        <link refid="d0/da5/IndexTrackingPolicy_8h"/>
      </node>
      <node id="277973">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="277953" relation="include">
        </childnode>
        <childnode refid="277972" relation="include">
        </childnode>
      </node>
      <node id="278098">
        <label>Eigen/Geometry</label>
      </node>
      <node id="278142">
        <label>AthContainersInterfaces/IAuxStoreIO.h</label>
        <link refid="d9/db5/IAuxStoreIO_8h"/>
        <childnode refid="277952" relation="include">
        </childnode>
        <childnode refid="277972" relation="include">
        </childnode>
        <childnode refid="278124" relation="include">
        </childnode>
        <childnode refid="277965" relation="include">
        </childnode>
      </node>
      <node id="277944">
        <label>RVersion.h</label>
      </node>
      <node id="278133">
        <label>xAODPFlow/versions/PFO_v1.h</label>
        <link refid="d0/d00/PFO__v1_8h_source"/>
        <childnode refid="277940" relation="include">
        </childnode>
        <childnode refid="278134" relation="include">
        </childnode>
        <childnode refid="277947" relation="include">
        </childnode>
        <childnode refid="278071" relation="include">
        </childnode>
        <childnode refid="278136" relation="include">
        </childnode>
        <childnode refid="278073" relation="include">
        </childnode>
        <childnode refid="278072" relation="include">
        </childnode>
        <childnode refid="278094" relation="include">
        </childnode>
        <childnode refid="278062" relation="include">
        </childnode>
        <childnode refid="278061" relation="include">
        </childnode>
        <childnode refid="278137" relation="include">
        </childnode>
        <childnode refid="278011" relation="include">
        </childnode>
      </node>
      <node id="277954">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="277955" relation="include">
        </childnode>
        <childnode refid="277963" relation="include">
        </childnode>
        <childnode refid="277964" relation="include">
        </childnode>
      </node>
      <node id="278081">
        <label>xAODCaloEvent/versions/CaloClusterContainer_v1.h</label>
        <link refid="d8/dda/CaloClusterContainer__v1_8h_source"/>
        <childnode refid="278011" relation="include">
        </childnode>
        <childnode refid="278071" relation="include">
        </childnode>
        <childnode refid="278074" relation="include">
        </childnode>
      </node>
      <node id="277960">
        <label>cmath</label>
      </node>
      <node id="278127">
        <label>TauAnalysisTools/ITauTruthMatchingTool.h</label>
        <link refid="db/dda/ITauTruthMatchingTool_8h_source"/>
        <childnode refid="277914" relation="include">
        </childnode>
        <childnode refid="278128" relation="include">
        </childnode>
        <childnode refid="278120" relation="include">
        </childnode>
        <childnode refid="278139" relation="include">
        </childnode>
        <childnode refid="278149" relation="include">
        </childnode>
      </node>
      <node id="278007">
        <label>cassert</label>
      </node>
      <node id="278018">
        <label>boost/mpl/if.hpp</label>
      </node>
      <node id="278036">
        <label>boost/static_assert.hpp</label>
      </node>
      <node id="278083">
        <label>xAODMuon/MuonSegment.h</label>
        <link refid="de/d5b/MuonSegment_8h_source"/>
        <childnode refid="278084" relation="include">
        </childnode>
      </node>
      <node id="278005">
        <label>stdexcept</label>
      </node>
      <node id="277918">
        <label>AsgTools/MsgLevel.h</label>
        <link refid="de/d80/MsgLevel_8h"/>
        <childnode refid="277915" relation="include">
        </childnode>
        <childnode refid="277913" relation="include">
        </childnode>
        <childnode refid="277919" relation="include">
        </childnode>
      </node>
      <node id="277994">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="278059">
        <label>Eigen/Core</label>
      </node>
      <node id="278024">
        <label>boost/type_traits/is_pointer.hpp</label>
      </node>
      <node id="278064">
        <label>xAODTracking/VertexContainerFwd.h</label>
        <link refid="d0/dc4/VertexContainerFwd_8h_source"/>
        <childnode refid="278011" relation="include">
        </childnode>
        <childnode refid="278065" relation="include">
        </childnode>
      </node>
      <node id="278070">
        <label>xAODTracking/TrackParticleContainerFwd.h</label>
        <link refid="de/dea/TrackParticleContainerFwd_8h_source"/>
        <childnode refid="278011" relation="include">
        </childnode>
        <childnode refid="278071" relation="include">
        </childnode>
        <childnode refid="277936" relation="include">
        </childnode>
      </node>
      <node id="278031">
        <label>boost/iterator/iterator_adaptor.hpp</label>
      </node>
      <node id="277948">
        <label>TLorentzVector.h</label>
      </node>
      <node id="277935">
        <label>xAODEgamma/PhotonFwd.h</label>
        <link refid="dd/d2c/PhotonFwd_8h_source"/>
      </node>
      <node id="277939">
        <label>xAODTruth/versions/TruthParticle_v1.h</label>
        <link refid="d3/d3b/TruthParticle__v1_8h_source"/>
        <childnode refid="277940" relation="include">
        </childnode>
        <childnode refid="277947" relation="include">
        </childnode>
        <childnode refid="278008" relation="include">
        </childnode>
        <childnode refid="278010" relation="include">
        </childnode>
      </node>
      <node id="277913">
        <label>AsgTools/AsgToolsConf.h</label>
        <link refid="df/db7/AsgToolsConf_8h_source"/>
      </node>
      <node id="278146">
        <label>xAODTruth/TruthVertex.h</label>
        <link refid="dc/dcc/TruthVertex_8h_source"/>
        <childnode refid="278147" relation="include">
        </childnode>
      </node>
      <node id="278075">
        <label>CaloGeoHelpers/CaloSampling.h</label>
        <link refid="d7/d85/CaloSampling_8h_source"/>
        <childnode refid="277915" relation="include">
        </childnode>
        <childnode refid="278076" relation="include">
        </childnode>
      </node>
      <node id="277915">
        <label>string</label>
      </node>
      <node id="277997">
        <label>AthContainers/AuxVectorData.h</label>
        <link refid="d9/df2/AuxVectorData_8h"/>
        <childnode refid="277952" relation="include">
        </childnode>
        <childnode refid="277951" relation="include">
        </childnode>
        <childnode refid="277979" relation="include">
        </childnode>
        <childnode refid="277976" relation="include">
        </childnode>
        <childnode refid="277968" relation="include">
        </childnode>
        <childnode refid="277998" relation="include">
        </childnode>
        <childnode refid="277999" relation="include">
        </childnode>
        <childnode refid="277982" relation="include">
        </childnode>
        <childnode refid="277933" relation="include">
        </childnode>
        <childnode refid="277957" relation="include">
        </childnode>
        <childnode refid="277959" relation="include">
        </childnode>
        <childnode refid="278000" relation="include">
        </childnode>
        <childnode refid="278001" relation="include">
        </childnode>
        <childnode refid="277989" relation="include">
        </childnode>
        <childnode refid="278002" relation="include">
        </childnode>
      </node>
      <node id="277971">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="277953" relation="include">
        </childnode>
        <childnode refid="277972" relation="include">
        </childnode>
      </node>
      <node id="278063">
        <label>versions/TrackParticle_v1.h</label>
        <link refid="d2/d7f/TrackParticle__v1_8h_source"/>
        <childnode refid="278053" relation="include">
        </childnode>
        <childnode refid="277941" relation="include">
        </childnode>
        <childnode refid="277940" relation="include">
        </childnode>
        <childnode refid="278011" relation="include">
        </childnode>
        <childnode refid="277947" relation="include">
        </childnode>
        <childnode refid="278056" relation="include">
        </childnode>
        <childnode refid="278064" relation="include">
        </childnode>
        <childnode refid="278066" relation="include">
        </childnode>
        <childnode refid="278067" relation="include">
        </childnode>
      </node>
      <node id="278000">
        <label>AthContainers/tools/likely.h</label>
        <link refid="d6/dd6/likely_8h"/>
      </node>
      <node id="278087">
        <label>xAODMuon/versions/MuonSegmentContainer_v1.h</label>
        <link refid="dd/dcd/MuonSegmentContainer__v1_8h_source"/>
        <childnode refid="278011" relation="include">
        </childnode>
        <childnode refid="278084" relation="include">
        </childnode>
      </node>
      <node id="278092">
        <label>xAODBTagging/versions/BTagging_v1.h</label>
        <link refid="dc/da1/BTagging__v1_8h_source"/>
        <childnode refid="277949" relation="include">
        </childnode>
        <childnode refid="277940" relation="include">
        </childnode>
        <childnode refid="278093" relation="include">
        </childnode>
        <childnode refid="278061" relation="include">
        </childnode>
        <childnode refid="278094" relation="include">
        </childnode>
        <childnode refid="278109" relation="include">
        </childnode>
        <childnode refid="277927" relation="include">
        </childnode>
        <childnode refid="277933" relation="include">
        </childnode>
        <childnode refid="277915" relation="include">
        </childnode>
        <childnode refid="278038" relation="include">
        </childnode>
        <childnode refid="277965" relation="include">
        </childnode>
      </node>
      <node id="278089">
        <label>xAODJet/versions/Jet_v1.h</label>
        <link refid="df/d71/Jet__v1_8h_source"/>
        <childnode refid="277927" relation="include">
        </childnode>
        <childnode refid="277940" relation="include">
        </childnode>
        <childnode refid="277947" relation="include">
        </childnode>
        <childnode refid="278071" relation="include">
        </childnode>
        <childnode refid="278090" relation="include">
        </childnode>
        <childnode refid="278114" relation="include">
        </childnode>
        <childnode refid="278117" relation="include">
        </childnode>
        <childnode refid="278115" relation="include">
        </childnode>
        <childnode refid="278118" relation="include">
        </childnode>
      </node>
      <node id="278028">
        <label>AthContainers/tools/DVLIterator.h</label>
        <link refid="d3/dc7/DVLIterator_8h_source"/>
        <childnode refid="278012" relation="include">
        </childnode>
        <childnode refid="278026" relation="include">
        </childnode>
        <childnode refid="278029" relation="include">
        </childnode>
        <childnode refid="278031" relation="include">
        </childnode>
        <childnode refid="278017" relation="include">
        </childnode>
        <childnode refid="277958" relation="include">
        </childnode>
        <childnode refid="277959" relation="include">
        </childnode>
      </node>
      <node id="277932">
        <label>MCTruthClassifier/MCTruthClassifierDefs.h</label>
        <link refid="d2/de7/MCTruthClassifierDefs_8h_source"/>
        <childnode refid="277933" relation="include">
        </childnode>
        <childnode refid="277915" relation="include">
        </childnode>
      </node>
      <node id="278042">
        <label>SGTools/DataBucket.h</label>
      </node>
      <node id="278054">
        <label>xAODPrimitives/IsolationType.h</label>
        <link refid="d2/d36/IsolationType_8h_source"/>
      </node>
      <node id="277927">
        <label>map</label>
      </node>
      <node id="278122">
        <label>xAODTruth/TruthParticleContainerFwd.h</label>
        <link refid="dd/d8f/TruthParticleContainerFwd_8h_source"/>
        <childnode refid="278011" relation="include">
        </childnode>
        <childnode refid="278071" relation="include">
        </childnode>
        <childnode refid="278123" relation="include">
        </childnode>
      </node>
      <node id="278043">
        <label>AthContainers/tools/DVLDataBucket.icc</label>
        <link refid="d3/d21/DVLDataBucket_8icc"/>
        <childnode refid="278044" relation="include">
        </childnode>
      </node>
      <node id="278119">
        <label>xAODTau/TauxAODHelpers.h</label>
        <link refid="de/d06/TauxAODHelpers_8h_source"/>
        <childnode refid="278120" relation="include">
        </childnode>
        <childnode refid="277938" relation="include">
        </childnode>
        <childnode refid="277953" relation="include">
        </childnode>
        <childnode refid="278124" relation="include">
        </childnode>
      </node>
      <node id="278052">
        <label>xAODPrimitives/IsolationCorrection.h</label>
        <link refid="d3/de5/xAODPrimitives_2xAODPrimitives_2IsolationCorrection_8h_source"/>
        <childnode refid="278053" relation="include">
        </childnode>
        <childnode refid="277933" relation="include">
        </childnode>
      </node>
      <node id="278044">
        <label>SGTools/IRegisterTransient.h</label>
      </node>
      <node id="277945">
        <label>RootMetaSelection.h</label>
      </node>
      <node id="277986">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="277931">
        <label>MCTruthClassifier/IMCTruthClassifier.h</label>
        <link refid="d6/d1f/IMCTruthClassifier_8h_source"/>
        <childnode refid="277914" relation="include">
        </childnode>
        <childnode refid="277932" relation="include">
        </childnode>
        <childnode refid="277933" relation="include">
        </childnode>
        <childnode refid="277934" relation="include">
        </childnode>
        <childnode refid="277935" relation="include">
        </childnode>
        <childnode refid="277936" relation="include">
        </childnode>
        <childnode refid="277937" relation="include">
        </childnode>
        <childnode refid="277938" relation="include">
        </childnode>
        <childnode refid="278050" relation="include">
        </childnode>
        <childnode refid="278088" relation="include">
        </childnode>
      </node>
      <node id="278099">
        <label>VxVertex/VxTrackAtVertex.h</label>
      </node>
      <node id="277921">
        <label>AsgTools/AnaToolHandle.h</label>
        <link refid="de/dc4/AnaToolHandle_8h_source"/>
        <childnode refid="277912" relation="include">
        </childnode>
        <childnode refid="277922" relation="include">
        </childnode>
        <childnode refid="277923" relation="include">
        </childnode>
        <childnode refid="277925" relation="include">
        </childnode>
        <childnode refid="277926" relation="include">
        </childnode>
        <childnode refid="277927" relation="include">
        </childnode>
        <childnode refid="277928" relation="include">
        </childnode>
      </node>
      <node id="278033">
        <label>AthContainers/tools/DVL_algorithms.h</label>
        <link refid="d0/d7a/DVL__algorithms_8h"/>
        <childnode refid="278028" relation="include">
        </childnode>
        <childnode refid="277958" relation="include">
        </childnode>
        <childnode refid="277956" relation="include">
        </childnode>
        <childnode refid="278034" relation="include">
        </childnode>
      </node>
      <node id="278001">
        <label>AthContainers/tools/assume.h</label>
        <link refid="d2/d20/assume_8h"/>
      </node>
      <node id="278084">
        <label>versions/MuonSegment_v1.h</label>
        <link refid="df/d0d/MuonSegment__v1_8h_source"/>
        <childnode refid="277949" relation="include">
        </childnode>
        <childnode refid="277940" relation="include">
        </childnode>
        <childnode refid="278085" relation="include">
        </childnode>
        <childnode refid="278086" relation="include">
        </childnode>
      </node>
      <node id="278116">
        <label>Math/Vector4D.h</label>
      </node>
      <node id="277983">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="278094">
        <label>xAODTracking/VertexContainer.h</label>
        <link refid="d6/dd8/VertexContainer_8h_source"/>
        <childnode refid="278095" relation="include">
        </childnode>
        <childnode refid="278108" relation="include">
        </childnode>
        <childnode refid="278068" relation="include">
        </childnode>
      </node>
      <node id="278029">
        <label>AthContainers/tools/ElementProxy.h</label>
        <link refid="db/d26/ElementProxy_8h"/>
        <childnode refid="278012" relation="include">
        </childnode>
        <childnode refid="277943" relation="include">
        </childnode>
        <childnode refid="277963" relation="include">
        </childnode>
        <childnode refid="278030" relation="include">
        </childnode>
      </node>
      <node id="277950">
        <label>AthContainersInterfaces/IAuxElement.h</label>
        <link refid="dd/d7a/IAuxElement_8h"/>
      </node>
      <node id="277919">
        <label>GaudiKernel/IMessageSvc.h</label>
      </node>
      <node id="277943">
        <label>AthLinks/tools/selection_ns.h</label>
        <link refid="d3/dec/selection__ns_8h"/>
        <childnode refid="277944" relation="include">
        </childnode>
        <childnode refid="277945" relation="include">
        </childnode>
      </node>
      <node id="277999">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="277992">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="278085">
        <label>MuonIdHelpers/MuonStationIndex.h</label>
        <link refid="d5/d3f/MuonStationIndex_8h_source"/>
        <childnode refid="277915" relation="include">
        </childnode>
        <childnode refid="277933" relation="include">
        </childnode>
      </node>
      <node id="277936">
        <label>xAODTracking/TrackParticleFwd.h</label>
        <link refid="d1/dc4/TrackParticleFwd_8h_source"/>
      </node>
      <node id="278093">
        <label>xAODBTagging/BTaggingEnums.h</label>
        <link refid="dd/de5/BTaggingEnums_8h_source"/>
      </node>
      <node id="278027">
        <label>limits.h</label>
      </node>
      <node id="278082">
        <label>xAODMuon/MuonSegmentContainer.h</label>
        <link refid="d5/d26/MuonSegmentContainer_8h_source"/>
        <childnode refid="278083" relation="include">
        </childnode>
        <childnode refid="278087" relation="include">
        </childnode>
        <childnode refid="278068" relation="include">
        </childnode>
      </node>
      <node id="277911">
        <label>AsgTools/AsgMetadataTool.h</label>
        <link refid="dc/dde/AsgMetadataTool_8h_source"/>
        <childnode refid="277912" relation="include">
        </childnode>
      </node>
      <node id="278022">
        <label>AthContainers/tools/ClassID.h</label>
        <link refid="de/de2/ClassID_8h"/>
        <childnode refid="278023" relation="include">
        </childnode>
      </node>
      <node id="278051">
        <label>versions/Muon_v1.h</label>
        <link refid="da/dde/Muon__v1_8h_source"/>
        <childnode refid="277949" relation="include">
        </childnode>
        <childnode refid="277940" relation="include">
        </childnode>
        <childnode refid="278052" relation="include">
        </childnode>
        <childnode refid="278054" relation="include">
        </childnode>
        <childnode refid="278055" relation="include">
        </childnode>
        <childnode refid="277947" relation="include">
        </childnode>
        <childnode refid="278056" relation="include">
        </childnode>
        <childnode refid="278061" relation="include">
        </childnode>
        <childnode refid="278072" relation="include">
        </childnode>
        <childnode refid="278082" relation="include">
        </childnode>
        <childnode refid="278053" relation="include">
        </childnode>
        <childnode refid="277941" relation="include">
        </childnode>
        <childnode refid="278068" relation="include">
        </childnode>
        <childnode refid="278011" relation="include">
        </childnode>
      </node>
      <node id="278108">
        <label>xAODTracking/versions/VertexContainer_v1.h</label>
        <link refid="d2/dda/VertexContainer__v1_8h_source"/>
        <childnode refid="278011" relation="include">
        </childnode>
        <childnode refid="278096" relation="include">
        </childnode>
      </node>
      <node id="277978">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="277979" relation="include">
        </childnode>
        <childnode refid="277961" relation="include">
        </childnode>
        <childnode refid="277941" relation="include">
        </childnode>
        <childnode refid="277981" relation="include">
        </childnode>
      </node>
      <node id="277924">
        <label>GaudiKernel/ToolHandle.h</label>
      </node>
      <node id="277952">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="277953" relation="include">
        </childnode>
        <childnode refid="277954" relation="include">
        </childnode>
      </node>
      <node id="278137">
        <label>TVector3.h</label>
      </node>
      <node id="277942">
        <label>AthLinks/ElementLinkBase.h</label>
        <link refid="d0/d16/ElementLinkBase_8h_source"/>
        <childnode refid="277941" relation="include">
        </childnode>
      </node>
      <node id="278060">
        <label>Eigen/Dense</label>
      </node>
      <node id="277955">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="277956" relation="include">
        </childnode>
        <childnode refid="277957" relation="include">
        </childnode>
        <childnode refid="277958" relation="include">
        </childnode>
        <childnode refid="277953" relation="include">
        </childnode>
        <childnode refid="277959" relation="include">
        </childnode>
        <childnode refid="277960" relation="include">
        </childnode>
        <childnode refid="277961" relation="include">
        </childnode>
        <childnode refid="277915" relation="include">
        </childnode>
        <childnode refid="277962" relation="include">
        </childnode>
      </node>
      <node id="278015">
        <label>AthContainers/tools/ATHCONTAINERS_ASSERT.h</label>
        <link refid="de/d6b/ATHCONTAINERS__ASSERT_8h"/>
        <childnode refid="278007" relation="include">
        </childnode>
      </node>
      <node id="278145">
        <label>xAODTruth/TruthVertexContainer.h</label>
        <link refid="d4/d34/TruthVertexContainer_8h_source"/>
        <childnode refid="278146" relation="include">
        </childnode>
        <childnode refid="278148" relation="include">
        </childnode>
        <childnode refid="278068" relation="include">
        </childnode>
      </node>
      <node id="277947">
        <label>xAODBase/IParticle.h</label>
        <link refid="d5/dac/IParticle_8h_source"/>
        <childnode refid="277948" relation="include">
        </childnode>
        <childnode refid="277949" relation="include">
        </childnode>
        <childnode refid="278008" relation="include">
        </childnode>
        <childnode refid="277967" relation="include">
        </childnode>
      </node>
      <node id="277937">
        <label>xAODCaloEvent/CaloClusterFwd.h</label>
        <link refid="d9/d35/CaloClusterFwd_8h_source"/>
      </node>
      <node id="278008">
        <label>ObjectType.h</label>
        <link refid="d8/d04/ObjectType_8h_source"/>
        <childnode refid="278009" relation="include">
        </childnode>
      </node>
      <node id="278151">
        <label>xAODEventInfo/versions/EventInfo_v1.h</label>
        <link refid="d4/da0/EventInfo__v1_8h_source"/>
        <childnode refid="277941" relation="include">
        </childnode>
        <childnode refid="278124" relation="include">
        </childnode>
        <childnode refid="277933" relation="include">
        </childnode>
        <childnode refid="277915" relation="include">
        </childnode>
        <childnode refid="278009" relation="include">
        </childnode>
        <childnode refid="277949" relation="include">
        </childnode>
        <childnode refid="278011" relation="include">
        </childnode>
        <childnode refid="277940" relation="include">
        </childnode>
        <childnode refid="278107" relation="include">
        </childnode>
      </node>
      <node id="278130">
        <label>xAODTau/TauDefs.h</label>
        <link refid="da/df4/TauDefs_8h_source"/>
        <childnode refid="278116" relation="include">
        </childnode>
        <childnode refid="278053" relation="include">
        </childnode>
      </node>
      <node id="278074">
        <label>xAODCaloEvent/versions/CaloCluster_v1.h</label>
        <link refid="dc/d4b/CaloCluster__v1_8h_source"/>
        <childnode refid="277941" relation="include">
        </childnode>
        <childnode refid="278053" relation="include">
        </childnode>
        <childnode refid="277947" relation="include">
        </childnode>
        <childnode refid="278075" relation="include">
        </childnode>
        <childnode refid="278077" relation="include">
        </childnode>
        <childnode refid="277940" relation="include">
        </childnode>
        <childnode refid="278079" relation="include">
        </childnode>
        <childnode refid="278080" relation="include">
        </childnode>
      </node>
      <node id="278117">
        <label>xAODJet/JetAttributes.h</label>
        <link refid="d3/df8/JetAttributes_8h"/>
      </node>
      <node id="278030">
        <label>AthContainers/tools/ElementProxy.icc</label>
        <link refid="d6/d70/ElementProxy_8icc"/>
        <childnode refid="278026" relation="include">
        </childnode>
        <childnode refid="278015" relation="include">
        </childnode>
      </node>
      <node id="277972">
        <label>typeinfo</label>
      </node>
      <node id="278056">
        <label>xAODTracking/TrackingPrimitives.h</label>
        <link refid="d2/d4c/TrackingPrimitives_8h_source"/>
        <childnode refid="278057" relation="include">
        </childnode>
      </node>
      <node id="278006">
        <label>AthContainers/AuxElement.icc</label>
        <link refid="d2/d37/AuxElement_8icc"/>
        <childnode refid="278000" relation="include">
        </childnode>
        <childnode refid="278007" relation="include">
        </childnode>
      </node>
      <node id="278134">
        <label>AthLinks/ElementLinkVector.h</label>
        <link refid="de/df1/ElementLinkVector_8h_source"/>
        <childnode refid="277933" relation="include">
        </childnode>
        <childnode refid="277940" relation="include">
        </childnode>
        <childnode refid="278135" relation="include">
        </childnode>
        <childnode refid="277943" relation="include">
        </childnode>
      </node>
      <node id="278073">
        <label>xAODCaloEvent/CaloCluster.h</label>
        <link refid="db/d88/CaloCluster_8h_source"/>
        <childnode refid="278074" relation="include">
        </childnode>
        <childnode refid="278068" relation="include">
        </childnode>
      </node>
      <node id="278011">
        <label>AthContainers/DataVector.h</label>
        <link refid="d7/dd6/DataVector_8h"/>
        <childnode refid="278003" relation="include">
        </childnode>
        <childnode refid="278012" relation="include">
        </childnode>
        <childnode refid="278013" relation="include">
        </childnode>
        <childnode refid="278014" relation="include">
        </childnode>
        <childnode refid="278020" relation="include">
        </childnode>
        <childnode refid="278021" relation="include">
        </childnode>
        <childnode refid="278026" relation="include">
        </childnode>
        <childnode refid="278028" relation="include">
        </childnode>
        <childnode refid="278032" relation="include">
        </childnode>
        <childnode refid="278033" relation="include">
        </childnode>
        <childnode refid="278029" relation="include">
        </childnode>
        <childnode refid="278035" relation="include">
        </childnode>
        <childnode refid="277943" relation="include">
        </childnode>
        <childnode refid="278036" relation="include">
        </childnode>
        <childnode refid="278037" relation="include">
        </childnode>
        <childnode refid="278031" relation="include">
        </childnode>
        <childnode refid="277933" relation="include">
        </childnode>
        <childnode refid="277972" relation="include">
        </childnode>
        <childnode refid="277964" relation="include">
        </childnode>
        <childnode refid="278038" relation="include">
        </childnode>
        <childnode refid="277956" relation="include">
        </childnode>
        <childnode refid="278005" relation="include">
        </childnode>
        <childnode refid="277958" relation="include">
        </childnode>
        <childnode refid="277967" relation="include">
        </childnode>
        <childnode refid="278039" relation="include">
        </childnode>
        <childnode refid="278041" relation="include">
        </childnode>
        <childnode refid="278045" relation="include">
        </childnode>
        <childnode refid="278046" relation="include">
        </childnode>
      </node>
      <node id="278101">
        <label>xAODTracking/NeutralParticle.h</label>
        <link refid="d4/daa/NeutralParticle_8h_source"/>
        <childnode refid="278102" relation="include">
        </childnode>
        <childnode refid="278068" relation="include">
        </childnode>
      </node>
      <node id="278053">
        <label>bitset</label>
      </node>
      <node id="277981">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="277946">
        <label>AthLinks/tools/TypeTools.h</label>
        <link refid="dd/db1/TypeTools_8h_source"/>
      </node>
      <node id="277998">
        <label>AthenaKernel/ILockable.h</label>
      </node>
      <node id="277969">
        <label>AthLinks/DataLinkBase.h</label>
        <link refid="db/da8/DataLinkBase_8h_source"/>
        <childnode refid="277941" relation="include">
        </childnode>
      </node>
      <node id="278096">
        <label>xAODTracking/versions/Vertex_v1.h</label>
        <link refid="d7/dcc/Vertex__v1_8h_source"/>
        <childnode refid="277933" relation="include">
        </childnode>
        <childnode refid="277949" relation="include">
        </childnode>
        <childnode refid="277940" relation="include">
        </childnode>
        <childnode refid="278057" relation="include">
        </childnode>
        <childnode refid="278097" relation="include">
        </childnode>
        <childnode refid="278099" relation="include">
        </childnode>
        <childnode refid="278056" relation="include">
        </childnode>
        <childnode refid="278070" relation="include">
        </childnode>
        <childnode refid="278100" relation="include">
        </childnode>
        <childnode refid="278008" relation="include">
        </childnode>
        <childnode refid="278107" relation="include">
        </childnode>
      </node>
      <node id="277980">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="277985">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="278021">
        <label>AthContainers/tools/DVLInfo.h</label>
        <link refid="d3/d2e/DVLInfo_8h"/>
        <childnode refid="278022" relation="include">
        </childnode>
        <childnode refid="278014" relation="include">
        </childnode>
        <childnode refid="277972" relation="include">
        </childnode>
        <childnode refid="277953" relation="include">
        </childnode>
        <childnode refid="277962" relation="include">
        </childnode>
        <childnode refid="278024" relation="include">
        </childnode>
        <childnode refid="277984" relation="include">
        </childnode>
        <childnode refid="278025" relation="include">
        </childnode>
      </node>
      <node id="277965">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="278058">
        <label>unistd.h</label>
      </node>
      <node id="278039">
        <label>AthContainers/ClassName.h</label>
        <link refid="dd/d6b/AthContainers_2AthContainers_2ClassName_8h_source"/>
        <childnode refid="278040" relation="include">
        </childnode>
      </node>
      <node id="277970">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="277952" relation="include">
        </childnode>
        <childnode refid="277971" relation="include">
        </childnode>
        <childnode refid="277973" relation="include">
        </childnode>
        <childnode refid="277974" relation="include">
        </childnode>
        <childnode refid="277987" relation="include">
        </childnode>
        <childnode refid="277989" relation="include">
        </childnode>
        <childnode refid="277953" relation="include">
        </childnode>
        <childnode refid="277972" relation="include">
        </childnode>
        <childnode refid="277933" relation="include">
        </childnode>
        <childnode refid="277995" relation="include">
        </childnode>
        <childnode refid="277996" relation="include">
        </childnode>
      </node>
      <node id="277933">
        <label>vector</label>
      </node>
      <node id="278071">
        <label>xAODBase/IParticleContainer.h</label>
        <link refid="dd/d2d/IParticleContainer_8h_source"/>
        <childnode refid="278011" relation="include">
        </childnode>
        <childnode refid="277947" relation="include">
        </childnode>
        <childnode refid="277965" relation="include">
        </childnode>
      </node>
      <node id="278047">
        <label>AthContainers/tools/CompareAndPrint.h</label>
        <link refid="d5/da8/CompareAndPrint_8h_source"/>
        <childnode refid="277956" relation="include">
        </childnode>
        <childnode refid="277972" relation="include">
        </childnode>
      </node>
      <node id="278095">
        <label>xAODTracking/Vertex.h</label>
        <link refid="d9/d2d/Vertex_8h_source"/>
        <childnode refid="278096" relation="include">
        </childnode>
      </node>
      <node id="278104">
        <label>xAODTracking/versions/NeutralParticleContainer_v1.h</label>
        <link refid="d6/d5f/NeutralParticleContainer__v1_8h_source"/>
        <childnode refid="277941" relation="include">
        </childnode>
        <childnode refid="278011" relation="include">
        </childnode>
        <childnode refid="278102" relation="include">
        </childnode>
        <childnode refid="278105" relation="include">
        </childnode>
      </node>
      <node id="278118">
        <label>xAODJet/JetContainerInfo.h</label>
        <link refid="d8/d2a/JetContainerInfo_8h_source"/>
        <childnode refid="277915" relation="include">
        </childnode>
      </node>
      <node id="278048">
        <label>AthContainers/tools/DVLEltBaseInfo.icc</label>
        <link refid="dd/d5e/DVLEltBaseInfo_8icc"/>
      </node>
      <node id="278135">
        <label>AthLinks/ElementLinkVectorBase.h</label>
        <link refid="dc/d52/ElementLinkVectorBase_8h_source"/>
        <childnode refid="277941" relation="include">
        </childnode>
        <childnode refid="277933" relation="include">
        </childnode>
      </node>
      <node id="278090">
        <label>xAODBTagging/BTaggingContainer.h</label>
        <link refid="d8/d3b/BTaggingContainer_8h_source"/>
        <childnode refid="278091" relation="include">
        </childnode>
        <childnode refid="278113" relation="include">
        </childnode>
        <childnode refid="278068" relation="include">
        </childnode>
      </node>
      <node id="278077">
        <label>xAODCaloEvent/CaloClusterBadChannelData.h</label>
        <link refid="d1/d93/CaloClusterBadChannelData_8h_source"/>
        <childnode refid="278078" relation="include">
        </childnode>
      </node>
      <node id="277957">
        <label>utility</label>
      </node>
      <node id="278045">
        <label>SGTools/DataBucketTraitFwd.h</label>
      </node>
      <node id="278147">
        <label>xAODTruth/versions/TruthVertex_v1.h</label>
        <link refid="d8/d84/TruthVertex__v1_8h_source"/>
        <childnode refid="277948" relation="include">
        </childnode>
        <childnode refid="277949" relation="include">
        </childnode>
        <childnode refid="277940" relation="include">
        </childnode>
        <childnode refid="278008" relation="include">
        </childnode>
        <childnode refid="278122" relation="include">
        </childnode>
        <childnode refid="278107" relation="include">
        </childnode>
      </node>
      <node id="277982">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="278072">
        <label>xAODCaloEvent/CaloClusterContainer.h</label>
        <link refid="da/dc3/CaloClusterContainer_8h_source"/>
        <childnode refid="278073" relation="include">
        </childnode>
        <childnode refid="278081" relation="include">
        </childnode>
        <childnode refid="278068" relation="include">
        </childnode>
      </node>
      <node id="278128">
        <label>xAODTau/TauJet.h</label>
        <link refid="de/d61/TauJet_8h_source"/>
        <childnode refid="278129" relation="include">
        </childnode>
      </node>
      <node id="278120">
        <label>xAODTruth/TruthParticleContainer.h</label>
        <link refid="d9/dbc/TruthParticleContainer_8h_source"/>
        <childnode refid="277938" relation="include">
        </childnode>
        <childnode refid="278121" relation="include">
        </childnode>
        <childnode refid="278068" relation="include">
        </childnode>
      </node>
      <node id="277909">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TauAnalysisTools/Root/TauTruthMatchingTool.cxx</label>
        <link refid="TauTruthMatchingTool.cxx"/>
        <childnode refid="277910" relation="include">
        </childnode>
        <childnode refid="277940" relation="include">
        </childnode>
        <childnode refid="278146" relation="include">
        </childnode>
        <childnode refid="278150" relation="include">
        </childnode>
        <childnode refid="278152" relation="include">
        </childnode>
      </node>
      <node id="278010">
        <label>xAODTruth/TruthVertexContainerFwd.h</label>
        <link refid="da/ddf/TruthVertexContainerFwd_8h_source"/>
        <childnode refid="278011" relation="include">
        </childnode>
        <childnode refid="278049" relation="include">
        </childnode>
      </node>
      <node id="278097">
        <label>GeoPrimitives/GeoPrimitives.h</label>
        <link refid="d7/d87/GeoPrimitives_8h_source"/>
        <childnode refid="278058" relation="include">
        </childnode>
        <childnode refid="278098" relation="include">
        </childnode>
      </node>
      <node id="278132">
        <label>xAODPFlow/PFO.h</label>
        <link refid="d1/d98/PFO_8h_source"/>
        <childnode refid="278133" relation="include">
        </childnode>
        <childnode refid="278068" relation="include">
        </childnode>
      </node>
      <node id="278065">
        <label>xAODTracking/VertexFwd.h</label>
        <link refid="d9/ddd/VertexFwd_8h_source"/>
      </node>
      <node id="278019">
        <label>AthContainers/AuxVectorBase.icc</label>
        <link refid="d4/d50/AuxVectorBase_8icc"/>
      </node>
      <node id="277990">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="278110">
        <label>xAODBTagging/BTagVertex.h</label>
        <link refid="d4/d51/BTagVertex_8h_source"/>
        <childnode refid="278111" relation="include">
        </childnode>
      </node>
      <node id="277975">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="277989">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="277990" relation="include">
        </childnode>
        <childnode refid="277991" relation="include">
        </childnode>
        <childnode refid="277992" relation="include">
        </childnode>
        <childnode refid="277993" relation="include">
        </childnode>
        <childnode refid="277994" relation="include">
        </childnode>
      </node>
      <node id="277930">
        <label>MCUtils/PIDUtils.h</label>
      </node>
      <node id="278076">
        <label>CaloGeoHelpers/CaloSampling.def</label>
      </node>
      <node id="278009">
        <label>iosfwd</label>
      </node>
      <node id="277959">
        <label>cstdlib</label>
      </node>
      <node id="278129">
        <label>xAODTau/versions/TauJet_v2.h</label>
        <link refid="d0/d82/TauJet__v2_8h_source"/>
        <childnode refid="277940" relation="include">
        </childnode>
        <childnode refid="277947" relation="include">
        </childnode>
        <childnode refid="278071" relation="include">
        </childnode>
        <childnode refid="278130" relation="include">
        </childnode>
        <childnode refid="278061" relation="include">
        </childnode>
        <childnode refid="278094" relation="include">
        </childnode>
        <childnode refid="278125" relation="include">
        </childnode>
        <childnode refid="278131" relation="include">
        </childnode>
        <childnode refid="278011" relation="include">
        </childnode>
      </node>
      <node id="278144">
        <label>xAODCore/AuxSelection.h</label>
        <link refid="d3/dd4/AuxSelection_8h_source"/>
        <childnode refid="278124" relation="include">
        </childnode>
        <childnode refid="277915" relation="include">
        </childnode>
        <childnode refid="277952" relation="include">
        </childnode>
      </node>
      <node id="278062">
        <label>xAODTracking/TrackParticle.h</label>
        <link refid="d2/d15/TrackParticle_8h_source"/>
        <childnode refid="278063" relation="include">
        </childnode>
        <childnode refid="278068" relation="include">
        </childnode>
      </node>
      <node id="278038">
        <label>iostream</label>
      </node>
      <node id="278004">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="277923">
        <label>AsgTools/ToolHandle.h</label>
        <link refid="de/d2d/ToolHandle_8h_source"/>
        <childnode refid="277913" relation="include">
        </childnode>
        <childnode refid="277924" relation="include">
        </childnode>
      </node>
      <node id="278069">
        <label>xAODTracking/versions/TrackParticleContainer_v1.h</label>
        <link refid="d7/d3b/TrackParticleContainer__v1_8h_source"/>
        <childnode refid="277941" relation="include">
        </childnode>
        <childnode refid="278011" relation="include">
        </childnode>
        <childnode refid="278063" relation="include">
        </childnode>
        <childnode refid="278070" relation="include">
        </childnode>
      </node>
      <node id="277951">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="277952" relation="include">
        </childnode>
        <childnode refid="277953" relation="include">
        </childnode>
        <childnode refid="277965" relation="include">
        </childnode>
      </node>
      <node id="277953">
        <label>cstddef</label>
      </node>
      <node id="278153">
        <label>ParticlesInConeTools/ITruthParticlesInConeTool.h</label>
      </node>
      <node id="278002">
        <label>AthContainers/AuxVectorData.icc</label>
        <link refid="da/de7/AuxVectorData_8icc"/>
        <childnode refid="277970" relation="include">
        </childnode>
        <childnode refid="277966" relation="include">
        </childnode>
        <childnode refid="277951" relation="include">
        </childnode>
        <childnode refid="278000" relation="include">
        </childnode>
        <childnode refid="278001" relation="include">
        </childnode>
      </node>
      <node id="277916">
        <label>AsgTools/AsgToolMacros.h</label>
        <link refid="d1/d68/AsgToolMacros_8h_source"/>
      </node>
      <node id="278149">
        <label>Enums.h</label>
        <link refid="d5/d69/TrigSteeringEvent_2TrigSteeringEvent_2Enums_8h_source"/>
        <childnode refid="277933" relation="include">
        </childnode>
        <childnode refid="277915" relation="include">
        </childnode>
        <childnode refid="277941" relation="include">
        </childnode>
      </node>
      <node id="278107">
        <label>xAODCore/BaseInfo.h</label>
        <link refid="d3/d17/BaseInfo_8h_source"/>
        <childnode refid="277967" relation="include">
        </childnode>
      </node>
      <node id="277929">
        <label>TruthUtils/PIDHelpers.h</label>
        <link refid="d6/dd3/PIDHelpers_8h"/>
        <childnode refid="277930" relation="include">
        </childnode>
      </node>
      <node id="278138">
        <label>xAODPFlow/versions/PFOContainer_v1.h</label>
        <link refid="d7/d93/PFOContainer__v1_8h_source"/>
        <childnode refid="278011" relation="include">
        </childnode>
        <childnode refid="278133" relation="include">
        </childnode>
      </node>
      <node id="278139">
        <label>xAODTruth/TruthParticleAuxContainer.h</label>
        <link refid="d4/d71/TruthParticleAuxContainer_8h_source"/>
        <childnode refid="278140" relation="include">
        </childnode>
        <childnode refid="278068" relation="include">
        </childnode>
      </node>
      <node id="278091">
        <label>xAODBTagging/BTagging.h</label>
        <link refid="d2/d81/BTagging_8h_source"/>
        <childnode refid="278092" relation="include">
        </childnode>
      </node>
      <node id="277928">
        <label>mutex</label>
      </node>
      <node id="278115">
        <label>xAODJet/JetTypes.h</label>
        <link refid="d6/d2a/JetTypes_8h_source"/>
        <childnode refid="278116" relation="include">
        </childnode>
      </node>
      <node id="278136">
        <label>xAODPFlow/PFODefs.h</label>
        <link refid="de/d76/xAODPFlow_2xAODPFlow_2PFODefs_8h_source"/>
        <childnode refid="278116" relation="include">
        </childnode>
      </node>
      <node id="278140">
        <label>xAODTruth/versions/TruthParticleAuxContainer_v1.h</label>
        <link refid="d7/d56/TruthParticleAuxContainer__v1_8h_source"/>
        <childnode refid="277933" relation="include">
        </childnode>
        <childnode refid="277940" relation="include">
        </childnode>
        <childnode refid="278141" relation="include">
        </childnode>
        <childnode refid="278120" relation="include">
        </childnode>
        <childnode refid="278145" relation="include">
        </childnode>
        <childnode refid="278107" relation="include">
        </childnode>
      </node>
      <node id="278114">
        <label>xAODJet/JetConstituentVector.h</label>
        <link refid="de/dd4/JetConstituentVector_8h_source"/>
        <childnode refid="277940" relation="include">
        </childnode>
        <childnode refid="277947" relation="include">
        </childnode>
        <childnode refid="278071" relation="include">
        </childnode>
        <childnode refid="278115" relation="include">
        </childnode>
      </node>
      <node id="278103">
        <label>TrkNeutralParameters/NeutralParameters.h</label>
      </node>
      <node id="278025">
        <label>AthContainers/tools/DVLInfo.icc</label>
        <link refid="da/d83/DVLInfo_8icc"/>
        <childnode refid="278012" relation="include">
        </childnode>
        <childnode refid="277933" relation="include">
        </childnode>
        <childnode refid="277926" relation="include">
        </childnode>
        <childnode refid="278007" relation="include">
        </childnode>
        <childnode refid="277959" relation="include">
        </childnode>
        <childnode refid="277967" relation="include">
        </childnode>
      </node>
      <node id="277974">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="277971" relation="include">
        </childnode>
        <childnode refid="277975" relation="include">
        </childnode>
        <childnode refid="277976" relation="include">
        </childnode>
        <childnode refid="277977" relation="include">
        </childnode>
        <childnode refid="277982" relation="include">
        </childnode>
        <childnode refid="277972" relation="include">
        </childnode>
        <childnode refid="277933" relation="include">
        </childnode>
        <childnode refid="277956" relation="include">
        </childnode>
        <childnode refid="277941" relation="include">
        </childnode>
        <childnode refid="277984" relation="include">
        </childnode>
        <childnode refid="277985" relation="include">
        </childnode>
        <childnode refid="277986" relation="include">
        </childnode>
      </node>
      <node id="278086">
        <label>TrkSegment/SegmentCollection.h</label>
      </node>
      <node id="278066">
        <label>TrkParameters/TrackParameters.h</label>
      </node>
      <node id="278125">
        <label>xAODJet/JetContainer.h</label>
        <link refid="d5/d55/JetContainer_8h_source"/>
        <childnode refid="278088" relation="include">
        </childnode>
        <childnode refid="278126" relation="include">
        </childnode>
        <childnode refid="278068" relation="include">
        </childnode>
      </node>
      <node id="277938">
        <label>xAODTruth/TruthParticle.h</label>
        <link refid="dd/d44/TruthParticle_8h_source"/>
        <childnode refid="277939" relation="include">
        </childnode>
      </node>
      <node id="278102">
        <label>versions/NeutralParticle_v1.h</label>
        <link refid="da/d85/NeutralParticle__v1_8h_source"/>
        <childnode refid="277940" relation="include">
        </childnode>
        <childnode refid="278011" relation="include">
        </childnode>
        <childnode refid="277947" relation="include">
        </childnode>
        <childnode refid="278056" relation="include">
        </childnode>
        <childnode refid="278064" relation="include">
        </childnode>
        <childnode refid="278053" relation="include">
        </childnode>
        <childnode refid="277941" relation="include">
        </childnode>
        <childnode refid="278103" relation="include">
        </childnode>
      </node>
      <node id="278106">
        <label>xAODTracking/NeutralParticleFwd.h</label>
        <link refid="d4/d90/NeutralParticleFwd_8h_source"/>
      </node>
      <node id="277934">
        <label>xAODEgamma/ElectronFwd.h</label>
        <link refid="db/d18/ElectronFwd_8h_source"/>
      </node>
      <node id="277984">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="278100">
        <label>xAODTracking/NeutralParticleContainer.h</label>
        <link refid="da/d7f/NeutralParticleContainer_8h_source"/>
        <childnode refid="278101" relation="include">
        </childnode>
        <childnode refid="278104" relation="include">
        </childnode>
        <childnode refid="278068" relation="include">
        </childnode>
      </node>
      <node id="278014">
        <label>AthContainers/AuxVectorBase.h</label>
        <link refid="d7/d18/AuxVectorBase_8h"/>
        <childnode refid="277997" relation="include">
        </childnode>
        <childnode refid="278012" relation="include">
        </childnode>
        <childnode refid="278013" relation="include">
        </childnode>
        <childnode refid="277949" relation="include">
        </childnode>
        <childnode refid="277970" relation="include">
        </childnode>
        <childnode refid="278003" relation="include">
        </childnode>
        <childnode refid="278015" relation="include">
        </childnode>
        <childnode refid="277966" relation="include">
        </childnode>
        <childnode refid="278016" relation="include">
        </childnode>
        <childnode refid="277933" relation="include">
        </childnode>
        <childnode refid="278019" relation="include">
        </childnode>
      </node>
      <node id="278124">
        <label>set</label>
      </node>
      <node id="278055">
        <label>xAODPrimitives/IsolationFlavour.h</label>
        <link refid="da/d23/IsolationFlavour_8h_source"/>
      </node>
      <node id="278068">
        <label>xAODCore/CLASS_DEF.h</label>
        <link refid="d6/d20/xAODCore_2xAODCore_2CLASS__DEF_8h"/>
        <childnode refid="277965" relation="include">
        </childnode>
      </node>
      <node id="277910">
        <label>TauAnalysisTools/TauTruthMatchingTool.h</label>
        <link refid="d3/dce/TauTruthMatchingTool_8h_source"/>
        <childnode refid="277911" relation="include">
        </childnode>
        <childnode refid="277921" relation="include">
        </childnode>
        <childnode refid="277929" relation="include">
        </childnode>
        <childnode refid="277931" relation="include">
        </childnode>
        <childnode refid="278119" relation="include">
        </childnode>
        <childnode refid="278125" relation="include">
        </childnode>
        <childnode refid="278127" relation="include">
        </childnode>
      </node>
      <node id="277988">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="277977">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="277975" relation="include">
        </childnode>
        <childnode refid="277978" relation="include">
        </childnode>
        <childnode refid="277982" relation="include">
        </childnode>
        <childnode refid="277933" relation="include">
        </childnode>
        <childnode refid="277983" relation="include">
        </childnode>
      </node>
      <node id="277956">
        <label>algorithm</label>
      </node>
      <node id="278079">
        <label>CaloEvent/CaloClusterCellLinkContainer.h</label>
      </node>
      <node id="278035">
        <label>AthContainers/tools/IsMostDerivedFlag.h</label>
        <link refid="d5/dfa/IsMostDerivedFlag_8h"/>
      </node>
      <node id="278067">
        <label>TrkTrack/TrackCollection.h</label>
      </node>
      <node id="277949">
        <label>AthContainers/AuxElement.h</label>
        <link refid="d1/d6f/AuxElement_8h"/>
        <childnode refid="277950" relation="include">
        </childnode>
        <childnode refid="277951" relation="include">
        </childnode>
        <childnode refid="277966" relation="include">
        </childnode>
        <childnode refid="277968" relation="include">
        </childnode>
        <childnode refid="277970" relation="include">
        </childnode>
        <childnode refid="277997" relation="include">
        </childnode>
        <childnode refid="277976" relation="include">
        </childnode>
        <childnode refid="278003" relation="include">
        </childnode>
        <childnode refid="278000" relation="include">
        </childnode>
        <childnode refid="277953" relation="include">
        </childnode>
        <childnode refid="278006" relation="include">
        </childnode>
      </node>
      <node id="277912">
        <label>AsgTools/AsgTool.h</label>
        <link refid="d4/d29/AsgTool_8h_source"/>
        <childnode refid="277913" relation="include">
        </childnode>
        <childnode refid="277914" relation="include">
        </childnode>
        <childnode refid="277918" relation="include">
        </childnode>
        <childnode refid="277920" relation="include">
        </childnode>
      </node>
      <node id="277968">
        <label>AthLinks/DataLink.h</label>
        <link refid="da/de8/DataLink_8h_source"/>
        <childnode refid="277941" relation="include">
        </childnode>
        <childnode refid="277915" relation="include">
        </childnode>
        <childnode refid="277969" relation="include">
        </childnode>
        <childnode refid="277943" relation="include">
        </childnode>
      </node>
      <node id="278148">
        <label>xAODTruth/versions/TruthVertexContainer_v1.h</label>
        <link refid="db/d70/TruthVertexContainer__v1_8h_source"/>
        <childnode refid="278011" relation="include">
        </childnode>
        <childnode refid="278147" relation="include">
        </childnode>
        <childnode refid="278010" relation="include">
        </childnode>
      </node>
      <node id="278032">
        <label>AthContainers/tools/DVL_iter_swap.h</label>
        <link refid="d6/ddb/DVL__iter__swap_8h"/>
        <childnode refid="278028" relation="include">
        </childnode>
        <childnode refid="278015" relation="include">
        </childnode>
        <childnode refid="277958" relation="include">
        </childnode>
      </node>
      <node id="278012">
        <label>AthContainers/OwnershipPolicy.h</label>
        <link refid="d3/da4/OwnershipPolicy_8h_source"/>
      </node>
      <node id="277940">
        <label>AthLinks/ElementLink.h</label>
        <link refid="dc/d24/ElementLink_8h_source"/>
        <childnode refid="277941" relation="include">
        </childnode>
        <childnode refid="277915" relation="include">
        </childnode>
        <childnode refid="277942" relation="include">
        </childnode>
        <childnode refid="277943" relation="include">
        </childnode>
        <childnode refid="277946" relation="include">
        </childnode>
      </node>
      <node id="278112">
        <label>xAODBTagging/versions/BTagVertexContainer_v1.h</label>
        <link refid="d1/d37/BTagVertexContainer__v1_8h_source"/>
        <childnode refid="278011" relation="include">
        </childnode>
        <childnode refid="278111" relation="include">
        </childnode>
      </node>
      <node id="278131">
        <label>xAODPFlow/PFOContainer.h</label>
        <link refid="dd/d85/PFOContainer_8h_source"/>
        <childnode refid="278132" relation="include">
        </childnode>
        <childnode refid="278138" relation="include">
        </childnode>
        <childnode refid="278068" relation="include">
        </childnode>
      </node>
      <node id="277920">
        <label>AsgTools/SetProperty.h</label>
        <link refid="df/db0/SetProperty_8h_source"/>
      </node>
      <node id="278061">
        <label>xAODTracking/TrackParticleContainer.h</label>
        <link refid="da/d31/TrackParticleContainer_8h_source"/>
        <childnode refid="278062" relation="include">
        </childnode>
        <childnode refid="278069" relation="include">
        </childnode>
        <childnode refid="278068" relation="include">
        </childnode>
      </node>
      <node id="278023">
        <label>GaudiKernel/ClassID.h</label>
      </node>
      <node id="278152">
        <label>MCTruthClassifier/MCTruthClassifier.h</label>
        <link refid="de/da2/MCTruthClassifier_8h_source"/>
        <childnode refid="277912" relation="include">
        </childnode>
        <childnode refid="277932" relation="include">
        </childnode>
        <childnode refid="277931" relation="include">
        </childnode>
        <childnode refid="278122" relation="include">
        </childnode>
        <childnode refid="278049" relation="include">
        </childnode>
        <childnode refid="277924" relation="include">
        </childnode>
        <childnode refid="278153" relation="include">
        </childnode>
      </node>
      <node id="278037">
        <label>boost/type_traits.hpp</label>
      </node>
      <node id="277963">
        <label>memory</label>
      </node>
      <node id="278105">
        <label>xAODTracking/NeutralParticleContainerFwd.h</label>
        <link refid="d2/db4/NeutralParticleContainerFwd_8h_source"/>
        <childnode refid="278011" relation="include">
        </childnode>
        <childnode refid="278071" relation="include">
        </childnode>
        <childnode refid="278106" relation="include">
        </childnode>
      </node>
      <node id="277987">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="277973" relation="include">
        </childnode>
        <childnode refid="277974" relation="include">
        </childnode>
        <childnode refid="277988" relation="include">
        </childnode>
      </node>
      <node id="278123">
        <label>xAODTruth/TruthParticleFwd.h</label>
        <link refid="de/d03/TruthParticleFwd_8h_source"/>
      </node>
      <node id="278016">
        <label>AthContainersInterfaces/AuxStore_traits.h</label>
        <link refid="dd/d70/AuxStore__traits_8h"/>
        <childnode refid="277950" relation="include">
        </childnode>
        <childnode refid="277966" relation="include">
        </childnode>
        <childnode refid="277951" relation="include">
        </childnode>
        <childnode refid="277984" relation="include">
        </childnode>
        <childnode refid="278017" relation="include">
        </childnode>
        <childnode refid="278018" relation="include">
        </childnode>
        <childnode refid="277915" relation="include">
        </childnode>
      </node>
      <node id="278109">
        <label>xAODBTagging/BTagVertexContainer.h</label>
        <link refid="d5/da2/BTagVertexContainer_8h_source"/>
        <childnode refid="278110" relation="include">
        </childnode>
        <childnode refid="278112" relation="include">
        </childnode>
        <childnode refid="278068" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Local<sp/>include(s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TauAnalysisTools/TauTruthMatchingTool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Core<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;AthLinks/ElementLink.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EDM<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODTruth/TruthVertex.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODEventInfo/EventInfo.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tool<sp/>include(s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;MCTruthClassifier/MCTruthClassifier.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">TauAnalysisTools;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//=================================PUBLIC-PART==================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//______________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">TauTruthMatchingTool::TauTruthMatchingTool(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name<sp/>)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>:<sp/>AsgMetadataTool(name)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>,<sp/>m_bIsData(false)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>,<sp/>m_bIsConfigured(false)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>,<sp/>m_xTruthParticleContainer(0)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>,<sp/>m_xTruthTauContainerConst(0)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>,<sp/>m_xTruthMuonContainerConst(0)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>,<sp/>m_xTruthElectronContainerConst(0)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>,<sp/>m_xTruthJetContainerConst(0)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>,<sp/>m_xTruthTauContainer(0)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>,<sp/>m_xTruthTauAuxContainer(0)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>,<sp/>m_sNewTruthTauContainerNameAux(</highlight><highlight class="stringliteral">&quot;TruthTausAux.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>,<sp/>m_bTruthTauAvailable(true)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>,<sp/>m_bTruthMuonAvailable(true)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>,<sp/>m_bTruthElectronAvailable(true)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>,<sp/>m_bTruthJetAvailable(true)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>,<sp/>m_iNChargedPions(0)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>,<sp/>m_iNNeutralPions(0)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>,<sp/>m_iNChargedOthers(0)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>,<sp/>m_iNNeutralOthers(0)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>,<sp/>m_iNChargedDaughters(0)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>,<sp/>m_bIsHadronicTau(false)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>,<sp/>m_bIsTruthMatchedAvailable(false)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>,<sp/>m_bIsTruthMatchedAvailableChecked(false)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>,<sp/>m_bNewEvent(false)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>,<sp/>m_accPtVis(</highlight><highlight class="stringliteral">&quot;pt_vis&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>,<sp/>m_accEtaVis(</highlight><highlight class="stringliteral">&quot;eta_vis&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>,<sp/>m_accPhiVis(</highlight><highlight class="stringliteral">&quot;phi_vis&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>,<sp/>m_accMVis(</highlight><highlight class="stringliteral">&quot;m_vis&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>,<sp/>m_tMCTruthClassifier(</highlight><highlight class="stringliteral">&quot;MCTruthClassifierTool&quot;</highlight><highlight class="normal">,<sp/>this)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>declareProperty(<sp/></highlight><highlight class="stringliteral">&quot;MaxDeltaR&quot;</highlight><highlight class="normal">,<sp/>m_dMaxDeltaR<sp/>=<sp/>.2);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>declareProperty(<sp/></highlight><highlight class="stringliteral">&quot;WriteTruthTaus&quot;</highlight><highlight class="normal">,<sp/>m_bWriteTruthTaus<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>container<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>declareProperty(<sp/></highlight><highlight class="stringliteral">&quot;NewTruthTauContainerName&quot;</highlight><highlight class="normal">,<sp/>m_sNewTruthTauContainerName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TruthTaus&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>declareProperty(<sp/></highlight><highlight class="stringliteral">&quot;TruthTauContainerName&quot;</highlight><highlight class="normal">,<sp/>m_sTruthTauContainerName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TruthTaus&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>declareProperty(<sp/></highlight><highlight class="stringliteral">&quot;TruthMuonContainerName&quot;</highlight><highlight class="normal">,<sp/>m_sTruthMuonContainerName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TruthMuons&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>declareProperty(<sp/></highlight><highlight class="stringliteral">&quot;TruthElectronContainerName&quot;</highlight><highlight class="normal">,<sp/>m_sTruthElectronContainerName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TruthElectrons&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>declareProperty(<sp/></highlight><highlight class="stringliteral">&quot;TruthJetContainerName&quot;</highlight><highlight class="normal">,<sp/>m_sTruthJetContainerName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;AntiKt4TruthJets&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>declareProperty(<sp/></highlight><highlight class="stringliteral">&quot;TruthParticlesContainerName&quot;</highlight><highlight class="normal">,<sp/>m_sTruthParticlesContainerName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TruthParticles&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>declareProperty(<sp/></highlight><highlight class="stringliteral">&quot;WriteInvisibleFourMomentum&quot;</highlight><highlight class="normal">,<sp/>m_bWriteInvisibleFourMomentum<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>declareProperty(<sp/></highlight><highlight class="stringliteral">&quot;WriteVisibleChargedFourMomentum&quot;</highlight><highlight class="normal">,<sp/>m_bWriteVisibleChargedFourMomentum<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>declareProperty(<sp/></highlight><highlight class="stringliteral">&quot;WriteVisibleNeutralFourMomentum&quot;</highlight><highlight class="normal">,<sp/>m_bWriteVisibleNeutralFourMomentum<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>declareProperty(<sp/></highlight><highlight class="stringliteral">&quot;WriteDecayModeVector&quot;</highlight><highlight class="normal">,<sp/>m_bWriteDecayModeVector<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//______________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">TauTruthMatchingTool::~TauTruthMatchingTool(<sp/>)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//______________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">StatusCode<sp/>TauTruthMatchingTool::initialize()</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>ATH_MSG_INFO(<sp/></highlight><highlight class="stringliteral">&quot;Initializing<sp/>TauTruthMatchingTool&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>m_sNewTruthTauContainerNameAux<sp/>=<sp/>m_sNewTruthTauContainerName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Aux.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>ATH_CHECK(ASG_MAKE_ANA_TOOL(m_tMCTruthClassifier,<sp/><ref refid="d6/d4a/classMCTruthClassifier" kindref="compound">MCTruthClassifier</ref>));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>ATH_CHECK(m_tMCTruthClassifier.initialize());</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//______________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::TruthParticleContainer</ref>*<sp/>TauTruthMatchingTool::getTruthTauContainer()</highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_bIsData)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_bTruthTauAvailable)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_xTruthTauContainer;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(</highlight><highlight class="stringliteral">&quot;TruthTau<sp/>container<sp/>was<sp/>available<sp/>from<sp/>the<sp/>event<sp/>store<sp/>and<sp/>not<sp/>rebuilt.<sp/>Please<sp/>get<sp/>it<sp/>from<sp/>the<sp/>event<sp/>store&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//______________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><ref refid="da/de8/classxAOD_1_1TruthParticleAuxContainer__v1" kindref="compound">xAOD::TruthParticleAuxContainer</ref>*<sp/>TauTruthMatchingTool::getTruthTauAuxContainer()</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_bIsData)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_bTruthTauAvailable)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_xTruthTauAuxContainer;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(</highlight><highlight class="stringliteral">&quot;TruthTau<sp/>auxiliary<sp/>container<sp/>was<sp/>available<sp/>from<sp/>the<sp/>event<sp/>store<sp/>and<sp/>not<sp/>rebuilt.<sp/>Please<sp/>get<sp/>it<sp/>from<sp/>the<sp/>event<sp/>store&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//______________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1" kindref="compound">xAOD::TruthParticle</ref>*<sp/>TauTruthMatchingTool::applyTruthMatch(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/d20/classxAOD_1_1TauJet__v2" kindref="compound">xAOD::TauJet</ref>&amp;<sp/>xTau)</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>function<sp/>only<sp/>exists<sp/>for<sp/>historical<sp/>reasons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getTruth(xTau);</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//______________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal">std::vector&lt;const<sp/>xAOD::TruthParticle*&gt;<sp/>TauTruthMatchingTool::applyTruthMatch(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;const<sp/>xAOD::TauJet*&gt;&amp;<sp/>vTaus)</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>std::vector&lt;const<sp/>xAOD::TruthParticle*&gt;<sp/>vTruths;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>xTau<sp/>:<sp/>vTaus)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>vTruths.push_back(getTruth(*xTau));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vTruths;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//______________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__GNUC__</highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>push</highlight></codeline>
<codeline lineno="129"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wdeprecated-declarations&quot;</highlight></codeline>
<codeline lineno="130"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="131"><highlight class="preprocessor"></highlight><highlight class="normal">StatusCode<sp/>TauTruthMatchingTool::setTruthParticleContainer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::TruthParticleContainer</ref>*<sp/>xTruthParticleContainer)</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>m_xTruthParticleContainer<sp/>=<sp/>xTruthParticleContainer;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>be<sp/>false<sp/>by<sp/>default,<sp/>but<sp/>better<sp/>to<sp/>be<sp/>sure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>m_bTruthTauAvailable<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buildTruthTausFromTruthParticles();</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__GNUC__</highlight></codeline>
<codeline lineno="139"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>pop</highlight></codeline>
<codeline lineno="140"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="141"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//______________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal">StatusCode<sp/>TauTruthMatchingTool::beginEvent()</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>m_bNewEvent<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_bIsConfigured)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="df/df8/classxAOD_1_1EventInfo__v1" kindref="compound">xAOD::EventInfo</ref>*<sp/>xEventInfo<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>ATH_CHECK(evtStore()-&gt;retrieve(xEventInfo,</highlight><highlight class="stringliteral">&quot;EventInfo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>m_bIsData<sp/>=<sp/>!(xEventInfo-&gt;<ref refid="df/df8/classxAOD_1_1EventInfo__v1_1a58b04e0f3b70be5c1b2cb7ec1b12f7a0" kindref="member" tooltip="Check for one particular bitmask value.">eventType</ref>(<sp/><ref refid="df/df8/classxAOD_1_1EventInfo__v1_1ac05adfe37c466a5eedbb5991a0063481aab5db53c3e4e61ccac5962fb23fa3771" kindref="member" tooltip="true: simulation, false: data">xAOD::EventInfo::IS_SIMULATION</ref>));</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>m_bIsConfigured=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">//______________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__GNUC__</highlight></codeline>
<codeline lineno="159"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>push</highlight></codeline>
<codeline lineno="160"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wdeprecated-declarations&quot;</highlight></codeline>
<codeline lineno="161"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="162"><highlight class="preprocessor"></highlight><highlight class="normal">StatusCode<sp/>TauTruthMatchingTool::initializeEvent()</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__GNUC__</highlight></codeline>
<codeline lineno="167"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>pop</highlight></codeline>
<codeline lineno="168"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="169"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">//______________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1" kindref="compound">xAOD::TruthParticle</ref>*<sp/>TauTruthMatchingTool::getTruth(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/d20/classxAOD_1_1TauJet__v2" kindref="compound">xAOD::TauJet</ref>&amp;<sp/>xTau)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_bIsData)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retrieveTruthTaus().isFailure())</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(findTruthTau(xTau).isFailure())</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(</highlight><highlight class="stringliteral">&quot;There<sp/>was<sp/>a<sp/>failure<sp/>in<sp/>finding<sp/>the<sp/>matched<sp/>truth<sp/>tau&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>matched<sp/>to<sp/>a<sp/>truth<sp/>tau<sp/>return<sp/>its<sp/>pointer,<sp/>else<sp/>return<sp/>a<sp/>null<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound">SG::AuxElement::ConstAccessor&lt;char&gt;</ref><sp/>accIsTruthMatched(</highlight><highlight class="stringliteral">&quot;IsTruthMatched&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)accIsTruthMatched(xTau))</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_bWriteTruthTaus<sp/>or<sp/>m_bTruthTauAvailable)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound" tooltip="Helper class to provide constant type-safe access to aux data.">SG::AuxElement::ConstAccessor&lt; ElementLink&lt; xAOD::TruthParticleContainer &gt;</ref><sp/><sp/>&gt;<sp/>accTruthTau(</highlight><highlight class="stringliteral">&quot;truthParticleLink&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*accTruthTau(xTau);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound" tooltip="Helper class to provide constant type-safe access to aux data.">SG::AuxElement::ConstAccessor&lt; const xAOD::TruthParticle* &gt;</ref><sp/>accTruthTau(</highlight><highlight class="stringliteral">&quot;TruthTau&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>accTruthTau(xTau);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Wrapper<sp/>functions<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight></codeline>
<codeline lineno="203"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="comment">//______________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal">TLorentzVector<sp/>TauTruthMatchingTool::getTruthTauP4Vis(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/d20/classxAOD_1_1TauJet__v2" kindref="compound">xAOD::TauJet</ref>&amp;<sp/>xTau)</highlight></codeline>
<codeline lineno="206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1" kindref="compound">xAOD::TruthParticle</ref>*<sp/>xTruthTau<sp/>=<sp/>getTruth(xTau);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>TLorentzVector<sp/>vTLV;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xTruthTau<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_INFO(</highlight><highlight class="stringliteral">&quot;no<sp/>truth<sp/>particle<sp/>was<sp/>found,<sp/>returning<sp/>TLorentzVector<sp/>with<sp/>all<sp/>values<sp/>equal<sp/>to<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vTLV;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>vTLV.SetPtEtaPhiM(</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>m_accPtVis(*xTruthTau),</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>m_accEtaVis(*xTruthTau),</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>m_accPhiVis(*xTruthTau),</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>m_accMVis(*xTruthTau));</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vTLV;</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment">//______________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal">TLorentzVector<sp/>TauTruthMatchingTool::getTruthTauP4Vis(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1" kindref="compound">xAOD::TruthParticle</ref>&amp;<sp/>xTruthTau)</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>TLorentzVector<sp/>vTLV;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!xTruthTau.<ref refid="d5/d4c/classxAOD_1_1IParticle_1a73d35d149fce4bcc1ce55da0faf8e0d5" kindref="member">isAvailable</ref>&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;pt_vis&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vTLV;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>vTLV.SetPtEtaPhiM(</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>m_accPtVis(xTruthTau),</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>m_accEtaVis(xTruthTau),</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>m_accPhiVis(xTruthTau),</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>m_accMVis(xTruthTau));</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vTLV;</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">//______________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal">TLorentzVector<sp/>TauTruthMatchingTool::getTruthTauP4Prompt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/d20/classxAOD_1_1TauJet__v2" kindref="compound">xAOD::TauJet</ref>&amp;<sp/>xTau)</highlight></codeline>
<codeline lineno="239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1" kindref="compound">xAOD::TruthParticle</ref>*<sp/>xTruthTau<sp/>=<sp/>getTruth(xTau);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>TLorentzVector<sp/>vTLV;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xTruthTau<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_INFO(</highlight><highlight class="stringliteral">&quot;no<sp/>truth<sp/>particle<sp/>was<sp/>found,<sp/>returning<sp/>TLorentzVector<sp/>with<sp/>all<sp/>values<sp/>equal<sp/>to<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vTLV;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound">SG::AuxElement::ConstAccessor&lt;double&gt;</ref><sp/>accPtPrompt(</highlight><highlight class="stringliteral">&quot;pt_prompt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound">SG::AuxElement::ConstAccessor&lt;double&gt;</ref><sp/>accEtaPrompt(</highlight><highlight class="stringliteral">&quot;eta_prompt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound">SG::AuxElement::ConstAccessor&lt;double&gt;</ref><sp/>accPhiPrompt(</highlight><highlight class="stringliteral">&quot;phi_prompt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound">SG::AuxElement::ConstAccessor&lt;double&gt;</ref><sp/>accMPrompt(</highlight><highlight class="stringliteral">&quot;m_prompt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>vTLV.SetPtEtaPhiM(</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>accPtPrompt(*xTruthTau),</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>accEtaPrompt(*xTruthTau),</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>accPhiPrompt(*xTruthTau),</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>accMPrompt(*xTruthTau));</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vTLV;</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="comment">//______________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal">TLorentzVector<sp/>TauTruthMatchingTool::getTruthTauP4Prompt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1" kindref="compound">xAOD::TruthParticle</ref>&amp;<sp/>xTruthTau)</highlight></codeline>
<codeline lineno="262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>TLorentzVector<sp/>vTLV;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!xTruthTau.<ref refid="d5/d4c/classxAOD_1_1IParticle_1a73d35d149fce4bcc1ce55da0faf8e0d5" kindref="member">isAvailable</ref>&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;pt_prompt&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vTLV;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound">SG::AuxElement::ConstAccessor&lt;double&gt;</ref><sp/>accPtPrompt(</highlight><highlight class="stringliteral">&quot;pt_prompt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound">SG::AuxElement::ConstAccessor&lt;double&gt;</ref><sp/>accEtaPrompt(</highlight><highlight class="stringliteral">&quot;eta_prompt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound">SG::AuxElement::ConstAccessor&lt;double&gt;</ref><sp/>accPhiPrompt(</highlight><highlight class="stringliteral">&quot;phi_prompt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound">SG::AuxElement::ConstAccessor&lt;double&gt;</ref><sp/>accMPrompt(</highlight><highlight class="stringliteral">&quot;m_prompt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>vTLV.SetPtEtaPhiM(</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>accPtPrompt(xTruthTau),</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>accEtaPrompt(xTruthTau),</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>accPhiPrompt(xTruthTau),</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>accMPrompt(xTruthTau));</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vTLV;</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment">//______________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal">TLorentzVector<sp/>TauTruthMatchingTool::getTruthTauP4Invis(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/d20/classxAOD_1_1TauJet__v2" kindref="compound">xAOD::TauJet</ref>&amp;<sp/>xTau)</highlight></codeline>
<codeline lineno="281"><highlight class="normal">{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1" kindref="compound">xAOD::TruthParticle</ref>*<sp/>xTruthTau<sp/>=<sp/>getTruth(xTau);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>TLorentzVector<sp/>vTLV;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xTruthTau<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_INFO(</highlight><highlight class="stringliteral">&quot;no<sp/>truth<sp/>particle<sp/>was<sp/>found,<sp/>returning<sp/>TLorentzVector<sp/>with<sp/>all<sp/>values<sp/>equal<sp/>to<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vTLV;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound">SG::AuxElement::ConstAccessor&lt;double&gt;</ref><sp/>accPtInvis(</highlight><highlight class="stringliteral">&quot;pt_invis&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound">SG::AuxElement::ConstAccessor&lt;double&gt;</ref><sp/>accEtaInvis(</highlight><highlight class="stringliteral">&quot;eta_invis&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound">SG::AuxElement::ConstAccessor&lt;double&gt;</ref><sp/>accPhiInvis(</highlight><highlight class="stringliteral">&quot;phi_invis&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound">SG::AuxElement::ConstAccessor&lt;double&gt;</ref><sp/>accMInvis(</highlight><highlight class="stringliteral">&quot;m_invis&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>vTLV.SetPtEtaPhiM(</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>accPtInvis(*xTruthTau),</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>accEtaInvis(*xTruthTau),</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>accPhiInvis(*xTruthTau),</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>accMInvis(*xTruthTau));</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vTLV;</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="comment">//______________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal">TLorentzVector<sp/>TauTruthMatchingTool::getTruthTauP4Invis(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1" kindref="compound">xAOD::TruthParticle</ref>&amp;<sp/>xTruthTau)</highlight></codeline>
<codeline lineno="304"><highlight class="normal">{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>TLorentzVector<sp/>vTLV;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!xTruthTau.<ref refid="d5/d4c/classxAOD_1_1IParticle_1a73d35d149fce4bcc1ce55da0faf8e0d5" kindref="member">isAvailable</ref>&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;pt_invis&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vTLV;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound">SG::AuxElement::ConstAccessor&lt;double&gt;</ref><sp/>accPtInvis(</highlight><highlight class="stringliteral">&quot;pt_invis&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound">SG::AuxElement::ConstAccessor&lt;double&gt;</ref><sp/>accEtaInvis(</highlight><highlight class="stringliteral">&quot;eta_invis&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound">SG::AuxElement::ConstAccessor&lt;double&gt;</ref><sp/>accPhiInvis(</highlight><highlight class="stringliteral">&quot;phi_invis&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound">SG::AuxElement::ConstAccessor&lt;double&gt;</ref><sp/>accMInvis(</highlight><highlight class="stringliteral">&quot;m_invis&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>vTLV.SetPtEtaPhiM(</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>accPtInvis(xTruthTau),</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>accEtaInvis(xTruthTau),</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>accPhiInvis(xTruthTau),</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>accMInvis(xTruthTau));</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vTLV;</highlight></codeline>
<codeline lineno="319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal">TauAnalysisTools::TruthMatchedParticleType<sp/>TauTruthMatchingTool::getTruthParticleType(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/d20/classxAOD_1_1TauJet__v2" kindref="compound">xAOD::TauJet</ref>&amp;<sp/>xTau)</highlight></codeline>
<codeline lineno="322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1" kindref="compound">xAOD::TruthParticle</ref>*<sp/>xTruthParticle<sp/>=<sp/>xAOD::TauHelpers::getTruthParticle(&amp;xTau);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xTruthParticle)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xTruthParticle-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a1954172374c4ccde98775825fb487f27" kindref="member" tooltip="Whether the particle is a tau (or antitau).">isTau</ref>())</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound">SG::AuxElement::ConstAccessor&lt;char&gt;</ref><sp/>accIsHadronicTau(</highlight><highlight class="stringliteral">&quot;IsHadronicTau&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)accIsHadronicTau(*xTruthParticle))</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TruthHadronicTau;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TruthLeptonicTau;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xTruthParticle-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1ade4ada98e6ef0c654a5b54cb8913a6d3" kindref="member" tooltip="Whether the particle is a muon (or antimuon).">isMuon</ref>())</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TruthMuon;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xTruthParticle-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a350a4ef99fa18150a5e7473d655292a2" kindref="member" tooltip="Whether the particle is an electron (or positron).">isElectron</ref>())</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TruthElectron;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>use<sp/>const<sp/>xAOD::Jet*<sp/>xTruthJet<sp/>=<sp/>xAOD::TauHelpers::getLink&lt;xAOD::Jet&gt;(&amp;xTau,<sp/>&quot;truthJetLink&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>currently<sp/>it<sp/>is<sp/>unavailable<sp/>as<sp/>templated<sp/>class<sp/>is<sp/>not<sp/>in<sp/>icc<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound" tooltip="Helper class to provide constant type-safe access to aux data.">SG::AuxElement::ConstAccessor&lt; ElementLink&lt; xAOD::JetContainer &gt;</ref><sp/>&gt;<sp/>accTruthJetLink(</highlight><highlight class="stringliteral">&quot;truthJetLink&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt; xAOD::JetContainer &gt;</ref><sp/>lTruthParticleLink<sp/>=<sp/>accTruthJetLink(xTau);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lTruthParticleLink.<ref refid="d6/d6e/classElementLink_1a5f30b71e430164fc4ee11880e4bb8d12" kindref="member" tooltip="Check if the element can be found.">isValid</ref>())</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TruthJet;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Unknown;</highlight></codeline>
<codeline lineno="347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="comment">//______________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TauTruthMatchingTool::getNTauDecayParticles(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/d20/classxAOD_1_1TauJet__v2" kindref="compound">xAOD::TauJet</ref>&amp;<sp/>xTau,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iPdgId,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bCompareAbsoluteValues)</highlight></codeline>
<codeline lineno="351"><highlight class="normal">{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1" kindref="compound">xAOD::TruthParticle</ref>*<sp/>xTruthTau<sp/>=<sp/>getTruth(xTau);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xTruthTau<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;no<sp/>truth<sp/>particle<sp/>was<sp/>found,<sp/>return<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!xTruthTau-&gt;<ref refid="d5/d4c/classxAOD_1_1IParticle_1a73d35d149fce4bcc1ce55da0faf8e0d5" kindref="member">isAvailable</ref>&lt;std::vector&lt;int&gt;&gt;(</highlight><highlight class="stringliteral">&quot;DecayModeVector&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_INFO(</highlight><highlight class="stringliteral">&quot;found<sp/>truth<sp/>particle<sp/>is<sp/>not<sp/>a<sp/>truth<sp/>tau,<sp/>return<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getNTauDecayParticles(*xTruthTau,iPdgId,<sp/>bCompareAbsoluteValues);</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="comment">//______________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TauTruthMatchingTool::getNTauDecayParticles(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1" kindref="compound">xAOD::TruthParticle</ref>&amp;<sp/>xTruthTau,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iPdgId,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bCompareAbsoluteValues)</highlight></codeline>
<codeline lineno="368"><highlight class="normal">{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iNum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!xTruthTau.<ref refid="d5/d4c/classxAOD_1_1IParticle_1a73d35d149fce4bcc1ce55da0faf8e0d5" kindref="member">isAvailable</ref>&lt;std::vector&lt;int&gt;&gt;(</highlight><highlight class="stringliteral">&quot;DecayModeVector&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(</highlight><highlight class="stringliteral">&quot;passed<sp/>truth<sp/>particle<sp/>is<sp/>not<sp/>a<sp/>truth<sp/>tau,<sp/>return<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound" tooltip="Helper class to provide constant type-safe access to aux data.">SG::AuxElement::ConstAccessor&lt;std::vector&lt;int&gt;</ref><sp/>&gt;<sp/>accDecayModeVector(</highlight><highlight class="stringliteral">&quot;DecayModeVector&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iPdgId2<sp/>:<sp/>accDecayModeVector(xTruthTau))</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bCompareAbsoluteValues)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iPdgId2<sp/>==<sp/>iPdgId)<sp/>iNum++;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::abs(iPdgId2)<sp/>==<sp/>std::abs(iPdgId))<sp/>iNum++;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iNum;</highlight></codeline>
<codeline lineno="387"><highlight class="normal">}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="comment">//______________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal">xAOD::TauJetParameters::DecayMode<sp/>TauTruthMatchingTool::getDecayMode(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/d20/classxAOD_1_1TauJet__v2" kindref="compound">xAOD::TauJet</ref>&amp;<sp/>xTau)</highlight></codeline>
<codeline lineno="391"><highlight class="normal">{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1" kindref="compound">xAOD::TruthParticle</ref>*<sp/>xTruthTau<sp/>=<sp/>getTruth(xTau);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xTruthTau<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;no<sp/>truth<sp/>particle<sp/>was<sp/>found,<sp/>return<sp/>Mode_Error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xAOD::TauJetParameters::Mode_Error;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!xTruthTau-&gt;<ref refid="d5/d4c/classxAOD_1_1IParticle_1a73d35d149fce4bcc1ce55da0faf8e0d5" kindref="member">isAvailable</ref>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;numCharged&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_INFO(</highlight><highlight class="stringliteral">&quot;found<sp/>truth<sp/>particle<sp/>is<sp/>not<sp/>a<sp/>truth<sp/>tau,<sp/>return<sp/>Mode_Error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xAOD::TauJetParameters::Mode_Error;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getDecayMode(*xTruthTau);</highlight></codeline>
<codeline lineno="404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="comment">//______________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal">xAOD::TauJetParameters::DecayMode<sp/>TauTruthMatchingTool::getDecayMode(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1" kindref="compound">xAOD::TruthParticle</ref>&amp;<sp/>xTruthTau)</highlight></codeline>
<codeline lineno="408"><highlight class="normal">{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(xTruthTau.<ref refid="d5/d4c/classxAOD_1_1IParticle_1a73d35d149fce4bcc1ce55da0faf8e0d5" kindref="member">isAvailable</ref>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;numCharged&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(</highlight><highlight class="stringliteral">&quot;passed<sp/>truth<sp/>particle<sp/>is<sp/>not<sp/>a<sp/>truth<sp/>tau,<sp/>return<sp/>Mode_Error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xAOD::TauJetParameters::Mode_Error;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iCharged<sp/>=<sp/>getNTauDecayParticles(xTruthTau,MC::PID::PIPLUS,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>+<sp/>getNTauDecayParticles(xTruthTau,MC::PID::KPLUS,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iNeutral<sp/>=<sp/>getNTauDecayParticles(xTruthTau,MC::PID::PI0,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iCharged<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iNeutral<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xAOD::TauJetParameters::DecayMode::Mode_1p0n;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iNeutral<sp/>==<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xAOD::TauJetParameters::DecayMode::Mode_1p1n;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iNeutral<sp/>&gt;=<sp/>2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xAOD::TauJetParameters::DecayMode::Mode_1pXn;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iCharged<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iNeutral<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xAOD::TauJetParameters::DecayMode::Mode_3p0n;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iNeutral<sp/>&gt;=<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xAOD::TauJetParameters::DecayMode::Mode_3pXn;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iCharged<sp/>==<sp/>2<sp/>or<sp/>iCharged<sp/>==<sp/>4<sp/>or<sp/>iCharged<sp/>==<sp/>5)</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xAOD::TauJetParameters::DecayMode::Mode_Other;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iCharged<sp/>==<sp/>0<sp/>or<sp/>iCharged<sp/>&gt;=6)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xAOD::TauJetParameters::DecayMode::Mode_NotSet;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>you<sp/>got<sp/>here,<sp/>something<sp/>should<sp/>have<sp/>gone<sp/>wrong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xAOD::TauJetParameters::DecayMode::Mode_Error;</highlight></codeline>
<codeline lineno="436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="comment">//=================================PRIVATE-PART=================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="comment">//______________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal">StatusCode<sp/>TauTruthMatchingTool::findTruthTau(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/d20/classxAOD_1_1TauJet__v2" kindref="compound">xAOD::TauJet</ref>&amp;<sp/>xTau)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="441"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>decorations<sp/>were<sp/>already<sp/>added<sp/>to<sp/>the<sp/>first<sp/>passed<sp/>tau</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_bIsTruthMatchedAvailableChecked)</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>m_bIsTruthMatchedAvailable<sp/>=<sp/>xTau.<ref refid="d5/d4c/classxAOD_1_1IParticle_1a73d35d149fce4bcc1ce55da0faf8e0d5" kindref="member">isAvailable</ref>&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;IsTruthMatched&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>m_bIsTruthMatchedAvailableChecked<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_bIsTruthMatchedAvailable)</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;IsTruthMatched<sp/>decoration<sp/>is<sp/>available<sp/>on<sp/>first<sp/>tau<sp/>processed,<sp/>switched<sp/>of<sp/>rerun<sp/>for<sp/>further<sp/>taus.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;If<sp/>a<sp/>truth<sp/>matching<sp/>needs<sp/>to<sp/>be<sp/>redone,<sp/>please<sp/>pass<sp/>a<sp/>shallow<sp/>copy<sp/>of<sp/>the<sp/>original<sp/>tau.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_bIsTruthMatchedAvailable)</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>search<sp/>for<sp/>truth<sp/>taus<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>be<sp/>reviewed,<sp/>commenting<sp/>out<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(!xTau.isAvailable&lt;char&gt;(&quot;IsTruthMatched&quot;))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>temporary<sp/>fix<sp/>for<sp/>SUSY<sp/>derivations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(!xTau.isAvailable&lt;char&gt;(&quot;IsTruthMatched&quot;))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>||<sp/>!xTau.isAvailable&lt;<sp/>ElementLink&lt;<sp/>xAOD::TruthParticleContainer<sp/>&gt;<sp/>&gt;(&quot;truthParticleLink&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>||<sp/>(xTau.auxdata&lt;char&gt;(&quot;IsTruthMatched&quot;)<sp/>&amp;&amp;<sp/>xTau.auxdata&lt;<sp/>ElementLink&lt;<sp/>xAOD::TruthParticleContainer<sp/>&gt;<sp/>&gt;(&quot;truthParticleLink&quot;)<sp/>==<sp/>NULL<sp/>))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_bTruthTauAvailable)</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>checkTruthMatch(xTau,<sp/>*m_xTruthTauContainerConst);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>checkTruthMatch(xTau,<sp/>*m_xTruthTauContainer);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>StatusCode::SUCCESS;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal">}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="comment">//______________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal">StatusCode<sp/>TauTruthMatchingTool::retrieveTruthTaus()</highlight></codeline>
<codeline lineno="477"><highlight class="normal">{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_bNewEvent)</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>m_bNewEvent<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_bTruthTauAvailable<sp/>)</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(evtStore()-&gt;contains&lt;xAOD::TruthParticleContainer&gt;(m_sTruthTauContainerName))</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_CHECK(<sp/>evtStore()-&gt;retrieve(m_xTruthTauContainerConst,m_sTruthTauContainerName));</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_INFO(</highlight><highlight class="stringliteral">&quot;TruthTaus<sp/>container<sp/>with<sp/>name<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_sTruthTauContainerName<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>not<sp/>available,<sp/>will<sp/>generate<sp/>the<sp/>container<sp/>for<sp/>each<sp/>event<sp/>from<sp/>TruthParticles<sp/>container&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_bTruthTauAvailable<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_bTruthMuonAvailable<sp/>)</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(evtStore()-&gt;contains&lt;xAOD::TruthParticleContainer&gt;(m_sTruthMuonContainerName))</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_CHECK(evtStore()-&gt;retrieve(m_xTruthMuonContainerConst,m_sTruthMuonContainerName));</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_INFO(</highlight><highlight class="stringliteral">&quot;TruthMuons<sp/>container<sp/>with<sp/>name<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_sTruthMuonContainerName<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>not<sp/>available,<sp/>won&apos;t<sp/>perform<sp/>matching<sp/>to<sp/>truth<sp/>muons&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_bTruthMuonAvailable<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_bTruthElectronAvailable<sp/>)</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(evtStore()-&gt;contains&lt;xAOD::TruthParticleContainer&gt;(m_sTruthElectronContainerName))</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_CHECK(evtStore()-&gt;retrieve(m_xTruthElectronContainerConst,m_sTruthElectronContainerName));</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_INFO(</highlight><highlight class="stringliteral">&quot;TruthElectrons<sp/>container<sp/>with<sp/>name<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_sTruthElectronContainerName<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>not<sp/>available,<sp/>won&apos;t<sp/>perform<sp/>matching<sp/>to<sp/>truth<sp/>electrons&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_bTruthElectronAvailable<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_bTruthJetAvailable<sp/>)</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(evtStore()-&gt;contains&lt;xAOD::JetContainer&gt;(m_sTruthJetContainerName))</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_CHECK(evtStore()-&gt;retrieve(m_xTruthJetContainerConst,m_sTruthJetContainerName));</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_INFO(</highlight><highlight class="stringliteral">&quot;TruthJets<sp/>container<sp/>with<sp/>name<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_sTruthJetContainerName<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>not<sp/>available,<sp/>won&apos;t<sp/>perform<sp/>matching<sp/>to<sp/>truth<sp/>jets&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_bTruthJetAvailable<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>go<sp/>here<sp/>if<sp/>TruthTaus<sp/>was<sp/>not<sp/>found<sp/>in<sp/>m_bTruthTauAvailable<sp/>if-block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!m_bTruthTauAvailable<sp/>)</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(evtStore()-&gt;contains&lt;xAOD::TruthParticleContainer&gt;(m_sTruthParticlesContainerName))</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>evtStore()-&gt;retrieve(m_xTruthParticleContainer,m_sTruthParticlesContainerName).isSuccess()<sp/>)</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buildTruthTausFromTruthParticles();</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_FATAL(</highlight><highlight class="stringliteral">&quot;TruthParticles<sp/>container<sp/>is<sp/>not<sp/>available<sp/>but<sp/>needed<sp/>for<sp/>building<sp/>truth<sp/>taus&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="545"><highlight class="normal">}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="comment">//______________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal">StatusCode<sp/>TauTruthMatchingTool::buildTruthTausFromTruthParticles()</highlight></codeline>
<codeline lineno="549"><highlight class="normal">{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_xTruthTauContainer<sp/>&amp;&amp;<sp/>!m_bWriteTruthTaus)</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_xTruthTauContainer;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_xTruthTauAuxContainer;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>new<sp/>containers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/>m_xTruthTauContainer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::TruthParticleContainer</ref>();</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/>m_xTruthTauAuxContainer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="da/de8/classxAOD_1_1TruthParticleAuxContainer__v1" kindref="compound">xAOD::TruthParticleAuxContainer</ref>();</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/>m_xTruthTauContainer-&gt;setStore(<sp/>m_xTruthTauAuxContainer<sp/>);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_bWriteTruthTaus)</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>evtStore()-&gt;record(<sp/>m_xTruthTauContainer,<sp/>m_sNewTruthTauContainerName<sp/>).isFailure()<sp/>)</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_FATAL(</highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>create<sp/>truth<sp/>tau<sp/>container<sp/>with<sp/>key<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_sNewTruthTauContainerName);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>evtStore()-&gt;record(<sp/>m_xTruthTauAuxContainer,<sp/>m_sNewTruthTauContainerNameAux<sp/>).isFailure()<sp/>)</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_FATAL(</highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>create<sp/>truth<sp/>tau<sp/>container<sp/>with<sp/>key<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_sNewTruthTauContainerNameAux);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(<sp/></highlight><highlight class="stringliteral">&quot;Recorded<sp/>new<sp/>TruthParticleContainer<sp/>with<sp/>key:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><sp/>m_sNewTruthTauContainerName);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>xTruthParticle<sp/>:<sp/>*m_xTruthParticleContainer)</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>xTruthParticle-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a1954172374c4ccde98775825fb487f27" kindref="member" tooltip="Whether the particle is a tau (or antitau).">isTau</ref>()<sp/>)</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1" kindref="compound">xAOD::TruthParticle</ref>*<sp/>xTruthTau<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1" kindref="compound">xAOD::TruthParticle</ref>();</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xTruthTau-&gt;<ref refid="dc/db0/classSG_1_1AuxElement_1a197bf9fc579d49e25a850a4b3a5c14e8" kindref="member" tooltip="Create a new (empty) private store for this object.">makePrivateStore</ref>(<sp/>*xTruthParticle<sp/>);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>examineTruthTau(*xTruthTau).isFailure()<sp/>)</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>xTruthTau;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Run<sp/>classification</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::pair&lt;MCTruthPartClassifier::ParticleType,<sp/>MCTruthPartClassifier::ParticleOrigin&gt;<sp/>pClassification<sp/>=<sp/>m_tMCTruthClassifier-&gt;particleTruthClassifier(xTruthTau);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound">SG::AuxElement::Decorator&lt;unsigned int&gt;</ref><sp/>decClassifierParticleType(</highlight><highlight class="stringliteral">&quot;classifierParticleType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound">SG::AuxElement::Decorator&lt;unsigned int&gt;</ref><sp/>decClassifierParticleOrigin(</highlight><highlight class="stringliteral">&quot;classifierParticleOrigin&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>decClassifierParticleType(*xTruthTau)<sp/>=<sp/>pClassification.first;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>decClassifierParticleOrigin(*xTruthTau)<sp/>=<sp/>pClassification.second;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>link<sp/>to<sp/>the<sp/>original<sp/>TruthParticle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink &lt; xAOD::TruthParticleContainer &gt;</ref><sp/>lTruthParticleLink(xTruthParticle,<sp/>*m_xTruthParticleContainer);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Accessor&lt;ElementLink&lt; xAOD::TruthParticleContainer &gt;</ref><sp/>&gt;<sp/>accOriginalTruthParticle(</highlight><highlight class="stringliteral">&quot;originalTruthParticle&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>accOriginalTruthParticle(*xTruthTau)<sp/>=<sp/>lTruthParticleLink;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_xTruthTauContainer-&gt;push_back(xTruthTau);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="605"><highlight class="normal">}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="comment">//______________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal">StatusCode<sp/>TauTruthMatchingTool::checkTruthMatch<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/d20/classxAOD_1_1TauJet__v2" kindref="compound">xAOD::TauJet</ref>&amp;<sp/>xTau,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::TruthParticleContainer</ref>&amp;<sp/>xTruthTauContainer)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="609"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1" kindref="compound">xAOD::TruthParticle</ref>*<sp/>xTruthMatch<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d9c/classxAOD_1_1Jet__v1" kindref="compound">xAOD::Jet</ref>*<sp/>xTruthJetMatch<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/>TruthMatchedParticleType<sp/>eTruthMatchedParticleType<sp/>=<sp/>Unknown;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound">SG::AuxElement::Decorator&lt;char&gt;</ref><sp/>decIsTruthMatched(</highlight><highlight class="stringliteral">&quot;IsTruthMatched&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Decorator&lt; ElementLink&lt; xAOD::JetContainer &gt;</ref><sp/>&gt;<sp/>decTruthJetLink(</highlight><highlight class="stringliteral">&quot;truthJetLink&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dPtMax<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>xTruthTauIt<sp/>:<sp/>xTruthTauContainer)</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>TLorentzVector<sp/>vTruthVisTLV;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>vTruthVisTLV.SetPtEtaPhiM(m_accPtVis(*xTruthTauIt),</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_accEtaVis(*xTruthTauIt),</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_accPhiVis(*xTruthTauIt),</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_accMVis(*xTruthTauIt));</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xTau.<ref refid="d5/d20/classxAOD_1_1TauJet__v2_1a03bd8bf0b613ab25360682b836516cc7" kindref="member" tooltip="The full 4-momentum of the particle.">p4</ref>().DeltaR(vTruthVisTLV)<sp/>&lt;=<sp/>m_dMaxDeltaR)</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vTruthVisTLV.Pt()&lt;dPtMax)</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kindref="compound">SG::AuxElement::ConstAccessor&lt;char&gt;</ref><sp/>accIsHadronicTau(</highlight><highlight class="stringliteral">&quot;IsHadronicTau&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)accIsHadronicTau(*xTruthTauIt))</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eTruthMatchedParticleType<sp/>=<sp/>TruthHadronicTau;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eTruthMatchedParticleType<sp/>=<sp/>TruthLeptonicTau;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xTruthMatch<sp/>=<sp/>xTruthTauIt;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dPtMax<sp/>=<sp/>vTruthVisTLV.Pt();</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!xTruthMatch<sp/>and<sp/>m_xTruthMuonContainerConst)</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dPtMax<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>xTruthMuonIt<sp/>:<sp/>*m_xTruthMuonContainerConst)</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xTau.<ref refid="d5/d20/classxAOD_1_1TauJet__v2_1a03bd8bf0b613ab25360682b836516cc7" kindref="member" tooltip="The full 4-momentum of the particle.">p4</ref>().DeltaR(xTruthMuonIt-&gt;p4())<sp/>&lt;=<sp/>m_dMaxDeltaR)</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xTruthMuonIt-&gt;pt()&lt;dPtMax)</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eTruthMatchedParticleType<sp/>=<sp/>TruthMuon;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xTruthMatch<sp/>=<sp/>xTruthMuonIt;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dPtMax<sp/>=<sp/>xTruthMuonIt-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1acbd8f705d624ec77fa7fab90a553d8cb" kindref="member" tooltip="The transverse momentum () of the particle.">pt</ref>();</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!xTruthMatch<sp/>and<sp/>m_xTruthElectronContainerConst)</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dPtMax<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>xTruthElectronIt<sp/>:<sp/>*m_xTruthElectronContainerConst)</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xTau.<ref refid="d5/d20/classxAOD_1_1TauJet__v2_1a03bd8bf0b613ab25360682b836516cc7" kindref="member" tooltip="The full 4-momentum of the particle.">p4</ref>().DeltaR(xTruthElectronIt-&gt;p4())<sp/>&lt;=<sp/>m_dMaxDeltaR)</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xTruthElectronIt-&gt;pt()&lt;dPtMax)</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eTruthMatchedParticleType<sp/>=<sp/>TruthElectron;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xTruthMatch<sp/>=<sp/>xTruthElectronIt;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dPtMax<sp/>=<sp/>xTruthElectronIt-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1acbd8f705d624ec77fa7fab90a553d8cb" kindref="member" tooltip="The transverse momentum () of the particle.">pt</ref>();</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_xTruthJetContainerConst)</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dPtMax<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>xTruthJetIt<sp/>:<sp/>*m_xTruthJetContainerConst)</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xTau.<ref refid="d5/d20/classxAOD_1_1TauJet__v2_1a03bd8bf0b613ab25360682b836516cc7" kindref="member" tooltip="The full 4-momentum of the particle.">p4</ref>().DeltaR(xTruthJetIt-&gt;p4())<sp/>&lt;=<sp/>m_dMaxDeltaR)</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xTruthJetIt-&gt;pt()&lt;dPtMax)</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xTruthJetMatch<sp/>=<sp/>xTruthJetIt;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dPtMax<sp/>=<sp/>xTruthJetIt-&gt;<ref refid="db/d9c/classxAOD_1_1Jet__v1_1a138d731ae5cad7eee14716f6d0716eab" kindref="member" tooltip="The transverse momentum () of the particle.">pt</ref>();</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xTruthMatch)</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>decIsTruthMatched(xTau)<sp/>=<sp/>(char)</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>decIsTruthMatched(xTau)<sp/>=<sp/>(char)</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xTruthJetMatch)</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink &lt; xAOD::JetContainer &gt;</ref><sp/>lTruthParticleLink(xTruthJetMatch,<sp/>*m_xTruthJetContainerConst);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>decTruthJetLink(xTau)<sp/>=<sp/>lTruthParticleLink;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink &lt; xAOD::JetContainer &gt;</ref><sp/>lTruthParticleLink;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>decTruthJetLink(xTau)<sp/>=<sp/>lTruthParticleLink;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_bWriteTruthTaus<sp/>and<sp/>!m_bTruthTauAvailable)</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Decorator&lt; const xAOD::TruthParticle* &gt;</ref><sp/>decTruthTau(</highlight><highlight class="stringliteral">&quot;TruthTau&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>decTruthTau(xTau)<sp/>=<sp/>xTruthMatch;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Decorator&lt; ElementLink&lt; xAOD::TruthParticleContainer &gt;</ref><sp/>&gt;<sp/>decTruthTau(</highlight><highlight class="stringliteral">&quot;TruthTau&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Decorator&lt;ElementLink&lt; xAOD::TruthParticleContainer &gt;</ref>&gt;<sp/>decTruthParticleLink(</highlight><highlight class="stringliteral">&quot;truthParticleLink&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>link<sp/>to<sp/>the<sp/>original<sp/>TruthParticle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xTruthMatch)</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>decIsTruthMatched(xTau)<sp/>=<sp/>(char)</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eTruthMatchedParticleType<sp/>==<sp/>TruthHadronicTau<sp/>or<sp/>eTruthMatchedParticleType<sp/>==<sp/>TruthLeptonicTau)</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink &lt; xAOD::TruthParticleContainer &gt;</ref><sp/>lTruthParticleLink(xTruthMatch,<sp/>xTruthTauContainer);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>decTruthParticleLink(xTau)<sp/>=<sp/>lTruthParticleLink;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_bTruthTauAvailable)</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decTruthTau(xTau)<sp/>=<sp/>lTruthParticleLink;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eTruthMatchedParticleType<sp/>==<sp/>TruthMuon)</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink &lt; xAOD::TruthParticleContainer &gt;</ref><sp/>lTruthParticleLink(xTruthMatch,<sp/>*m_xTruthMuonContainerConst);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>decTruthParticleLink(xTau)<sp/>=<sp/>lTruthParticleLink;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eTruthMatchedParticleType<sp/>==<sp/>TruthElectron)</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink &lt; xAOD::TruthParticleContainer &gt;</ref><sp/>lTruthParticleLink(xTruthMatch,<sp/>*m_xTruthElectronContainerConst);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>decTruthParticleLink(xTau)<sp/>=<sp/>lTruthParticleLink;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>decIsTruthMatched(xTau)<sp/>=<sp/>(char)</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink &lt; xAOD::TruthParticleContainer &gt;</ref><sp/>lTruthParticleLink;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>decTruthParticleLink(xTau)<sp/>=<sp/>lTruthParticleLink;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="745"><highlight class="normal">}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="comment">//______________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal">StatusCode<sp/>TauTruthMatchingTool::examineTruthTau(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1" kindref="compound">xAOD::TruthParticle</ref>&amp;<sp/>xTruthParticle)</highlight></codeline>
<codeline lineno="749"><highlight class="normal">{</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>this<sp/>tau<sp/>if<sp/>it<sp/>has<sp/>no<sp/>decay<sp/>vertex,<sp/>should<sp/>not<sp/>happen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!xTruthParticle.<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a9cab2811448678a3365508a838bc1013" kindref="member" tooltip="Check for a decay vertex on this particle.">hasDecayVtx</ref>()<sp/>)</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;looking<sp/>for<sp/>charged<sp/>daughters<sp/>of<sp/>a<sp/>truth<sp/>tau&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/>m_iNChargedPions<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/>m_iNNeutralPions<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/>m_iNChargedOthers<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/>m_iNNeutralOthers<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/>m_iNChargedDaughters<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/>m_vDecayMode.clear();</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>define<sp/>truth<sp/>visible<sp/>kinematic<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/>m_vTruthVisTLV<sp/>=<sp/>TLorentzVector();</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/>m_vTruthVisTLVCharged<sp/>=<sp/>TLorentzVector();</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/>m_vTruthVisTLVNeutral<sp/>=<sp/>TLorentzVector();</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>false,<sp/>if<sp/>there<sp/>is<sp/>a<sp/>hadron<sp/>in<sp/>decay<sp/>products,<sp/>it<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>switched<sp/>to<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/>m_bIsHadronicTau<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/dfa/classxAOD_1_1TruthVertex__v1" kindref="compound">xAOD::TruthVertex</ref>*<sp/>xDecayVertex<sp/>=<sp/>xTruthParticle.<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a13d49b87d6fd9148a716341be8253ed9" kindref="member" tooltip="The decay vertex of this particle.">decayVtx</ref>();</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!xDecayVertex<sp/>)</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iOutgoingParticle<sp/>=<sp/>0;<sp/>iOutgoingParticle<sp/>&lt;<sp/>xDecayVertex-&gt;<ref refid="d8/dfa/classxAOD_1_1TruthVertex__v1_1a7137f8154a53ad1794631c2e91109786" kindref="member" tooltip="Get the number of outgoing particles.">nOutgoingParticles</ref>();<sp/>++iOutgoingParticle<sp/>)</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1" kindref="compound">xAOD::TruthParticle</ref>*<sp/>xTruthDaughter<sp/>=<sp/>xDecayVertex-&gt;<ref refid="d8/dfa/classxAOD_1_1TruthVertex__v1_1aa456a441c143af40d9c2b6e9a4da9ba7" kindref="member" tooltip="Get one of the outgoing particles.">outgoingParticle</ref>(iOutgoingParticle);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!xTruthDaughter)</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_FATAL(</highlight><highlight class="stringliteral">&quot;Truth<sp/>daughter<sp/>of<sp/>tau<sp/>decay<sp/>was<sp/>not<sp/>found<sp/>in<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;m_sTruthParticlesContainerName&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>container.<sp/>Please<sp/>ensure<sp/>that<sp/>this<sp/>container<sp/>has<sp/>the<sp/>full<sp/>tau<sp/>decay<sp/>information<sp/>or<sp/>produce<sp/>the<sp/>TruthTaus<sp/>container<sp/>in<sp/>AtlasDerivation.\nInformation<sp/>on<sp/>how<sp/>to<sp/>do<sp/>this<sp/>can<sp/>be<sp/>found<sp/>here:\nhttps://twiki.cern.ch/twiki/bin/viewauth/AtlasProtected/TauPreRecommendations2015#Accessing_Tau_Truth_Information&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>tau<sp/>decays<sp/>into<sp/>tau<sp/>this<sp/>is<sp/>not<sp/>a<sp/>proper<sp/>tau<sp/>decay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>xTruthDaughter-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a1954172374c4ccde98775825fb487f27" kindref="member" tooltip="Whether the particle is a tau (or antitau).">isTau</ref>()<sp/>)</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;Tau<sp/>decays<sp/>into<sp/>a<sp/>tau<sp/>itself<sp/>-&gt;<sp/>skip<sp/>this<sp/>decay&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/>examineTruthTauDecay(xTruthParticle).ignore();</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_bIsHadronicTau)</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(m_iNChargedDaughters<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>prong<sp/>hadronic<sp/>truth<sp/>tau<sp/>was<sp/>found<sp/>with<sp/>barcode<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;xTruthParticle.<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a67b81d8c6616ba826f9694ff24b613d4" kindref="member">barcode</ref>());</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(m_iNChargedDaughters<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>prong<sp/>leptonic<sp/>truth<sp/>tau<sp/>was<sp/>found<sp/>with<sp/>barcode<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;xTruthParticle.<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a67b81d8c6616ba826f9694ff24b613d4" kindref="member">barcode</ref>());</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_iNChargedDaughters%2<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(</highlight><highlight class="stringliteral">&quot;found<sp/>tau<sp/>with<sp/>even<sp/>multiplicity:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_iNChargedDaughters);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>printDecay(xTruthParticle);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Decorator&lt;double&gt;</ref><sp/>decPtVis(</highlight><highlight class="stringliteral">&quot;pt_vis&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Decorator&lt;double&gt;</ref><sp/>decEtaVis(</highlight><highlight class="stringliteral">&quot;eta_vis&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Decorator&lt;double&gt;</ref><sp/>decPhiVis(</highlight><highlight class="stringliteral">&quot;phi_vis&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Decorator&lt;double&gt;</ref><sp/>accMVis(</highlight><highlight class="stringliteral">&quot;m_vis&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Decorator&lt;size_t&gt;</ref><sp/>decNumCharged(</highlight><highlight class="stringliteral">&quot;numCharged&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Decorator&lt;size_t&gt;</ref><sp/>decNumChargedPion(</highlight><highlight class="stringliteral">&quot;numChargedPion&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Decorator&lt;size_t&gt;</ref><sp/>decNumNeutral(</highlight><highlight class="stringliteral">&quot;numNeutral&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Decorator&lt;size_t&gt;</ref><sp/>accNumNeutralPion(</highlight><highlight class="stringliteral">&quot;numNeutralPion&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/>decPtVis(xTruthParticle)<sp/>=<sp/>m_vTruthVisTLV.Pt();</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/>decEtaVis(xTruthParticle)<sp/>=<sp/>m_vTruthVisTLV.Eta();</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/>decPhiVis(xTruthParticle)<sp/>=<sp/>m_vTruthVisTLV.Phi();</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/>accMVis(xTruthParticle)<sp/>=<sp/>m_vTruthVisTLV.M();</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/>decNumCharged(xTruthParticle)<sp/>=<sp/>m_iNChargedDaughters;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/>decNumChargedPion(xTruthParticle)<sp/>=<sp/>m_iNChargedPions;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/>decNumNeutral(xTruthParticle)<sp/>=<sp/>m_iNNeutralPions+m_iNNeutralOthers;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/>accNumNeutralPion(xTruthParticle)<sp/>=<sp/>m_iNNeutralPions;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound">SG::AuxElement::Decorator&lt;char&gt;</ref><sp/>decIsHadronicTau(</highlight><highlight class="stringliteral">&quot;IsHadronicTau&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/>decIsHadronicTau(xTruthParticle)<sp/>=<sp/>(char)m_bIsHadronicTau;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_bWriteInvisibleFourMomentum<sp/>)</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>TLorentzVector<sp/>vTruthInvisTLV<sp/>=<sp/>xTruthParticle.<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a6dbca87b898e3545621c649bacfe3c5e" kindref="member">p4</ref>()<sp/>-<sp/>m_vTruthVisTLV;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Decorator&lt;double&gt;</ref><sp/>decPtInvis(</highlight><highlight class="stringliteral">&quot;pt_invis&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Decorator&lt;double&gt;</ref><sp/>decEtaInvis(</highlight><highlight class="stringliteral">&quot;eta_invis&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Decorator&lt;double&gt;</ref><sp/>decPhiInvis(</highlight><highlight class="stringliteral">&quot;phi_invis&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Decorator&lt;double&gt;</ref><sp/>accMInvis(</highlight><highlight class="stringliteral">&quot;m_invis&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>decPtInvis(xTruthParticle)<sp/><sp/>=<sp/>vTruthInvisTLV.Pt();</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>decEtaInvis(xTruthParticle)<sp/>=<sp/>vTruthInvisTLV.Eta();</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>decPhiInvis(xTruthParticle)<sp/>=<sp/>vTruthInvisTLV.Phi();</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>accMInvis(xTruthParticle)<sp/><sp/><sp/>=<sp/>vTruthInvisTLV.M();</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_bWriteVisibleChargedFourMomentum<sp/>)</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Decorator&lt;double&gt;</ref><sp/>decPtVisCharged(</highlight><highlight class="stringliteral">&quot;pt_vis_charged&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Decorator&lt;double&gt;</ref><sp/>decEtaVisCharged(</highlight><highlight class="stringliteral">&quot;eta_vis_charged&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Decorator&lt;double&gt;</ref><sp/>decPhiVisCharged(</highlight><highlight class="stringliteral">&quot;phi_vis_charged&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Decorator&lt;double&gt;</ref><sp/>accMVisCharged(</highlight><highlight class="stringliteral">&quot;m_vis_charged&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>decPtVisCharged(xTruthParticle)<sp/><sp/>=<sp/>m_vTruthVisTLVCharged.Pt();</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>decEtaVisCharged(xTruthParticle)<sp/>=<sp/>m_vTruthVisTLVCharged.Eta();</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>decPhiVisCharged(xTruthParticle)<sp/>=<sp/>m_vTruthVisTLVCharged.Phi();</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>accMVisCharged(xTruthParticle)<sp/><sp/><sp/>=<sp/>m_vTruthVisTLVCharged.M();</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_bWriteVisibleNeutralFourMomentum<sp/>)</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Decorator&lt;double&gt;</ref><sp/>decPtVisNeutral(</highlight><highlight class="stringliteral">&quot;pt_vis_neutral&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Decorator&lt;double&gt;</ref><sp/>decEtaVisNeutral(</highlight><highlight class="stringliteral">&quot;eta_vis_neutral&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Decorator&lt;double&gt;</ref><sp/>decPhiVisNeutral(</highlight><highlight class="stringliteral">&quot;phi_vis_neutral&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Decorator&lt;double&gt;</ref><sp/>accMVisNeutral(</highlight><highlight class="stringliteral">&quot;m_vis_neutral&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>decPtVisNeutral(xTruthParticle)<sp/><sp/>=<sp/>m_vTruthVisTLVNeutral.Pt();</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/>decEtaVisNeutral(xTruthParticle)<sp/>=<sp/>m_vTruthVisTLVNeutral.Eta();</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>decPhiVisNeutral(xTruthParticle)<sp/>=<sp/>m_vTruthVisTLVNeutral.Phi();</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>accMVisNeutral(xTruthParticle)<sp/><sp/><sp/>=<sp/>m_vTruthVisTLVNeutral.M();</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_bWriteDecayModeVector<sp/>)</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d3/d59/classSG_1_1AuxElement_1_1Decorator" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Decorator&lt;std::vector&lt;int&gt;</ref><sp/>&gt;<sp/>decDecayModeVector(</highlight><highlight class="stringliteral">&quot;DecayModeVector&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>decDecayModeVector(xTruthParticle)<sp/>=<sp/>m_vDecayMode;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="871"><highlight class="normal">}</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight><highlight class="comment">//______________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal">StatusCode<sp/>TauTruthMatchingTool::examineTruthTauDecay(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1" kindref="compound">xAOD::TruthParticle</ref>&amp;<sp/>xTruthParticle)</highlight></codeline>
<codeline lineno="875"><highlight class="normal">{</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>vertex<sp/>and<sp/>check<sp/>if<sp/>it<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/dfa/classxAOD_1_1TruthVertex__v1" kindref="compound">xAOD::TruthVertex</ref>*<sp/>xDecayVertex<sp/>=<sp/>xTruthParticle.<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a13d49b87d6fd9148a716341be8253ed9" kindref="member" tooltip="The decay vertex of this particle.">decayVtx</ref>();</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!xDecayVertex)</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iOutgoingParticle<sp/>=<sp/>0;<sp/>iOutgoingParticle<sp/>&lt;<sp/>xDecayVertex-&gt;<ref refid="d8/dfa/classxAOD_1_1TruthVertex__v1_1a7137f8154a53ad1794631c2e91109786" kindref="member" tooltip="Get the number of outgoing particles.">nOutgoingParticles</ref>();<sp/>++iOutgoingParticle<sp/>)</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1" kindref="compound">xAOD::TruthParticle</ref>*<sp/>xTruthDaughter<sp/>=<sp/>xDecayVertex-&gt;<ref refid="d8/dfa/classxAOD_1_1TruthVertex__v1_1aa456a441c143af40d9c2b6e9a4da9ba7" kindref="member" tooltip="Get one of the outgoing particles.">outgoingParticle</ref>(iOutgoingParticle);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!xTruthDaughter)</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_FATAL(</highlight><highlight class="stringliteral">&quot;Truth<sp/>daughter<sp/>of<sp/>tau<sp/>decay<sp/>was<sp/>not<sp/>found<sp/>in<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;m_sTruthParticlesContainerName&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>container.<sp/>Please<sp/>ensure<sp/>that<sp/>this<sp/>container<sp/>has<sp/>the<sp/>full<sp/>tau<sp/>decay<sp/>information<sp/>or<sp/>produce<sp/>the<sp/>TruthTaus<sp/>container<sp/>in<sp/>AtlasDerivation.\nInformation<sp/>on<sp/>how<sp/>to<sp/>do<sp/>this<sp/>can<sp/>be<sp/>found<sp/>here:\nhttps://twiki.cern.ch/twiki/bin/viewauth/AtlasProtected/TauPreRecommendations2015#Accessing_Tau_Truth_Information&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iAbsPdgId<sp/>=<sp/>xTruthDaughter-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a08001b971ef3234b1e94e5758618f21d" kindref="member" tooltip="Absolute PDG ID code (often useful).">absPdgId</ref>();</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iPdgId<sp/>=<sp/>xTruthDaughter-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a1acb4c67ce31fc8b37847f8a31e79a4c" kindref="member" tooltip="PDG ID code.">pdgId</ref>();</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>look<sp/>at<sp/>decay<sp/>of<sp/>unstable<sp/>particles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xTruthDaughter-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1aaa8cb0621b052e2fbcc2e200f87cf1f8" kindref="member" tooltip="Status code.">status</ref>()<sp/>==<sp/>2<sp/>or<sp/>xTruthDaughter-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1aaa8cb0621b052e2fbcc2e200f87cf1f8" kindref="member" tooltip="Status code.">status</ref>()<sp/>==<sp/>11<sp/>or<sp/>xTruthDaughter-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1aaa8cb0621b052e2fbcc2e200f87cf1f8" kindref="member" tooltip="Status code.">status</ref>()<sp/>==<sp/>10902)<sp/></highlight><highlight class="comment">//<sp/>11<sp/>for<sp/>HERWIG++</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>iAbsPdgId<sp/>!=<sp/>111<sp/>and<sp/>iAbsPdgId<sp/>!=<sp/>311<sp/>and<sp/>iAbsPdgId<sp/>!=<sp/>310<sp/>and<sp/>iAbsPdgId<sp/>!=<sp/>130<sp/>)</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>examineTruthTauDecay(*xTruthDaughter).ignore();</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>process<sp/>stable<sp/>particles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xTruthDaughter-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1aaa8cb0621b052e2fbcc2e200f87cf1f8" kindref="member" tooltip="Status code.">status</ref>()<sp/>!=<sp/>1<sp/>and<sp/>xTruthDaughter-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1aaa8cb0621b052e2fbcc2e200f87cf1f8" kindref="member" tooltip="Status code.">status</ref>()<sp/>!=<sp/>2)</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>pdgID<sp/>to<sp/>vector<sp/>for<sp/>decay<sp/>mode<sp/>classification</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/>m_vDecayMode.push_back(iPdgId);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>tau<sp/>decays<sp/>leptonically,<sp/>indicated<sp/>by<sp/>an<sp/>electron/muon<sp/>neutrino<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>is<sp/>not<sp/>a<sp/>hadronic<sp/>decay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>xTruthDaughter-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a7aa9ebf292c3fe4dc62d65b804e0af93" kindref="member" tooltip="Whether the particle is a hadron.">isHadron</ref>()<sp/>)</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_bIsHadronicTau<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ignore<sp/>neutrinos<sp/>for<sp/>further<sp/>progress</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>xTruthDaughter-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a632323815339049b4b99ac18362d216f" kindref="member" tooltip="Whether the particle is a neutrino (or antineutrino).">isNeutrino</ref>()<sp/>)</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;found<sp/>neutrino<sp/>decay<sp/>particle<sp/>with<sp/>PdgId<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;iPdgId);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>momentum<sp/>of<sp/>non-neutrino<sp/>particle<sp/>to<sp/>visible<sp/>momentum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>m_vTruthVisTLV<sp/>+=<sp/>xTruthDaughter-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a6dbca87b898e3545621c649bacfe3c5e" kindref="member">p4</ref>();</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_bWriteVisibleChargedFourMomentum<sp/>)</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>xTruthDaughter-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a76ed011ee4e1e4f38eb31bcc29fbbb7c" kindref="member" tooltip="Whether the particle is electrically charged.">isCharged</ref>()<sp/>)</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_vTruthVisTLVCharged<sp/>+=<sp/>xTruthDaughter-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a6dbca87b898e3545621c649bacfe3c5e" kindref="member">p4</ref>();</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_bWriteVisibleNeutralFourMomentum<sp/>)</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>xTruthDaughter-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a0cc58103bfbdd276ff26474a0d6bd216" kindref="member" tooltip="Whether the particle is electrically neutral.">isNeutral</ref>()<sp/>)</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_vTruthVisTLVNeutral<sp/>+=<sp/>xTruthDaughter-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a6dbca87b898e3545621c649bacfe3c5e" kindref="member">p4</ref>();</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>count<sp/>charged<sp/>decay<sp/>particles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>xTruthDaughter-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a76ed011ee4e1e4f38eb31bcc29fbbb7c" kindref="member" tooltip="Whether the particle is electrically charged.">isCharged</ref>()<sp/>)</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;found<sp/>charged<sp/>decay<sp/>particle<sp/>with<sp/>PdgId<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;iPdgId);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_iNChargedDaughters++;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>count<sp/>charged<sp/>pions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iAbsPdgId==211)<sp/>m_iNChargedPions++;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>m_iNChargedOthers++;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;found<sp/>neutral<sp/>decay<sp/>particle<sp/>with<sp/>PdgId<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;iPdgId);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>count<sp/>neutral<sp/>pions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iAbsPdgId==111)<sp/>m_iNNeutralPions++;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>m_iNNeutralOthers++;</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="949"><highlight class="normal">}</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TauTruthMatchingTool::printDecay(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1" kindref="compound">xAOD::TruthParticle</ref>&amp;<sp/>xTruthParticle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>depth)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="952"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>loop<sp/>over<sp/>all<sp/>decay<sp/>particles,<sp/>print<sp/>their<sp/>kinematic<sp/>and<sp/>other<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/dfa/classxAOD_1_1TruthVertex__v1" kindref="compound">xAOD::TruthVertex</ref>*<sp/>xDecayVertex<sp/>=<sp/>xTruthParticle.<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a13d49b87d6fd9148a716341be8253ed9" kindref="member" tooltip="The decay vertex of this particle.">decayVtx</ref>();</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!xDecayVertex)</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iOutgoingParticle<sp/>=<sp/>0;<sp/>iOutgoingParticle<sp/>&lt;<sp/>xDecayVertex-&gt;<ref refid="d8/dfa/classxAOD_1_1TruthVertex__v1_1a7137f8154a53ad1794631c2e91109786" kindref="member" tooltip="Get the number of outgoing particles.">nOutgoingParticles</ref>();<sp/>++iOutgoingParticle<sp/>)</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1" kindref="compound">xAOD::TruthParticle</ref>*<sp/>xTruthDaughter<sp/>=<sp/>xDecayVertex-&gt;<ref refid="d8/dfa/classxAOD_1_1TruthVertex__v1_1aa456a441c143af40d9c2b6e9a4da9ba7" kindref="member" tooltip="Get one of the outgoing particles.">outgoingParticle</ref>(iOutgoingParticle);</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!xTruthDaughter)</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_FATAL(</highlight><highlight class="stringliteral">&quot;Truth<sp/>daughter<sp/>of<sp/>tau<sp/>decay<sp/>was<sp/>not<sp/>found<sp/>in<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;m_sTruthParticlesContainerName&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>container.<sp/>Please<sp/>ensure<sp/>that<sp/>this<sp/>container<sp/>has<sp/>the<sp/>full<sp/>tau<sp/>decay<sp/>information<sp/>or<sp/>produce<sp/>the<sp/>TruthTaus<sp/>container<sp/>in<sp/>AtlasDerivation.\nInformation<sp/>on<sp/>how<sp/>to<sp/>do<sp/>this<sp/>can<sp/>be<sp/>found<sp/>here:\nhttps://twiki.cern.ch/twiki/bin/viewauth/AtlasProtected/TauPreRecommendations2015#Accessing_Tau_Truth_Information&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(</highlight><highlight class="stringliteral">&quot;depth<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;depth</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>e<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;xTruthDaughter-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a172d15fb394d64a1aabb2f4f0bc9d42f" kindref="member" tooltip="The total energy of the particle.">e</ref>()</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>eta<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;xTruthDaughter-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a6dbca87b898e3545621c649bacfe3c5e" kindref="member">p4</ref>().Eta()</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>phi<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;xTruthDaughter-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a6dbca87b898e3545621c649bacfe3c5e" kindref="member">p4</ref>().Phi()</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>pdgid<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;xTruthDaughter-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a1acb4c67ce31fc8b37847f8a31e79a4c" kindref="member" tooltip="PDG ID code.">pdgId</ref>()</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>status<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;xTruthDaughter-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1aaa8cb0621b052e2fbcc2e200f87cf1f8" kindref="member" tooltip="Status code.">status</ref>()</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>barcode<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;xTruthDaughter-&gt;<ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a67b81d8c6616ba826f9694ff24b613d4" kindref="member">barcode</ref>());</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/>printDecay(*xTruthDaughter,<sp/>depth+1);</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="976"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TauAnalysisTools/Root/TauTruthMatchingTool.cxx"/>
  </compounddef>
</doxygen>
