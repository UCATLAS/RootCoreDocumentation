<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="dd/d48/GeoPrimitivesToStringConverter_8h" kind="file">
    <compoundname>GeoPrimitivesToStringConverter.h</compoundname>
    <includes refid="d9/d9b/EventPrimitivesToStringConverter_8h" local="yes">EventPrimitives/EventPrimitivesToStringConverter.h</includes>
    <includes refid="df/d51/CLHEPtoEigenConverter_8h" local="yes">GeoPrimitives/CLHEPtoEigenConverter.h</includes>
    <includes refid="d7/d87/GeoPrimitives_8h" local="yes">GeoPrimitives/GeoPrimitives.h</includes>
    <includes local="yes">CLHEP/Geometry/Transform3D.h</includes>
    <includes local="yes">CLHEP/Geometry/Point3D.h</includes>
    <includes local="yes">CLHEP/Vector/TwoVector.h</includes>
    <incdepgraph>
      <node id="134364">
        <label>CLHEP/Geometry/Point3D.h</label>
      </node>
      <node id="134352">
        <label>EventPrimitives/EventPrimitives.h</label>
        <link refid="d1/d54/EventPrimitives_8h_source"/>
        <childnode refid="134353" relation="include">
        </childnode>
        <childnode refid="134354" relation="include">
        </childnode>
        <childnode refid="134355" relation="include">
        </childnode>
      </node>
      <node id="134351">
        <label>EventPrimitives/EventPrimitivesToStringConverter.h</label>
        <link refid="d9/d9b/EventPrimitivesToStringConverter_8h_source"/>
        <childnode refid="134352" relation="include">
        </childnode>
        <childnode refid="134356" relation="include">
        </childnode>
        <childnode refid="134357" relation="include">
        </childnode>
        <childnode refid="134358" relation="include">
        </childnode>
        <childnode refid="134359" relation="include">
        </childnode>
      </node>
      <node id="134358">
        <label>iomanip</label>
      </node>
      <node id="134362">
        <label>Eigen/Geometry</label>
      </node>
      <node id="134363">
        <label>CLHEP/Geometry/Transform3D.h</label>
      </node>
      <node id="134354">
        <label>Eigen/Core</label>
      </node>
      <node id="134359">
        <label>string</label>
      </node>
      <node id="134356">
        <label>CLHEP/Matrix/GenMatrix.h</label>
      </node>
      <node id="134355">
        <label>Eigen/Dense</label>
      </node>
      <node id="134365">
        <label>CLHEP/Vector/Rotation.h</label>
      </node>
      <node id="134353">
        <label>unistd.h</label>
      </node>
      <node id="134361">
        <label>GeoPrimitives/GeoPrimitives.h</label>
        <link refid="d7/d87/GeoPrimitives_8h_source"/>
        <childnode refid="134353" relation="include">
        </childnode>
        <childnode refid="134362" relation="include">
        </childnode>
      </node>
      <node id="134357">
        <label>iostream</label>
      </node>
      <node id="134366">
        <label>CLHEP/Vector/ThreeVector.h</label>
      </node>
      <node id="134350">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GeoPrimitives/GeoPrimitives/GeoPrimitivesToStringConverter.h</label>
        <link refid="GeoPrimitivesToStringConverter.h"/>
        <childnode refid="134351" relation="include">
        </childnode>
        <childnode refid="134360" relation="include">
        </childnode>
        <childnode refid="134361" relation="include">
        </childnode>
        <childnode refid="134363" relation="include">
        </childnode>
        <childnode refid="134364" relation="include">
        </childnode>
        <childnode refid="134367" relation="include">
        </childnode>
      </node>
      <node id="134367">
        <label>CLHEP/Vector/TwoVector.h</label>
      </node>
      <node id="134360">
        <label>GeoPrimitives/CLHEPtoEigenConverter.h</label>
        <link refid="df/d51/CLHEPtoEigenConverter_8h_source"/>
        <childnode refid="134361" relation="include">
        </childnode>
        <childnode refid="134363" relation="include">
        </childnode>
        <childnode refid="134364" relation="include">
        </childnode>
        <childnode refid="134365" relation="include">
        </childnode>
        <childnode refid="134366" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="da/d8a/namespaceAmg">Amg</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="2"><highlight class="comment">//<sp/>GeoPrimitvesToStringConverter.h,<sp/>(c)<sp/>ATLAS<sp/>Detector<sp/>software</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GEOPRIMITIVESTOSTRINGCONVERTER_H_</highlight></codeline>
<codeline lineno="6"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GEOPRIMITIVESTOSTRINGCONVERTER_H_</highlight></codeline>
<codeline lineno="7"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;EventPrimitives/EventPrimitivesToStringConverter.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GeoPrimitives/CLHEPtoEigenConverter.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GeoPrimitives/GeoPrimitives.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>XAOD_STANDALONE</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;CLHEP/Geometry/Transform3D.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;CLHEP/Geometry/Point3D.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;CLHEP/Vector/TwoVector.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>not<sp/>XAOD_STANDALONE</highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Amg<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="da/d8a/namespaceAmg_1aeb32cfb5dc54c14a3959b7ac884c49ae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>toString(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Amg::Translation3D&amp;<sp/>translation,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>precision<sp/>=<sp/>4<sp/>){</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>Amg::Vector3D<sp/>trans;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>trans[0]<sp/>=<sp/>translation.x();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>trans[1]<sp/>=<sp/>translation.y();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>trans[2]<sp/>=<sp/>translation.z();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>toString(<sp/>trans,<sp/>precision<sp/>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>toString(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Amg::Transform3D&amp;<sp/><ref refid="da/d8a/namespaceAmg_1acf056cae7010a2fcb74fac91880c0f87" kindref="member">transform</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>precision<sp/>=<sp/>4,<sp/>std::string<sp/>offset=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>){</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>sout;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>sout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Translation<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>toString(<sp/>transform.translation(),<sp/>precision<sp/>)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>rotationOffset<sp/>=<sp/>offset<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>sout<sp/>&lt;&lt;<sp/>offset<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Rotation<sp/><sp/><sp/><sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>toString(<sp/>transform.rotation(),<sp/>precision+2,<sp/>rotationOffset<sp/>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sout.str();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>XAOD_STANDALONE</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>toString(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CLHEP::HepRotation&amp;<sp/>rot,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>precision<sp/>=<sp/>4,<sp/>std::string<sp/>offset=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>){</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>sout;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>sout<sp/>&lt;&lt;<sp/>std::setiosflags(std::ios::fixed)<sp/>&lt;&lt;<sp/>std::setprecision(precision);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;3;++i<sp/>){</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;j&lt;3;++j<sp/>){</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>j<sp/>==<sp/>0<sp/>)<sp/>sout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val<sp/>=<sp/><ref refid="da/d8a/namespaceAmg_1a537e7cb91c8a51631755e772a85c8b19" kindref="member">roundWithPrecision</ref>(rot(i,j),precision);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>sout<sp/>&lt;&lt;<sp/>val;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>j<sp/>==<sp/>2<sp/>)<sp/>sout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>i<sp/>!=<sp/>2<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>sout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>sout<sp/>&lt;&lt;<sp/>offset;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sout.str();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>toString(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CLHEP::Hep3Vector&amp;<sp/>translation,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>precision<sp/>=<sp/>4){</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>sout;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>sout<sp/>&lt;&lt;<sp/>std::setiosflags(std::ios::fixed)<sp/>&lt;&lt;<sp/>std::setprecision(precision);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;j&lt;3;++j<sp/>){</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>j<sp/>==<sp/>0<sp/>)<sp/>sout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val<sp/>=<sp/><ref refid="da/d8a/namespaceAmg_1a537e7cb91c8a51631755e772a85c8b19" kindref="member">roundWithPrecision</ref>(<sp/>translation[j],precision);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sout<sp/>&lt;&lt;<sp/>val;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>j<sp/>==<sp/>2<sp/>)<sp/>sout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sout.str();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>toString(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CLHEP::Hep2Vector&amp;<sp/>translation,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>precision<sp/>=<sp/>4){</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>sout;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>sout<sp/>&lt;&lt;<sp/>std::setiosflags(std::ios::fixed)<sp/>&lt;&lt;<sp/>std::setprecision(precision);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;j&lt;2;++j<sp/>){</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>j<sp/>==<sp/>0<sp/>)<sp/>sout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val<sp/>=<sp/><ref refid="da/d8a/namespaceAmg_1a537e7cb91c8a51631755e772a85c8b19" kindref="member">roundWithPrecision</ref>(<sp/>translation[j],precision);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sout<sp/>&lt;&lt;<sp/>val;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>j<sp/>==<sp/>1<sp/>)<sp/>sout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sout.str();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>toString(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>HepGeom::Transform3D&amp;<sp/>transf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>precision<sp/>=<sp/>4,<sp/>std::string<sp/>offset=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>sout;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>sout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Translation<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>toString(<sp/>transf.getTranslation(),<sp/>precision<sp/>)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>rotationOffset<sp/>=<sp/>offset<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>sout<sp/>&lt;&lt;<sp/>offset<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Rotation<sp/><sp/><sp/><sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>toString(<sp/>transf.getRotation(),<sp/>precision+2,<sp/>rotationOffset<sp/>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sout.str();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>not<sp/>XAOD_STANDALONE</highlight></codeline>
<codeline lineno="109"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>GEOPRIMITIVESTOSTRINGCONVERTER_H_<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GeoPrimitives/GeoPrimitives/GeoPrimitivesToStringConverter.h"/>
  </compounddef>
</doxygen>
