<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="dd/d09/classTrig_1_1BunchCrossingConfProviderBase" kind="class" prot="public">
    <compoundname>Trig::BunchCrossingConfProviderBase</compoundname>
    <basecompoundref refid="d5/ddc/classTrig_1_1IBunchCrossingConfProvider" prot="public" virt="virtual">Trig::IBunchCrossingConfProvider</basecompoundref>
    <basecompoundref refid="d0/d67/classTrig_1_1IBunchCrossingTool" prot="public" virt="virtual">Trig::IBunchCrossingTool</basecompoundref>
    <derivedcompoundref refid="d0/d98/classTrig_1_1LHCBunchCrossingTool" prot="public" virt="non-virtual">Trig::LHCBunchCrossingTool</derivedcompoundref>
    <derivedcompoundref refid="da/dfc/classTrig_1_1MCBunchCrossingTool" prot="public" virt="non-virtual">Trig::MCBunchCrossingTool</derivedcompoundref>
    <derivedcompoundref refid="df/d24/classTrig_1_1TrigConfBunchCrossingTool" prot="public" virt="non-virtual">Trig::TrigConfBunchCrossingTool</derivedcompoundref>
    <includes refid="dc/d79/BunchCrossingConfProviderBase_8h" local="no">BunchCrossingConfProviderBase.h</includes>
      <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1af55d06296531100f4d78dfd5aee04e81" prot="protected" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string Trig::BunchCrossingConfProviderBase::BUNCH_CONFIG_INCIDENT_NAME</definition>
        <argsstring></argsstring>
        <name>BUNCH_CONFIG_INCIDENT_NAME</name>
        <initializer> &quot;BunchConfig&quot;</initializer>
        <briefdescription>
<para>Type name for the incident that such tools should emit. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/BunchCrossingConfProviderBase.h" line="47" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/BunchCrossingConfProviderBase.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1a6689dc298a887310e6a00df1fc14f8a2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt; int &gt; Trig::BunchCrossingConfProviderBase::configuredBCIDs</definition>
        <argsstring>() const </argsstring>
        <name>configuredBCIDs</name>
        <reimplements refid="d5/ddc/classTrig_1_1IBunchCrossingConfProvider_1a643cdd16202703f44b338bbf6c320017">configuredBCIDs</reimplements>
        <reimplementedby refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1ac3e74e966a491d171f98fc57379202a5">configuredBCIDs</reimplementedby>
        <briefdescription>
<para>Function providing the BCIDs of the configured colliding bunches. </para>        </briefdescription>
        <detaileddescription>
<para>The implementation just loops over all the possible BCIDs and puts the IDs of the ones which are reported to be filled, into the output vector.</para><para><simplesect kind="see"><para><ref refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1ad54897be82f5d5133553ee08204d1ba5" kindref="member">BunchCrossingConfProviderBase::configuredIntensitiesBeam1()</ref> </para><simplesectsep/><para><ref refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1aadf2c635e6c68f7cdf722b528c51c6e3" kindref="member">BunchCrossingConfProviderBase::configuredIntensitiesBeam2()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/BunchCrossingConfProviderBase.h" line="30" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/BunchCrossingConfProviderBase.cxx" bodystart="24" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1ad54897be82f5d5133553ee08204d1ba5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt; float &gt; Trig::BunchCrossingConfProviderBase::configuredIntensitiesBeam1</definition>
        <argsstring>() const </argsstring>
        <name>configuredIntensitiesBeam1</name>
        <reimplements refid="d5/ddc/classTrig_1_1IBunchCrossingConfProvider_1af5b8cc54eb7c5add5ec5526e9a96adf0">configuredIntensitiesBeam1</reimplements>
        <reimplementedby refid="df/d24/classTrig_1_1TrigConfBunchCrossingTool_1a6ff2271d672bf6aecfb0a63e06f16488">configuredIntensitiesBeam1</reimplementedby>
        <reimplementedby refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1accf5d0162458465ee6cf4cc5843a83b5">configuredIntensitiesBeam1</reimplementedby>
        <reimplementedby refid="d0/d98/classTrig_1_1LHCBunchCrossingTool_1abb7137a7bcfa747fdce966ad4b841590">configuredIntensitiesBeam1</reimplementedby>
        <briefdescription>
<para>Function providing the intensities of the configured colliding bunches. </para>        </briefdescription>
        <detaileddescription>
<para>The implementation just loops over all the possible BCIDs, and puts the intensities of the filled ones into the output vector. This way the result is in sync with the output of <ref refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1a6689dc298a887310e6a00df1fc14f8a2" kindref="member">configuredBCIDs()</ref>.</para><para><simplesect kind="see"><para><ref refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1a6689dc298a887310e6a00df1fc14f8a2" kindref="member">BunchCrossingConfProviderBase::configuredBCIDs()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/BunchCrossingConfProviderBase.h" line="32" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/BunchCrossingConfProviderBase.cxx" bodystart="44" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1aadf2c635e6c68f7cdf722b528c51c6e3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt; float &gt; Trig::BunchCrossingConfProviderBase::configuredIntensitiesBeam2</definition>
        <argsstring>() const </argsstring>
        <name>configuredIntensitiesBeam2</name>
        <reimplements refid="d5/ddc/classTrig_1_1IBunchCrossingConfProvider_1adf06db8d8fe18c4d94bf920e8b420e47">configuredIntensitiesBeam2</reimplements>
        <reimplementedby refid="df/d24/classTrig_1_1TrigConfBunchCrossingTool_1a9ec884fb061eb236fdbc68f2ee017e6c">configuredIntensitiesBeam2</reimplementedby>
        <reimplementedby refid="da/dfc/classTrig_1_1MCBunchCrossingTool_1a09b94e2b5e0e0efbdcf059561a80b0f3">configuredIntensitiesBeam2</reimplementedby>
        <reimplementedby refid="d0/d98/classTrig_1_1LHCBunchCrossingTool_1a069df700551210392c75144aef22e94f">configuredIntensitiesBeam2</reimplementedby>
        <briefdescription>
<para>Function providing the intensities of the configured colliding bunches. </para>        </briefdescription>
        <detaileddescription>
<para>The implementation just loops over all the possible BCIDs, and puts the intensities of the filled ones into the output vector. This way the result is in sync with the output of <ref refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1a6689dc298a887310e6a00df1fc14f8a2" kindref="member">configuredBCIDs()</ref>.</para><para><simplesect kind="see"><para><ref refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1a6689dc298a887310e6a00df1fc14f8a2" kindref="member">BunchCrossingConfProviderBase::configuredBCIDs()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/BunchCrossingConfProviderBase.h" line="34" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/BunchCrossingConfProviderBase.cxx" bodystart="64" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1a9717638b1e35b15c97fe603b9cd7841e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt; int &gt; Trig::BunchCrossingConfProviderBase::configuredUnpairedBCIDsBeam1</definition>
        <argsstring>() const </argsstring>
        <name>configuredUnpairedBCIDsBeam1</name>
        <reimplements refid="d5/ddc/classTrig_1_1IBunchCrossingConfProvider_1a6ac5a8276b6746641dda9e134869a254">configuredUnpairedBCIDsBeam1</reimplements>
        <briefdescription>
<para>Function providing the BCIDs of the configured unpaired bunches. </para>        </briefdescription>
        <detaileddescription>
<para>The implementation just loops over all the possible BCIDs and puts the IDs of the ones which are reported to be unpaired, into the output vector.</para><para><simplesect kind="see"><para><ref refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1a8aef723183a84775cd610e8573c438cd" kindref="member">BunchCrossingConfProviderBase::configuredUnpairedIntensitiesBeam1()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/BunchCrossingConfProviderBase.h" line="37" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/BunchCrossingConfProviderBase.cxx" bodystart="84" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1a5e78aba398533aad48f19e76012c4e80" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt; int &gt; Trig::BunchCrossingConfProviderBase::configuredUnpairedBCIDsBeam2</definition>
        <argsstring>() const </argsstring>
        <name>configuredUnpairedBCIDsBeam2</name>
        <reimplements refid="d5/ddc/classTrig_1_1IBunchCrossingConfProvider_1aa01086653bd4be004b5842300c92af5e">configuredUnpairedBCIDsBeam2</reimplements>
        <briefdescription>
<para>Function providing the BCIDs of the configured unpaired bunches. </para>        </briefdescription>
        <detaileddescription>
<para>The implementation just loops over all the possible BCIDs and puts the IDs of the ones which are reported to be unpaired, into the output vector.</para><para><simplesect kind="see"><para><ref refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1a828136eed8341a683555a76e90e54c17" kindref="member">BunchCrossingConfProviderBase::configuredUnpairedIntensitiesBeam2()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/BunchCrossingConfProviderBase.h" line="39" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/BunchCrossingConfProviderBase.cxx" bodystart="104" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1a8aef723183a84775cd610e8573c438cd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt; float &gt; Trig::BunchCrossingConfProviderBase::configuredUnpairedIntensitiesBeam1</definition>
        <argsstring>() const </argsstring>
        <name>configuredUnpairedIntensitiesBeam1</name>
        <reimplements refid="d5/ddc/classTrig_1_1IBunchCrossingConfProvider_1a849acf6a5bb2a9777121ce7e8be73ec5">configuredUnpairedIntensitiesBeam1</reimplements>
        <reimplementedby refid="df/d24/classTrig_1_1TrigConfBunchCrossingTool_1a6de561843e78231f26cc90bcedb83439">configuredUnpairedIntensitiesBeam1</reimplementedby>
        <reimplementedby refid="d0/d98/classTrig_1_1LHCBunchCrossingTool_1a85890241629d3d96a3da308efa3b35c5">configuredUnpairedIntensitiesBeam1</reimplementedby>
        <briefdescription>
<para>Function providing the intensities of the configured unpaired bunches. </para>        </briefdescription>
        <detaileddescription>
<para>The implementation just loops over all the possible BCIDs, and puts the intensities of the unpaired ones into the output vector. This way the result is in sync with the output of <ref refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1a9717638b1e35b15c97fe603b9cd7841e" kindref="member">configuredUnpairedBCIDsBeam1()</ref>.</para><para><simplesect kind="see"><para><ref refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1a9717638b1e35b15c97fe603b9cd7841e" kindref="member">BunchCrossingConfProviderBase::configuredUnpairedBCIDsBeam1()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/BunchCrossingConfProviderBase.h" line="41" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/BunchCrossingConfProviderBase.cxx" bodystart="124" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1a828136eed8341a683555a76e90e54c17" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt; float &gt; Trig::BunchCrossingConfProviderBase::configuredUnpairedIntensitiesBeam2</definition>
        <argsstring>() const </argsstring>
        <name>configuredUnpairedIntensitiesBeam2</name>
        <reimplements refid="d5/ddc/classTrig_1_1IBunchCrossingConfProvider_1ad35fe34ce68e2e5dd161b16610ae5a41">configuredUnpairedIntensitiesBeam2</reimplements>
        <reimplementedby refid="df/d24/classTrig_1_1TrigConfBunchCrossingTool_1a1b7f5af137176edf3b53fcd458cfce3d">configuredUnpairedIntensitiesBeam2</reimplementedby>
        <reimplementedby refid="d0/d98/classTrig_1_1LHCBunchCrossingTool_1adb916121af11c49dc8ad0de335b408e5">configuredUnpairedIntensitiesBeam2</reimplementedby>
        <briefdescription>
<para>Function providing the intensities of the configured unpaired bunches. </para>        </briefdescription>
        <detaileddescription>
<para>The implementation just loops over all the possible BCIDs, and puts the intensities of the unpaired ones into the output vector. This way the result is in sync with the output of <ref refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1a5e78aba398533aad48f19e76012c4e80" kindref="member">configuredUnpairedBCIDsBeam2()</ref>.</para><para><simplesect kind="see"><para><ref refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1a5e78aba398533aad48f19e76012c4e80" kindref="member">BunchCrossingConfProviderBase::configuredUnpairedBCIDsBeam2()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/BunchCrossingConfProviderBase.h" line="43" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/BunchCrossingConfProviderBase.cxx" bodystart="144" bodyend="154"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Common implementation of the <ref refid="d5/ddc/classTrig_1_1IBunchCrossingConfProvider" kindref="compound">IBunchCrossingConfProvider</ref> interface. </para>    </briefdescription>
    <detaileddescription>
<para>Implementing the <ref refid="d5/ddc/classTrig_1_1IBunchCrossingConfProvider" kindref="compound">IBunchCrossingConfProvider</ref> interface is quite simple actually, and it can be done in a common way. So it doesn&apos;t make sense to do it separately for all the tool implementations.</para><para><simplesect kind="author"><para>Attila Krasznahorkay &lt;<ulink url="mailto:Attila.Krasznahorkay@cern.ch">Attila.Krasznahorkay@cern.ch</ulink>&gt;</para></simplesect>
<simplesect kind="rcs"><title>Revision</title><para>618331 </para></simplesect>
<simplesect kind="rcs"><title>Date</title><para>2014-09-24 13:55:26 +0200 (Wed, 24 Sep 2014) </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="2757">
        <label>Trig::IBunchCrossingConfProvider</label>
        <link refid="d5/ddc/classTrig_1_1IBunchCrossingConfProvider"/>
        <childnode refid="2758" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2758">
        <label>asg::IAsgTool</label>
        <link refid="d4/d20/classasg_1_1IAsgTool"/>
      </node>
      <node id="2761">
        <label>Trig::MCBunchCrossingTool</label>
        <link refid="da/dfc/classTrig_1_1MCBunchCrossingTool"/>
        <childnode refid="2756" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2759">
        <label>Trig::IBunchCrossingTool</label>
        <link refid="d0/d67/classTrig_1_1IBunchCrossingTool"/>
        <childnode refid="2758" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2756">
        <label>Trig::BunchCrossingConfProviderBase</label>
        <link refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase"/>
        <childnode refid="2757" relation="public-inheritance">
        </childnode>
        <childnode refid="2759" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2760">
        <label>Trig::LHCBunchCrossingTool</label>
        <link refid="d0/d98/classTrig_1_1LHCBunchCrossingTool"/>
        <childnode refid="2756" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2762">
        <label>Trig::TrigConfBunchCrossingTool</label>
        <link refid="df/d24/classTrig_1_1TrigConfBunchCrossingTool"/>
        <childnode refid="2756" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2764">
        <label>Trig::IBunchCrossingConfProvider</label>
        <link refid="d5/ddc/classTrig_1_1IBunchCrossingConfProvider"/>
        <childnode refid="2765" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2765">
        <label>asg::IAsgTool</label>
        <link refid="d4/d20/classasg_1_1IAsgTool"/>
      </node>
      <node id="2766">
        <label>Trig::IBunchCrossingTool</label>
        <link refid="d0/d67/classTrig_1_1IBunchCrossingTool"/>
        <childnode refid="2765" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2763">
        <label>Trig::BunchCrossingConfProviderBase</label>
        <link refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase"/>
        <childnode refid="2764" relation="public-inheritance">
        </childnode>
        <childnode refid="2766" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/BunchCrossingConfProviderBase.h" line="26" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigBunchCrossingTool/src/BunchCrossingConfProviderBase.h" bodystart="24" bodyend="49"/>
    <listofallmembers>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a520e1491272b49538b18d6ac438bf823" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>bcid_type</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a760e3fa9d24099b4dc947a6275cdd510" prot="public" virt="pure-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>bcIntensity</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ab7712c5f48072fcdfd415d3cee7e0f77" prot="public" virt="pure-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>bcType</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac2ae9328f9f9a14223875634c85e2b47a0a2435c329f92970602ae6a6c2f8165a" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>Beam1</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac2ae9328f9f9a14223875634c85e2b47a84657ab866c535aaaa27f007dd81b703" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>Beam2</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac2ae9328f9f9a14223875634c85e2b47" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>BeamType</name></member>
      <member refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1af55d06296531100f4d78dfd5aee04e81" prot="protected" virt="non-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>BUNCH_CONFIG_INCIDENT_NAME</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a776274ff91ad686fbf9426c28015681ea0a64ff40e0cd130bf46a4dc695842780" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>BunchCrossings</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac158b7a54043149841d07c38e8bc59cf" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>BunchCrossingType</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a776274ff91ad686fbf9426c28015681e" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>BunchDistanceType</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1afc8451f6e92ed0a676598621438ec2dc" prot="public" virt="pure-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>bunchesAfter</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a103fecb7204fa81dc8b2c398ef0f3183" prot="public" virt="pure-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>bunchesInFront</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a4ea87398ee0b252eb31853c7fc8a3ff8" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>BunchFillType</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a312370389d80790d1137a923b2cb4a88" prot="public" virt="pure-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>bunchIntAfter</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac185c0256246a03769092c5237a6cad8" prot="public" virt="pure-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>bunchIntInFront</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a4d37090ab8e03977c565c46c0d6343d8" prot="public" virt="pure-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>bunchTrainSpacing</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a4ea87398ee0b252eb31853c7fc8a3ff8a521766e927f41055758f34ee58b5d012" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>CollidingBunch</name></member>
      <member refid="d5/ddc/classTrig_1_1IBunchCrossingConfProvider_1a7e4a4c4f5a4548c02dccac794e4b7b12" prot="public" virt="pure-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>configID</name></member>
      <member refid="d5/ddc/classTrig_1_1IBunchCrossingConfProvider_1ad30fc9b02c7c88c2beadda0071a0d4a6" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>configid_type</name></member>
      <member refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1a6689dc298a887310e6a00df1fc14f8a2" prot="public" virt="virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>configuredBCIDs</name></member>
      <member refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1ad54897be82f5d5133553ee08204d1ba5" prot="public" virt="virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>configuredIntensitiesBeam1</name></member>
      <member refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1aadf2c635e6c68f7cdf722b528c51c6e3" prot="public" virt="virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>configuredIntensitiesBeam2</name></member>
      <member refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1a9717638b1e35b15c97fe603b9cd7841e" prot="public" virt="virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>configuredUnpairedBCIDsBeam1</name></member>
      <member refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1a5e78aba398533aad48f19e76012c4e80" prot="public" virt="virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>configuredUnpairedBCIDsBeam2</name></member>
      <member refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1a8aef723183a84775cd610e8573c438cd" prot="public" virt="virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>configuredUnpairedIntensitiesBeam1</name></member>
      <member refid="dd/d09/classTrig_1_1BunchCrossingConfProviderBase_1a828136eed8341a683555a76e90e54c17" prot="public" virt="virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>configuredUnpairedIntensitiesBeam2</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac2ae9328f9f9a14223875634c85e2b47a9d05da22e67bd5be8ea2807a72563690" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>Crossing</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a3960b800e724afb817abd3963249bc88" prot="public" virt="pure-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>distanceFromFront</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a533b45046a65adfc428082ccabb77906" prot="public" virt="pure-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>distanceFromTail</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac158b7a54043149841d07c38e8bc59cfa4b0c804ae3e2125b4c260b6fefd79ea8" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>Empty</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a4ea87398ee0b252eb31853c7fc8a3ff8a8ddf98c396a923c2e48174e4ddfcf0a5" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>EmptyBunch</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a776274ff91ad686fbf9426c28015681ea8110a0e05955daca343f82a4ae037873" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>FilledBunches</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac158b7a54043149841d07c38e8bc59cfa259bae7213f9b2ee63d726133b5ccd54" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>FirstEmpty</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac158b7a54043149841d07c38e8bc59cfa5581dfb9e92aa4e7c3bb185de93bc21c" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>Front</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a723c1d3dfaac4768515d5b527e6b8f7e" prot="public" virt="pure-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>gapAfterBunch</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ad301df3a422a287ab80cd8dc2d4da82f" prot="public" virt="pure-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>gapAfterTrain</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a69819252a847d2d5aaec204a153b25b3" prot="public" virt="pure-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>gapBeforeBunch</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a6d39ace87896f9396921ad2209fc9232" prot="public" virt="pure-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>gapBeforeTrain</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ab435dc47478e51c53c9ed4e769bc50d6" prot="public" virt="pure-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>isBeam1</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a77511f9866c93a734b9baf59cebba816" prot="public" virt="pure-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>isBeam2</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a7c2179ab680ba9b012c0dbd4b751b1e5" prot="public" virt="pure-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>isFilled</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a5753926d25f7a318875739938b227b0a" prot="public" virt="pure-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>isInTrain</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1aa7d0f434e5466858f541e72c58586bb6" prot="public" virt="pure-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>isUnpaired</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac158b7a54043149841d07c38e8bc59cfa8b13f6fcb97a797aba6ce81089e63f18" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>Middle</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac158b7a54043149841d07c38e8bc59cfae196bca5223029fbfbd4543646fcf793" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>MiddleEmpty</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a776274ff91ad686fbf9426c28015681ea5e0331cbdd292eb12a1834b835bd79c7" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>NanoSec</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a8b7bcafa2c0ea0ba0a5b01cf3934f677" prot="public" virt="pure-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>numberOfBunchTrains</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a339f4fd855c9d8e1b391731a4defb887" prot="public" virt="pure-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>numberOfFilledBunches</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ae67d39ce5d3984b1698b1b07d5fd120e" prot="public" virt="pure-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>numberOfUnpairedBunches</name></member>
      <member refid="d4/d20/classasg_1_1IAsgTool_1af1aac990b958e92bf38123318d926e67" prot="public" virt="pure-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>print</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac158b7a54043149841d07c38e8bc59cfad69950ed575625ca7e0c9905bb99f14d" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>Single</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac158b7a54043149841d07c38e8bc59cfa334a589a59f6cd4362f4b5afaedc356f" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>Tail</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1ac158b7a54043149841d07c38e8bc59cfa17f24a20f1378fd1e9542d078133778b" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>Unpaired</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a4ea87398ee0b252eb31853c7fc8a3ff8a955e2b8f3446de622b29908f7843b2f5" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>UnpairedBeam1</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a4ea87398ee0b252eb31853c7fc8a3ff8ac260bfad34a78e1b5076eb998c6aa417" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>UnpairedBeam2</name></member>
      <member refid="d0/d67/classTrig_1_1IBunchCrossingTool_1a4ea87398ee0b252eb31853c7fc8a3ff8a5ad3382c869d5996cd7cc6e69d7affd8" prot="public" virt="non-virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>UnpairedBunch</name></member>
      <member refid="d4/d20/classasg_1_1IAsgTool_1a77b49d52f1f8c272cb665b8309d6082d" prot="public" virt="virtual"><scope>Trig::BunchCrossingConfProviderBase</scope><name>~IAsgTool</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
