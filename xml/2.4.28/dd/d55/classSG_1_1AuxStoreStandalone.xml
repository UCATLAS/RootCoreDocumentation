<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="dd/d55/classSG_1_1AuxStoreStandalone" kind="class" prot="public">
    <compoundname>SG::AuxStoreStandalone</compoundname>
    <basecompoundref refid="d1/d1c/classSG_1_1AuxStoreInternal" prot="public" virt="non-virtual">SG::AuxStoreInternal</basecompoundref>
    <includes refid="d7/d41/AuxStoreStandalone_8h" local="no">AuxStoreStandalone.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="dd/d55/classSG_1_1AuxStoreStandalone_1ad2b038eea80ce319b6f1c0954752a208" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SG::AuxStoreStandalone::AuxStoreStandalone</definition>
        <argsstring>()</argsstring>
        <name>AuxStoreStandalone</name>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxStoreStandalone.h" line="41" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/AuxStoreStandalone.cxx" bodystart="22" bodyend="25"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Auxiliary data store for standalone objects. </para>    </briefdescription>
    <detaileddescription>
<para>This is a variant of <computeroutput><ref refid="d1/d1c/classSG_1_1AuxStoreInternal" kindref="compound">AuxStoreInternal</ref></computeroutput> (from which it derives), meant to be used with standalone objects. (That is, objects that have aux data but are not in a container; this includes objects with a private store.)</para><para>The difference from <computeroutput><ref refid="d1/d1c/classSG_1_1AuxStoreInternal" kindref="compound">AuxStoreInternal</ref></computeroutput> is what we return for the <computeroutput><ref refid="db/d37/classSG_1_1IAuxStoreIO" kindref="compound">IAuxStoreIO</ref></computeroutput> methods. For <computeroutput>getIOData</computeroutput>, we return a pointer to the start of the vector data, rather than the vector itself; and for <computeroutput>getIOType</computeroutput>, we return the type itself rather than the vector type. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1944">
        <label>SG::IConstAuxStore</label>
        <link refid="d3/dd5/classSG_1_1IConstAuxStore"/>
      </node>
      <node id="1945">
        <label>SG::IAuxStoreIO</label>
        <link refid="db/d37/classSG_1_1IAuxStoreIO"/>
      </node>
      <node id="1943">
        <label>SG::IAuxStore</label>
        <link refid="dc/d05/classSG_1_1IAuxStore"/>
        <childnode refid="1944" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1942">
        <label>SG::AuxStoreInternal</label>
        <link refid="d1/d1c/classSG_1_1AuxStoreInternal"/>
        <childnode refid="1943" relation="public-inheritance">
        </childnode>
        <childnode refid="1945" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1941">
        <label>SG::AuxStoreStandalone</label>
        <link refid="dd/d55/classSG_1_1AuxStoreStandalone"/>
        <childnode refid="1942" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1954">
        <label>Internal::hash_code_base&lt;size_t , size_t , Internal::identity&lt; size_t &gt; , std::equal_to&lt; size_t &gt; , hash&lt; size_t &gt; , Internal::mod_range_hashing , Internal::default_ranged_hash , cache_hash_code&gt;</label>
        <link refid="d0/d2e/classInternal_1_1hash__code__base"/>
      </node>
      <node id="1955">
        <label>Internal::map_base&lt;size_t , size_t , Internal::identity&lt; size_t &gt; , unique_keys, hashtable&lt;size_t , size_t , std::allocator&lt; size_t &gt; , Internal::identity&lt; size_t &gt; , std::equal_to&lt; size_t &gt; , hash&lt; size_t &gt; , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="d1/d54/classInternal_1_1map__base"/>
      </node>
      <node id="1949">
        <label>SG::IConstAuxStore</label>
        <link refid="d3/dd5/classSG_1_1IConstAuxStore"/>
      </node>
      <node id="1950">
        <label>SG::IAuxStoreIO</label>
        <link refid="db/d37/classSG_1_1IAuxStoreIO"/>
      </node>
      <node id="1952">
        <label>SG::hashtable&lt; size_t, size_t, std::allocator&lt; size_t &gt;, Internal::identity&lt; size_t &gt;, std::equal_to&lt; size_t &gt;, hash&lt; size_t &gt;, Internal::mod_range_hashing, Internal::default_ranged_hash, Internal::prime_rehash_policy, false, true, true &gt;</label>
        <link refid="de/d63/classSG_1_1hashtable"/>
        <childnode refid="1953" relation="public-inheritance">
        </childnode>
        <childnode refid="1954" relation="public-inheritance">
        </childnode>
        <childnode refid="1955" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1948">
        <label>SG::IAuxStore</label>
        <link refid="dc/d05/classSG_1_1IAuxStore"/>
        <childnode refid="1949" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1947">
        <label>SG::AuxStoreInternal</label>
        <link refid="d1/d1c/classSG_1_1AuxStoreInternal"/>
        <childnode refid="1948" relation="public-inheritance">
        </childnode>
        <childnode refid="1950" relation="public-inheritance">
        </childnode>
        <childnode refid="1951" relation="usage">
          <edgelabel>m_auxids</edgelabel>
        </childnode>
        <childnode refid="1956" relation="usage">
          <edgelabel>m_mutex</edgelabel>
        </childnode>
      </node>
      <node id="1953">
        <label>Internal::rehash_base&lt;Internal::prime_rehash_policy , hashtable&lt;size_t , size_t , std::allocator&lt; size_t &gt; , Internal::identity&lt; size_t &gt; , std::equal_to&lt; size_t &gt; , hash&lt; size_t &gt; , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="db/d2b/classInternal_1_1rehash__base"/>
      </node>
      <node id="1956">
        <label>mutex</label>
      </node>
      <node id="1946">
        <label>SG::AuxStoreStandalone</label>
        <link refid="dd/d55/classSG_1_1AuxStoreStandalone"/>
        <childnode refid="1947" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1951">
        <label>SG::unordered_set&lt; size_t &gt;</label>
        <link refid="dd/dac/classSG_1_1unordered__set"/>
        <childnode refid="1952" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxStoreStandalone.h" line="36" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxStoreStandalone.h" bodystart="34" bodyend="42"/>
    <listofallmembers>
      <member refid="d1/d1c/classSG_1_1AuxStoreInternal_1ae216aba6bd1f3798955b19b0ecc16555" prot="protected" virt="non-virtual"><scope>SG::AuxStoreStandalone</scope><name>addAuxID</name></member>
      <member refid="d1/d1c/classSG_1_1AuxStoreInternal_1adaae95b4226c1514d5327ae16c9a15cd" prot="public" virt="non-virtual"><scope>SG::AuxStoreStandalone</scope><name>AuxStoreInternal</name></member>
      <member refid="d1/d1c/classSG_1_1AuxStoreInternal_1af6f674612888bd4ac594ce7528683d5c" prot="public" virt="non-virtual"><scope>SG::AuxStoreStandalone</scope><name>AuxStoreInternal</name></member>
      <member refid="dd/d55/classSG_1_1AuxStoreStandalone_1ad2b038eea80ce319b6f1c0954752a208" prot="public" virt="non-virtual"><scope>SG::AuxStoreStandalone</scope><name>AuxStoreStandalone</name></member>
      <member refid="d1/d1c/classSG_1_1AuxStoreInternal_1a2e98e97b3ca01a085f39e33027d63834" prot="public" virt="virtual"><scope>SG::AuxStoreStandalone</scope><name>clearDecorations</name></member>
      <member refid="d1/d1c/classSG_1_1AuxStoreInternal_1a40f6e8146486daebb9cc12c2b5a626a6" prot="public" virt="virtual"><scope>SG::AuxStoreStandalone</scope><name>getAuxIDs</name></member>
      <member refid="d1/d1c/classSG_1_1AuxStoreInternal_1a90b2121f7a3ae82b0cd339cb5d212d48" prot="public" virt="virtual"><scope>SG::AuxStoreStandalone</scope><name>getData</name></member>
      <member refid="d1/d1c/classSG_1_1AuxStoreInternal_1a007edc4aa2d7bfbf7e1cada713c1dbea" prot="public" virt="virtual"><scope>SG::AuxStoreStandalone</scope><name>getData</name></member>
      <member refid="d1/d1c/classSG_1_1AuxStoreInternal_1a03062bb63e56d14e49d32d8927554cfd" prot="protected" virt="virtual"><scope>SG::AuxStoreStandalone</scope><name>getDataInternal</name></member>
      <member refid="d1/d1c/classSG_1_1AuxStoreInternal_1aff9be84c9b5f841639e7bc471d07c983" prot="public" virt="virtual"><scope>SG::AuxStoreStandalone</scope><name>getDecoration</name></member>
      <member refid="d1/d1c/classSG_1_1AuxStoreInternal_1a34ca465f3964b730da47ff59389f8545" prot="public" virt="virtual"><scope>SG::AuxStoreStandalone</scope><name>getDynamicAuxIDs</name></member>
      <member refid="d1/d1c/classSG_1_1AuxStoreInternal_1ac71290fd48a08ff4131de1e645b6b4dc" prot="public" virt="virtual"><scope>SG::AuxStoreStandalone</scope><name>getIOData</name></member>
      <member refid="d1/d1c/classSG_1_1AuxStoreInternal_1aaec13f56e9bdb228a96d2a2a65792682" prot="protected" virt="non-virtual"><scope>SG::AuxStoreStandalone</scope><name>getIODataInternal</name></member>
      <member refid="d1/d1c/classSG_1_1AuxStoreInternal_1a6a2b47cb515c1adc83220af6169ea9c0" prot="public" virt="virtual"><scope>SG::AuxStoreStandalone</scope><name>getIOType</name></member>
      <member refid="db/d37/classSG_1_1IAuxStoreIO_1ad902a6d9ee41b239fbca73870cebe237" prot="public" virt="virtual"><scope>SG::AuxStoreStandalone</scope><name>getSelectedAuxIDs</name></member>
      <member refid="d1/d1c/classSG_1_1AuxStoreInternal_1a23e266b01b787a058136bc93af631f65" prot="public" virt="virtual"><scope>SG::AuxStoreStandalone</scope><name>getWritableAuxIDs</name></member>
      <member refid="d1/d1c/classSG_1_1AuxStoreInternal_1acd230c41baaae91d3dc2cc1ae9a3b59b" prot="public" virt="virtual"><scope>SG::AuxStoreStandalone</scope><name>lock</name></member>
      <member refid="d1/d1c/classSG_1_1AuxStoreInternal_1ae92332871a87ade0bd1e48dafa994d97" prot="public" virt="virtual"><scope>SG::AuxStoreStandalone</scope><name>reserve</name></member>
      <member refid="d1/d1c/classSG_1_1AuxStoreInternal_1adcba0811d598f897ae6c482373428629" prot="public" virt="virtual"><scope>SG::AuxStoreStandalone</scope><name>resize</name></member>
      <member refid="db/d37/classSG_1_1IAuxStoreIO_1a0ddbdecb0f824866d4dd51b666264a67" prot="public" virt="virtual"><scope>SG::AuxStoreStandalone</scope><name>selectAux</name></member>
      <member refid="d1/d1c/classSG_1_1AuxStoreInternal_1abacba50e0977995f28182caefc75d9ad" prot="public" virt="virtual"><scope>SG::AuxStoreStandalone</scope><name>setOption</name></member>
      <member refid="d1/d1c/classSG_1_1AuxStoreInternal_1a2adc1853052fd2b9fd101fb382471f9b" prot="public" virt="virtual"><scope>SG::AuxStoreStandalone</scope><name>shift</name></member>
      <member refid="d1/d1c/classSG_1_1AuxStoreInternal_1a7ac1985447a8d2b73561a434f06822ab" prot="public" virt="virtual"><scope>SG::AuxStoreStandalone</scope><name>size</name></member>
      <member refid="d1/d1c/classSG_1_1AuxStoreInternal_1aea3863b3a7e4cf2909150703358cfde3" prot="public" virt="non-virtual"><scope>SG::AuxStoreStandalone</scope><name>standalone</name></member>
      <member refid="d1/d1c/classSG_1_1AuxStoreInternal_1ac2a5ec4bc88d4ee304348a6e03b4a52b" prot="public" virt="virtual"><scope>SG::AuxStoreStandalone</scope><name>~AuxStoreInternal</name></member>
      <member refid="db/d37/classSG_1_1IAuxStoreIO_1a78166aac5abe83f66eef9946a23ced75" prot="public" virt="virtual"><scope>SG::AuxStoreStandalone</scope><name>~IAuxStoreIO</name></member>
      <member refid="d3/dd5/classSG_1_1IConstAuxStore_1a2acc9ded5fe9a64c8f508d3c0d7431a5" prot="public" virt="virtual"><scope>SG::AuxStoreStandalone</scope><name>~IConstAuxStore</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
