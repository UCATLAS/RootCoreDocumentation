<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="dd/d39/namespacedetail" kind="namespace">
    <compoundname>detail</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="dd/d39/namespacedetail_1ac22926c1e922b01c7f28f02430885d74" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="d1/def/classT" kindref="compound">T</ref></type>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string detail::ROOT_type_name</definition>
        <argsstring>()</argsstring>
        <name>ROOT_type_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/egammaMVACalib/egammaMVATree.h" line="56" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/egammaMVACalib/egammaMVATree.h" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="dd/d39/namespacedetail_1aac222c7066a8cc972cd5ecb8b52e924a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string detail::ROOT_type_name&lt; int &gt;</definition>
        <argsstring>()</argsstring>
        <name>ROOT_type_name&lt; int &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/egammaMVACalib/egammaMVATree.h" line="59"/>
      </memberdef>
      <memberdef kind="function" id="dd/d39/namespacedetail_1a3950ad670712e74fa2d1be3448d53b85" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string detail::ROOT_type_name&lt; float &gt;</definition>
        <argsstring>()</argsstring>
        <name>ROOT_type_name&lt; float &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/egammaMVACalib/egammaMVATree.h" line="60"/>
      </memberdef>
      <memberdef kind="function" id="dd/d39/namespacedetail_1a71c2ce1b8d754a6bbf4c861f143cb347" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string detail::ROOT_type_name&lt; bool &gt;</definition>
        <argsstring>()</argsstring>
        <name>ROOT_type_name&lt; bool &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/egammaMVACalib/egammaMVATree.h" line="61"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Adaptor class: <ref refid="dd/da6/classxAOD_1_1Electron" kindref="compound">xAOD::Electron</ref> (or <ref refid="dc/d42/classxAOD_1_1Photon" kindref="compound">xAOD::Photon</ref>) to TTree for MVA calibration</para><para>This class is a TTree with 0 events that recreates the structure of the TTree used during the training of the MVA calibration. In this way the same input (in the same format and computed with the same code) is exposed to <ref refid="d3/d52/classegammaMVACalib" kindref="compound">egammaMVACalib</ref> (via <ref refid="d8/dc4/classegammaMVATool" kindref="compound">egammaMVATool</ref>).</para><para>The structure of the TTree is dynamically created, given the set of Branches needed. The name of the branches is the same used during the training, and follow the convenctions of PhotonD3PD. By the way this tool should not be intended as a xOAD-&gt;D3PD converter.</para><para>Developer note: the structure is dynamic, only the needed branches are created. In addition the class holds the internal variables linked to the branches. Since variables are of different types this means to have different containers. This is the simplest implementation, but not very maintainable. TODO: Consider the usage of type erasure, for example with boost::variant. </para>    </detaileddescription>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/egammaMVACalib/egammaMVACalib/egammaMVATree.h" line="52"/>
  </compounddef>
</doxygen>
