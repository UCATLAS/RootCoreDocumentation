<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="dd/da1/classCP_1_1TightTrackVertexAssociationTool" kind="class" prot="public">
    <compoundname>CP::TightTrackVertexAssociationTool</compoundname>
    <basecompoundref refid="d5/dbb/classasg_1_1AsgTool" prot="public" virt="virtual">asg::AsgTool</basecompoundref>
    <basecompoundref refid="d7/df1/classCP_1_1ITrackVertexAssociationTool" prot="public" virt="virtual">CP::ITrackVertexAssociationTool</basecompoundref>
    <includes refid="d5/d3c/TightTrackVertexAssociationTool_8h" local="no">TightTrackVertexAssociationTool.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1af7d47308e706763cf82cdd7aaeee21ce" prot="private" static="no">
        <name>MatchStatus</name>
        <enumvalue id="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1af7d47308e706763cf82cdd7aaeee21cea680980dd9a38533830ebe44406581658" prot="private">
          <name>UsedInFit</name>
          <initializer>1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1af7d47308e706763cf82cdd7aaeee21ceab61e2905b38f6423d8dd8c4e2d0913cf" prot="private">
          <name>Matched</name>
          <initializer>2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1af7d47308e706763cf82cdd7aaeee21cea2dd60879c29bf45293a44844db24dc19" prot="private">
          <name>UnMatch</name>
          <initializer>0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/TightTrackVertexAssociationTool.h" line="24" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/TightTrackVertexAssociationTool.h" bodystart="24" bodyend="24"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1a03f49fd225d9a4e2555d403de1c57c94" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float CP::TightTrackVertexAssociationTool::m_dz_cut</definition>
        <argsstring></argsstring>
        <name>m_dz_cut</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/TightTrackVertexAssociationTool.h" line="64" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/TightTrackVertexAssociationTool.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1a6340d42ca2f2bfb54664b1408a6ea586" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float CP::TightTrackVertexAssociationTool::m_d0_cut</definition>
        <argsstring></argsstring>
        <name>m_d0_cut</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/TightTrackVertexAssociationTool.h" line="65" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/TightTrackVertexAssociationTool.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1a6672a564b69bf6633f8aa27a67f38cbf" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CP::TightTrackVertexAssociationTool::m_doPV</definition>
        <argsstring></argsstring>
        <name>m_doPV</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/TightTrackVertexAssociationTool.h" line="66" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/TightTrackVertexAssociationTool.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1ab2adb6f5c44f725b809b7270a473cf90" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CP::TightTrackVertexAssociationTool::m_dod0sel</definition>
        <argsstring></argsstring>
        <name>m_dod0sel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/TightTrackVertexAssociationTool.h" line="67" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/TightTrackVertexAssociationTool.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1a9b9d7c600417458de6c4b11823cdb87b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CP::TightTrackVertexAssociationTool::TightTrackVertexAssociationTool</definition>
        <argsstring>(std::string name)</argsstring>
        <name>TightTrackVertexAssociationTool</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/TightTrackVertexAssociationTool.h" line="28" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/Root/TightTrackVertexAssociationTool.cxx" bodystart="16" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1a04e7bd9f922ad359c9fcf0b204d7e2ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>StatusCode</type>
        <definition>StatusCode CP::TightTrackVertexAssociationTool::initialize</definition>
        <argsstring>()</argsstring>
        <name>initialize</name>
        <reimplements refid="d5/dbb/classasg_1_1AsgTool_1a55b3c013a3e54ae4c1d0d76de8e1e726">initialize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dummy implementation of the initialisation function</para><para>It&apos;s here to allow the dual-use tools to skip defining an initialisation function. Since many are doing so... </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/TightTrackVertexAssociationTool.h" line="31" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/Root/TightTrackVertexAssociationTool.cxx" bodystart="25" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1a1d5821551831af9388f77839101c219d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void CP::TightTrackVertexAssociationTool::print</definition>
        <argsstring>() const </argsstring>
        <name>print</name>
        <reimplements refid="d5/dbb/classasg_1_1AsgTool_1af4cc6ba53b6505045c2866d4e30e821d">print</reimplements>
        <briefdescription>
<para>Print the state of the tool. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/TightTrackVertexAssociationTool.h" line="33" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/Root/TightTrackVertexAssociationTool.cxx" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1a05b8ee9ad100daf4d42c06fff5cdc5ff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool CP::TightTrackVertexAssociationTool::isCompatible</definition>
        <argsstring>(const xAOD::TrackParticle &amp;trk, const xAOD::Vertex &amp;vx) const </argsstring>
        <name>isCompatible</name>
        <reimplements refid="d7/df1/classCP_1_1ITrackVertexAssociationTool_1a00d6b75e48c95dd65b727a2fabf79161">isCompatible</reimplements>
        <param>
          <type>const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref> &amp;</type>
          <declname>trk</declname>
        </param>
        <param>
          <type>const <ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref> &amp;</type>
          <declname>vx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function will return the decision of whether the track is matched to the Vertex Not sure whether the track is matched to best choice Note: Only apply to good vertex(vx-&gt;vertexType()!=xAODVxType::NoVtx), return false if vertex is a dummy one </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/TightTrackVertexAssociationTool.h" line="38" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/Root/TightTrackVertexAssociationTool.cxx" bodystart="38" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1aec959de68bab1a88ff1138e5d9d60ea7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>xAOD::TrackVertexAssociationMap</type>
        <definition>xAOD::TrackVertexAssociationMap CP::TightTrackVertexAssociationTool::getMatchMap</definition>
        <argsstring>(std::vector&lt; const xAOD::TrackParticle * &gt; &amp;trk_list, std::vector&lt; const xAOD::Vertex * &gt; &amp;vx_list) const </argsstring>
        <name>getMatchMap</name>
        <reimplements refid="d7/df1/classCP_1_1ITrackVertexAssociationTool_1a3428e611b61fb1e687e1a3bbd85f68dd">getMatchMap</reimplements>
        <param>
          <type>std::vector&lt; const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref> * &gt; &amp;</type>
          <declname>trk_list</declname>
        </param>
        <param>
          <type>std::vector&lt; const <ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref> * &gt; &amp;</type>
          <declname>vx_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/TightTrackVertexAssociationTool.h" line="39" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/Root/TightTrackVertexAssociationTool.cxx" bodystart="58" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1ae6a2b05b62f47b2469bc7d27b48fe0cc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>xAOD::TrackVertexAssociationMap</type>
        <definition>xAOD::TrackVertexAssociationMap CP::TightTrackVertexAssociationTool::getMatchMap</definition>
        <argsstring>(const xAOD::TrackParticleContainer &amp;trkCont, const xAOD::VertexContainer &amp;vxCont) const </argsstring>
        <name>getMatchMap</name>
        <reimplements refid="d7/df1/classCP_1_1ITrackVertexAssociationTool_1a63f465dcaad90af44d741ad5c0164105">getMatchMap</reimplements>
        <param>
          <type>const <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::TrackParticleContainer</ref> &amp;</type>
          <declname>trkCont</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::VertexContainer</ref> &amp;</type>
          <declname>vxCont</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/TightTrackVertexAssociationTool.h" line="40" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/Root/TightTrackVertexAssociationTool.cxx" bodystart="80" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1afa0c24ebff3f73503d8ec155d782dd2f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref>&lt; <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::VertexContainer</ref> &gt;</type>
        <definition>ElementLink&lt; xAOD::VertexContainer &gt; CP::TightTrackVertexAssociationTool::getUniqueMatchVertexLink</definition>
        <argsstring>(const xAOD::TrackParticle &amp;, const xAOD::VertexContainer &amp;vxCont) const </argsstring>
        <name>getUniqueMatchVertexLink</name>
        <reimplements refid="d7/df1/classCP_1_1ITrackVertexAssociationTool_1a7e8953f3bf31d828eace96161c8ed693">getUniqueMatchVertexLink</reimplements>
        <param>
          <type>const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref> &amp;</type>
          <defname>trk</defname>
        </param>
        <param>
          <type>const <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::VertexContainer</ref> &amp;</type>
          <declname>vxCont</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This functions will return the best matched vertex For ambiguity resolve: 1) If this track is used in vertex fit, always pick up the vertex fitted using this track. 2) If this track is not used for any vertex fit, pick up the vertex with mini_dz </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/TightTrackVertexAssociationTool.h" line="46" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/Root/TightTrackVertexAssociationTool.cxx" bodystart="107" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1a6e214899f5f26486193e4e91aec52b58" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref> *</type>
        <definition>const xAOD::Vertex * CP::TightTrackVertexAssociationTool::getUniqueMatchVertex</definition>
        <argsstring>(const xAOD::TrackParticle &amp;trk, std::vector&lt; const xAOD::Vertex * &gt; &amp;vx_list) const </argsstring>
        <name>getUniqueMatchVertex</name>
        <reimplements refid="d7/df1/classCP_1_1ITrackVertexAssociationTool_1acdaca12ea6b9ce0935ade1de70bfd978">getUniqueMatchVertex</reimplements>
        <param>
          <type>const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref> &amp;</type>
          <declname>trk</declname>
        </param>
        <param>
          <type>std::vector&lt; const <ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref> * &gt; &amp;</type>
          <declname>vx_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/TightTrackVertexAssociationTool.h" line="48" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/Root/TightTrackVertexAssociationTool.cxx" bodystart="120" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1ab78bf9e74bc11a8096e67e7398140f95" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>xAOD::TrackVertexAssociationMap</type>
        <definition>xAOD::TrackVertexAssociationMap CP::TightTrackVertexAssociationTool::getUniqueMatchMap</definition>
        <argsstring>(std::vector&lt; const xAOD::TrackParticle * &gt; &amp;trk_list, std::vector&lt; const xAOD::Vertex * &gt; &amp;vx_list) const </argsstring>
        <name>getUniqueMatchMap</name>
        <reimplements refid="d7/df1/classCP_1_1ITrackVertexAssociationTool_1accf5c8fd2cf22805a7af79f23684d883">getUniqueMatchMap</reimplements>
        <param>
          <type>std::vector&lt; const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref> * &gt; &amp;</type>
          <declname>trk_list</declname>
        </param>
        <param>
          <type>std::vector&lt; const <ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref> * &gt; &amp;</type>
          <declname>vx_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This functions related to the previous functions, will return a map&lt;const <ref refid="dd/d44/namespacexAOD_1a81f1081bff020653ddc591a2ede11ded" kindref="member">xAOD::Vertex</ref>*, std::vector&lt;const xAOD::TrackParticle*&gt; &gt; (defined as TrackVertexAssociationMap) to store the best matched tracks for each vertex. Note: the dummy vertex will be also stored in the map but the track stored vector which assigned to this vertex will be empty </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/TightTrackVertexAssociationTool.h" line="52" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/Root/TightTrackVertexAssociationTool.cxx" bodystart="176" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1ac5dca7886831a7c568f501dcc1e66c50" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>xAOD::TrackVertexAssociationMap</type>
        <definition>xAOD::TrackVertexAssociationMap CP::TightTrackVertexAssociationTool::getUniqueMatchMap</definition>
        <argsstring>(const xAOD::TrackParticleContainer &amp;trkCont, const xAOD::VertexContainer &amp;vxCont) const </argsstring>
        <name>getUniqueMatchMap</name>
        <reimplements refid="d7/df1/classCP_1_1ITrackVertexAssociationTool_1a02b821193fd4d9c515821cbc46b38e62">getUniqueMatchMap</reimplements>
        <param>
          <type>const <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::TrackParticleContainer</ref> &amp;</type>
          <declname>trkCont</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::VertexContainer</ref> &amp;</type>
          <declname>vxCont</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/TightTrackVertexAssociationTool.h" line="54" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/Root/TightTrackVertexAssociationTool.cxx" bodystart="201" bodyend="224"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1ab135df9b23d4f0307c5e97788fc89b26" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>MatchStatus</type>
        <definition>TightTrackVertexAssociationTool::MatchStatus CP::TightTrackVertexAssociationTool::doTightMatch</definition>
        <argsstring>(const xAOD::TrackParticle &amp;trk, const xAOD::Vertex &amp;vx, float &amp;dz) const </argsstring>
        <name>doTightMatch</name>
        <param>
          <type>const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref> &amp;</type>
          <declname>trk</declname>
        </param>
        <param>
          <type>const <ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref> &amp;</type>
          <declname>vx</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>dz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Main function for doing tight matching. will return three status: UsedInFit(the track is used in this vertex fit), Matched(the track is not used in this vertex fit, but can be associated to this vertex) UnMatch(the track is not used for vertex fit and can not be association to this vertex) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/TightTrackVertexAssociationTool.h" line="61" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/Root/TightTrackVertexAssociationTool.cxx" bodystart="228" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1a2a44e4f61018f89affc07cc92ac0d4ef" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref> *</type>
        <definition>const xAOD::Vertex * CP::TightTrackVertexAssociationTool::getUniqueMatchVx</definition>
        <argsstring>(const xAOD::TrackParticle &amp;trk, const xAOD::VertexContainer &amp;vxCont) const </argsstring>
        <name>getUniqueMatchVx</name>
        <param>
          <type>const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref> &amp;</type>
          <declname>trk</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::VertexContainer</ref> &amp;</type>
          <declname>vxCont</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/TightTrackVertexAssociationTool.h" line="62" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/Root/TightTrackVertexAssociationTool.cxx" bodystart="285" bodyend="340"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="dd/da1/classCP_1_1TightTrackVertexAssociationTool" kindref="compound">TightTrackVertexAssociationTool</ref>: apply tight track-vertex association process, the main idea is base on track used in vertex fit and recover the rest by loose method </para>    </detaileddescription>
    <inheritancegraph>
      <node id="19836">
        <label>CP::ITrackVertexAssociationTool</label>
        <link refid="d7/df1/classCP_1_1ITrackVertexAssociationTool"/>
        <childnode refid="19835" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19834">
        <label>asg::AsgTool</label>
        <link refid="d5/dbb/classasg_1_1AsgTool"/>
        <childnode refid="19835" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19835">
        <label>asg::IAsgTool</label>
        <link refid="d4/d20/classasg_1_1IAsgTool"/>
      </node>
      <node id="19833">
        <label>CP::TightTrackVertexAssociationTool</label>
        <link refid="dd/da1/classCP_1_1TightTrackVertexAssociationTool"/>
        <childnode refid="19834" relation="public-inheritance">
        </childnode>
        <childnode refid="19836" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="19840">
        <label>CP::ITrackVertexAssociationTool</label>
        <link refid="d7/df1/classCP_1_1ITrackVertexAssociationTool"/>
        <childnode refid="19839" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19838">
        <label>asg::AsgTool</label>
        <link refid="d5/dbb/classasg_1_1AsgTool"/>
        <childnode refid="19839" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19839">
        <label>asg::IAsgTool</label>
        <link refid="d4/d20/classasg_1_1IAsgTool"/>
      </node>
      <node id="19837">
        <label>CP::TightTrackVertexAssociationTool</label>
        <link refid="dd/da1/classCP_1_1TightTrackVertexAssociationTool"/>
        <childnode refid="19838" relation="public-inheritance">
        </childnode>
        <childnode refid="19840" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/TightTrackVertexAssociationTool.h" line="23" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/TightTrackVertexAssociationTool.h" bodystart="22" bodyend="68"/>
    <listofallmembers>
      <member refid="d5/dbb/classasg_1_1AsgTool_1a47f02c756c6d6026d03e0d4d68d82a94" prot="public" virt="non-virtual"><scope>CP::TightTrackVertexAssociationTool</scope><name>AsgTool</name></member>
      <member refid="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1ab135df9b23d4f0307c5e97788fc89b26" prot="private" virt="non-virtual"><scope>CP::TightTrackVertexAssociationTool</scope><name>doTightMatch</name></member>
      <member refid="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1aec959de68bab1a88ff1138e5d9d60ea7" prot="public" virt="virtual"><scope>CP::TightTrackVertexAssociationTool</scope><name>getMatchMap</name></member>
      <member refid="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1ae6a2b05b62f47b2469bc7d27b48fe0cc" prot="public" virt="virtual"><scope>CP::TightTrackVertexAssociationTool</scope><name>getMatchMap</name></member>
      <member refid="d5/dbb/classasg_1_1AsgTool_1a5d9d9eae0988784fb6c257e0a2440ca6" prot="public" virt="non-virtual"><scope>CP::TightTrackVertexAssociationTool</scope><name>getProperty</name></member>
      <member refid="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1ab78bf9e74bc11a8096e67e7398140f95" prot="public" virt="virtual"><scope>CP::TightTrackVertexAssociationTool</scope><name>getUniqueMatchMap</name></member>
      <member refid="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1ac5dca7886831a7c568f501dcc1e66c50" prot="public" virt="virtual"><scope>CP::TightTrackVertexAssociationTool</scope><name>getUniqueMatchMap</name></member>
      <member refid="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1a6e214899f5f26486193e4e91aec52b58" prot="public" virt="virtual"><scope>CP::TightTrackVertexAssociationTool</scope><name>getUniqueMatchVertex</name></member>
      <member refid="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1afa0c24ebff3f73503d8ec155d782dd2f" prot="public" virt="virtual"><scope>CP::TightTrackVertexAssociationTool</scope><name>getUniqueMatchVertexLink</name></member>
      <member refid="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1a2a44e4f61018f89affc07cc92ac0d4ef" prot="private" virt="non-virtual"><scope>CP::TightTrackVertexAssociationTool</scope><name>getUniqueMatchVx</name></member>
      <member refid="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1a04e7bd9f922ad359c9fcf0b204d7e2ee" prot="public" virt="virtual"><scope>CP::TightTrackVertexAssociationTool</scope><name>initialize</name></member>
      <member refid="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1a05b8ee9ad100daf4d42c06fff5cdc5ff" prot="public" virt="virtual"><scope>CP::TightTrackVertexAssociationTool</scope><name>isCompatible</name></member>
      <member refid="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1a6340d42ca2f2bfb54664b1408a6ea586" prot="private" virt="non-virtual"><scope>CP::TightTrackVertexAssociationTool</scope><name>m_d0_cut</name></member>
      <member refid="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1ab2adb6f5c44f725b809b7270a473cf90" prot="private" virt="non-virtual"><scope>CP::TightTrackVertexAssociationTool</scope><name>m_dod0sel</name></member>
      <member refid="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1a6672a564b69bf6633f8aa27a67f38cbf" prot="private" virt="non-virtual"><scope>CP::TightTrackVertexAssociationTool</scope><name>m_doPV</name></member>
      <member refid="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1a03f49fd225d9a4e2555d403de1c57c94" prot="private" virt="non-virtual"><scope>CP::TightTrackVertexAssociationTool</scope><name>m_dz_cut</name></member>
      <member refid="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1af7d47308e706763cf82cdd7aaeee21ceab61e2905b38f6423d8dd8c4e2d0913cf" prot="private" virt="non-virtual"><scope>CP::TightTrackVertexAssociationTool</scope><name>Matched</name></member>
      <member refid="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1af7d47308e706763cf82cdd7aaeee21ce" prot="private" virt="non-virtual"><scope>CP::TightTrackVertexAssociationTool</scope><name>MatchStatus</name></member>
      <member refid="d5/dbb/classasg_1_1AsgTool_1a3aeba8f7ad5ade0197f5848fe9e4480e" prot="public" virt="non-virtual"><scope>CP::TightTrackVertexAssociationTool</scope><name>msg_level_name</name></member>
      <member refid="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1a1d5821551831af9388f77839101c219d" prot="public" virt="virtual"><scope>CP::TightTrackVertexAssociationTool</scope><name>print</name></member>
      <member refid="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1a9b9d7c600417458de6c4b11823cdb87b" prot="public" virt="non-virtual"><scope>CP::TightTrackVertexAssociationTool</scope><name>TightTrackVertexAssociationTool</name></member>
      <member refid="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1af7d47308e706763cf82cdd7aaeee21cea2dd60879c29bf45293a44844db24dc19" prot="private" virt="non-virtual"><scope>CP::TightTrackVertexAssociationTool</scope><name>UnMatch</name></member>
      <member refid="dd/da1/classCP_1_1TightTrackVertexAssociationTool_1af7d47308e706763cf82cdd7aaeee21cea680980dd9a38533830ebe44406581658" prot="private" virt="non-virtual"><scope>CP::TightTrackVertexAssociationTool</scope><name>UsedInFit</name></member>
      <member refid="d5/dbb/classasg_1_1AsgTool_1abf22f7aa60258c67b79cf67bf70a3a5b" prot="public" virt="non-virtual"><scope>CP::TightTrackVertexAssociationTool</scope><name>~AsgTool</name></member>
      <member refid="d4/d20/classasg_1_1IAsgTool_1a77b49d52f1f8c272cb665b8309d6082d" prot="public" virt="virtual"><scope>CP::TightTrackVertexAssociationTool</scope><name>~IAsgTool</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
