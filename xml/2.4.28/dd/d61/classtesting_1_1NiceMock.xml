<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="dd/d61/classtesting_1_1NiceMock" kind="class" prot="public">
    <compoundname>testing::NiceMock</compoundname>
    <templateparamlist>
      <param>
        <type>class MockClass</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="dd/d61/classtesting_1_1NiceMock_1a10bbd6ebe779ac8ab1f9f3ae2dee9310" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>testing::NiceMock&lt; MockClass &gt;::NiceMock</definition>
        <argsstring>()</argsstring>
        <name>NiceMock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/Asg_GoogleTest/include/gmock/gmock-generated-nice-strict.h" line="84" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/Asg_GoogleTest/include/gmock/gmock-generated-nice-strict.h" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="dd/d61/classtesting_1_1NiceMock_1afa22a71a38215503f669d92ce25c37ba" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A1</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>testing::NiceMock&lt; MockClass &gt;::NiceMock</definition>
        <argsstring>(const A1 &amp;a1)</argsstring>
        <name>NiceMock</name>
        <param>
          <type>const A1 &amp;</type>
          <declname>a1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/Asg_GoogleTest/include/gmock/gmock-generated-nice-strict.h" line="92" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/Asg_GoogleTest/include/gmock/gmock-generated-nice-strict.h" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="dd/d61/classtesting_1_1NiceMock_1a1da50689940b8b5c9fd3eb1b6abe2e6c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A1</type>
          </param>
          <param>
            <type>typename A2</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>testing::NiceMock&lt; MockClass &gt;::NiceMock</definition>
        <argsstring>(const A1 &amp;a1, const A2 &amp;a2)</argsstring>
        <name>NiceMock</name>
        <param>
          <type>const A1 &amp;</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>const A2 &amp;</type>
          <declname>a2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/Asg_GoogleTest/include/gmock/gmock-generated-nice-strict.h" line="97" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/Asg_GoogleTest/include/gmock/gmock-generated-nice-strict.h" bodystart="97" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="dd/d61/classtesting_1_1NiceMock_1a5793a0faa43271baf4c10a382bbb9323" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A1</type>
          </param>
          <param>
            <type>typename A2</type>
          </param>
          <param>
            <type>typename A3</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>testing::NiceMock&lt; MockClass &gt;::NiceMock</definition>
        <argsstring>(const A1 &amp;a1, const A2 &amp;a2, const A3 &amp;a3)</argsstring>
        <name>NiceMock</name>
        <param>
          <type>const A1 &amp;</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>const A2 &amp;</type>
          <declname>a2</declname>
        </param>
        <param>
          <type>const A3 &amp;</type>
          <declname>a3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/Asg_GoogleTest/include/gmock/gmock-generated-nice-strict.h" line="103" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/Asg_GoogleTest/include/gmock/gmock-generated-nice-strict.h" bodystart="103" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="dd/d61/classtesting_1_1NiceMock_1acda0bc29b710175cf18a94c9995c8bc5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A1</type>
          </param>
          <param>
            <type>typename A2</type>
          </param>
          <param>
            <type>typename A3</type>
          </param>
          <param>
            <type>typename A4</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>testing::NiceMock&lt; MockClass &gt;::NiceMock</definition>
        <argsstring>(const A1 &amp;a1, const A2 &amp;a2, const A3 &amp;a3, const A4 &amp;a4)</argsstring>
        <name>NiceMock</name>
        <param>
          <type>const A1 &amp;</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>const A2 &amp;</type>
          <declname>a2</declname>
        </param>
        <param>
          <type>const A3 &amp;</type>
          <declname>a3</declname>
        </param>
        <param>
          <type>const A4 &amp;</type>
          <declname>a4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/Asg_GoogleTest/include/gmock/gmock-generated-nice-strict.h" line="110" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/Asg_GoogleTest/include/gmock/gmock-generated-nice-strict.h" bodystart="109" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="dd/d61/classtesting_1_1NiceMock_1ad88c0367df2a9c428f0a938402178033" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A1</type>
          </param>
          <param>
            <type>typename A2</type>
          </param>
          <param>
            <type>typename A3</type>
          </param>
          <param>
            <type>typename A4</type>
          </param>
          <param>
            <type>typename A5</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>testing::NiceMock&lt; MockClass &gt;::NiceMock</definition>
        <argsstring>(const A1 &amp;a1, const A2 &amp;a2, const A3 &amp;a3, const A4 &amp;a4, const A5 &amp;a5)</argsstring>
        <name>NiceMock</name>
        <param>
          <type>const A1 &amp;</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>const A2 &amp;</type>
          <declname>a2</declname>
        </param>
        <param>
          <type>const A3 &amp;</type>
          <declname>a3</declname>
        </param>
        <param>
          <type>const A4 &amp;</type>
          <declname>a4</declname>
        </param>
        <param>
          <type>const A5 &amp;</type>
          <declname>a5</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/Asg_GoogleTest/include/gmock/gmock-generated-nice-strict.h" line="117" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/Asg_GoogleTest/include/gmock/gmock-generated-nice-strict.h" bodystart="116" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="dd/d61/classtesting_1_1NiceMock_1a77c3f6f03e66d52e444c1c78ab8cfd65" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A1</type>
          </param>
          <param>
            <type>typename A2</type>
          </param>
          <param>
            <type>typename A3</type>
          </param>
          <param>
            <type>typename A4</type>
          </param>
          <param>
            <type>typename A5</type>
          </param>
          <param>
            <type>typename A6</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>testing::NiceMock&lt; MockClass &gt;::NiceMock</definition>
        <argsstring>(const A1 &amp;a1, const A2 &amp;a2, const A3 &amp;a3, const A4 &amp;a4, const A5 &amp;a5, const A6 &amp;a6)</argsstring>
        <name>NiceMock</name>
        <param>
          <type>const A1 &amp;</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>const A2 &amp;</type>
          <declname>a2</declname>
        </param>
        <param>
          <type>const A3 &amp;</type>
          <declname>a3</declname>
        </param>
        <param>
          <type>const A4 &amp;</type>
          <declname>a4</declname>
        </param>
        <param>
          <type>const A5 &amp;</type>
          <declname>a5</declname>
        </param>
        <param>
          <type>const A6 &amp;</type>
          <declname>a6</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/Asg_GoogleTest/include/gmock/gmock-generated-nice-strict.h" line="125" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/Asg_GoogleTest/include/gmock/gmock-generated-nice-strict.h" bodystart="124" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="dd/d61/classtesting_1_1NiceMock_1afd21905eae08b63e1b17562f66ffa8ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A1</type>
          </param>
          <param>
            <type>typename A2</type>
          </param>
          <param>
            <type>typename A3</type>
          </param>
          <param>
            <type>typename A4</type>
          </param>
          <param>
            <type>typename A5</type>
          </param>
          <param>
            <type>typename A6</type>
          </param>
          <param>
            <type>typename A7</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>testing::NiceMock&lt; MockClass &gt;::NiceMock</definition>
        <argsstring>(const A1 &amp;a1, const A2 &amp;a2, const A3 &amp;a3, const A4 &amp;a4, const A5 &amp;a5, const A6 &amp;a6, const A7 &amp;a7)</argsstring>
        <name>NiceMock</name>
        <param>
          <type>const A1 &amp;</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>const A2 &amp;</type>
          <declname>a2</declname>
        </param>
        <param>
          <type>const A3 &amp;</type>
          <declname>a3</declname>
        </param>
        <param>
          <type>const A4 &amp;</type>
          <declname>a4</declname>
        </param>
        <param>
          <type>const A5 &amp;</type>
          <declname>a5</declname>
        </param>
        <param>
          <type>const A6 &amp;</type>
          <declname>a6</declname>
        </param>
        <param>
          <type>const A7 &amp;</type>
          <declname>a7</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/Asg_GoogleTest/include/gmock/gmock-generated-nice-strict.h" line="134" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/Asg_GoogleTest/include/gmock/gmock-generated-nice-strict.h" bodystart="132" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="dd/d61/classtesting_1_1NiceMock_1a5ead67fd17f8456b8cb0ec5093321054" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A1</type>
          </param>
          <param>
            <type>typename A2</type>
          </param>
          <param>
            <type>typename A3</type>
          </param>
          <param>
            <type>typename A4</type>
          </param>
          <param>
            <type>typename A5</type>
          </param>
          <param>
            <type>typename A6</type>
          </param>
          <param>
            <type>typename A7</type>
          </param>
          <param>
            <type>typename A8</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>testing::NiceMock&lt; MockClass &gt;::NiceMock</definition>
        <argsstring>(const A1 &amp;a1, const A2 &amp;a2, const A3 &amp;a3, const A4 &amp;a4, const A5 &amp;a5, const A6 &amp;a6, const A7 &amp;a7, const A8 &amp;a8)</argsstring>
        <name>NiceMock</name>
        <param>
          <type>const A1 &amp;</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>const A2 &amp;</type>
          <declname>a2</declname>
        </param>
        <param>
          <type>const A3 &amp;</type>
          <declname>a3</declname>
        </param>
        <param>
          <type>const A4 &amp;</type>
          <declname>a4</declname>
        </param>
        <param>
          <type>const A5 &amp;</type>
          <declname>a5</declname>
        </param>
        <param>
          <type>const A6 &amp;</type>
          <declname>a6</declname>
        </param>
        <param>
          <type>const A7 &amp;</type>
          <declname>a7</declname>
        </param>
        <param>
          <type>const A8 &amp;</type>
          <declname>a8</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/Asg_GoogleTest/include/gmock/gmock-generated-nice-strict.h" line="143" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/Asg_GoogleTest/include/gmock/gmock-generated-nice-strict.h" bodystart="141" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="dd/d61/classtesting_1_1NiceMock_1a8a2b3ea9ca8022178c6c0a018411f9ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A1</type>
          </param>
          <param>
            <type>typename A2</type>
          </param>
          <param>
            <type>typename A3</type>
          </param>
          <param>
            <type>typename A4</type>
          </param>
          <param>
            <type>typename A5</type>
          </param>
          <param>
            <type>typename A6</type>
          </param>
          <param>
            <type>typename A7</type>
          </param>
          <param>
            <type>typename A8</type>
          </param>
          <param>
            <type>typename A9</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>testing::NiceMock&lt; MockClass &gt;::NiceMock</definition>
        <argsstring>(const A1 &amp;a1, const A2 &amp;a2, const A3 &amp;a3, const A4 &amp;a4, const A5 &amp;a5, const A6 &amp;a6, const A7 &amp;a7, const A8 &amp;a8, const A9 &amp;a9)</argsstring>
        <name>NiceMock</name>
        <param>
          <type>const A1 &amp;</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>const A2 &amp;</type>
          <declname>a2</declname>
        </param>
        <param>
          <type>const A3 &amp;</type>
          <declname>a3</declname>
        </param>
        <param>
          <type>const A4 &amp;</type>
          <declname>a4</declname>
        </param>
        <param>
          <type>const A5 &amp;</type>
          <declname>a5</declname>
        </param>
        <param>
          <type>const A6 &amp;</type>
          <declname>a6</declname>
        </param>
        <param>
          <type>const A7 &amp;</type>
          <declname>a7</declname>
        </param>
        <param>
          <type>const A8 &amp;</type>
          <declname>a8</declname>
        </param>
        <param>
          <type>const A9 &amp;</type>
          <declname>a9</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/Asg_GoogleTest/include/gmock/gmock-generated-nice-strict.h" line="152" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/Asg_GoogleTest/include/gmock/gmock-generated-nice-strict.h" bodystart="150" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="dd/d61/classtesting_1_1NiceMock_1afc0404f949cdefdbcd51e2c5371a738f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A1</type>
          </param>
          <param>
            <type>typename A2</type>
          </param>
          <param>
            <type>typename A3</type>
          </param>
          <param>
            <type>typename A4</type>
          </param>
          <param>
            <type>typename A5</type>
          </param>
          <param>
            <type>typename A6</type>
          </param>
          <param>
            <type>typename A7</type>
          </param>
          <param>
            <type>typename A8</type>
          </param>
          <param>
            <type>typename A9</type>
          </param>
          <param>
            <type>typename A10</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>testing::NiceMock&lt; MockClass &gt;::NiceMock</definition>
        <argsstring>(const A1 &amp;a1, const A2 &amp;a2, const A3 &amp;a3, const A4 &amp;a4, const A5 &amp;a5, const A6 &amp;a6, const A7 &amp;a7, const A8 &amp;a8, const A9 &amp;a9, const A10 &amp;a10)</argsstring>
        <name>NiceMock</name>
        <param>
          <type>const A1 &amp;</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>const A2 &amp;</type>
          <declname>a2</declname>
        </param>
        <param>
          <type>const A3 &amp;</type>
          <declname>a3</declname>
        </param>
        <param>
          <type>const A4 &amp;</type>
          <declname>a4</declname>
        </param>
        <param>
          <type>const A5 &amp;</type>
          <declname>a5</declname>
        </param>
        <param>
          <type>const A6 &amp;</type>
          <declname>a6</declname>
        </param>
        <param>
          <type>const A7 &amp;</type>
          <declname>a7</declname>
        </param>
        <param>
          <type>const A8 &amp;</type>
          <declname>a8</declname>
        </param>
        <param>
          <type>const A9 &amp;</type>
          <declname>a9</declname>
        </param>
        <param>
          <type>const A10 &amp;</type>
          <declname>a10</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/Asg_GoogleTest/include/gmock/gmock-generated-nice-strict.h" line="161" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/Asg_GoogleTest/include/gmock/gmock-generated-nice-strict.h" bodystart="159" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="dd/d61/classtesting_1_1NiceMock_1a4aaa6bd3850de6b6baa408010909a25f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual testing::NiceMock&lt; MockClass &gt;::~NiceMock</definition>
        <argsstring>()</argsstring>
        <name>~NiceMock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/Asg_GoogleTest/include/gmock/gmock-generated-nice-strict.h" line="166" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/Asg_GoogleTest/include/gmock/gmock-generated-nice-strict.h" bodystart="166" bodyend="169"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="dd/d61/classtesting_1_1NiceMock_1aee46eca734708818a8af94624eb512dd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::NiceMock&lt; MockClass &gt;::GTEST_DISALLOW_COPY_AND_ASSIGN_</definition>
        <argsstring>(NiceMock)</argsstring>
        <name>GTEST_DISALLOW_COPY_AND_ASSIGN_</name>
        <param>
          <type><ref refid="dd/d61/classtesting_1_1NiceMock" kindref="compound">NiceMock</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/Asg_GoogleTest/include/gmock/gmock-generated-nice-strict.h" line="172"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/Asg_GoogleTest/include/gmock/gmock-generated-nice-strict.h" line="80" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/Asg_GoogleTest/include/gmock/gmock-generated-nice-strict.h" bodystart="80" bodyend="173"/>
    <listofallmembers>
      <member refid="dd/d61/classtesting_1_1NiceMock_1aee46eca734708818a8af94624eb512dd" prot="private" virt="non-virtual"><scope>testing::NiceMock</scope><name>GTEST_DISALLOW_COPY_AND_ASSIGN_</name></member>
      <member refid="dd/d61/classtesting_1_1NiceMock_1a10bbd6ebe779ac8ab1f9f3ae2dee9310" prot="public" virt="non-virtual"><scope>testing::NiceMock</scope><name>NiceMock</name></member>
      <member refid="dd/d61/classtesting_1_1NiceMock_1afa22a71a38215503f669d92ce25c37ba" prot="public" virt="non-virtual"><scope>testing::NiceMock</scope><name>NiceMock</name></member>
      <member refid="dd/d61/classtesting_1_1NiceMock_1a1da50689940b8b5c9fd3eb1b6abe2e6c" prot="public" virt="non-virtual"><scope>testing::NiceMock</scope><name>NiceMock</name></member>
      <member refid="dd/d61/classtesting_1_1NiceMock_1a5793a0faa43271baf4c10a382bbb9323" prot="public" virt="non-virtual"><scope>testing::NiceMock</scope><name>NiceMock</name></member>
      <member refid="dd/d61/classtesting_1_1NiceMock_1acda0bc29b710175cf18a94c9995c8bc5" prot="public" virt="non-virtual"><scope>testing::NiceMock</scope><name>NiceMock</name></member>
      <member refid="dd/d61/classtesting_1_1NiceMock_1ad88c0367df2a9c428f0a938402178033" prot="public" virt="non-virtual"><scope>testing::NiceMock</scope><name>NiceMock</name></member>
      <member refid="dd/d61/classtesting_1_1NiceMock_1a77c3f6f03e66d52e444c1c78ab8cfd65" prot="public" virt="non-virtual"><scope>testing::NiceMock</scope><name>NiceMock</name></member>
      <member refid="dd/d61/classtesting_1_1NiceMock_1afd21905eae08b63e1b17562f66ffa8ab" prot="public" virt="non-virtual"><scope>testing::NiceMock</scope><name>NiceMock</name></member>
      <member refid="dd/d61/classtesting_1_1NiceMock_1a5ead67fd17f8456b8cb0ec5093321054" prot="public" virt="non-virtual"><scope>testing::NiceMock</scope><name>NiceMock</name></member>
      <member refid="dd/d61/classtesting_1_1NiceMock_1a8a2b3ea9ca8022178c6c0a018411f9ce" prot="public" virt="non-virtual"><scope>testing::NiceMock</scope><name>NiceMock</name></member>
      <member refid="dd/d61/classtesting_1_1NiceMock_1afc0404f949cdefdbcd51e2c5371a738f" prot="public" virt="non-virtual"><scope>testing::NiceMock</scope><name>NiceMock</name></member>
      <member refid="dd/d61/classtesting_1_1NiceMock_1a4aaa6bd3850de6b6baa408010909a25f" prot="public" virt="virtual"><scope>testing::NiceMock</scope><name>~NiceMock</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
