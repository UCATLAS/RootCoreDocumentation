<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor" kind="class" prot="public">
    <compoundname>SG::AuxElement::ConstAccessor</compoundname>
    <derivedcompoundref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" prot="public" virt="non-virtual">SG::AuxElement::Accessor&lt; T &gt;</derivedcompoundref>
    <includes refid="d1/d6f/AuxElement_8h" local="no">AuxElement.h</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1aa5d2f82b91a4e81f94de85a4abab6d2d" prot="public" static="no">
        <type><ref refid="d0/d6e/classSG_1_1AuxDataTraits" kindref="compound">AuxDataTraits</ref>&lt; <ref refid="d1/def/classT" kindref="compound">T</ref> &gt;::<ref refid="d1/def/classT" kindref="compound">const_reference_type</ref></type>
        <definition>typedef AuxDataTraits&lt;T&gt;::const_reference_type SG::AuxElement::ConstAccessor&lt; T &gt;::const_reference_type</definition>
        <argsstring></argsstring>
        <name>const_reference_type</name>
        <briefdescription>
<para>Type referencing an item. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxElement.h" line="363" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxElement.h" bodystart="363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1a4705768a58a6497b1d1c5e6575a27c4c" prot="public" static="no">
        <type><ref refid="d0/d6e/classSG_1_1AuxDataTraits" kindref="compound">AuxDataTraits</ref>&lt; <ref refid="d1/def/classT" kindref="compound">T</ref> &gt;::<ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1a4705768a58a6497b1d1c5e6575a27c4c" kindref="member">const_container_pointer_type</ref></type>
        <definition>typedef AuxDataTraits&lt;T&gt;::const_container_pointer_type SG::AuxElement::ConstAccessor&lt; T &gt;::const_container_pointer_type</definition>
        <argsstring></argsstring>
        <name>const_container_pointer_type</name>
        <briefdescription>
<para>Pointer into the container holding this item. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxElement.h" line="367" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxElement.h" bodystart="367" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1aa7ddab546828ce0b800200ccfb994009" prot="protected" static="no" mutable="no">
        <type><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member">SG::auxid_t</ref></type>
        <definition>SG::auxid_t SG::AuxElement::ConstAccessor&lt; T &gt;::m_auxid</definition>
        <argsstring></argsstring>
        <name>m_auxid</name>
        <briefdescription>
<para>The cached <computeroutput>auxid</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxElement.h" line="431" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxElement.h" bodystart="431" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ac741b4bd42c27549776e795810559a1a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SG::AuxElement::ConstAccessor&lt; T &gt;::ConstAccessor</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>ConstAccessor</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of this aux variable.</para></parameterdescription>
</parameteritem>
</parameterlist>
The name -&gt; auxid lookup is done here. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxElement.h" line="375" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxElement.icc" bodystart="296" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1adddc9fca7ffb2baf3abc084cd8d239f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SG::AuxElement::ConstAccessor&lt; T &gt;::ConstAccessor</definition>
        <argsstring>(const std::string &amp;name, const std::string &amp;clsname)</argsstring>
        <name>ConstAccessor</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>clsname</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of this aux variable. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clsname</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of its associated class. May be blank.</para></parameterdescription>
</parameteritem>
</parameterlist>
The name -&gt; auxid lookup is done here. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxElement.h" line="385" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxElement.icc" bodystart="311" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1aee60b907f79a78a5b5ed83fbef2d1185" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d1/def/classT" kindref="compound">const_reference_type</ref></type>
        <definition>AuxElement::ConstAccessor&lt; T &gt;::const_reference_type SG::AuxElement::ConstAccessor&lt; T &gt;::operator()</definition>
        <argsstring>(const AuxElement &amp;e) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound">AuxElement</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Fetch the variable for one element, as a const reference. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>The element for which to fetch the variable. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxElement.h" line="392" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxElement.icc" bodystart="325" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1a7331bc01c04af5fd3561676bbcdf3fd2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d1/def/classT" kindref="compound">const_reference_type</ref></type>
        <definition>AuxElement::ConstAccessor&lt; T &gt;::const_reference_type SG::AuxElement::ConstAccessor&lt; T &gt;::operator()</definition>
        <argsstring>(const AuxVectorData &amp;container, size_t index) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="db/dd6/classSG_1_1AuxVectorData" kindref="compound">AuxVectorData</ref> &amp;</type>
          <declname>container</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Fetch the variable for one element, as a const reference. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>container</parametername>
</parameternamelist>
<parameterdescription>
<para>The container from which to fetch the variable. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the desired element.</para></parameterdescription>
</parameteritem>
</parameterlist>
This allows retrieving aux data by container / index. Looping over the index via this method will be faster then looping over the elements of the container. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxElement.h" line="405" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxElement.icc" bodystart="344" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1a45993dda15a8958bcb84c284460882b3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1a4705768a58a6497b1d1c5e6575a27c4c" kindref="member">const_container_pointer_type</ref></type>
        <definition>AuxElement::ConstAccessor&lt; T &gt;::const_container_pointer_type SG::AuxElement::ConstAccessor&lt; T &gt;::getDataArray</definition>
        <argsstring>(const AuxVectorData &amp;container) const </argsstring>
        <name>getDataArray</name>
        <param>
          <type>const <ref refid="db/dd6/classSG_1_1AuxVectorData" kindref="compound">AuxVectorData</ref> &amp;</type>
          <declname>container</declname>
        </param>
        <briefdescription>
<para>Get a pointer to the start of the auxiliary data array. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>container</parametername>
</parameternamelist>
<parameterdescription>
<para>The container from which to fetch the variable. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxElement.h" line="413" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxElement.icc" bodystart="359" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SG::AuxElement::ConstAccessor&lt; T &gt;::isAvailable</definition>
        <argsstring>(const AuxElement &amp;e) const </argsstring>
        <name>isAvailable</name>
        <param>
          <type>const <ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound">AuxElement</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Test to see if this variable exists in the store. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>An element of the container which to test the variable. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxElement.h" line="420" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxElement.icc" bodystart="373" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1a451ed73df612fa77da9216112f59ecf7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member">SG::auxid_t</ref></type>
        <definition>SG::auxid_t SG::AuxElement::ConstAccessor&lt; T &gt;::auxid</definition>
        <argsstring>() const </argsstring>
        <name>auxid</name>
        <briefdescription>
<para>Return the aux id for this variable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxElement.h" line="426" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxElement.icc" bodystart="385" bodyend="388"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Helper class to provide constant type-safe access to aux data. </para>    </briefdescription>
    <detaileddescription>
<para>This is written as a separate class in order to be able to cache the name -&gt; auxid lookup.</para><para>You might use this something like this:</para><para><programlisting><codeline><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>need<sp/>to<sp/>do<sp/>this<sp/>once.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>Myclass::ConstAccessor&lt;int&gt;<sp/>vint1<sp/>(</highlight><highlight class="stringliteral">&quot;myInt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Myclass*<sp/>m<sp/>=<sp/>...;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>vint1<sp/>(*m);</highlight></codeline>
</programlisting></para><para>This class can be used only for reading data. To modify data, see the class <computeroutput><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound">Accessor</ref></computeroutput>. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="4131">
        <label>SG::AuxElement::ConstAccessor&lt; T &gt;</label>
        <link refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor"/>
      </node>
      <node id="4132">
        <label>SG::AuxElement::Accessor&lt; T &gt;</label>
        <link refid="d8/d31/classSG_1_1AuxElement_1_1Accessor"/>
        <childnode refid="4131" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxElement.h" line="359" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxElement.h" bodystart="358" bodyend="432"/>
    <listofallmembers>
      <member refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1a451ed73df612fa77da9216112f59ecf7" prot="public" virt="non-virtual"><scope>SG::AuxElement::ConstAccessor</scope><name>auxid</name></member>
      <member refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1a4705768a58a6497b1d1c5e6575a27c4c" prot="public" virt="non-virtual"><scope>SG::AuxElement::ConstAccessor</scope><name>const_container_pointer_type</name></member>
      <member refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1aa5d2f82b91a4e81f94de85a4abab6d2d" prot="public" virt="non-virtual"><scope>SG::AuxElement::ConstAccessor</scope><name>const_reference_type</name></member>
      <member refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ac741b4bd42c27549776e795810559a1a" prot="public" virt="non-virtual"><scope>SG::AuxElement::ConstAccessor</scope><name>ConstAccessor</name></member>
      <member refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1adddc9fca7ffb2baf3abc084cd8d239f7" prot="public" virt="non-virtual"><scope>SG::AuxElement::ConstAccessor</scope><name>ConstAccessor</name></member>
      <member refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1a45993dda15a8958bcb84c284460882b3" prot="public" virt="non-virtual"><scope>SG::AuxElement::ConstAccessor</scope><name>getDataArray</name></member>
      <member refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1ae085d8a369304f86be998575cbe94998" prot="public" virt="non-virtual"><scope>SG::AuxElement::ConstAccessor</scope><name>isAvailable</name></member>
      <member refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1aa7ddab546828ce0b800200ccfb994009" prot="protected" virt="non-virtual"><scope>SG::AuxElement::ConstAccessor</scope><name>m_auxid</name></member>
      <member refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1aee60b907f79a78a5b5ed83fbef2d1185" prot="public" virt="non-virtual"><scope>SG::AuxElement::ConstAccessor</scope><name>operator()</name></member>
      <member refid="dd/d86/classSG_1_1AuxElement_1_1ConstAccessor_1a7331bc01c04af5fd3561676bbcdf3fd2" prot="public" virt="non-virtual"><scope>SG::AuxElement::ConstAccessor</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
