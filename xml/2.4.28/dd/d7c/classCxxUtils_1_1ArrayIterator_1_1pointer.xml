<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="dd/d7c/classCxxUtils_1_1ArrayIterator_1_1pointer" kind="class" prot="public">
    <compoundname>CxxUtils::ArrayIterator::pointer</compoundname>
    <includes refid="df/dd0/Array_8h" local="no">Array.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="dd/d7c/classCxxUtils_1_1ArrayIterator_1_1pointer_1a25d7dd5af990af8908d19b83c839e0e5" prot="private" static="no" mutable="no">
        <type><ref refid="d4/d75/classCxxUtils_1_1ArrayIterator_1a625645923a91f144e80d10e6f0ef707c" kindref="member">value_type</ref></type>
        <definition>value_type CxxUtils::ArrayIterator&lt; N &gt;::pointer::m_a</definition>
        <argsstring></argsstring>
        <name>m_a</name>
        <briefdescription>
<para>The contained <computeroutput><ref refid="d5/dd9/classCxxUtils_1_1Array" kindref="compound">Array</ref></computeroutput> proxy instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.h" line="425" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.h" bodystart="425" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="dd/d7c/classCxxUtils_1_1ArrayIterator_1_1pointer_1a1b0a8c21645e39d6c74c052c01f27649" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CxxUtils::ArrayIterator&lt; N &gt;::pointer::pointer</definition>
        <argsstring>(const ArrayIterator &amp;i)</argsstring>
        <name>pointer</name>
        <param>
          <type>const <ref refid="d4/d75/classCxxUtils_1_1ArrayIterator" kindref="compound">ArrayIterator</ref> &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Proxy constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>The iterator that is being dereferenced. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.h" line="404" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.icc" bodystart="329" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="dd/d7c/classCxxUtils_1_1ArrayIterator_1_1pointer_1a8db325e28f3d7092bb7f5461b100ed91" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d4/d75/classCxxUtils_1_1ArrayIterator_1a625645923a91f144e80d10e6f0ef707c" kindref="member">value_type</ref></type>
        <definition>ArrayIterator&lt; N &gt;::value_type CxxUtils::ArrayIterator&lt; N &gt;::pointer::operator*</definition>
        <argsstring>() const </argsstring>
        <name>operator*</name>
        <briefdescription>
<para>Dereference the proxy. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="d4/dc4/structA" kindref="compound">A</ref> copy of the <computeroutput><ref refid="d5/dd9/classCxxUtils_1_1Array" kindref="compound">Array</ref></computeroutput> proxy. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.h" line="411" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.icc" bodystart="341" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="dd/d7c/classCxxUtils_1_1ArrayIterator_1_1pointer_1af1300c8f1b26c742d18810df23e7c7b6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="d4/d75/classCxxUtils_1_1ArrayIterator_1a625645923a91f144e80d10e6f0ef707c" kindref="member">value_type</ref> *</type>
        <definition>const ArrayIterator&lt; N &gt;::value_type * CxxUtils::ArrayIterator&lt; N &gt;::pointer::operator-&gt;</definition>
        <argsstring>() const </argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
<para>Dereference the proxy. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="d4/dc4/structA" kindref="compound">A</ref> <ref refid="dd/d7c/classCxxUtils_1_1ArrayIterator_1_1pointer" kindref="compound">pointer</ref> to the <computeroutput><ref refid="d5/dd9/classCxxUtils_1_1Array" kindref="compound">Array</ref></computeroutput> proxy. This proxy is only until the <computeroutput><ref refid="dd/d7c/classCxxUtils_1_1ArrayIterator_1_1pointer" kindref="compound">pointer</ref></computeroutput> instance is destroyed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.h" line="420" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.icc" bodystart="355" bodyend="358"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Proxy to return from <computeroutput>operator&gt;</computeroutput>. </para>    </briefdescription>
    <detaileddescription>
<para><computeroutput>operator-&gt;</computeroutput> is required to either return an actual C++ <ref refid="dd/d7c/classCxxUtils_1_1ArrayIterator_1_1pointer" kindref="compound">pointer</ref> or another object that has a valid <computeroutput>operator-&gt;</computeroutput>. This makes things a bit tricky if you&apos;re using proxies. We have the <computeroutput><ref refid="d4/d75/classCxxUtils_1_1ArrayIterator" kindref="compound">ArrayIterator</ref></computeroutput> <computeroutput>operator-&gt;</computeroutput> return an instance of this proxy class, which contains an instance of the <computeroutput><ref refid="d5/dd9/classCxxUtils_1_1Array" kindref="compound">Array</ref></computeroutput> proxy. The <computeroutput>operator-&gt;</computeroutput> of this proxy then returns a <ref refid="dd/d7c/classCxxUtils_1_1ArrayIterator_1_1pointer" kindref="compound">pointer</ref> to the contained <computeroutput><ref refid="d5/dd9/classCxxUtils_1_1Array" kindref="compound">Array</ref></computeroutput>. This will work for most common usages. However, the <ref refid="dd/d7c/classCxxUtils_1_1ArrayIterator_1_1pointer" kindref="compound">pointer</ref> one gets from the <computeroutput>operator-&gt;</computeroutput> here will only be valid until the proxy is destroyed. </para>    </detaileddescription>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.h" line="398" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CxxUtils/CxxUtils/Array.h" bodystart="397" bodyend="426"/>
    <listofallmembers>
      <member refid="dd/d7c/classCxxUtils_1_1ArrayIterator_1_1pointer_1a25d7dd5af990af8908d19b83c839e0e5" prot="private" virt="non-virtual"><scope>CxxUtils::ArrayIterator::pointer</scope><name>m_a</name></member>
      <member refid="dd/d7c/classCxxUtils_1_1ArrayIterator_1_1pointer_1a8db325e28f3d7092bb7f5461b100ed91" prot="public" virt="non-virtual"><scope>CxxUtils::ArrayIterator::pointer</scope><name>operator*</name></member>
      <member refid="dd/d7c/classCxxUtils_1_1ArrayIterator_1_1pointer_1af1300c8f1b26c742d18810df23e7c7b6" prot="public" virt="non-virtual"><scope>CxxUtils::ArrayIterator::pointer</scope><name>operator-&gt;</name></member>
      <member refid="dd/d7c/classCxxUtils_1_1ArrayIterator_1_1pointer_1a1b0a8c21645e39d6c74c052c01f27649" prot="public" virt="non-virtual"><scope>CxxUtils::ArrayIterator::pointer</scope><name>pointer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
