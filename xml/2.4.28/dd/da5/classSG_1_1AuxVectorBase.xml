<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="dd/da5/classSG_1_1AuxVectorBase" kind="class" prot="public">
    <compoundname>SG::AuxVectorBase</compoundname>
    <basecompoundref refid="db/dd6/classSG_1_1AuxVectorData" prot="public" virt="non-virtual">SG::AuxVectorData</basecompoundref>
    <basecompoundref refid="db/dd6/classSG_1_1AuxVectorData" prot="public" virt="non-virtual">SG::AuxVectorData</basecompoundref>
    <derivedcompoundref refid="d0/d91/classDataVector_3_01T_00_01DataModel__detail_1_1NoBase_01_4" prot="public" virt="non-virtual">DataVector&lt; T, DataModel_detail::NoBase &gt;</derivedcompoundref>
    <derivedcompoundref refid="d1/daa/classmyvec2" prot="public" virt="non-virtual">myvec2</derivedcompoundref>
    <derivedcompoundref refid="d8/db3/classSG_1_1AuxVectorBase__test" prot="public" virt="non-virtual">SG::AuxVectorBase_test</derivedcompoundref>
    <includes refid="d7/d18/AuxVectorBase_8h" local="no">AuxVectorBase.h</includes>
    <innerclass refid="d5/d7f/classSG_1_1AuxVectorBase_1_1ResortAuxHelper" prot="private">SG::AuxVectorBase::ResortAuxHelper</innerclass>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="dd/da5/classSG_1_1AuxVectorBase_1a59270f0234bd8fc66a0ee5e564556bc1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class ResortAuxHelper</definition>
        <argsstring></argsstring>
        <name>ResortAuxHelper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="694" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" bodystart="694" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="dd/da5/classSG_1_1AuxVectorBase_1a45d183a0adaa5862a5b26c796cafb10d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SG::AuxVectorBase::m_trackIndices</definition>
        <argsstring></argsstring>
        <name>m_trackIndices</name>
        <briefdescription>
<para>Flag if index tracking is enabled. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="698" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" bodystart="698" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1a0393c7e87efbe788419774c662cba5a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SG::AuxVectorBase::AuxVectorBase</definition>
        <argsstring>()</argsstring>
        <name>AuxVectorBase</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
<para>This will disable index tracking by default. The constructor should be followed by a call to <computeroutput>initAuxVectorBase</computeroutput>. (This is separated from the constructor because calling non-default constructors of <computeroutput><ref refid="d0/d4d/classDataVector" kindref="compound">DataVector</ref></computeroutput> base classes can be awkward in the case of virtual derivation.) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="105" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/AuxVectorBase.cxx" bodystart="26" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1a863ff9b970004c403c1398d24b1f60e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>SG::AuxVectorBase::~AuxVectorBase</definition>
        <argsstring>()</argsstring>
        <name>~AuxVectorBase</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="127" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/AuxVectorBase.cxx" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1ae905757bbac29e780e4010eaf52ea01e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SG::AuxVectorBase::trackIndices</definition>
        <argsstring>() const </argsstring>
        <name>trackIndices</name>
        <briefdescription>
<para>Return true if index tracking is enabled for this container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="133" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.icc" bodystart="17" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1aa21603645adb97780ff75af26630bfad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SG::AuxVectorBase::setStore</definition>
        <argsstring>(const SG::IConstAuxStore *store)</argsstring>
        <name>setStore</name>
        <reimplements refid="db/dd6/classSG_1_1AuxVectorData_1af6e2da3c14ea74935120cd1b5a37f021">setStore</reimplements>
        <param>
          <type>const <ref refid="d3/dd5/classSG_1_1IConstAuxStore" kindref="compound">SG::IConstAuxStore</ref> *</type>
          <declname>store</declname>
        </param>
        <briefdescription>
<para>Set the store associated with this object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>store</parametername>
</parameternamelist>
<parameterdescription>
<para>The new store.</para></parameterdescription>
</parameteritem>
</parameterlist>
This will clear the non-const store pointer, and also clear the cache.</para><para>It is an error to set a store for a container for which index tracking is disabled. That will raise an <computeroutput><ref refid="d4/d77/classSG_1_1ExcUntrackedSetStore" kindref="compound">ExcUntrackedSetStore</ref></computeroutput> exception. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="146" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/AuxVectorBase.cxx" bodystart="77" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1a58659470f0f2e27560cbe691eefce9c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SG::AuxVectorBase::setStore</definition>
        <argsstring>(SG::IAuxStore *store)</argsstring>
        <name>setStore</name>
        <reimplements refid="db/dd6/classSG_1_1AuxVectorData_1a1980ceb02ed996944d1f2508d128d91c">setStore</reimplements>
        <param>
          <type><ref refid="dc/d05/classSG_1_1IAuxStore" kindref="compound">SG::IAuxStore</ref> *</type>
          <declname>store</declname>
        </param>
        <briefdescription>
<para>Set the store associated with this object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>store</parametername>
</parameternamelist>
<parameterdescription>
<para>The new store.</para></parameterdescription>
</parameteritem>
</parameterlist>
This will set both the const and non-const store pointers, and also clear the cache.</para><para>It is an error to set a store for a container for which index tracking is disabled. That will raise an <computeroutput><ref refid="d4/d77/classSG_1_1ExcUntrackedSetStore" kindref="compound">ExcUntrackedSetStore</ref></computeroutput> exception. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="159" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/AuxVectorBase.cxx" bodystart="95" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1a2893a7ee3b1f5c7bc7d5cc5ce65d6e16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SG::AuxVectorBase::setStore</definition>
        <argsstring>(const DataLink&lt; SG::IConstAuxStore &gt; &amp;store)</argsstring>
        <name>setStore</name>
        <reimplements refid="db/dd6/classSG_1_1AuxVectorData_1a49c013e89eb83e984483ee34fc91d68c">setStore</reimplements>
        <param>
          <type>const <ref refid="da/da2/classDataLink" kindref="compound">DataLink</ref>&lt; <ref refid="d3/dd5/classSG_1_1IConstAuxStore" kindref="compound">SG::IConstAuxStore</ref> &gt; &amp;</type>
          <declname>store</declname>
        </param>
        <briefdescription>
<para>Set the store associated with this object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>store</parametername>
</parameternamelist>
<parameterdescription>
<para>The new store.</para></parameterdescription>
</parameteritem>
</parameterlist>
This will clear the non-const store pointer, and also clear the cache.</para><para>It is an error to set a store for a container for which index tracking is disabled. That will raise an <computeroutput><ref refid="d4/d77/classSG_1_1ExcUntrackedSetStore" kindref="compound">ExcUntrackedSetStore</ref></computeroutput> exception. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="172" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/AuxVectorBase.cxx" bodystart="113" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1a8223a5c9a9af0a9dbb8fc268cd0ea832" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SG::AuxVectorBase::setConstStore</definition>
        <argsstring>(const SG::IConstAuxStore *store)</argsstring>
        <name>setConstStore</name>
        <param>
          <type>const <ref refid="d3/dd5/classSG_1_1IConstAuxStore" kindref="compound">SG::IConstAuxStore</ref> *</type>
          <declname>store</declname>
        </param>
        <briefdescription>
<para>Synonym for <computeroutput>setStore</computeroutput> with <computeroutput><ref refid="d3/dd5/classSG_1_1IConstAuxStore" kindref="compound">IConstAuxStore</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>store</parametername>
</parameternamelist>
<parameterdescription>
<para>The new store. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="179" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.icc" bodystart="28" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1a4786cd7b376a4a33d840715f44b3d01f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SG::AuxVectorBase::setNonConstStore</definition>
        <argsstring>(SG::IAuxStore *store)</argsstring>
        <name>setNonConstStore</name>
        <param>
          <type><ref refid="dc/d05/classSG_1_1IAuxStore" kindref="compound">SG::IAuxStore</ref> *</type>
          <declname>store</declname>
        </param>
        <briefdescription>
<para>Synonym for <computeroutput>setStore</computeroutput> with <computeroutput><ref refid="dc/d05/classSG_1_1IAuxStore" kindref="compound">IAuxStore</ref></computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>store</parametername>
</parameternamelist>
<parameterdescription>
<para>The new store. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="186" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.icc" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1acb5fc1c8f606bd9fe52610b48ebb4c34" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>size_t</type>
        <definition>virtual size_t SG::AuxVectorBase::size_v</definition>
        <argsstring>() const </argsstring>
        <name>size_v</name>
        <reimplements refid="db/dd6/classSG_1_1AuxVectorData_1a72f56c76a3c92d48d8364723c0161af3">size_v</reimplements>
        <reimplementedby refid="d1/daa/classmyvec2_1ace96982b38e658c8d586e715608ecdad">size_v</reimplementedby>
        <reimplementedby refid="d8/db3/classSG_1_1AuxVectorBase__test_1a1d585341390c46dcdfe0b257af171858">size_v</reimplementedby>
        <reimplementedby refid="d0/d91/classDataVector_3_01T_00_01DataModel__detail_1_1NoBase_01_4_1a258f5c8833dc8e1d659960784c468f25">size_v</reimplementedby>
        <briefdescription>
<para>Return the size of the container. </para>        </briefdescription>
        <detaileddescription>
<para>This is used when we need to create a new aux data vector. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxElement_test.cxx" line="31" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxElement_test.cxx" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1ad2ff11b7c4c2099a845990132dd76e4f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>size_t</type>
        <definition>virtual size_t SG::AuxVectorBase::capacity_v</definition>
        <argsstring>() const </argsstring>
        <name>capacity_v</name>
        <reimplements refid="db/dd6/classSG_1_1AuxVectorData_1aa05239b04a4e91b0bcc8da201f2cccaa">capacity_v</reimplements>
        <reimplementedby refid="d1/daa/classmyvec2_1a552da2700707da09ee2441da8dac3a09">capacity_v</reimplementedby>
        <reimplementedby refid="d8/db3/classSG_1_1AuxVectorBase__test_1a8fc5d6bb424ff267020798b274a1c24b">capacity_v</reimplementedby>
        <reimplementedby refid="d0/d91/classDataVector_3_01T_00_01DataModel__detail_1_1NoBase_01_4_1a236a9f58b14de59ef54c5107dfcff5dc">capacity_v</reimplementedby>
        <briefdescription>
<para>Return the capacity of the container. </para>        </briefdescription>
        <detaileddescription>
<para>This is used when we need to create a new aux data vector. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxElement_test.cxx" line="32" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxElement_test.cxx" bodystart="32" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1a45f9a5425580e6317d3189486ffb8255" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SG::AuxVectorBase::set</definition>
        <argsstring>(SG::AuxElement &amp;b, size_t index)</argsstring>
        <name>set</name>
        <param>
          <type><ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound">SG::AuxElement</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxElement_test.cxx" line="36" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxElement_test.cxx" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1aca7905fe519f2d8012e951338e676534" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SG::AuxVectorBase::clear</definition>
        <argsstring>(SG::AuxElement &amp;b)</argsstring>
        <name>clear</name>
        <param>
          <type><ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound">SG::AuxElement</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxElement_test.cxx" line="40" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxElement_test.cxx" bodystart="39" bodyend="42"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1ae1de1c541f5642e2241a22c8d20fc9f5" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class DVL</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void SG::AuxVectorBase::initAuxVectorBase</definition>
        <argsstring>(SG::OwnershipPolicy ownPolicy, SG::IndexTrackingPolicy indexTrackingPolicy)</argsstring>
        <name>initAuxVectorBase</name>
        <param>
          <type><ref refid="dd/d59/namespaceSG_1acd9d1a31242c6243cc1c6fab0fbc7cd8" kindref="member">SG::OwnershipPolicy</ref></type>
          <declname>ownPolicy</declname>
        </param>
        <param>
          <type><ref refid="dd/d59/namespaceSG_1a9f3d699f65390b7f8baf54d9cd634573" kindref="member">SG::IndexTrackingPolicy</ref></type>
          <declname>indexTrackingPolicy</declname>
        </param>
        <briefdescription>
<para>Initialize index tracking mode. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ownPolicy</parametername>
</parameternamelist>
<parameterdescription>
<para>The container ownership policy. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>indexTrackingPolicy</parametername>
</parameternamelist>
<parameterdescription>
<para>The requested index tracking policy.</para></parameterdescription>
</parameteritem>
</parameterlist>
DVL should be the most-derived class for this container.</para><para>This handles the logic for setting the state of index tracking. If this container does not handle aux data, then index tracking is always off. Otherwise, it depends on the requested policies. In any case, it is an error to turn off index tracking for a container that has an associated aux store. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="205" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.icc" bodystart="61" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1a1413cec813bba2f0cba00cd3136e7131" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SG::AuxVectorBase::swap</definition>
        <argsstring>(AuxVectorBase &amp;other)</argsstring>
        <name>swap</name>
        <reimplements refid="db/dd6/classSG_1_1AuxVectorData_1aea4d64e4a85beda13d1243ece5d210e2">swap</reimplements>
        <param>
          <type><ref refid="dd/da5/classSG_1_1AuxVectorBase" kindref="compound">AuxVectorBase</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Swap with another container. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The container with which to swap. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="212" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.icc" bodystart="77" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1a235d711b1dc6ccd3147d1e55b6d9b2a9" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ForwardIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void SG::AuxVectorBase::setIndices</definition>
        <argsstring>(ForwardIterator beg, ForwardIterator end, size_t first=0)</argsstring>
        <name>setIndices</name>
        <param>
          <type>ForwardIterator</type>
          <declname>beg</declname>
        </param>
        <param>
          <type>ForwardIterator</type>
          <declname>end</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>first</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Set container/index for all elements within a range. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>beg</parametername>
</parameternamelist>
<parameterdescription>
<para>Beginning of the range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>End of the range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first</parametername>
</parameternamelist>
<parameterdescription>
<para>Index to set for the first element in the range.</para></parameterdescription>
</parameteritem>
</parameterlist>
For all elements in the range, the container will be set to this container, and indices will be set sequentially, starting with <computeroutput>first</computeroutput>.</para><para><computeroutput>ForwardIterator</computeroutput> should be an iterator over the <computeroutput><ref refid="d0/d4d/classDataVector" kindref="compound">DataVector</ref></computeroutput> (not a base iterator). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="230" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.icc" bodystart="98" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1adb19fc133c31c74e245d65646e8e99a6" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ForwardIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void SG::AuxVectorBase::clearIndex</definition>
        <argsstring>(ForwardIterator elt)</argsstring>
        <name>clearIndex</name>
        <param>
          <type>ForwardIterator</type>
          <declname>elt</declname>
        </param>
        <briefdescription>
<para>Clear the container / index for element <computeroutput>elt</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elt</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator to the element to clear.</para></parameterdescription>
</parameteritem>
</parameterlist>
<computeroutput>ForwardIterator</computeroutput> should be an iterator over the <computeroutput><ref refid="d0/d4d/classDataVector" kindref="compound">DataVector</ref></computeroutput> (not a base iterator). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="241" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.icc" bodystart="166" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1aea8774b45a413ba19af7709a03d80278" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ForwardIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void SG::AuxVectorBase::clearIndices</definition>
        <argsstring>(ForwardIterator beg, ForwardIterator end)</argsstring>
        <name>clearIndices</name>
        <param>
          <type>ForwardIterator</type>
          <declname>beg</declname>
        </param>
        <param>
          <type>ForwardIterator</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Clear the container / index for a range of elements. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>beg</parametername>
</parameternamelist>
<parameterdescription>
<para>Beginning of the range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>End of the range.</para></parameterdescription>
</parameteritem>
</parameterlist>
<computeroutput>ForwardIterator</computeroutput> should be an iterator over the <computeroutput><ref refid="d0/d4d/classDataVector" kindref="compound">DataVector</ref></computeroutput> (not a base iterator). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="253" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.icc" bodystart="218" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1aab61a29d68cb3876b1e6a5f06b8320e2" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class DVL</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void SG::AuxVectorBase::resize</definition>
        <argsstring>(size_t size)</argsstring>
        <name>resize</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Resize the aux data associated with this container. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The new container size.</para></parameterdescription>
</parameteritem>
</parameterlist>
DVL should be the most-derived class for this container. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="263" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.icc" bodystart="275" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1ad2c7feb935ffe7cfc1b3a80d9ad4b414" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class DVL</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void SG::AuxVectorBase::reserve</definition>
        <argsstring>(size_t size)</argsstring>
        <name>reserve</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Change the capacity of the aux data associated with this container. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The new container size.</para></parameterdescription>
</parameteritem>
</parameterlist>
DVL should be the most-derived class for this container. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="273" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.icc" bodystart="305" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1a1b5a71b56431f1010d8cdb846dd35bfa" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class DVL</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void SG::AuxVectorBase::shift</definition>
        <argsstring>(DVL &amp;cont, size_t pos, ptrdiff_t offs)</argsstring>
        <name>shift</name>
        <param>
          <type>DVL &amp;</type>
          <declname>cont</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>ptrdiff_t</type>
          <declname>offs</declname>
        </param>
        <briefdescription>
<para>Shift the elements of the container. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cont</parametername>
</parameternamelist>
<parameterdescription>
<para>The container that&apos;s being shifted. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting index for the shift. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offs</parametername>
</parameternamelist>
<parameterdescription>
<para>The (signed) amount of the shift.</para></parameterdescription>
</parameteritem>
</parameterlist>
The container should be the derived container. The elements in the container should have already been shifted; this operation will then adjust the element indices and also shift the elements in the vectors for all aux data items. <computeroutput>offs</computeroutput> may be either positive or negative.</para><para>If <computeroutput>offs</computeroutput> is positive, then the container is growing. The container size should be increased by <computeroutput>offs</computeroutput>, the element at <computeroutput>pos</computeroutput> moved to <computeroutput>pos</computeroutput> + <computeroutput>offs</computeroutput>, and similarly for following elements. The elements between <computeroutput>pos</computeroutput> and <computeroutput>pos</computeroutput> + <computeroutput>offs</computeroutput> should be default-initialized.</para><para>If <computeroutput>offs</computeroutput> is negative, then the container is shrinking. The element at <computeroutput>pos</computeroutput> should be moved to <computeroutput>pos</computeroutput> + <computeroutput>offs</computeroutput>, and similarly for following elements. The container should then be shrunk by <computeroutput>-offs</computeroutput> elements (running destructors as appropriate). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="302" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.icc" bodystart="353" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1ad4be9ca08792014774acdd5218bd27a0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SG::AuxVectorBase::moveAux</definition>
        <argsstring>(size_t index, SG::AuxElement *p, bool clear=false)</argsstring>
        <name>moveAux</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound">SG::AuxElement</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>clear</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Set index on an element and copy auxiliary data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Container index at which the new element is being added. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>The new element being added. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clear</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, then any auxiliary data initially associated with <computeroutput>p</computeroutput> are cleared after being copied.</para></parameterdescription>
</parameteritem>
</parameterlist>
Element <computeroutput>p</computeroutput> is being added to the container at <computeroutput>index</computeroutput>. If <computeroutput>p</computeroutput> has associated auxiliary data, copy it to the container at <computeroutput>index</computeroutput>. Then set the container / index on <computeroutput>p</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="316" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/AuxVectorBase.cxx" bodystart="215" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1a8f4139a7242cdcce76a9cbff3bfd9ca2" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SG::AuxVectorBase::moveAux</definition>
        <argsstring>(size_t index, const void *p, bool clear=false)</argsstring>
        <name>moveAux</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>clear</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Set index on an element and copy auxiliary data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Container index at which the new element is being added. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>The new element being added. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clear</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, then any auxiliary data initially associated with <computeroutput>p</computeroutput> are cleared after being copied.</para></parameterdescription>
</parameteritem>
</parameterlist>
Overload for the no-auxdata case. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="328" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.icc" bodystart="444" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1a84fdf68a4d13674c4ff8da2534e98251" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ForwardIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void SG::AuxVectorBase::moveAux</definition>
        <argsstring>(size_t index, ForwardIterator beg, ForwardIterator end)</argsstring>
        <name>moveAux</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>ForwardIterator</type>
          <declname>beg</declname>
        </param>
        <param>
          <type>ForwardIterator</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Set index on a range of elements and copy auxiliary data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Container index at which the first new element is being added. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>beg</parametername>
</parameternamelist>
<parameterdescription>
<para>The start of the range of new elements. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>The end of the range of new elements.</para></parameterdescription>
</parameteritem>
</parameterlist>
The elements in the range are being a added to the container at <computeroutput>index</computeroutput>. If the new elements have associated auxiliary data, copy it to the container starting at <computeroutput>index</computeroutput>. Then set the container / index on the elements in the range.</para><para><computeroutput>ForwardIterator</computeroutput> should be an iterator over the <computeroutput><ref refid="d0/d4d/classDataVector" kindref="compound">DataVector</ref></computeroutput> (not a base iterator). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="346" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.icc" bodystart="468" bodyend="475"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1a3105544a00e10c72e45ca7367bb43e87" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SG::AuxVectorBase::swapElementsAux</definition>
        <argsstring>(size_t aindex, size_t bindex, SG::AuxElement *a, SG::AuxElement *b, AuxVectorBase *bcont)</argsstring>
        <name>swapElementsAux</name>
        <param>
          <type>size_t</type>
          <declname>aindex</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bindex</declname>
        </param>
        <param>
          <type><ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound">SG::AuxElement</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound">SG::AuxElement</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="dd/da5/classSG_1_1AuxVectorBase" kindref="compound">AuxVectorBase</ref> *</type>
          <declname>bcont</declname>
        </param>
        <briefdescription>
<para>Swap indices and auxiliary data between two elements. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aindex</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the first element, in this container. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bindex</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the second element, in <computeroutput>bcont</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the first element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the second element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bcont</parametername>
</parameternamelist>
<parameterdescription>
<para>Container holding the second element. (May be the same as this, but doesn&apos;t have to be.)</para></parameterdescription>
</parameteritem>
</parameterlist>
Elements <computeroutput>a</computeroutput> at <computeroutput>aindex</computeroutput> in <computeroutput>this</computeroutput> and <computeroutput>b</computeroutput> at <computeroutput>bindex</computeroutput> in <computeroutput>bcont</computeroutput> are being swapped. Swap the index / container references between the elements and also swap the auxiliary data if it exists. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="366" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/AuxVectorBase.cxx" bodystart="246" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1a3e040f5014d7e5f77bfa8a1ae866dddc" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SG::AuxVectorBase::swapElementsAux</definition>
        <argsstring>(size_t aindex, size_t bindex, const void *a, const void *b, AuxVectorBase *bcont)</argsstring>
        <name>swapElementsAux</name>
        <param>
          <type>size_t</type>
          <declname>aindex</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bindex</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="dd/da5/classSG_1_1AuxVectorBase" kindref="compound">AuxVectorBase</ref> *</type>
          <declname>bcont</declname>
        </param>
        <briefdescription>
<para>Swap indices and auxiliary data between two elements. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aindex</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the first element, in this container. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bindex</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the second element, in <computeroutput>bcont</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the first element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the second element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bcont</parametername>
</parameternamelist>
<parameterdescription>
<para>Container holding the second element. (May be the same as this, but doesn&apos;t have to be.)</para></parameterdescription>
</parameteritem>
</parameterlist>
This is the no-auxdata case; it is a no-op except for checking <computeroutput>m_trackIndices</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="385" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.icc" bodystart="540" bodyend="547"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1a2513e17b33c0b9715553416e19e23810" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ForwardIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void SG::AuxVectorBase::resortAux</definition>
        <argsstring>(size_t index, ForwardIterator beg, ForwardIterator end)</argsstring>
        <name>resortAux</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>ForwardIterator</type>
          <declname>beg</declname>
        </param>
        <param>
          <type>ForwardIterator</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Reset indices / reorder aux data after elements have been permuted. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index in the container of the start of the range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>beg</parametername>
</parameternamelist>
<parameterdescription>
<para>Start of the range of elements to process. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>End of the range of elements to process.</para></parameterdescription>
</parameteritem>
</parameterlist>
Call this after some operation that has permuted the elements in the container (such as sort). The index information in the elements will be used to permute all auxiliary data in the same way. Finally, all the indices will be reset in the correct order.</para><para><computeroutput>ForwardIterator</computeroutput> should be an iterator over the <computeroutput><ref refid="d0/d4d/classDataVector" kindref="compound">DataVector</ref></computeroutput> (not a base iterator). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="405" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.icc" bodystart="566" bodyend="581"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1a1309418763800c1d33014722886b926a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SG::AuxVectorBase::initAuxVectorBase1</definition>
        <argsstring>(const SG_STD_OR_BOOST::false_type &amp;, SG::OwnershipPolicy, SG::IndexTrackingPolicy)</argsstring>
        <name>initAuxVectorBase1</name>
        <param>
          <type>const SG_STD_OR_BOOST::false_type &amp;</type>
        </param>
        <param>
          <type><ref refid="dd/d59/namespaceSG_1acd9d1a31242c6243cc1c6fab0fbc7cd8" kindref="member">SG::OwnershipPolicy</ref></type>
        </param>
        <param>
          <type><ref refid="dd/d59/namespaceSG_1a9f3d699f65390b7f8baf54d9cd634573" kindref="member">SG::IndexTrackingPolicy</ref></type>
        </param>
        <briefdescription>
<para>Initialize index tracking mode --- no-auxdata specialization. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ownPolicy</parametername>
</parameternamelist>
<parameterdescription>
<para>The container ownership policy. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>indexTrackingPolicy</parametername>
</parameternamelist>
<parameterdescription>
<para>The requested index tracking policy.</para></parameterdescription>
</parameteritem>
</parameterlist>
Since this is the no-auxdata case, it always sets index tracking to false. An exception is raised if the container has an associated store (but that should never actually happen). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="420" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/AuxVectorBase.cxx" bodystart="131" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1acd23219b2d0bd46bb5bc168182dabd7a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SG::AuxVectorBase::initAuxVectorBase1</definition>
        <argsstring>(const SG_STD_OR_BOOST::true_type &amp;, SG::OwnershipPolicy ownPolicy, SG::IndexTrackingPolicy indexTrackingPolicy)</argsstring>
        <name>initAuxVectorBase1</name>
        <param>
          <type>const SG_STD_OR_BOOST::true_type &amp;</type>
        </param>
        <param>
          <type><ref refid="dd/d59/namespaceSG_1acd9d1a31242c6243cc1c6fab0fbc7cd8" kindref="member">SG::OwnershipPolicy</ref></type>
          <declname>ownPolicy</declname>
        </param>
        <param>
          <type><ref refid="dd/d59/namespaceSG_1a9f3d699f65390b7f8baf54d9cd634573" kindref="member">SG::IndexTrackingPolicy</ref></type>
          <declname>indexTrackingPolicy</declname>
        </param>
        <briefdescription>
<para>Initialize index tracking mode --- auxdata specialization. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ownPolicy</parametername>
</parameternamelist>
<parameterdescription>
<para>The container ownership policy. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>indexTrackingPolicy</parametername>
</parameternamelist>
<parameterdescription>
<para>The requested index tracking policy.</para></parameterdescription>
</parameteritem>
</parameterlist>
Sets index tracking based on the requested policies. An exception is raised if index tracking is disabled and the container has an associated store. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="434" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/AuxVectorBase.cxx" bodystart="151" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1a239fc4585cdab218833425d7683e2e2b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ForwardIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void SG::AuxVectorBase::setIndices1</definition>
        <argsstring>(const SG_STD_OR_BOOST::false_type &amp;, ForwardIterator beg, ForwardIterator end, size_t first)</argsstring>
        <name>setIndices1</name>
        <param>
          <type>const SG_STD_OR_BOOST::false_type &amp;</type>
        </param>
        <param>
          <type>ForwardIterator</type>
          <declname>beg</declname>
        </param>
        <param>
          <type>ForwardIterator</type>
          <declname>end</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>first</declname>
        </param>
        <briefdescription>
<para>Set container/index for all elements within a range. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>beg</parametername>
</parameternamelist>
<parameterdescription>
<para>Beginning of the range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>End of the range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first</parametername>
</parameternamelist>
<parameterdescription>
<para>Index to set for the first element in the range.</para></parameterdescription>
</parameteritem>
</parameterlist>
This is the no-auxdata case; doesn&apos;t do anything other than checking <computeroutput>m_trackIndices</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="450" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.icc" bodystart="121" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1a3113b1c7ee5777b44b8d1792570b28fb" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ForwardIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void SG::AuxVectorBase::setIndices1</definition>
        <argsstring>(const SG_STD_OR_BOOST::true_type &amp;, ForwardIterator beg, ForwardIterator end, size_t first)</argsstring>
        <name>setIndices1</name>
        <param>
          <type>const SG_STD_OR_BOOST::true_type &amp;</type>
        </param>
        <param>
          <type>ForwardIterator</type>
          <declname>beg</declname>
        </param>
        <param>
          <type>ForwardIterator</type>
          <declname>end</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>first</declname>
        </param>
        <briefdescription>
<para>Set container/index for all elements within a range. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>beg</parametername>
</parameternamelist>
<parameterdescription>
<para>Beginning of the range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>End of the range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first</parametername>
</parameternamelist>
<parameterdescription>
<para>Index to set for the first element in the range.</para></parameterdescription>
</parameteritem>
</parameterlist>
This is the auxdata case. For all elements in the range, the container will be set to this container, and indices will be set sequentially, starting with <computeroutput>first</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="467" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.icc" bodystart="141" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1abe2262687d7bf2aa92ae7a1bb694f583" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ForwardIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void SG::AuxVectorBase::clearIndex1</definition>
        <argsstring>(const SG_STD_OR_BOOST::false_type &amp;, ForwardIterator elt)</argsstring>
        <name>clearIndex1</name>
        <param>
          <type>const SG_STD_OR_BOOST::false_type &amp;</type>
        </param>
        <param>
          <type>ForwardIterator</type>
          <declname>elt</declname>
        </param>
        <briefdescription>
<para>Clear the container / index for element <computeroutput>elt</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elt</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator to the element to clear.</para></parameterdescription>
</parameteritem>
</parameterlist>
This is the no-auxdata case; doesn&apos;t do anything other than checking <computeroutput>m_trackIndices</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="478" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.icc" bodystart="184" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1a93919830abd9e9bfa790c873e8bca6ac" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ForwardIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void SG::AuxVectorBase::clearIndex1</definition>
        <argsstring>(const SG_STD_OR_BOOST::true_type &amp;, ForwardIterator elt)</argsstring>
        <name>clearIndex1</name>
        <param>
          <type>const SG_STD_OR_BOOST::true_type &amp;</type>
        </param>
        <param>
          <type>ForwardIterator</type>
          <declname>elt</declname>
        </param>
        <briefdescription>
<para>Clear the container / index for element <computeroutput>elt</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elt</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator to the element to clear.</para></parameterdescription>
</parameteritem>
</parameterlist>
This is the auxdata case. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="488" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.icc" bodystart="198" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1a9cc9805e230b8f70318ff390fbd4c843" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ForwardIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void SG::AuxVectorBase::clearIndices1</definition>
        <argsstring>(const SG_STD_OR_BOOST::false_type &amp;, ForwardIterator, ForwardIterator)</argsstring>
        <name>clearIndices1</name>
        <param>
          <type>const SG_STD_OR_BOOST::false_type &amp;</type>
        </param>
        <param>
          <type>ForwardIterator</type>
        </param>
        <param>
          <type>ForwardIterator</type>
        </param>
        <briefdescription>
<para>Clear the container / index for a range of elements. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>beg</parametername>
</parameternamelist>
<parameterdescription>
<para>Beginning of the range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>End of the range.</para></parameterdescription>
</parameteritem>
</parameterlist>
No-auxdata case; a no-op except for checking <computeroutput>m_trackIndices</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="501" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.icc" bodystart="238" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1a0d458f1aa45ccacaca17fb3226b42730" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ForwardIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void SG::AuxVectorBase::clearIndices1</definition>
        <argsstring>(const SG_STD_OR_BOOST::true_type &amp;, ForwardIterator beg, ForwardIterator end)</argsstring>
        <name>clearIndices1</name>
        <param>
          <type>const SG_STD_OR_BOOST::true_type &amp;</type>
        </param>
        <param>
          <type>ForwardIterator</type>
          <declname>beg</declname>
        </param>
        <param>
          <type>ForwardIterator</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Clear the container / index for a range of elements. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>beg</parametername>
</parameternamelist>
<parameterdescription>
<para>Beginning of the range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>End of the range.</para></parameterdescription>
</parameteritem>
</parameterlist>
Auxdata case. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="514" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.icc" bodystart="254" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1a0a1056c88e33b1a63b077c46c0a1a84e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SG::AuxVectorBase::resize1</definition>
        <argsstring>(const SG_STD_OR_BOOST::false_type &amp;, size_t size)</argsstring>
        <name>resize1</name>
        <param>
          <type>const SG_STD_OR_BOOST::false_type &amp;</type>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Resize the aux data associated with this container. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The new container size.</para></parameterdescription>
</parameteritem>
</parameterlist>
The no-auxdata case; a no-op except for checking <computeroutput>m_trackIndices</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="524" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.icc" bodystart="291" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1a4370c132febae39aee13ba57c18678c9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SG::AuxVectorBase::resize1</definition>
        <argsstring>(const SG_STD_OR_BOOST::true_type &amp;, size_t size)</argsstring>
        <name>resize1</name>
        <param>
          <type>const SG_STD_OR_BOOST::true_type &amp;</type>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Resize the aux data associated with this container. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The new container size.</para></parameterdescription>
</parameteritem>
</parameterlist>
The auxdata case. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="533" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/AuxVectorBase.cxx" bodystart="175" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1aeaa538f01b429ed555ec21ab36183885" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SG::AuxVectorBase::reserve1</definition>
        <argsstring>(const SG_STD_OR_BOOST::false_type &amp;, size_t size)</argsstring>
        <name>reserve1</name>
        <param>
          <type>const SG_STD_OR_BOOST::false_type &amp;</type>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Change the capacity of the aux data associated with this container. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The new container size.</para></parameterdescription>
</parameteritem>
</parameterlist>
The no-auxdata case; a no-op except for checking <computeroutput>m_trackIndices</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="542" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.icc" bodystart="320" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1a7228d4dbf01d265d1a70b2936ff9e21a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SG::AuxVectorBase::reserve1</definition>
        <argsstring>(const SG_STD_OR_BOOST::true_type &amp;, size_t size)</argsstring>
        <name>reserve1</name>
        <param>
          <type>const SG_STD_OR_BOOST::true_type &amp;</type>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Change the capacity of the aux data associated with this container. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The new container size.</para></parameterdescription>
</parameteritem>
</parameterlist>
The auxdata case. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="551" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/AuxVectorBase.cxx" bodystart="192" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1aef423f6db9a1208109a104aad8cf2b4f" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class DVL</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void SG::AuxVectorBase::shift1</definition>
        <argsstring>(const SG_STD_OR_BOOST::false_type &amp;, DVL &amp;cont, size_t pos, ptrdiff_t offs)</argsstring>
        <name>shift1</name>
        <param>
          <type>const SG_STD_OR_BOOST::false_type &amp;</type>
        </param>
        <param>
          <type>DVL &amp;</type>
          <declname>cont</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>ptrdiff_t</type>
          <declname>offs</declname>
        </param>
        <briefdescription>
<para>Shift the elements of the container. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cont</parametername>
</parameternamelist>
<parameterdescription>
<para>The container that&apos;s being shifted. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting index for the shift. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offs</parametername>
</parameternamelist>
<parameterdescription>
<para>The (signed) amount of the shift.</para></parameterdescription>
</parameteritem>
</parameterlist>
No-auxdata version; a no-op except for checking <computeroutput>m_trackIndices</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="564" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.icc" bodystart="374" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1a6668b4dd9e534b6323517105bb7a00a0" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class DVL</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void SG::AuxVectorBase::shift1</definition>
        <argsstring>(const SG_STD_OR_BOOST::true_type &amp;, DVL &amp;cont, size_t pos, ptrdiff_t offs)</argsstring>
        <name>shift1</name>
        <param>
          <type>const SG_STD_OR_BOOST::true_type &amp;</type>
        </param>
        <param>
          <type>DVL &amp;</type>
          <declname>cont</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>ptrdiff_t</type>
          <declname>offs</declname>
        </param>
        <briefdescription>
<para>Shift the elements of the container. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cont</parametername>
</parameternamelist>
<parameterdescription>
<para>The container that&apos;s being shifted. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting index for the shift. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offs</parametername>
</parameternamelist>
<parameterdescription>
<para>The (signed) amount of the shift.</para></parameterdescription>
</parameteritem>
</parameterlist>
Auxdata version.</para><para>The container should be the derived container. The elements in the container should have already been shifted; this operation will then adjust the element indices and also shift the elements in the vectors for all aux data items. <computeroutput>offs</computeroutput> may be either positive or negative.</para><para>If <computeroutput>offs</computeroutput> is positive, then the container is growing. The container size should be increased by <computeroutput>offs</computeroutput>, the element at <computeroutput>pos</computeroutput> moved to <computeroutput>pos</computeroutput> + <computeroutput>offs</computeroutput>, and similarly for following elements. The elements between <computeroutput>pos</computeroutput> and <computeroutput>pos</computeroutput> + <computeroutput>offs</computeroutput> should be default-initialized.</para><para>If <computeroutput>offs</computeroutput> is negative, then the container is shrinking. The element at <computeroutput>pos</computeroutput> should be moved to <computeroutput>pos</computeroutput> + <computeroutput>offs</computeroutput>, and similarly for following elements. The container should then be shrunk by <computeroutput>-offs</computeroutput> elements (running destructors as appropriate). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="596" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.icc" bodystart="410" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1a09975c7cd091fb26d842921ba0fb1636" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ForwardIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void SG::AuxVectorBase::moveAux1</definition>
        <argsstring>(const SG_STD_OR_BOOST::false_type &amp;, size_t index, ForwardIterator beg, ForwardIterator end)</argsstring>
        <name>moveAux1</name>
        <param>
          <type>const SG_STD_OR_BOOST::false_type &amp;</type>
        </param>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>ForwardIterator</type>
          <declname>beg</declname>
        </param>
        <param>
          <type>ForwardIterator</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Set index on a range of elements and copy auxiliary data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Container index at which the first new element is being added. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>beg</parametername>
</parameternamelist>
<parameterdescription>
<para>The start of the range of new elements. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>The end of the range of new elements.</para></parameterdescription>
</parameteritem>
</parameterlist>
No-auxdata version; a no-op except for checking <computeroutput>m_trackIndices</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="611" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.icc" bodystart="488" bodyend="494"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1a74126f0323e5a5246b06588430daa4e3" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ForwardIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void SG::AuxVectorBase::moveAux1</definition>
        <argsstring>(const SG_STD_OR_BOOST::true_type &amp;, size_t index, ForwardIterator beg, ForwardIterator end)</argsstring>
        <name>moveAux1</name>
        <param>
          <type>const SG_STD_OR_BOOST::true_type &amp;</type>
        </param>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>ForwardIterator</type>
          <declname>beg</declname>
        </param>
        <param>
          <type>ForwardIterator</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Set index on a range of elements and copy auxiliary data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Container index at which the first new element is being added. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>beg</parametername>
</parameternamelist>
<parameterdescription>
<para>The start of the range of new elements. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>The end of the range of new elements.</para></parameterdescription>
</parameteritem>
</parameterlist>
The elements in the range are being a added to the container at <computeroutput>index</computeroutput>. If the new elements have associated auxiliary data, copy it to the container starting at <computeroutput>index</computeroutput>. Then set the container / index on the elements in the range.</para><para>The auxdata case. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="631" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.icc" bodystart="511" bodyend="524"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1a6634fd06f1c20dd3fa037cd396e8eaf1" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ForwardIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void SG::AuxVectorBase::resortAux1</definition>
        <argsstring>(const SG_STD_OR_BOOST::false_type &amp;, size_t index, ForwardIterator beg, ForwardIterator end)</argsstring>
        <name>resortAux1</name>
        <param>
          <type>const SG_STD_OR_BOOST::false_type &amp;</type>
        </param>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>ForwardIterator</type>
          <declname>beg</declname>
        </param>
        <param>
          <type>ForwardIterator</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Reset indices / reorder aux data after elements have been permuted. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index in the container of the start of the range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>beg</parametername>
</parameternamelist>
<parameterdescription>
<para>Start of the range of elements to process. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>End of the range of elements to process.</para></parameterdescription>
</parameteritem>
</parameterlist>
No-auxdata version; a no-op except for checking <computeroutput>m_trackIndices</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="646" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.icc" bodystart="594" bodyend="600"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1a9c40d77971b24824656775a2b96a9c84" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ForwardIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void SG::AuxVectorBase::resortAux1</definition>
        <argsstring>(const SG_STD_OR_BOOST::true_type &amp;, size_t index, ForwardIterator a, ForwardIterator b)</argsstring>
        <name>resortAux1</name>
        <param>
          <type>const SG_STD_OR_BOOST::true_type &amp;</type>
        </param>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>ForwardIterator</type>
          <declname>a</declname>
          <defname>beg</defname>
        </param>
        <param>
          <type>ForwardIterator</type>
          <declname>b</declname>
          <defname>end</defname>
        </param>
        <briefdescription>
<para>Reset indices / reorder aux data after elements have been permuted. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index in the container of the start of the range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>beg</parametername>
</parameternamelist>
<parameterdescription>
<para>Start of the range of elements to process. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>End of the range of elements to process.</para></parameterdescription>
</parameteritem>
</parameterlist>
Call this after some operation that has permuted the elements in the container (such as sort). The index information in the elements will be used to permute all auxiliary data in the same way. Finally, all the indices will be reset in the correct order.</para><para>The auxdata case. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="666" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.icc" bodystart="617" bodyend="634"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1a232e1835c25d066fe6a0679480562845" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>void * SG::AuxVectorBase::getDataArrayForResort</definition>
        <argsstring>(SG::auxid_t auxid)</argsstring>
        <name>getDataArrayForResort</name>
        <param>
          <type><ref refid="dd/d59/namespaceSG_1affee481ab18822e03866e0a0d3ff011c" kindref="member">SG::auxid_t</ref></type>
          <declname>auxid</declname>
        </param>
        <briefdescription>
<para>Helper to call <computeroutput>getDataArray</computeroutput> from <computeroutput>ResortAuxHelper</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="692" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.icc" bodystart="639" bodyend="642"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1a36634418d4b0b90570a5061cc94c72b7" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SG::AuxVectorBase::setIndexForResort</definition>
        <argsstring>(SG::AuxElement *elt, size_t idx)</argsstring>
        <name>setIndexForResort</name>
        <param>
          <type><ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound">SG::AuxElement</ref> *</type>
          <declname>elt</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Helper to call <computeroutput>setIndex</computeroutput> from <computeroutput>ResortAuxHelper</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="693" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.icc" bodystart="647" bodyend="650"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1aa0810c0540a48be720716518fa9f9c39" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void SG::AuxVectorBase::clearAux</definition>
        <argsstring>(SG::AuxElement &amp;b)</argsstring>
        <name>clearAux</name>
        <reimplementedby refid="d8/db3/classSG_1_1AuxVectorBase__test_1a1356e71115e2563e998aeea24c54ede8">clearAux</reimplementedby>
        <param>
          <type><ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound">SG::AuxElement</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxElement_test.cxx" line="46" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxElement_test.cxx" bodystart="45" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1ae961051e347e4d520be27f154d5044ac" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void SG::AuxVectorBase::copyAux</definition>
        <argsstring>(SG::AuxElement &amp;a, const SG::AuxElement &amp;b)</argsstring>
        <name>copyAux</name>
        <reimplementedby refid="d8/db3/classSG_1_1AuxVectorBase__test_1a0b10b58058134cec708f93d2556e6040">copyAux</reimplementedby>
        <param>
          <type><ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound">SG::AuxElement</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound">SG::AuxElement</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxElement_test.cxx" line="52" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxElement_test.cxx" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="dd/da5/classSG_1_1AuxVectorBase_1a020691f1fec82068a5a2aecc662a40bf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void SG::AuxVectorBase::testAuxElementCtor</definition>
        <argsstring>(SG::AuxVectorData *container, size_t index)</argsstring>
        <name>testAuxElementCtor</name>
        <param>
          <type><ref refid="db/dd6/classSG_1_1AuxVectorData" kindref="compound">SG::AuxVectorData</ref> *</type>
          <declname>container</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxElement_test.cxx" line="59" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/test/AuxElement_test.cxx" bodystart="57" bodyend="63"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Manage index tracking and synchronization of auxiliary data. </para>    </briefdescription>
    <detaileddescription>
<para>An object, usually a <computeroutput><ref refid="d0/d4d/classDataVector" kindref="compound">DataVector</ref></computeroutput>, can have vectors of auxiliary data associated with it. In order to be able to find the auxiliary data for a given container element, the elements must hold their indices within the container (done by the <computeroutput><ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound">AuxElement</ref></computeroutput> class).</para><para>When the container changes, this information must be updated. Indices need to be changed, and corresponding changes need to be made in the vectors of associated auxiliary data. Most of the code in this class consists of helpers that effect these changes. These are intended to be called only by the deriving container class.</para><para>This class also contains a flag to control whether or not indices should be tracked like this. This is controlled by the type of the payload and by the selected ownership and indexing policies.</para><para>If the payload type does not derive from <computeroutput><ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound">SG::AuxElement</ref></computeroutput>, then no index tracking is possible, and the flag is always false.</para><para>Otherwise, it depends on the setting of the policies. The default value for the index tracking policy is DEFAULT_TRACK_INDICES. In that case, we track indices if this container owns its elements (OWN_ELEMENTS) and we don&apos;t if the container does not down its elements (VIEW_ELEMENTS). This is the usual case. However, the index tracking policy may also be set to ALWAYS_TRACK_INDICES or NEVER_TRACK_INDICES to override this. (The major foreseen use case for this is to allow index tracking for a view container populated with objects allocated from a <computeroutput>DataPool</computeroutput>.)</para><para>The derived container should initialize this class by calling <computeroutput>initAuxVectorBase</computeroutput>. The derived container class is passed as a template argument; the ownership and index tracking policies are also passed. This method can be called again if the policies change.</para><para>There are only a couple user-callable methods. The <computeroutput>trackIndices</computeroutput> method returns the current state of the index tracking flag. There are also wrappers for <computeroutput>setStore</computeroutput> method, which enforce the condition that one can&apos;t set a store for a container that does not do index tracking.</para><para>The remaining methods are intended to be called only from the derived container class (and thus they are declared as protected). Besides a <computeroutput>swap</computeroutput> method, these include</para><para><itemizedlist>
<listitem><para><computeroutput>setIndices</computeroutput>, to reset the indices within a range to sequential values.</para></listitem><listitem><para><computeroutput>clearIndex</computeroutput>, to clear the index / container for a single element.</para></listitem><listitem><para><computeroutput>clearIndices</computeroutput>, to clear the index / container for elements within a range.</para></listitem><listitem><para><computeroutput>resize</computeroutput>, to change the size of the aux data.</para></listitem><listitem><para><computeroutput>reserve</computeroutput>, to change the capacity of the aux data.</para></listitem><listitem><para><computeroutput>shift</computeroutput>, to shift a range of aux data up or down, to track insertions or deletions from within the container.</para></listitem><listitem><para><computeroutput>moveAux</computeroutput>, to be used when an element or range of elements is moved into the container.</para></listitem><listitem><para><computeroutput>swapElementsAux</computeroutput>, to swap aux data for two elements, possibly in different containers.</para></listitem><listitem><para><computeroutput>resortAux</computeroutput>, to rearrange indices and aux data correctly after an operation that permuted the elements of the container. </para></listitem></itemizedlist>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="1996">
        <label>SG::AuxVectorBase</label>
        <link refid="dd/da5/classSG_1_1AuxVectorBase"/>
        <childnode refid="1997" relation="public-inheritance">
        </childnode>
        <childnode refid="1997" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2000">
        <label>SG::AuxVectorBase_test</label>
        <link refid="d8/db3/classSG_1_1AuxVectorBase__test"/>
        <childnode refid="1996" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1998">
        <label>DataVector&lt; T, DataModel_detail::NoBase &gt;</label>
        <link refid="d0/d91/classDataVector_3_01T_00_01DataModel__detail_1_1NoBase_01_4"/>
        <childnode refid="1996" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1999">
        <label>myvec2</label>
        <link refid="d1/daa/classmyvec2"/>
        <childnode refid="1996" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1997">
        <label>SG::AuxVectorData</label>
        <link refid="db/dd6/classSG_1_1AuxVectorData"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2001">
        <label>SG::AuxVectorBase</label>
        <link refid="dd/da5/classSG_1_1AuxVectorBase"/>
        <childnode refid="2002" relation="public-inheritance">
        </childnode>
        <childnode refid="2002" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2012">
        <label>Internal::rehash_base&lt;Internal::prime_rehash_policy , hashtable&lt;Value , Value , Alloc , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="db/d2b/classInternal_1_1rehash__base"/>
      </node>
      <node id="2013">
        <label>Internal::hash_code_base&lt;Value , Value , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , cache_hash_code&gt;</label>
        <link refid="d0/d2e/classInternal_1_1hash__code__base"/>
      </node>
      <node id="2008">
        <label>xAOD::TVirtualEvent</label>
        <link refid="de/daf/classxAOD_1_1TVirtualEvent"/>
      </node>
      <node id="2011">
        <label>SG::hashtable&lt; Value, Value, Alloc, Internal::identity&lt; Value &gt;, Pred, Hash, Internal::mod_range_hashing, Internal::default_ranged_hash, Internal::prime_rehash_policy, cache_hash_code, true, true &gt;</label>
        <link refid="de/d63/classSG_1_1hashtable"/>
        <childnode refid="2012" relation="public-inheritance">
        </childnode>
        <childnode refid="2013" relation="public-inheritance">
        </childnode>
        <childnode refid="2014" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2006">
        <label>SelectNoInstance</label>
        <link refid="d9/dec/classSelectNoInstance"/>
      </node>
      <node id="2007">
        <label>DataLinkBase</label>
        <link refid="dd/d9d/classDataLinkBase"/>
      </node>
      <node id="2004">
        <label>SG::IConstAuxStore</label>
        <link refid="d3/dd5/classSG_1_1IConstAuxStore"/>
      </node>
      <node id="2005">
        <label>DataLink&lt; SG::IConstAuxStore &gt;</label>
        <link refid="da/da2/classDataLink"/>
        <childnode refid="2006" relation="public-inheritance">
        </childnode>
        <childnode refid="2007" relation="public-inheritance">
        </childnode>
        <childnode refid="2008" relation="usage">
          <edgelabel>m_event</edgelabel>
        </childnode>
        <childnode refid="2004" relation="usage">
          <edgelabel>m_object</edgelabel>
        </childnode>
      </node>
      <node id="2003">
        <label>SG::IAuxStore</label>
        <link refid="dc/d05/classSG_1_1IAuxStore"/>
        <childnode refid="2004" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2010">
        <label>SG::unordered_set&lt; Value, Hash, Pred, Alloc, cache_hash_code &gt;</label>
        <link refid="dd/dac/classSG_1_1unordered__set"/>
        <childnode refid="2011" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2014">
        <label>Internal::map_base&lt;Value , Value , Internal::identity&lt; Value &gt; , unique_keys, hashtable&lt;Value , Value , Alloc , Internal::identity&lt; Value &gt; , Pred , Hash , Internal::mod_range_hashing , Internal::default_ranged_hash , Internal::prime_rehash_policy , cache_hash_code, constant_iterators, unique_keys&gt; &gt;</label>
        <link refid="d1/d54/classInternal_1_1map__base"/>
      </node>
      <node id="2015">
        <label>SG::AuxVectorData::Cache</label>
        <childnode refid="2016" relation="usage">
          <edgelabel>m_cache</edgelabel>
        </childnode>
      </node>
      <node id="2009">
        <label>mutex</label>
      </node>
      <node id="2016">
        <label>void</label>
      </node>
      <node id="2002">
        <label>SG::AuxVectorData</label>
        <link refid="db/dd6/classSG_1_1AuxVectorData"/>
        <childnode refid="2003" relation="usage">
          <edgelabel>m_store</edgelabel>
        </childnode>
        <childnode refid="2005" relation="usage">
          <edgelabel>m_constStoreLink</edgelabel>
        </childnode>
        <childnode refid="2004" relation="usage">
          <edgelabel>m_constStore</edgelabel>
        </childnode>
        <childnode refid="2009" relation="usage">
          <edgelabel>m_mutex</edgelabel>
        </childnode>
        <childnode refid="2010" relation="usage">
          <edgelabel>s_emptySet</edgelabel>
        </childnode>
        <childnode refid="2015" relation="usage">
          <edgelabel>m_cache</edgelabel>
          <edgelabel>m_constCache</edgelabel>
          <edgelabel>m_decorCache</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" line="94" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/AthContainers/AuxVectorBase.h" bodystart="92" bodyend="699"/>
    <listofallmembers>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1a0393c7e87efbe788419774c662cba5a2" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>AuxVectorBase</name></member>
      <member refid="db/dd6/classSG_1_1AuxVectorData_1ac03d380d92722ca597c92da17ed08972" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>AuxVectorData</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1ad2ff11b7c4c2099a845990132dd76e4f" prot="public" virt="virtual"><scope>SG::AuxVectorBase</scope><name>capacity_v</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1aca7905fe519f2d8012e951338e676534" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>clear</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1aa0810c0540a48be720716518fa9f9c39" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>clearAux</name></member>
      <member refid="db/dd6/classSG_1_1AuxVectorData_1a5d6d9eefd8811b373b3eeda823e5c0ad" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>clearCache</name></member>
      <member refid="db/dd6/classSG_1_1AuxVectorData_1a35c86d28fd74648ddae868dc5fa005d2" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>clearDecorations</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1adb19fc133c31c74e245d65646e8e99a6" prot="protected" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>clearIndex</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1abe2262687d7bf2aa92ae7a1bb694f583" prot="private" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>clearIndex1</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1a93919830abd9e9bfa790c873e8bca6ac" prot="private" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>clearIndex1</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1aea8774b45a413ba19af7709a03d80278" prot="protected" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>clearIndices</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1a9cc9805e230b8f70318ff390fbd4c843" prot="private" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>clearIndices1</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1a0d458f1aa45ccacaca17fb3226b42730" prot="private" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>clearIndices1</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1ae961051e347e4d520be27f154d5044ac" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>copyAux</name></member>
      <member refid="db/dd6/classSG_1_1AuxVectorData_1abe342233ecc5416805b44a47db63815a" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>getAuxIDs</name></member>
      <member refid="db/dd6/classSG_1_1AuxVectorData_1a239b57ce5e7833bb83c8f0bf3b390814" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>getConstStore</name></member>
      <member refid="db/dd6/classSG_1_1AuxVectorData_1a6b6d4b6086f084692acf9529835b25e2" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>getData</name></member>
      <member refid="db/dd6/classSG_1_1AuxVectorData_1ae0345e56110a7ccefdb3b3e4dbc20f7a" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>getData</name></member>
      <member refid="db/dd6/classSG_1_1AuxVectorData_1ac60d418d024c0970f058e147b2e0ee6c" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>getDataArray</name></member>
      <member refid="db/dd6/classSG_1_1AuxVectorData_1a9d9f283f683d509706b255b47f80719f" prot="protected" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>getDataArray</name></member>
      <member refid="db/dd6/classSG_1_1AuxVectorData_1ae5ef17864033f73d8b7d4a516241a138" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>getDataArrayAllowMissing</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1a232e1835c25d066fe6a0679480562845" prot="private" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>getDataArrayForResort</name></member>
      <member refid="db/dd6/classSG_1_1AuxVectorData_1ac135f8f7454737b3640aaa05cc1d4a95" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>getDecoration</name></member>
      <member refid="db/dd6/classSG_1_1AuxVectorData_1a42670ce61a36909d86c7cda581c38535" prot="protected" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>getDecorationArray</name></member>
      <member refid="db/dd6/classSG_1_1AuxVectorData_1af1d8f5f0dd148fbf2041560f77ab0113" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>getStore</name></member>
      <member refid="db/dd6/classSG_1_1AuxVectorData_1a52d2ca97c7546abb52972902ff47a275" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>getWritableAuxIDs</name></member>
      <member refid="db/dd6/classSG_1_1AuxVectorData_1a97b5279b30e60d9b099cb6496404c1aa" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>hasNonConstStore</name></member>
      <member refid="db/dd6/classSG_1_1AuxVectorData_1a7ae11026ce063feb9b55456698ef2a4f" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>hasStore</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1ae1de1c541f5642e2241a22c8d20fc9f5" prot="protected" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>initAuxVectorBase</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1a1309418763800c1d33014722886b926a" prot="private" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>initAuxVectorBase1</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1acd23219b2d0bd46bb5bc168182dabd7a" prot="private" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>initAuxVectorBase1</name></member>
      <member refid="db/dd6/classSG_1_1AuxVectorData_1aff7bce34ddc38433ed057fab2b0e9280" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>isAvailable</name></member>
      <member refid="db/dd6/classSG_1_1AuxVectorData_1a920fb71ea0559e29aecfff38519c8947" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>isAvailable</name></member>
      <member refid="db/dd6/classSG_1_1AuxVectorData_1a02bd683426600b15e16ae9d7ba88b589" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>isAvailableWritable</name></member>
      <member refid="db/dd6/classSG_1_1AuxVectorData_1afd5160ac3f0febfdb253c9bc3609fbbe" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>isAvailableWritable</name></member>
      <member refid="db/dd6/classSG_1_1AuxVectorData_1a3f2136a2be890f5cf9e12b01342d50de" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>isAvailableWritableAsDecoration</name></member>
      <member refid="db/dd6/classSG_1_1AuxVectorData_1a101c4c4aabc8168d97421793265a32a0" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>isAvailableWritableAsDecoration</name></member>
      <member refid="db/dd6/classSG_1_1AuxVectorData_1a4379058b2eb0522291c4c20076ef7967" prot="public" virt="virtual"><scope>SG::AuxVectorBase</scope><name>lock</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1a45d183a0adaa5862a5b26c796cafb10d" prot="private" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>m_trackIndices</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1ad4be9ca08792014774acdd5218bd27a0" prot="protected" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>moveAux</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1a8f4139a7242cdcce76a9cbff3bfd9ca2" prot="protected" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>moveAux</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1a84fdf68a4d13674c4ff8da2534e98251" prot="protected" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>moveAux</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1a09975c7cd091fb26d842921ba0fb1636" prot="private" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>moveAux1</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1a74126f0323e5a5246b06588430daa4e3" prot="private" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>moveAux1</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1ad2c7feb935ffe7cfc1b3a80d9ad4b414" prot="protected" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>reserve</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1aeaa538f01b429ed555ec21ab36183885" prot="private" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>reserve1</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1a7228d4dbf01d265d1a70b2936ff9e21a" prot="private" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>reserve1</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1aab61a29d68cb3876b1e6a5f06b8320e2" prot="protected" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>resize</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1a0a1056c88e33b1a63b077c46c0a1a84e" prot="private" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>resize1</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1a4370c132febae39aee13ba57c18678c9" prot="private" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>resize1</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1a2513e17b33c0b9715553416e19e23810" prot="protected" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>resortAux</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1a6634fd06f1c20dd3fa037cd396e8eaf1" prot="private" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>resortAux1</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1a9c40d77971b24824656775a2b96a9c84" prot="private" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>resortAux1</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1a59270f0234bd8fc66a0ee5e564556bc1" prot="private" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>ResortAuxHelper</name></member>
      <member refid="db/dd6/classSG_1_1AuxVectorData_1a95f42871b1d206674b8f49a8cd73ae55" prot="protected" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>s_minCacheLen</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1a45f9a5425580e6317d3189486ffb8255" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>set</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1a8223a5c9a9af0a9dbb8fc268cd0ea832" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>setConstStore</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1a36634418d4b0b90570a5061cc94c72b7" prot="private" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>setIndexForResort</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1a235d711b1dc6ccd3147d1e55b6d9b2a9" prot="protected" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>setIndices</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1a239fc4585cdab218833425d7683e2e2b" prot="private" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>setIndices1</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1a3113b1c7ee5777b44b8d1792570b28fb" prot="private" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>setIndices1</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1a4786cd7b376a4a33d840715f44b3d01f" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>setNonConstStore</name></member>
      <member refid="db/dd6/classSG_1_1AuxVectorData_1adad5487f0cdf6cd0d7de68dd84570324" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>setOption</name></member>
      <member refid="db/dd6/classSG_1_1AuxVectorData_1a6f683bea801877c1001faa8116679ac4" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>setOption</name></member>
      <member refid="db/dd6/classSG_1_1AuxVectorData_1ab49a59f74e1b4e28fc637d0fbfc8ec80" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>setOption</name></member>
      <member refid="db/dd6/classSG_1_1AuxVectorData_1ac8ee26ce4d687f9cb2f05ef1ecf3adff" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>setOption</name></member>
      <member refid="db/dd6/classSG_1_1AuxVectorData_1a51e648949c78a087367e8788dca149f2" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>setOption</name></member>
      <member refid="db/dd6/classSG_1_1AuxVectorData_1ae2f4c954520372ce1381365cf0f8bee4" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>setOption</name></member>
      <member refid="db/dd6/classSG_1_1AuxVectorData_1a9bf14a816b4340b01e21b19fe76e8d4a" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>setOption</name></member>
      <member refid="db/dd6/classSG_1_1AuxVectorData_1a0a24bbef37c5f3cfcac02fceda56d943" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>setOption</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1aa21603645adb97780ff75af26630bfad" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>setStore</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1a58659470f0f2e27560cbe691eefce9c3" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>setStore</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1a2893a7ee3b1f5c7bc7d5cc5ce65d6e16" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>setStore</name></member>
      <member refid="db/dd6/classSG_1_1AuxVectorData_1aa54bfa91c82dd2b4071d28c52baf4b7c" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>SG::AuxElement</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1a1b5a71b56431f1010d8cdb846dd35bfa" prot="protected" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>shift</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1aef423f6db9a1208109a104aad8cf2b4f" prot="private" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>shift1</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1a6668b4dd9e534b6323517105bb7a00a0" prot="private" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>shift1</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1acb5fc1c8f606bd9fe52610b48ebb4c34" prot="public" virt="virtual"><scope>SG::AuxVectorBase</scope><name>size_v</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1a1413cec813bba2f0cba00cd3136e7131" prot="protected" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>swap</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1a3105544a00e10c72e45ca7367bb43e87" prot="protected" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>swapElementsAux</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1a3e040f5014d7e5f77bfa8a1ae866dddc" prot="protected" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>swapElementsAux</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1a020691f1fec82068a5a2aecc662a40bf" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>testAuxElementCtor</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1ae905757bbac29e780e4010eaf52ea01e" prot="public" virt="non-virtual"><scope>SG::AuxVectorBase</scope><name>trackIndices</name></member>
      <member refid="dd/da5/classSG_1_1AuxVectorBase_1a863ff9b970004c403c1398d24b1f60e7" prot="public" virt="virtual"><scope>SG::AuxVectorBase</scope><name>~AuxVectorBase</name></member>
      <member refid="db/dd6/classSG_1_1AuxVectorData_1ad2c4723c7dd4279ff096d77b4832eb99" prot="public" virt="virtual"><scope>SG::AuxVectorBase</scope><name>~AuxVectorData</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
