<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="dd/d6f/structTypeTools_1_1Copy" kind="struct" prot="public">
    <compoundname>TypeTools::Copy</compoundname>
    <includes refid="dd/db1/TypeTools_8h" local="no">TypeTools.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="dd/d6f/structTypeTools_1_1Copy_1a7805d2ce5c8cc8197fb2fcfab3a99d8d" prot="public" static="no">
        <type><ref refid="d1/def/classT" kindref="compound">T</ref></type>
        <definition>typedef T TypeTools::Copy&lt; T &gt;::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
<para>Type of the elements in the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/tools/TypeTools.h" line="17" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/tools/TypeTools.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dd/d6f/structTypeTools_1_1Copy_1aff05fe84c12e0f34b58d707daef83c32" prot="public" static="no">
        <type>const <ref refid="d1/def/classT" kindref="compound">T</ref> &amp;</type>
        <definition>typedef const T&amp; TypeTools::Copy&lt; T &gt;::const_reference</definition>
        <argsstring></argsstring>
        <name>const_reference</name>
        <briefdescription>
<para>Constant reference to an element in the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/tools/TypeTools.h" line="19" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/tools/TypeTools.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dd/d6f/structTypeTools_1_1Copy_1a9abe27a1404de43e81b688c8a7100cf2" prot="public" static="no">
        <type>const <ref refid="d1/def/classT" kindref="compound">T</ref> *</type>
        <definition>typedef const T* TypeTools::Copy&lt; T &gt;::const_pointer</definition>
        <argsstring></argsstring>
        <name>const_pointer</name>
        <briefdescription>
<para>Constant pointer to an element in the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/tools/TypeTools.h" line="21" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/tools/TypeTools.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Trait class defining how <ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref> should handle a container</para><para>This type trait is used to make sure that <ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref> handles <ref refid="d0/d4d/classDataVector" kindref="compound">DataVector</ref> containers in a reasonable way. The code is taken directly from AthenaKernel/tools/type_tools.h. </para>    </detaileddescription>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/tools/TypeTools.h" line="15" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthLinks/AthLinks/tools/TypeTools.h" bodystart="15" bodyend="22"/>
    <listofallmembers>
      <member refid="dd/d6f/structTypeTools_1_1Copy_1a9abe27a1404de43e81b688c8a7100cf2" prot="public" virt="non-virtual"><scope>TypeTools::Copy</scope><name>const_pointer</name></member>
      <member refid="dd/d6f/structTypeTools_1_1Copy_1aff05fe84c12e0f34b58d707daef83c32" prot="public" virt="non-virtual"><scope>TypeTools::Copy</scope><name>const_reference</name></member>
      <member refid="dd/d6f/structTypeTools_1_1Copy_1a7805d2ce5c8cc8197fb2fcfab3a99d8d" prot="public" virt="non-virtual"><scope>TypeTools::Copy</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
