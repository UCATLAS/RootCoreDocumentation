<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="dd/dac/TGoodRunsListReader_8cxx" kind="file">
    <compoundname>TGoodRunsListReader.cxx</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string</includes>
    <includes local="yes">TFormula.h</includes>
    <includes local="yes">Riostream.h</includes>
    <includes local="yes">TObjString.h</includes>
    <includes local="yes">TDOMParser.h</includes>
    <includes local="yes">TXMLNode.h</includes>
    <includes local="yes">TXMLDocument.h</includes>
    <includes local="yes">TXMLAttr.h</includes>
    <includes refid="d7/d46/TGoodRunsListReader_8h" local="yes">GoodRunsLists/TGoodRunsListReader.h</includes>
    <includes refid="d0/db2/TGoodRunsList_8h" local="yes">GoodRunsLists/TGoodRunsList.h</includes>
    <includes refid="df/d5b/TGoodRun_8h" local="yes">GoodRunsLists/TGoodRun.h</includes>
    <includes refid="d9/df8/TLumiBlockRange_8h" local="yes">GoodRunsLists/TLumiBlockRange.h</includes>
    <includes refid="d0/d5f/StrUtil_8h" local="yes">GoodRunsLists/StrUtil.h</includes>
    <incdepgraph>
      <node id="135002">
        <label>stdlib.h</label>
      </node>
      <node id="135014">
        <label>TList.h</label>
      </node>
      <node id="135011">
        <label>GoodRunsLists/TGoodRunsListReader.h</label>
        <link refid="d7/d46/TGoodRunsListReader_8h_source"/>
        <childnode refid="135012" relation="include">
        </childnode>
        <childnode refid="135013" relation="include">
        </childnode>
        <childnode refid="135014" relation="include">
        </childnode>
        <childnode refid="135015" relation="include">
        </childnode>
        <childnode refid="135016" relation="include">
        </childnode>
        <childnode refid="135017" relation="include">
        </childnode>
        <childnode refid="135020" relation="include">
        </childnode>
      </node>
      <node id="135005">
        <label>Riostream.h</label>
      </node>
      <node id="135003">
        <label>string</label>
      </node>
      <node id="135019">
        <label>map</label>
      </node>
      <node id="135021">
        <label>GoodRunsLists/TGoodRunsList.h</label>
        <link refid="d0/db2/TGoodRunsList_8h_source"/>
        <childnode refid="135022" relation="include">
        </childnode>
        <childnode refid="135024" relation="include">
        </childnode>
        <childnode refid="135016" relation="include">
        </childnode>
        <childnode refid="135019" relation="include">
        </childnode>
        <childnode refid="135012" relation="include">
        </childnode>
        <childnode refid="135003" relation="include">
        </childnode>
      </node>
      <node id="135009">
        <label>TXMLDocument.h</label>
      </node>
      <node id="135006">
        <label>TObjString.h</label>
      </node>
      <node id="135017">
        <label>GoodRunsLists/TMsgLogger.h</label>
        <link refid="db/db8/TMsgLogger_8h_source"/>
        <childnode refid="135003" relation="include">
        </childnode>
        <childnode refid="135018" relation="include">
        </childnode>
        <childnode refid="135019" relation="include">
        </childnode>
        <childnode refid="135015" relation="include">
        </childnode>
        <childnode refid="135016" relation="include">
        </childnode>
      </node>
      <node id="135022">
        <label>GoodRunsLists/TGoodRun.h</label>
        <link refid="df/d5b/TGoodRun_8h_source"/>
        <childnode refid="135023" relation="include">
        </childnode>
        <childnode refid="135015" relation="include">
        </childnode>
        <childnode refid="135012" relation="include">
        </childnode>
      </node>
      <node id="135013">
        <label>TROOT.h</label>
      </node>
      <node id="135025">
        <label>GoodRunsLists/StrUtil.h</label>
        <link refid="d0/d5f/StrUtil_8h_source"/>
        <childnode refid="135003" relation="include">
        </childnode>
        <childnode refid="135012" relation="include">
        </childnode>
      </node>
      <node id="135020">
        <label>GoodRunsLists/TGRLCollection.h</label>
        <link refid="d7/dd9/TGRLCollection_8h_source"/>
        <childnode refid="135021" relation="include">
        </childnode>
        <childnode refid="135015" relation="include">
        </childnode>
        <childnode refid="135012" relation="include">
        </childnode>
      </node>
      <node id="135023">
        <label>GoodRunsLists/TLumiBlockRange.h</label>
        <link refid="d9/df8/TLumiBlockRange_8h_source"/>
        <childnode refid="135015" relation="include">
        </childnode>
        <childnode refid="135012" relation="include">
        </childnode>
      </node>
      <node id="135015">
        <label>TObject.h</label>
      </node>
      <node id="135012">
        <label>vector</label>
      </node>
      <node id="135000">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRunsListReader.cxx</label>
        <link refid="TGoodRunsListReader.cxx"/>
        <childnode refid="135001" relation="include">
        </childnode>
        <childnode refid="135002" relation="include">
        </childnode>
        <childnode refid="135003" relation="include">
        </childnode>
        <childnode refid="135004" relation="include">
        </childnode>
        <childnode refid="135005" relation="include">
        </childnode>
        <childnode refid="135006" relation="include">
        </childnode>
        <childnode refid="135007" relation="include">
        </childnode>
        <childnode refid="135008" relation="include">
        </childnode>
        <childnode refid="135009" relation="include">
        </childnode>
        <childnode refid="135010" relation="include">
        </childnode>
        <childnode refid="135011" relation="include">
        </childnode>
        <childnode refid="135021" relation="include">
        </childnode>
        <childnode refid="135022" relation="include">
        </childnode>
        <childnode refid="135023" relation="include">
        </childnode>
        <childnode refid="135025" relation="include">
        </childnode>
      </node>
      <node id="135018">
        <label>sstream</label>
      </node>
      <node id="135004">
        <label>TFormula.h</label>
      </node>
      <node id="135001">
        <label>iostream</label>
      </node>
      <node id="135008">
        <label>TXMLNode.h</label>
      </node>
      <node id="135024">
        <label>TNamed.h</label>
      </node>
      <node id="135016">
        <label>TString.h</label>
      </node>
      <node id="135010">
        <label>TXMLAttr.h</label>
      </node>
      <node id="135007">
        <label>TDOMParser.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="dd/dac/TGoodRunsListReader_8cxx_1a0eda460a623b651c0aef82b28c8633f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ClassImp</definition>
        <argsstring>(Root::TGoodRunsListReader) using namespace std</argsstring>
        <name>ClassImp</name>
        <param>
          <type><ref refid="d5/d0f/classRoot_1_1TGoodRunsListReader" kindref="compound">Root::TGoodRunsListReader</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRunsListReader.cxx" line="29"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************************</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Class<sp/><sp/>:<sp/>TGoodRunsReader<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Authors<sp/>(alphabetical):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Max<sp/>Baak<sp/>&lt;mbaak@cern.ch&gt;<sp/>-<sp/>CERN,<sp/>Switzerland<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>**********************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TFormula.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Riostream.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TObjString.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TDOMParser.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TXMLNode.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TXMLDocument.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TXMLAttr.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GoodRunsLists/TGoodRunsListReader.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GoodRunsLists/TGoodRunsList.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GoodRunsLists/TGoodRun.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GoodRunsLists/TLumiBlockRange.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GoodRunsLists/StrUtil.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">ClassImp(<ref refid="d5/d0f/classRoot_1_1TGoodRunsListReader" kindref="compound">Root::TGoodRunsListReader</ref>)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">using<sp/>namespace<sp/>std;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">Root::TGoodRunsListReader::TGoodRunsListReader(<sp/>Bool_t<sp/>checkGRLInfo<sp/>)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/>:<sp/>TObject()</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/>,<sp/>m_logger(<sp/>&quot;TGoodRunsListReader&quot;<sp/>)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>m_grlvec.SetCheckGRLInfo(<sp/>checkGRLInfo<sp/>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">Root::TGoodRunsListReader::TGoodRunsListReader(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>dataCardName,<sp/>Bool_t<sp/>checkGRLInfo<sp/>)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/>:<sp/>TObject()</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/>,<sp/>m_logger(<sp/></highlight><highlight class="stringliteral">&quot;TGoodRunsListReader&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>m_dataCardList.push_back(dataCardName);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>m_grlvec.SetCheckGRLInfo(<sp/>checkGRLInfo<sp/>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">Root::TGoodRunsListReader::~TGoodRunsListReader()</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>this-&gt;Reset();</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">Root::TGoodRunsListReader::Reset()</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>m_grlvec.Reset();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>m_dataCardList.clear();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>m_xmlstringList.clear();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>m_xmlstring=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//Clear()<sp/>only<sp/>works<sp/>in<sp/>root5.24</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>m_dataCardName=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">Bool_t</highlight></codeline>
<codeline lineno="67"><highlight class="normal">Root::TGoodRunsListReader::Interpret()</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>Bool_t<sp/>xmlInterpret(kTRUE);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_dataCardList.empty()<sp/>&amp;&amp;<sp/>m_xmlstringList.empty())<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>m_logger<sp/>&lt;&lt;<sp/>kWARNING<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>xml<sp/>data-card<sp/>or<sp/>string<sp/>set.<sp/>Return<sp/>false.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>GEndl;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kFALSE;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>Int_t<sp/>parseCode(1);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>TDOMParser*<sp/>xmlparser<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TDOMParser();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>---------------<sp/>xml<sp/>file<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;m_dataCardList.size()<sp/>&amp;&amp;<sp/>xmlInterpret;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>m_dataCardName<sp/>=<sp/>m_dataCardList[j];</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_dataCardName.IsNull())<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_logger<sp/>&lt;&lt;<sp/>kDEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Read<sp/>xml<sp/>data-card:<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_dataCardName<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>GEndl;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlparser-&gt;SetValidate(kFALSE);<sp/></highlight><highlight class="comment">//<sp/>MB<sp/>14/4/&apos;10<sp/>:<sp/>don&apos;t<sp/>validate<sp/>structure<sp/>of<sp/>dtd<sp/>file<sp/>in<sp/>case<sp/>runquery<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseCode<sp/>=<sp/>xmlparser-&gt;ParseFile(<sp/>m_dataCardName<sp/>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_logger<sp/>&lt;&lt;<sp/>kWARNING<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>xml<sp/>data-card<sp/>set.<sp/>Skip.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>GEndl;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>m_logger<sp/>&lt;&lt;<sp/>kDEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;XML<sp/>parser<sp/>returned<sp/>code:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>parseCode<sp/>&lt;&lt;<sp/>GEndl;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parseCode<sp/>!=<sp/>0)<sp/>{<sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_logger<sp/>&lt;&lt;<sp/>kERROR<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;loading<sp/>of<sp/>xml<sp/>document<sp/>failed&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>GEndl;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlInterpret<sp/>=<sp/>kFALSE;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>---------------<sp/>parse<sp/>JobConfiguration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TXMLDocument*<sp/>xmldoc<sp/>=<sp/>xmlparser-&gt;GetXMLDocument();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TXMLNode*<sp/>jobConfig_node<sp/>=<sp/>xmldoc-&gt;GetRootNode();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TXMLNode*<sp/>jobConfig_elem<sp/>=<sp/>jobConfig_node-&gt;GetChildren();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(jobConfig_elem<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jobConfig_elem-&gt;GetNodeName()<sp/>==<sp/>TString(</highlight><highlight class="stringliteral">&quot;NamedLumiRange&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;ReadNamedLumiRange<sp/>(<sp/>jobConfig_elem<sp/>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>crawl<sp/>on...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jobConfig_elem<sp/>=<sp/>jobConfig_elem-&gt;GetNextNode();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>m_dataCardList.clear();<sp/></highlight><highlight class="comment">//<sp/>Can<sp/>now<sp/>add<sp/>fresh<sp/>xml<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>---------------<sp/>xml<sp/>string<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;m_xmlstringList.size()<sp/>&amp;&amp;<sp/>xmlInterpret;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>m_xmlstring<sp/>=<sp/>m_xmlstringList[j];</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_xmlstring.IsNull())<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_logger<sp/>&lt;&lt;<sp/>kDEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Read<sp/>xml<sp/>string.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>GEndl;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlparser-&gt;SetValidate(kFALSE);<sp/></highlight><highlight class="comment">//<sp/>MB<sp/>14/4/&apos;10<sp/>:<sp/>don&apos;t<sp/>validate<sp/>structure<sp/>of<sp/>dtd<sp/>file<sp/>in<sp/>case<sp/>runquery<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parseCode<sp/>=<sp/>xmlparser-&gt;ParseBuffer(<sp/>m_xmlstring.Data(),<sp/>m_xmlstring.Length()<sp/>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_logger<sp/>&lt;&lt;<sp/>kWARNING<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>xml<sp/>string<sp/>set.<sp/>Skip.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>GEndl;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>m_logger<sp/>&lt;&lt;<sp/>kDEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;XML<sp/>parser<sp/>returned<sp/>code:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>parseCode<sp/>&lt;&lt;<sp/>GEndl;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parseCode<sp/>!=<sp/>0)<sp/>{<sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_logger<sp/>&lt;&lt;<sp/>kERROR<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;loading<sp/>of<sp/>xml<sp/>document<sp/>failed&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>GEndl;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlInterpret<sp/>=<sp/>kFALSE;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>---------------<sp/>parse<sp/>JobConfiguration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TXMLDocument*<sp/>xmldoc<sp/>=<sp/>xmlparser-&gt;GetXMLDocument();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TXMLNode*<sp/>jobConfig_node<sp/>=<sp/>xmldoc-&gt;GetRootNode();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TXMLNode*<sp/>jobConfig_elem<sp/>=<sp/>jobConfig_node-&gt;GetChildren();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(jobConfig_elem<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jobConfig_elem-&gt;GetNodeName()<sp/>==<sp/>TString(</highlight><highlight class="stringliteral">&quot;NamedLumiRange&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;ReadNamedLumiRange<sp/>(<sp/>jobConfig_elem<sp/>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>crawl<sp/>on...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jobConfig_elem<sp/>=<sp/>jobConfig_elem-&gt;GetNextNode();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>m_xmlstringList.clear();<sp/></highlight><highlight class="comment">//<sp/>Can<sp/>now<sp/>add<sp/>fresh<sp/>xml<sp/>strings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>xmlparser;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xmlInterpret;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal">Root::TGoodRunsListReader::ReadAttribs(<sp/>TXMLNode*<sp/>node<sp/>)</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node-&gt;HasAttributes())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/>TListIter<sp/>attribIt(<sp/>node-&gt;GetAttributes()<sp/>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/>TXMLAttr*<sp/>curAttr(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((curAttr<sp/>=<sp/>(TXMLAttr*)attribIt())<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>m_logger<sp/>&lt;&lt;<sp/>kDEBUG<sp/>&lt;&lt;<sp/>node-&gt;GetNodeName()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>curAttr-&gt;GetName()</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>=<sp/><sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>curAttr-&gt;GetValue()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>GEndl;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>variable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal">Root::TGoodRunsListReader::ReadLumiBlockCollection(<sp/>TXMLNode*<sp/>dataNode<sp/>)</highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>retrieve<sp/>childrens<sp/>of<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>TXMLNode*<sp/>node<sp/>=<sp/>dataNode-&gt;GetChildren();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>node<sp/>!=<sp/>0;<sp/>node<sp/>=<sp/>node-&gt;GetNextNode())<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>run</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TString(</highlight><highlight class="stringliteral">&quot;Run&quot;</highlight><highlight class="normal">)==node-&gt;GetNodeName())<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_logger<sp/>&lt;&lt;<sp/>kDEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;subchild<sp/>node<sp/>value:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>node-&gt;GetText()<sp/>&lt;&lt;<sp/>GEndl;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>lumi<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TString(</highlight><highlight class="stringliteral">&quot;LBRange&quot;</highlight><highlight class="normal">)==node-&gt;GetNodeName()<sp/>&amp;&amp;<sp/>node-&gt;HasAttributes())<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TXMLAttr*<sp/>curAttr(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TListIter<sp/>attribIt(node-&gt;GetAttributes());</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((curAttr<sp/>=<sp/>(TXMLAttr*)attribIt())<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TString(</highlight><highlight class="stringliteral">&quot;Start&quot;</highlight><highlight class="normal">)==curAttr-&gt;GetName())<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_logger<sp/>&lt;&lt;<sp/>kDEBUG<sp/>&lt;&lt;<sp/>node-&gt;GetNodeName()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>curAttr-&gt;GetName()</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>=<sp/><sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>curAttr-&gt;GetValue()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>GEndl;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TString(</highlight><highlight class="stringliteral">&quot;End&quot;</highlight><highlight class="normal">)==curAttr-&gt;GetName())<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_logger<sp/>&lt;&lt;<sp/>kDEBUG<sp/>&lt;&lt;<sp/>node-&gt;GetNodeName()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>curAttr-&gt;GetName()</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>=<sp/><sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>curAttr-&gt;GetValue()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>GEndl;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><ref refid="d9/dad/classRoot_1_1TGoodRun" kindref="compound">Root::TGoodRun</ref></highlight></codeline>
<codeline lineno="208"><highlight class="normal">Root::TGoodRunsListReader::GetLumiBlockCollection(<sp/>TXMLNode*<sp/>dataNode<sp/>)</highlight></codeline>
<codeline lineno="209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><ref refid="d9/dad/classRoot_1_1TGoodRun" kindref="compound">Root::TGoodRun</ref><sp/>goodrun;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sanity<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dataNode-&gt;HasChildren())<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>m_logger<sp/>&lt;&lt;<sp/>kWARNING<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;Data&gt;<sp/>...<sp/>&lt;/Data&gt;<sp/>Part<sp/>does<sp/>not<sp/>contain<sp/>any<sp/>parameters&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>GEndl;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>goodrun;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>retrieve<sp/>childrens<sp/>of<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>TXMLNode*<sp/>node<sp/>=<sp/>dataNode-&gt;GetChildren();</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>node<sp/>!=<sp/>0;<sp/>node<sp/>=<sp/>node-&gt;GetNextNode())<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>run</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TString(</highlight><highlight class="stringliteral">&quot;Run&quot;</highlight><highlight class="normal">)==node-&gt;GetNodeName())<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_logger<sp/>&lt;&lt;<sp/>kDEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;subchild<sp/>node<sp/>value:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>node-&gt;GetText()<sp/>&lt;&lt;<sp/>GEndl;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>goodrun.SetRunNumber(atoi(node-&gt;GetText()));</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>lumi<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TString(</highlight><highlight class="stringliteral">&quot;LBRange&quot;</highlight><highlight class="normal">)==node-&gt;GetNodeName()<sp/>&amp;&amp;<sp/>node-&gt;HasAttributes())<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d40/classRoot_1_1TLumiBlockRange" kindref="compound">Root::TLumiBlockRange</ref><sp/>lbr;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lbr.SetEnd(2147483647);<sp/></highlight><highlight class="comment">//<sp/>set<sp/>in<sp/>case<sp/>lb<sp/>turns<sp/>out<sp/>to<sp/>be<sp/>open-ended</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TXMLAttr*<sp/>curAttr(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TListIter<sp/>attribIt(node-&gt;GetAttributes());</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((curAttr<sp/>=<sp/>(TXMLAttr*)attribIt())<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TString(</highlight><highlight class="stringliteral">&quot;Start&quot;</highlight><highlight class="normal">)==curAttr-&gt;GetName())<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_logger<sp/>&lt;&lt;<sp/>kDEBUG<sp/>&lt;&lt;<sp/>node-&gt;GetNodeName()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>curAttr-&gt;GetName()</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>=<sp/><sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>curAttr-&gt;GetValue()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>GEndl;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lbr.SetBegin(atoi(curAttr-&gt;GetValue()));</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TString(</highlight><highlight class="stringliteral">&quot;End&quot;</highlight><highlight class="normal">)==curAttr-&gt;GetName())<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_logger<sp/>&lt;&lt;<sp/>kDEBUG<sp/>&lt;&lt;<sp/>node-&gt;GetNodeName()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>curAttr-&gt;GetName()</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>=<sp/><sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>curAttr-&gt;GetValue()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>GEndl;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lbr.SetEnd(atoi(curAttr-&gt;GetValue()));</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!lbr.IsEmpty())<sp/>goodrun.push_back(lbr);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>goodrun.Sort();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>goodrun;</highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal">Root::TGoodRunsListReader::ReadNamedLumiRange(<sp/>TXMLNode*<sp/>dataNode<sp/>)</highlight></codeline>
<codeline lineno="255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sanity<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dataNode-&gt;HasChildren())<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>m_logger<sp/>&lt;&lt;<sp/>kWARNING<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;Data&gt;<sp/>...<sp/>&lt;/Data&gt;<sp/>Part<sp/>does<sp/>not<sp/>contain<sp/>any<sp/>parameters&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>GEndl;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>retrieve<sp/>childrens<sp/>of<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>TXMLNode*<sp/>node<sp/>=<sp/>dataNode-&gt;GetChildren();</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><ref refid="df/d0c/classRoot_1_1TGoodRunsList" kindref="compound">Root::TGoodRunsList</ref><sp/>grl(m_dataCardName.Data());</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>std::string<sp/>nameStr,<sp/>valueStr;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>node<sp/>!=<sp/>0;<sp/>node<sp/>=<sp/>node-&gt;GetNextNode())<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TString(</highlight><highlight class="stringliteral">&quot;Name&quot;</highlight><highlight class="normal">)<sp/>==<sp/>node-&gt;GetNodeName())<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;GetText()!=0)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_logger<sp/>&lt;&lt;<sp/>kDEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;child<sp/>node<sp/>value:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>node-&gt;GetText()<sp/>&lt;&lt;<sp/>GEndl;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nameStr=node-&gt;GetText();</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/>nameStr=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GRLStrUtil::trim(nameStr);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>grl.SetName(nameStr.c_str());</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TString(</highlight><highlight class="stringliteral">&quot;Version&quot;</highlight><highlight class="normal">)<sp/>==<sp/>node-&gt;GetNodeName())<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;GetText()!=0)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_logger<sp/>&lt;&lt;<sp/>kDEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;child<sp/>node<sp/>value:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>node-&gt;GetText()<sp/>&lt;&lt;<sp/>GEndl;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valueStr=node-&gt;GetText();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/>valueStr=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GRLStrUtil::trim(valueStr);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>grl.SetVersion(valueStr);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TString(</highlight><highlight class="stringliteral">&quot;Metadata&quot;</highlight><highlight class="normal">)<sp/>==<sp/>node-&gt;GetNodeName())<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;GetText()!=0)<sp/>m_logger<sp/>&lt;&lt;<sp/>kDEBUG<sp/>&lt;&lt;<sp/>node-&gt;GetNodeName()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>value:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>node-&gt;GetText()<sp/>&lt;&lt;<sp/>GEndl;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;ReadAttribs(node);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;HasAttributes())<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TListIter<sp/>attribIt(<sp/>node-&gt;GetAttributes()<sp/>);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TXMLAttr*<sp/>curAttr(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((curAttr<sp/>=<sp/>(TXMLAttr*)attribIt())<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curAttr-&gt;GetValue()!=0)<sp/>{<sp/>nameStr=curAttr-&gt;GetValue();<sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/>nameStr=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;GetText()!=0)<sp/>{<sp/>valueStr=node-&gt;GetText();<sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/>valueStr=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GRLStrUtil::trim(nameStr);<sp/>GRLStrUtil::trim(valueStr);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!nameStr.empty()<sp/>&amp;&amp;<sp/>!valueStr.empty())<sp/>grl.AddMetaData(nameStr,valueStr);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TString(</highlight><highlight class="stringliteral">&quot;LumiBlockCollection&quot;</highlight><highlight class="normal">)<sp/>==<sp/>node-&gt;GetNodeName())<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/dad/classRoot_1_1TGoodRun" kindref="compound">Root::TGoodRun</ref><sp/>goodrun<sp/>=<sp/>this-&gt;GetLumiBlockCollection(node);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!goodrun.IsEmpty())<sp/>grl[goodrun.GetRunNumber()]<sp/>=<sp/>goodrun<sp/>;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!grl.IsEmpty())<sp/>m_grlvec.push_back(grl);</highlight></codeline>
<codeline lineno="310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="df/d0c/classRoot_1_1TGoodRunsList" kindref="compound">Root::TGoodRunsList</ref></highlight></codeline>
<codeline lineno="314"><highlight class="normal">Root::TGoodRunsListReader::GetMergedGoodRunsList(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Root::BoolOperation&amp;<sp/>operation<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="315"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_grlvec.GetMergedGoodRunsList(operation);<sp/></highlight></codeline>
<codeline lineno="317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="df/d0c/classRoot_1_1TGoodRunsList" kindref="compound">Root::TGoodRunsList</ref></highlight></codeline>
<codeline lineno="321"><highlight class="normal">Root::TGoodRunsListReader::GetGoodRunsList(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="322"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_grlvec.GetGoodRunsList(idx);</highlight></codeline>
<codeline lineno="324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/d9b/classRoot_1_1TGRLCollection" kindref="compound">Root::TGRLCollection</ref></highlight></codeline>
<codeline lineno="328"><highlight class="normal">Root::TGoodRunsListReader::GetMergedGRLCollection(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Root::BoolOperation&amp;<sp/>operation<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="329"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_grlvec.GetMergedGRLCollection(operation);</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/GoodRunsLists/Root/TGoodRunsListReader.cxx"/>
  </compounddef>
</doxygen>
