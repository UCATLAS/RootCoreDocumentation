<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="dd/df9/PackedContainerStreamer_8cxx" kind="file">
    <compoundname>PackedContainerStreamer.cxx</compoundname>
    <includes refid="d6/dda/PackedContainer_8h" local="yes">AthContainers/PackedContainer.h</includes>
    <includes refid="d2/df1/PackedConverter_8h" local="yes">AthContainers/PackedConverter.h</includes>
    <includes refid="dd/d6b/AthContainers_2AthContainers_2ClassName_8h" local="yes">AthContainers/ClassName.h</includes>
    <includes local="yes">TClassStreamer.h</includes>
    <includes local="yes">TMemberStreamer.h</includes>
    <includes local="yes">TError.h</includes>
    <includes local="yes">TROOT.h</includes>
    <includes local="no">cassert</includes>
    <incdepgraph>
      <node id="71563">
        <label>limits</label>
      </node>
      <node id="71574">
        <label>CxxUtils/BitUnpacker.h</label>
        <link refid="d5/d33/BitUnpacker_8h"/>
        <childnode refid="71564" relation="include">
        </childnode>
        <childnode refid="71572" relation="include">
        </childnode>
        <childnode refid="71575" relation="include">
        </childnode>
      </node>
      <node id="71560">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="71561" relation="include">
        </childnode>
        <childnode refid="71562" relation="include">
        </childnode>
      </node>
      <node id="71576">
        <label>CxxUtils/ones.h</label>
        <link refid="dd/d16/ones_8h"/>
      </node>
      <node id="71579">
        <label>SGTools/ClassName.h</label>
      </node>
      <node id="71564">
        <label>stdint.h</label>
      </node>
      <node id="71572">
        <label>cassert</label>
      </node>
      <node id="71561">
        <label>string</label>
      </node>
      <node id="71571">
        <label>CxxUtils/BitPacker.h</label>
        <link refid="dc/d57/BitPacker_8h"/>
        <childnode refid="71564" relation="include">
        </childnode>
        <childnode refid="71572" relation="include">
        </childnode>
        <childnode refid="71573" relation="include">
        </childnode>
      </node>
      <node id="71556">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/dict/PackedContainerStreamer.cxx</label>
        <link refid="PackedContainerStreamer.cxx"/>
        <childnode refid="71557" relation="include">
        </childnode>
        <childnode refid="71569" relation="include">
        </childnode>
        <childnode refid="71578" relation="include">
        </childnode>
        <childnode refid="71580" relation="include">
        </childnode>
        <childnode refid="71581" relation="include">
        </childnode>
        <childnode refid="71582" relation="include">
        </childnode>
        <childnode refid="71583" relation="include">
        </childnode>
        <childnode refid="71572" relation="include">
        </childnode>
      </node>
      <node id="71568">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="71582">
        <label>TError.h</label>
      </node>
      <node id="71570">
        <label>CxxUtils/FloatPacker.h</label>
        <link refid="de/d0d/FloatPacker_8h"/>
        <childnode refid="71561" relation="include">
        </childnode>
        <childnode refid="71564" relation="include">
        </childnode>
      </node>
      <node id="71559">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="71560" relation="include">
        </childnode>
        <childnode refid="71563" relation="include">
        </childnode>
        <childnode refid="71564" relation="include">
        </childnode>
        <childnode refid="71565" relation="include">
        </childnode>
      </node>
      <node id="71575">
        <label>CxxUtils/BitUnpacker.icc</label>
        <link refid="db/db1/BitUnpacker_8icc"/>
        <childnode refid="71576" relation="include">
        </childnode>
      </node>
      <node id="71583">
        <label>TROOT.h</label>
      </node>
      <node id="71577">
        <label>AthContainers/PackedConverter.icc</label>
        <link refid="da/ded/PackedConverter_8icc"/>
      </node>
      <node id="71565">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="71562">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="71578">
        <label>AthContainers/ClassName.h</label>
        <link refid="dd/d6b/AthContainers_2AthContainers_2ClassName_8h_source"/>
        <childnode refid="71579" relation="include">
        </childnode>
      </node>
      <node id="71567">
        <label>vector</label>
      </node>
      <node id="71566">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="71558">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="71569">
        <label>AthContainers/PackedConverter.h</label>
        <link refid="d2/df1/PackedConverter_8h"/>
        <childnode refid="71559" relation="include">
        </childnode>
        <childnode refid="71570" relation="include">
        </childnode>
        <childnode refid="71571" relation="include">
        </childnode>
        <childnode refid="71574" relation="include">
        </childnode>
        <childnode refid="71567" relation="include">
        </childnode>
        <childnode refid="71564" relation="include">
        </childnode>
        <childnode refid="71577" relation="include">
        </childnode>
      </node>
      <node id="71580">
        <label>TClassStreamer.h</label>
      </node>
      <node id="71557">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="71558" relation="include">
        </childnode>
        <childnode refid="71559" relation="include">
        </childnode>
        <childnode refid="71566" relation="include">
        </childnode>
        <childnode refid="71567" relation="include">
        </childnode>
        <childnode refid="71568" relation="include">
        </childnode>
      </node>
      <node id="71573">
        <label>CxxUtils/BitPacker.icc</label>
        <link refid="d9/dad/BitPacker_8icc"/>
      </node>
      <node id="71581">
        <label>TMemberStreamer.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="d5/db7/classSG_1_1PackedContainerStreamer" prot="public">SG::PackedContainerStreamer</innerclass>
    <innernamespace refid="dd/d59/namespaceSG">SG</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="dd/df9/PackedContainerStreamer_8cxx_1a5d8e51f27d6e7f6d72d3c094db3fb40e" prot="public" static="no">
        <name>STREAMER</name>
        <param><defname>TYPE</defname></param>
        <initializer>namespace ROOT { TGenericClassInfo* GenerateInitInstance(const <ref refid="dd/d01/classSG_1_1PackedContainer" kindref="compound">SG::PackedContainer</ref>&lt;TYPE&gt;*);} \
  namespace SG {                                                        \
  template &lt;&gt; struct InstallPackedContainerStreamer&lt;TYPE&gt; {             \
  InstallPackedContainerStreamer() {                                    \
    ROOT::GenerateInitInstance((<ref refid="dd/d01/classSG_1_1PackedContainer" kindref="compound">SG::PackedContainer</ref>&lt;TYPE&gt;*)nullptr)-&gt;AdoptStreamer (new PackedContainerStreamer&lt;TYPE&gt;) ; \
  } };                                                                  \
  InstallPackedContainerStreamer&lt;TYPE&gt; _R__UNIQUE_(streamerInstance);   \
  } class swallowSemicolon</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/dict/PackedContainerStreamer.cxx" line="166" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/dict/PackedContainerStreamer.cxx" bodystart="158" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="dd/df9/PackedContainerStreamer_8cxx_1a6d699000450945add34358ad50a0b2ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>STREAMER</definition>
        <argsstring>(char)</argsstring>
        <name>STREAMER</name>
        <param>
          <type>char</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/dict/PackedContainerStreamer.cxx" line="169"/>
      </memberdef>
      <memberdef kind="function" id="dd/df9/PackedContainerStreamer_8cxx_1a40b9b9da8ec45b226be6ee788420ba45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>STREAMER</definition>
        <argsstring>(unsigned char)</argsstring>
        <name>STREAMER</name>
        <param>
          <type>unsigned</type>
          <declname>char</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/dict/PackedContainerStreamer.cxx" line="170"/>
      </memberdef>
      <memberdef kind="function" id="dd/df9/PackedContainerStreamer_8cxx_1ae06c715df2ce04eec2eed19179f83e74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>STREAMER</definition>
        <argsstring>(short)</argsstring>
        <name>STREAMER</name>
        <param>
          <type>short</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/dict/PackedContainerStreamer.cxx" line="171"/>
      </memberdef>
      <memberdef kind="function" id="dd/df9/PackedContainerStreamer_8cxx_1afa9add2b7131d6503e9adb43b2723f1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>STREAMER</definition>
        <argsstring>(int)</argsstring>
        <name>STREAMER</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/dict/PackedContainerStreamer.cxx" line="173"/>
      </memberdef>
      <memberdef kind="function" id="dd/df9/PackedContainerStreamer_8cxx_1a378bd7c6a8c0807b0f2f31ce24b1cf18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>STREAMER</definition>
        <argsstring>(float)</argsstring>
        <name>STREAMER</name>
        <param>
          <type>float</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/dict/PackedContainerStreamer.cxx" line="175"/>
      </memberdef>
      <memberdef kind="function" id="dd/df9/PackedContainerStreamer_8cxx_1a60dc27f3bd48916907572259ff091b6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>STREAMER</definition>
        <argsstring>(double)</argsstring>
        <name>STREAMER</name>
        <param>
          <type>double</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/dict/PackedContainerStreamer.cxx" line="176"/>
      </memberdef>
      <memberdef kind="function" id="dd/df9/PackedContainerStreamer_8cxx_1a44395bcc1e83b219ccc8a7dc3460f302" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>STREAMER</definition>
        <argsstring>(std::vector&lt; char &gt;)</argsstring>
        <name>STREAMER</name>
        <param>
          <type>std::vector&lt; char &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/dict/PackedContainerStreamer.cxx" line="178"/>
      </memberdef>
      <memberdef kind="function" id="dd/df9/PackedContainerStreamer_8cxx_1a2b612a3f6d179a292b998f71ca9ef066" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>STREAMER</definition>
        <argsstring>(std::vector&lt; unsigned char &gt;)</argsstring>
        <name>STREAMER</name>
        <param>
          <type>std::vector&lt; unsigned char &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/dict/PackedContainerStreamer.cxx" line="179"/>
      </memberdef>
      <memberdef kind="function" id="dd/df9/PackedContainerStreamer_8cxx_1ab78ca236c3a1dd506f49e4e876924bfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>STREAMER</definition>
        <argsstring>(std::vector&lt; short &gt;)</argsstring>
        <name>STREAMER</name>
        <param>
          <type>std::vector&lt; short &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/dict/PackedContainerStreamer.cxx" line="180"/>
      </memberdef>
      <memberdef kind="function" id="dd/df9/PackedContainerStreamer_8cxx_1ab49b622ced02ff723e0afbf796f93b18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>STREAMER</definition>
        <argsstring>(std::vector&lt; unsigned short &gt;)</argsstring>
        <name>STREAMER</name>
        <param>
          <type>std::vector&lt; unsigned short &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/dict/PackedContainerStreamer.cxx" line="181"/>
      </memberdef>
      <memberdef kind="function" id="dd/df9/PackedContainerStreamer_8cxx_1a1023cf2fdbb731cb2982b90cff474714" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>STREAMER</definition>
        <argsstring>(std::vector&lt; int &gt;)</argsstring>
        <name>STREAMER</name>
        <param>
          <type>std::vector&lt; int &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/dict/PackedContainerStreamer.cxx" line="182"/>
      </memberdef>
      <memberdef kind="function" id="dd/df9/PackedContainerStreamer_8cxx_1a4d4a0d67d5e7e9309fba1aed20339e4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>STREAMER</definition>
        <argsstring>(std::vector&lt; unsigned int &gt;)</argsstring>
        <name>STREAMER</name>
        <param>
          <type>std::vector&lt; unsigned int &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/dict/PackedContainerStreamer.cxx" line="183"/>
      </memberdef>
      <memberdef kind="function" id="dd/df9/PackedContainerStreamer_8cxx_1a2b274a855f87cdac0a6f7d5d1a63fee4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>STREAMER</definition>
        <argsstring>(std::vector&lt; float &gt;)</argsstring>
        <name>STREAMER</name>
        <param>
          <type>std::vector&lt; float &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/dict/PackedContainerStreamer.cxx" line="184"/>
      </memberdef>
      <memberdef kind="function" id="dd/df9/PackedContainerStreamer_8cxx_1a526fba55ffde86b66830f17b9cd166b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>STREAMER</definition>
        <argsstring>(std::vector&lt; double &gt;)</argsstring>
        <name>STREAMER</name>
        <param>
          <type>std::vector&lt; double &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/dict/PackedContainerStreamer.cxx" line="185"/>
      </memberdef>
      <memberdef kind="function" id="dd/df9/PackedContainerStreamer_8cxx_1a87bc30106fe7a91722e022c71129bc2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>STREAMER</definition>
        <argsstring>(std::vector&lt; std::vector&lt; char &gt; &gt;)</argsstring>
        <name>STREAMER</name>
        <param>
          <type>std::vector&lt; std::vector&lt; char &gt; &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/dict/PackedContainerStreamer.cxx" line="187"/>
      </memberdef>
      <memberdef kind="function" id="dd/df9/PackedContainerStreamer_8cxx_1af7c63b0597f36de9b1460cf4a7aad029" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>STREAMER</definition>
        <argsstring>(std::vector&lt; std::vector&lt; unsigned char &gt; &gt;)</argsstring>
        <name>STREAMER</name>
        <param>
          <type>std::vector&lt; std::vector&lt; unsigned char &gt; &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/dict/PackedContainerStreamer.cxx" line="188"/>
      </memberdef>
      <memberdef kind="function" id="dd/df9/PackedContainerStreamer_8cxx_1a30c78bf4c909cc7ec106fe6587427e54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>STREAMER</definition>
        <argsstring>(std::vector&lt; std::vector&lt; short &gt; &gt;)</argsstring>
        <name>STREAMER</name>
        <param>
          <type>std::vector&lt; std::vector&lt; short &gt; &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/dict/PackedContainerStreamer.cxx" line="189"/>
      </memberdef>
      <memberdef kind="function" id="dd/df9/PackedContainerStreamer_8cxx_1aa0f174cfb50d036a78617cc6b15c38d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>STREAMER</definition>
        <argsstring>(std::vector&lt; std::vector&lt; unsigned short &gt; &gt;)</argsstring>
        <name>STREAMER</name>
        <param>
          <type>std::vector&lt; std::vector&lt; unsigned short &gt; &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/dict/PackedContainerStreamer.cxx" line="190"/>
      </memberdef>
      <memberdef kind="function" id="dd/df9/PackedContainerStreamer_8cxx_1a78be55578ad48dd3f8e6adc5c886f380" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>STREAMER</definition>
        <argsstring>(std::vector&lt; std::vector&lt; int &gt; &gt;)</argsstring>
        <name>STREAMER</name>
        <param>
          <type>std::vector&lt; std::vector&lt; int &gt; &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/dict/PackedContainerStreamer.cxx" line="191"/>
      </memberdef>
      <memberdef kind="function" id="dd/df9/PackedContainerStreamer_8cxx_1aed3b2891b4c077feb5ed24d53b017fe9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>STREAMER</definition>
        <argsstring>(std::vector&lt; std::vector&lt; unsigned int &gt; &gt;)</argsstring>
        <name>STREAMER</name>
        <param>
          <type>std::vector&lt; std::vector&lt; unsigned int &gt; &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/dict/PackedContainerStreamer.cxx" line="192"/>
      </memberdef>
      <memberdef kind="function" id="dd/df9/PackedContainerStreamer_8cxx_1a8b2aca3fefbe431e36957b1d9d659cb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>STREAMER</definition>
        <argsstring>(std::vector&lt; std::vector&lt; float &gt; &gt;)</argsstring>
        <name>STREAMER</name>
        <param>
          <type>std::vector&lt; std::vector&lt; float &gt; &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/dict/PackedContainerStreamer.cxx" line="193"/>
      </memberdef>
      <memberdef kind="function" id="dd/df9/PackedContainerStreamer_8cxx_1a9210c7a1924af22973a283aeec126593" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>STREAMER</definition>
        <argsstring>(std::vector&lt; std::vector&lt; double &gt; &gt;)</argsstring>
        <name>STREAMER</name>
        <param>
          <type>std::vector&lt; std::vector&lt; double &gt; &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/dict/PackedContainerStreamer.cxx" line="194"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>$Id$</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d6/dda/PackedContainer_8h" kindref="compound" tooltip="Container to hold aux data to be stored in a packed form.">AthContainers/PackedContainer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d2/df1/PackedConverter_8h" kindref="compound" tooltip="Helper for packing/unpacking a PackedContainer to/from a stream.">AthContainers/PackedConverter.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;AthContainers/ClassName.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TClassStreamer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TMemberStreamer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TError.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TROOT.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">SG<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/d59/namespaceSG_1a4cc237ae64b6624b127c8fdd9d8c8226" kindref="member" tooltip="Write a set of packed parameters to a buffer.">writePackedParameters</ref>(<sp/>TBuffer&amp;<sp/>b,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/dc1/classSG_1_1PackedParameters" kindref="compound" tooltip="Describe how the contents of a PackedContainer are to be saved.">SG::PackedParameters</ref>&amp;<sp/>parms<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/>b<sp/>&lt;&lt;<sp/>parms.<ref refid="d5/dc1/classSG_1_1PackedParameters_1ab00ae71fdadeea196896a0a7fc85426a" kindref="member" tooltip="The number of bits used to store each element.">nbits</ref>();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/>b<sp/>&lt;&lt;<sp/>parms.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a2f1971577699df4279cb2b0803cca255" kindref="member" tooltip="Additional flags describing the packing.">flags</ref>();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parms.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a13e88b496167d3bc4c8ff7d96bf73ddc" kindref="member" tooltip="Are elements being written as floating-point numbers?">isFloat</ref>())<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>&lt;&lt;<sp/>parms.<ref refid="d5/dc1/classSG_1_1PackedParameters_1af705c32cce991271601d9f59f7f302fd" kindref="member" tooltip="The number of bits used for the mantissa portion of a float-point representation...">nmantissa</ref>();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parms.<ref refid="d5/dc1/classSG_1_1PackedParameters_1aacf60a8d55d998374064a260ac58c007" kindref="member" tooltip="Should floats be rescaled before writing?">hasScale</ref>())</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>&lt;&lt;<sp/>parms.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a2841715b42294fcde806e44b818a9d71" kindref="member" tooltip="Return the scale for floating-point numbers.">scale</ref>();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><ref refid="d5/dc1/classSG_1_1PackedParameters" kindref="compound" tooltip="Describe how the contents of a PackedContainer are to be saved.">SG::PackedParameters</ref><sp/><ref refid="dd/d59/namespaceSG_1a84d16a54a3ac43dc0a0a46db3ca9dc3d" kindref="member" tooltip="Read a set of packed parameters from a buffer.">readPackedParameters</ref>(<sp/>TBuffer&amp;<sp/>b<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/>uint8_t<sp/>nbits;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/>b<sp/>&gt;&gt;<sp/>nbits;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/>uint8_t<sp/>flags;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/>b<sp/>&gt;&gt;<sp/>flags;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><ref refid="d5/dc1/classSG_1_1PackedParameters" kindref="compound" tooltip="Describe how the contents of a PackedContainer are to be saved.">SG::PackedParameters</ref><sp/>parms<sp/>(nbits,<sp/>flags);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parms.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a13e88b496167d3bc4c8ff7d96bf73ddc" kindref="member" tooltip="Are elements being written as floating-point numbers?">isFloat</ref>())<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>nmantissa;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>&gt;&gt;<sp/>nmantissa;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parms.<ref refid="d5/dc1/classSG_1_1PackedParameters_1a8f0db66e9e394f5623f42dd66463629f" kindref="member" tooltip="Set the number of mantissa bits used in the packed representation.">setNmantissa</ref><sp/>(nmantissa);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parms.<ref refid="d5/dc1/classSG_1_1PackedParameters_1aacf60a8d55d998374064a260ac58c007" kindref="member" tooltip="Should floats be rescaled before writing?">hasScale</ref>())<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>&gt;&gt;<sp/>scale;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parms.<ref refid="d5/dc1/classSG_1_1PackedParameters_1aa85188c0b04fd4f53245f824e6d8e3aa" kindref="member" tooltip="Set the scale to use when packing floating-point data.">setScale</ref><sp/>(scale);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parms;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="71" refid="d5/db7/classSG_1_1PackedContainerStreamer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d5/db7/classSG_1_1PackedContainerStreamer" kindref="compound" tooltip="Streamer for reading/writing SG::PackedContainer instances.">PackedContainerStreamer</ref></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>TClassStreamer</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="d5/db7/classSG_1_1PackedContainerStreamer_1a9f01127407a78977708c00106e4b7c83" kindref="member" tooltip="Constructor.">PackedContainerStreamer</ref>();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/db7/classSG_1_1PackedContainerStreamer_1a8a0b20048edeaad2e23cef3436e8039a" kindref="member" tooltip="Run the streamer.">operator()</ref>(TBuffer<sp/>&amp;b,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*objp);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>std::string<sp/>m_className;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">};</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><ref refid="d5/db7/classSG_1_1PackedContainerStreamer_1a9f01127407a78977708c00106e4b7c83" kindref="member" tooltip="Constructor.">PackedContainerStreamer&lt;T&gt;::PackedContainerStreamer</ref>()</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>:<sp/>m_className(<sp/>ClassName&lt;<sp/>SG::<ref refid="dd/d01/classSG_1_1PackedContainer" kindref="compound" tooltip="Container to hold aux data to be stored in a packed form.">PackedContainer</ref>&lt;<sp/><ref refid="d1/def/classT" kindref="compound">T</ref><sp/>&gt;<sp/>&gt;::name()<sp/>)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/db7/classSG_1_1PackedContainerStreamer_1a8a0b20048edeaad2e23cef3436e8039a" kindref="member" tooltip="Run the streamer.">PackedContainerStreamer&lt;T&gt;::operator() </ref>(<sp/>TBuffer&amp;<sp/>b,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>objp<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><ref refid="dd/d01/classSG_1_1PackedContainer" kindref="compound" tooltip="Container to hold aux data to be stored in a packed form.">SG::PackedContainer&lt;T&gt;</ref>*<sp/>cont<sp/>=</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="dd/d01/classSG_1_1PackedContainer" kindref="compound" tooltip="Container to hold aux data to be stored in a packed form.">SG::PackedContainer&lt;T&gt;</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/>(objp);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b.IsReading())<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt_t<sp/>R__s,<sp/>R__c;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Version_t<sp/>R__v<sp/>=<sp/>b.ReadVersion(&amp;R__s,<sp/>&amp;R__c);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(R__v<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>(</highlight><highlight class="stringliteral">&quot;PackedContainerStreamer&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>version<sp/>%d<sp/>for<sp/>object<sp/>of<sp/>type<sp/>%s<sp/>(expected<sp/>1)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R__v,<sp/>m_className.c_str());</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cont-&gt;<ref refid="dd/d01/classSG_1_1PackedContainer_1a85141bf981e153f7ffa4a6298f13c035" kindref="member" tooltip="Set the packing parameters.">setParms</ref><sp/>(<ref refid="dd/d59/namespaceSG_1a84d16a54a3ac43dc0a0a46db3ca9dc3d" kindref="member" tooltip="Read a set of packed parameters from a buffer.">readPackedParameters</ref><sp/>(b));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>nelt;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>&gt;&gt;<sp/>nelt;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d4e/classSG_1_1PackedConverter" kindref="compound" tooltip="Helper for packing/unpacking a PackedContainer to/from a stream.">SG::PackedConverter</ref><sp/>cnv<sp/>(cont-&gt;<ref refid="dd/d01/classSG_1_1PackedContainer_1a8c19d41995ddda20f991053d21ac8afe" kindref="member" tooltip="Return the packing parameters for this container.">parms</ref>());</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cnv.read<sp/>(nelt,<sp/>*cont,<sp/>b);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b.CheckByteCount(R__s,<sp/>R__c,<sp/>m_className.c_str());</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt_t<sp/>R__c<sp/>=<sp/>b.Length();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b.SetBufferOffset<sp/>(R__c<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(UInt_t));</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>&lt;&lt;<sp/>Version_t(1);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d59/namespaceSG_1a4cc237ae64b6624b127c8fdd9d8c8226" kindref="member" tooltip="Write a set of packed parameters to a buffer.">writePackedParameters</ref><sp/>(b,<sp/>cont-&gt;<ref refid="dd/d01/classSG_1_1PackedContainer_1a8c19d41995ddda20f991053d21ac8afe" kindref="member" tooltip="Return the packing parameters for this container.">parms</ref>());</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>nelt<sp/>=<sp/>cont-&gt;size();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>&lt;&lt;<sp/>nelt;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d4e/classSG_1_1PackedConverter" kindref="compound" tooltip="Helper for packing/unpacking a PackedContainer to/from a stream.">SG::PackedConverter</ref><sp/>cnv<sp/>(cont-&gt;<ref refid="dd/d01/classSG_1_1PackedContainer_1a8c19d41995ddda20f991053d21ac8afe" kindref="member" tooltip="Return the packing parameters for this container.">parms</ref>());</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cnv.write<sp/>(cont-&gt;size(),<sp/>*cont,<sp/>b);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b.SetByteCount(R__c,<sp/>kTRUE);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">InstallPackedContainerStreamer;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>SG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STREAMER(TYPE)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="159"><highlight class="preprocessor"><sp/><sp/>namespace<sp/>ROOT<sp/>{<sp/>TGenericClassInfo*<sp/>GenerateInitInstance(const<sp/>SG::PackedContainer&lt;TYPE&gt;*);}<sp/>\</highlight></codeline>
<codeline lineno="160"><highlight class="preprocessor"><sp/><sp/>namespace<sp/>SG<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="161"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;&gt;<sp/>struct<sp/>InstallPackedContainerStreamer&lt;TYPE&gt;<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="162"><highlight class="preprocessor"><sp/><sp/>InstallPackedContainerStreamer()<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="163"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ROOT::GenerateInitInstance((SG::PackedContainer&lt;TYPE&gt;*)nullptr)-&gt;AdoptStreamer<sp/>(new<sp/>PackedContainerStreamer&lt;TYPE&gt;)<sp/>;<sp/>\</highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor"><sp/><sp/>}<sp/>};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="165"><highlight class="preprocessor"><sp/><sp/>InstallPackedContainerStreamer&lt;TYPE&gt;<sp/>_R__UNIQUE_(streamerInstance);<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="166"><highlight class="preprocessor"><sp/><sp/>}<sp/>class<sp/>swallowSemicolon</highlight></codeline>
<codeline lineno="167"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal">STREAMER(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="170"><highlight class="normal">STREAMER(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="171"><highlight class="normal">STREAMER(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="172"><highlight class="normal">STREAMER(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="173"><highlight class="normal">STREAMER(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="174"><highlight class="normal">STREAMER(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal">STREAMER(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="176"><highlight class="normal">STREAMER(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal">STREAMER(std::vector&lt;char&gt;);</highlight></codeline>
<codeline lineno="179"><highlight class="normal">STREAMER(std::vector&lt;unsigned<sp/>char&gt;);</highlight></codeline>
<codeline lineno="180"><highlight class="normal">STREAMER(std::vector&lt;short&gt;);</highlight></codeline>
<codeline lineno="181"><highlight class="normal">STREAMER(std::vector&lt;unsigned<sp/>short&gt;);</highlight></codeline>
<codeline lineno="182"><highlight class="normal">STREAMER(std::vector&lt;int&gt;);</highlight></codeline>
<codeline lineno="183"><highlight class="normal">STREAMER(std::vector&lt;unsigned<sp/>int&gt;);</highlight></codeline>
<codeline lineno="184"><highlight class="normal">STREAMER(std::vector&lt;float&gt;);</highlight></codeline>
<codeline lineno="185"><highlight class="normal">STREAMER(std::vector&lt;double&gt;);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal">STREAMER(std::vector&lt;std::vector&lt;char&gt;<sp/>&gt;);</highlight></codeline>
<codeline lineno="188"><highlight class="normal">STREAMER(std::vector&lt;std::vector&lt;unsigned<sp/>char&gt;<sp/>&gt;);</highlight></codeline>
<codeline lineno="189"><highlight class="normal">STREAMER(std::vector&lt;std::vector&lt;short&gt;<sp/>&gt;);</highlight></codeline>
<codeline lineno="190"><highlight class="normal">STREAMER(std::vector&lt;std::vector&lt;unsigned<sp/>short&gt;<sp/>&gt;);</highlight></codeline>
<codeline lineno="191"><highlight class="normal">STREAMER(std::vector&lt;std::vector&lt;int&gt;<sp/>&gt;);</highlight></codeline>
<codeline lineno="192"><highlight class="normal">STREAMER(std::vector&lt;std::vector&lt;unsigned<sp/>int&gt;<sp/>&gt;);</highlight></codeline>
<codeline lineno="193"><highlight class="normal">STREAMER(std::vector&lt;std::vector&lt;float&gt;<sp/>&gt;);</highlight></codeline>
<codeline lineno="194"><highlight class="normal">STREAMER(std::vector&lt;std::vector&lt;double&gt;<sp/>&gt;);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>STREAMER</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AthContainers/Root/dict/PackedContainerStreamer.cxx"/>
  </compounddef>
</doxygen>
