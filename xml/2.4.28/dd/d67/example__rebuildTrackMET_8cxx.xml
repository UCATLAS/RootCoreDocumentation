<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="dd/d67/example__rebuildTrackMET_8cxx" kind="file">
    <compoundname>example_rebuildTrackMET.cxx</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="dd/d67/example__rebuildTrackMET_8cxx_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/METUtilities/util/example_rebuildTrackMET.cxx" line="5" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/METUtilities/util/example_rebuildTrackMET.cxx" bodystart="5" bodyend="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//Author:<sp/>Russell<sp/>Smith</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//Email<sp/>:<sp/>rsmith@cern.ch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//Date<sp/><sp/>:<sp/>February<sp/>2015</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>XAOD_ANALYSIS</highlight></codeline>
<codeline lineno="5"><highlight class="preprocessor"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()<sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Examples<sp/>are<sp/>only<sp/>defined<sp/>in<sp/>the<sp/>analysis<sp/>release.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="8"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>XAOD_STANDALONE</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODRootAccess/Init.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODRootAccess/TEvent.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODRootAccess/TStore.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;POOLRootAccess/TEvent.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;StoreGate/StoreGateSvc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FrameWork<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;AsgTools/MessageCheck.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">asg::msgUserCode;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;AsgTools/AnaToolHandle.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODMissingET/MissingETAuxContainer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODMissingET/MissingETAssociationMap.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODMissingET/MissingETContainer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODCore/ShallowAuxContainer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODCore/ShallowCopy.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODJet/JetContainer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODEgamma/ElectronContainer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODEgamma/PhotonContainer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODMuon/MuonContainer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODTau/TauJetContainer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODBase/IParticleContainer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODBase/IParticleHelpers.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TFile.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TSystem.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;JetCalibTools/JetCalibrationTool.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;METUtilities/METSystematicsTool.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;METUtilities/METMaker.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;PATInterfaces/SystematicRegistry.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODCore/tools/IOStats.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODCore/tools/ReadStats.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>argv[])<sp/>{std::cout<sp/>&lt;&lt;<sp/>__PRETTY_FUNCTION__<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>XAOD_STANDALONE</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><ref refid="dd/d44/namespacexAOD_1a2b6ff6013c964ff2254bd3540cd1738d" kindref="member">xAOD::Init</ref>()<sp/>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//enable<sp/>status<sp/>code<sp/>failures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><ref refid="db/d8a/classCP_1_1CorrectionCode_1af2337c3c4b130cd6bc26538b7b73a214" kindref="member" tooltip="Enable failure (with a backtrace) on an unchecked correction code.">CP::CorrectionCode::enableFailure</ref>();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><ref refid="d1/d38/classCP_1_1SystematicCode_1a72dc5f356e55dba77bace74fef3237d3" kindref="member" tooltip="Enable failure (with a backtrace) on an unchecked systematic code.">CP::SystematicCode::enableFailure</ref>();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>StatusCode::enableFailure();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="d1/da4/classxAOD_1_1TReturnCode_1a964ddeb467cb17b57874ee27399217e8" kindref="member" tooltip="Enable failure (with a backtrace) on an unchecked return code.">xAOD::TReturnCode::enableFailure</ref>();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>IAppMgrUI*<sp/>app<sp/>=<sp/>POOL::Init();<sp/></highlight><highlight class="comment">//important<sp/>to<sp/>do<sp/>this<sp/>first!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>invisEle(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>TString<sp/>fileName<sp/>=<sp/>gSystem-&gt;Getenv(</highlight><highlight class="stringliteral">&quot;ASG_TEST_FILE_MC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>std::string<sp/>jetType<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;AntiKt4EMTopo&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;argc;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::string(argv[i])<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;-filen&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>i+1&lt;argc)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fileName<sp/>=<sp/>argv[i+1];</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::string(argv[i])<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;-jetcoll&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>i+1&lt;argc)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jetType<sp/>=<sp/>argv[i+1];</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::string(argv[i])<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;-invisEle&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>invisEle=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::string(argv[i])<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;-debug&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>debug<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//this<sp/>test<sp/>file<sp/>should<sp/>work.<sp/><sp/>Feel<sp/>free<sp/>to<sp/>contact<sp/>me<sp/>if<sp/>there<sp/>is<sp/>a<sp/>problem<sp/>with<sp/>the<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>std::auto_ptr&lt;<sp/>TFile<sp/>&gt;<sp/>ifile(<sp/>TFile::Open(<sp/>fileName,<sp/></highlight><highlight class="stringliteral">&quot;READ&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>assert(<sp/>ifile.get()<sp/>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>TEvent<sp/>object<sp/>to<sp/>read<sp/>from<sp/>file<sp/>and<sp/>a<sp/>transient<sp/>store<sp/>in<sp/>which<sp/>to<sp/>place<sp/>items</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>XAOD_STANDALONE</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;xAOD::TEvent&gt;<sp/>event(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="de/d95/classxAOD_1_1TEvent" kindref="compound" tooltip="Tool for accessing xAOD files outside of Athena.">xAOD::TEvent</ref>(<sp/><ref refid="de/d95/classxAOD_1_1TEvent_1a02e3b91306a978cdbe478a5bdf03b348aeafc802359754d9d902f97791f20d9ec" kindref="member" tooltip="Access auxiliary data using the aux containers.">xAOD::TEvent::kClassAccess</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;xAOD::TStore&gt;<sp/>store(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dd/dae/classxAOD_1_1TStore" kindref="compound">xAOD::TStore</ref>());</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/>//<sp/>Athena<sp/>&quot;Store&quot;<sp/>is<sp/>the<sp/>same<sp/>StoreGate<sp/>used<sp/>by<sp/>the<sp/>TEvent</highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;POOL::TEvent&gt;<sp/>event(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>POOL::TEvent(<sp/>POOL::TEvent::kClassAccess<sp/>));</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>ServiceHandle&lt;StoreGateSvc&gt;&amp;<sp/>store<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;evtStore();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="94"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>ANA_CHECK(<sp/>event-&gt;readFrom(<sp/>ifile.get()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>creation<sp/>and<sp/>set<sp/>properties<sp/>of<sp/>the<sp/>tools</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>you<sp/>need<sp/>to<sp/>set<sp/>properties,<sp/>you<sp/>should<sp/>do<sp/>so<sp/>before<sp/>initialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>asg::AnaToolHandle&lt;IJetCalibrationTool&gt;<sp/>jetCalibrationTool;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>ANA_CHECK(<sp/>ASG_MAKE_ANA_TOOL(<sp/>jetCalibrationTool,<sp/><ref refid="d8/d62/classJetCalibrationTool" kindref="compound">JetCalibrationTool</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>jetCalibrationTool.setName(</highlight><highlight class="stringliteral">&quot;jetCalibTool&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>ANA_CHECK(<sp/>jetCalibrationTool.setProperty(</highlight><highlight class="stringliteral">&quot;JetCollection&quot;</highlight><highlight class="normal">,<sp/>jetType)<sp/>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>ANA_CHECK(<sp/>jetCalibrationTool.setProperty(</highlight><highlight class="stringliteral">&quot;ConfigFile&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;JES_MC15cRecommendation_May2016.config&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>ANA_CHECK(<sp/>jetCalibrationTool.setProperty(</highlight><highlight class="stringliteral">&quot;CalibSequence&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;JetArea_Residual_EtaJES_GSC&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>ANA_CHECK(<sp/>jetCalibrationTool.setProperty(</highlight><highlight class="stringliteral">&quot;IsData&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>ANA_CHECK(<sp/>jetCalibrationTool.retrieve()<sp/>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>asg::AnaToolHandle&lt;IMETSystematicsTool&gt;<sp/>metSystTool;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>metSystTool.setTypeAndName(</highlight><highlight class="stringliteral">&quot;met::METSystematicsTool/metSystTool&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>ANA_CHECK(<sp/>metSystTool.setProperty(</highlight><highlight class="stringliteral">&quot;ConfigJetTrkFile&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;JetTrackSyst.config&quot;</highlight><highlight class="normal"><sp/>));</highlight><highlight class="comment">//this<sp/>is<sp/>needed<sp/>to<sp/>do<sp/>jet<sp/>track<sp/>systematics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ANA_CHECK(<sp/>metSystTool.setProperty(&quot;UseDevArea&quot;<sp/><sp/><sp/><sp/><sp/><sp/>,true<sp/>));<sp/>//<sp/>To<sp/>get<sp/>the<sp/>configs<sp/>from<sp/>GROUPDATA/dev/METUtilities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>ANA_CHECK(<sp/>metSystTool.retrieve()<sp/>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>asg::AnaToolHandle&lt;IMETMaker&gt;<sp/>metMaker;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>metMaker.setTypeAndName(</highlight><highlight class="stringliteral">&quot;met::METMaker/metMaker&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>ANA_CHECK(<sp/>metMaker.setProperty(</highlight><highlight class="stringliteral">&quot;DoMuonEloss&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>ANA_CHECK(<sp/>metMaker.setProperty(</highlight><highlight class="stringliteral">&quot;DoIsolMuonEloss&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>ANA_CHECK(<sp/>metMaker.retrieve()<sp/>);<sp/><sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>output<sp/>xAOD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;TFile&gt;<sp/>outfile(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TFile(</highlight><highlight class="stringliteral">&quot;example_METUtilities.root&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;RECREATE&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(Long64_t<sp/>ievent<sp/>=<sp/>0;<sp/><sp/>ievent<sp/>&lt;<sp/>std::min(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(event-&gt;getEntries()),<sp/>100);<sp/>++ievent){</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ievent<sp/>%<sp/>10<sp/>==<sp/>0)<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;event<sp/>number:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ievent<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK(<sp/>event-&gt;getEntry(ievent)<sp/>&gt;=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//retrieve<sp/>the<sp/>original<sp/>containers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this<sp/>contains<sp/>all<sp/>constituents<sp/>not<sp/>associated<sp/>to<sp/>a<sp/>jet/misc<sp/>term</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d90/classxAOD_1_1MissingETContainer__v1" kindref="compound" tooltip="Container for xAOD::MissingET_v1 objects.">xAOD::MissingETContainer</ref>*<sp/>coreMet<sp/><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>coreMetKey<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;MET_Core_&quot;</highlight><highlight class="normal"><sp/>+<sp/>jetType;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK(<sp/>event-&gt;retrieve(coreMet,<sp/>coreMetKey)<sp/>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(debug)<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Using<sp/>core<sp/>MET<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>coreMet<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::ElectronContainer</ref>*<sp/>electrons<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK(<sp/>event-&gt;retrieve(electrons,<sp/></highlight><highlight class="stringliteral">&quot;Electrons&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::MuonContainer</ref>*<sp/>muons<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK(<sp/>event-&gt;retrieve(muons,<sp/></highlight><highlight class="stringliteral">&quot;Muons&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this<sp/>should<sp/>probably<sp/>be<sp/>a<sp/>calibrated<sp/>jet<sp/>container.<sp/><sp/>See<sp/>the<sp/>METUtilities<sp/>twiki<sp/>for<sp/>more<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::JetContainer</ref>*<sp/>uncalibJets<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK(<sp/>event-&gt;retrieve(uncalibJets,<sp/>jetType+</highlight><highlight class="stringliteral">&quot;Jets&quot;</highlight><highlight class="normal">));</highlight><highlight class="comment">//this<sp/>retrieves<sp/>and<sp/>applies<sp/>the<sp/>correction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;<sp/>xAOD::JetContainer*,<sp/>xAOD::ShallowAuxContainer*<sp/>&gt;<sp/>calibJetsPair<sp/>=<sp/><ref refid="dd/d44/namespacexAOD_1a085ed78569d97f9ff21bea6a65b4aea3" kindref="member">xAOD::shallowCopyContainer</ref>(<sp/>*uncalibJets<sp/>);</highlight><highlight class="comment">//make<sp/>a<sp/>shallow<sp/>copy<sp/>to<sp/>calibrate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d4d/classDataVector" kindref="compound" tooltip="Derived DataVector&amp;lt;T&amp;gt;.">xAOD::JetContainer</ref><sp/>*&amp;<sp/>calibJets<sp/>=<sp/>calibJetsPair.first;</highlight><highlight class="comment">//create<sp/>a<sp/>reference<sp/>to<sp/>the<sp/>first<sp/>element<sp/>of<sp/>the<sp/>pair<sp/>(i.e.<sp/>the<sp/>JetContainer)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>jet<sp/>:<sp/>*calibJets<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Shallow<sp/>copy<sp/>is<sp/>needed<sp/>(see<sp/>links<sp/>below)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!jetCalibrationTool-&gt;applyCalibration(*jet))</highlight><highlight class="comment">//apply<sp/>the<sp/>calibration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="dd/d44/namespacexAOD_1aa108b70e3dc400e02b467577c8b06368" kindref="member" tooltip="Function setting a link on a deep copy back to its original object.">xAOD::setOriginalObjectLink</ref>(*uncalibJets,<sp/>*calibJets)){</highlight><highlight class="comment">//tell<sp/>calib<sp/>container<sp/>what<sp/>old<sp/>container<sp/>it<sp/>matches</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>the<sp/>original<sp/>object<sp/>links&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK(<sp/>store-&gt;record(calibJets,<sp/></highlight><highlight class="stringliteral">&quot;CalibJets&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//retrieve<sp/>the<sp/>MET<sp/>association<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/d3a/classxAOD_1_1MissingETAssociationMap__v1" kindref="compound">xAOD::MissingETAssociationMap</ref>*<sp/>metMap<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>metAssocKey<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;METAssoc_&quot;</highlight><highlight class="normal"><sp/>+<sp/>jetType;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK(<sp/>event-&gt;retrieve(metMap,<sp/>metAssocKey)<sp/>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//get<sp/>the<sp/>set<sp/>of<sp/>recommended<sp/>systematics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d6e/classCP_1_1SystematicRegistry" kindref="compound">CP::SystematicRegistry</ref>&amp;<sp/>registry<sp/>=<sp/><ref refid="d4/d6e/classCP_1_1SystematicRegistry_1a6bfc41e5ad75c56240e635dba9423ad1" kindref="member" tooltip="Get the singleton instance of the registry.">CP::SystematicRegistry::getInstance</ref>();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">CP::SystematicSet</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/>recSysList<sp/><sp/>=<sp/>registry.recommendedSystematics();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//start<sp/>the<sp/>loop<sp/>over<sp/>systematics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//For<sp/>each<sp/>systematic,<sp/>we<sp/>create<sp/>an<sp/>output<sp/>MissingET<sp/>container</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(CP::SystematicSet::const_iterator<sp/>isys<sp/>=<sp/>recSysList.<ref refid="d4/d52/classCP_1_1SystematicSet_1a2bb1825a4d51bbced328ff42ffda8316" kindref="member" tooltip="description: const iterator to the beginning of the set">begin</ref>();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>isys<sp/>!=<sp/>recSysList.<ref refid="d4/d52/classCP_1_1SystematicSet_1aa89eea0473b865d52295c272c7b5b944" kindref="member" tooltip="description: const iterator to the end of the set">end</ref>();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>++isys)<sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print<sp/>the<sp/>systematics<sp/>on<sp/>the<sp/>first<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>only<sp/>using<sp/>the<sp/>METSystematicsTool,<sp/>this<sp/>will<sp/>be<sp/>the<sp/>list<sp/>of<sp/>recommended<sp/>systematics<sp/>for<sp/>that<sp/>tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if(ievent<sp/>==<sp/>0)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>MissingETContainer<sp/>with<sp/>its<sp/>aux<sp/>store<sp/>for<sp/>each<sp/>systematic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d90/classxAOD_1_1MissingETContainer__v1" kindref="compound" tooltip="Container for xAOD::MissingET_v1 objects.">xAOD::MissingETContainer</ref>*<sp/><sp/><sp/><sp/>newMetContainer<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d0/d90/classxAOD_1_1MissingETContainer__v1" kindref="compound" tooltip="Container for xAOD::MissingET_v1 objects.">xAOD::MissingETContainer</ref>();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/dbe/classxAOD_1_1MissingETAuxContainer__v1" kindref="compound" tooltip="Auxiliary data store for xAOD::MissingETContainer.">xAOD::MissingETAuxContainer</ref>*<sp/>newMetAuxContainer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d9/dbe/classxAOD_1_1MissingETAuxContainer__v1" kindref="compound" tooltip="Auxiliary data store for xAOD::MissingETContainer.">xAOD::MissingETAuxContainer</ref>();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newMetContainer-&gt;setStore(newMetAuxContainer);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>necessary<sp/>to<sp/>reset<sp/>the<sp/>selected<sp/>objects<sp/>before<sp/>every<sp/>MET<sp/>calculation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>metMap-&gt;resetObjSelectionFlags();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//here<sp/>we<sp/>apply<sp/>some<sp/>basic<sp/>cuts<sp/>and<sp/>rebuild<sp/>the<sp/>met<sp/>at<sp/>each<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Electrons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/db1/classConstDataVector" kindref="compound" tooltip="DataVector adapter that acts like it holds const pointers.">ConstDataVector&lt;xAOD::ElectronContainer&gt;</ref><sp/>invisElectrons(<ref refid="dd/d59/namespaceSG_1acd9d1a31242c6243cc1c6fab0fbc7cd8ad7d4cf2303700f0966e4140f236c4bf1" kindref="member" tooltip="this data object is a view, it does not own its elmts">SG::VIEW_ELEMENTS</ref>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/db1/classConstDataVector" kindref="compound" tooltip="DataVector adapter that acts like it holds const pointers.">ConstDataVector&lt;xAOD::ElectronContainer&gt;</ref><sp/>metElectrons(<ref refid="dd/d59/namespaceSG_1acd9d1a31242c6243cc1c6fab0fbc7cd8ad7d4cf2303700f0966e4140f236c4bf1" kindref="member" tooltip="this data object is a view, it does not own its elmts">SG::VIEW_ELEMENTS</ref>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>el<sp/>:<sp/>*electrons)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(el-&gt;pt()&gt;20e3<sp/>&amp;&amp;<sp/>el-&gt;eta()&lt;2.47)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(invisEle)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invisElectrons.push_back(el);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//<sp/>else<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>metElectrons.push_back(el);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!invisElectrons.empty()){</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>ANA_CHECK(<sp/>metMaker-&gt;markInvisible(invisElectrons.asDataVector(),metMap,newMetContainer)<sp/>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(<sp/>metMaker-&gt;rebuildMET(</highlight><highlight class="stringliteral">&quot;TrkEle&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//name<sp/>of<sp/>metElectrons<sp/>in<sp/>metContainer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/dc8/namespacexAOD_1_1Type_1a96c48d2d85466ace623036af49f84434a0199381ad718edc5748453cf69eb0fed" kindref="member" tooltip="The object is an electron.">xAOD::Type::Electron</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//telling<sp/>the<sp/>rebuilder<sp/>that<sp/>this<sp/>is<sp/>electron<sp/>met</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newMetContainer,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//filling<sp/>this<sp/>met<sp/>container</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metElectrons.asDataVector(),</highlight><highlight class="comment">//using<sp/>these<sp/>metElectrons<sp/>that<sp/>accepted<sp/>our<sp/>cuts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metMap)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//and<sp/>this<sp/>association<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Muons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/db1/classConstDataVector" kindref="compound" tooltip="DataVector adapter that acts like it holds const pointers.">ConstDataVector&lt;xAOD::MuonContainer&gt;</ref><sp/>metMuons(<ref refid="dd/d59/namespaceSG_1acd9d1a31242c6243cc1c6fab0fbc7cd8ad7d4cf2303700f0966e4140f236c4bf1" kindref="member" tooltip="this data object is a view, it does not own its elmts">SG::VIEW_ELEMENTS</ref>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mu<sp/>:<sp/>*muons)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mu-&gt;pt()&gt;20e3<sp/>&amp;&amp;<sp/>mu-&gt;eta()&lt;2.4)<sp/>metMuons.push_back(mu);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(<sp/>metMaker-&gt;rebuildMET(</highlight><highlight class="stringliteral">&quot;TrkMuons&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/dc8/namespacexAOD_1_1Type_1a96c48d2d85466ace623036af49f84434af612e5722903badfe4fd0fd721fc4b13" kindref="member" tooltip="The object is a muon.">xAOD::Type::Muon</ref>,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newMetContainer,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metMuons.asDataVector(),</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metMap)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>rebuilding<sp/>track<sp/>MET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(<sp/><sp/>metMaker-&gt;rebuildTrackMET(</highlight><highlight class="stringliteral">&quot;TrkJet&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//name<sp/>of<sp/>jet<sp/>track<sp/>met</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;PVSoftTrk&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//name<sp/>of<sp/>soft<sp/>track<sp/>term<sp/>met</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newMetContainer,</highlight><highlight class="comment">//adding<sp/>to<sp/>this<sp/>new<sp/>met<sp/>container</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calibJets,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//using<sp/>this<sp/>jet<sp/>collection<sp/>to<sp/>calculate<sp/>jet<sp/>track<sp/>met</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coreMet,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//core<sp/>met<sp/>container</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metMap,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//with<sp/>this<sp/>association<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//don&apos;t<sp/>apply<sp/>jet<sp/>jvt<sp/>cut</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this<sp/>is<sp/>kind<sp/>of<sp/>annoying,<sp/>but<sp/>applySystematicVariation<sp/>only<sp/>takes<sp/>a<sp/>SystematicSet,<sp/>but<sp/>*isys<sp/>is<sp/>a<sp/>SystematicVariation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//We<sp/>use<sp/>the<sp/>SystematicSet<sp/>constructor<sp/>which<sp/>just<sp/>takes<sp/>a<sp/>SystematicVariation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">CP::SystematicSet</ref><sp/>iSysSet(<sp/>(*isys).name());</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//tell<sp/>the<sp/>tool<sp/>that<sp/>we<sp/>are<sp/>using<sp/>this<sp/>SystematicSet<sp/>(of<sp/>one<sp/>SystematicVariation<sp/>for<sp/>now)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//after<sp/>this<sp/>call,<sp/>when<sp/>we<sp/>use<sp/>applyCorrection,<sp/>the<sp/>given<sp/>met<sp/>term<sp/>will<sp/>be<sp/>adjusted<sp/>with<sp/>this<sp/>systematic<sp/>applied</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(<sp/>metSystTool-&gt;applySystematicVariation(iSysSet)<sp/>);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>metSystTool-&gt;setRandomSeed(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(1e6*(*newMetContainer)[</highlight><highlight class="stringliteral">&quot;PVSoftTrk&quot;</highlight><highlight class="normal">]-&gt;phi())<sp/>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound" tooltip="Principal data object for Missing ET.">xAOD::MissingET</ref><sp/>*<sp/>softTrkMet<sp/>=<sp/>(*newMetContainer)[</highlight><highlight class="stringliteral">&quot;PVSoftTrk&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(<sp/>softTrkMet<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//check<sp/>we<sp/>retrieved<sp/>the<sp/>soft<sp/>trk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(<sp/>metSystTool-&gt;applyCorrection(*softTrkMet)<sp/>);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(debug)<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Soft<sp/>track<sp/>met:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>softTrkMet-&gt;<ref refid="dd/d06/classxAOD_1_1MissingET__v1_1a626a6075dca3a5f4dcc0ab3c20409120" kindref="member" tooltip="Returns .">met</ref>();</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>doing<sp/>track<sp/>MET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d06/classxAOD_1_1MissingET__v1" kindref="compound" tooltip="Principal data object for Missing ET.">xAOD::MissingET</ref><sp/>*<sp/>jetTrkMet<sp/>=<sp/>(*newMetContainer)[</highlight><highlight class="stringliteral">&quot;TrkJet&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(<sp/>jetTrkMet<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(<sp/>metSystTool-&gt;applyCorrection(*jetTrkMet,<sp/>metMap));</highlight><highlight class="comment">//for<sp/>jetTrkMet<sp/>correction,<sp/>we<sp/>need<sp/>the<sp/>METAssociationMap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(debug)<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Jet<sp/>track<sp/>met:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>jetTrkMet-&gt;<ref refid="dd/d06/classxAOD_1_1MissingET__v1_1a626a6075dca3a5f4dcc0ab3c20409120" kindref="member" tooltip="Returns .">met</ref>();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this<sp/>builds<sp/>the<sp/>final<sp/>track<sp/>or<sp/>cluster<sp/>met<sp/>sums,<sp/>using<sp/>systematic<sp/>varied<sp/>container</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//In<sp/>the<sp/>future,<sp/>you<sp/>will<sp/>be<sp/>able<sp/>to<sp/>run<sp/>both<sp/>of<sp/>these<sp/>on<sp/>the<sp/>same<sp/>container<sp/>to<sp/>easily<sp/>output<sp/>CST<sp/>and<sp/>TST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(<sp/>metMaker-&gt;buildMETSum(</highlight><highlight class="stringliteral">&quot;FinalTrk&quot;</highlight><highlight class="normal"><sp/>,<sp/>newMetContainer,<sp/><ref refid="d3/dee/structMissingETBase_1_1Source_1aa3795ae1de46033132693d8a09ec7635a64d663e60c72fc2e88ce83d5efd7dcb8" kindref="member" tooltip="Indicator for MET contribution from reconstructed charged particle tracks.">MissingETBase::Source::Track</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ANA_CHECK(<sp/>metMaker-&gt;buildMETSum(&quot;FinalClus&quot;,<sp/>newMetContainer,<sp/>MissingETBase::Source::LCTopo)<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//we<sp/>record<sp/>the<sp/>container<sp/>to<sp/>the<sp/>store,<sp/>with<sp/>a<sp/>systematic<sp/>indicated<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(<sp/>store-&gt;record(<sp/>newMetContainer,<sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;FinalMETContainer_&quot;</highlight><highlight class="normal"><sp/>+<sp/>iSysSet.name()<sp/><sp/><sp/><sp/><sp/><sp/>));</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ANA_CHECK(<sp/>store-&gt;record(<sp/>newMetAuxContainer,<sp/></highlight><highlight class="stringliteral">&quot;FinalMETContainer_&quot;</highlight><highlight class="normal"><sp/>+<sp/>iSysSet.name()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Aux.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>XAOD_STANDALONE<sp/>//<sp/>POOL::TEvent<sp/>should<sp/>handle<sp/>this<sp/>when<sp/>changing<sp/>events</highlight></codeline>
<codeline lineno="260"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fill<sp/>the<sp/>containers<sp/>stored<sp/>in<sp/>the<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//to<sp/>the<sp/>output<sp/>file<sp/>and<sp/>clear<sp/>the<sp/>transient<sp/>store</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(event-&gt;fill());</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>store-&gt;clear();</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="265"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>XAOD_STANDALONE<sp/>//<sp/>POOL::TEvent<sp/>should<sp/>handle<sp/>this<sp/>when<sp/>changing<sp/>events</highlight></codeline>
<codeline lineno="268"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>app-&gt;finalize();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="270"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><ref refid="d2/d34/classxAOD_1_1IOStats_1ae4117e7fcedb5d1b7aa79231e9cb0c89" kindref="member" tooltip="Singleton object accessor.">xAOD::IOStats::instance</ref>().stats().printSmartSlimmingBranchList();</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/METUtilities/util/example_rebuildTrackMET.cxx"/>
  </compounddef>
</doxygen>
