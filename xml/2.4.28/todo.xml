<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="todo" kind="page">
    <compoundname>todo</compoundname>
    <title>Todo List</title>
    <detaileddescription>
<para><anchor id="todo_1_todo000004"/> <variablelist>
<varlistentry><term>Namespace <ref refid="d8/dd2/namespace" kindref="compound">@201</ref>  </term></varlistentry>
<listitem><para>Test more features:<itemizedlist>
<listitem><para>ORFlags doXXX object flags =&gt; check configured tools</para></listitem><listitem><para>Global config options: labels, boostedLeptons, outputPassValue</para></listitem><listitem><para>Pre-configuration and post-configuration of tools </para></listitem></itemizedlist>
</para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000035"/> <variablelist>
<varlistentry><term>Group <ref refid="d2/d30/classxAOD_1_1Muon__v1_1amgrpa517747c3d12f99244ae598910d979c5" kindref="member">Author</ref>  </term></varlistentry>
<listitem><para>- update and add documentation. </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000005"/> <variablelist>
<varlistentry><term>Class <ref refid="dd/df8/classEL_1_1DuplicateChecker" kindref="compound">EL::DuplicateChecker</ref>  </term></varlistentry>
<listitem><para>add documentation </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000058"/> <variablelist>
<varlistentry><term>Group <ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1amgrpf0177ac19b7440058ab5b27bf05c7d3b" kindref="member">Functions implementing the xAOD::IParticle interface</ref>  </term></varlistentry>
<listitem><para>Add mappings of e.g. isPrimary, isDecayed, isPrompt, isFromDecay, hasHadronicDecay, hasLeptonicDecay, isHadronic/LeptonicTau ... </para><para>Add isFirstWith, isLastWith </para><para>Add isFirstWith, isLastWith </para><para>Add isFirstWith, isLastWith </para><para>Add isFirstWith, isLastWith </para><para>Add isFirstWith, isLastWith </para><para>Add isFirstWith, isLastWith </para><para>Add isFirstWith, isLastWith </para><para>Add isFirstWith, isLastWith </para><para>Add isFirstWith, isLastWith </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000009"/> <variablelist>
<varlistentry><term>Member <ref refid="dc/d63/GeneratorName_8h_1a744ea71c4e664a7989047e6e24f944b0" kindref="member">generator_name</ref>  </term></varlistentry>
<listitem><para>This scheme doesn&apos;t work anymore... </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000010"/> <variablelist>
<varlistentry><term>File <ref refid="dc/d63/GeneratorName_8h" kindref="compound">GeneratorName.h</ref>  </term></varlistentry>
<listitem><para>This thing is a mess that completely breaks down with LHE files and new gens. REMOVE! </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000040"/> <variablelist>
<varlistentry><term>Group <ref refid="d2/d30/classxAOD_1_1Muon__v1_1amgrpbd908db5ccb07777ced8023dffc802f4" kindref="member">Links</ref>  </term></varlistentry>
<listitem><para>finish documentation </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000034"/> <variablelist>
<varlistentry><term>Member <ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1ae0144b06bac25812c0e486c6114592e7" kindref="member">MissingETBase::Types::objlink_vector_t</ref>  </term></varlistentry>
<listitem><para>Check behaviour of ElementLinkVector&lt;xAOD::IParticleContainer&gt; if incomplete ElementLink&lt;xAOD::IParticleContainer&gt; may exist! </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000002"/> <variablelist>
<varlistentry><term>Class <ref refid="d1/dda/classORUtils_1_1MuJetOverlapTool" kindref="compound">ORUtils::MuJetOverlapTool</ref>  </term></varlistentry>
<listitem><para>TODO document all the new properties!</para><para></para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000003"/> <variablelist>
<varlistentry><term>Class <ref refid="d8/d6d/classORUtils_1_1ToolBox" kindref="compound">ORUtils::ToolBox</ref>  </term></varlistentry>
<listitem><para>Add some more usage details.</para><para></para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000036"/> <variablelist>
<varlistentry><term>Group <ref refid="d2/d30/classxAOD_1_1Muon__v1_1amgrpd1247c6efc6b0dea184d8d14131eca3c" kindref="member">Summary information</ref>  </term></varlistentry>
<listitem><para>Add documentation. </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000054"/> <variablelist>
<varlistentry><term>Member <ref refid="dd/d44/namespacexAOD_1a15893bbf48a771941045419b019fdb6e" kindref="member">xAOD::AUXSTORE_OBJECT_SETTER_AND_GETTER</ref> (TruthEvent_v1, std::vector&lt; float &gt;, weights, setWeights) AUXSTORE_PRIMITIVE_SETTER_AND_GETTER(TruthEvent_v1 </term></varlistentry>
<listitem><para>Need upgrade to allow string-valued map-like access... or access a corresponding vector of names </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000015"/> <variablelist>
<varlistentry><term>Member <ref refid="d2/dac/classxAOD_1_1BPhysHelper_1a743a38f25f66071e8a6af3dee0e43cd5" kindref="member">xAOD::BPhysHelper::pv</ref> (const pv_type vertexType=BPhysHelperPV_MIN_A0) </term></varlistentry>
<listitem><para>: In case the refitted vertices are augmented with links to the original primary vertices, method origPv will resolve the links and return the original PVs. </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000016"/> <variablelist>
<varlistentry><term>Member <ref refid="df/d4d/classxAOD_1_1HIEventShape__v2_1a1ff91f8c490d0a8caa23cf7d2a6232d0" kindref="member">xAOD::HIEventShape_v2::area</ref> () const  </term></varlistentry>
<listitem><para>Write documentation </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000030"/> <variablelist>
<varlistentry><term>Member <ref refid="df/d4d/classxAOD_1_1HIEventShape__v2_1a2abd2ed2ec2a89c68afe05f7e698856c" kindref="member">xAOD::HIEventShape_v2::etaMax</ref> () const  </term></varlistentry>
<listitem><para>Write documentation </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000028"/> <variablelist>
<varlistentry><term>Member <ref refid="df/d4d/classxAOD_1_1HIEventShape__v2_1a41e35d0e4072f30a3e7b678ef1f859e9" kindref="member">xAOD::HIEventShape_v2::etaMin</ref> () const  </term></varlistentry>
<listitem><para>Write documentation </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000022"/> <variablelist>
<varlistentry><term>Member <ref refid="df/d4d/classxAOD_1_1HIEventShape__v2_1a521bb47c591d104d97c77e4fecf821a0" kindref="member">xAOD::HIEventShape_v2::etCos</ref> () const  </term></varlistentry>
<listitem><para>Write documentation </para><para>Write documentation </para><para>Write documentation </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000025"/> <variablelist>
<varlistentry><term>Member <ref refid="df/d4d/classxAOD_1_1HIEventShape__v2_1a2788d96a6843a699846b1b7df46dad43" kindref="member">xAOD::HIEventShape_v2::etSin</ref> () const  </term></varlistentry>
<listitem><para>Write documentation </para><para>Write documentation </para><para>Write documentation </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000032"/> <variablelist>
<varlistentry><term>Member <ref refid="df/d4d/classxAOD_1_1HIEventShape__v2_1a7bd61dfcfd0316ad6560cfd3e34f0382" kindref="member">xAOD::HIEventShape_v2::layer</ref> () const  </term></varlistentry>
<listitem><para>Write documentation </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000020"/> <variablelist>
<varlistentry><term>Member <ref refid="df/d4d/classxAOD_1_1HIEventShape__v2_1a3019a2725d25fb03ad6ca0205d415a9f" kindref="member">xAOD::HIEventShape_v2::nCells</ref> () const  </term></varlistentry>
<listitem><para>Write documentation </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000018"/> <variablelist>
<varlistentry><term>Member <ref refid="df/d4d/classxAOD_1_1HIEventShape__v2_1ad4a948a230ae4ee9b3274a2356654186" kindref="member">xAOD::HIEventShape_v2::rho</ref> () const  </term></varlistentry>
<listitem><para>Write documentation </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000017"/> <variablelist>
<varlistentry><term>Member <ref refid="df/d4d/classxAOD_1_1HIEventShape__v2_1a37cda38c50a3289eac923ae2e0af6dc0" kindref="member">xAOD::HIEventShape_v2::setArea</ref> (float value) </term></varlistentry>
<listitem><para>Write documentation </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000031"/> <variablelist>
<varlistentry><term>Member <ref refid="df/d4d/classxAOD_1_1HIEventShape__v2_1a8e54b6f0ed4749796a3c67562f8a52c2" kindref="member">xAOD::HIEventShape_v2::setEtaMax</ref> (float value) </term></varlistentry>
<listitem><para>Write documentation </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000029"/> <variablelist>
<varlistentry><term>Member <ref refid="df/d4d/classxAOD_1_1HIEventShape__v2_1a265ee00be8b940b79c9533de8392e09f" kindref="member">xAOD::HIEventShape_v2::setEtaMin</ref> (float value) </term></varlistentry>
<listitem><para>Write documentation </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000024"/> <variablelist>
<varlistentry><term>Member <ref refid="df/d4d/classxAOD_1_1HIEventShape__v2_1a0e626f488fa1207931cf0928dac8711a" kindref="member">xAOD::HIEventShape_v2::setEtCos</ref> (const std::vector&lt; float &gt; &amp;value) </term></varlistentry>
<listitem><para>Write documentation </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000027"/> <variablelist>
<varlistentry><term>Member <ref refid="df/d4d/classxAOD_1_1HIEventShape__v2_1aec144e49cbd1f62c88b90df6b40a2918" kindref="member">xAOD::HIEventShape_v2::setEtSin</ref> (const std::vector&lt; float &gt; &amp;value) </term></varlistentry>
<listitem><para>Write documentation </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000033"/> <variablelist>
<varlistentry><term>Member <ref refid="df/d4d/classxAOD_1_1HIEventShape__v2_1a6f64eec0fc42bc49473b19e0e164ee18" kindref="member">xAOD::HIEventShape_v2::setLayer</ref> (int value) </term></varlistentry>
<listitem><para>Write documentation </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000021"/> <variablelist>
<varlistentry><term>Member <ref refid="df/d4d/classxAOD_1_1HIEventShape__v2_1ad43529b6487e9b410b97390625a2adf3" kindref="member">xAOD::HIEventShape_v2::setNCells</ref> (int value) </term></varlistentry>
<listitem><para>Write documentation </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000019"/> <variablelist>
<varlistentry><term>Member <ref refid="df/d4d/classxAOD_1_1HIEventShape__v2_1af9c67d505222a25c3bdc94f90d542cc6" kindref="member">xAOD::HIEventShape_v2::setRho</ref> (float value) </term></varlistentry>
<listitem><para>Write documentation </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000041"/> <variablelist>
<varlistentry><term>Member <ref refid="d2/d30/classxAOD_1_1Muon__v1_1a5f2145d9e3dce91d7dd91c333aec8c35" kindref="member">xAOD::Muon_v1::clusterLink</ref> () const  </term></varlistentry>
<listitem><para>Why just one? </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000042"/> <variablelist>
<varlistentry><term>Member <ref refid="d2/d30/classxAOD_1_1Muon__v1_1a700c7daa9740e62313d5ecf291d819af" kindref="member">xAOD::Muon_v1::muonSegmentLinks</ref> () const  </term></varlistentry>
<listitem><para>complete the various calo energy additions (i.e. depositInCalo etc) </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000038"/> <variablelist>
<varlistentry><term>Member <ref refid="d2/d30/classxAOD_1_1Muon__v1_1afbca0a7c8e3ad29973552fbc23c9ed70" kindref="member">xAOD::Muon_v1::parameter</ref> (float &amp;value, const ParamDef parameter) const  </term></varlistentry>
<listitem><para>Finish documentation include matchChi2, muonentrancechi2 (instead of outerMatchChi2). Store chi2/dof instead of two? fitChi2 comes from TrackParticle. </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000039"/> <variablelist>
<varlistentry><term>Member <ref refid="d2/d30/classxAOD_1_1Muon__v1_1a7e5ffbaa3180106746511159341722b8" kindref="member">xAOD::Muon_v1::Quality</ref>  </term></varlistentry>
<listitem><para>Finish documentation </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000037"/> <variablelist>
<varlistentry><term>Member <ref refid="d2/d30/classxAOD_1_1Muon__v1_1a4f1e88d321627c0d2db2c0d574416045" kindref="member">xAOD::Muon_v1::setMuonType</ref> (MuonType type) </term></varlistentry>
<listitem><para>- do we actually need this? Deduce it from other information? </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000043"/> <variablelist>
<varlistentry><term>Member <ref refid="d5/d44/classxAOD_1_1NeutralParticle__v1_1af5c79e0008a78b7ca44456a6e5e86cf8" kindref="member">xAOD::NeutralParticle_v1::p4</ref> () const  </term></varlistentry>
<listitem><para>Get value from somewhere. Also, the TrackParticle took the Pion mass - do we really want to do this? We have ParticleHypo? </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000045"/> <variablelist>
<varlistentry><term>Member <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a35ca4b9ff22a5876ef544ff48c599e62" kindref="member">xAOD::TrackParticle_v1::numberOfParameters</ref> () const  </term></varlistentry>
<listitem><para>- Can we do this in a better way? Not great to force retrieval of one specific parameter - any would do. </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000044"/> <variablelist>
<varlistentry><term>Member <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a604c64ea8bf6798578e67def61bd6389" kindref="member">xAOD::TrackParticle_v1::p4</ref> () const  </term></varlistentry>
<listitem><para>Get value from somewhere. Also, the TrackParticle took the Pion mass - do we really want to do this? We have ParticleHypo? </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000046"/> <variablelist>
<varlistentry><term>Member <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a391f7aa3e5c65d7d07893b993e079880" kindref="member">xAOD::TrackParticle_v1::trackProperties</ref> () const  </term></varlistentry>
<listitem><para>- fix the above (or make something nicer) </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000056"/> <variablelist>
<varlistentry><term>Member <ref refid="d7/d81/classxAOD_1_1TruthEvent__v1_1a284695017eb40fccb9bf5dc1134a7bbf" kindref="member">xAOD::TruthEvent_v1::setWeights</ref> (const std::vector&lt; float &gt; &amp;weights) </term></varlistentry>
<listitem><para>Need to add named weight access: vector&lt;string&gt; </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000055"/> <variablelist>
<varlistentry><term>Member <ref refid="d7/d81/classxAOD_1_1TruthEvent__v1_1a62028f83c4f9dfe93d309c691c7ce01c" kindref="member">xAOD::TruthEvent_v1::weights</ref> () const  </term></varlistentry>
<listitem><para>Need to add the map-like interface for the weights: very important! </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000060"/> <variablelist>
<varlistentry><term>Member <ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a020be859358f288ef712cff69424c27e" kindref="member">xAOD::TruthParticle_v1::abseta</ref> () const  </term></varlistentry>
<listitem><para>Remove this when/if supported in <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">xAOD::IParticle</ref> </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000061"/> <variablelist>
<varlistentry><term>Member <ref refid="dd/dc2/classxAOD_1_1TruthParticle__v1_1a4c3b2529695acedc050de33a9510fea6" kindref="member">xAOD::TruthParticle_v1::absrapidity</ref> () const  </term></varlistentry>
<listitem><para>Remove this when/if supported in <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">xAOD::IParticle</ref> </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000062"/> <variablelist>
<varlistentry><term>Member <ref refid="db/d66/structxAOD_1_1TruthParticle__v1_1_1Polarization_1a64adb563add05fe5f2d314d797b6aac5" kindref="member">xAOD::TruthParticle_v1::Polarization::Polarization</ref> () </term></varlistentry>
<listitem><para>Use C++11 inline member init when allowed </para></listitem>
</variablelist>
</para><para><anchor id="todo_1_todo000063"/> <variablelist>
<varlistentry><term>Member <ref refid="d1/d99/classxAOD_1_1TruthPileupEvent__v1_1a36a64ba64a0a12960e745982665623cc" kindref="member">xAOD::TruthPileupEvent_v1::type</ref> () const  </term></varlistentry>
<listitem><para>Some identifying info about the type of pile-up, bunch xing, etc.? </para></listitem>
</variablelist>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
