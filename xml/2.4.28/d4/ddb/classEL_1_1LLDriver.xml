<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d4/ddb/classEL_1_1LLDriver" kind="class" prot="public">
    <compoundname>EL::LLDriver</compoundname>
    <basecompoundref refid="dc/d4d/classEL_1_1BatchDriver" prot="public" virt="non-virtual">EL::BatchDriver</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="d4/ddb/classEL_1_1LLDriver_1ada07e0780e4cad7ef846363908c1e7bb" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string EL::LLDriver::queue</definition>
        <argsstring></argsstring>
        <name>queue</name>
        <briefdescription>
<para>description: the queue we run on </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/LLDriver.h" line="48" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/LLDriver.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d4/ddb/classEL_1_1LLDriver_1a168450c7c2e380999cf47ee880e33576" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EL::LLDriver::testInvariant</definition>
        <argsstring>() const </argsstring>
        <name>testInvariant</name>
        <reimplements refid="dc/d4d/classEL_1_1BatchDriver_1a18003d9f3d634c3b51948840e550537f">testInvariant</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: test the invariant of this object guarantee: no-fail </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/LLDriver.h" line="36"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddb/classEL_1_1LLDriver_1adb40ddea69d33147821102781cadab8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>EL::LLDriver::LLDriver</definition>
        <argsstring>()</argsstring>
        <name>LLDriver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: standard default constructor guarantee: strong failures: low level errors I </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/LLDriver.h" line="43"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d4/ddb/classEL_1_1LLDriver_1aa5f537b24132bf298b34190c0598c561" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>virtual std::string EL::LLDriver::batchName</definition>
        <argsstring>() const override</argsstring>
        <name>batchName</name>
        <reimplements refid="dc/d4d/classEL_1_1BatchDriver_1a9f876e13883da08efeac606ca2194d9c">batchName</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns: the name of the submission script to use. if this contains {JOBID} it will create one script for each job id guarantee: strong failures: out of memory II rationale: some batch systems are picky about names. others don&apos;t allow passing arguments into submission scripts </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/LLDriver.h" line="63"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddb/classEL_1_1LLDriver_1abad598beccd3b43bb97ff94e7470570e" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>virtual std::string EL::LLDriver::batchInit</definition>
        <argsstring>() const override</argsstring>
        <name>batchInit</name>
        <reimplements refid="dc/d4d/classEL_1_1BatchDriver_1a37ab71e407ac47509c60b88e0dc42957">batchInit</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns: any additional code we need for setting up the batch job. if multiple files are used, {JOBID} will be replaced with the index of the current file. guarantee: strong failures: out of memory II rationale: some batch systems need extra lines when making there submission scripts, which can either be specially formatted option lines or just some special commands </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/LLDriver.h" line="75"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddb/classEL_1_1LLDriver_1a1a5e4391c02f2addd3f177f70e19a8b0" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void EL::LLDriver::batchSubmit</definition>
        <argsstring>(const std::string &amp;location, const SH::MetaObject &amp;options, std::size_t njob) const override</argsstring>
        <name>batchSubmit</name>
        <reimplements refid="dc/d4d/classEL_1_1BatchDriver_1abd01c38ef1f4e0fa55488a348f56f453">batchSubmit</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>location</declname>
        </param>
        <param>
          <type>const <ref refid="db/d3a/classSH_1_1MetaObject" kindref="compound">SH::MetaObject</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>njob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>effects: perform the actual torque submission with njob jobs guarantee: strong failures: submission errors rationale: the virtual part of batch submission </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/LLDriver.h" line="85"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddb/classEL_1_1LLDriver_1af5c7dec34d0e2345b4a1829c9da07e65" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>EL::LLDriver::ClassDef</definition>
        <argsstring>(LLDriver, 1)</argsstring>
        <name>ClassDef</name>
        <reimplements refid="dc/d4d/classEL_1_1BatchDriver_1aa1ddbb58774849576dfa0f22f95b2322">ClassDef</reimplements>
        <param>
          <type><ref refid="d4/ddb/classEL_1_1LLDriver" kindref="compound">LLDriver</ref></type>
        </param>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/LLDriver.h" line="97"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="13274">
        <label>EL::LLDriver</label>
        <link refid="d4/ddb/classEL_1_1LLDriver"/>
        <childnode refid="13275" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13276">
        <label>EL::Driver</label>
        <link refid="de/d0a/classEL_1_1Driver"/>
      </node>
      <node id="13275">
        <label>EL::BatchDriver</label>
        <link refid="dc/d4d/classEL_1_1BatchDriver"/>
        <childnode refid="13276" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="13277">
        <label>EL::LLDriver</label>
        <link refid="d4/ddb/classEL_1_1LLDriver"/>
        <childnode refid="13278" relation="public-inheritance">
        </childnode>
        <childnode refid="13281" relation="usage">
          <edgelabel>queue</edgelabel>
        </childnode>
      </node>
      <node id="13279">
        <label>EL::Driver</label>
        <link refid="de/d0a/classEL_1_1Driver"/>
        <childnode refid="13280" relation="usage">
          <edgelabel>m_options</edgelabel>
        </childnode>
      </node>
      <node id="13281">
        <label>string</label>
      </node>
      <node id="13278">
        <label>EL::BatchDriver</label>
        <link refid="dc/d4d/classEL_1_1BatchDriver"/>
        <childnode refid="13279" relation="public-inheritance">
        </childnode>
        <childnode refid="13281" relation="usage">
          <edgelabel>shellInit</edgelabel>
        </childnode>
      </node>
      <node id="13280">
        <label>SH::MetaObject</label>
        <link refid="db/d3a/classSH_1_1MetaObject"/>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/LLDriver.h" line="28" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/EventLoop/LLDriver.h" bodystart="27" bodyend="99"/>
    <listofallmembers>
      <member refid="de/d0a/classEL_1_1Driver_1a9a91e0c4461b079768e1b44d714953ec" prot="protected" virt="non-virtual"><scope>EL::LLDriver</scope><name>abortRetrieve</name></member>
      <member refid="dc/d4d/classEL_1_1BatchDriver_1a9345ff52364f0bd507c5fcf7386d3ff8" prot="public" virt="non-virtual"><scope>EL::LLDriver</scope><name>BatchDriver</name></member>
      <member refid="d4/ddb/classEL_1_1LLDriver_1abad598beccd3b43bb97ff94e7470570e" prot="private" virt="virtual"><scope>EL::LLDriver</scope><name>batchInit</name></member>
      <member refid="d4/ddb/classEL_1_1LLDriver_1aa5f537b24132bf298b34190c0598c561" prot="private" virt="virtual"><scope>EL::LLDriver</scope><name>batchName</name></member>
      <member refid="d4/ddb/classEL_1_1LLDriver_1a1a5e4391c02f2addd3f177f70e19a8b0" prot="private" virt="virtual"><scope>EL::LLDriver</scope><name>batchSubmit</name></member>
      <member refid="d4/ddb/classEL_1_1LLDriver_1af5c7dec34d0e2345b4a1829c9da07e65" prot="private" virt="non-virtual"><scope>EL::LLDriver</scope><name>ClassDef</name></member>
      <member refid="de/d0a/classEL_1_1Driver_1a084db209102bff4ee596f55b6b22d99a" prot="public" virt="non-virtual"><scope>EL::LLDriver</scope><name>diskOutputSave</name></member>
      <member refid="de/d0a/classEL_1_1Driver_1afe0fa388e65ba76c794790deba236c95" prot="public" virt="non-virtual"><scope>EL::LLDriver</scope><name>Driver</name></member>
      <member refid="d4/ddb/classEL_1_1LLDriver_1adb40ddea69d33147821102781cadab8a" prot="public" virt="non-virtual"><scope>EL::LLDriver</scope><name>LLDriver</name></member>
      <member refid="de/d0a/classEL_1_1Driver_1ad9f49c9d43666a58627f5541febde5a0" prot="public" virt="non-virtual"><scope>EL::LLDriver</scope><name>mergedOutputMkdir</name></member>
      <member refid="de/d0a/classEL_1_1Driver_1a103f943f669046458b81e8366ee50099" prot="public" virt="non-virtual"><scope>EL::LLDriver</scope><name>mergedOutputName</name></member>
      <member refid="de/d0a/classEL_1_1Driver_1a3e4f617fe33da86dfb3bca48e024c47a" prot="public" virt="non-virtual"><scope>EL::LLDriver</scope><name>mergedOutputSave</name></member>
      <member refid="de/d0a/classEL_1_1Driver_1a44cc2bdc9221bb5c0409c2485f8e2798" prot="public" virt="non-virtual"><scope>EL::LLDriver</scope><name>options</name></member>
      <member refid="de/d0a/classEL_1_1Driver_1a3543365646e9cfc5fdff27019b62b68c" prot="public" virt="non-virtual"><scope>EL::LLDriver</scope><name>options</name></member>
      <member refid="d4/ddb/classEL_1_1LLDriver_1ada07e0780e4cad7ef846363908c1e7bb" prot="public" virt="non-virtual"><scope>EL::LLDriver</scope><name>queue</name></member>
      <member refid="de/d0a/classEL_1_1Driver_1a371672ae7553e7149578d9f286cd3eda" prot="public" virt="non-virtual"><scope>EL::LLDriver</scope><name>retrieve</name></member>
      <member refid="de/d0a/classEL_1_1Driver_1ad8cf828665ed2ac6882369e79ef8c359" prot="public" virt="non-virtual"><scope>EL::LLDriver</scope><name>saveOutput</name></member>
      <member refid="dc/d4d/classEL_1_1BatchDriver_1ac1c09c31d7ba3019619ac51c99b718eb" prot="public" virt="non-virtual"><scope>EL::LLDriver</scope><name>shellInit</name></member>
      <member refid="de/d0a/classEL_1_1Driver_1a2229e4d8b95b2ecf65249448d596d87b" prot="public" virt="non-virtual"><scope>EL::LLDriver</scope><name>submit</name></member>
      <member refid="de/d0a/classEL_1_1Driver_1aa805265de24fb8b2cd4ab9e2ee664bf9" prot="public" virt="non-virtual"><scope>EL::LLDriver</scope><name>submitOnly</name></member>
      <member refid="d4/ddb/classEL_1_1LLDriver_1a168450c7c2e380999cf47ee880e33576" prot="public" virt="non-virtual"><scope>EL::LLDriver</scope><name>testInvariant</name></member>
      <member refid="de/d0a/classEL_1_1Driver_1a6fed39cd8394451ad9cb68505f7c4f42" prot="public" virt="non-virtual"><scope>EL::LLDriver</scope><name>updateLocation</name></member>
      <member refid="de/d0a/classEL_1_1Driver_1a2290992d35e07904847fb90cb781e05a" prot="public" virt="non-virtual"><scope>EL::LLDriver</scope><name>wait</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
