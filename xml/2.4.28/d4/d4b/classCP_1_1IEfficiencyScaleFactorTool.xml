<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d4/d4b/classCP_1_1IEfficiencyScaleFactorTool" kind="class" prot="public">
    <compoundname>CP::IEfficiencyScaleFactorTool</compoundname>
    <basecompoundref refid="d4/d5c/classCP_1_1ISystematicsTool" prot="public" virt="virtual">CP::ISystematicsTool</basecompoundref>
    <derivedcompoundref refid="d2/dc9/classCP_1_1ElectronChargeEfficiencyCorrectionTool" prot="public" virt="virtual">CP::ElectronChargeEfficiencyCorrectionTool</derivedcompoundref>
    <includes refid="db/d28/IEfficiencyScaleFactorTool_8h" local="no">IEfficiencyScaleFactorTool.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d4/d4b/classCP_1_1IEfficiencyScaleFactorTool_1a871a614e8bd94d80d7d8512bddcf325f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual CP::IEfficiencyScaleFactorTool::~IEfficiencyScaleFactorTool</definition>
        <argsstring>()</argsstring>
        <name>~IEfficiencyScaleFactorTool</name>
        <briefdescription>
<para>Default destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgAnalysisInterfaces/AsgAnalysisInterfaces/IEfficiencyScaleFactorTool.h" line="53"/>
      </memberdef>
      <memberdef kind="function" id="d4/d4b/classCP_1_1IEfficiencyScaleFactorTool_1ae90009d053fd8ec156c0da38b31ca606" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="db/d8a/classCP_1_1CorrectionCode" kindref="compound">CorrectionCode</ref></type>
        <definition>virtual CorrectionCode CP::IEfficiencyScaleFactorTool::getEfficiencyScaleFactor</definition>
        <argsstring>(const xAOD::IParticle &amp;p, double &amp;sf) const =0</argsstring>
        <name>getEfficiencyScaleFactor</name>
        <reimplementedby refid="d2/dc9/classCP_1_1ElectronChargeEfficiencyCorrectionTool_1ad434d6484cf72ed58efe332b2ee3d4ec">getEfficiencyScaleFactor</reimplementedby>
        <param>
          <type>const <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">xAOD::IParticle</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>sf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieve an efficiency scale factor for a particle type object</para><para>This function is used to retrieve the efficiency scale factor for a specific particle object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>The particle for which a scale factor is to be calculated </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sf</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d4/dc4/structA" kindref="compound">A</ref> reference to the scale factor variable to be set </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput><ref refid="db/d8a/classCP_1_1CorrectionCode_1a0a040c70626c77bad65a0fbf757d7b83a9faf702fadfcc1135b182dd78ec9d718" kindref="member">CP::CorrectionCode::Error</ref></computeroutput> in case of a serious problem, <computeroutput><ref refid="db/d8a/classCP_1_1CorrectionCode_1a0a040c70626c77bad65a0fbf757d7b83aa38a4fce39a52cf6f99b407b8db24d45" kindref="member">CP::CorrectionCode::OutOfValidityRange</ref></computeroutput> if no scale factor is available for the received object, or <computeroutput><ref refid="db/d8a/classCP_1_1CorrectionCode_1a0a040c70626c77bad65a0fbf757d7b83aea8e3d31915633d7faef8f6a6c0bbd9f" kindref="member">CP::CorrectionCode::Ok</ref></computeroutput> if the scale factor could be correctly provided </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgAnalysisInterfaces/AsgAnalysisInterfaces/IEfficiencyScaleFactorTool.h" line="69"/>
      </memberdef>
      <memberdef kind="function" id="d4/d4b/classCP_1_1IEfficiencyScaleFactorTool_1a91b304fafa5eaa95902dc39ccf99bccc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="db/d8a/classCP_1_1CorrectionCode" kindref="compound">CorrectionCode</ref></type>
        <definition>virtual CorrectionCode CP::IEfficiencyScaleFactorTool::applyEfficiencyScaleFactor</definition>
        <argsstring>(const xAOD::IParticle &amp;p) const =0</argsstring>
        <name>applyEfficiencyScaleFactor</name>
        <reimplementedby refid="d2/dc9/classCP_1_1ElectronChargeEfficiencyCorrectionTool_1aafbdf000fa8eaed94ba3b0f23fdb263c">applyEfficiencyScaleFactor</reimplementedby>
        <param>
          <type>const <ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">xAOD::IParticle</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Decorate a particle with its efficiency scale factor</para><para>This function can be used to decorate a particle type object with an efficiency scale factor. The name and type of the scale factor variable is up to the specific tool implementation.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>The particle for which a scale factor is to be calculated </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput><ref refid="db/d8a/classCP_1_1CorrectionCode_1a0a040c70626c77bad65a0fbf757d7b83a9faf702fadfcc1135b182dd78ec9d718" kindref="member">CP::CorrectionCode::Error</ref></computeroutput> in case of a serious problem, <computeroutput><ref refid="db/d8a/classCP_1_1CorrectionCode_1a0a040c70626c77bad65a0fbf757d7b83aa38a4fce39a52cf6f99b407b8db24d45" kindref="member">CP::CorrectionCode::OutOfValidityRange</ref></computeroutput> if no scale factor is available for the received object, or <computeroutput><ref refid="db/d8a/classCP_1_1CorrectionCode_1a0a040c70626c77bad65a0fbf757d7b83aea8e3d31915633d7faef8f6a6c0bbd9f" kindref="member">CP::CorrectionCode::Ok</ref></computeroutput> if the scale factor could be correctly provided </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgAnalysisInterfaces/AsgAnalysisInterfaces/IEfficiencyScaleFactorTool.h" line="85"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>General interface for tools providing analysis efficiency scale factors</para><para>This is a generic interface that should be implemented by all analysis tools that provide efficiency scale factors for <computeroutput><ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">xAOD::IParticle</ref></computeroutput> type objects.</para><para><simplesect kind="note"><para>If your tool needs type specific variables that the <computeroutput><ref refid="d5/d4c/classxAOD_1_1IParticle" kindref="compound">xAOD::IParticle</ref></computeroutput> interface doesn&apos;t provide, please rely on the <computeroutput><ref refid="d5/d4c/classxAOD_1_1IParticle_1a852e62cdcea85eb9f99461898c301e02" kindref="member">xAOD::IParticle::type()</ref></computeroutput> function to identify whether you received an appropriate object. And then use <computeroutput>static_cast</computeroutput> to cast the reference to the right type. Like:</para></simplesect>
<programlisting><codeline><highlight class="normal"><sp/>{.cpp}</highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>p.type()<sp/>!=<sp/><ref refid="dd/dc8/namespacexAOD_1_1Type_1a96c48d2d85466ace623036af49f84434a0199381ad718edc5748453cf69eb0fed" kindref="member" tooltip="The object is an electron.">xAOD::Type::Electron</ref><sp/>)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(<sp/></highlight><highlight class="stringliteral">&quot;Object<sp/>of<sp/>wrong<sp/>type<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>p.type()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>received&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db/d8a/classCP_1_1CorrectionCode_1a0a040c70626c77bad65a0fbf757d7b83a9faf702fadfcc1135b182dd78ec9d718" kindref="member" tooltip="Some error happened during the object correction.">CP::CorrectionCode::Error</ref>;</highlight></codeline>
<codeline><highlight class="normal"><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/da6/classxAOD_1_1Electron" kindref="compound" tooltip="Class describing an electron.">xAOD::Electron</ref>&amp;<sp/>el<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="dd/da6/classxAOD_1_1Electron" kindref="compound" tooltip="Class describing an electron.">xAOD::Electron</ref>&amp;<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>p<sp/>);</highlight></codeline>
</programlisting></para><para>Just be <bold>very</bold> careful about writing the code correctly, as a wrong <computeroutput>static_cast</computeroutput> could lead to memory corruption. But since its much faster than <computeroutput>dynamic_cast</computeroutput>, it&apos;s still recommended to use this sort of code.</para><para><simplesect kind="rcs"><title>Revision</title><para>790193 </para></simplesect>
<simplesect kind="rcs"><title>Date</title><para>2016-12-16 17:36:15 +0100 (Fri, 16 Dec 2016) </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="9428">
        <label>CP::IEfficiencyScaleFactorTool</label>
        <link refid="d4/d4b/classCP_1_1IEfficiencyScaleFactorTool"/>
        <childnode refid="9429" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9430">
        <label>asg::IAsgTool</label>
        <link refid="d4/d20/classasg_1_1IAsgTool"/>
      </node>
      <node id="9431">
        <label>CP::ElectronChargeEfficiencyCorrectionTool</label>
        <link refid="d2/dc9/classCP_1_1ElectronChargeEfficiencyCorrectionTool"/>
        <childnode refid="9428" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9429">
        <label>CP::ISystematicsTool</label>
        <link refid="d4/d5c/classCP_1_1ISystematicsTool"/>
        <childnode refid="9430" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="9432">
        <label>CP::IEfficiencyScaleFactorTool</label>
        <link refid="d4/d4b/classCP_1_1IEfficiencyScaleFactorTool"/>
        <childnode refid="9433" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9434">
        <label>asg::IAsgTool</label>
        <link refid="d4/d20/classasg_1_1IAsgTool"/>
      </node>
      <node id="9433">
        <label>CP::ISystematicsTool</label>
        <link refid="d4/d5c/classCP_1_1ISystematicsTool"/>
        <childnode refid="9434" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgAnalysisInterfaces/AsgAnalysisInterfaces/IEfficiencyScaleFactorTool.h" line="46" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/AsgAnalysisInterfaces/AsgAnalysisInterfaces/IEfficiencyScaleFactorTool.h" bodystart="46" bodyend="87"/>
    <listofallmembers>
      <member refid="d4/d5c/classCP_1_1ISystematicsTool_1abc7cfc4bece0b5aaf372e75c33ba2122" prot="public" virt="pure-virtual"><scope>CP::IEfficiencyScaleFactorTool</scope><name>affectingSystematics</name></member>
      <member refid="d4/d4b/classCP_1_1IEfficiencyScaleFactorTool_1a91b304fafa5eaa95902dc39ccf99bccc" prot="public" virt="pure-virtual"><scope>CP::IEfficiencyScaleFactorTool</scope><name>applyEfficiencyScaleFactor</name></member>
      <member refid="d4/d5c/classCP_1_1ISystematicsTool_1a73f35f85955411a7e14cb208721a242d" prot="public" virt="pure-virtual"><scope>CP::IEfficiencyScaleFactorTool</scope><name>applySystematicVariation</name></member>
      <member refid="d4/d4b/classCP_1_1IEfficiencyScaleFactorTool_1ae90009d053fd8ec156c0da38b31ca606" prot="public" virt="pure-virtual"><scope>CP::IEfficiencyScaleFactorTool</scope><name>getEfficiencyScaleFactor</name></member>
      <member refid="d4/d5c/classCP_1_1ISystematicsTool_1a04aa5fb3e693dc6536b27354c7b2c71e" prot="public" virt="pure-virtual"><scope>CP::IEfficiencyScaleFactorTool</scope><name>isAffectedBySystematic</name></member>
      <member refid="d4/d20/classasg_1_1IAsgTool_1af1aac990b958e92bf38123318d926e67" prot="public" virt="pure-virtual"><scope>CP::IEfficiencyScaleFactorTool</scope><name>print</name></member>
      <member refid="d4/d5c/classCP_1_1ISystematicsTool_1a6d2b283af1c21f9d40588ef87eb6c4b3" prot="public" virt="pure-virtual"><scope>CP::IEfficiencyScaleFactorTool</scope><name>recommendedSystematics</name></member>
      <member refid="d4/d20/classasg_1_1IAsgTool_1a77b49d52f1f8c272cb665b8309d6082d" prot="public" virt="virtual"><scope>CP::IEfficiencyScaleFactorTool</scope><name>~IAsgTool</name></member>
      <member refid="d4/d4b/classCP_1_1IEfficiencyScaleFactorTool_1a871a614e8bd94d80d7d8512bddcf325f" prot="public" virt="virtual"><scope>CP::IEfficiencyScaleFactorTool</scope><name>~IEfficiencyScaleFactorTool</name></member>
      <member refid="d4/d5c/classCP_1_1ISystematicsTool_1a18391a9c9b1789aa9045082bcd65c6ee" prot="public" virt="virtual"><scope>CP::IEfficiencyScaleFactorTool</scope><name>~ISystematicsTool</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
