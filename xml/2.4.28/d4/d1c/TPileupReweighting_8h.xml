<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d4/d1c/TPileupReweighting_8h" kind="file">
    <compoundname>TPileupReweighting.h</compoundname>
    <includes local="yes">TNamed.h</includes>
    <includes local="no">TFile.h</includes>
    <includes local="no">TString.h</includes>
    <includes local="yes">TVectorD.h</includes>
    <includes local="no">map</includes>
    <includes local="no">vector</includes>
    <includes local="no">TRandom3.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">stdexcept</includes>
    <includes local="yes">TH1.h</includes>
    <includedby refid="da/d46/PileupReweightingTool_8h" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PileupReweighting/PileupReweighting/PileupReweightingTool.h</includedby>
    <includedby refid="d0/dcf/TPileupReweighting_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PileupReweighting/Root/TPileupReweighting.cxx</includedby>
    <includedby refid="dd/d13/ut__PRWExample__test_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PileupReweighting/test/ut_PRWExample_test.cxx</includedby>
    <incdepgraph>
      <node id="232346">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PileupReweighting/PileupReweighting/TPileupReweighting.h</label>
        <link refid="TPileupReweighting.h"/>
        <childnode refid="232347" relation="include">
        </childnode>
        <childnode refid="232348" relation="include">
        </childnode>
        <childnode refid="232349" relation="include">
        </childnode>
        <childnode refid="232350" relation="include">
        </childnode>
        <childnode refid="232351" relation="include">
        </childnode>
        <childnode refid="232352" relation="include">
        </childnode>
        <childnode refid="232353" relation="include">
        </childnode>
        <childnode refid="232354" relation="include">
        </childnode>
        <childnode refid="232355" relation="include">
        </childnode>
        <childnode refid="232356" relation="include">
        </childnode>
      </node>
      <node id="232355">
        <label>stdexcept</label>
      </node>
      <node id="232351">
        <label>map</label>
      </node>
      <node id="232356">
        <label>TH1.h</label>
      </node>
      <node id="232352">
        <label>vector</label>
      </node>
      <node id="232348">
        <label>TFile.h</label>
      </node>
      <node id="232354">
        <label>iostream</label>
      </node>
      <node id="232347">
        <label>TNamed.h</label>
      </node>
      <node id="232349">
        <label>TString.h</label>
      </node>
      <node id="232350">
        <label>TVectorD.h</label>
      </node>
      <node id="232353">
        <label>TRandom3.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="232359">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CPAnalysisExamples/CPAnalysisExamples/ToolExamplesAlg.h</label>
        <link refid="d4/d75/ToolExamplesAlg_8h_source"/>
      </node>
      <node id="232360">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PileupReweighting/PileupReweighting/PileupReweightingDict.h</label>
        <link refid="d4/dd4/PileupReweightingDict_8h_source"/>
      </node>
      <node id="232357">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PileupReweighting/PileupReweighting/TPileupReweighting.h</label>
        <link refid="TPileupReweighting.h"/>
        <childnode refid="232358" relation="include">
        </childnode>
      </node>
      <node id="232358">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PileupReweighting/PileupReweighting/PileupReweightingTool.h</label>
        <link refid="da/d46/PileupReweightingTool_8h_source"/>
        <childnode refid="232359" relation="include">
        </childnode>
        <childnode refid="232360" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="da/dd0/classCP_1_1TPileupReweighting" prot="public">CP::TPileupReweighting</innerclass>
    <innerclass refid="dd/dc7/structCP_1_1TPileupReweighting_1_1CompositeTrigger" prot="public">CP::TPileupReweighting::CompositeTrigger</innerclass>
    <innerclass refid="d8/dc5/structCP_1_1TPileupReweighting_1_1Period" prot="public">CP::TPileupReweighting::Period</innerclass>
    <innerclass refid="db/d6a/structCP_1_1TPileupReweighting_1_1Run" prot="public">CP::TPileupReweighting::Run</innerclass>
    <innernamespace refid="d2/d4c/namespaceCP">CP</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Dear<sp/>emacs,<sp/>this<sp/>is<sp/>-*-c++-*-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__TPILEUPREWEIGHTING__</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__TPILEUPREWEIGHTING__</highlight></codeline>
<codeline lineno="5"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="16"><highlight class="comment">/*<sp/>Developer<sp/>notes:</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*<sp/>Could<sp/>have<sp/>incorporated<sp/>the<sp/>pileup<sp/>histos<sp/>in<sp/>to<sp/>the<sp/>generic<sp/>custom<sp/>maps</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*<sp/>but<sp/>decided<sp/>to<sp/>keep<sp/>them<sp/>seperate<sp/>for<sp/>probable<sp/>slight<sp/>performance<sp/>improvement</highlight></codeline>
<codeline lineno="19"><highlight class="comment">*<sp/>Allow<sp/>the<sp/>user<sp/>to<sp/>change<sp/>the<sp/>histo<sp/>binning<sp/>through<sp/>AddBinning<sp/>with<sp/>name=&quot;pileup&quot;</highlight></codeline>
<codeline lineno="20"><highlight class="comment">*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TNamed.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TFile.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TString.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TVectorD.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TRandom3.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>STL<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TH1.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TH1;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TH1D;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TH2D;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TTree;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TFile;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">CP<sp/>{</highlight></codeline>
<codeline lineno="46" refid="da/dd0/classCP_1_1TPileupReweighting" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="da/dd0/classCP_1_1TPileupReweighting" kindref="compound">TPileupReweighting</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>TNamed<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1ac48c5b346b0d47cb57473280bc5673b7" kindref="member">TPileupReweighting</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name=</highlight><highlight class="stringliteral">&quot;TPileupReweighting&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1aa84bd421bb8304579d18fe2d39ecaac4" kindref="member">~TPileupReweighting</ref>();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a53439cc702167c8b89f07ac1cf20148d" kindref="member">UsePeriodConfig</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>configName);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1ab3c46f45895b4645c77db41e1e5e143e" kindref="member">SetBinning</ref>(Int_t<sp/>nbinsx,<sp/>Double_t*<sp/>xbins,<sp/>Int_t<sp/>nbinsy=0,<sp/>Double_t*<sp/>ybins=0);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/>SetUniformBinning(Int_t<sp/>nbinsx,<sp/>Double_t<sp/>xlow,<sp/>Double_t<sp/>xup,<sp/>Int_t<sp/>nbinsy=0,<sp/>Double_t<sp/>ylow=0,<sp/>Double_t<sp/>yup=0);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1ab3c46f45895b4645c77db41e1e5e143e" kindref="member">SetBinning</ref>(TH1*<sp/>hist);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a585909623c73bfae6f34deea054e5155" kindref="member">SetDefaultChannel</ref>(Int_t<sp/>channel,<sp/>Int_t<sp/>mcRunNumber=-1);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/>GetDefaultChannel(Int_t<sp/>mcRunNumber=-1);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Double_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a67eaa496d5897c42eee1ae8560120ee9" kindref="member">GetIntegratedLumi</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>trigger=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73" refid="da/dd0/classCP_1_1TPileupReweighting_1a2eacf4811d4d8150391c38a90348d6d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Double_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a2eacf4811d4d8150391c38a90348d6d1" kindref="member">GetNumberOfEvents</ref>(Int_t<sp/>channel)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/dc5/structCP_1_1TPileupReweighting_1_1Period" kindref="compound">Period</ref>*<sp/>global<sp/>=<sp/>m_periods[-1];</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!global)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(global-&gt;numberOfEntries.find(channel)==global-&gt;numberOfEntries.end())<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;GetNumberOfEvents&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>channel:<sp/>%d&quot;</highlight><highlight class="normal">,channel);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>global-&gt;numberOfEntries[channel];</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Double_t<sp/>GetSumOfEventWeights(Int_t<sp/>channel)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Period*<sp/>global<sp/>=<sp/>m_periods[-1];</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!global)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(global-&gt;sumOfWeights.find(channel)==global-&gt;sumOfWeights.end())<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;GetSumOfEventWeights&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>channel:<sp/>%d&quot;</highlight><highlight class="normal">,channel);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>global-&gt;sumOfWeights[channel];</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a0d51e18ec83ecce3f22fd7b8c8de678d" kindref="member">RemapPeriod</ref>(Int_t<sp/>periodNumber1,<sp/>Int_t<sp/>periodNumber2);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Double_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a12a4e1d2aa06e4a9aac883e217cc5739" kindref="member">GetIntegratedLumiFraction</ref>(Int_t<sp/>periodNumber,<sp/>UInt_t<sp/>start,<sp/>UInt_t<sp/>end);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Double_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a12a4e1d2aa06e4a9aac883e217cc5739" kindref="member">GetIntegratedLumiFraction</ref>(Int_t<sp/>periodNumber,<sp/>Double_t<sp/>mu,<sp/>UInt_t<sp/>start,<sp/>UInt_t<sp/>end);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="da/dd0/classCP_1_1TPileupReweighting_1a37d10480b81224261e8e7ce3368f7099" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Double_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a37d10480b81224261e8e7ce3368f7099" kindref="member">GetIntegratedLumi</ref>(UInt_t<sp/>start,<sp/>UInt_t<sp/>end)<sp/>{<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a37d10480b81224261e8e7ce3368f7099" kindref="member">GetIntegratedLumi</ref>(-1,start,end);<sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Double_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a67eaa496d5897c42eee1ae8560120ee9" kindref="member">GetIntegratedLumi</ref>(Int_t<sp/>periodNumber,<sp/>UInt_t<sp/>start,<sp/>UInt_t<sp/>end);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Double_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a07b5283228640baf0e3be49a867bfef7" kindref="member">GetLumiBlockIntegratedLumi</ref>(Int_t<sp/>runNumber,<sp/>UInt_t<sp/>lb);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Float_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1ab21d13e94541e769af4fd01b908a7cef" kindref="member">GetLumiBlockMu</ref>(Int_t<sp/>runNumber,<sp/>UInt_t<sp/>lb);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//General<sp/>Tool<sp/>Configuring<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----------------------------------------------------</highlight></codeline>
<codeline lineno="116" refid="da/dd0/classCP_1_1TPileupReweighting_1aaf4791b305b66bef7b04b4da7a76e647" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1aaf4791b305b66bef7b04b4da7a76e647" kindref="member">DisableWarnings</ref>(Bool_t<sp/>in)<sp/>{<sp/>m_SetWarnings<sp/>=<sp/>!in;}</highlight></codeline>
<codeline lineno="118" refid="da/dd0/classCP_1_1TPileupReweighting_1a39c7cf95ae52183ab96b54ff3cf78e4b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a39c7cf95ae52183ab96b54ff3cf78e4b" kindref="member">EnableDebugging</ref>(Bool_t<sp/>in)<sp/>{<sp/>m_debugging<sp/>=<sp/>in;}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="da/dd0/classCP_1_1TPileupReweighting_1ad66774da8fc0bf3703e35b6739dfc072" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1ad66774da8fc0bf3703e35b6739dfc072" kindref="member">SetUnrepresentedDataAction</ref>(Int_t<sp/>action,<sp/>Double_t<sp/>tolerance=0.05)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(action&lt;0<sp/>||<sp/>action&gt;3)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Fatal(</highlight><highlight class="stringliteral">&quot;SetUnrepresentedDataAction&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Set<sp/>action=%d<sp/>-<sp/>I&apos;m<sp/>afraid<sp/>I<sp/>can&apos;t<sp/>let<sp/>you<sp/>do<sp/>that,<sp/>Dave&quot;</highlight><highlight class="normal">,action);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Throwing<sp/>2001&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_unrepresentedDataAction=action;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_unrepDataTolerance=tolerance;<sp/></highlight><highlight class="comment">//applicable<sp/>for<sp/>action=2<sp/>mode.<sp/>Default<sp/>is<sp/>5%</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Double_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1abb89f438504298c97e98b4546bfaddb0" kindref="member">GetUnrepresentedDataFraction</ref>(Int_t<sp/>periodNumber,Int_t<sp/>channel);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Float_t<sp/>GetUnrepresentedDataWeight(Int_t<sp/>periodNumber,Int_t<sp/>channel)<sp/>{<sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_unrepresentedDataAction!=2)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Warning(</highlight><highlight class="stringliteral">&quot;GetUnrepresentedDataWeight&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;You<sp/>should<sp/>not<sp/>be<sp/>applying<sp/>this<sp/>weight<sp/>unless<sp/>the<sp/>UnrepresentedDataAction=2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1./(1.<sp/>-<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1abb89f438504298c97e98b4546bfaddb0" kindref="member">GetUnrepresentedDataFraction</ref>(periodNumber,channel));</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Methods<sp/>to<sp/>veto<sp/>data<sp/>in<sp/>Action=1<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Bool_t<sp/>IsUnrepresentedData(Int_t<sp/>runNumber,<sp/>Float_t<sp/>x,<sp/>Float_t<sp/>y=0.);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="da/dd0/classCP_1_1TPileupReweighting_1acae0585c175e6ba3f0a326973132cfd8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1acae0585c175e6ba3f0a326973132cfd8" kindref="member">IgnoreConfigFilePeriods</ref>(Bool_t<sp/>in)<sp/>{<sp/>m_ignoreFilePeriods=in;<sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a342481f7413d9473a057130ff3fc87de" kindref="member" tooltip="returns a PeriodID. These count up from 1">AddPeriod</ref>(Int_t<sp/>periodNumber,<sp/>UInt_t<sp/>start,<sp/>UInt_t<sp/>end);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1aa6c5faa164c4ac197a809bdb9b278112" kindref="member">GetFirstFoundPeriodNumber</ref>(UInt_t<sp/>runNumber);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="da/dd0/classCP_1_1TPileupReweighting_1af581144367279134d59294ce562135d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1af581144367279134d59294ce562135d3" kindref="member">SetDataScaleFactors</ref>(Float_t<sp/>x,Float_t<sp/>y=1.)<sp/>{<sp/>m_dataScaleFactorX=x;m_dataScaleFactorY=y;<sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetMCScaleFactors(Float_t<sp/>x,Float_t<sp/>y=1.)<sp/>{<sp/>m_mcScaleFactorX=x;m_mcScaleFactorY=y;}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Methods<sp/>to<sp/>load<sp/>config<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/>AddConfigFile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>fileName);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/>AddLumiCalcFile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>fileName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>trigger=</highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/>AddMetaDataFile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>fileName,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>channelBranchName=</highlight><highlight class="stringliteral">&quot;mc_channel_number&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Bool_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a7a4de37c555bf7af25fe9867bf6f9172" kindref="member">RemoveChannel</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chanNum);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a30e32849d45a1a73d60b7ad660e9db38" kindref="member">Initialize</ref>();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Methods<sp/>to<sp/>get<sp/>the<sp/>various<sp/>weights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Float_t<sp/>GetCombinedWeight(Int_t<sp/>periodNumber,<sp/>Int_t<sp/>channelNumber,Float_t<sp/>x,Float_t<sp/>y=0.);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Float_t<sp/>GetPeriodWeight(Int_t<sp/>periodNumber,<sp/>Int_t<sp/>channelNumber);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Float_t<sp/>GetPrimaryWeight(Int_t<sp/>periodNumber,<sp/>Int_t<sp/>channelNumber,Float_t<sp/>x);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Float_t<sp/>GetSecondaryWeight(Int_t<sp/>periodNumber,<sp/>Int_t<sp/>channelNumber,Float_t<sp/>x,Float_t<sp/>y);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Methods<sp/>to<sp/>work<sp/>with<sp/>the<sp/>metadata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Double_t<sp/>GetMetaData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>metadataName,Int_t<sp/>channelNumber)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="da/dd0/classCP_1_1TPileupReweighting_1a288305bffea7e48c89dde838ab443653" kindref="member">m_metadata</ref>.find(metadataName)==<ref refid="da/dd0/classCP_1_1TPileupReweighting_1a288305bffea7e48c89dde838ab443653" kindref="member">m_metadata</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;GetMetaData&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Metadata<sp/>%s<sp/>not<sp/>known&quot;</highlight><highlight class="normal">,metadataName.Data());</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="da/dd0/classCP_1_1TPileupReweighting_1a288305bffea7e48c89dde838ab443653" kindref="member">m_metadata</ref>[metadataName].find(channelNumber)==<ref refid="da/dd0/classCP_1_1TPileupReweighting_1a288305bffea7e48c89dde838ab443653" kindref="member">m_metadata</ref>[metadataName].end())<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(</highlight><highlight class="stringliteral">&quot;GetMetaData&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Metadata<sp/>%s<sp/>not<sp/>known<sp/>in<sp/>channel<sp/>%d&quot;</highlight><highlight class="normal">,metadataName.Data(),<sp/>channelNumber);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a288305bffea7e48c89dde838ab443653" kindref="member">m_metadata</ref>[metadataName][channelNumber];</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TTree*<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1ac0a7571c5fe1c31a579619e8d07bfef5" kindref="member">GetMetaDataTree</ref>();<sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/>GenerateMetaDataFile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>fileName,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>channelBranchName=</highlight><highlight class="stringliteral">&quot;mc_channel_number&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Methods<sp/>to<sp/>generate<sp/>config<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/>Fill(Int_t<sp/>runNumber,Int_t<sp/>channelNumber,Float_t<sp/>w,Float_t<sp/>x,<sp/>Float_t<sp/>y=0.);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/>WriteToFile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>filename=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//if<sp/>no<sp/>name<sp/>given,<sp/>will<sp/>use<sp/>tool<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/>WriteToFile(TFile*<sp/>outFile);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Methods<sp/>used<sp/>to<sp/>do<sp/>the<sp/>prwTree<sp/>-<sp/>for<sp/>fast<sp/>recalculation<sp/>of<sp/>prw<sp/>weights<sp/>when<sp/>processing<sp/>ntuples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ULong64_t<sp/>GetPRWHash(Int_t<sp/>periodNumber,<sp/>Int_t<sp/>channelNumber,<sp/>Float_t<sp/>x,<sp/>Float_t<sp/>y=0.);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Bool_t<sp/>MakeWeightTree(TString<sp/>channelNumbers,<sp/>TString<sp/>outFile,<sp/>TString<sp/>hashBranch=</highlight><highlight class="stringliteral">&quot;PRWHash&quot;</highlight><highlight class="normal">,<sp/>TString<sp/>weightBranch=</highlight><highlight class="stringliteral">&quot;PileupWeight&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//RandomDataPeriod<sp/>functionality<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//numbers<sp/>generated<sp/>seperately<sp/>for<sp/>each<sp/>mc<sp/>period</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetRandomSeed(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seed)<sp/>{m_random3-&gt;SetSeed(seed);}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetRandomSeed()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_random3-&gt;GetSeed();}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a7ee8c39c9cd29f2c47805e3ce6f774f5" kindref="member">GetRandomRunNumber</ref>(Int_t<sp/>mcRunNumber);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a7ee8c39c9cd29f2c47805e3ce6f774f5" kindref="member">GetRandomRunNumber</ref>(Int_t<sp/>mcRunNumber,<sp/>Double_t<sp/>mu);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a33cf22b6251bbaff2d5c782337c89f7f" kindref="member">GetRandomPeriodNumber</ref>(Int_t<sp/>mcRunNumber);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1aadd61aa74421033e011d4bf27d0e7d09" kindref="member">GetRandomLumiBlockNumber</ref>(UInt_t<sp/>runNumber);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Methods<sp/>for<sp/>PROOF<sp/>cluster<sp/>merging<sp/>of<sp/>generated<sp/>histos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/>Merge(TCollection<sp/>*coll);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//*std::map&lt;Int_t,std::map&lt;Int_t,<sp/>TH1*&gt;<sp/>&gt;<sp/>&amp;<sp/>GetInputHistograms()<sp/>{<sp/>return<sp/>m_inputHistograms;}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Methods<sp/>to<sp/>inspect<sp/>the<sp/>input<sp/>and<sp/>weighting<sp/>histograms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TH1*<sp/>GetInputHistogram(Int_t<sp/>channelNumber,<sp/>Int_t<sp/>periodNumber)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_periods.find(periodNumber)==m_periods.end()||</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_periods[periodNumber]-&gt;inputHists.find(channelNumber)==m_periods[periodNumber]-&gt;inputHists.end())<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_periods[periodNumber]-&gt;inputHists[channelNumber];</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TH1D*<sp/>GetPrimaryDistribution(Int_t<sp/>channelNumber,<sp/>Int_t<sp/>periodNumber)<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_periods.find(periodNumber)==m_periods.end()||</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_periods[periodNumber]-&gt;primaryHists.find(channelNumber)==m_periods[periodNumber]-&gt;primaryHists.end())<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_periods[periodNumber]-&gt;primaryHists[channelNumber];</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TH1D*<sp/>GetPrimaryTriggerDistribution(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>trigger,<sp/>Int_t<sp/>periodNumber,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>triggerBits)<sp/><sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_triggerObjs.find(trigger)==m_triggerObjs.end()<sp/>||<sp/>m_triggerObjs[trigger]-&gt;triggerHists.find(periodNumber)<sp/>==m_triggerObjs[trigger]-&gt;triggerHists.end()<sp/>||</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_triggerObjs[trigger]-&gt;triggerHists[periodNumber].find(triggerBits)<sp/>==<sp/>m_triggerObjs[trigger]-&gt;triggerHists[periodNumber].end())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(m_triggerObjs.find(trigger)==m_triggerObjs.end()<sp/>||<sp/>m_triggerObjs.at(trigger).second-&gt;triggerHists.find(periodNumber)==m_triggerObjs.at(trigger).second-&gt;-&gt;triggerHists.end()<sp/>||</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_triggerObjs.at(trigger).second-&gt;triggerHists.at(periodNumber).find(triggerBits)<sp/>==<sp/>m_triggerObjs.at(trigger).second.at(periodNumber).end())<sp/>return<sp/>0;</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_triggerObjs[trigger]-&gt;triggerHists[periodNumber][triggerBits];</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Double_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1adb81b889115b2745a5fb6adf07a02297" kindref="member">GetDataWeight</ref>(Int_t<sp/>runNumber,<sp/>TString<sp/>trigger,<sp/>Double_t<sp/>x);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Double_t<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1adb81b889115b2745a5fb6adf07a02297" kindref="member">GetDataWeight</ref>(Int_t<sp/>runNumber,<sp/>TString<sp/>trigger);</highlight><highlight class="comment">//version<sp/>without<sp/>mu<sp/>dependence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>other<sp/>methods<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Bool_t<sp/>IsInitialized()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_isInitialized;<sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/>AddDistribution(TH1*<sp/>hist,<sp/>Int_t<sp/>runNumber,<sp/>Int_t<sp/>channelNumber);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="da/dd0/classCP_1_1TPileupReweighting_1a10e1163871f2f459c6760c2277e5c6ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a10e1163871f2f459c6760c2277e5c6ab" kindref="member">ResetCountingMode</ref>()<sp/>{<sp/>m_countingMode=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetParentTool(<ref refid="da/dd0/classCP_1_1TPileupReweighting" kindref="compound">TPileupReweighting</ref>*<sp/>tool)<sp/>{<sp/>m_parentTool<sp/>=<sp/>tool;<sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Float_t<sp/>GetDataScaleFactor()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dataScaleFactorX;<sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetTriggerBit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>trigger,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>in=</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{<sp/>m_triggerPassBits[trigger]=in;<sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ResetTriggerBits()<sp/>{<sp/>m_triggerPassBits.clear();<sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>GetRunAverageMu(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>run)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_runs[run].inputHists[</highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">]-&gt;GetMean();<sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>runLbnOK(Int_t<sp/></highlight><highlight class="comment">/*runNbr*/</highlight><highlight class="normal">,<sp/>Int_t<sp/></highlight><highlight class="comment">/*lbn*/</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}<sp/></highlight><highlight class="comment">//override<sp/>in<sp/>the<sp/>ASG<sp/>tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>passTriggerBeforePrescale(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>trigger)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_triggerPassBits.size()==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_triggerPassBits.at(trigger);<sp/></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(...)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//override<sp/>in<sp/>the<sp/>ASG<sp/>tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;TString,<sp/>bool&gt;<sp/>m_triggerPassBits;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/>GetNearestGoodBin(Int_t<sp/>thisMCRunNumber,<sp/>Int_t<sp/>bin);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/>IsBadBin(Int_t<sp/>thisMCRunNumber,<sp/>Int_t<sp/>bin);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TH1*<sp/>CloneEmptyHistogram(Int_t<sp/>runNumber,<sp/>Int_t<sp/>channelNumber);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a062a43c0ff62c4d8ca9ceedefba84609" kindref="member">normalizeHistogram</ref>(TH1*<sp/>histo);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddDistributionTree(TTree<sp/>*tree,<sp/>TFile<sp/>*file);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//*Int_t<sp/>FactorizeDistribution(TH1*<sp/>hist,<sp/>const<sp/>TString<sp/>weightName,<sp/>Int_t<sp/>channelNumber,<sp/>Int_t<sp/>periodNumber,bool<sp/>includeInMCRun,bool<sp/>includeInGlobal);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CalculatePrescaledLuminosityHistograms(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>trigger);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//**********<sp/>Private<sp/>members*************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d68/classTPileupReweighting" kindref="compound" tooltip="Tool to get the calculated MC pileup weight. Also does custom weights and other useful...">TPileupReweighting</ref>*<sp/>m_parentTool;<sp/></highlight><highlight class="comment">//points<sp/>to<sp/>self<sp/>if<sp/>not<sp/>a<sp/>&apos;systematic<sp/>varion&apos;<sp/>tool<sp/>instance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Bool_t<sp/>m_SetWarnings;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Bool_t<sp/>m_debugging;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Bool_t<sp/>m_countingMode;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/>m_unrepresentedDataAction;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//used<sp/>as<sp/>property<sp/>in<sp/>wrapper<sp/>tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Bool_t<sp/>m_isInitialized;Bool_t<sp/>m_lumiVectorIsLoaded;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Float_t<sp/>m_dataScaleFactorX;Float_t<sp/>m_dataScaleFactorY;<sp/><sp/><sp/></highlight><highlight class="comment">//first<sp/>is<sp/>used<sp/>as<sp/>property<sp/>in<sp/>wrapper<sp/>tool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Float_t<sp/>m_mcScaleFactorX;Float_t<sp/>m_mcScaleFactorY;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/>m_nextPeriodNumber;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Bool_t<sp/>m_ignoreFilePeriods;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TTree<sp/>*m_metadatatree;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Double_t<sp/>m_unrepDataTolerance;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Bool_t<sp/>m_doGlobalDataWeight;<sp/></highlight><highlight class="comment">//used<sp/>in<sp/>GetDataWeight<sp/>to<sp/>flag<sp/>mu-independent<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/>m_lumicalcRunNumberOffset;<sp/></highlight><highlight class="comment">//used<sp/>for<sp/>&apos;faking&apos;<sp/>a<sp/>lumicalc<sp/>file<sp/>for<sp/>run2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="333" refid="da/dd0/classCP_1_1TPileupReweighting_1ad8ff01dfb40bdd39d0d9ffa285bee4fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;TString,std::vector&lt;TString&gt;<sp/>&gt;<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1ad8ff01dfb40bdd39d0d9ffa285bee4fc" kindref="member">m_lumicalcFiles</ref>;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Shared<sp/>private<sp/>data<sp/>members</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="342" refid="da/dd0/classCP_1_1TPileupReweighting_1acc554bac7e5e113342a7d46f59041c5d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TH1*<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1acc554bac7e5e113342a7d46f59041c5d" kindref="member">m_emptyHistogram</ref>;<sp/></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="347" refid="da/dd0/classCP_1_1TPileupReweighting_1a288305bffea7e48c89dde838ab443653" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;TString,<sp/>std::map&lt;Int_t,<sp/>Double_t&gt;<sp/>&gt;<sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting_1a288305bffea7e48c89dde838ab443653" kindref="member">m_metadata</ref>;<sp/></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="350" refid="dd/dc7/structCP_1_1TPileupReweighting_1_1CompositeTrigger" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="dd/dc7/structCP_1_1TPileupReweighting_1_1CompositeTrigger" kindref="compound">CompositeTrigger</ref><sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>op;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/dc7/structCP_1_1TPileupReweighting_1_1CompositeTrigger" kindref="compound">CompositeTrigger</ref>*<sp/>trig1;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/dc7/structCP_1_1TPileupReweighting_1_1CompositeTrigger" kindref="compound">CompositeTrigger</ref>*<sp/>trig2;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TString<sp/>val;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;TString&gt;<sp/>subTriggers;<sp/></highlight><highlight class="comment">//only<sp/>set<sp/>for<sp/>top-level<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/dc7/structCP_1_1TPileupReweighting_1_1CompositeTrigger" kindref="compound">CompositeTrigger</ref>()<sp/>:<sp/>op(0),trig1(0),trig2(0),val(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~<ref refid="dd/dc7/structCP_1_1TPileupReweighting_1_1CompositeTrigger" kindref="compound">CompositeTrigger</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(trig1)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>trig1;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(trig2)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>trig2;<sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eval(std::map&lt;TString,<sp/>std::map&lt;Int_t,<sp/>std::map&lt;Int_t,<sp/>Float_t&gt;<sp/>&gt;<sp/>&gt;&amp;<sp/>m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>run,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lbn,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting" kindref="compound">TPileupReweighting</ref>*<sp/>tool)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(op)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m[val][run].find(lbn)==m[val][run].end()<sp/>||<sp/>!m[val][run][lbn]<sp/>||<sp/>!tool-&gt;passTriggerBeforePrescale(val))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">/*trigger/failed<sp/>disabled,<sp/>so<sp/>cannot<sp/>contribute*/</highlight><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1./m[val][run][lbn];</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.<sp/>-<sp/>(1.<sp/>-<sp/>trig1-&gt;eval(m,run,lbn,tool))*(1.-trig2-&gt;eval(m,run,lbn,tool));<sp/></highlight><highlight class="comment">//OR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>trig1-&gt;eval(m,run,lbn,tool)*trig2-&gt;eval(m,run,lbn,tool);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getTriggers(std::vector&lt;TString&gt;&amp;<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(trig1==0&amp;&amp;trig2==0&amp;&amp;val.Length()&gt;0)<sp/>s.push_back(val);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/>trig1-&gt;getTriggers(s);<sp/>trig2-&gt;getTriggers(s);<sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>getBits(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting" kindref="compound">TPileupReweighting</ref>*<sp/>tool)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>out(0);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint<sp/>i=0;i&lt;subTriggers.size();i++)<sp/>out<sp/>+=<sp/>(tool-&gt;passTriggerBeforePrescale(subTriggers[i])<sp/>&lt;&lt;<sp/>i);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;int,<sp/>std::map&lt;long,<sp/>TH1D*&gt;<sp/>&gt;<sp/>triggerHists;<sp/></highlight><highlight class="comment">//unnormalized<sp/>...<sp/>i.e.<sp/>integral<sp/>should<sp/>be<sp/>equal<sp/>to<sp/>the<sp/>lumi!<sp/>...<sp/>indexed<sp/>by<sp/>PeriodID,tbits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;TString,<sp/>CompositeTrigger*&gt;<sp/>m_triggerObjs;<sp/></highlight><highlight class="comment">//map<sp/>from<sp/>trigger<sp/>string<sp/>to<sp/>composite<sp/>trigger<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/dc7/structCP_1_1TPileupReweighting_1_1CompositeTrigger" kindref="compound">CompositeTrigger</ref>*<sp/>makeTrigger(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TString&amp;<sp/>s);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>calculateHistograms(<ref refid="dd/dc7/structCP_1_1TPileupReweighting_1_1CompositeTrigger" kindref="compound">CompositeTrigger</ref>*<sp/>trigger);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PrintPeriods()<sp/>{<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p<sp/>:<sp/>m_periods)<sp/>{std::cout<sp/>&lt;&lt;<sp/>p.first<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-&gt;<sp/>&quot;</highlight><highlight class="normal">;<sp/>p.second-&gt;print(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);}<sp/>}</highlight></codeline>
<codeline lineno="390" refid="d8/dc5/structCP_1_1TPileupReweighting_1_1Period" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d8/dc5/structCP_1_1TPileupReweighting_1_1Period" kindref="compound">Period</ref><sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/dc5/structCP_1_1TPileupReweighting_1_1Period" kindref="compound">Period</ref>(Int_t<sp/>_id,<sp/>UInt_t<sp/>_start,<sp/>UInt_t<sp/>_end,<sp/>Int_t<sp/>_defaultChannel)<sp/>:<sp/>id(_id),start(_start),end(_end),defaultChannel(_defaultChannel)<sp/>{};</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/>id;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UInt_t<sp/>start;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UInt_t<sp/>end;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/>defaultChannel;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;Int_t,<sp/>Int_t&gt;<sp/>inputBinRedirect;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;Int_t,<sp/>Double_t&gt;<sp/>unrepData;<sp/></highlight><highlight class="comment">//indexed<sp/>by<sp/>channel<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Period*&gt;<sp/>subPeriods;<sp/></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;UInt_t&gt;<sp/>runNumbers;<sp/></highlight><highlight class="comment">//populated<sp/>with<sp/>runNumbers<sp/>that<sp/>actually<sp/>had<sp/>some<sp/>data<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;Int_t,<sp/>TH1*&gt;<sp/>inputHists;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;Int_t,<sp/>Double_t&gt;<sp/>sumOfWeights;<sp/></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;Int_t,<sp/>Int_t&gt;<sp/>numberOfEntries;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;Int_t,<sp/>TH1D*&gt;<sp/>primaryHists;<sp/></highlight><highlight class="comment">//normalized<sp/>histograms,<sp/>indexed<sp/>by<sp/>channelNumber.<sp/>-1<sp/>holds<sp/>the<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;Int_t,<sp/>TH2D*&gt;<sp/>secondaryHists;<sp/></highlight><highlight class="comment">//semi-normalized<sp/>histograms,<sp/>only<sp/>used<sp/>in<sp/>2D<sp/>reweighting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::map&lt;TString,<sp/>TH1D*&gt;<sp/>triggerHists;<sp/>//unnormalized<sp/>...<sp/>i.e.<sp/>integral<sp/>should<sp/>be<sp/>equal<sp/>to<sp/>the<sp/>lumi!<sp/>...<sp/>should<sp/>really<sp/>only<sp/>be<sp/>filled<sp/>in<sp/>the<sp/>channel=-1<sp/>case<sp/>(i.e.<sp/>data)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>contains(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>runNumber)<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(runNumber<sp/>&gt;=<sp/>start<sp/>&amp;&amp;<sp/>runNumber<sp/>&lt;=<sp/>end)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p<sp/>:<sp/>subPeriods)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p-&gt;contains(runNumber))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetDefaultChannel(Int_t<sp/>channel)<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defaultChannel=channel;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p<sp/>:<sp/>subPeriods)<sp/>p-&gt;SetDefaultChannel(channel);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>prefix)<sp/>{<sp/></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>prefix<sp/>&lt;&lt;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>start<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>end<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]<sp/>:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hist<sp/>:<sp/>inputHists)<sp/>std::cout<sp/>&lt;&lt;<sp/>hist.first<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p<sp/>:<sp/>subPeriods)<sp/>p-&gt;print(TString::Format(</highlight><highlight class="stringliteral">&quot;<sp/>%s&quot;</highlight><highlight class="normal">,prefix).Data());<sp/>};</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="421" refid="db/d6a/structCP_1_1TPileupReweighting_1_1Run" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="db/d6a/structCP_1_1TPileupReweighting_1_1Run" kindref="compound">Run</ref><sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;TString,TH1*&gt;<sp/>inputHists;<sp/></highlight><highlight class="comment">//key<sp/>is<sp/>the<sp/>&apos;trigger&apos;<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;Int_t,Double_t&gt;<sp/>badBins;<sp/></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Double_t<sp/>lumi;<sp/></highlight><highlight class="comment">//total<sp/>data<sp/>in<sp/>run</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;UInt_t,<sp/>std::pair&lt;Double_t,Double_t&gt;<sp/>&gt;<sp/>lumiByLbn;<sp/></highlight><highlight class="comment">//key=lbn,<sp/>value<sp/>=<sp/>&lt;lumi,mu&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TH1D*<sp/>muDist;<sp/></highlight><highlight class="comment">//mu<sp/>distribution<sp/>for<sp/>this<sp/>run</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;Int_t,<sp/>Period*&gt;<sp/>m_periods;<sp/></highlight><highlight class="comment">//periods<sp/>mapped<sp/>by<sp/>id.<sp/>-1<sp/>=<sp/>the<sp/>&quot;global&quot;<sp/>period<sp/>(0-&gt;9999999).<sp/>Uses<sp/>a<sp/>pointer<sp/>so<sp/>can<sp/>easily<sp/>implement<sp/>remap<sp/>as<sp/>two<sp/>entries<sp/>pointing<sp/>at<sp/>same<sp/>period</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;UInt_t,<sp/>Run&gt;<sp/>m_runs;<sp/></highlight><highlight class="comment">//runs<sp/>mapped<sp/>by<sp/>runNumber</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;Int_t,<sp/>Double_t&gt;<sp/>unrepDataByChannel;<sp/></highlight><highlight class="comment">//<sp/>-1<sp/>holds<sp/>the<sp/>total<sp/>unrepData!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>m_prwFilesPathPrefix;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//RandomDataPeriod<sp/>functionality<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//numbers<sp/>generated<sp/>seperately<sp/>for<sp/>each<sp/>mc<sp/>period</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TRandom3<sp/>*m_random3;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Bool_t<sp/>m_ignoreBadChannels;<sp/></highlight><highlight class="comment">//if<sp/>true,<sp/>will<sp/>print<sp/>a<sp/>warning<sp/>about<sp/>any<sp/>channels<sp/>with<sp/>too<sp/>much<sp/>unrepresented<sp/>data,<sp/>but<sp/>will<sp/>then<sp/>just<sp/>ignore<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Bool_t<sp/>m_useMultiPeriods<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//if<sp/>true,<sp/>will<sp/>allow<sp/>for<sp/>runDependentMC<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this<sp/>method<sp/>is<sp/>a<sp/>convenience<sp/>for<sp/>copying<sp/>over<sp/>properties<sp/>to<sp/>the<sp/>tools<sp/>that<sp/>are<sp/>used<sp/>for<sp/>systematic<sp/>variations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CopyProperties(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/dd0/classCP_1_1TPileupReweighting" kindref="compound">TPileupReweighting</ref>*<sp/>in)<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_prwFilesPathPrefix<sp/>=<sp/>in-&gt;m_prwFilesPathPrefix;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_ignoreBadChannels<sp/>=<sp/>in-&gt;m_ignoreBadChannels;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_unrepresentedDataAction<sp/>=<sp/>in-&gt;m_unrepresentedDataAction;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_unrepDataTolerance=<sp/>in-&gt;m_unrepDataTolerance;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ClassDef(<ref refid="da/dd0/classCP_1_1TPileupReweighting" kindref="compound">TPileupReweighting</ref>,0)</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/>};<sp/></highlight><highlight class="comment">//<sp/>End:<sp/>class<sp/>definition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End:<sp/>namespace<sp/>Root</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/PileupReweighting/PileupReweighting/TPileupReweighting.h"/>
  </compounddef>
</doxygen>
