<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d4/d1b/FeatureCollectAthena_8h" kind="file">
    <compoundname>FeatureCollectAthena.h</compoundname>
    <includes local="no">string</includes>
    <includes local="no">set</includes>
    <includes local="yes">boost/foreach.hpp</includes>
    <includes local="yes">boost/type_traits/is_same.hpp</includes>
    <includes local="yes">boost/shared_ptr.hpp</includes>
    <includes local="yes">boost/lexical_cast.hpp</includes>
    <includes local="yes">TrigNavigation/NavigationCore.h</includes>
    <includes local="yes">TrigNavigation/NavigationCore.icc</includes>
    <includes refid="d7/ddc/TrigDecisionTool_2TrigDecisionTool_2Conditions_8h" local="yes">TrigDecisionTool/Conditions.h</includes>
    <includes refid="de/dfe/TDTUtilities_8h" local="yes">TrigDecisionTool/TDTUtilities.h</includes>
    <includes refid="d8/da0/ClassTraits_8h" local="yes">TrigDecisionTool/ClassTraits.h</includes>
    <includes refid="da/d66/TrigSteeringEvent_2TrigSteeringEvent_2TrigPassBits_8h" local="yes">TrigSteeringEvent/TrigPassBits.h</includes>
    <includes refid="d5/d12/TrigPassFlags_8h" local="yes">TrigSteeringEvent/TrigPassFlags.h</includes>
    <includes local="yes">AnalysisTriggerEvent/Muon_ROI.h</includes>
    <includes local="yes">AnalysisTriggerEvent/EmTau_ROI.h</includes>
    <includes local="yes">AnalysisTriggerEvent/Jet_ROI.h</includes>
    <includes local="yes">AnalysisTriggerEvent/JetET_ROI.h</includes>
    <includes local="yes">AnalysisTriggerEvent/EnergySum_ROI.h</includes>
    <includes local="yes">AnalysisTriggerEvent/LVL1_ROI.h</includes>
    <includes refid="de/d30/EmTauRoI_8h" local="yes">xAODTrigger/EmTauRoI.h</includes>
    <includes refid="d0/dc6/EmTauRoIContainer_8h" local="yes">xAODTrigger/EmTauRoIContainer.h</includes>
    <includes refid="de/d0d/MuonRoI_8h" local="yes">xAODTrigger/MuonRoI.h</includes>
    <includes refid="db/d4a/MuonRoIContainer_8h" local="yes">xAODTrigger/MuonRoIContainer.h</includes>
    <includes refid="df/dd4/JetRoI_8h" local="yes">xAODTrigger/JetRoI.h</includes>
    <includes refid="d7/d36/JetRoIContainer_8h" local="yes">xAODTrigger/JetRoIContainer.h</includes>
    <includes local="yes">TrigStorageDefinitions/EDM_TypeInfo.h</includes>
    <includes refid="dc/d2f/Feature_8h" local="yes">TrigDecisionTool/Feature.h</includes>
    <includedby refid="de/d6c/FeatureCollectAthena_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/src/FeatureCollectAthena.cxx</includedby>
    <includedby refid="dd/daf/Combination_8h" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Combination.h</includedby>
    <incdepgraph>
      <node id="321339">
        <label>list</label>
      </node>
      <node id="321378">
        <label>xAODTrigger/MuonRoI.h</label>
        <link refid="de/d0d/MuonRoI_8h_source"/>
        <childnode refid="321379" relation="include">
        </childnode>
        <childnode refid="321261" relation="include">
        </childnode>
      </node>
      <node id="321348">
        <label>AthContainers/tools/DVL_algorithms.icc</label>
        <link refid="df/daa/DVL__algorithms_8icc"/>
        <childnode refid="321333" relation="include">
        </childnode>
        <childnode refid="321340" relation="include">
        </childnode>
        <childnode refid="321324" relation="include">
        </childnode>
        <childnode refid="321329" relation="include">
        </childnode>
        <childnode refid="321259" relation="include">
        </childnode>
      </node>
      <node id="321333">
        <label>AthContainers/tools/DVLNoBase.h</label>
        <link refid="d7/d92/DVLNoBase_8h"/>
      </node>
      <node id="321303">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="321355">
        <label>AthContainers/tools/DVLDataBucket.h</label>
        <link refid="d4/d16/DVLDataBucket_8h"/>
        <childnode refid="321356" relation="include">
        </childnode>
        <childnode refid="321334" relation="include">
        </childnode>
        <childnode refid="321276" relation="include">
        </childnode>
        <childnode refid="321357" relation="include">
        </childnode>
      </node>
      <node id="321320">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="321269" relation="include">
        </childnode>
        <childnode refid="321270" relation="include">
        </childnode>
        <childnode refid="321276" relation="include">
        </childnode>
        <childnode refid="321277" relation="include">
        </childnode>
      </node>
      <node id="321395">
        <label>AsgTools/IAsgTool.h</label>
        <link refid="df/dd4/IAsgTool_8h_source"/>
        <childnode refid="321245" relation="include">
        </childnode>
        <childnode refid="321392" relation="include">
        </childnode>
        <childnode refid="321396" relation="include">
        </childnode>
        <childnode refid="321397" relation="include">
        </childnode>
      </node>
      <node id="321322">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="321284" relation="include">
        </childnode>
        <childnode refid="321267" relation="include">
        </childnode>
        <childnode refid="321323" relation="include">
        </childnode>
        <childnode refid="321262" relation="include">
        </childnode>
      </node>
      <node id="321321">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="321275">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="321277">
        <label>functional</label>
      </node>
      <node id="321330">
        <label>boost/version.hpp</label>
      </node>
      <node id="321249">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="321381">
        <label>xAODTrigger/versions/MuonRoIContainer_v1.h</label>
        <link refid="d5/df0/MuonRoIContainer__v1_8h_source"/>
        <childnode refid="321264" relation="include">
        </childnode>
        <childnode refid="321379" relation="include">
        </childnode>
      </node>
      <node id="321274">
        <label>limits</label>
      </node>
      <node id="321323">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="321301">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="321397">
        <label>GaudiKernel/IAlgTool.h</label>
      </node>
      <node id="321271">
        <label>iterator</label>
      </node>
      <node id="321285">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="321245" relation="include">
        </childnode>
        <childnode refid="321286" relation="include">
        </childnode>
      </node>
      <node id="321377">
        <label>xAODTrigger/versions/EmTauRoIContainer_v2.h</label>
        <link refid="d2/d46/EmTauRoIContainer__v2_8h_source"/>
        <childnode refid="321264" relation="include">
        </childnode>
        <childnode refid="321374" relation="include">
        </childnode>
      </node>
      <node id="321250">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="321354">
        <label>SGTools/ClassName.h</label>
      </node>
      <node id="321360">
        <label>AthContainers/DataVector.icc</label>
        <link refid="da/de6/DataVector_8icc"/>
        <childnode refid="321361" relation="include">
        </childnode>
        <childnode refid="321328" relation="include">
        </childnode>
        <childnode refid="321274" relation="include">
        </childnode>
        <childnode refid="321277" relation="include">
        </childnode>
        <childnode refid="321362" relation="include">
        </childnode>
      </node>
      <node id="321265">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="321266" relation="include">
        </childnode>
        <childnode refid="321278" relation="include">
        </childnode>
        <childnode refid="321260" relation="include">
        </childnode>
        <childnode refid="321279" relation="include">
        </childnode>
        <childnode refid="321245" relation="include">
        </childnode>
      </node>
      <node id="321287">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="321256" relation="include">
        </childnode>
        <childnode refid="321272" relation="include">
        </childnode>
      </node>
      <node id="321289">
        <label>stdint.h</label>
      </node>
      <node id="321366">
        <label>AnalysisTriggerEvent/Muon_ROI.h</label>
      </node>
      <node id="321244">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureCollectAthena.h</label>
        <link refid="FeatureCollectAthena.h"/>
        <childnode refid="321245" relation="include">
        </childnode>
        <childnode refid="321246" relation="include">
        </childnode>
        <childnode refid="321247" relation="include">
        </childnode>
        <childnode refid="321248" relation="include">
        </childnode>
        <childnode refid="321249" relation="include">
        </childnode>
        <childnode refid="321250" relation="include">
        </childnode>
        <childnode refid="321251" relation="include">
        </childnode>
        <childnode refid="321252" relation="include">
        </childnode>
        <childnode refid="321253" relation="include">
        </childnode>
        <childnode refid="321255" relation="include">
        </childnode>
        <childnode refid="321257" relation="include">
        </childnode>
        <childnode refid="321258" relation="include">
        </childnode>
        <childnode refid="321364" relation="include">
        </childnode>
        <childnode refid="321366" relation="include">
        </childnode>
        <childnode refid="321367" relation="include">
        </childnode>
        <childnode refid="321368" relation="include">
        </childnode>
        <childnode refid="321369" relation="include">
        </childnode>
        <childnode refid="321370" relation="include">
        </childnode>
        <childnode refid="321371" relation="include">
        </childnode>
        <childnode refid="321372" relation="include">
        </childnode>
        <childnode refid="321375" relation="include">
        </childnode>
        <childnode refid="321378" relation="include">
        </childnode>
        <childnode refid="321380" relation="include">
        </childnode>
        <childnode refid="321382" relation="include">
        </childnode>
        <childnode refid="321385" relation="include">
        </childnode>
        <childnode refid="321388" relation="include">
        </childnode>
        <childnode refid="321389" relation="include">
        </childnode>
      </node>
      <node id="321340">
        <label>AthContainers/tools/DVLCast.h</label>
        <link refid="df/d5c/DVLCast_8h"/>
        <childnode refid="321274" relation="include">
        </childnode>
        <childnode refid="321341" relation="include">
        </childnode>
        <childnode refid="321279" relation="include">
        </childnode>
        <childnode refid="321272" relation="include">
        </childnode>
        <childnode refid="321267" relation="include">
        </childnode>
      </node>
      <node id="321308">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="321267" relation="include">
        </childnode>
        <childnode refid="321279" relation="include">
        </childnode>
      </node>
      <node id="321281">
        <label>AthContainers/IndexTrackingPolicy.h</label>
        <link refid="d0/da5/IndexTrackingPolicy_8h"/>
      </node>
      <node id="321251">
        <label>TrigNavigation/NavigationCore.h</label>
      </node>
      <node id="321254">
        <label>TrigDecisionInterface/Conditions.h</label>
        <link refid="db/d3b/TrigDecisionInterface_2TrigDecisionInterface_2Conditions_8h_source"/>
      </node>
      <node id="321403">
        <label>TrigDecisionTool/TypelessFeature.h</label>
        <link refid="d0/d2d/TypelessFeature_8h_source"/>
        <childnode refid="321399" relation="include">
        </childnode>
        <childnode refid="321404" relation="include">
        </childnode>
        <childnode refid="321392" relation="include">
        </childnode>
        <childnode refid="321405" relation="include">
        </childnode>
      </node>
      <node id="321247">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="321385">
        <label>xAODTrigger/JetRoIContainer.h</label>
        <link refid="d7/d36/JetRoIContainer_8h_source"/>
        <childnode refid="321382" relation="include">
        </childnode>
        <childnode refid="321386" relation="include">
        </childnode>
        <childnode refid="321387" relation="include">
        </childnode>
        <childnode refid="321261" relation="include">
        </childnode>
      </node>
      <node id="321292">
        <label>RVersion.h</label>
      </node>
      <node id="321268">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="321269" relation="include">
        </childnode>
        <childnode refid="321276" relation="include">
        </childnode>
        <childnode refid="321277" relation="include">
        </childnode>
      </node>
      <node id="321384">
        <label>xAODTrigger/versions/JetRoI_v2.h</label>
        <link refid="dc/d2f/JetRoI__v2_8h_source"/>
        <childnode refid="321289" relation="include">
        </childnode>
        <childnode refid="321256" relation="include">
        </childnode>
        <childnode refid="321245" relation="include">
        </childnode>
        <childnode refid="321324" relation="include">
        </childnode>
        <childnode refid="321363" relation="include">
        </childnode>
      </node>
      <node id="321255">
        <label>TrigDecisionTool/TDTUtilities.h</label>
        <link refid="de/dfe/TDTUtilities_8h_source"/>
        <childnode refid="321245" relation="include">
        </childnode>
        <childnode refid="321256" relation="include">
        </childnode>
      </node>
      <node id="321273">
        <label>cmath</label>
      </node>
      <node id="321327">
        <label>cassert</label>
      </node>
      <node id="321331">
        <label>boost/mpl/if.hpp</label>
      </node>
      <node id="321350">
        <label>boost/static_assert.hpp</label>
      </node>
      <node id="321260">
        <label>stdexcept</label>
      </node>
      <node id="321393">
        <label>AsgTools/MsgLevel.h</label>
        <link refid="de/d80/MsgLevel_8h"/>
        <childnode refid="321245" relation="include">
        </childnode>
        <childnode refid="321392" relation="include">
        </childnode>
        <childnode refid="321394" relation="include">
        </childnode>
      </node>
      <node id="321304">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="321337">
        <label>boost/type_traits/is_pointer.hpp</label>
      </node>
      <node id="321345">
        <label>boost/iterator/iterator_adaptor.hpp</label>
      </node>
      <node id="321407">
        <label>TLorentzVector.h</label>
      </node>
      <node id="321392">
        <label>AsgTools/AsgToolsConf.h</label>
        <link refid="df/db7/AsgToolsConf_8h_source"/>
      </node>
      <node id="321258">
        <label>TrigSteeringEvent/TrigPassBits.h</label>
        <link refid="da/d66/TrigSteeringEvent_2TrigSteeringEvent_2TrigPassBits_8h_source"/>
        <childnode refid="321256" relation="include">
        </childnode>
        <childnode refid="321259" relation="include">
        </childnode>
        <childnode refid="321260" relation="include">
        </childnode>
        <childnode refid="321261" relation="include">
        </childnode>
        <childnode refid="321263" relation="include">
        </childnode>
      </node>
      <node id="321245">
        <label>string</label>
      </node>
      <node id="321283">
        <label>AthContainers/AuxVectorData.h</label>
        <link refid="d9/df2/AuxVectorData_8h"/>
        <childnode refid="321266" relation="include">
        </childnode>
        <childnode refid="321284" relation="include">
        </childnode>
        <childnode refid="321285" relation="include">
        </childnode>
        <childnode refid="321287" relation="include">
        </childnode>
        <childnode refid="321288" relation="include">
        </childnode>
        <childnode refid="321294" relation="include">
        </childnode>
        <childnode refid="321295" relation="include">
        </childnode>
        <childnode refid="321296" relation="include">
        </childnode>
        <childnode refid="321256" relation="include">
        </childnode>
        <childnode refid="321270" relation="include">
        </childnode>
        <childnode refid="321272" relation="include">
        </childnode>
        <childnode refid="321297" relation="include">
        </childnode>
        <childnode refid="321298" relation="include">
        </childnode>
        <childnode refid="321299" relation="include">
        </childnode>
        <childnode refid="321305" relation="include">
        </childnode>
      </node>
      <node id="321307">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="321267" relation="include">
        </childnode>
        <childnode refid="321279" relation="include">
        </childnode>
      </node>
      <node id="321297">
        <label>AthContainers/tools/likely.h</label>
        <link refid="d6/dd6/likely_8h"/>
      </node>
      <node id="321342">
        <label>AthContainers/tools/DVLIterator.h</label>
        <link refid="d3/dc7/DVLIterator_8h_source"/>
        <childnode refid="321280" relation="include">
        </childnode>
        <childnode refid="321340" relation="include">
        </childnode>
        <childnode refid="321343" relation="include">
        </childnode>
        <childnode refid="321345" relation="include">
        </childnode>
        <childnode refid="321330" relation="include">
        </childnode>
        <childnode refid="321271" relation="include">
        </childnode>
        <childnode refid="321272" relation="include">
        </childnode>
      </node>
      <node id="321356">
        <label>SGTools/DataBucket.h</label>
      </node>
      <node id="321400">
        <label>map</label>
      </node>
      <node id="321357">
        <label>AthContainers/tools/DVLDataBucket.icc</label>
        <link refid="d3/d21/DVLDataBucket_8icc"/>
        <childnode refid="321358" relation="include">
        </childnode>
      </node>
      <node id="321358">
        <label>SGTools/IRegisterTransient.h</label>
      </node>
      <node id="321293">
        <label>RootMetaSelection.h</label>
      </node>
      <node id="321317">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="321380">
        <label>xAODTrigger/MuonRoIContainer.h</label>
        <link refid="db/d4a/MuonRoIContainer_8h_source"/>
        <childnode refid="321378" relation="include">
        </childnode>
        <childnode refid="321381" relation="include">
        </childnode>
        <childnode refid="321261" relation="include">
        </childnode>
      </node>
      <node id="321347">
        <label>AthContainers/tools/DVL_algorithms.h</label>
        <link refid="d0/d7a/DVL__algorithms_8h"/>
        <childnode refid="321342" relation="include">
        </childnode>
        <childnode refid="321271" relation="include">
        </childnode>
        <childnode refid="321259" relation="include">
        </childnode>
        <childnode refid="321348" relation="include">
        </childnode>
      </node>
      <node id="321263">
        <label>TrigSteeringEvent/TrigPassBitsCollection.h</label>
        <link refid="d4/de2/TrigPassBitsCollection_8h_source"/>
        <childnode refid="321264" relation="include">
        </childnode>
        <childnode refid="321363" relation="include">
        </childnode>
        <childnode refid="321258" relation="include">
        </childnode>
      </node>
      <node id="321386">
        <label>xAODTrigger/versions/JetRoIContainer_v1.h</label>
        <link refid="de/d43/JetRoIContainer__v1_8h_source"/>
        <childnode refid="321264" relation="include">
        </childnode>
        <childnode refid="321383" relation="include">
        </childnode>
      </node>
      <node id="321402">
        <label>boost/variant.hpp</label>
      </node>
      <node id="321404">
        <label>fstream</label>
      </node>
      <node id="321298">
        <label>AthContainers/tools/assume.h</label>
        <link refid="d2/d20/assume_8h"/>
      </node>
      <node id="321314">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="321343">
        <label>AthContainers/tools/ElementProxy.h</label>
        <link refid="db/d26/ElementProxy_8h"/>
        <childnode refid="321280" relation="include">
        </childnode>
        <childnode refid="321291" relation="include">
        </childnode>
        <childnode refid="321276" relation="include">
        </childnode>
        <childnode refid="321344" relation="include">
        </childnode>
      </node>
      <node id="321394">
        <label>GaudiKernel/IMessageSvc.h</label>
      </node>
      <node id="321325">
        <label>AthContainersInterfaces/IAuxElement.h</label>
        <link refid="dd/d7a/IAuxElement_8h"/>
      </node>
      <node id="321291">
        <label>AthLinks/tools/selection_ns.h</label>
        <link refid="d3/dec/selection__ns_8h"/>
        <childnode refid="321292" relation="include">
        </childnode>
        <childnode refid="321293" relation="include">
        </childnode>
      </node>
      <node id="321295">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="321302">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="321341">
        <label>limits.h</label>
      </node>
      <node id="321382">
        <label>xAODTrigger/JetRoI.h</label>
        <link refid="df/dd4/JetRoI_8h_source"/>
        <childnode refid="321383" relation="include">
        </childnode>
        <childnode refid="321384" relation="include">
        </childnode>
        <childnode refid="321261" relation="include">
        </childnode>
      </node>
      <node id="321401">
        <label>TrigNavStructure/Types.h</label>
        <link refid="d5/d81/TrigNavStructure_2Types_8h_source"/>
        <childnode refid="321289" relation="include">
        </childnode>
        <childnode refid="321402" relation="include">
        </childnode>
      </node>
      <node id="321335">
        <label>AthContainers/tools/ClassID.h</label>
        <link refid="de/de2/ClassID_8h"/>
        <childnode refid="321336" relation="include">
        </childnode>
      </node>
      <node id="321367">
        <label>AnalysisTriggerEvent/EmTau_ROI.h</label>
      </node>
      <node id="321371">
        <label>AnalysisTriggerEvent/LVL1_ROI.h</label>
      </node>
      <node id="321312">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="321285" relation="include">
        </childnode>
        <childnode refid="321274" relation="include">
        </childnode>
        <childnode refid="321289" relation="include">
        </childnode>
        <childnode refid="321313" relation="include">
        </childnode>
      </node>
      <node id="321266">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="321267" relation="include">
        </childnode>
        <childnode refid="321268" relation="include">
        </childnode>
      </node>
      <node id="321269">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="321259" relation="include">
        </childnode>
        <childnode refid="321270" relation="include">
        </childnode>
        <childnode refid="321271" relation="include">
        </childnode>
        <childnode refid="321267" relation="include">
        </childnode>
        <childnode refid="321272" relation="include">
        </childnode>
        <childnode refid="321273" relation="include">
        </childnode>
        <childnode refid="321274" relation="include">
        </childnode>
        <childnode refid="321245" relation="include">
        </childnode>
        <childnode refid="321275" relation="include">
        </childnode>
      </node>
      <node id="321375">
        <label>xAODTrigger/EmTauRoIContainer.h</label>
        <link refid="d0/dc6/EmTauRoIContainer_8h_source"/>
        <childnode refid="321372" relation="include">
        </childnode>
        <childnode refid="321376" relation="include">
        </childnode>
        <childnode refid="321377" relation="include">
        </childnode>
        <childnode refid="321261" relation="include">
        </childnode>
      </node>
      <node id="321328">
        <label>AthContainers/tools/ATHCONTAINERS_ASSERT.h</label>
        <link refid="de/d6b/ATHCONTAINERS__ASSERT_8h"/>
        <childnode refid="321327" relation="include">
        </childnode>
      </node>
      <node id="321406">
        <label>xAODBase/IParticle.h</label>
        <link refid="d5/dac/IParticle_8h_source"/>
        <childnode refid="321407" relation="include">
        </childnode>
        <childnode refid="321324" relation="include">
        </childnode>
        <childnode refid="321408" relation="include">
        </childnode>
        <childnode refid="321323" relation="include">
        </childnode>
      </node>
      <node id="321408">
        <label>ObjectType.h</label>
        <link refid="d8/d04/ObjectType_8h_source"/>
        <childnode refid="321409" relation="include">
        </childnode>
      </node>
      <node id="321257">
        <label>TrigDecisionTool/ClassTraits.h</label>
        <link refid="d8/da0/ClassTraits_8h_source"/>
      </node>
      <node id="321344">
        <label>AthContainers/tools/ElementProxy.icc</label>
        <link refid="d6/d70/ElementProxy_8icc"/>
        <childnode refid="321340" relation="include">
        </childnode>
        <childnode refid="321328" relation="include">
        </childnode>
      </node>
      <node id="321279">
        <label>typeinfo</label>
      </node>
      <node id="321326">
        <label>AthContainers/AuxElement.icc</label>
        <link refid="d2/d37/AuxElement_8icc"/>
        <childnode refid="321297" relation="include">
        </childnode>
        <childnode refid="321327" relation="include">
        </childnode>
      </node>
      <node id="321264">
        <label>AthContainers/DataVector.h</label>
        <link refid="d7/dd6/DataVector_8h"/>
        <childnode refid="321265" relation="include">
        </childnode>
        <childnode refid="321280" relation="include">
        </childnode>
        <childnode refid="321281" relation="include">
        </childnode>
        <childnode refid="321282" relation="include">
        </childnode>
        <childnode refid="321333" relation="include">
        </childnode>
        <childnode refid="321334" relation="include">
        </childnode>
        <childnode refid="321340" relation="include">
        </childnode>
        <childnode refid="321342" relation="include">
        </childnode>
        <childnode refid="321346" relation="include">
        </childnode>
        <childnode refid="321347" relation="include">
        </childnode>
        <childnode refid="321343" relation="include">
        </childnode>
        <childnode refid="321349" relation="include">
        </childnode>
        <childnode refid="321291" relation="include">
        </childnode>
        <childnode refid="321350" relation="include">
        </childnode>
        <childnode refid="321351" relation="include">
        </childnode>
        <childnode refid="321345" relation="include">
        </childnode>
        <childnode refid="321256" relation="include">
        </childnode>
        <childnode refid="321279" relation="include">
        </childnode>
        <childnode refid="321277" relation="include">
        </childnode>
        <childnode refid="321352" relation="include">
        </childnode>
        <childnode refid="321259" relation="include">
        </childnode>
        <childnode refid="321260" relation="include">
        </childnode>
        <childnode refid="321271" relation="include">
        </childnode>
        <childnode refid="321323" relation="include">
        </childnode>
        <childnode refid="321353" relation="include">
        </childnode>
        <childnode refid="321355" relation="include">
        </childnode>
        <childnode refid="321359" relation="include">
        </childnode>
        <childnode refid="321360" relation="include">
        </childnode>
      </node>
      <node id="321313">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="321294">
        <label>AthenaKernel/ILockable.h</label>
      </node>
      <node id="321399">
        <label>TrigNavStructure/TriggerElement.h</label>
        <link refid="d7/d71/TriggerElement_8h_source"/>
        <childnode refid="321400" relation="include">
        </childnode>
        <childnode refid="321256" relation="include">
        </childnode>
        <childnode refid="321245" relation="include">
        </childnode>
        <childnode refid="321289" relation="include">
        </childnode>
        <childnode refid="321352" relation="include">
        </childnode>
        <childnode refid="321401" relation="include">
        </childnode>
      </node>
      <node id="321374">
        <label>xAODTrigger/versions/EmTauRoI_v2.h</label>
        <link refid="da/d90/EmTauRoI__v2_8h_source"/>
        <childnode refid="321289" relation="include">
        </childnode>
        <childnode refid="321256" relation="include">
        </childnode>
        <childnode refid="321245" relation="include">
        </childnode>
        <childnode refid="321324" relation="include">
        </childnode>
        <childnode refid="321363" relation="include">
        </childnode>
      </node>
      <node id="321290">
        <label>AthLinks/DataLinkBase.h</label>
        <link refid="db/da8/DataLinkBase_8h_source"/>
        <childnode refid="321289" relation="include">
        </childnode>
      </node>
      <node id="321286">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="321316">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="321369">
        <label>AnalysisTriggerEvent/JetET_ROI.h</label>
      </node>
      <node id="321334">
        <label>AthContainers/tools/DVLInfo.h</label>
        <link refid="d3/d2e/DVLInfo_8h"/>
        <childnode refid="321335" relation="include">
        </childnode>
        <childnode refid="321282" relation="include">
        </childnode>
        <childnode refid="321279" relation="include">
        </childnode>
        <childnode refid="321267" relation="include">
        </childnode>
        <childnode refid="321275" relation="include">
        </childnode>
        <childnode refid="321337" relation="include">
        </childnode>
        <childnode refid="321315" relation="include">
        </childnode>
        <childnode refid="321338" relation="include">
        </childnode>
      </node>
      <node id="321262">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="321353">
        <label>AthContainers/ClassName.h</label>
        <link refid="dd/d6b/AthContainers_2AthContainers_2ClassName_8h_source"/>
        <childnode refid="321354" relation="include">
        </childnode>
      </node>
      <node id="321306">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="321266" relation="include">
        </childnode>
        <childnode refid="321307" relation="include">
        </childnode>
        <childnode refid="321308" relation="include">
        </childnode>
        <childnode refid="321309" relation="include">
        </childnode>
        <childnode refid="321318" relation="include">
        </childnode>
        <childnode refid="321299" relation="include">
        </childnode>
        <childnode refid="321267" relation="include">
        </childnode>
        <childnode refid="321279" relation="include">
        </childnode>
        <childnode refid="321256" relation="include">
        </childnode>
        <childnode refid="321320" relation="include">
        </childnode>
        <childnode refid="321321" relation="include">
        </childnode>
      </node>
      <node id="321365">
        <label>TrigSteeringEvent/TrigPassFlagsCollection.h</label>
        <link refid="d4/dfd/TrigPassFlagsCollection_8h_source"/>
        <childnode refid="321264" relation="include">
        </childnode>
        <childnode refid="321363" relation="include">
        </childnode>
        <childnode refid="321364" relation="include">
        </childnode>
      </node>
      <node id="321256">
        <label>vector</label>
      </node>
      <node id="321361">
        <label>AthContainers/tools/CompareAndPrint.h</label>
        <link refid="d5/da8/CompareAndPrint_8h_source"/>
        <childnode refid="321259" relation="include">
        </childnode>
        <childnode refid="321279" relation="include">
        </childnode>
      </node>
      <node id="321253">
        <label>TrigDecisionTool/Conditions.h</label>
        <link refid="d7/ddc/TrigDecisionTool_2TrigDecisionTool_2Conditions_8h_source"/>
        <childnode refid="321254" relation="include">
        </childnode>
      </node>
      <node id="321405">
        <label>TrigDecisionTool/EventPtrDef.h</label>
        <link refid="d4/dfc/TrigDecisionTool_2TrigDecisionTool_2EventPtrDef_8h_source"/>
      </node>
      <node id="321387">
        <label>xAODTrigger/versions/JetRoIContainer_v2.h</label>
        <link refid="d5/d14/JetRoIContainer__v2_8h_source"/>
        <childnode refid="321264" relation="include">
        </childnode>
        <childnode refid="321384" relation="include">
        </childnode>
      </node>
      <node id="321362">
        <label>AthContainers/tools/DVLEltBaseInfo.icc</label>
        <link refid="dd/d5e/DVLEltBaseInfo_8icc"/>
      </node>
      <node id="321270">
        <label>utility</label>
      </node>
      <node id="321359">
        <label>SGTools/DataBucketTraitFwd.h</label>
      </node>
      <node id="321296">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="321391">
        <label>sstream</label>
      </node>
      <node id="321332">
        <label>AthContainers/AuxVectorBase.icc</label>
        <link refid="d4/d50/AuxVectorBase_8icc"/>
      </node>
      <node id="321300">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="321310">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="321299">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="321300" relation="include">
        </childnode>
        <childnode refid="321301" relation="include">
        </childnode>
        <childnode refid="321302" relation="include">
        </childnode>
        <childnode refid="321303" relation="include">
        </childnode>
        <childnode refid="321304" relation="include">
        </childnode>
      </node>
      <node id="321409">
        <label>iosfwd</label>
      </node>
      <node id="321272">
        <label>cstdlib</label>
      </node>
      <node id="321352">
        <label>iostream</label>
      </node>
      <node id="321278">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="321284">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="321266" relation="include">
        </childnode>
        <childnode refid="321267" relation="include">
        </childnode>
        <childnode refid="321262" relation="include">
        </childnode>
      </node>
      <node id="321267">
        <label>cstddef</label>
      </node>
      <node id="321388">
        <label>TrigStorageDefinitions/EDM_TypeInfo.h</label>
      </node>
      <node id="321398">
        <label>GaudiKernel/MsgStream.h</label>
      </node>
      <node id="321390">
        <label>AsgTools/MsgStream.h</label>
        <link refid="d3/d95/AsgTools_2AsgTools_2MsgStream_8h_source"/>
        <childnode refid="321245" relation="include">
        </childnode>
        <childnode refid="321391" relation="include">
        </childnode>
        <childnode refid="321392" relation="include">
        </childnode>
        <childnode refid="321393" relation="include">
        </childnode>
        <childnode refid="321395" relation="include">
        </childnode>
        <childnode refid="321398" relation="include">
        </childnode>
      </node>
      <node id="321252">
        <label>TrigNavigation/NavigationCore.icc</label>
      </node>
      <node id="321305">
        <label>AthContainers/AuxVectorData.icc</label>
        <link refid="da/de7/AuxVectorData_8icc"/>
        <childnode refid="321306" relation="include">
        </childnode>
        <childnode refid="321322" relation="include">
        </childnode>
        <childnode refid="321284" relation="include">
        </childnode>
        <childnode refid="321297" relation="include">
        </childnode>
        <childnode refid="321298" relation="include">
        </childnode>
      </node>
      <node id="321396">
        <label>AsgTools/AsgToolMacros.h</label>
        <link refid="d1/d68/AsgToolMacros_8h_source"/>
      </node>
      <node id="321363">
        <label>xAODCore/BaseInfo.h</label>
        <link refid="d3/d17/BaseInfo_8h_source"/>
        <childnode refid="321323" relation="include">
        </childnode>
      </node>
      <node id="321370">
        <label>AnalysisTriggerEvent/EnergySum_ROI.h</label>
      </node>
      <node id="321372">
        <label>xAODTrigger/EmTauRoI.h</label>
        <link refid="de/d30/EmTauRoI_8h_source"/>
        <childnode refid="321373" relation="include">
        </childnode>
        <childnode refid="321374" relation="include">
        </childnode>
        <childnode refid="321261" relation="include">
        </childnode>
      </node>
      <node id="321368">
        <label>AnalysisTriggerEvent/Jet_ROI.h</label>
      </node>
      <node id="321338">
        <label>AthContainers/tools/DVLInfo.icc</label>
        <link refid="da/d83/DVLInfo_8icc"/>
        <childnode refid="321280" relation="include">
        </childnode>
        <childnode refid="321256" relation="include">
        </childnode>
        <childnode refid="321339" relation="include">
        </childnode>
        <childnode refid="321327" relation="include">
        </childnode>
        <childnode refid="321272" relation="include">
        </childnode>
        <childnode refid="321323" relation="include">
        </childnode>
      </node>
      <node id="321309">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="321307" relation="include">
        </childnode>
        <childnode refid="321310" relation="include">
        </childnode>
        <childnode refid="321287" relation="include">
        </childnode>
        <childnode refid="321311" relation="include">
        </childnode>
        <childnode refid="321296" relation="include">
        </childnode>
        <childnode refid="321279" relation="include">
        </childnode>
        <childnode refid="321256" relation="include">
        </childnode>
        <childnode refid="321259" relation="include">
        </childnode>
        <childnode refid="321289" relation="include">
        </childnode>
        <childnode refid="321315" relation="include">
        </childnode>
        <childnode refid="321316" relation="include">
        </childnode>
        <childnode refid="321317" relation="include">
        </childnode>
      </node>
      <node id="321373">
        <label>xAODTrigger/versions/EmTauRoI_v1.h</label>
        <link refid="dc/d06/EmTauRoI__v1_8h_source"/>
        <childnode refid="321289" relation="include">
        </childnode>
        <childnode refid="321256" relation="include">
        </childnode>
        <childnode refid="321245" relation="include">
        </childnode>
        <childnode refid="321324" relation="include">
        </childnode>
        <childnode refid="321363" relation="include">
        </childnode>
      </node>
      <node id="321364">
        <label>TrigSteeringEvent/TrigPassFlags.h</label>
        <link refid="d5/d12/TrigPassFlags_8h_source"/>
        <childnode refid="321256" relation="include">
        </childnode>
        <childnode refid="321259" relation="include">
        </childnode>
        <childnode refid="321260" relation="include">
        </childnode>
        <childnode refid="321261" relation="include">
        </childnode>
        <childnode refid="321365" relation="include">
        </childnode>
      </node>
      <node id="321315">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="321282">
        <label>AthContainers/AuxVectorBase.h</label>
        <link refid="d7/d18/AuxVectorBase_8h"/>
        <childnode refid="321283" relation="include">
        </childnode>
        <childnode refid="321280" relation="include">
        </childnode>
        <childnode refid="321281" relation="include">
        </childnode>
        <childnode refid="321324" relation="include">
        </childnode>
        <childnode refid="321306" relation="include">
        </childnode>
        <childnode refid="321265" relation="include">
        </childnode>
        <childnode refid="321328" relation="include">
        </childnode>
        <childnode refid="321322" relation="include">
        </childnode>
        <childnode refid="321329" relation="include">
        </childnode>
        <childnode refid="321256" relation="include">
        </childnode>
        <childnode refid="321332" relation="include">
        </childnode>
      </node>
      <node id="321376">
        <label>xAODTrigger/versions/EmTauRoIContainer_v1.h</label>
        <link refid="db/d0a/EmTauRoIContainer__v1_8h_source"/>
        <childnode refid="321264" relation="include">
        </childnode>
        <childnode refid="321373" relation="include">
        </childnode>
      </node>
      <node id="321246">
        <label>set</label>
      </node>
      <node id="321261">
        <label>xAODCore/CLASS_DEF.h</label>
        <link refid="d6/d20/xAODCore_2xAODCore_2CLASS__DEF_8h"/>
        <childnode refid="321262" relation="include">
        </childnode>
      </node>
      <node id="321319">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="321311">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="321310" relation="include">
        </childnode>
        <childnode refid="321312" relation="include">
        </childnode>
        <childnode refid="321296" relation="include">
        </childnode>
        <childnode refid="321256" relation="include">
        </childnode>
        <childnode refid="321314" relation="include">
        </childnode>
      </node>
      <node id="321259">
        <label>algorithm</label>
      </node>
      <node id="321349">
        <label>AthContainers/tools/IsMostDerivedFlag.h</label>
        <link refid="d5/dfa/IsMostDerivedFlag_8h"/>
      </node>
      <node id="321324">
        <label>AthContainers/AuxElement.h</label>
        <link refid="d1/d6f/AuxElement_8h"/>
        <childnode refid="321325" relation="include">
        </childnode>
        <childnode refid="321284" relation="include">
        </childnode>
        <childnode refid="321322" relation="include">
        </childnode>
        <childnode refid="321288" relation="include">
        </childnode>
        <childnode refid="321306" relation="include">
        </childnode>
        <childnode refid="321283" relation="include">
        </childnode>
        <childnode refid="321287" relation="include">
        </childnode>
        <childnode refid="321265" relation="include">
        </childnode>
        <childnode refid="321297" relation="include">
        </childnode>
        <childnode refid="321267" relation="include">
        </childnode>
        <childnode refid="321326" relation="include">
        </childnode>
      </node>
      <node id="321389">
        <label>TrigDecisionTool/Feature.h</label>
        <link refid="dc/d2f/Feature_8h_source"/>
        <childnode refid="321245" relation="include">
        </childnode>
        <childnode refid="321246" relation="include">
        </childnode>
        <childnode refid="321247" relation="include">
        </childnode>
        <childnode refid="321248" relation="include">
        </childnode>
        <childnode refid="321249" relation="include">
        </childnode>
        <childnode refid="321250" relation="include">
        </childnode>
        <childnode refid="321390" relation="include">
        </childnode>
        <childnode refid="321399" relation="include">
        </childnode>
        <childnode refid="321372" relation="include">
        </childnode>
        <childnode refid="321375" relation="include">
        </childnode>
        <childnode refid="321378" relation="include">
        </childnode>
        <childnode refid="321380" relation="include">
        </childnode>
        <childnode refid="321382" relation="include">
        </childnode>
        <childnode refid="321385" relation="include">
        </childnode>
        <childnode refid="321403" relation="include">
        </childnode>
        <childnode refid="321388" relation="include">
        </childnode>
        <childnode refid="321406" relation="include">
        </childnode>
      </node>
      <node id="321288">
        <label>AthLinks/DataLink.h</label>
        <link refid="da/de8/DataLink_8h_source"/>
        <childnode refid="321289" relation="include">
        </childnode>
        <childnode refid="321245" relation="include">
        </childnode>
        <childnode refid="321290" relation="include">
        </childnode>
        <childnode refid="321291" relation="include">
        </childnode>
      </node>
      <node id="321346">
        <label>AthContainers/tools/DVL_iter_swap.h</label>
        <link refid="d6/ddb/DVL__iter__swap_8h"/>
        <childnode refid="321342" relation="include">
        </childnode>
        <childnode refid="321328" relation="include">
        </childnode>
        <childnode refid="321271" relation="include">
        </childnode>
      </node>
      <node id="321280">
        <label>AthContainers/OwnershipPolicy.h</label>
        <link refid="d3/da4/OwnershipPolicy_8h_source"/>
      </node>
      <node id="321379">
        <label>xAODTrigger/versions/MuonRoI_v1.h</label>
        <link refid="dd/d82/MuonRoI__v1_8h_source"/>
        <childnode refid="321289" relation="include">
        </childnode>
        <childnode refid="321245" relation="include">
        </childnode>
        <childnode refid="321324" relation="include">
        </childnode>
        <childnode refid="321363" relation="include">
        </childnode>
      </node>
      <node id="321336">
        <label>GaudiKernel/ClassID.h</label>
      </node>
      <node id="321351">
        <label>boost/type_traits.hpp</label>
      </node>
      <node id="321276">
        <label>memory</label>
      </node>
      <node id="321318">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="321308" relation="include">
        </childnode>
        <childnode refid="321309" relation="include">
        </childnode>
        <childnode refid="321319" relation="include">
        </childnode>
      </node>
      <node id="321248">
        <label>boost/type_traits/is_same.hpp</label>
      </node>
      <node id="321383">
        <label>xAODTrigger/versions/JetRoI_v1.h</label>
        <link refid="d9/d95/JetRoI__v1_8h_source"/>
        <childnode refid="321289" relation="include">
        </childnode>
        <childnode refid="321256" relation="include">
        </childnode>
        <childnode refid="321245" relation="include">
        </childnode>
        <childnode refid="321324" relation="include">
        </childnode>
        <childnode refid="321363" relation="include">
        </childnode>
      </node>
      <node id="321329">
        <label>AthContainersInterfaces/AuxStore_traits.h</label>
        <link refid="dd/d70/AuxStore__traits_8h"/>
        <childnode refid="321325" relation="include">
        </childnode>
        <childnode refid="321322" relation="include">
        </childnode>
        <childnode refid="321284" relation="include">
        </childnode>
        <childnode refid="321315" relation="include">
        </childnode>
        <childnode refid="321330" relation="include">
        </childnode>
        <childnode refid="321331" relation="include">
        </childnode>
        <childnode refid="321245" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="321411">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/Combination.h</label>
        <link refid="dd/daf/Combination_8h_source"/>
        <childnode refid="321412" relation="include">
        </childnode>
        <childnode refid="321429" relation="include">
        </childnode>
        <childnode refid="321430" relation="include">
        </childnode>
        <childnode refid="321422" relation="include">
        </childnode>
        <childnode refid="321423" relation="include">
        </childnode>
      </node>
      <node id="321415">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/CPAnalysisExamples/CPAnalysisExamples/ToolExamplesAlg.h</label>
        <link refid="d4/d75/ToolExamplesAlg_8h_source"/>
      </node>
      <node id="321430">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureContainer.h</label>
        <link refid="d5/de8/FeatureContainer_8h_source"/>
        <childnode refid="321431" relation="include">
        </childnode>
        <childnode refid="321412" relation="include">
        </childnode>
        <childnode refid="321429" relation="include">
        </childnode>
        <childnode refid="321422" relation="include">
        </childnode>
      </node>
      <node id="321436">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SUSYTools/SUSYTools/SUSYToolsDict.h</label>
        <link refid="dc/ded/SUSYToolsDict_8h_source"/>
      </node>
      <node id="321435">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SUSYTools/SUSYTools/SUSYObjDef_xAOD.h</label>
        <link refid="d0/daf/SUSYObjDef__xAOD_8h_source"/>
        <childnode refid="321436" relation="include">
        </childnode>
      </node>
      <node id="321413">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/TrigDecisionToolCore.h</label>
        <link refid="de/d03/TrigDecisionToolCore_8h_source"/>
        <childnode refid="321414" relation="include">
        </childnode>
        <childnode refid="321422" relation="include">
        </childnode>
      </node>
      <node id="321417">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigAnalysisTest/TrigAnalysisTest/ITest.h</label>
        <link refid="dd/d82/ITest_8h_source"/>
        <childnode refid="321416" relation="include">
        </childnode>
        <childnode refid="321418" relation="include">
        </childnode>
        <childnode refid="321419" relation="include">
        </childnode>
        <childnode refid="321420" relation="include">
        </childnode>
      </node>
      <node id="321425">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TriggerMatchingTool/TriggerMatchingTool/TriggerMatchingToolDict.h</label>
        <link refid="de/db3/TriggerMatchingToolDict_8h_source"/>
      </node>
      <node id="321410">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureCollectAthena.h</label>
        <link refid="FeatureCollectAthena.h"/>
        <childnode refid="321411" relation="include">
        </childnode>
      </node>
      <node id="321414">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/TrigDecisionTool.h</label>
        <link refid="d7/df7/TrigDecisionTool_8h_source"/>
        <childnode refid="321415" relation="include">
        </childnode>
        <childnode refid="321416" relation="include">
        </childnode>
        <childnode refid="321417" relation="include">
        </childnode>
        <childnode refid="321421" relation="include">
        </childnode>
        <childnode refid="321422" relation="include">
        </childnode>
        <childnode refid="321423" relation="include">
        </childnode>
        <childnode refid="321426" relation="include">
        </childnode>
        <childnode refid="321427" relation="include">
        </childnode>
      </node>
      <node id="321437">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/ChainGroupFunctions.h</label>
        <link refid="d3/d14/ChainGroupFunctions_8h_source"/>
        <childnode refid="321413" relation="include">
        </childnode>
        <childnode refid="321422" relation="include">
        </childnode>
      </node>
      <node id="321432">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SUSYTools/SUSYTools/ISUSYObjDef_xAODTool.h</label>
        <link refid="d1/d7a/ISUSYObjDef__xAODTool_8h_source"/>
        <childnode refid="321433" relation="include">
        </childnode>
        <childnode refid="321434" relation="include">
        </childnode>
        <childnode refid="321435" relation="include">
        </childnode>
      </node>
      <node id="321420">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigAnalysisTest/TrigAnalysisTest/TestFactory.h</label>
        <link refid="d7/d5f/TestFactory_8h_source"/>
      </node>
      <node id="321421">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigAnalysisTest/TrigAnalysisTest/TriggersFiredTest.h</label>
        <link refid="da/d06/TriggersFiredTest_8h_source"/>
      </node>
      <node id="321428">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigTauMatching/TrigTauMatching/TrigTauMatchingDict.h</label>
        <link refid="dc/d01/TrigTauMatchingDict_8h_source"/>
      </node>
      <node id="321433">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SUSYTools/src/ApplySUSYTools.h</label>
        <link refid="dd/dcc/ApplySUSYTools_8h_source"/>
      </node>
      <node id="321418">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigAnalysisTest/TrigAnalysisTest/BasicTriggerFired.h</label>
        <link refid="d5/dd0/BasicTriggerFired_8h_source"/>
      </node>
      <node id="321431">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/ChainGroup.h</label>
        <link refid="d2/dd8/ChainGroup_8h_source"/>
        <childnode refid="321432" relation="include">
        </childnode>
        <childnode refid="321437" relation="include">
        </childnode>
        <childnode refid="321438" relation="include">
        </childnode>
        <childnode refid="321412" relation="include">
        </childnode>
        <childnode refid="321429" relation="include">
        </childnode>
        <childnode refid="321413" relation="include">
        </childnode>
        <childnode refid="321422" relation="include">
        </childnode>
      </node>
      <node id="321429">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/ExpertMethods.h</label>
        <link refid="dd/d57/ExpertMethods_8h_source"/>
        <childnode refid="321413" relation="include">
        </childnode>
        <childnode refid="321422" relation="include">
        </childnode>
      </node>
      <node id="321434">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/SUSYTools/src/SUSYToolsAlg.h</label>
        <link refid="d4/dd2/SUSYToolsAlg_8h_source"/>
      </node>
      <node id="321419">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigAnalysisTest/TrigAnalysisTest/Run1BStoxAODTrigger.h</label>
        <link refid="dd/d41/Run1BStoxAODTrigger_8h_source"/>
      </node>
      <node id="321416">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigAnalysisTest/TrigAnalysisTest/AthenaTestHarness.h</label>
        <link refid="d5/d93/AthenaTestHarness_8h_source"/>
      </node>
      <node id="321424">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TriggerMatchingTool/TriggerMatchingTool/MatchingImplementation.h</label>
        <link refid="d1/d9b/MatchingImplementation_8h_source"/>
      </node>
      <node id="321438">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/ConfigurationAccess.h</label>
        <link refid="df/d4d/ConfigurationAccess_8h_source"/>
        <childnode refid="321413" relation="include">
        </childnode>
        <childnode refid="321422" relation="include">
        </childnode>
      </node>
      <node id="321427">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigTauMatching/TrigTauMatching/TrigTauMatching.h</label>
        <link refid="dc/d5a/TrigTauMatching_8h_source"/>
        <childnode refid="321428" relation="include">
        </childnode>
      </node>
      <node id="321422">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/TrigDecisionToolDict.h</label>
        <link refid="d4/df1/TrigDecisionToolDict_8h_source"/>
      </node>
      <node id="321426">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigTauMatching/src/TrigTauMatching_example.h</label>
        <link refid="d7/d96/TrigTauMatching__example_8h_source"/>
      </node>
      <node id="321412">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/DecisionAccess.h</label>
        <link refid="d7/d07/DecisionAccess_8h_source"/>
        <childnode refid="321413" relation="include">
        </childnode>
        <childnode refid="321422" relation="include">
        </childnode>
      </node>
      <node id="321423">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TriggerMatchingTool/TriggerMatchingTool/MatchingTool.h</label>
        <link refid="df/d10/MatchingTool_8h_source"/>
        <childnode refid="321424" relation="include">
        </childnode>
        <childnode refid="321425" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="db/d37/structTrig_1_1FeatureAccessImpl_1_1isDataVector" prot="public">Trig::FeatureAccessImpl::isDataVector</innerclass>
    <innerclass refid="d7/d75/structTrig_1_1FeatureAccessImpl_1_1isDataVector_1_1false__type" prot="private">Trig::FeatureAccessImpl::isDataVector::false_type</innerclass>
    <innerclass refid="d2/d0f/structTrig_1_1FeatureAccessImpl_1_1insert__and__flatten_3_01T_00_01STORED_00_01false_00_01LINK_01_4" prot="public">Trig::FeatureAccessImpl::insert_and_flatten&lt; T, STORED, false, LINK &gt;</innerclass>
    <innerclass refid="d0/de6/structTrig_1_1FeatureAccessImpl_1_1insert__and__flatten_3_01T_00_01CONT_00_01true_00_01LINK_01_4" prot="public">Trig::FeatureAccessImpl::insert_and_flatten&lt; T, CONT, true, LINK &gt;</innerclass>
    <innerclass refid="d2/d2c/structTrig_1_1FeatureAccessImpl_1_1print__features_3_01LINK_00_01true_01_4" prot="public">Trig::FeatureAccessImpl::print_features&lt; LINK, true &gt;</innerclass>
    <innerclass refid="d3/d43/structTrig_1_1FeatureAccessImpl_1_1print__features_3_01LINK_00_01false_01_4" prot="public">Trig::FeatureAccessImpl::print_features&lt; LINK, false &gt;</innerclass>
    <innerclass refid="df/dbd/structTrig_1_1FeatureAccessImpl_1_1true__type" prot="public">Trig::FeatureAccessImpl::true_type</innerclass>
    <innerclass refid="de/d8e/structTrig_1_1FeatureAccessImpl_1_1false__type" prot="public">Trig::FeatureAccessImpl::false_type</innerclass>
    <innerclass refid="d4/d3e/structTrig_1_1FeatureAccessImpl_1_1get__type_3_01true_01_4" prot="public">Trig::FeatureAccessImpl::get_type&lt; true &gt;</innerclass>
    <innerclass refid="d2/d37/structTrig_1_1FeatureAccessImpl_1_1get__type_3_01false_01_4" prot="public">Trig::FeatureAccessImpl::get_type&lt; false &gt;</innerclass>
    <innerclass refid="d2/d1a/structTrig_1_1FeatureAccessImpl_1_1get__links" prot="public">Trig::FeatureAccessImpl::get_links</innerclass>
    <innerclass refid="d9/da2/structTrig_1_1FeatureAccessImpl_1_1getFlagsHelper_3_01T_00_01STORED_00_01true_01_4" prot="public">Trig::FeatureAccessImpl::getFlagsHelper&lt; T, STORED, true &gt;</innerclass>
    <innerclass refid="db/d6b/structTrig_1_1FeatureAccessImpl_1_1getFlagsHelper_3_01T_00_01STORED_00_01false_01_4" prot="public">Trig::FeatureAccessImpl::getFlagsHelper&lt; T, STORED, false &gt;</innerclass>
    <innernamespace refid="d2/d87/namespaceTrig">Trig</innernamespace>
    <innernamespace refid="de/d34/namespaceTrig_1_1FeatureAccessImpl">Trig::FeatureAccessImpl</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>XAOD_ANALYSIS</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-*-<sp/>c++<sp/>-*-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TRIGGER_DECISION_TOOL_FeatureCollectAthena_H</highlight></codeline>
<codeline lineno="5"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TRIGGER_DECISION_TOOL_FeatureCollectAthena_H</highlight></codeline>
<codeline lineno="6"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************************</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>@Project:</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>@Package:<sp/>TrigDecision</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>@author<sp/>Nicolas<sp/>Berger<sp/><sp/>&lt;Nicolas.Berger@cern.ch&gt;<sp/><sp/>-<sp/>LAPP<sp/>Annecy</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>@author<sp/>Tomasz<sp/>Bold<sp/><sp/><sp/><sp/><sp/>&lt;tomasz.bold@cern.ch&gt;<sp/><sp/><sp/><sp/><sp/>-<sp/>UC<sp/>Irvine,<sp/>AGH-UST<sp/>Krakow</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>@author<sp/>Lukas<sp/>Heinrich<sp/><sp/>&lt;lukas.heinrich@cern.ch&gt;<sp/><sp/>-<sp/>NYU</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>***********************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;boost/foreach.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;boost/type_traits/is_same.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;boost/shared_ptr.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;boost/lexical_cast.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigNavigation/NavigationCore.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigNavigation/NavigationCore.icc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigDecisionTool/Conditions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigDecisionTool/TDTUtilities.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigDecisionTool/ClassTraits.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigSteeringEvent/TrigPassBits.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigSteeringEvent/TrigPassFlags.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>template<sp/>specializations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigSteeringEvent/TrigPassBits.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigSteeringEvent/TrigPassFlags.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;AnalysisTriggerEvent/Muon_ROI.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;AnalysisTriggerEvent/EmTau_ROI.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;AnalysisTriggerEvent/Jet_ROI.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;AnalysisTriggerEvent/JetET_ROI.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;AnalysisTriggerEvent/EnergySum_ROI.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;AnalysisTriggerEvent/LVL1_ROI.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODTrigger/EmTauRoI.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODTrigger/EmTauRoIContainer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODTrigger/MuonRoI.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODTrigger/MuonRoIContainer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODTrigger/JetRoI.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODTrigger/JetRoIContainer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>smart<sp/>type<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigStorageDefinitions/EDM_TypeInfo.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigDecisionTool/Feature.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Trig<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">FeatureAccessImpl<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>function<sp/>declaration<sp/>(see<sp/>cxx<sp/>for<sp/>the<sp/>deifinition)<sp/>wanted<sp/>to<sp/>have<sp/>this<sp/>freedom<sp/>in<sp/>case<sp/>of<sp/>patches<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/d20/classTrigPassBits" kindref="compound">TrigPassBits</ref>*<sp/>getBits(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">HLT::TriggerElement</ref>*<sp/>te,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label,<sp/>HLT::NavigationCore*<sp/>navigation<sp/>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref>*<sp/>getFlags(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">HLT::TriggerElement</ref>*<sp/>te,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label,<sp/>HLT::NavigationCore*<sp/>navigation<sp/>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compile<sp/>time<sp/>check<sp/>if<sp/>the<sp/>type<sp/>T<sp/>displays<sp/>type<sp/>ElementProxy<sp/>(this<sp/>is<sp/>specific<sp/>to<sp/>the<sp/>DataVectors<sp/>only)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="78" refid="db/d37/structTrig_1_1FeatureAccessImpl_1_1isDataVector" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="db/d37/structTrig_1_1FeatureAccessImpl_1_1isDataVector" kindref="compound">isDataVector</ref><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>these<sp/>types<sp/>are<sp/>defined<sp/>such<sp/>that<sp/>with<sp/>the<sp/>sizeof()<sp/>function<sp/>they<sp/>can<sp/>be<sp/>evaluated<sp/>at<sp/>compile<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="df/dbd/structTrig_1_1FeatureAccessImpl_1_1true__type" kindref="compound">true_type</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">false_type<sp/>{<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>dummy[2];<sp/>};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>using<sp/>SFINAE<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="df/dbd/structTrig_1_1FeatureAccessImpl_1_1true__type" kindref="compound">true_type</ref><sp/>trait_test_helper(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U::ElementProxy*);<sp/></highlight><highlight class="comment">//<sp/>if<sp/>U::ElementProxy<sp/>does<sp/>not<sp/>exist,<sp/>SFINAE<sp/>means<sp/>that<sp/>this<sp/>is<sp/>not<sp/>substituded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>false_type<sp/><sp/>trait_test_helper(...);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value=</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(trait_test_helper&lt;T&gt;(0))==</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="df/dbd/structTrig_1_1FeatureAccessImpl_1_1true__type" kindref="compound">true_type</ref>);<sp/></highlight><highlight class="comment">//<sp/>evaluated<sp/>at<sp/>compule<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>not<sp/>substituded<sp/>for<sp/>DataVectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>boost::disable_if_c&lt;isDataVector&lt;T&gt;::value,<sp/><ref refid="d1/def/classT" kindref="compound">T</ref>&gt;::type*<sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>use_or_construct(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/def/classT" kindref="compound">T</ref>*<sp/>source,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">HLT::TriggerElement</ref>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>HLT::NavigationCore*<sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>source;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>substituded<sp/>for<sp/>DataVectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::enable_if_c&lt;isDataVector&lt;T&gt;::value,<sp/><ref refid="d1/def/classT" kindref="compound">T</ref>&gt;::type*</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>use_or_construct(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/def/classT" kindref="compound">T</ref>*<sp/>source,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">HLT::TriggerElement</ref>*<sp/>te,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>condition,<sp/>HLT::NavigationCore*<sp/>navigation<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/d20/classTrigPassBits" kindref="compound">TrigPassBits</ref>*<sp/>bits(0);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>condition<sp/>==<sp/>TrigDefs::Physics<sp/>)<sp/>{</highlight><highlight class="comment">//<sp/>only<sp/>passing<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>bits<sp/>=<sp/>getBits(source-&gt;size(),<sp/>te,<sp/>label<sp/>,<sp/>navigation);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>bits<sp/>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>the<sp/>actual<sp/>filtering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/def/classT" kindref="compound">T</ref>*<sp/>destination<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d1/def/classT" kindref="compound">T</ref>();<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>destination-&gt;clear(<ref refid="dd/d59/namespaceSG_1acd9d1a31242c6243cc1c6fab0fbc7cd8ad7d4cf2303700f0966e4140f236c4bf1" kindref="member" tooltip="this data object is a view, it does not own its elmts">SG::VIEW_ELEMENTS</ref>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/>&quot;TDT_temporary_&quot;+label+&quot;_&quot;+boost::lexical_cast&lt;std::string&gt;(<sp/>(void*)<sp/>destination);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//navigation-&gt;getAccessProxy()-&gt;record(destination,<sp/>name);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T::base_value_type<sp/>*obj,<sp/>*source)<sp/>{<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="dc/d8d/namespaceHLT_1aad1a5f2e12d925b2ed3b5df49d89bdda" kindref="member" tooltip="Check the bit for the object in the associated bits object.">HLT::isPassing</ref>(bits,<sp/>obj,<sp/>source)<sp/><sp/>)<sp/></highlight><highlight class="comment">//<sp/>if<sp/>bits<sp/>are<sp/>missing<sp/>or<sp/>obj<sp/>is<sp/>realy<sp/>marked<sp/>as<sp/>passing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destination-&gt;push_back(const_cast&lt;typename<sp/>T::value_type&gt;(obj));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>destination;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>source;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CONT,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flatten,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>LINK&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">insert_and_flatten;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>specialization<sp/>below<sp/>is<sp/>for<sp/>the<sp/>case<sp/>that<sp/>requested<sp/>and<sp/>stored<sp/>are<sp/>the<sp/>same<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>means<sp/>that<sp/>requested<sp/>type<sp/>is<sp/>egamma_container<sp/>and<sp/>stored<sp/>is<sp/>egamma_container</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>the<sp/>requested<sp/>is<sp/>TrigRoiDescriptor<sp/>and<sp/>stored<sp/>is<sp/>TrigRoiDescriptor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>actual<sp/>data<sp/>storage<sp/>may<sp/>be<sp/>yet<sp/>diferent<sp/>of<sp/>course.<sp/>In<sp/>the<sp/>second<sp/>case<sp/>it<sp/>is<sp/>TrigRoiDescriptorCollection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>we<sp/>have<sp/>two<sp/>cases,<sp/>if<sp/>the<sp/>requested<sp/>object<sp/>is<sp/>DataVector<sp/>and<sp/>the<sp/>Physics<sp/>flag<sp/>is<sp/>requested<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>need<sp/>to<sp/>do<sp/>the<sp/>additional<sp/>filtering.<sp/>We<sp/>guess<sp/>that<sp/>this<sp/>is<sp/>the<sp/>case<sp/>sniffing<sp/>the<sp/>object<sp/>T<sp/>a<sp/>bit<sp/>with<sp/>the<sp/>has_traits<sp/>template.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>filtering<sp/>is<sp/>done<sp/>as<sp/>follows.<sp/>New<sp/>container<sp/>is<sp/>created<sp/>with<sp/>in<sp/>the<sp/>VIEW_ELEMENTS<sp/>mode<sp/>and<sp/>only<sp/>selected<sp/>objects<sp/>are<sp/>inserted<sp/>into<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>STORED,</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>LINK&gt;</highlight></codeline>
<codeline lineno="141" refid="d2/d0f/structTrig_1_1FeatureAccessImpl_1_1insert__and__flatten_3_01T_00_01STORED_00_01false_00_01LINK_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">insert_and_flatten&lt;<ref refid="d1/def/classT" kindref="compound">T</ref>,STORED,<sp/>false,<sp/>LINK&gt;<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>do_it(std::vector&lt;<ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Trig::Feature&lt;T&gt;</ref><sp/>&gt;&amp;<sp/>destination,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>STORED*<sp/>source,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">HLT::TriggerElement</ref>*<sp/>te,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>condition,<sp/>HLT::NavigationCore*<sp/>navigation,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LINK&amp;<sp/>lnk)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/def/classT" kindref="compound">T</ref>*<sp/>possibly_reduced_possibly_container<sp/>=<sp/>use_or_construct&lt;T&gt;(source,<sp/>te,<sp/>label,<sp/>condition,<sp/>navigation);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>destination.push_back(<ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Trig::Feature&lt;T&gt;</ref>(possibly_reduced_possibly_container,<sp/>te,<sp/>label,<sp/>possibly_reduced_possibly_container<sp/>!=<sp/>source,lnk));<sp/></highlight><highlight class="comment">//<sp/>by<sp/>2nd<sp/>to<sp/>the<sp/>last<sp/>arg<sp/>==<sp/>true<sp/>tell<sp/>the<sp/>Feature&lt;T&gt;<sp/>to<sp/>delete<sp/>container<sp/>at<sp/>deletion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CONT,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>LINK&gt;</highlight></codeline>
<codeline lineno="153" refid="d0/de6/structTrig_1_1FeatureAccessImpl_1_1insert__and__flatten_3_01T_00_01CONT_00_01true_00_01LINK_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">insert_and_flatten&lt;<ref refid="d1/def/classT" kindref="compound">T</ref>,<sp/>CONT,<sp/>true,<sp/>LINK&gt;<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>do_it(std::vector&lt;<ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Trig::Feature&lt;T&gt;</ref><sp/>&gt;&amp;<sp/>destination,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CONT*<sp/>source,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">HLT::TriggerElement</ref>*<sp/>te,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label,<sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>condition,<sp/>HLT::NavigationCore*<sp/>navigation,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LINK&amp;<sp/>lnk)<sp/>{<sp/><sp/></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)lnk;<sp/></highlight><highlight class="comment">//get<sp/>rid<sp/>of<sp/>unused<sp/>par<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;insert_and_flatten&lt;true&gt;<sp/>&quot;<sp/>&lt;&lt;<sp/>label<sp/>&lt;&lt;<sp/>&quot;<sp/>of<sp/>container<sp/>of<sp/>size<sp/>&quot;<sp/>&lt;&lt;<sp/>source-&gt;size()<sp/>&lt;&lt;<sp/><sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/d20/classTrigPassBits" kindref="compound">TrigPassBits</ref>*<sp/>bits(0);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>condition<sp/>==<sp/>TrigDefs::Physics<sp/>)<sp/>{</highlight><highlight class="comment">//<sp/>only<sp/>passing<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;asking<sp/>for<sp/>bits<sp/>for<sp/>&quot;<sp/>&lt;&lt;<sp/>label<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>=getBits(source-&gt;size(),<sp/>te,<sp/>label<sp/>,<sp/>navigation);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/def/classT" kindref="compound">T</ref>*<sp/>obj,<sp/>*source)<sp/>{<sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>bits==0<sp/>||<sp/><ref refid="dc/d8d/namespaceHLT_1aad1a5f2e12d925b2ed3b5df49d89bdda" kindref="member" tooltip="Check the bit for the object in the associated bits object.">HLT::isPassing</ref>(bits,<sp/>obj,<sp/>source)<sp/><sp/>)<sp/>{</highlight><highlight class="comment">//<sp/>if<sp/>bits<sp/>are<sp/>missing<sp/>or<sp/>obj<sp/>is<sp/>realy<sp/>marked<sp/>as<sp/>passing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;Pushing<sp/>back<sp/>new<sp/>feature<sp/>with<sp/>obj<sp/>&quot;<sp/>&lt;&lt;<sp/>obj<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destination.push_back(<ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Trig::Feature&lt;T&gt;</ref>(obj,<sp/>te,<sp/>label,</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt;typename LINK::value_type&gt;</ref>(obj,*source)));</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>LINK,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_container&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">print_features;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="d2/d2c/structTrig_1_1FeatureAccessImpl_1_1print__features_3_01LINK_00_01true_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>LINK&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">print_features&lt;LINK,true&gt;{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LINK::value_type*<sp/>ptr_type;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ptr_type<sp/>get_ptr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LINK&amp;<sp/>link){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>link.cptr();}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>do_it(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LINK&amp;<sp/>link,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*do_flatten*/</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;container<sp/>at&quot;<sp/>&lt;&lt;<sp/>link.cptr()<sp/>&lt;&lt;<sp/>&quot;<sp/>has<sp/>size<sp/>&quot;<sp/>&lt;&lt;<sp/>link.cptr()-&gt;size()<sp/>&lt;&lt;<sp/>std::endl;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;j&lt;link.cptr()-&gt;size();++j){</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/>----element<sp/>&quot;<sp/>&lt;&lt;<sp/>j<sp/>&lt;&lt;<sp/>&quot;:<sp/>&quot;<sp/>&lt;&lt;<sp/>link.cptr()-&gt;at(j)<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;<sp/>..<sp/>flatten<sp/>?<sp/>&quot;<sp/>&lt;&lt;<sp/>(do_flatten<sp/>?<sp/>&quot;yes&quot;<sp/>:<sp/>&quot;no&quot;)<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="189" refid="d3/d43/structTrig_1_1FeatureAccessImpl_1_1print__features_3_01LINK_00_01false_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>LINK&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">print_features&lt;LINK,false&gt;{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LINK::ElementType<sp/>ptr_type;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ptr_type<sp/>get_ptr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LINK&amp;<sp/>link){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*link;}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>do_it(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LINK&amp;<sp/></highlight><highlight class="comment">/*link*/</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*do_flatten*/</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;link<sp/>to<sp/>element<sp/>&quot;<sp/>&lt;&lt;<sp/>*link<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;<sp/>..<sp/>flatten<sp/>?<sp/>&quot;<sp/>&lt;&lt;<sp/>(do_flatten<sp/>?<sp/>&quot;yes&quot;<sp/>:<sp/>&quot;no&quot;)<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="df/dbd/structTrig_1_1FeatureAccessImpl_1_1true__type" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="df/dbd/structTrig_1_1FeatureAccessImpl_1_1true__type" kindref="compound">true_type</ref>{};<sp/><sp/></highlight><highlight class="comment">//different</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="de/d8e/structTrig_1_1FeatureAccessImpl_1_1false__type" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="de/d8e/structTrig_1_1FeatureAccessImpl_1_1false__type" kindref="compound">false_type</ref>{};<sp/></highlight><highlight class="comment">//types,<sp/>so<sp/>we<sp/>can<sp/>overload</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>retrieve&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">get_type;</highlight></codeline>
<codeline lineno="201" refid="d4/d3e/structTrig_1_1FeatureAccessImpl_1_1get__type_3_01true_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">get_type&lt;true&gt;{</highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="df/dbd/structTrig_1_1FeatureAccessImpl_1_1true__type" kindref="compound">true_type</ref><sp/><ref refid="df/dbd/structTrig_1_1FeatureAccessImpl_1_1true__type" kindref="compound">type</ref>;};</highlight></codeline>
<codeline lineno="202" refid="d2/d37/structTrig_1_1FeatureAccessImpl_1_1get__type_3_01false_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">get_type&lt;false&gt;{</highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="de/d8e/structTrig_1_1FeatureAccessImpl_1_1false__type" kindref="compound">false_type</ref><sp/><ref refid="de/d8e/structTrig_1_1FeatureAccessImpl_1_1false__type" kindref="compound">type</ref>;};</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>REQUESTED,</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EDMLIST&gt;</highlight></codeline>
<codeline lineno="205" refid="d2/d1a/structTrig_1_1FeatureAccessImpl_1_1get__links" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d2/d1a/structTrig_1_1FeatureAccessImpl_1_1get__links" kindref="compound">get_links</ref><sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d1a/structTrig_1_1FeatureAccessImpl_1_1get__links" kindref="compound">get_links</ref>():m_te(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_data(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_condition(0),</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_navigation(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_result(),</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_sourceTE(0)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight><highlight class="comment">//empty<sp/>ctor<sp/>but<sp/>need<sp/>to<sp/>initialize<sp/>reference<sp/>member</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d1a/structTrig_1_1FeatureAccessImpl_1_1get__links" kindref="compound">get_links</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">HLT::TriggerElement</ref>*<sp/>te,<sp/></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Trig::Feature&lt;REQUESTED&gt;</ref><sp/>&gt;*<sp/>data,<sp/></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>condition,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>teName,<sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HLT::NavigationCore*<sp/>navigation,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>result,<sp/></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">HLT::TriggerElement</ref>**<sp/>sourceTE):</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>m_te(te),<sp/>m_data(data),<sp/>m_label(label),<sp/>m_condition(condition),<sp/>m_teName(teName),<sp/>m_navigation(navigation),<sp/>m_result(result),<sp/>m_sourceTE(sourceTE){}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FEATURE&gt;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>do_it()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;TrigDecisionTool::Feature::get_links:<sp/>getting<sp/>links<sp/>from<sp/>navi<sp/>for<sp/>element<sp/>in<sp/>feature<sp/>list:<sp/>&quot;<sp/>&lt;&lt;<sp/>ClassID_traits&lt;FEATURE&gt;::typeName()<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;TrigDecisionTool::Feature::get_links:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>originally<sp/><sp/>requested<sp/>is:<sp/>&quot;<sp/>&lt;&lt;<sp/>ClassID_traits&lt;REQUESTED&gt;::typeName()<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Features2Container&lt;FEATURE,EDMLIST&gt;::type<sp/>container_type;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Features2Object&lt;FEATURE,EDMLIST&gt;::type<sp/>object_type;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_flatten<sp/><sp/>=<sp/>(!<sp/>boost::is_same&lt;REQUESTED,container_type&gt;::value)<sp/>&amp;&amp;<sp/>boost::is_same&lt;FEATURE,container_type&gt;::value;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_retrieve<sp/>=<sp/>!<sp/>(boost::is_same&lt;REQUESTED,container_type&gt;::value<sp/>&amp;&amp;<sp/>boost::is_same&lt;FEATURE,object_type&gt;::value);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;flatten?<sp/>(case<sp/>when<sp/>requested<sp/>type<sp/>is<sp/>element<sp/>of<sp/>feature<sp/>type)<sp/>:<sp/>&quot;<sp/><sp/>&lt;&lt;<sp/>(do_flatten<sp/>?<sp/>&quot;yes&quot;<sp/>:<sp/>&quot;no&quot;)<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;retrieve?<sp/>(don&apos;t<sp/>retrueve<sp/>when<sp/>requested<sp/>type<sp/>in<sp/>container<sp/>but<sp/>stored<sp/>type<sp/>is<sp/>element):<sp/>&quot;<sp/>&lt;&lt;<sp/>(do_retrieve<sp/>?<sp/>&quot;yes&quot;<sp/>:<sp/>&quot;no&quot;)<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>_do_it&lt;FEATURE,do_flatten&gt;(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>get_type&lt;do_retrieve&gt;::type());</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FEATURE,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_flatten&gt;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_do_it(<ref refid="de/d8e/structTrig_1_1FeatureAccessImpl_1_1false__type" kindref="compound">false_type</ref><sp/>dummy<sp/>=<sp/><ref refid="de/d8e/structTrig_1_1FeatureAccessImpl_1_1false__type" kindref="compound">false_type</ref>())</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{(void)dummy;</highlight><highlight class="comment">/*<sp/>do<sp/>nothing<sp/>*/</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FEATURE,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_flatten&gt;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_do_it(<ref refid="df/dbd/structTrig_1_1FeatureAccessImpl_1_1true__type" kindref="compound">true_type</ref><sp/>dummy<sp/>=<sp/><ref refid="df/dbd/structTrig_1_1FeatureAccessImpl_1_1true__type" kindref="compound">true_type</ref>())</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)dummy;<sp/></highlight><highlight class="comment">//<sp/>turn<sp/>of<sp/>unused<sp/>par<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>HLT::TriggerElement*<sp/>sourceTE(0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>sourceLabel;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Features2Container&lt;FEATURE,EDMLIST&gt;::type<sp/>container_type;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//typedef<sp/>typename<sp/>Features2Object&lt;FEATURE,EDMLIST&gt;::type<sp/>object_type;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Features2LinkHelper&lt;FEATURE,container_type&gt;::type<sp/>link_type;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;TrigDecisionTool::Feature::get_links:<sp/>link_type<sp/>is:<sp/>&quot;<sp/>&lt;&lt;<sp/>typeid(link_type).name()<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>link_type<sp/>link;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>new_result<sp/>=<sp/>m_navigation-&gt;getRecentFeatureDataOrElementLink(<sp/>m_te,<sp/>link,<sp/>m_label,<sp/>*m_sourceTE,<sp/>sourceLabel<sp/>);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_result)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_teName<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>||<sp/>m_teName<sp/>==<sp/><ref refid="d2/d87/namespaceTrig_1a283b99d494125fc3c7c68f465c25f237" kindref="member" tooltip="converts TEid to TE name (this may not always work, it depends on the availability...">Trig::getTEName</ref>(**m_sourceTE))<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(link.cptr())<sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;TrigDecisionTool::Feature::get_links:<sp/>actually<sp/>we<sp/>got<sp/>a<sp/>feature<sp/>here&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//print_features&lt;link_type,boost::is_same&lt;FEATURE,container_type&gt;::value&gt;::do_it(link,do_flatten);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>insert_and_flatten&lt;REQUESTED,FEATURE,<sp/>do_flatten,link_type&gt;::do_it(*m_data,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print_features&lt;link_type,boost::is_same&lt;FEATURE,container_type&gt;::value&gt;::get_ptr(link),</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*m_sourceTE,<sp/>sourceLabel,<sp/>m_condition,<sp/>m_navigation,link);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>*m_result<sp/>=<sp/>*m_result<sp/>&amp;&amp;<sp/>new_result;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">HLT::TriggerElement</ref>*<sp/>m_te;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Trig::Feature&lt;REQUESTED&gt;<sp/>&gt;*<sp/>m_data;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>m_label;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_condition;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>m_teName;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>HLT::NavigationCore*<sp/>m_navigation;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>m_result;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">HLT::TriggerElement</ref>**<sp/>m_sourceTE;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="288" refid="de/d34/namespaceTrig_1_1FeatureAccessImpl_1a6a26bc0bd981bbf28c31ad8ffd44f525" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/d34/namespaceTrig_1_1FeatureAccessImpl_1a6a26bc0bd981bbf28c31ad8ffd44f525" kindref="member" tooltip="actual feature acceess implementation It has (thanks to the ClassTraits) functionality...">collect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">HLT::TriggerElement</ref>*<sp/>te,<sp/>std::vector&lt;<ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Trig::Feature&lt;T&gt;</ref><sp/>&gt;&amp;<sp/>data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>label,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>condition,<sp/></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>teName,<sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure" kindref="compound">HLT::TrigNavStructure</ref>*<sp/>navstructure)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>navigation<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">HLT::NavigationCore*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(navstructure);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;Collecting<sp/>&quot;<sp/>&lt;&lt;<sp/>label<sp/>&lt;&lt;<sp/>&quot;<sp/>for<sp/>TE<sp/>&quot;<sp/>&lt;&lt;<sp/>te<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(condition<sp/>==<sp/>TrigDefs::Physics<sp/>&amp;&amp;<sp/>!te-&gt;<ref refid="dd/db8/classHLT_1_1TriggerElement_1aa1014a6dcf9da0fd26301b9ee6d6bb7b" kindref="member" tooltip="get state of the TriggerElement">getActiveState</ref>()<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">HLT::TriggerElement</ref>*<sp/>sourceTE(0);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>sourceLabel;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__GCCXML__</highlight></codeline>
<codeline lineno="302"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//typedef<sp/>typename<sp/>Features2Container&lt;T&gt;::type<sp/>container_type;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Features2Object&lt;T&gt;::type<sp/>object_type;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Object2Features&lt;object_type&gt;::type<sp/>feature_list;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d1a/structTrig_1_1FeatureAccessImpl_1_1get__links" kindref="compound">get_links&lt;T,TypeInfo_EDM&gt;</ref><sp/>link_getter(<sp/>te,<sp/>&amp;data,<sp/>label,<sp/>condition,<sp/>teName,<sp/>navigation,<sp/>&amp;result,<sp/>&amp;sourceTE);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>HLT::TypeInformation::for_each_type&lt;feature_list,get_links&lt;T,TypeInfo_EDM&gt;<sp/>&gt;::do_it(&amp;link_getter);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="308"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result){</highlight><highlight class="comment">/*do<sp/>nothing<sp/>anymore*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>getRecentFeature<sp/>returned<sp/>false<sp/>-&gt;<sp/>bifurcation?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;HLT::TriggerElement*&gt;<sp/>bif_tes<sp/>=<sp/>navigation-&gt;getDirectPredecessors(sourceTE);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>bif_tes.size()<sp/>&lt;=<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>that<sp/>means<sp/>it<sp/>is<sp/>plain<sp/>error<sp/>(it<sp/>will<sp/>be<sp/>printed<sp/>by<sp/>the<sp/>Navigation)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bifurcation<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">HLT::TriggerElement</ref>*<sp/>predecesor_te,<sp/>bif_tes<sp/>)<sp/></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/d34/namespaceTrig_1_1FeatureAccessImpl_1a6a26bc0bd981bbf28c31ad8ffd44f525" kindref="member" tooltip="actual feature acceess implementation It has (thanks to the ClassTraits) functionality...">collect</ref>(predecesor_te,<sp/>data,<sp/>label,<sp/>condition,<sp/>teName,<sp/>navigation);<sp/></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;Size<sp/>after<sp/>collecting<sp/>&quot;<sp/>&lt;&lt;<sp/>data.size()<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>collect&lt;Muon_ROI&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">HLT::TriggerElement</ref>*<sp/>te,<sp/>std::vector&lt;Trig::Feature&lt;Muon_ROI&gt;<sp/>&gt;&amp;<sp/>data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;,<sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure" kindref="compound">HLT::TrigNavStructure</ref>*<sp/>navigation);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>collect&lt;EmTau_ROI&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">HLT::TriggerElement</ref>*<sp/>te,<sp/>std::vector&lt;Trig::Feature&lt;EmTau_ROI&gt;<sp/>&gt;&amp;<sp/>data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;,<sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure" kindref="compound">HLT::TrigNavStructure</ref>*<sp/>navigation);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>collect&lt;Jet_ROI&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">HLT::TriggerElement</ref>*<sp/>te,<sp/>std::vector&lt;Trig::Feature&lt;Jet_ROI&gt;<sp/>&gt;&amp;<sp/>data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;,<sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure" kindref="compound">HLT::TrigNavStructure</ref>*<sp/>navigation);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>collect&lt;xAOD::EmTauRoI&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">HLT::TriggerElement</ref>*<sp/>te,<sp/>std::vector&lt;Trig::Feature&lt;xAOD::EmTauRoI&gt;<sp/>&gt;&amp;<sp/>data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;,<sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure" kindref="compound">HLT::TrigNavStructure</ref>*<sp/>navigation);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>collect&lt;xAOD::MuonRoI&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">HLT::TriggerElement</ref>*<sp/>te,<sp/>std::vector&lt;Trig::Feature&lt;xAOD::MuonRoI&gt;<sp/>&gt;&amp;<sp/>data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;,<sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure" kindref="compound">HLT::TrigNavStructure</ref>*<sp/>navigation);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>collect&lt;xAOD::JetRoI&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">HLT::TriggerElement</ref>*<sp/>te,<sp/>std::vector&lt;Trig::Feature&lt;xAOD::JetRoI&gt;<sp/>&gt;&amp;<sp/>data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;,<sp/><ref refid="d9/d08/classHLT_1_1TrigNavStructure" kindref="compound">HLT::TrigNavStructure</ref>*<sp/>navigation);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>==============</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>section<sp/>deals<sp/>with<sp/>the<sp/>TrigPassFlags<sp/>creation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>==============</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>access<sp/>by<sp/>container,<sp/>stored<sp/>as<sp/>container</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CONT&gt;<sp/><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>build_flags<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>boost::enable_if_c&lt;isDataVector&lt;CONT&gt;::value,<sp/>CONT&gt;::type<sp/>*orig_cont,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CONT*<sp/>cont,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref><sp/>*<sp/>orig_tpf)<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref><sp/>tpf(cont-&gt;size(),<sp/>orig_tpf-&gt;<ref refid="d7/db1/classTrigPassFlags_1a9f71f216729c77930ff472e957613815" kindref="member" tooltip="gets size of the flag vector for the object at index">flagSize</ref>());</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(orig_cont-&gt;size()<sp/>!=<sp/>orig_tpf-&gt;<ref refid="d7/db1/classTrigPassFlags_1afe2c5027f4cca0b8d40950c60e811300" kindref="member" tooltip="gets size of the container object vector">size</ref>())<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;WARNING:<sp/>original<sp/>constainer<sp/>size<sp/>(&quot;<sp/>&lt;&lt;<sp/>orig_cont-&gt;size()<sp/>&lt;&lt;<sp/>&quot;)<sp/>different<sp/>for<sp/>size<sp/>of<sp/>TrigPassFlags<sp/>(&quot;<sp/>&lt;&lt;<sp/>orig_tpf-&gt;size()<sp/>&lt;&lt;<sp/>&quot;).&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpf;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currentPos=0;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CONT::base_value_type*<sp/>obj,<sp/>*cont)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CONT::const_iterator<sp/>orig_obj<sp/>=<sp/>std::find(orig_cont-&gt;begin(),orig_cont-&gt;end(),obj);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(orig_obj<sp/>==<sp/>orig_cont-&gt;end())<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;WARNING:<sp/>object<sp/>in<sp/>reduced<sp/>container<sp/>can&apos;<sp/>be<sp/>found<sp/>in<sp/>original.&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>orig_obj-orig_cont-&gt;begin();</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tpf.<ref refid="d7/db1/classTrigPassFlags_1a86e67daeafe9da4270914f278cf9edf7" kindref="member" tooltip="Set the flag at index position.">setFlag</ref>(currentPos,<sp/>orig_tpf-&gt;<ref refid="d7/db1/classTrigPassFlags_1a5e6911b1442640b82aea163f577d358a" kindref="member" tooltip="Returns the flag (vector&amp;lt;bool&amp;gt;) at index position.">getFlag</ref>(idx));</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>currentPos++;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpf;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>build_flags<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>boost::disable_if_c&lt;isDataVector&lt;T&gt;::value,<sp/><ref refid="d1/def/classT" kindref="compound">T</ref>&gt;::type<sp/>*orig,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/def/classT" kindref="compound">T</ref>*<sp/>feature,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref><sp/>*<sp/>orig_tpf)<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(orig<sp/>!=<sp/>feature)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref>();<sp/></highlight><highlight class="comment">//<sp/>a<sp/>problem<sp/>TODO:<sp/>print<sp/>a<sp/>ERROR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref><sp/>tpf(1,<sp/>orig_tpf-&gt;<ref refid="d7/db1/classTrigPassFlags_1a9f71f216729c77930ff472e957613815" kindref="member" tooltip="gets size of the flag vector for the object at index">flagSize</ref>());</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tpf.setFlag(0,orig_tpf-&gt;<ref refid="d7/db1/classTrigPassFlags_1a5e6911b1442640b82aea163f577d358a" kindref="member" tooltip="Returns the flag (vector&amp;lt;bool&amp;gt;) at index position.">getFlag</ref>(0));</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpf;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>access<sp/>by<sp/>single<sp/>object,<sp/>stored<sp/>as<sp/>container</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>STORED&gt;<sp/><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>build_flags2(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>STORED*<sp/>orig_cont,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/def/classT" kindref="compound">T</ref>*<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref><sp/>*<sp/>orig_tpf)</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(orig_cont-&gt;size()<sp/>!=<sp/>orig_tpf-&gt;<ref refid="d7/db1/classTrigPassFlags_1afe2c5027f4cca0b8d40950c60e811300" kindref="member" tooltip="gets size of the container object vector">size</ref>())<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;WARNING:<sp/>original<sp/>constainer<sp/>size<sp/>(&quot;<sp/>&lt;&lt;<sp/>orig_cont-&gt;size()<sp/>&lt;&lt;<sp/>&quot;)<sp/>different<sp/>for<sp/>size<sp/>of<sp/>TrigPassFlags<sp/>(&quot;<sp/>&lt;&lt;<sp/>orig_tpf-&gt;size()<sp/>&lt;&lt;<sp/>&quot;).&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref>();</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref><sp/>tpf(1,<sp/>orig_tpf-&gt;<ref refid="d7/db1/classTrigPassFlags_1a9f71f216729c77930ff472e957613815" kindref="member" tooltip="gets size of the flag vector for the object at index">flagSize</ref>());</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>STORED::const_iterator<sp/>orig_obj<sp/>=<sp/>std::find(orig_cont-&gt;begin(),orig_cont-&gt;end(),<sp/>obj);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(orig_obj<sp/>==<sp/>orig_cont-&gt;end())<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;WARNING:<sp/>object<sp/>in<sp/>reduced<sp/>container<sp/>can&apos;<sp/>be<sp/>found<sp/>in<sp/>original.&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>orig_obj-orig_cont-&gt;begin();</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>tpf.setFlag(0,<sp/>orig_tpf-&gt;<ref refid="d7/db1/classTrigPassFlags_1a5e6911b1442640b82aea163f577d358a" kindref="member" tooltip="Returns the flag (vector&amp;lt;bool&amp;gt;) at index position.">getFlag</ref>(idx));</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpf;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>STORED,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>same&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">getFlagsHelper;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>partial<sp/>specialization<sp/>for<sp/>T==STORED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416" refid="d9/da2/structTrig_1_1FeatureAccessImpl_1_1getFlagsHelper_3_01T_00_01STORED_00_01true_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>STORED&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">getFlagsHelper&lt;<ref refid="d1/def/classT" kindref="compound">T</ref>,<sp/>STORED,<sp/>true&gt;<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref><sp/>do_build(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>STORED*<sp/>orig_feat,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/def/classT" kindref="compound">T</ref>*<sp/>feat,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref><sp/>*<sp/>orig_tpf)<sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>build_flags(orig_feat,<sp/>feat,<sp/>orig_tpf);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>partial<sp/>specialization<sp/>for<sp/>T!=STORED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424" refid="db/d6b/structTrig_1_1FeatureAccessImpl_1_1getFlagsHelper_3_01T_00_01STORED_00_01false_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>STORED&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">getFlagsHelper&lt;<ref refid="d1/def/classT" kindref="compound">T</ref>,<sp/>STORED,<sp/>false&gt;<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref><sp/>do_build(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>STORED*<sp/>orig_feat,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/def/classT" kindref="compound">T</ref>*<sp/>feat,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref><sp/>*<sp/>orig_tpf)<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>build_flags2(orig_feat,<sp/>feat,<sp/>orig_tpf);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>getFlags(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Trig::Feature&lt;T&gt;</ref>&amp;<sp/>f,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref><sp/>*orig_tpf,<sp/>HLT::NavigationCore*<sp/>navigation<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="d1/def/classT" kindref="compound">TrigDec::ClassTraits&lt;T&gt;::type</ref><sp/>STORED;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>STORED*<sp/>orig(0);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/db8/classHLT_1_1TriggerElement" kindref="compound" tooltip="TriggerElement is the basic ingreedient of the interface between HLT algorithms and...">HLT::TriggerElement</ref>*<sp/>sourceTE(0);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>sourceLabel(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(navigation-&gt;getRecentFeature(f.<ref refid="d3/da6/classTrig_1_1Feature_1a6283ed1885c6f92eb8e58c95250f542f" kindref="member" tooltip="explicit conversion to TriggerElement">te</ref>(),<sp/>orig,<sp/>f.<ref refid="d3/da6/classTrig_1_1Feature_1a0a77389b1ee1b7c9322795612570e463" kindref="member" tooltip="explicit conversion to feature label">label</ref>(),<sp/>sourceTE,<sp/>sourceLabel))<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref><sp/>tpf<sp/>=<sp/>getFlagsHelper&lt;T,STORED,<sp/>boost::is_same&lt;T,STORED&gt;::value&gt;::do_build(orig,<sp/>f.<ref refid="d3/da6/classTrig_1_1Feature_1a1803c8b2f9cf9c5952b5ed0bcbcee0da" kindref="member" tooltip="explicit conversion to object">cptr</ref>(),<sp/>orig_tpf);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tpf;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref>();</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>specialization<sp/>for<sp/>types<sp/>without<sp/>getRecentFeature<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref><sp/>getFlags(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Trig::Feature&lt;EmTau_ROI&gt;</ref>&amp;<sp/>f,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref><sp/>*orig_tpf,<sp/>HLT::NavigationCore*<sp/>navigation<sp/>);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref><sp/>getFlags(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Trig::Feature&lt;Muon_ROI&gt;</ref>&amp;<sp/>f,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref><sp/>*orig_tpf,<sp/>HLT::NavigationCore*<sp/>navigation<sp/>);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref><sp/>getFlags(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d3/da6/classTrig_1_1Feature" kindref="compound">Trig::Feature&lt;Jet_ROI&gt;</ref>&amp;<sp/>f,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/db1/classTrigPassFlags" kindref="compound">TrigPassFlags</ref><sp/>*orig_tpf,<sp/>HLT::NavigationCore*<sp/>navigation<sp/>);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>EOF<sp/>namespace<sp/>FeatureAccessImpl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>EOF<sp/>namespace<sp/>Trig</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="460"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//XAOD_ANALYSIS</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigDecisionTool/TrigDecisionTool/FeatureCollectAthena.h"/>
  </compounddef>
</doxygen>
