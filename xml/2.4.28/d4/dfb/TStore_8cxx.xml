<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d4/dfb/TStore_8cxx" kind="file">
    <compoundname>TStore.cxx</compoundname>
    <includes local="no">TError.h</includes>
    <includes local="no">TClass.h</includes>
    <includes refid="de/d1a/normalizedTypeinfoName_8h" local="yes">AthContainers/normalizedTypeinfoName.h</includes>
    <includes refid="d7/d1f/TStore_8h" local="yes">xAODRootAccess/TStore.h</includes>
    <includes refid="d4/d92/TActiveStore_8h" local="yes">xAODRootAccess/TActiveStore.h</includes>
    <includes refid="d1/db1/THolder_8h" local="yes">xAODRootAccess/tools/THolder.h</includes>
    <includes refid="d6/d17/xAODRootAccess_2xAODRootAccess_2tools_2Message_8h" local="yes">xAODRootAccess/tools/Message.h</includes>
    <includes refid="d0/d7d/xAODRootAccess_2xAODRootAccess_2tools_2Utils_8h" local="yes">xAODRootAccess/tools/Utils.h</includes>
    <incdepgraph>
      <node id="411233">
        <label>list</label>
      </node>
      <node id="411242">
        <label>AthContainers/tools/DVL_algorithms.icc</label>
        <link refid="df/daa/DVL__algorithms_8icc"/>
        <childnode refid="411227" relation="include">
        </childnode>
        <childnode refid="411234" relation="include">
        </childnode>
        <childnode refid="411218" relation="include">
        </childnode>
        <childnode refid="411223" relation="include">
        </childnode>
        <childnode refid="411162" relation="include">
        </childnode>
      </node>
      <node id="411227">
        <label>AthContainers/tools/DVLNoBase.h</label>
        <link refid="d7/d92/DVLNoBase_8h"/>
      </node>
      <node id="411197">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="411249">
        <label>AthContainers/tools/DVLDataBucket.h</label>
        <link refid="d4/d16/DVLDataBucket_8h"/>
        <childnode refid="411250" relation="include">
        </childnode>
        <childnode refid="411228" relation="include">
        </childnode>
        <childnode refid="411153" relation="include">
        </childnode>
        <childnode refid="411251" relation="include">
        </childnode>
      </node>
      <node id="411214">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="411161" relation="include">
        </childnode>
        <childnode refid="411163" relation="include">
        </childnode>
        <childnode refid="411153" relation="include">
        </childnode>
        <childnode refid="411169" relation="include">
        </childnode>
      </node>
      <node id="411216">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="411176" relation="include">
        </childnode>
        <childnode refid="411159" relation="include">
        </childnode>
        <childnode refid="411217" relation="include">
        </childnode>
        <childnode refid="411177" relation="include">
        </childnode>
      </node>
      <node id="411215">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="411148">
        <label>AthContainers/normalizedTypeinfoName.h</label>
        <link refid="de/d1a/normalizedTypeinfoName_8h"/>
        <childnode refid="411149" relation="include">
        </childnode>
        <childnode refid="411150" relation="include">
        </childnode>
      </node>
      <node id="411168">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="411169">
        <label>functional</label>
      </node>
      <node id="411224">
        <label>boost/version.hpp</label>
      </node>
      <node id="411167">
        <label>limits</label>
      </node>
      <node id="411217">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="411195">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="411164">
        <label>iterator</label>
      </node>
      <node id="411178">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="411149" relation="include">
        </childnode>
        <childnode refid="411179" relation="include">
        </childnode>
      </node>
      <node id="411257">
        <label>SGTools/ClassID_traits.h</label>
      </node>
      <node id="411263">
        <label>xAODRootAccess/tools/Message.h</label>
        <link refid="d6/d17/xAODRootAccess_2xAODRootAccess_2tools_2Message_8h_source"/>
      </node>
      <node id="411248">
        <label>SGTools/ClassName.h</label>
      </node>
      <node id="411254">
        <label>AthContainers/DataVector.icc</label>
        <link refid="da/de6/DataVector_8icc"/>
        <childnode refid="411255" relation="include">
        </childnode>
        <childnode refid="411222" relation="include">
        </childnode>
        <childnode refid="411167" relation="include">
        </childnode>
        <childnode refid="411169" relation="include">
        </childnode>
        <childnode refid="411256" relation="include">
        </childnode>
      </node>
      <node id="411157">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="411158" relation="include">
        </childnode>
        <childnode refid="411170" relation="include">
        </childnode>
        <childnode refid="411171" relation="include">
        </childnode>
        <childnode refid="411150" relation="include">
        </childnode>
        <childnode refid="411149" relation="include">
        </childnode>
      </node>
      <node id="411180">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="411181" relation="include">
        </childnode>
        <childnode refid="411165" relation="include">
        </childnode>
      </node>
      <node id="411258">
        <label>AthContainers/ConstDataVector.icc</label>
        <link refid="d2/d61/ConstDataVector_8icc"/>
        <childnode refid="411259" relation="include">
        </childnode>
        <childnode refid="411169" relation="include">
        </childnode>
      </node>
      <node id="411264">
        <label>xAODRootAccess/tools/Utils.h</label>
        <link refid="d0/d7d/xAODRootAccess_2xAODRootAccess_2tools_2Utils_8h_source"/>
        <childnode refid="411149" relation="include">
        </childnode>
        <childnode refid="411150" relation="include">
        </childnode>
        <childnode refid="411183" relation="include">
        </childnode>
        <childnode refid="411265" relation="include">
        </childnode>
      </node>
      <node id="411260">
        <label>xAODRootAccess/tools/TReturnCode.h</label>
        <link refid="df/d0a/TReturnCode_8h_source"/>
      </node>
      <node id="411183">
        <label>stdint.h</label>
      </node>
      <node id="411234">
        <label>AthContainers/tools/DVLCast.h</label>
        <link refid="df/d5c/DVLCast_8h"/>
        <childnode refid="411167" relation="include">
        </childnode>
        <childnode refid="411235" relation="include">
        </childnode>
        <childnode refid="411150" relation="include">
        </childnode>
        <childnode refid="411165" relation="include">
        </childnode>
        <childnode refid="411159" relation="include">
        </childnode>
      </node>
      <node id="411202">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="411159" relation="include">
        </childnode>
        <childnode refid="411150" relation="include">
        </childnode>
      </node>
      <node id="411173">
        <label>AthContainers/IndexTrackingPolicy.h</label>
        <link refid="d0/da5/IndexTrackingPolicy_8h"/>
      </node>
      <node id="411186">
        <label>RVersion.h</label>
      </node>
      <node id="411160">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="411161" relation="include">
        </childnode>
        <childnode refid="411153" relation="include">
        </childnode>
        <childnode refid="411169" relation="include">
        </childnode>
      </node>
      <node id="411166">
        <label>cmath</label>
      </node>
      <node id="411221">
        <label>cassert</label>
      </node>
      <node id="411225">
        <label>boost/mpl/if.hpp</label>
      </node>
      <node id="411244">
        <label>boost/static_assert.hpp</label>
      </node>
      <node id="411259">
        <label>boost/iterator/transform_iterator.hpp</label>
      </node>
      <node id="411261">
        <label>xAODRootAccess/TActiveStore.h</label>
        <link refid="d4/d92/TActiveStore_8h_source"/>
      </node>
      <node id="411171">
        <label>stdexcept</label>
      </node>
      <node id="411198">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="411231">
        <label>boost/type_traits/is_pointer.hpp</label>
      </node>
      <node id="411239">
        <label>boost/iterator/iterator_adaptor.hpp</label>
      </node>
      <node id="411149">
        <label>string</label>
      </node>
      <node id="411175">
        <label>AthContainers/AuxVectorData.h</label>
        <link refid="d9/df2/AuxVectorData_8h"/>
        <childnode refid="411158" relation="include">
        </childnode>
        <childnode refid="411176" relation="include">
        </childnode>
        <childnode refid="411178" relation="include">
        </childnode>
        <childnode refid="411180" relation="include">
        </childnode>
        <childnode refid="411182" relation="include">
        </childnode>
        <childnode refid="411188" relation="include">
        </childnode>
        <childnode refid="411189" relation="include">
        </childnode>
        <childnode refid="411190" relation="include">
        </childnode>
        <childnode refid="411181" relation="include">
        </childnode>
        <childnode refid="411163" relation="include">
        </childnode>
        <childnode refid="411165" relation="include">
        </childnode>
        <childnode refid="411191" relation="include">
        </childnode>
        <childnode refid="411192" relation="include">
        </childnode>
        <childnode refid="411193" relation="include">
        </childnode>
        <childnode refid="411199" relation="include">
        </childnode>
      </node>
      <node id="411201">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="411159" relation="include">
        </childnode>
        <childnode refid="411150" relation="include">
        </childnode>
      </node>
      <node id="411191">
        <label>AthContainers/tools/likely.h</label>
        <link refid="d6/dd6/likely_8h"/>
      </node>
      <node id="411236">
        <label>AthContainers/tools/DVLIterator.h</label>
        <link refid="d3/dc7/DVLIterator_8h_source"/>
        <childnode refid="411172" relation="include">
        </childnode>
        <childnode refid="411234" relation="include">
        </childnode>
        <childnode refid="411237" relation="include">
        </childnode>
        <childnode refid="411239" relation="include">
        </childnode>
        <childnode refid="411224" relation="include">
        </childnode>
        <childnode refid="411164" relation="include">
        </childnode>
        <childnode refid="411165" relation="include">
        </childnode>
      </node>
      <node id="411250">
        <label>SGTools/DataBucket.h</label>
      </node>
      <node id="411152">
        <label>map</label>
      </node>
      <node id="411251">
        <label>AthContainers/tools/DVLDataBucket.icc</label>
        <link refid="d3/d21/DVLDataBucket_8icc"/>
        <childnode refid="411252" relation="include">
        </childnode>
      </node>
      <node id="411252">
        <label>SGTools/IRegisterTransient.h</label>
      </node>
      <node id="411187">
        <label>RootMetaSelection.h</label>
      </node>
      <node id="411211">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="411241">
        <label>AthContainers/tools/DVL_algorithms.h</label>
        <link refid="d0/d7a/DVL__algorithms_8h"/>
        <childnode refid="411236" relation="include">
        </childnode>
        <childnode refid="411164" relation="include">
        </childnode>
        <childnode refid="411162" relation="include">
        </childnode>
        <childnode refid="411242" relation="include">
        </childnode>
      </node>
      <node id="411265">
        <label>TDataType.h</label>
      </node>
      <node id="411192">
        <label>AthContainers/tools/assume.h</label>
        <link refid="d2/d20/assume_8h"/>
      </node>
      <node id="411208">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="411237">
        <label>AthContainers/tools/ElementProxy.h</label>
        <link refid="db/d26/ElementProxy_8h"/>
        <childnode refid="411172" relation="include">
        </childnode>
        <childnode refid="411185" relation="include">
        </childnode>
        <childnode refid="411153" relation="include">
        </childnode>
        <childnode refid="411238" relation="include">
        </childnode>
      </node>
      <node id="411219">
        <label>AthContainersInterfaces/IAuxElement.h</label>
        <link refid="dd/d7a/IAuxElement_8h"/>
      </node>
      <node id="411185">
        <label>AthLinks/tools/selection_ns.h</label>
        <link refid="d3/dec/selection__ns_8h"/>
        <childnode refid="411186" relation="include">
        </childnode>
        <childnode refid="411187" relation="include">
        </childnode>
      </node>
      <node id="411189">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="411196">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="411235">
        <label>limits.h</label>
      </node>
      <node id="411146">
        <label>TError.h</label>
      </node>
      <node id="411229">
        <label>AthContainers/tools/ClassID.h</label>
        <link refid="de/de2/ClassID_8h"/>
        <childnode refid="411230" relation="include">
        </childnode>
      </node>
      <node id="411206">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="411178" relation="include">
        </childnode>
        <childnode refid="411167" relation="include">
        </childnode>
        <childnode refid="411183" relation="include">
        </childnode>
        <childnode refid="411207" relation="include">
        </childnode>
      </node>
      <node id="411158">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="411159" relation="include">
        </childnode>
        <childnode refid="411160" relation="include">
        </childnode>
      </node>
      <node id="411161">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="411162" relation="include">
        </childnode>
        <childnode refid="411163" relation="include">
        </childnode>
        <childnode refid="411164" relation="include">
        </childnode>
        <childnode refid="411159" relation="include">
        </childnode>
        <childnode refid="411165" relation="include">
        </childnode>
        <childnode refid="411166" relation="include">
        </childnode>
        <childnode refid="411167" relation="include">
        </childnode>
        <childnode refid="411149" relation="include">
        </childnode>
        <childnode refid="411168" relation="include">
        </childnode>
      </node>
      <node id="411222">
        <label>AthContainers/tools/ATHCONTAINERS_ASSERT.h</label>
        <link refid="de/d6b/ATHCONTAINERS__ASSERT_8h"/>
        <childnode refid="411221" relation="include">
        </childnode>
      </node>
      <node id="411238">
        <label>AthContainers/tools/ElementProxy.icc</label>
        <link refid="d6/d70/ElementProxy_8icc"/>
        <childnode refid="411234" relation="include">
        </childnode>
        <childnode refid="411222" relation="include">
        </childnode>
      </node>
      <node id="411150">
        <label>typeinfo</label>
      </node>
      <node id="411220">
        <label>AthContainers/AuxElement.icc</label>
        <link refid="d2/d37/AuxElement_8icc"/>
        <childnode refid="411191" relation="include">
        </childnode>
        <childnode refid="411221" relation="include">
        </childnode>
      </node>
      <node id="411156">
        <label>AthContainers/DataVector.h</label>
        <link refid="d7/dd6/DataVector_8h"/>
        <childnode refid="411157" relation="include">
        </childnode>
        <childnode refid="411172" relation="include">
        </childnode>
        <childnode refid="411173" relation="include">
        </childnode>
        <childnode refid="411174" relation="include">
        </childnode>
        <childnode refid="411227" relation="include">
        </childnode>
        <childnode refid="411228" relation="include">
        </childnode>
        <childnode refid="411234" relation="include">
        </childnode>
        <childnode refid="411236" relation="include">
        </childnode>
        <childnode refid="411240" relation="include">
        </childnode>
        <childnode refid="411241" relation="include">
        </childnode>
        <childnode refid="411237" relation="include">
        </childnode>
        <childnode refid="411243" relation="include">
        </childnode>
        <childnode refid="411185" relation="include">
        </childnode>
        <childnode refid="411244" relation="include">
        </childnode>
        <childnode refid="411245" relation="include">
        </childnode>
        <childnode refid="411239" relation="include">
        </childnode>
        <childnode refid="411181" relation="include">
        </childnode>
        <childnode refid="411150" relation="include">
        </childnode>
        <childnode refid="411169" relation="include">
        </childnode>
        <childnode refid="411246" relation="include">
        </childnode>
        <childnode refid="411162" relation="include">
        </childnode>
        <childnode refid="411171" relation="include">
        </childnode>
        <childnode refid="411164" relation="include">
        </childnode>
        <childnode refid="411217" relation="include">
        </childnode>
        <childnode refid="411247" relation="include">
        </childnode>
        <childnode refid="411249" relation="include">
        </childnode>
        <childnode refid="411253" relation="include">
        </childnode>
        <childnode refid="411254" relation="include">
        </childnode>
      </node>
      <node id="411207">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="411188">
        <label>AthenaKernel/ILockable.h</label>
      </node>
      <node id="411184">
        <label>AthLinks/DataLinkBase.h</label>
        <link refid="db/da8/DataLinkBase_8h_source"/>
        <childnode refid="411183" relation="include">
        </childnode>
      </node>
      <node id="411179">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="411210">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="411228">
        <label>AthContainers/tools/DVLInfo.h</label>
        <link refid="d3/d2e/DVLInfo_8h"/>
        <childnode refid="411229" relation="include">
        </childnode>
        <childnode refid="411174" relation="include">
        </childnode>
        <childnode refid="411150" relation="include">
        </childnode>
        <childnode refid="411159" relation="include">
        </childnode>
        <childnode refid="411168" relation="include">
        </childnode>
        <childnode refid="411231" relation="include">
        </childnode>
        <childnode refid="411209" relation="include">
        </childnode>
        <childnode refid="411232" relation="include">
        </childnode>
      </node>
      <node id="411177">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="411247">
        <label>AthContainers/ClassName.h</label>
        <link refid="dd/d6b/AthContainers_2AthContainers_2ClassName_8h_source"/>
        <childnode refid="411248" relation="include">
        </childnode>
      </node>
      <node id="411200">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="411158" relation="include">
        </childnode>
        <childnode refid="411201" relation="include">
        </childnode>
        <childnode refid="411202" relation="include">
        </childnode>
        <childnode refid="411203" relation="include">
        </childnode>
        <childnode refid="411212" relation="include">
        </childnode>
        <childnode refid="411193" relation="include">
        </childnode>
        <childnode refid="411159" relation="include">
        </childnode>
        <childnode refid="411150" relation="include">
        </childnode>
        <childnode refid="411181" relation="include">
        </childnode>
        <childnode refid="411214" relation="include">
        </childnode>
        <childnode refid="411215" relation="include">
        </childnode>
      </node>
      <node id="411181">
        <label>vector</label>
      </node>
      <node id="411255">
        <label>AthContainers/tools/CompareAndPrint.h</label>
        <link refid="d5/da8/CompareAndPrint_8h_source"/>
        <childnode refid="411162" relation="include">
        </childnode>
        <childnode refid="411150" relation="include">
        </childnode>
      </node>
      <node id="411155">
        <label>AthContainers/ConstDataVector.h</label>
        <link refid="d2/d0d/ConstDataVector_8h"/>
        <childnode refid="411156" relation="include">
        </childnode>
        <childnode refid="411257" relation="include">
        </childnode>
        <childnode refid="411258" relation="include">
        </childnode>
      </node>
      <node id="411256">
        <label>AthContainers/tools/DVLEltBaseInfo.icc</label>
        <link refid="dd/d5e/DVLEltBaseInfo_8icc"/>
      </node>
      <node id="411163">
        <label>utility</label>
      </node>
      <node id="411253">
        <label>SGTools/DataBucketTraitFwd.h</label>
      </node>
      <node id="411190">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="411226">
        <label>AthContainers/AuxVectorBase.icc</label>
        <link refid="d4/d50/AuxVectorBase_8icc"/>
      </node>
      <node id="411194">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="411204">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="411154">
        <label>Rtypes.h</label>
      </node>
      <node id="411193">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="411194" relation="include">
        </childnode>
        <childnode refid="411195" relation="include">
        </childnode>
        <childnode refid="411196" relation="include">
        </childnode>
        <childnode refid="411197" relation="include">
        </childnode>
        <childnode refid="411198" relation="include">
        </childnode>
      </node>
      <node id="411165">
        <label>cstdlib</label>
      </node>
      <node id="411246">
        <label>iostream</label>
      </node>
      <node id="411170">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="411145">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/Root/TStore.cxx</label>
        <link refid="TStore.cxx"/>
        <childnode refid="411146" relation="include">
        </childnode>
        <childnode refid="411147" relation="include">
        </childnode>
        <childnode refid="411148" relation="include">
        </childnode>
        <childnode refid="411151" relation="include">
        </childnode>
        <childnode refid="411261" relation="include">
        </childnode>
        <childnode refid="411262" relation="include">
        </childnode>
        <childnode refid="411263" relation="include">
        </childnode>
        <childnode refid="411264" relation="include">
        </childnode>
      </node>
      <node id="411176">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="411158" relation="include">
        </childnode>
        <childnode refid="411159" relation="include">
        </childnode>
        <childnode refid="411177" relation="include">
        </childnode>
      </node>
      <node id="411159">
        <label>cstddef</label>
      </node>
      <node id="411147">
        <label>TClass.h</label>
      </node>
      <node id="411199">
        <label>AthContainers/AuxVectorData.icc</label>
        <link refid="da/de7/AuxVectorData_8icc"/>
        <childnode refid="411200" relation="include">
        </childnode>
        <childnode refid="411216" relation="include">
        </childnode>
        <childnode refid="411176" relation="include">
        </childnode>
        <childnode refid="411191" relation="include">
        </childnode>
        <childnode refid="411192" relation="include">
        </childnode>
      </node>
      <node id="411262">
        <label>xAODRootAccess/tools/THolder.h</label>
        <link refid="d1/db1/THolder_8h_source"/>
        <childnode refid="411152" relation="include">
        </childnode>
        <childnode refid="411154" relation="include">
        </childnode>
      </node>
      <node id="411232">
        <label>AthContainers/tools/DVLInfo.icc</label>
        <link refid="da/d83/DVLInfo_8icc"/>
        <childnode refid="411172" relation="include">
        </childnode>
        <childnode refid="411181" relation="include">
        </childnode>
        <childnode refid="411233" relation="include">
        </childnode>
        <childnode refid="411221" relation="include">
        </childnode>
        <childnode refid="411165" relation="include">
        </childnode>
        <childnode refid="411217" relation="include">
        </childnode>
      </node>
      <node id="411203">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="411201" relation="include">
        </childnode>
        <childnode refid="411204" relation="include">
        </childnode>
        <childnode refid="411180" relation="include">
        </childnode>
        <childnode refid="411205" relation="include">
        </childnode>
        <childnode refid="411190" relation="include">
        </childnode>
        <childnode refid="411150" relation="include">
        </childnode>
        <childnode refid="411181" relation="include">
        </childnode>
        <childnode refid="411162" relation="include">
        </childnode>
        <childnode refid="411183" relation="include">
        </childnode>
        <childnode refid="411209" relation="include">
        </childnode>
        <childnode refid="411210" relation="include">
        </childnode>
        <childnode refid="411211" relation="include">
        </childnode>
      </node>
      <node id="411151">
        <label>xAODRootAccess/TStore.h</label>
        <link refid="d7/d1f/TStore_8h_source"/>
        <childnode refid="411149" relation="include">
        </childnode>
        <childnode refid="411152" relation="include">
        </childnode>
        <childnode refid="411153" relation="include">
        </childnode>
        <childnode refid="411154" relation="include">
        </childnode>
        <childnode refid="411155" relation="include">
        </childnode>
        <childnode refid="411260" relation="include">
        </childnode>
      </node>
      <node id="411209">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="411174">
        <label>AthContainers/AuxVectorBase.h</label>
        <link refid="d7/d18/AuxVectorBase_8h"/>
        <childnode refid="411175" relation="include">
        </childnode>
        <childnode refid="411172" relation="include">
        </childnode>
        <childnode refid="411173" relation="include">
        </childnode>
        <childnode refid="411218" relation="include">
        </childnode>
        <childnode refid="411200" relation="include">
        </childnode>
        <childnode refid="411157" relation="include">
        </childnode>
        <childnode refid="411222" relation="include">
        </childnode>
        <childnode refid="411216" relation="include">
        </childnode>
        <childnode refid="411223" relation="include">
        </childnode>
        <childnode refid="411181" relation="include">
        </childnode>
        <childnode refid="411226" relation="include">
        </childnode>
      </node>
      <node id="411213">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="411205">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="411204" relation="include">
        </childnode>
        <childnode refid="411206" relation="include">
        </childnode>
        <childnode refid="411190" relation="include">
        </childnode>
        <childnode refid="411181" relation="include">
        </childnode>
        <childnode refid="411208" relation="include">
        </childnode>
      </node>
      <node id="411162">
        <label>algorithm</label>
      </node>
      <node id="411243">
        <label>AthContainers/tools/IsMostDerivedFlag.h</label>
        <link refid="d5/dfa/IsMostDerivedFlag_8h"/>
      </node>
      <node id="411218">
        <label>AthContainers/AuxElement.h</label>
        <link refid="d1/d6f/AuxElement_8h"/>
        <childnode refid="411219" relation="include">
        </childnode>
        <childnode refid="411176" relation="include">
        </childnode>
        <childnode refid="411216" relation="include">
        </childnode>
        <childnode refid="411182" relation="include">
        </childnode>
        <childnode refid="411200" relation="include">
        </childnode>
        <childnode refid="411175" relation="include">
        </childnode>
        <childnode refid="411180" relation="include">
        </childnode>
        <childnode refid="411157" relation="include">
        </childnode>
        <childnode refid="411191" relation="include">
        </childnode>
        <childnode refid="411159" relation="include">
        </childnode>
        <childnode refid="411220" relation="include">
        </childnode>
      </node>
      <node id="411182">
        <label>AthLinks/DataLink.h</label>
        <link refid="da/de8/DataLink_8h_source"/>
        <childnode refid="411183" relation="include">
        </childnode>
        <childnode refid="411149" relation="include">
        </childnode>
        <childnode refid="411184" relation="include">
        </childnode>
        <childnode refid="411185" relation="include">
        </childnode>
      </node>
      <node id="411240">
        <label>AthContainers/tools/DVL_iter_swap.h</label>
        <link refid="d6/ddb/DVL__iter__swap_8h"/>
        <childnode refid="411236" relation="include">
        </childnode>
        <childnode refid="411222" relation="include">
        </childnode>
        <childnode refid="411164" relation="include">
        </childnode>
      </node>
      <node id="411172">
        <label>AthContainers/OwnershipPolicy.h</label>
        <link refid="d3/da4/OwnershipPolicy_8h_source"/>
      </node>
      <node id="411230">
        <label>GaudiKernel/ClassID.h</label>
      </node>
      <node id="411245">
        <label>boost/type_traits.hpp</label>
      </node>
      <node id="411153">
        <label>memory</label>
      </node>
      <node id="411212">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="411202" relation="include">
        </childnode>
        <childnode refid="411203" relation="include">
        </childnode>
        <childnode refid="411213" relation="include">
        </childnode>
      </node>
      <node id="411223">
        <label>AthContainersInterfaces/AuxStore_traits.h</label>
        <link refid="dd/d70/AuxStore__traits_8h"/>
        <childnode refid="411219" relation="include">
        </childnode>
        <childnode refid="411216" relation="include">
        </childnode>
        <childnode refid="411176" relation="include">
        </childnode>
        <childnode refid="411209" relation="include">
        </childnode>
        <childnode refid="411224" relation="include">
        </childnode>
        <childnode refid="411225" relation="include">
        </childnode>
        <childnode refid="411149" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="dd/d44/namespacexAOD">xAOD</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>$Id:<sp/>TStore.cxx<sp/>660301<sp/>2015-04-13<sp/>16:04:18Z<sp/>krasznaa<sp/>$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ROOT<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TError.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TClass.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EDM<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="de/d1a/normalizedTypeinfoName_8h" kindref="compound" tooltip="Convert a type_info to a normalized string representation (matching the names used...">AthContainers/normalizedTypeinfoName.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Local<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODRootAccess/TStore.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODRootAccess/TActiveStore.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODRootAccess/tools/THolder.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODRootAccess/tools/Message.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODRootAccess/tools/Utils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">xAOD<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><ref refid="dd/dae/classxAOD_1_1TStore_1ad77b6c7a3c0e676966d149e1733adfa9" kindref="member" tooltip="Default constructor.">TStore::TStore</ref>()</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_objects(),<sp/>m_keys()<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setActive();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><ref refid="dd/dae/classxAOD_1_1TStore_1a7484805c0564e8de2f6e9c54583c8ae5" kindref="member" tooltip="Destructor.">TStore::~TStore</ref>()<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>the<sp/>store<sp/>before<sp/>being<sp/>deleted:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clear();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>object<sp/>is<sp/>set<sp/>up<sp/>as<sp/>the<sp/>active<sp/>store<sp/>at<sp/>the<sp/>moment,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>notify<sp/>the<sp/>active<sp/>store<sp/>object<sp/>that<sp/>this<sp/>object<sp/>will<sp/>no<sp/>longer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>TActiveStore::s_store<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TActiveStore::s_store<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/dae/classxAOD_1_1TStore_1a27c51530809f2f293efbe83bc21412c6" kindref="member" tooltip="Set this as the active transient store in the application.">TStore::setActive</ref>()<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TActiveStore::s_store<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/>TReturnCode<sp/><ref refid="dd/dae/classxAOD_1_1TStore_1a911277bb809260c13517533dc6b30104" kindref="member" tooltip="Remove an object from the store by name.">TStore::remove</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Look<sp/>up<sp/>this<sp/>object:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Objects_t::iterator<sp/>itr<sp/>=<sp/>m_objects.find(<sp/>key<sp/>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>itr<sp/>==<sp/>m_objects.end()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Warning(<sp/></highlight><highlight class="stringliteral">&quot;xAOD::TStore::remove&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>find<sp/>object<sp/>with<sp/>key<sp/>\&quot;%s\&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key.c_str()<sp/>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/da4/classxAOD_1_1TReturnCode_1a8f212da971e112f15d8bd5bf49c4ed0aabcd1526349be69a2818959426c1e2914" kindref="member">TReturnCode::kRecoverable</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>the<sp/>hoder<sp/>object:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>itr-&gt;second;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>remove<sp/>this<sp/>element<sp/>from<sp/>the<sp/>maps:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_objects.erase(<sp/>itr<sp/>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_keys.erase(<sp/>Utils::hash(<sp/>key<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>were<sp/>successful:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/da4/classxAOD_1_1TReturnCode_1a8f212da971e112f15d8bd5bf49c4ed0aadf30f5028ade4d2f7dce8ab294d8400f" kindref="member">TReturnCode::kSuccess</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/>TReturnCode<sp/><ref refid="dd/dae/classxAOD_1_1TStore_1a911277bb809260c13517533dc6b30104" kindref="member" tooltip="Remove an object from the store by name.">TStore::remove</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Look<sp/>for<sp/>this<sp/>object:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Objects_t::iterator<sp/>itr<sp/>=<sp/>m_objects.begin();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Objects_t::iterator<sp/>end<sp/>=<sp/>m_objects.end();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>;<sp/>itr<sp/>!=<sp/>end;<sp/>++itr<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>this<sp/>is<sp/>the<sp/>object<sp/>in<sp/>question:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>itr-&gt;second-&gt;get()<sp/>!=<sp/>ptr<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Yes,<sp/>it<sp/>is...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>itr-&gt;second;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_objects.erase(<sp/>itr<sp/>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_keys.erase(<sp/>Utils::hash(<sp/>itr-&gt;first<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/da4/classxAOD_1_1TReturnCode_1a8f212da971e112f15d8bd5bf49c4ed0aadf30f5028ade4d2f7dce8ab294d8400f" kindref="member">TReturnCode::kSuccess</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>didn&apos;t<sp/>find<sp/>the<sp/>object<sp/>in<sp/>the<sp/>store:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::Warning(<sp/></highlight><highlight class="stringliteral">&quot;xAOD::TStore::remove&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>find<sp/>object<sp/>with<sp/>pointer<sp/>%p&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/da4/classxAOD_1_1TReturnCode_1a8f212da971e112f15d8bd5bf49c4ed0aabcd1526349be69a2818959426c1e2914" kindref="member">TReturnCode::kRecoverable</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/dae/classxAOD_1_1TStore_1a6aa618d5b10aaacebe720a0caf638f5f" kindref="member" tooltip="Clear the store of all of its contents.">TStore::clear</ref>()<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>all<sp/>the<sp/>managed<sp/>objects:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Objects_t::iterator<sp/>itr<sp/>=<sp/>m_objects.begin();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Objects_t::iterator<sp/>end<sp/>=<sp/>m_objects.end();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>;<sp/>itr<sp/>!=<sp/>end;<sp/>++itr<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>itr-&gt;second;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>clear<sp/>the<sp/>maps:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_objects.clear();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_keys.clear();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/dae/classxAOD_1_1TStore_1ad541bef55ceb3442f0b9cc652de99b7f" kindref="member" tooltip="Print the current contents of the transient store.">TStore::print</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::Info(<sp/></highlight><highlight class="stringliteral">&quot;xAOD::TStore::print&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Contents<sp/>of<sp/>transient<sp/>store:&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Objects_t::const_iterator<sp/>itr<sp/>=<sp/>m_objects.begin();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Objects_t::const_iterator<sp/>end<sp/>=<sp/>m_objects.end();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>;<sp/>itr<sp/>!=<sp/>end;<sp/>++itr<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Info(<sp/></highlight><highlight class="stringliteral">&quot;xAOD::TStore::print&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;-----------------------------------&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Info(<sp/></highlight><highlight class="stringliteral">&quot;xAOD::TStore::print&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Name:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>itr-&gt;first.c_str()<sp/>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::TClass*<sp/>cl<sp/>=<sp/>itr-&gt;second-&gt;getClass();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::type_info*<sp/>ti<sp/>=<sp/>itr-&gt;second-&gt;getTypeInfo();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Info(<sp/></highlight><highlight class="stringliteral">&quot;xAOD::TStore::print&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>Type:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>cl<sp/>?<sp/>cl-&gt;GetName()<sp/>:</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>ti<sp/>?<sp/><ref refid="dd/d59/namespaceSG_1a1b43d42a3d7a635ea8b7e89ea4ed207e" kindref="member" tooltip="Convert a type_info to a normalized string representation (matching the names used...">SG::normalizedTypeinfoName</ref>(<sp/>*ti<sp/>).c_str()<sp/>:</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Unknown&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Info(<sp/></highlight><highlight class="stringliteral">&quot;xAOD::TStore::print&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>Pointer:<sp/>%p&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itr-&gt;second-&gt;get()<sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Info(<sp/></highlight><highlight class="stringliteral">&quot;xAOD::TStore::print&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>IsOwner:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>itr-&gt;second-&gt;isOwner()<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Yes&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;No&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Info(<sp/></highlight><highlight class="stringliteral">&quot;xAOD::TStore::print&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>HasDictionary:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>cl<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Yes&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;No&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::Info(<sp/></highlight><highlight class="stringliteral">&quot;xAOD::TStore::print&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;-----------------------------------&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/>::Bool_t<sp/><ref refid="dd/dae/classxAOD_1_1TStore_1aeb956b1b9725283d6f084b957ab21460" kindref="member" tooltip="Function checking if an object is available from the store.">TStore::contains</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::type_info&amp;<sp/>ti<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Look<sp/>up<sp/>this<sp/>object:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Objects_t::const_iterator<sp/>itr<sp/>=<sp/>m_objects.find(<sp/>key<sp/>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>itr<sp/>==<sp/>m_objects.end()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kFALSE;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>object<sp/>is<sp/>of<sp/>the<sp/>right<sp/>type:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itr-&gt;second-&gt;getAsConst(<sp/>ti,<sp/>kTRUE<sp/>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/>::Bool_t<sp/><ref refid="dd/dae/classxAOD_1_1TStore_1a18539215d917e253624d98674205d0e2" kindref="member" tooltip="Function checking if an object with a given type is constant.">TStore::isConst</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::type_info&amp;<sp/>ti<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Look<sp/>up<sp/>this<sp/>object:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Objects_t::const_iterator<sp/>itr<sp/>=<sp/>m_objects.find(<sp/>key<sp/>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>itr<sp/>==<sp/>m_objects.end()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Warning(<sp/></highlight><highlight class="stringliteral">&quot;xAOD::TStore::isConst&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Object<sp/>with<sp/>key<sp/>\&quot;%s\&quot;<sp/>not<sp/>available<sp/>in<sp/>store&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key.c_str()<sp/>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kFALSE;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>it<sp/>can<sp/>even<sp/>be<sp/>retrieved<sp/>as<sp/>a<sp/>constant<sp/>object<sp/>of<sp/>this<sp/>type:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>itr-&gt;second-&gt;getAsConst(<sp/>ti,<sp/>kTRUE<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>typeName<sp/>=<sp/><ref refid="dd/d59/namespaceSG_1a1b43d42a3d7a635ea8b7e89ea4ed207e" kindref="member" tooltip="Convert a type_info to a normalized string representation (matching the names used...">SG::normalizedTypeinfoName</ref>(<sp/>ti<sp/>);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Warning(<sp/></highlight><highlight class="stringliteral">&quot;xAOD::TStore::isConst&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Object<sp/>with<sp/>key<sp/>\&quot;%s\&quot;<sp/>can&apos;t<sp/>be<sp/>retrieved<sp/>as<sp/>type:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key.c_str(),<sp/>typeName.c_str()<sp/>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kFALSE;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>the<sp/>question<sp/>is<sp/>just<sp/>whether<sp/>it<sp/>can<sp/>be<sp/>retrieved<sp/>as<sp/>a<sp/>non-const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>object<sp/>as<sp/>well:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>itr-&gt;second-&gt;getAs(<sp/>ti,<sp/>kTRUE<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="dd/dae/classxAOD_1_1TStore_1a9f1866019afad21c8b030cf1935a11b2" kindref="member" tooltip="Function retrieving a non-const object in a non-template way.">TStore::getObject</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::type_info&amp;<sp/>ti<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Look<sp/>up<sp/>this<sp/>object:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Objects_t::const_iterator<sp/>itr<sp/>=<sp/>m_objects.find(<sp/>key<sp/>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>itr<sp/>==<sp/>m_objects.end()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>retrieve<sp/>it<sp/>as<sp/>the<sp/>requested<sp/>type:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itr-&gt;second-&gt;getAs(<sp/>ti<sp/>);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="dd/dae/classxAOD_1_1TStore_1a4a7bb4492a62c0a94bc4dfb4514db973" kindref="member" tooltip="Function retrieving a const object in a non-template way.">TStore::getConstObject</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::type_info&amp;<sp/>ti<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Look<sp/>up<sp/>this<sp/>object:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Objects_t::const_iterator<sp/>itr<sp/>=<sp/>m_objects.find(<sp/>key<sp/>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>itr<sp/>==<sp/>m_objects.end()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>retrieve<sp/>it<sp/>as<sp/>the<sp/>requested<sp/>type:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itr-&gt;second-&gt;getAsConst(<sp/>ti<sp/>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/>TReturnCode<sp/><ref refid="dd/dae/classxAOD_1_1TStore_1a96c78b3019dbf418a93c65c9fe31e9e8" kindref="member" tooltip="Add an object to the store.">TStore::record</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>classname,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Bool_t<sp/>isOwner<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>check<sp/>if<sp/>we<sp/>have<sp/>this<sp/>dictionary<sp/>cached<sp/>already:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::map&lt;<sp/>std::string,<sp/>::TClass*<sp/>&gt;<sp/>clMap;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::TClass*<sp/>cl<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>clItr<sp/>=<sp/>clMap.find(<sp/>classname<sp/>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>clItr<sp/>!=<sp/>clMap.end()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>cached<sp/>value<sp/>doesn&apos;t<sp/>work,<sp/>then<sp/>bail<sp/>now:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>!<sp/>clItr-&gt;second<sp/>)<sp/>||<sp/>(<sp/>!<sp/>clItr-&gt;second-&gt;IsLoaded()<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/da4/classxAOD_1_1TReturnCode_1a8f212da971e112f15d8bd5bf49c4ed0aabcd1526349be69a2818959426c1e2914" kindref="member">TReturnCode::kRecoverable</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise<sp/>we&apos;re<sp/>done:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl<sp/>=<sp/>clItr-&gt;second;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>it&apos;s<sp/>not<sp/>cached,<sp/>ask<sp/>ROOT<sp/>for<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<sp/>cl<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl<sp/>=<sp/>::TClass::GetClass(<sp/>classname.c_str(),<sp/>kTRUE,<sp/>kTRUE<sp/>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clMap[<sp/>classname<sp/>]<sp/>=<sp/>cl;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>!<sp/>cl<sp/>)<sp/>||<sp/>(<sp/>!<sp/>cl-&gt;IsLoaded()<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/da4/classxAOD_1_1TReturnCode_1a8f212da971e112f15d8bd5bf49c4ed0aabcd1526349be69a2818959426c1e2914" kindref="member">TReturnCode::kRecoverable</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>that<sp/>the<sp/>key<sp/>is<sp/>not<sp/>yet<sp/>taken:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_objects.find(<sp/>key<sp/>)<sp/>!=<sp/>m_objects.end()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Error(<sp/></highlight><highlight class="stringliteral">&quot;xAOD::TStore::record&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XAOD_MESSAGE(<sp/></highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>overwrite<sp/>object<sp/>with<sp/>key<sp/>\&quot;%s\&quot;&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key.c_str()<sp/>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/da4/classxAOD_1_1TReturnCode_1a8f212da971e112f15d8bd5bf49c4ed0aa65103d5e226744ccf3bf1f920cac2075" kindref="member" tooltip="The function call failed.">TReturnCode::kFailure</ref>;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>the<sp/>new<sp/>object:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_objects[<sp/>key<sp/>]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>THolder(<sp/>obj,<sp/>cl,<sp/>isOwner<sp/>);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_keys[<sp/>Utils::hash(<sp/>key<sp/>)<sp/>]<sp/>=<sp/>key;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/da4/classxAOD_1_1TReturnCode_1a8f212da971e112f15d8bd5bf49c4ed0aadf30f5028ade4d2f7dce8ab294d8400f" kindref="member">TReturnCode::kSuccess</ref>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/>TReturnCode<sp/><ref refid="dd/dae/classxAOD_1_1TStore_1a96c78b3019dbf418a93c65c9fe31e9e8" kindref="member" tooltip="Add an object to the store.">TStore::record</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::type_info&amp;<sp/>ti<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>that<sp/>the<sp/>key<sp/>is<sp/>not<sp/>yet<sp/>taken:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_objects.find(<sp/>key<sp/>)<sp/>!=<sp/>m_objects.end()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Error(<sp/></highlight><highlight class="stringliteral">&quot;xAOD::TStore::record&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XAOD_MESSAGE(<sp/></highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>overwrite<sp/>object<sp/>with<sp/>key<sp/>\&quot;%s\&quot;&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key.c_str()<sp/>);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/da4/classxAOD_1_1TReturnCode_1a8f212da971e112f15d8bd5bf49c4ed0aa65103d5e226744ccf3bf1f920cac2075" kindref="member" tooltip="The function call failed.">TReturnCode::kFailure</ref>;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>the<sp/>new<sp/>object:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_objects[<sp/>key<sp/>]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>THolder(<sp/>obj,<sp/>ti<sp/>);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_keys[<sp/>Utils::hash(<sp/>key<sp/>)<sp/>]<sp/>=<sp/>key;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/da4/classxAOD_1_1TReturnCode_1a8f212da971e112f15d8bd5bf49c4ed0aadf30f5028ade4d2f7dce8ab294d8400f" kindref="member">TReturnCode::kSuccess</ref>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/>TReturnCode<sp/><ref refid="dd/dae/classxAOD_1_1TStore_1a96c78b3019dbf418a93c65c9fe31e9e8" kindref="member" tooltip="Add an object to the store.">TStore::record</ref>(<sp/>THolder*<sp/>hldr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>that<sp/>the<sp/>key<sp/>is<sp/>not<sp/>yet<sp/>taken:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_objects.find(<sp/>key<sp/>)<sp/>!=<sp/>m_objects.end()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::Error(<sp/></highlight><highlight class="stringliteral">&quot;xAOD::TStore::record&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XAOD_MESSAGE(<sp/></highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>overwrite<sp/>object<sp/>with<sp/>key<sp/>\&quot;%s\&quot;&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key.c_str()<sp/>);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>delete<sp/>the<sp/>holder<sp/>object<sp/>at<sp/>this<sp/>point.<sp/>It&apos;s<sp/>quite<sp/>ugly<sp/>in<sp/>terms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>code<sp/>readibility,<sp/>but<sp/>it<sp/>results<sp/>in<sp/>fewer<sp/>characters<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>template<sp/>code...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>hldr;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/da4/classxAOD_1_1TReturnCode_1a8f212da971e112f15d8bd5bf49c4ed0aa65103d5e226744ccf3bf1f920cac2075" kindref="member" tooltip="The function call failed.">TReturnCode::kFailure</ref>;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>the<sp/>new<sp/>object:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_objects[<sp/>key<sp/>]<sp/>=<sp/>hldr;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_keys[<sp/>Utils::hash(<sp/>key<sp/>)<sp/>]<sp/>=<sp/>key;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/da4/classxAOD_1_1TReturnCode_1a8f212da971e112f15d8bd5bf49c4ed0aadf30f5028ade4d2f7dce8ab294d8400f" kindref="member">TReturnCode::kSuccess</ref>;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/>::Bool_t<sp/><ref refid="dd/dae/classxAOD_1_1TStore_1aeb956b1b9725283d6f084b957ab21460" kindref="member" tooltip="Function checking if an object is available from the store.">TStore::contains</ref>(<sp/>uint32_t<sp/>hash<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>the<sp/>check<sp/>quickly:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>m_keys.find(<sp/>hash<sp/>)<sp/>!=<sp/>m_keys.end()<sp/>);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/>::Bool_t<sp/><ref refid="dd/dae/classxAOD_1_1TStore_1aeb956b1b9725283d6f084b957ab21460" kindref="member" tooltip="Function checking if an object is available from the store.">TStore::contains</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>over<sp/>all<sp/>the<sp/>managed<sp/>objects:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Objects_t::const_iterator<sp/>itr<sp/>=<sp/>m_objects.begin();</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Objects_t::const_iterator<sp/>end<sp/>=<sp/>m_objects.end();</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>;<sp/>itr<sp/>!=<sp/>end;<sp/>++itr<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>this<sp/>is<sp/>the<sp/>right<sp/>object:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>itr-&gt;second-&gt;get()<sp/>==<sp/>ptr<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kTRUE;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>didn&apos;t<sp/>find<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kFALSE;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="dd/dae/classxAOD_1_1TStore_1aa4044ac928ea18fe6cde037cfcb8742d" kindref="member" tooltip="Get the name corresponding to a hashed key.">TStore::getName</ref>(<sp/>uint32_t<sp/>hash<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>find<sp/>the<sp/>name<sp/>associated<sp/>with<sp/>this<sp/>key:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>HashedKeys_t::const_iterator<sp/>itr<sp/>=<sp/>m_keys.find(<sp/>hash<sp/>);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>itr<sp/>!=<sp/>m_keys.end()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>found<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itr-&gt;second;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>didn&apos;t<sp/>find<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::Warning(<sp/></highlight><highlight class="stringliteral">&quot;xAOD::TStore::getName&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Key<sp/>0x%08x<sp/>not<sp/>known<sp/>by<sp/>the<sp/>store&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hash<sp/>);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>dummy(<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dummy;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="dd/dae/classxAOD_1_1TStore_1aa4044ac928ea18fe6cde037cfcb8742d" kindref="member" tooltip="Get the name corresponding to a hashed key.">TStore::getName</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>over<sp/>all<sp/>the<sp/>managed<sp/>objects:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Objects_t::const_iterator<sp/>itr<sp/>=<sp/>m_objects.begin();</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Objects_t::const_iterator<sp/>end<sp/>=<sp/>m_objects.end();</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>;<sp/>itr<sp/>!=<sp/>end;<sp/>++itr<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>this<sp/>is<sp/>the<sp/>right<sp/>object:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>itr-&gt;second-&gt;get()<sp/>==<sp/>ptr<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itr-&gt;first;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>didn&apos;t<sp/>find<sp/>the<sp/>object:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::Warning(<sp/></highlight><highlight class="stringliteral">&quot;xAOD::TStore::getName&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Object<sp/>%p<sp/>is<sp/>not<sp/>held<sp/>by<sp/>the<sp/>store&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>dummy(<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dummy;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>xAOD</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODRootAccess/Root/TStore.cxx"/>
  </compounddef>
</doxygen>
