<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d4/d9e/ThresholdConfig_8cxx" kind="file">
    <compoundname>ThresholdConfig.cxx</compoundname>
    <includes refid="d5/da1/ThresholdConfig_8h" local="yes">TrigConfL1Data/ThresholdConfig.h</includes>
    <includes refid="da/df9/ClusterThresholdValue_8h" local="yes">TrigConfL1Data/ClusterThresholdValue.h</includes>
    <includes refid="d1/dae/JetThresholdValue_8h" local="yes">TrigConfL1Data/JetThresholdValue.h</includes>
    <includes refid="df/d71/EtThresholdValue_8h" local="yes">TrigConfL1Data/EtThresholdValue.h</includes>
    <includes refid="da/d67/L1DataDef_8h" local="yes">TrigConfL1Data/L1DataDef.h</includes>
    <includes local="no">stdexcept</includes>
    <includes local="no">iostream</includes>
    <includes local="no">sys/types.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">boost/lexical_cast.hpp</includes>
    <incdepgraph>
      <node id="310321">
        <label>TrigConfL1Data/TriggerThresholdValue.h</label>
        <link refid="dd/d1d/TriggerThresholdValue_8h_source"/>
        <childnode refid="310322" relation="include">
        </childnode>
        <childnode refid="310325" relation="include">
        </childnode>
      </node>
      <node id="310322">
        <label>TrigConfL1Data/L1DataBaseclass.h</label>
        <link refid="d8/db1/L1DataBaseclass_8h_source"/>
        <childnode refid="310323" relation="include">
        </childnode>
      </node>
      <node id="310340">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="310330">
        <label>TrigConfL1Data/CaloInfo.h</label>
        <link refid="d2/d93/CaloInfo_8h_source"/>
        <childnode refid="310325" relation="include">
        </childnode>
        <childnode refid="310328" relation="include">
        </childnode>
        <childnode refid="310322" relation="include">
        </childnode>
        <childnode refid="310331" relation="include">
        </childnode>
        <childnode refid="310332" relation="include">
        </childnode>
        <childnode refid="310333" relation="include">
        </childnode>
      </node>
      <node id="310332">
        <label>TrigConfL1Data/METSigParam.h</label>
        <link refid="d3/dab/METSigParam_8h_source"/>
        <childnode refid="310325" relation="include">
        </childnode>
      </node>
      <node id="310337">
        <label>stdexcept</label>
      </node>
      <node id="310318">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/Root/ThresholdConfig.cxx</label>
        <link refid="ThresholdConfig.cxx"/>
        <childnode refid="310319" relation="include">
        </childnode>
        <childnode refid="310334" relation="include">
        </childnode>
        <childnode refid="310335" relation="include">
        </childnode>
        <childnode refid="310336" relation="include">
        </childnode>
        <childnode refid="310326" relation="include">
        </childnode>
        <childnode refid="310337" relation="include">
        </childnode>
        <childnode refid="310329" relation="include">
        </childnode>
        <childnode refid="310338" relation="include">
        </childnode>
        <childnode refid="310339" relation="include">
        </childnode>
        <childnode refid="310340" relation="include">
        </childnode>
      </node>
      <node id="310325">
        <label>string</label>
      </node>
      <node id="310327">
        <label>map</label>
      </node>
      <node id="310323">
        <label>TrigConfL1Data/TrigConfData.h</label>
        <link refid="da/da8/TrigConfData_8h_source"/>
        <childnode refid="310324" relation="include">
        </childnode>
        <childnode refid="310325" relation="include">
        </childnode>
      </node>
      <node id="310338">
        <label>sys/types.h</label>
      </node>
      <node id="310331">
        <label>TrigConfL1Data/CaloSinCos.h</label>
        <link refid="d0/da4/CaloSinCos_8h_source"/>
        <childnode refid="310325" relation="include">
        </childnode>
        <childnode refid="310322" relation="include">
        </childnode>
      </node>
      <node id="310336">
        <label>TrigConfL1Data/EtThresholdValue.h</label>
        <link refid="df/d71/EtThresholdValue_8h_source"/>
        <childnode refid="310321" relation="include">
        </childnode>
      </node>
      <node id="310328">
        <label>vector</label>
      </node>
      <node id="310335">
        <label>TrigConfL1Data/JetThresholdValue.h</label>
        <link refid="d1/dae/JetThresholdValue_8h_source"/>
        <childnode refid="310321" relation="include">
        </childnode>
      </node>
      <node id="310324">
        <label>iosfwd</label>
      </node>
      <node id="310329">
        <label>iostream</label>
      </node>
      <node id="310319">
        <label>TrigConfL1Data/ThresholdConfig.h</label>
        <link refid="d5/da1/ThresholdConfig_8h_source"/>
        <childnode refid="310320" relation="include">
        </childnode>
        <childnode refid="310330" relation="include">
        </childnode>
        <childnode refid="310322" relation="include">
        </childnode>
        <childnode refid="310326" relation="include">
        </childnode>
      </node>
      <node id="310333">
        <label>TrigConfL1Data/IsolationParam.h</label>
        <link refid="d3/d5c/IsolationParam_8h_source"/>
        <childnode refid="310322" relation="include">
        </childnode>
        <childnode refid="310325" relation="include">
        </childnode>
      </node>
      <node id="310326">
        <label>TrigConfL1Data/L1DataDef.h</label>
        <link refid="da/d67/L1DataDef_8h_source"/>
        <childnode refid="310325" relation="include">
        </childnode>
        <childnode refid="310327" relation="include">
        </childnode>
        <childnode refid="310328" relation="include">
        </childnode>
      </node>
      <node id="310320">
        <label>TrigConfL1Data/TriggerThreshold.h</label>
        <link refid="d1/de2/TriggerThreshold_8h_source"/>
        <childnode refid="310321" relation="include">
        </childnode>
        <childnode refid="310326" relation="include">
        </childnode>
        <childnode refid="310322" relation="include">
        </childnode>
        <childnode refid="310325" relation="include">
        </childnode>
        <childnode refid="310328" relation="include">
        </childnode>
        <childnode refid="310329" relation="include">
        </childnode>
      </node>
      <node id="310339">
        <label>stdio.h</label>
      </node>
      <node id="310334">
        <label>TrigConfL1Data/ClusterThresholdValue.h</label>
        <link refid="da/df9/ClusterThresholdValue_8h_source"/>
        <childnode refid="310321" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="d4/d9e/ThresholdConfig_8cxx_1a9bbd1716cb30aac889a3dc0310f888c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void printVectorSummary</definition>
        <argsstring>(const TrigConf::ThresholdConfig::thrVec_t &amp;vec, const string &amp;name, const string &amp;indent, unsigned int detail)</argsstring>
        <name>printVectorSummary</name>
        <param>
          <type>const TrigConf::ThresholdConfig::thrVec_t &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>indent</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>detail</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/Root/ThresholdConfig.cxx" line="264" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/Root/ThresholdConfig.cxx" bodystart="263" bodyend="271"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;TrigConfL1Data/ThresholdConfig.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigConfL1Data/ClusterThresholdValue.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigConfL1Data/JetThresholdValue.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigConfL1Data/EtThresholdValue.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TrigConfL1Data/L1DataDef.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/lexical_cast.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">TrigConf;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal">ThresholdConfig::ThresholdConfig()<sp/>:</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><ref refid="d2/db1/classTrigConf_1_1L1DataBaseclass" kindref="compound">L1DataBaseclass</ref>(),</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/>m_ctpVersion(<sp/>0<sp/>),</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/>m_l1Version(<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>vector<sp/>for<sp/>each<sp/>trigger<sp/>type<sp/>registered<sp/>in<sp/>L1DataDef.cxx<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>vector<sp/>is<sp/>0<sp/>and<sp/>grows<sp/>while<sp/>being<sp/>filled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>L1DataDef::TypeConfigMap_t::value_type<sp/>tc:<sp/>L1DataDef::typeConfigs()<sp/>)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_thresholdVectors.insert(<sp/>thrVecMap_t::value_type(tc.first<sp/>,<sp/>thrVec_t(0)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">TrigConf::ThresholdConfig::~ThresholdConfig()<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/>clear();</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;TriggerThreshold*&gt;&amp;<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal">TrigConf::ThresholdConfig::getThresholdVector(L1DataDef::TriggerType<sp/>type)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/>thrVecMap_t::const_iterator<sp/>res<sp/>=<sp/>m_thresholdVectors.find(type);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(res<sp/>==<sp/>m_thresholdVectors.end())<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>triggertype<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>L1DataDef::typeAsString(type)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>in<sp/>ThresholdConfig::getThresholdVector<sp/>encountered&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>triggertype<sp/>in<sp/>ThresholdConfig::getThresholdVector<sp/>encountered&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res-&gt;second;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">std::vector&lt;TrigConf::TriggerThreshold*&gt;&amp;<sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal">TrigConf::ThresholdConfig::thresholdVector(L1DataDef::TriggerType<sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">thrVec_t&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>getThresholdVector(type)<sp/>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">TrigConf::ThresholdConfig::insertInPosition(std::vector&lt;TriggerThreshold*&gt;&amp;<sp/>thrVec,<sp/><ref refid="db/de5/classTrigConf_1_1TriggerThreshold" kindref="compound">TriggerThreshold</ref>*<sp/>thr,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/>thr-&gt;print();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>extend<sp/>if<sp/>necessary<sp/>(filled<sp/>with<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pos<sp/>&gt;=<sp/>thrVec.size())<sp/>thrVec.resize(pos+1,<sp/>0);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(thrVec[pos]<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ThresholdConfig::insertInPosition:<sp/>position<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pos</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>already<sp/>filled<sp/>for<sp/>type<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>thr-&gt;type()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>thr-&gt;ttype()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>abort!!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Existing<sp/>threshold&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>thrVec[pos]-&gt;print(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,5);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;New<sp/>threshold&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>thr-&gt;print(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,5);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;ThresholdConfig::insertInPosition<sp/>position<sp/>already<sp/>filled&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/>thrVec[pos]<sp/>=<sp/>thr;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">TrigConf::ThresholdConfig::addTriggerThreshold(<ref refid="db/de5/classTrigConf_1_1TriggerThreshold" kindref="compound">TriggerThreshold</ref>*<sp/>thr)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>put<sp/>the<sp/>threshold<sp/>into<sp/>the<sp/>vector<sp/>of<sp/>all<sp/>thresholds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/>m_TriggerThresholdVector.push_back(thr);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>put<sp/>the<sp/>threshold<sp/>to<sp/>the<sp/>correct<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/>L1DataDef::TriggerType<sp/>ttype<sp/>=<sp/>thr-&gt;ttype();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/>vector&lt;TriggerThreshold*&gt;&amp;<sp/>thrVec<sp/>=<sp/>thresholdVector(ttype);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>maximum<sp/>is<sp/>exceeded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_thr<sp/>=<sp/>L1DataDef::typeConfig(ttype).max;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(thr-&gt;mapping()&gt;0<sp/>&amp;&amp;<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)thr-&gt;mapping()<sp/>&gt;=<sp/>max_thr)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ThresholdConfig::addTriggerThreshold:<sp/>threshold<sp/>mapping<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>thr-&gt;mapping()</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>exceeds<sp/>maximum<sp/>for<sp/>type<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>thr-&gt;type()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>,<sp/>abort!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(<sp/></highlight><highlight class="stringliteral">&quot;ThresholdConfig::addTriggerThreshold:<sp/>threshold<sp/>mapping<sp/>exceeds<sp/>limit&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/>thr-&gt;setThresholdNumber(thr-&gt;mapping());</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/>insertInPosition(thrVec,<sp/>thr,<sp/>thr-&gt;mapping()<sp/>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BPTX<sp/>threshold<sp/>is<sp/>type<sp/>NIM<sp/>but<sp/>gets<sp/>inserted<sp/>as<sp/>BPTX<sp/>as<sp/>well<sp/>(in<sp/>run<sp/>2<sp/>not<sp/>anymore)<sp/>-<sp/>no<sp/>easy<sp/>way<sp/>to<sp/>make<sp/>this<sp/>backward<sp/>compatible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if(thr-&gt;name().find(&quot;BPTX&quot;)!=string::npos)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>string::size_type<sp/>pos<sp/>=<sp/>thr-&gt;name().find_first_of(&quot;0123456789&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>mapping<sp/>=<sp/>boost::lexical_cast&lt;int,string&gt;(thr-&gt;name().substr(pos));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>insertInPosition(<sp/>thresholdVector(L1DataDef::BPTX),<sp/>thr,<sp/>mapping<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>backward<sp/>compatibility<sp/>a<sp/>copy<sp/>of<sp/>all<sp/>EM<sp/>and<sp/>TAU<sp/>thresholds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>safed<sp/>in<sp/>the<sp/>cluster<sp/>threshold<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(l1Version()==0)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ttype==L1DataDef::EM)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>insertInPosition(<sp/>m_ClusterThresholdVector,<sp/>thr,<sp/>thr-&gt;mapping()<sp/>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ttype==L1DataDef::TAU)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_em<sp/>=<sp/>L1DataDef::typeConfig(L1DataDef::EM).max;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_tau<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//L1DataDef::typeConfig(L1DataDef::TAU).max;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>max_em<sp/>+<sp/>max_tau<sp/>-<sp/>thr-&gt;mapping()<sp/>-<sp/>1;<sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>insertInPosition(<sp/>m_ClusterThresholdVector,<sp/>thr,<sp/>pos<sp/>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal">TrigConf::ThresholdConfig::getClusterThresholdType<sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresholdnumber<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><ref refid="db/de5/classTrigConf_1_1TriggerThreshold" kindref="compound">TriggerThreshold</ref>*<sp/>thr<sp/>=<sp/>getThresholdVector(L1DataDef::EM)[thresholdnumber];</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>thr?thr-&gt;type():</highlight><highlight class="stringliteral">&quot;EM&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">/********************************</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*<sp/>cluster<sp/>isolation<sp/>and<sp/>veto</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>********************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>TrigConf::ThresholdConfig::getClusterEmIsolation<sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresholdnumber<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><ref refid="d5/d4f/classTrigConf_1_1ClusterThresholdValue" kindref="compound">ClusterThresholdValue</ref>*<sp/>ctv<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="d5/d4f/classTrigConf_1_1ClusterThresholdValue" kindref="compound">ClusterThresholdValue</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(getThresholdVector(L1DataDef::EM)[thresholdnumber]-&gt;triggerThresholdValue(eta,phi));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ctv?ctv-&gt;emIsolation():0;</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>TrigConf::ThresholdConfig::getClusterHadIsolation<sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresholdnumber<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><ref refid="d5/d4f/classTrigConf_1_1ClusterThresholdValue" kindref="compound">ClusterThresholdValue</ref>*<sp/>ctv<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="d5/d4f/classTrigConf_1_1ClusterThresholdValue" kindref="compound">ClusterThresholdValue</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(getThresholdVector(L1DataDef::EM)[thresholdnumber]-&gt;triggerThresholdValue(eta,phi));</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ctv?ctv-&gt;hadIsolation():0;</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>TrigConf::ThresholdConfig::getClusterHadVeto<sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresholdnumber<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><ref refid="d5/d4f/classTrigConf_1_1ClusterThresholdValue" kindref="compound">ClusterThresholdValue</ref>*<sp/>ctv<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="d5/d4f/classTrigConf_1_1ClusterThresholdValue" kindref="compound">ClusterThresholdValue</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(getThresholdVector(L1DataDef::EM)[thresholdnumber]-&gt;triggerThresholdValue(eta,phi));</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ctv?ctv-&gt;hadVeto():0;</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">/****************</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/>*<sp/>get<sp/>window</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/>****************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TrigConf::ThresholdConfig::getWindow(TrigConf::L1DataDef::TriggerType<sp/>type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresholdnumber)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getThresholdVector(type)[thresholdnumber]-&gt;triggerThresholdValue(eta,phi)-&gt;window();</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TrigConf::ThresholdConfig::getJetWindow(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresholdnumber<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getThreshold(TrigConf::L1DataDef::JET,<sp/>eta,<sp/>phi,<sp/>thresholdnumber);</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TrigConf::ThresholdConfig::getJfWindow(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresholdnumber<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getThreshold(TrigConf::L1DataDef::JF,<sp/>eta,<sp/>phi,<sp/>thresholdnumber);</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TrigConf::ThresholdConfig::getJbWindow(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresholdnumber<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getThreshold(TrigConf::L1DataDef::JB,<sp/>eta,<sp/>phi,<sp/>thresholdnumber);</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">/****************</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>*<sp/>get<sp/>ptcut()</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/>****************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>TrigConf::ThresholdConfig::getThreshold(TrigConf::L1DataDef::TriggerType<sp/>type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresholdnumber)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getThresholdVector(type)[thresholdnumber]-&gt;triggerThresholdValue(eta,phi)-&gt;ptcut();</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>TrigConf::ThresholdConfig::getClusterThreshold(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresholdnumber)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getThreshold(TrigConf::L1DataDef::EM,<sp/>eta,<sp/>phi,<sp/>thresholdnumber);</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>TrigConf::ThresholdConfig::getMuonThreshold(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresholdnumber<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getThreshold(TrigConf::L1DataDef::MUON,<sp/>eta,<sp/>phi,<sp/>thresholdnumber);</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>TrigConf::ThresholdConfig::getJetEtThreshold(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresholdnumber<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getThreshold(TrigConf::L1DataDef::JE,<sp/>eta,<sp/>phi,<sp/>thresholdnumber);</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>TrigConf::ThresholdConfig::getMissEtThreshold(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresholdnumber<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getThreshold(TrigConf::L1DataDef::XE,<sp/>eta,<sp/>phi,<sp/>thresholdnumber);</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>TrigConf::ThresholdConfig::getMissEtSigThreshold(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresholdnumber<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getThreshold(TrigConf::L1DataDef::XS,<sp/>eta,<sp/>phi,<sp/>thresholdnumber);</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>TrigConf::ThresholdConfig::getJetThreshold(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresholdnumber<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getThreshold(TrigConf::L1DataDef::JET,<sp/>eta,<sp/>phi,<sp/>thresholdnumber);</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>TrigConf::ThresholdConfig::getJbThreshold(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresholdnumber)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getThreshold(TrigConf::L1DataDef::JB,<sp/>eta,<sp/>phi,<sp/>thresholdnumber);</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>TrigConf::ThresholdConfig::getJfThreshold<sp/><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresholdnumber<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getThreshold(TrigConf::L1DataDef::JF,<sp/>eta,<sp/>phi,<sp/>thresholdnumber);</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>TrigConf::ThresholdConfig::getTotEtThreshold(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresholdnumber<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getThreshold(TrigConf::L1DataDef::TE,<sp/>eta,<sp/>phi,<sp/>thresholdnumber);</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal">TrigConf::ThresholdConfig::attributeThresholdNumbers()<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>thresholdnumber<sp/>for<sp/>each<sp/>threshold</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Run<sp/>2:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>has<sp/>been<sp/>changed,<sp/>the<sp/>thresholdnumbers<sp/>now<sp/>correspond<sp/>to<sp/>the<sp/>position<sp/>in<sp/>the<sp/>vector<sp/>(the<sp/>index)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Run<sp/>1:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>EM/TAU<sp/>thresholds<sp/>were<sp/>an<sp/>exception:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>EM<sp/>and<sp/>TAU<sp/>vector<sp/>are<sp/>related,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>total<sp/>number<sp/>of<sp/>EM<sp/>and<sp/>TAU<sp/>thresholds<sp/>is<sp/>less<sp/>than<sp/>EM.max,<sp/>the<sp/>maximum<sp/>number<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tau<sp/>thresholds<sp/>is<sp/>TAU.max</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>arrangement<sp/>is<sp/>such<sp/>that<sp/>the<sp/>EM<sp/>thresholds<sp/>above<sp/>7<sp/>are<sp/>after<sp/>the<sp/>TAU<sp/>thresholds<sp/>in<sp/>reverse<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>instance<sp/>if<sp/>there<sp/>would<sp/>be<sp/>6<sp/>TAU<sp/>thresholds<sp/>and<sp/>10<sp/>EM<sp/>thresholds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>EM-TAU<sp/>vector<sp/><sp/>:<sp/>[EM0,EM1,...,EM7,TAU0,TAU1,...,TAU5,EM9,EM8]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>thresholdNumber:<sp/>[<sp/><sp/>0,<sp/><sp/>1,...,<sp/><sp/>7,<sp/><sp/><sp/>8,<sp/><sp/><sp/>9,...,<sp/><sp/>13,<sp/>14,<sp/>15]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="db/de5/classTrigConf_1_1TriggerThreshold" kindref="compound">TriggerThreshold</ref>*<sp/>p:<sp/>thresholdVector(L1DataDef::EM))<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p==0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_em<sp/><sp/>=<sp/>L1DataDef::typeConfig(L1DataDef::EM).max;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>p-&gt;mapping()&gt;=8<sp/>)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;setThresholdNumber(max_em<sp/>-<sp/>1<sp/>-<sp/>(p-&gt;mapping()-8)<sp/>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="db/de5/classTrigConf_1_1TriggerThreshold" kindref="compound">TrigConf::TriggerThreshold</ref>*<sp/>p:<sp/>thresholdVector(L1DataDef::TAU))<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p==0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>p-&gt;ttype()==L1DataDef::TAU<sp/>)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;setThresholdNumber(p-&gt;mapping()<sp/>+<sp/>8);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><ref refid="db/de5/classTrigConf_1_1TriggerThreshold" kindref="compound">TrigConf::TriggerThreshold</ref>*</highlight></codeline>
<codeline lineno="256"><highlight class="normal">TrigConf::ThresholdConfig::findTriggerThreshold(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="db/de5/classTrigConf_1_1TriggerThreshold" kindref="compound">TrigConf::TriggerThreshold</ref><sp/>*thr:<sp/>m_TriggerThresholdVector)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(thr-&gt;id()==id)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>thr;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printVectorSummary(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrigConf::ThresholdConfig::thrVec_t&amp;<sp/>vec,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/><ref refid="d6/db2/structTrigConf_1_1name" kindref="compound">name</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>indent,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>detail)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;=========================================&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>The<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vec.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>elements&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;=========================================&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="db/de5/classTrigConf_1_1TriggerThreshold" kindref="compound">TrigConf::TriggerThreshold</ref><sp/>*thr:<sp/>vec)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(thr)<sp/>thr-&gt;print(indent<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/>detail);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>0<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal">TrigConf::ThresholdConfig::print(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>indent,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>detail)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(detail&gt;=2)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Threshold<sp/>configuration:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>getThresholdVector().size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>thresholds&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(L1DataDef::TriggerType<sp/>tt<sp/>:<sp/>L1DataDef::types())<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>L1DataDef::typeConfig(tt).name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>thresholds:<sp/>&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>getThresholdVector(tt).size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>thresholds&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Threshold<sp/>configuration:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>getThresholdVector().size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>thresholds&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(detail&gt;=3)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;=========================================&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;==<sp/>ThresholdConfig<sp/>for<sp/>MT_id<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>lvl1MasterTableId()<sp/><sp/>&lt;&lt;<sp/>endl</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;=========================================&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printVectorSummary(getThresholdVector(L1DataDef::EM),<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;EMThresholdVector&quot;</highlight><highlight class="normal">,<sp/>indent,<sp/>detail);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printVectorSummary(getThresholdVector(L1DataDef::TAU),<sp/><sp/></highlight><highlight class="stringliteral">&quot;TauThresholdVector&quot;</highlight><highlight class="normal">,<sp/>indent,<sp/>detail);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printVectorSummary(m_ClusterThresholdVector,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ClusterThresholdVector&quot;</highlight><highlight class="normal">,<sp/>indent,<sp/>detail);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printVectorSummary(getThresholdVector(L1DataDef::JET),<sp/><sp/></highlight><highlight class="stringliteral">&quot;JetThresholdVector&quot;</highlight><highlight class="normal">,<sp/>indent,<sp/>detail);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printVectorSummary(getThresholdVector(L1DataDef::JF),<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;JFThresholdVector&quot;</highlight><highlight class="normal">,<sp/>indent,<sp/>detail);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printVectorSummary(getThresholdVector(L1DataDef::JB),<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;JBThresholdVector&quot;</highlight><highlight class="normal">,<sp/>indent,<sp/>detail);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printVectorSummary(getThresholdVector(L1DataDef::TE),<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;TotEtVector&quot;</highlight><highlight class="normal">,<sp/>indent,<sp/>detail);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printVectorSummary(getThresholdVector(L1DataDef::JE),<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;JetEtVector&quot;</highlight><highlight class="normal">,<sp/>indent,<sp/>detail);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printVectorSummary(getThresholdVector(L1DataDef::XE),<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MissEtVector&quot;</highlight><highlight class="normal">,<sp/>indent,<sp/>detail);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printVectorSummary(getThresholdVector(L1DataDef::MUON),<sp/></highlight><highlight class="stringliteral">&quot;MuonThresholdVector&quot;</highlight><highlight class="normal">,<sp/>indent,<sp/>detail);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printVectorSummary(getThresholdVector(L1DataDef::NIM),<sp/><sp/></highlight><highlight class="stringliteral">&quot;NimThresholdVector&quot;</highlight><highlight class="normal">,<sp/>indent,<sp/>detail);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/>m_CaloInfo.print(indent,<sp/>detail);</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal">TrigConf::ThresholdConfig::printTriggerThresholdVector(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>indent)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><sp/></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/>printVectorSummary(getThresholdVector(),</highlight><highlight class="stringliteral">&quot;complete<sp/>threshold<sp/>vector&quot;</highlight><highlight class="normal">,<sp/>indent,<sp/>5);</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal">TrigConf::ThresholdConfig::printTtvSummary(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrigConf::ThresholdConfig::thrVec_t&amp;<sp/>vec,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#=========================================&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#=========================================&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="db/de5/classTrigConf_1_1TriggerThreshold" kindref="compound">TriggerThreshold</ref>*<sp/>thr:<sp/>vec)<sp/>printTtvMap(thr);</highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal">TrigConf::ThresholdConfig::printThresholdValueMap()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/>printTtvSummary(getThresholdVector(L1DataDef::EM),<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;EM<sp/>threshold<sp/>values&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/>printTtvSummary(getThresholdVector(L1DataDef::TAU),<sp/><sp/></highlight><highlight class="stringliteral">&quot;Tau<sp/>threshold<sp/>values&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/>printTtvSummary(m_ClusterThresholdVector,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cluster<sp/>threshold<sp/>values<sp/>(EM<sp/>+<sp/>Tau)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/>printTtvSummary(getThresholdVector(L1DataDef::JET),<sp/><sp/></highlight><highlight class="stringliteral">&quot;JetThreshold<sp/>values&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/>printTtvSummary(getThresholdVector(L1DataDef::FJET),<sp/></highlight><highlight class="stringliteral">&quot;FJetThreshold<sp/>values&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/>printTtvSummary(getThresholdVector(L1DataDef::TE),<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;TotEt<sp/>values&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/>printTtvSummary(getThresholdVector(L1DataDef::JE),<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;JetEt<sp/>values&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/>printTtvSummary(getThresholdVector(L1DataDef::XE),<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MissEt<sp/>values&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/>printTtvSummary(getThresholdVector(L1DataDef::MUON),<sp/></highlight><highlight class="stringliteral">&quot;MuonThreshold<sp/>values&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/>printTtvSummary(getThresholdVector(L1DataDef::NIM),<sp/><sp/></highlight><highlight class="stringliteral">&quot;NimThreshold<sp/>values&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TrigConf::ThresholdConfig::printTtvMap(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/de5/classTrigConf_1_1TriggerThreshold" kindref="compound">TriggerThreshold</ref>*<sp/>thr)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line[1000];</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#---------------------------------------------------------&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>TTV(type,name)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eta<sp/><sp/><sp/>phi<sp/>:<sp/><sp/><sp/><sp/>pt<sp/><sp/>window<sp/>emIsol<sp/>hadIsol<sp/>hadVeto&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>Number<sp/>of<sp/>theshold<sp/>values:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>thr-&gt;thresholdValueVector().size()<sp/>&lt;&lt;<sp/>endl</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#---------------------------------------------------------&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ieta<sp/>=<sp/>-49;<sp/>ieta<sp/>&lt;=<sp/>49;<sp/>++ieta)<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iphi<sp/>=<sp/>0;<sp/>iphi<sp/>&lt;<sp/>64;<sp/>++iphi)<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/dfb/classTrigConf_1_1TriggerThresholdValue" kindref="compound">TriggerThresholdValue</ref>*<sp/>ttv<sp/>=<sp/>thr-&gt;triggerThresholdValue(ieta,<sp/>iphi);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>emiso(-1),<sp/>hadiso(-1),<sp/>hadveto(-1);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/d4f/classTrigConf_1_1ClusterThresholdValue" kindref="compound">ClusterThresholdValue</ref>*<sp/>ctv<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="d5/d4f/classTrigConf_1_1ClusterThresholdValue" kindref="compound">ClusterThresholdValue</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ttv);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ctv)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emiso<sp/>=<sp/>ctv-&gt;emIsolation();</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hadiso<sp/>=<sp/>ctv-&gt;hadIsolation();</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hadveto<sp/>=<sp/>ctv-&gt;hadVeto();</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(line,<sp/></highlight><highlight class="stringliteral">&quot;TTV(%-4s,%-10s)<sp/>eta[%2d]<sp/>phi[%2d]:<sp/>%3f<sp/>%6i<sp/>%6f<sp/>%6f<sp/>%6f&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thr-&gt;type().c_str(),<sp/>thr-&gt;name().c_str(),<sp/>ieta,<sp/>iphi,<sp/></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ttv-&gt;ptcut(),<sp/>ttv-&gt;window(),<sp/>emiso,<sp/>hadiso,<sp/>hadveto);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>line<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal">vector&lt;TrigConf::TriggerThreshold*&gt;</highlight></codeline>
<codeline lineno="359"><highlight class="normal">TrigConf::ThresholdConfig::getNimThresholdVectorByType(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>type)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/>vector&lt;TriggerThreshold*&gt;<sp/>v;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="db/de5/classTrigConf_1_1TriggerThreshold" kindref="compound">TriggerThreshold</ref>*<sp/>thr:<sp/>getThresholdVector(L1DataDef::NIM)<sp/>)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>thr-&gt;type()<sp/>==<sp/>type<sp/>)<sp/>v.push_back(thr);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal">TrigConf::ThresholdConfig::clear()<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="db/de5/classTrigConf_1_1TriggerThreshold" kindref="compound">TriggerThreshold</ref>*<sp/>thr:<sp/>m_TriggerThresholdVector)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>thr;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/>m_TriggerThresholdVector.clear();</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(thrVecMap_t::value_type<sp/>&amp;<sp/>p:<sp/>m_thresholdVectors)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p.second.clear();</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/>m_CaloInfo.clear();</highlight></codeline>
<codeline lineno="376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigConfL1Data/Root/ThresholdConfig.cxx"/>
  </compounddef>
</doxygen>
