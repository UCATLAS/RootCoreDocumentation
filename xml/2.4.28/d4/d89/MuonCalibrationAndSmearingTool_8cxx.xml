<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="d4/d89/MuonCalibrationAndSmearingTool_8cxx" kind="file">
    <compoundname>MuonCalibrationAndSmearingTool.cxx</compoundname>
    <includes refid="d3/d32/PathResolver_8h" local="yes">PathResolver/PathResolver.h</includes>
    <includes refid="d9/d60/EventInfo_8h" local="yes">xAODEventInfo/EventInfo.h</includes>
    <includes refid="d8/d14/MuonCalibrationAndSmearingTool_8h" local="yes">MuonMomentumCorrections/MuonCalibrationAndSmearingTool.h</includes>
    <includes local="no">cmath</includes>
    <incdepgraph>
      <node id="216001">
        <label>list</label>
      </node>
      <node id="216010">
        <label>AthContainers/tools/DVL_algorithms.icc</label>
        <link refid="df/daa/DVL__algorithms_8icc"/>
        <childnode refid="215995" relation="include">
        </childnode>
        <childnode refid="216002" relation="include">
        </childnode>
        <childnode refid="215924" relation="include">
        </childnode>
        <childnode refid="215991" relation="include">
        </childnode>
        <childnode refid="215931" relation="include">
        </childnode>
      </node>
      <node id="215995">
        <label>AthContainers/tools/DVLNoBase.h</label>
        <link refid="d7/d92/DVLNoBase_8h"/>
      </node>
      <node id="215971">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="216035">
        <label>TProfile2D.h</label>
      </node>
      <node id="216017">
        <label>AthContainers/tools/DVLDataBucket.h</label>
        <link refid="d4/d16/DVLDataBucket_8h"/>
        <childnode refid="216018" relation="include">
        </childnode>
        <childnode refid="215996" relation="include">
        </childnode>
        <childnode refid="215938" relation="include">
        </childnode>
        <childnode refid="216019" relation="include">
        </childnode>
      </node>
      <node id="215973">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="215930" relation="include">
        </childnode>
        <childnode refid="215932" relation="include">
        </childnode>
        <childnode refid="215938" relation="include">
        </childnode>
        <childnode refid="215939" relation="include">
        </childnode>
      </node>
      <node id="215912">
        <label>AsgTools/IAsgTool.h</label>
        <link refid="df/dd4/IAsgTool_8h_source"/>
        <childnode refid="215906" relation="include">
        </childnode>
        <childnode refid="215907" relation="include">
        </childnode>
        <childnode refid="215913" relation="include">
        </childnode>
        <childnode refid="215914" relation="include">
        </childnode>
      </node>
      <node id="215918">
        <label>xAODEventInfo/EventInfo.h</label>
        <link refid="d9/d60/EventInfo_8h_source"/>
        <childnode refid="215919" relation="include">
        </childnode>
        <childnode refid="216029" relation="include">
        </childnode>
      </node>
      <node id="215974">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="215941">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="215926" relation="include">
        </childnode>
        <childnode refid="215928" relation="include">
        </childnode>
        <childnode refid="215942" relation="include">
        </childnode>
        <childnode refid="215940" relation="include">
        </childnode>
      </node>
      <node id="216051">
        <label>EventPrimitives/EventPrimitives.h</label>
        <link refid="d1/d54/EventPrimitives_8h_source"/>
        <childnode refid="216052" relation="include">
        </childnode>
        <childnode refid="216053" relation="include">
        </childnode>
        <childnode refid="216054" relation="include">
        </childnode>
      </node>
      <node id="215937">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="215939">
        <label>functional</label>
      </node>
      <node id="216083">
        <label>PATInterfaces/ISystematicsTool.h</label>
        <link refid="d6/db3/ISystematicsTool_8h_source"/>
        <childnode refid="215912" relation="include">
        </childnode>
        <childnode refid="216084" relation="include">
        </childnode>
        <childnode refid="216085" relation="include">
        </childnode>
        <childnode refid="216087" relation="include">
        </childnode>
      </node>
      <node id="215992">
        <label>boost/version.hpp</label>
      </node>
      <node id="215936">
        <label>limits</label>
      </node>
      <node id="215942">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="215969">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="215914">
        <label>GaudiKernel/IAlgTool.h</label>
      </node>
      <node id="215933">
        <label>iterator</label>
      </node>
      <node id="216072">
        <label>xAODCaloEvent/versions/CaloClusterBadChannelData_v1.h</label>
        <link refid="d5/d3a/CaloClusterBadChannelData__v1_8h_source"/>
        <childnode refid="216069" relation="include">
        </childnode>
        <childnode refid="215922" relation="include">
        </childnode>
      </node>
      <node id="216030">
        <label>MuonMomentumCorrections/MuonCalibrationAndSmearingTool.h</label>
        <link refid="d8/d14/MuonCalibrationAndSmearingTool_8h_source"/>
        <childnode refid="216031" relation="include">
        </childnode>
        <childnode refid="216033" relation="include">
        </childnode>
        <childnode refid="216034" relation="include">
        </childnode>
        <childnode refid="216035" relation="include">
        </childnode>
        <childnode refid="216036" relation="include">
        </childnode>
        <childnode refid="216037" relation="include">
        </childnode>
        <childnode refid="216038" relation="include">
        </childnode>
        <childnode refid="215906" relation="include">
        </childnode>
        <childnode refid="215922" relation="include">
        </childnode>
        <childnode refid="216039" relation="include">
        </childnode>
        <childnode refid="216040" relation="include">
        </childnode>
      </node>
      <node id="215957">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="215906" relation="include">
        </childnode>
        <childnode refid="215958" relation="include">
        </childnode>
      </node>
      <node id="216074">
        <label>CaloEvent/CaloRecoStatus.h</label>
      </node>
      <node id="215903">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MuonMomentumCorrections/Root/MuonCalibrationAndSmearingTool.cxx</label>
        <link refid="MuonCalibrationAndSmearingTool.cxx"/>
        <childnode refid="215904" relation="include">
        </childnode>
        <childnode refid="215918" relation="include">
        </childnode>
        <childnode refid="216030" relation="include">
        </childnode>
        <childnode refid="215935" relation="include">
        </childnode>
      </node>
      <node id="216016">
        <label>SGTools/ClassName.h</label>
      </node>
      <node id="216041">
        <label>xAODMuon/Muon.h</label>
        <link refid="d2/dfd/Muon_8h_source"/>
        <childnode refid="216042" relation="include">
        </childnode>
      </node>
      <node id="216022">
        <label>AthContainers/DataVector.icc</label>
        <link refid="da/de6/DataVector_8icc"/>
        <childnode refid="216023" relation="include">
        </childnode>
        <childnode refid="215990" relation="include">
        </childnode>
        <childnode refid="215936" relation="include">
        </childnode>
        <childnode refid="215939" relation="include">
        </childnode>
        <childnode refid="216024" relation="include">
        </childnode>
      </node>
      <node id="215981">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="215927" relation="include">
        </childnode>
        <childnode refid="215982" relation="include">
        </childnode>
        <childnode refid="215983" relation="include">
        </childnode>
        <childnode refid="215950" relation="include">
        </childnode>
        <childnode refid="215906" relation="include">
        </childnode>
      </node>
      <node id="215954">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="215922" relation="include">
        </childnode>
        <childnode refid="215934" relation="include">
        </childnode>
      </node>
      <node id="215920">
        <label>stdint.h</label>
      </node>
      <node id="216002">
        <label>AthContainers/tools/DVLCast.h</label>
        <link refid="df/d5c/DVLCast_8h"/>
        <childnode refid="215936" relation="include">
        </childnode>
        <childnode refid="216003" relation="include">
        </childnode>
        <childnode refid="215950" relation="include">
        </childnode>
        <childnode refid="215934" relation="include">
        </childnode>
        <childnode refid="215928" relation="include">
        </childnode>
      </node>
      <node id="215988">
        <label>AthContainers/IndexTrackingPolicy.h</label>
        <link refid="d0/da5/IndexTrackingPolicy_8h"/>
      </node>
      <node id="215951">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="215928" relation="include">
        </childnode>
        <childnode refid="215950" relation="include">
        </childnode>
      </node>
      <node id="215946">
        <label>RVersion.h</label>
      </node>
      <node id="215929">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="215930" relation="include">
        </childnode>
        <childnode refid="215938" relation="include">
        </childnode>
        <childnode refid="215939" relation="include">
        </childnode>
      </node>
      <node id="215917">
        <label>AthenaBaseComps/AthMsgStreamMacros.h</label>
      </node>
      <node id="216075">
        <label>xAODCaloEvent/versions/CaloClusterContainer_v1.h</label>
        <link refid="d8/dda/CaloClusterContainer__v1_8h_source"/>
        <childnode refid="215986" relation="include">
        </childnode>
        <childnode refid="216064" relation="include">
        </childnode>
        <childnode refid="216068" relation="include">
        </childnode>
      </node>
      <node id="215935">
        <label>cmath</label>
      </node>
      <node id="215985">
        <label>cassert</label>
      </node>
      <node id="215993">
        <label>boost/mpl/if.hpp</label>
      </node>
      <node id="216012">
        <label>boost/static_assert.hpp</label>
      </node>
      <node id="216077">
        <label>xAODMuon/MuonSegment.h</label>
        <link refid="de/d5b/MuonSegment_8h_source"/>
        <childnode refid="216078" relation="include">
        </childnode>
      </node>
      <node id="215983">
        <label>stdexcept</label>
      </node>
      <node id="215910">
        <label>AsgTools/MsgLevel.h</label>
        <link refid="de/d80/MsgLevel_8h"/>
        <childnode refid="215906" relation="include">
        </childnode>
        <childnode refid="215907" relation="include">
        </childnode>
        <childnode refid="215911" relation="include">
        </childnode>
      </node>
      <node id="215972">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="216053">
        <label>Eigen/Core</label>
      </node>
      <node id="215999">
        <label>boost/type_traits/is_pointer.hpp</label>
      </node>
      <node id="216058">
        <label>xAODTracking/VertexContainerFwd.h</label>
        <link refid="d0/dc4/VertexContainerFwd_8h_source"/>
        <childnode refid="215986" relation="include">
        </childnode>
        <childnode refid="216059" relation="include">
        </childnode>
      </node>
      <node id="216063">
        <label>xAODTracking/TrackParticleContainerFwd.h</label>
        <link refid="de/dea/TrackParticleContainerFwd_8h_source"/>
        <childnode refid="215986" relation="include">
        </childnode>
        <childnode refid="216064" relation="include">
        </childnode>
        <childnode refid="216065" relation="include">
        </childnode>
      </node>
      <node id="216007">
        <label>boost/iterator/iterator_adaptor.hpp</label>
      </node>
      <node id="216048">
        <label>TLorentzVector.h</label>
      </node>
      <node id="215907">
        <label>AsgTools/AsgToolsConf.h</label>
        <link refid="df/db7/AsgToolsConf_8h_source"/>
      </node>
      <node id="216069">
        <label>CaloGeoHelpers/CaloSampling.h</label>
        <link refid="d7/d85/CaloSampling_8h_source"/>
        <childnode refid="215906" relation="include">
        </childnode>
        <childnode refid="216070" relation="include">
        </childnode>
      </node>
      <node id="215906">
        <label>string</label>
      </node>
      <node id="215975">
        <label>AthContainers/AuxVectorData.h</label>
        <link refid="d9/df2/AuxVectorData_8h"/>
        <childnode refid="215927" relation="include">
        </childnode>
        <childnode refid="215926" relation="include">
        </childnode>
        <childnode refid="215957" relation="include">
        </childnode>
        <childnode refid="215954" relation="include">
        </childnode>
        <childnode refid="215943" relation="include">
        </childnode>
        <childnode refid="215976" relation="include">
        </childnode>
        <childnode refid="215977" relation="include">
        </childnode>
        <childnode refid="215960" relation="include">
        </childnode>
        <childnode refid="215922" relation="include">
        </childnode>
        <childnode refid="215932" relation="include">
        </childnode>
        <childnode refid="215934" relation="include">
        </childnode>
        <childnode refid="215978" relation="include">
        </childnode>
        <childnode refid="215979" relation="include">
        </childnode>
        <childnode refid="215967" relation="include">
        </childnode>
        <childnode refid="215980" relation="include">
        </childnode>
      </node>
      <node id="215949">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="215928" relation="include">
        </childnode>
        <childnode refid="215950" relation="include">
        </childnode>
      </node>
      <node id="216057">
        <label>versions/TrackParticle_v1.h</label>
        <link refid="d2/d7f/TrackParticle__v1_8h_source"/>
        <childnode refid="216044" relation="include">
        </childnode>
        <childnode refid="215920" relation="include">
        </childnode>
        <childnode refid="216025" relation="include">
        </childnode>
        <childnode refid="215986" relation="include">
        </childnode>
        <childnode refid="216047" relation="include">
        </childnode>
        <childnode refid="216050" relation="include">
        </childnode>
        <childnode refid="216058" relation="include">
        </childnode>
        <childnode refid="216060" relation="include">
        </childnode>
        <childnode refid="216061" relation="include">
        </childnode>
      </node>
      <node id="215978">
        <label>AthContainers/tools/likely.h</label>
        <link refid="d6/dd6/likely_8h"/>
      </node>
      <node id="216081">
        <label>xAODMuon/versions/MuonSegmentContainer_v1.h</label>
        <link refid="dd/dcd/MuonSegmentContainer__v1_8h_source"/>
        <childnode refid="215986" relation="include">
        </childnode>
        <childnode refid="216078" relation="include">
        </childnode>
      </node>
      <node id="216004">
        <label>AthContainers/tools/DVLIterator.h</label>
        <link refid="d3/dc7/DVLIterator_8h_source"/>
        <childnode refid="215987" relation="include">
        </childnode>
        <childnode refid="216002" relation="include">
        </childnode>
        <childnode refid="216005" relation="include">
        </childnode>
        <childnode refid="216007" relation="include">
        </childnode>
        <childnode refid="215992" relation="include">
        </childnode>
        <childnode refid="215933" relation="include">
        </childnode>
        <childnode refid="215934" relation="include">
        </childnode>
      </node>
      <node id="216018">
        <label>SGTools/DataBucket.h</label>
      </node>
      <node id="216045">
        <label>xAODPrimitives/IsolationType.h</label>
        <link refid="d2/d36/IsolationType_8h_source"/>
      </node>
      <node id="216039">
        <label>map</label>
      </node>
      <node id="216019">
        <label>AthContainers/tools/DVLDataBucket.icc</label>
        <link refid="d3/d21/DVLDataBucket_8icc"/>
        <childnode refid="216020" relation="include">
        </childnode>
      </node>
      <node id="216043">
        <label>xAODPrimitives/IsolationCorrection.h</label>
        <link refid="d3/de5/xAODPrimitives_2xAODPrimitives_2IsolationCorrection_8h_source"/>
        <childnode refid="216044" relation="include">
        </childnode>
        <childnode refid="215922" relation="include">
        </childnode>
      </node>
      <node id="216020">
        <label>SGTools/IRegisterTransient.h</label>
      </node>
      <node id="215947">
        <label>RootMetaSelection.h</label>
      </node>
      <node id="215964">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="216009">
        <label>AthContainers/tools/DVL_algorithms.h</label>
        <link refid="d0/d7a/DVL__algorithms_8h"/>
        <childnode refid="216004" relation="include">
        </childnode>
        <childnode refid="215933" relation="include">
        </childnode>
        <childnode refid="215931" relation="include">
        </childnode>
        <childnode refid="216010" relation="include">
        </childnode>
      </node>
      <node id="216038">
        <label>fstream</label>
      </node>
      <node id="215979">
        <label>AthContainers/tools/assume.h</label>
        <link refid="d2/d20/assume_8h"/>
      </node>
      <node id="216078">
        <label>versions/MuonSegment_v1.h</label>
        <link refid="df/d0d/MuonSegment__v1_8h_source"/>
        <childnode refid="215924" relation="include">
        </childnode>
        <childnode refid="216025" relation="include">
        </childnode>
        <childnode refid="216079" relation="include">
        </childnode>
        <childnode refid="216080" relation="include">
        </childnode>
      </node>
      <node id="215961">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="216005">
        <label>AthContainers/tools/ElementProxy.h</label>
        <link refid="db/d26/ElementProxy_8h"/>
        <childnode refid="215987" relation="include">
        </childnode>
        <childnode refid="215945" relation="include">
        </childnode>
        <childnode refid="215938" relation="include">
        </childnode>
        <childnode refid="216006" relation="include">
        </childnode>
      </node>
      <node id="215925">
        <label>AthContainersInterfaces/IAuxElement.h</label>
        <link refid="dd/d7a/IAuxElement_8h"/>
      </node>
      <node id="215911">
        <label>GaudiKernel/IMessageSvc.h</label>
      </node>
      <node id="215945">
        <label>AthLinks/tools/selection_ns.h</label>
        <link refid="d3/dec/selection__ns_8h"/>
        <childnode refid="215946" relation="include">
        </childnode>
        <childnode refid="215947" relation="include">
        </childnode>
      </node>
      <node id="215977">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="215970">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="216079">
        <label>MuonIdHelpers/MuonStationIndex.h</label>
        <link refid="d5/d3f/MuonStationIndex_8h_source"/>
        <childnode refid="215906" relation="include">
        </childnode>
        <childnode refid="215922" relation="include">
        </childnode>
      </node>
      <node id="216065">
        <label>xAODTracking/TrackParticleFwd.h</label>
        <link refid="d1/dc4/TrackParticleFwd_8h_source"/>
      </node>
      <node id="216003">
        <label>limits.h</label>
      </node>
      <node id="216076">
        <label>xAODMuon/MuonSegmentContainer.h</label>
        <link refid="d5/d26/MuonSegmentContainer_8h_source"/>
        <childnode refid="216077" relation="include">
        </childnode>
        <childnode refid="216081" relation="include">
        </childnode>
        <childnode refid="216029" relation="include">
        </childnode>
      </node>
      <node id="215997">
        <label>AthContainers/tools/ClassID.h</label>
        <link refid="de/de2/ClassID_8h"/>
        <childnode refid="215998" relation="include">
        </childnode>
      </node>
      <node id="216042">
        <label>versions/Muon_v1.h</label>
        <link refid="da/dde/Muon__v1_8h_source"/>
        <childnode refid="215924" relation="include">
        </childnode>
        <childnode refid="216025" relation="include">
        </childnode>
        <childnode refid="216043" relation="include">
        </childnode>
        <childnode refid="216045" relation="include">
        </childnode>
        <childnode refid="216046" relation="include">
        </childnode>
        <childnode refid="216047" relation="include">
        </childnode>
        <childnode refid="216050" relation="include">
        </childnode>
        <childnode refid="216055" relation="include">
        </childnode>
        <childnode refid="216066" relation="include">
        </childnode>
        <childnode refid="216076" relation="include">
        </childnode>
        <childnode refid="216044" relation="include">
        </childnode>
        <childnode refid="215920" relation="include">
        </childnode>
        <childnode refid="216029" relation="include">
        </childnode>
        <childnode refid="215986" relation="include">
        </childnode>
      </node>
      <node id="215956">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="215957" relation="include">
        </childnode>
        <childnode refid="215936" relation="include">
        </childnode>
        <childnode refid="215920" relation="include">
        </childnode>
        <childnode refid="215959" relation="include">
        </childnode>
      </node>
      <node id="216087">
        <label>PATInterfaces/SystematicSet.h</label>
        <link refid="d4/db8/SystematicSet_8h_source"/>
        <childnode refid="216086" relation="include">
        </childnode>
        <childnode refid="215921" relation="include">
        </childnode>
        <childnode refid="215922" relation="include">
        </childnode>
        <childnode refid="215906" relation="include">
        </childnode>
        <childnode refid="215939" relation="include">
        </childnode>
        <childnode refid="216084" relation="include">
        </childnode>
        <childnode refid="216085" relation="include">
        </childnode>
      </node>
      <node id="215927">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="215928" relation="include">
        </childnode>
        <childnode refid="215929" relation="include">
        </childnode>
      </node>
      <node id="216026">
        <label>AthLinks/ElementLinkBase.h</label>
        <link refid="d0/d16/ElementLinkBase_8h_source"/>
        <childnode refid="215920" relation="include">
        </childnode>
      </node>
      <node id="216085">
        <label>PATInterfaces/SystematicVariation.h</label>
        <link refid="d1/def/SystematicVariation_8h_source"/>
        <childnode refid="216086" relation="include">
        </childnode>
        <childnode refid="215923" relation="include">
        </childnode>
        <childnode refid="215921" relation="include">
        </childnode>
        <childnode refid="215906" relation="include">
        </childnode>
      </node>
      <node id="216054">
        <label>Eigen/Dense</label>
      </node>
      <node id="215930">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="215931" relation="include">
        </childnode>
        <childnode refid="215932" relation="include">
        </childnode>
        <childnode refid="215933" relation="include">
        </childnode>
        <childnode refid="215928" relation="include">
        </childnode>
        <childnode refid="215934" relation="include">
        </childnode>
        <childnode refid="215935" relation="include">
        </childnode>
        <childnode refid="215936" relation="include">
        </childnode>
        <childnode refid="215906" relation="include">
        </childnode>
        <childnode refid="215937" relation="include">
        </childnode>
      </node>
      <node id="215990">
        <label>AthContainers/tools/ATHCONTAINERS_ASSERT.h</label>
        <link refid="de/d6b/ATHCONTAINERS__ASSERT_8h"/>
        <childnode refid="215985" relation="include">
        </childnode>
      </node>
      <node id="216047">
        <label>xAODBase/IParticle.h</label>
        <link refid="d5/dac/IParticle_8h_source"/>
        <childnode refid="216048" relation="include">
        </childnode>
        <childnode refid="215924" relation="include">
        </childnode>
        <childnode refid="216049" relation="include">
        </childnode>
        <childnode refid="215942" relation="include">
        </childnode>
      </node>
      <node id="216049">
        <label>ObjectType.h</label>
        <link refid="d8/d04/ObjectType_8h_source"/>
        <childnode refid="215923" relation="include">
        </childnode>
      </node>
      <node id="215919">
        <label>xAODEventInfo/versions/EventInfo_v1.h</label>
        <link refid="d4/da0/EventInfo__v1_8h_source"/>
        <childnode refid="215920" relation="include">
        </childnode>
        <childnode refid="215921" relation="include">
        </childnode>
        <childnode refid="215922" relation="include">
        </childnode>
        <childnode refid="215906" relation="include">
        </childnode>
        <childnode refid="215923" relation="include">
        </childnode>
        <childnode refid="215924" relation="include">
        </childnode>
        <childnode refid="215986" relation="include">
        </childnode>
        <childnode refid="216025" relation="include">
        </childnode>
        <childnode refid="216028" relation="include">
        </childnode>
      </node>
      <node id="216068">
        <label>xAODCaloEvent/versions/CaloCluster_v1.h</label>
        <link refid="dc/d4b/CaloCluster__v1_8h_source"/>
        <childnode refid="215920" relation="include">
        </childnode>
        <childnode refid="216044" relation="include">
        </childnode>
        <childnode refid="216047" relation="include">
        </childnode>
        <childnode refid="216069" relation="include">
        </childnode>
        <childnode refid="216071" relation="include">
        </childnode>
        <childnode refid="216025" relation="include">
        </childnode>
        <childnode refid="216073" relation="include">
        </childnode>
        <childnode refid="216074" relation="include">
        </childnode>
      </node>
      <node id="216082">
        <label>PATInterfaces/CorrectionCode.h</label>
        <link refid="d8/dab/CorrectionCode_8h_source"/>
      </node>
      <node id="216040">
        <label>MuonMomentumCorrections/IMuonCalibrationAndSmearingTool.h</label>
        <link refid="db/dc8/IMuonCalibrationAndSmearingTool_8h_source"/>
        <childnode refid="215912" relation="include">
        </childnode>
        <childnode refid="216041" relation="include">
        </childnode>
        <childnode refid="216082" relation="include">
        </childnode>
        <childnode refid="216083" relation="include">
        </childnode>
        <childnode refid="216084" relation="include">
        </childnode>
        <childnode refid="216088" relation="include">
        </childnode>
        <childnode refid="216087" relation="include">
        </childnode>
        <childnode refid="216085" relation="include">
        </childnode>
      </node>
      <node id="216006">
        <label>AthContainers/tools/ElementProxy.icc</label>
        <link refid="d6/d70/ElementProxy_8icc"/>
        <childnode refid="216002" relation="include">
        </childnode>
        <childnode refid="215990" relation="include">
        </childnode>
      </node>
      <node id="215950">
        <label>typeinfo</label>
      </node>
      <node id="216050">
        <label>xAODTracking/TrackingPrimitives.h</label>
        <link refid="d2/d4c/TrackingPrimitives_8h_source"/>
        <childnode refid="216051" relation="include">
        </childnode>
      </node>
      <node id="215984">
        <label>AthContainers/AuxElement.icc</label>
        <link refid="d2/d37/AuxElement_8icc"/>
        <childnode refid="215978" relation="include">
        </childnode>
        <childnode refid="215985" relation="include">
        </childnode>
      </node>
      <node id="216067">
        <label>xAODCaloEvent/CaloCluster.h</label>
        <link refid="db/d88/CaloCluster_8h_source"/>
        <childnode refid="216068" relation="include">
        </childnode>
        <childnode refid="216029" relation="include">
        </childnode>
      </node>
      <node id="215986">
        <label>AthContainers/DataVector.h</label>
        <link refid="d7/dd6/DataVector_8h"/>
        <childnode refid="215981" relation="include">
        </childnode>
        <childnode refid="215987" relation="include">
        </childnode>
        <childnode refid="215988" relation="include">
        </childnode>
        <childnode refid="215989" relation="include">
        </childnode>
        <childnode refid="215995" relation="include">
        </childnode>
        <childnode refid="215996" relation="include">
        </childnode>
        <childnode refid="216002" relation="include">
        </childnode>
        <childnode refid="216004" relation="include">
        </childnode>
        <childnode refid="216008" relation="include">
        </childnode>
        <childnode refid="216009" relation="include">
        </childnode>
        <childnode refid="216005" relation="include">
        </childnode>
        <childnode refid="216011" relation="include">
        </childnode>
        <childnode refid="215945" relation="include">
        </childnode>
        <childnode refid="216012" relation="include">
        </childnode>
        <childnode refid="216013" relation="include">
        </childnode>
        <childnode refid="216007" relation="include">
        </childnode>
        <childnode refid="215922" relation="include">
        </childnode>
        <childnode refid="215950" relation="include">
        </childnode>
        <childnode refid="215939" relation="include">
        </childnode>
        <childnode refid="216014" relation="include">
        </childnode>
        <childnode refid="215931" relation="include">
        </childnode>
        <childnode refid="215983" relation="include">
        </childnode>
        <childnode refid="215933" relation="include">
        </childnode>
        <childnode refid="215942" relation="include">
        </childnode>
        <childnode refid="216015" relation="include">
        </childnode>
        <childnode refid="216017" relation="include">
        </childnode>
        <childnode refid="216021" relation="include">
        </childnode>
        <childnode refid="216022" relation="include">
        </childnode>
      </node>
      <node id="216086">
        <label>PATInterfaces/Global.h</label>
        <link refid="dd/d0c/PATInterfaces_2PATInterfaces_2Global_8h_source"/>
      </node>
      <node id="216044">
        <label>bitset</label>
      </node>
      <node id="215959">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="216027">
        <label>AthLinks/tools/TypeTools.h</label>
        <link refid="dd/db1/TypeTools_8h_source"/>
      </node>
      <node id="215976">
        <label>AthenaKernel/ILockable.h</label>
      </node>
      <node id="215916">
        <label>AsgTools/MsgStreamMacros.h</label>
        <link refid="d3/ded/AsgTools_2AsgTools_2MsgStreamMacros_8h_source"/>
        <childnode refid="215907" relation="include">
        </childnode>
        <childnode refid="215910" relation="include">
        </childnode>
        <childnode refid="215917" relation="include">
        </childnode>
      </node>
      <node id="215944">
        <label>AthLinks/DataLinkBase.h</label>
        <link refid="db/da8/DataLinkBase_8h_source"/>
        <childnode refid="215920" relation="include">
        </childnode>
      </node>
      <node id="215958">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="215963">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="216037">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="215996">
        <label>AthContainers/tools/DVLInfo.h</label>
        <link refid="d3/d2e/DVLInfo_8h"/>
        <childnode refid="215997" relation="include">
        </childnode>
        <childnode refid="215989" relation="include">
        </childnode>
        <childnode refid="215950" relation="include">
        </childnode>
        <childnode refid="215928" relation="include">
        </childnode>
        <childnode refid="215937" relation="include">
        </childnode>
        <childnode refid="215999" relation="include">
        </childnode>
        <childnode refid="215962" relation="include">
        </childnode>
        <childnode refid="216000" relation="include">
        </childnode>
      </node>
      <node id="215940">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="216052">
        <label>unistd.h</label>
      </node>
      <node id="216015">
        <label>AthContainers/ClassName.h</label>
        <link refid="dd/d6b/AthContainers_2AthContainers_2ClassName_8h_source"/>
        <childnode refid="216016" relation="include">
        </childnode>
      </node>
      <node id="215948">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="215927" relation="include">
        </childnode>
        <childnode refid="215949" relation="include">
        </childnode>
        <childnode refid="215951" relation="include">
        </childnode>
        <childnode refid="215952" relation="include">
        </childnode>
        <childnode refid="215965" relation="include">
        </childnode>
        <childnode refid="215967" relation="include">
        </childnode>
        <childnode refid="215928" relation="include">
        </childnode>
        <childnode refid="215950" relation="include">
        </childnode>
        <childnode refid="215922" relation="include">
        </childnode>
        <childnode refid="215973" relation="include">
        </childnode>
        <childnode refid="215974" relation="include">
        </childnode>
      </node>
      <node id="215922">
        <label>vector</label>
      </node>
      <node id="216064">
        <label>xAODBase/IParticleContainer.h</label>
        <link refid="dd/d2d/IParticleContainer_8h_source"/>
        <childnode refid="215986" relation="include">
        </childnode>
        <childnode refid="216047" relation="include">
        </childnode>
        <childnode refid="215940" relation="include">
        </childnode>
      </node>
      <node id="216023">
        <label>AthContainers/tools/CompareAndPrint.h</label>
        <link refid="d5/da8/CompareAndPrint_8h_source"/>
        <childnode refid="215931" relation="include">
        </childnode>
        <childnode refid="215950" relation="include">
        </childnode>
      </node>
      <node id="216088">
        <label>PATInterfaces/SystematicRegistry.h</label>
        <link refid="de/d22/SystematicRegistry_8h_source"/>
        <childnode refid="216086" relation="include">
        </childnode>
        <childnode refid="216087" relation="include">
        </childnode>
      </node>
      <node id="216036">
        <label>TFile.h</label>
      </node>
      <node id="216024">
        <label>AthContainers/tools/DVLEltBaseInfo.icc</label>
        <link refid="dd/d5e/DVLEltBaseInfo_8icc"/>
      </node>
      <node id="216071">
        <label>xAODCaloEvent/CaloClusterBadChannelData.h</label>
        <link refid="d1/d93/CaloClusterBadChannelData_8h_source"/>
        <childnode refid="216072" relation="include">
        </childnode>
      </node>
      <node id="215932">
        <label>utility</label>
      </node>
      <node id="216021">
        <label>SGTools/DataBucketTraitFwd.h</label>
      </node>
      <node id="215960">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="215909">
        <label>sstream</label>
      </node>
      <node id="216066">
        <label>xAODCaloEvent/CaloClusterContainer.h</label>
        <link refid="da/dc3/CaloClusterContainer_8h_source"/>
        <childnode refid="216067" relation="include">
        </childnode>
        <childnode refid="216075" relation="include">
        </childnode>
        <childnode refid="216029" relation="include">
        </childnode>
      </node>
      <node id="216059">
        <label>xAODTracking/VertexFwd.h</label>
        <link refid="d9/ddd/VertexFwd_8h_source"/>
      </node>
      <node id="215994">
        <label>AthContainers/AuxVectorBase.icc</label>
        <link refid="d4/d50/AuxVectorBase_8icc"/>
      </node>
      <node id="215968">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="215953">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="215967">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="215968" relation="include">
        </childnode>
        <childnode refid="215969" relation="include">
        </childnode>
        <childnode refid="215970" relation="include">
        </childnode>
        <childnode refid="215971" relation="include">
        </childnode>
        <childnode refid="215972" relation="include">
        </childnode>
      </node>
      <node id="216070">
        <label>CaloGeoHelpers/CaloSampling.def</label>
      </node>
      <node id="215923">
        <label>iosfwd</label>
      </node>
      <node id="215934">
        <label>cstdlib</label>
      </node>
      <node id="216056">
        <label>xAODTracking/TrackParticle.h</label>
        <link refid="d2/d15/TrackParticle_8h_source"/>
        <childnode refid="216057" relation="include">
        </childnode>
        <childnode refid="216029" relation="include">
        </childnode>
      </node>
      <node id="216014">
        <label>iostream</label>
      </node>
      <node id="215982">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="216062">
        <label>xAODTracking/versions/TrackParticleContainer_v1.h</label>
        <link refid="d7/d3b/TrackParticleContainer__v1_8h_source"/>
        <childnode refid="215920" relation="include">
        </childnode>
        <childnode refid="215986" relation="include">
        </childnode>
        <childnode refid="216057" relation="include">
        </childnode>
        <childnode refid="216063" relation="include">
        </childnode>
      </node>
      <node id="215926">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="215927" relation="include">
        </childnode>
        <childnode refid="215928" relation="include">
        </childnode>
        <childnode refid="215940" relation="include">
        </childnode>
      </node>
      <node id="215928">
        <label>cstddef</label>
      </node>
      <node id="215915">
        <label>GaudiKernel/MsgStream.h</label>
      </node>
      <node id="215908">
        <label>AsgTools/MsgStream.h</label>
        <link refid="d3/d95/AsgTools_2AsgTools_2MsgStream_8h_source"/>
        <childnode refid="215906" relation="include">
        </childnode>
        <childnode refid="215909" relation="include">
        </childnode>
        <childnode refid="215907" relation="include">
        </childnode>
        <childnode refid="215910" relation="include">
        </childnode>
        <childnode refid="215912" relation="include">
        </childnode>
        <childnode refid="215915" relation="include">
        </childnode>
      </node>
      <node id="215980">
        <label>AthContainers/AuxVectorData.icc</label>
        <link refid="da/de7/AuxVectorData_8icc"/>
        <childnode refid="215948" relation="include">
        </childnode>
        <childnode refid="215941" relation="include">
        </childnode>
        <childnode refid="215926" relation="include">
        </childnode>
        <childnode refid="215978" relation="include">
        </childnode>
        <childnode refid="215979" relation="include">
        </childnode>
      </node>
      <node id="215913">
        <label>AsgTools/AsgToolMacros.h</label>
        <link refid="d1/d68/AsgToolMacros_8h_source"/>
      </node>
      <node id="216028">
        <label>xAODCore/BaseInfo.h</label>
        <link refid="d3/d17/BaseInfo_8h_source"/>
        <childnode refid="215942" relation="include">
        </childnode>
      </node>
      <node id="216000">
        <label>AthContainers/tools/DVLInfo.icc</label>
        <link refid="da/d83/DVLInfo_8icc"/>
        <childnode refid="215987" relation="include">
        </childnode>
        <childnode refid="215922" relation="include">
        </childnode>
        <childnode refid="216001" relation="include">
        </childnode>
        <childnode refid="215985" relation="include">
        </childnode>
        <childnode refid="215934" relation="include">
        </childnode>
        <childnode refid="215942" relation="include">
        </childnode>
      </node>
      <node id="215952">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="215949" relation="include">
        </childnode>
        <childnode refid="215953" relation="include">
        </childnode>
        <childnode refid="215954" relation="include">
        </childnode>
        <childnode refid="215955" relation="include">
        </childnode>
        <childnode refid="215960" relation="include">
        </childnode>
        <childnode refid="215950" relation="include">
        </childnode>
        <childnode refid="215922" relation="include">
        </childnode>
        <childnode refid="215931" relation="include">
        </childnode>
        <childnode refid="215920" relation="include">
        </childnode>
        <childnode refid="215962" relation="include">
        </childnode>
        <childnode refid="215963" relation="include">
        </childnode>
        <childnode refid="215964" relation="include">
        </childnode>
      </node>
      <node id="216080">
        <label>TrkSegment/SegmentCollection.h</label>
      </node>
      <node id="216060">
        <label>TrkParameters/TrackParameters.h</label>
      </node>
      <node id="215904">
        <label>PathResolver/PathResolver.h</label>
        <link refid="d3/d32/PathResolver_8h_source"/>
        <childnode refid="215905" relation="include">
        </childnode>
        <childnode refid="215906" relation="include">
        </childnode>
      </node>
      <node id="216034">
        <label>TH3F.h</label>
      </node>
      <node id="215905">
        <label>AsgTools/AsgMessaging.h</label>
        <link refid="d3/d61/AsgMessaging_8h_source"/>
        <childnode refid="215906" relation="include">
        </childnode>
        <childnode refid="215907" relation="include">
        </childnode>
        <childnode refid="215908" relation="include">
        </childnode>
        <childnode refid="215916" relation="include">
        </childnode>
      </node>
      <node id="215962">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="215989">
        <label>AthContainers/AuxVectorBase.h</label>
        <link refid="d7/d18/AuxVectorBase_8h"/>
        <childnode refid="215975" relation="include">
        </childnode>
        <childnode refid="215987" relation="include">
        </childnode>
        <childnode refid="215988" relation="include">
        </childnode>
        <childnode refid="215924" relation="include">
        </childnode>
        <childnode refid="215948" relation="include">
        </childnode>
        <childnode refid="215981" relation="include">
        </childnode>
        <childnode refid="215990" relation="include">
        </childnode>
        <childnode refid="215941" relation="include">
        </childnode>
        <childnode refid="215991" relation="include">
        </childnode>
        <childnode refid="215922" relation="include">
        </childnode>
        <childnode refid="215994" relation="include">
        </childnode>
      </node>
      <node id="216046">
        <label>xAODPrimitives/IsolationFlavour.h</label>
        <link refid="da/d23/IsolationFlavour_8h_source"/>
      </node>
      <node id="215921">
        <label>set</label>
      </node>
      <node id="216029">
        <label>xAODCore/CLASS_DEF.h</label>
        <link refid="d6/d20/xAODCore_2xAODCore_2CLASS__DEF_8h"/>
        <childnode refid="215940" relation="include">
        </childnode>
      </node>
      <node id="215966">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="215955">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="215953" relation="include">
        </childnode>
        <childnode refid="215956" relation="include">
        </childnode>
        <childnode refid="215960" relation="include">
        </childnode>
        <childnode refid="215922" relation="include">
        </childnode>
        <childnode refid="215961" relation="include">
        </childnode>
      </node>
      <node id="215931">
        <label>algorithm</label>
      </node>
      <node id="216073">
        <label>CaloEvent/CaloClusterCellLinkContainer.h</label>
      </node>
      <node id="216011">
        <label>AthContainers/tools/IsMostDerivedFlag.h</label>
        <link refid="d5/dfa/IsMostDerivedFlag_8h"/>
      </node>
      <node id="216061">
        <label>TrkTrack/TrackCollection.h</label>
      </node>
      <node id="215924">
        <label>AthContainers/AuxElement.h</label>
        <link refid="d1/d6f/AuxElement_8h"/>
        <childnode refid="215925" relation="include">
        </childnode>
        <childnode refid="215926" relation="include">
        </childnode>
        <childnode refid="215941" relation="include">
        </childnode>
        <childnode refid="215943" relation="include">
        </childnode>
        <childnode refid="215948" relation="include">
        </childnode>
        <childnode refid="215975" relation="include">
        </childnode>
        <childnode refid="215954" relation="include">
        </childnode>
        <childnode refid="215981" relation="include">
        </childnode>
        <childnode refid="215978" relation="include">
        </childnode>
        <childnode refid="215928" relation="include">
        </childnode>
        <childnode refid="215984" relation="include">
        </childnode>
      </node>
      <node id="216031">
        <label>AsgTools/AsgTool.h</label>
        <link refid="d4/d29/AsgTool_8h_source"/>
        <childnode refid="215907" relation="include">
        </childnode>
        <childnode refid="215912" relation="include">
        </childnode>
        <childnode refid="215910" relation="include">
        </childnode>
        <childnode refid="216032" relation="include">
        </childnode>
      </node>
      <node id="215943">
        <label>AthLinks/DataLink.h</label>
        <link refid="da/de8/DataLink_8h_source"/>
        <childnode refid="215920" relation="include">
        </childnode>
        <childnode refid="215906" relation="include">
        </childnode>
        <childnode refid="215944" relation="include">
        </childnode>
        <childnode refid="215945" relation="include">
        </childnode>
      </node>
      <node id="216008">
        <label>AthContainers/tools/DVL_iter_swap.h</label>
        <link refid="d6/ddb/DVL__iter__swap_8h"/>
        <childnode refid="216004" relation="include">
        </childnode>
        <childnode refid="215990" relation="include">
        </childnode>
        <childnode refid="215933" relation="include">
        </childnode>
      </node>
      <node id="215987">
        <label>AthContainers/OwnershipPolicy.h</label>
        <link refid="d3/da4/OwnershipPolicy_8h_source"/>
      </node>
      <node id="216025">
        <label>AthLinks/ElementLink.h</label>
        <link refid="dc/d24/ElementLink_8h_source"/>
        <childnode refid="215920" relation="include">
        </childnode>
        <childnode refid="215906" relation="include">
        </childnode>
        <childnode refid="216026" relation="include">
        </childnode>
        <childnode refid="215945" relation="include">
        </childnode>
        <childnode refid="216027" relation="include">
        </childnode>
      </node>
      <node id="216032">
        <label>AsgTools/SetProperty.h</label>
        <link refid="df/db0/SetProperty_8h_source"/>
      </node>
      <node id="216033">
        <label>TRandom3.h</label>
      </node>
      <node id="216055">
        <label>xAODTracking/TrackParticleContainer.h</label>
        <link refid="da/d31/TrackParticleContainer_8h_source"/>
        <childnode refid="216056" relation="include">
        </childnode>
        <childnode refid="216062" relation="include">
        </childnode>
        <childnode refid="216029" relation="include">
        </childnode>
      </node>
      <node id="216084">
        <label>PATInterfaces/SystematicCode.h</label>
        <link refid="df/df5/SystematicCode_8h_source"/>
      </node>
      <node id="215998">
        <label>GaudiKernel/ClassID.h</label>
      </node>
      <node id="216013">
        <label>boost/type_traits.hpp</label>
      </node>
      <node id="215938">
        <label>memory</label>
      </node>
      <node id="215965">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="215951" relation="include">
        </childnode>
        <childnode refid="215952" relation="include">
        </childnode>
        <childnode refid="215966" relation="include">
        </childnode>
      </node>
      <node id="215991">
        <label>AthContainersInterfaces/AuxStore_traits.h</label>
        <link refid="dd/d70/AuxStore__traits_8h"/>
        <childnode refid="215925" relation="include">
        </childnode>
        <childnode refid="215941" relation="include">
        </childnode>
        <childnode refid="215926" relation="include">
        </childnode>
        <childnode refid="215962" relation="include">
        </childnode>
        <childnode refid="215992" relation="include">
        </childnode>
        <childnode refid="215993" relation="include">
        </childnode>
        <childnode refid="215906" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="d2/d4c/namespaceCP">CP</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Framework<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;PathResolver/PathResolver.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EDM<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODEventInfo/EventInfo.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Local<sp/>include(s):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;MuonMomentumCorrections/MuonCalibrationAndSmearingTool.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">CP<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal">MuonCalibrationAndSmearingTool::MuonCalibrationAndSmearingTool(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>asg::AsgTool(<sp/>name<sp/>),</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>m_useExternalSeed(false),</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>m_smearDeltaMS(<sp/>0.<sp/>),<sp/>m_smearDeltaID(<sp/>0.<sp/>),<sp/>m_smearDeltaCB(<sp/>0.<sp/>),</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>m_Tsmear(<sp/>0<sp/>),</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//m_Tdet(<sp/>0<sp/>),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>m_Tdata(<sp/>0<sp/>),<sp/>m_Trel(<sp/>0<sp/>),<sp/>m_Talgo(<sp/>0<sp/>),<sp/>m_detRegion(<sp/>0<sp/>),</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>m_useNsigmaForICombine(<sp/>0.<sp/>),</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>m_ptms(<sp/>0.<sp/>),<sp/>m_ptid(<sp/>0.<sp/>),<sp/>m_ptcb(<sp/>0.<sp/>),<sp/>m_eta(<sp/>0.<sp/>),<sp/>m_phi(<sp/>0.<sp/>),<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>m_weightMS(<sp/>0.<sp/>),<sp/>m_weightID(<sp/>0.<sp/>),</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>m_g0(<sp/>0.<sp/>),<sp/>m_g1(<sp/>0.<sp/>),<sp/>m_g2(<sp/>0.<sp/>),<sp/>m_g3(<sp/>0.<sp/>),<sp/>m_g4(<sp/>0.<sp/>),<sp/>m_charge(<sp/>0.<sp/>),</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>m_loadNames(<sp/>false<sp/>),<sp/>m_nb_regions(<sp/>0.<sp/>),<sp/>m_doMacroRegions(<sp/>false<sp/>),<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>m_StatCombPtThreshold(300.00),<sp/><sp/>m_useStatComb(true),<sp/>m_doSagittaCorrection(false),m_SagittaRelease(</highlight><highlight class="stringliteral">&quot;sagittaBiasDataAll&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>m_doSagittaMCDistortion(false){</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>declareProperty(<sp/></highlight><highlight class="stringliteral">&quot;Year&quot;</highlight><highlight class="normal">,<sp/>m_year<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Data16&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>declareProperty(<sp/></highlight><highlight class="stringliteral">&quot;Algo&quot;</highlight><highlight class="normal">,<sp/>m_algo<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;muons&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>declareProperty(<sp/></highlight><highlight class="stringliteral">&quot;SmearingType&quot;</highlight><highlight class="normal">,<sp/>m_type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;q_pT&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>declareProperty(<sp/>&quot;Release&quot;,<sp/>m_release<sp/>=<sp/>&quot;Recs2016_08_07&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>declareProperty(<sp/></highlight><highlight class="stringliteral">&quot;Release&quot;</highlight><highlight class="normal">,<sp/>m_release<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Recs2016_15_07&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>declareProperty(<sp/></highlight><highlight class="stringliteral">&quot;ToroidOff&quot;</highlight><highlight class="normal">,<sp/>m_toroidOff<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>declareProperty(<sp/></highlight><highlight class="stringliteral">&quot;FilesPath&quot;</highlight><highlight class="normal">,<sp/>m_FilesPath<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>declareProperty(<sp/></highlight><highlight class="stringliteral">&quot;StatComb&quot;</highlight><highlight class="normal">,<sp/>m_useStatComb<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//declareProperty(<sp/>&quot;MinCombPt&quot;,<sp/>m_StatCombPtThreshold=300.0);<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>declareProperty(<sp/></highlight><highlight class="stringliteral">&quot;SagittaCorr&quot;</highlight><highlight class="normal">,<sp/>m_doSagittaCorrection<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>declareProperty(</highlight><highlight class="stringliteral">&quot;SagittaRelease&quot;</highlight><highlight class="normal">,<sp/>m_SagittaRelease<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;sagittaBiasDataAll_06_02_17&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>declareProperty(</highlight><highlight class="stringliteral">&quot;doSagittaMCDistortion&quot;</highlight><highlight class="normal">,m_doSagittaMCDistortion=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>m_scaleRegion<sp/>=<sp/>-1;<sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>m_currentParameters<sp/>=<sp/>NULL;<sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>m_useExternalSeed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>m_SagittaIterations.push_back(0);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>m_SagittaIterations.push_back(0);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>m_SagittaIterations.push_back(0);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>m_sagittasCB=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector<sp/>&lt;TProfile2D*&gt;();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>m_sagittasID=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><sp/>std::vector<sp/>&lt;TProfile2D*&gt;();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>m_sagittasME=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector<sp/>&lt;TProfile2D*&gt;();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">MuonCalibrationAndSmearingTool::MuonCalibrationAndSmearingTool(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MuonCalibrationAndSmearingTool&amp;<sp/>tool<sp/>)<sp/>:<sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>asg::AsgTool(<sp/>tool.name()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Copy&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>m_useExternalSeed(<sp/>tool.m_useExternalSeed<sp/>),</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>m_smearDeltaMS(<sp/>tool.m_smearDeltaMS<sp/>),</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>m_smearDeltaID(<sp/>tool.m_smearDeltaID<sp/>),</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>m_smearDeltaCB(<sp/>tool.m_smearDeltaCB<sp/>),</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>m_Tsmear(<sp/>tool.m_Tsmear<sp/>),</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//m_Tdet(<sp/>tool.m_Tdet<sp/>),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>m_Tdata(<sp/>tool.m_Tdata<sp/>),</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>m_Trel(<sp/>tool.m_Trel<sp/>),</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>m_Talgo(<sp/>tool.m_Talgo<sp/>),</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>m_detRegion(<sp/>tool.m_detRegion<sp/>),</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>m_useNsigmaForICombine(<sp/>tool.m_useNsigmaForICombine<sp/>),</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>m_ptms(<sp/>tool.m_ptms<sp/>),</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>m_ptid(<sp/>tool.m_ptid<sp/>),</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>m_ptcb(<sp/>tool.m_ptcb<sp/>),</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>m_eta(<sp/>tool.m_eta<sp/>),</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>m_phi(<sp/>tool.m_phi<sp/>),</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>m_scale_ID(<sp/>tool.m_scale_ID<sp/>),</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>m_enLoss_MS(<sp/>tool.m_enLoss_MS<sp/>),</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>m_scale_MS(<sp/>tool.m_scale_MS<sp/>),</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>m_scale_CB(<sp/>tool.m_scale_CB<sp/>),</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>m_scaleSyst_ID(<sp/>tool.m_scaleSyst_ID<sp/>),</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>m_enLossSyst_MS(<sp/>tool.m_enLossSyst_MS<sp/>),</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>m_scaleSyst_MS(<sp/>tool.m_scaleSyst_MS<sp/>),</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>m_scaleSyst_CB(<sp/>tool.m_scaleSyst_CB<sp/>),</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>m_scaleSystUp_ID(<sp/>tool.m_scaleSystUp_ID<sp/>),</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>m_enLossSystUp_MS(<sp/>tool.m_enLossSystUp_MS<sp/>),</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>m_scaleSystUp_MS(<sp/>tool.m_scaleSystUp_MS<sp/>),</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>m_scaleSystDw_ID(<sp/>tool.m_scaleSystDw_ID<sp/>),</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>m_enLossSystDw_MS(<sp/>tool.m_enLossSystDw_MS<sp/>),</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>m_scaleSystDw_MS(<sp/>tool.m_scaleSystDw_MS<sp/>),</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>m_p1_ID(<sp/>tool.m_p1_ID<sp/>),</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>m_p2_ID(<sp/>tool.m_p2_ID<sp/>),</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>m_p2_ID_TAN(<sp/>tool.m_p2_ID_TAN<sp/>),</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>m_p0_MS(<sp/>tool.m_p0_MS<sp/>),</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>m_p1_MS(<sp/>tool.m_p1_MS<sp/>),</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>m_p2_MS(<sp/>tool.m_p2_MS<sp/>),</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>m_E_p1_ID(<sp/>tool.m_E_p1_ID<sp/>),</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>m_E_p2_ID(<sp/>tool.m_E_p2_ID<sp/>),</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>m_E_p2_ID_TAN(<sp/>tool.m_E_p2_ID_TAN<sp/>),</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>m_E_p0_MS(<sp/>tool.m_E_p0_MS<sp/>),</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>m_E_p1_MS(<sp/>tool.m_E_p1_MS<sp/>),</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>m_E_p2_MS(<sp/>tool.m_E_p2_MS<sp/>),</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>m_S_p1_ID(<sp/>tool.m_S_p1_ID<sp/>),</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>m_S_p2_ID(<sp/>tool.m_S_p2_ID<sp/>),</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>m_S_p2_ID_TAN(<sp/>tool.m_S_p2_ID_TAN<sp/>),</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>m_S_p0_MS(<sp/>tool.m_S_p0_MS<sp/>),</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>m_S_p1_MS(<sp/>tool.m_S_p1_MS<sp/>),</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>m_S_p2_MS(<sp/>tool.m_S_p2_MS<sp/>),</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>m_SUp_p1_ID(<sp/>tool.m_SUp_p1_ID<sp/>),</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>m_SUp_p2_ID(<sp/>tool.m_SUp_p2_ID<sp/>),</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>m_SUp_p2_ID_TAN(<sp/>tool.m_SUp_p2_ID_TAN<sp/>),</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>m_SUp_p0_MS(<sp/>tool.m_SUp_p0_MS<sp/>),</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>m_SUp_p1_MS(<sp/>tool.m_SUp_p1_MS<sp/>),</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>m_SUp_p2_MS(<sp/>tool.m_SUp_p2_MS<sp/>),</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>m_SDw_p1_ID(<sp/>tool.m_SDw_p1_ID<sp/>),</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>m_SDw_p2_ID(<sp/>tool.m_SDw_p2_ID<sp/>),</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>m_SDw_p2_ID_TAN(<sp/>tool.m_SDw_p2_ID_TAN<sp/>),</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>m_SDw_p0_MS(<sp/>tool.m_SDw_p0_MS<sp/>),</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>m_SDw_p1_MS(<sp/>tool.m_SDw_p1_MS<sp/>),</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>m_SDw_p2_MS(<sp/>tool.m_SDw_p2_MS<sp/>),</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>m_MC_p1_ID(<sp/>tool.m_MC_p1_ID<sp/>),</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>m_MC_p2_ID(<sp/>tool.m_MC_p2_ID<sp/>),</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>m_MC_p2_ID_TAN(<sp/>tool.m_MC_p2_ID_TAN<sp/>),</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>m_MC_p0_MS(<sp/>tool.m_MC_p0_MS<sp/>),</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>m_MC_p1_MS(<sp/>tool.m_MC_p1_MS<sp/>),</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>m_MC_p2_MS(<sp/>tool.m_MC_p2_MS<sp/>),</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>m_weightMS(<sp/>tool.m_weightMS<sp/>),</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>m_weightID(<sp/>tool.m_weightID<sp/>),</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>m_g0(<sp/>tool.m_g0<sp/>),</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>m_g1(<sp/>tool.m_g1<sp/>),</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>m_g2(<sp/>tool.m_g2<sp/>),</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>m_g3(<sp/>tool.m_g3<sp/>),</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>m_g4(<sp/>tool.m_g4<sp/>),</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>m_charge(<sp/>tool.m_charge<sp/>),</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>m_names(<sp/>tool.m_names<sp/>),</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>m_loadNames(<sp/>tool.m_loadNames<sp/>),</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>m_nb_regions(<sp/>tool.m_nb_regions<sp/>),</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>m_eta_min(<sp/>tool.m_eta_min<sp/>),</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>m_eta_max(<sp/>tool.m_eta_max<sp/>),</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>m_phi_min(<sp/>tool.m_phi_min<sp/>),</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>m_phi_max(<sp/>tool.m_phi_max<sp/>),</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>m_doMacroRegions(<sp/>tool.m_doMacroRegions<sp/>),</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>m_MacroRegionIdxMap(<sp/>tool.m_MacroRegionIdxMap<sp/>),</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>m_MacroRegionName(<sp/>tool.m_MacroRegionName<sp/>),</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>m_MacroRegionInnerEta(<sp/>tool.m_MacroRegionInnerEta<sp/>),</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>m_scaleRegion(<sp/>tool.m_scaleRegion<sp/>),</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>m_Parameters(<sp/>tool.m_Parameters<sp/>),</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>m_currentParameters(<sp/>NULL),</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>m_StatCombPtThreshold(tool.m_StatCombPtThreshold),</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>m_useStatComb(tool.m_useStatComb),</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>m_doSagittaCorrection(tool.m_doSagittaCorrection),</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>m_GlobalZScales(tool.m_GlobalZScales),</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>m_SagittaIterations(tool.m_SagittaIterations){</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>declareProperty(<sp/></highlight><highlight class="stringliteral">&quot;Year&quot;</highlight><highlight class="normal">,<sp/>m_year<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Data16&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>declareProperty(<sp/></highlight><highlight class="stringliteral">&quot;Algo&quot;</highlight><highlight class="normal">,<sp/>m_algo<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;muons&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>declareProperty(<sp/></highlight><highlight class="stringliteral">&quot;SmearingType&quot;</highlight><highlight class="normal">,<sp/>m_type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;q_pT&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>declareProperty(<sp/></highlight><highlight class="stringliteral">&quot;Release&quot;</highlight><highlight class="normal">,<sp/>m_release<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Recs2016_15_07&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//declareProperty(<sp/>&quot;Release&quot;,<sp/>m_release<sp/>=<sp/>&quot;Recs2016_08_07&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//declareProperty(<sp/>&quot;Release&quot;,<sp/>m_release<sp/>=<sp/>&quot;PreRecs2016_05_23&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>declareProperty(<sp/></highlight><highlight class="stringliteral">&quot;ToroidOff&quot;</highlight><highlight class="normal">,<sp/>m_toroidOff<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>declareProperty(<sp/></highlight><highlight class="stringliteral">&quot;FilesPath&quot;</highlight><highlight class="normal">,<sp/>m_FilesPath<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>MuonCalibrationAndSmearingTool::~MuonCalibrationAndSmearingTool(){</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_sagittasCB!=NULL){</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t<sp/>:<sp/>*m_sagittasCB)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_sagittasCB;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_sagittasID!=NULL){</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t<sp/>:<sp/>*m_sagittasID)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_sagittasID;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_sagittasME!=NULL){</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t<sp/>:<sp/>*m_sagittasME)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_sagittasME;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal">StatusCode<sp/>MuonCalibrationAndSmearingTool::initialize()<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Greet<sp/>the<sp/>user:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>ATH_MSG_INFO(<sp/></highlight><highlight class="stringliteral">&quot;Initialising...&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>SetData(<sp/>m_year<sp/>)<sp/>==<sp/>StatusCode::FAILURE<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>SetAlgorithm(<sp/>m_algo<sp/>)<sp/>==<sp/>StatusCode::FAILURE<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>SetRelease(<sp/>m_release<sp/>)<sp/>==<sp/>StatusCode::FAILURE<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>SetType(<sp/>m_type<sp/>)<sp/>==<sp/>StatusCode::FAILURE<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG(<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>Initialization<sp/>-<sp/>Year:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_year<sp/>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG(<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>Initialization<sp/>-<sp/>Algo:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_algo<sp/>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG(<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>Initialization<sp/>-<sp/>Type:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_type<sp/>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG(<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>Initialization<sp/>-<sp/>Release:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_release<sp/>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>std::string<sp/>regionsPath;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>regionMode<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>simple<sp/>Eta<sp/>Bins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Check<sp/>if<sp/>FilesPath<sp/>defined:<sp/>if<sp/>so<sp/>override<sp/>other<sp/>configurations<sp/>(advanced<sp/>user<sp/>setting,<sp/>for<sp/>debugging<sp/>within<sp/>MCP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_FilesPath<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_Trel<sp/>&lt;=<sp/>MCAST::Release::Rel17<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>regionsPath<sp/>=<sp/>PathResolverFindCalibFile(<sp/></highlight><highlight class="stringliteral">&quot;MuonMomentumCorrections/Regions.dat&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_Trel<sp/>==<sp/>MCAST::Release::Rel17_2_Repro<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>regionsPath<sp/>=<sp/>PathResolverFindCalibFile(<sp/></highlight><highlight class="stringliteral">&quot;MuonMomentumCorrections/RegionsRepro.dat&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_Trel<sp/>==<sp/>MCAST::Release::Rel17_2_Sum13<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>regionsPath<sp/>=<sp/>PathResolverFindCalibFile(<sp/></highlight><highlight class="stringliteral">&quot;MuonMomentumCorrections/RegionsPhi18.dat&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>regionMode<sp/>=<sp/>2;</highlight><highlight class="comment">//MS:<sp/>48Bins<sp/>L/S<sp/>split<sp/>plus<sp/>11_15<sp/>and<sp/>Feet<sp/>in<sp/>the<sp/>BARREL.<sp/>ID<sp/>has<sp/>values<sp/>from<sp/>16<sp/>eta<sp/>bins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_useNsigmaForICombine<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_Trel<sp/>&gt;=<sp/>MCAST::Release::PreRec<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>regionsPath<sp/>=<sp/>PathResolverFindCalibFile(<sp/></highlight><highlight class="stringliteral">&quot;MuonMomentumCorrections/RegionsPhi18.dat&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>regionMode<sp/>=<sp/>1;<sp/></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_useNsigmaForICombine<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>else<sp/>if<sp/>(<sp/>m_Trel<sp/>&gt;=<sp/>MCAST::Release::Recs2016_08_07<sp/>)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//regionsPath<sp/>=<sp/>PathResolverFindCalibFile(<sp/>&quot;MuonMomentumCorrections/RegionsPhi18.dat&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//regionMode<sp/>=<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//m_useNsigmaForICombine<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>release&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>regionsPath<sp/>=<sp/>m_FilesPath<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;RegionsPhi18.dat&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>regionMode<sp/>=<sp/>1;<sp/></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>m_useNsigmaForICombine<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG(<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>Initialization<sp/>-<sp/>Regions<sp/>file:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>regionsPath<sp/>);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="dd/d86/classRegions" kindref="compound">Regions</ref>(<sp/>regionsPath,<sp/>regionMode<sp/>)<sp/>==<sp/>StatusCode::FAILURE<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>FillValues()<sp/>==<sp/>StatusCode::FAILURE<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!applySystematicVariation(<sp/>SystematicSet()<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>run<sp/>with<sp/>no<sp/>systematic&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>SystematicRegistry&amp;<sp/>registry<sp/>=<sp/>SystematicRegistry::getInstance();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>registry.registerSystematics(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>SystematicCode::Ok<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_Tdata<sp/>==<sp/>MCAST::DataType::Data15<sp/>||<sp/><sp/>m_Tdata<sp/>==<sp/>MCAST::DataType::Data16<sp/>){</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>m_StatCombPtThreshold=300.0;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_useStatComb){</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_INFO(</highlight><highlight class="stringliteral">&quot;Using<sp/>statistical<sp/>combination<sp/>abovbe<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;m_StatCombPtThreshold&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>GeV&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_doSagittaCorrection){</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_INFO(</highlight><highlight class="stringliteral">&quot;Will<sp/>be<sp/>correcting<sp/>the<sp/>sagitta<sp/>for<sp/>data<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_Tdata<sp/>==<sp/>MCAST::DataType::Data16<sp/>&amp;&amp;<sp/>(<sp/>m_doSagittaCorrection<sp/>||<sp/>m_doSagittaMCDistortion)<sp/>){</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>m_GlobalZScales.clear();</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>m_GlobalZScales.push_back(90.2893);<sp/><sp/>m_GlobalZScales.push_back(90.4996);<sp/><sp/><sp/><sp/>m_GlobalZScales.push_back(90.1407);<sp/></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//m_doSagittaCorrection=true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//m_useStatComb=true;<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//m_StatCombPtThreshold=300.0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>m_SagittaIterations.clear();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//:::<sp/>First<sp/>batch<sp/>of<sp/>corrections<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_SagittaRelease.compare(</highlight><highlight class="stringliteral">&quot;sagittaBiasDataAll&quot;</highlight><highlight class="normal">)==0){</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_SagittaIterations.push_back(10);<sp/>m_SagittaIterations.push_back(10);<sp/>m_SagittaIterations.push_back(10);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Second<sp/>batch<sp/>of<sp/>corrections<sp/>reduced<sp/>uncertainty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_SagittaRelease.compare(</highlight><highlight class="stringliteral">&quot;sagittaBiasDataAll_06_02_17&quot;</highlight><highlight class="normal">)==0){</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_SagittaIterations.push_back(11);<sp/>m_SagittaIterations.push_back(11);<sp/>m_SagittaIterations.push_back(11);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_INFO(</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>sagitta<sp/>iterations<sp/>set<sp/>to<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_SagittaIterations.push_back(0);<sp/>m_SagittaIterations.push_back(0);<sp/>m_SagittaIterations.push_back(0);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>trackNames;<sp/>trackNames.push_back(</highlight><highlight class="stringliteral">&quot;CB&quot;</highlight><highlight class="normal">);<sp/>trackNames.push_back(</highlight><highlight class="stringliteral">&quot;ID&quot;</highlight><highlight class="normal">);<sp/><sp/>trackNames.push_back(</highlight><highlight class="stringliteral">&quot;ME&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;m_SagittaIterations.size();<sp/>i++){</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;Case<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;i&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>track<sp/>Name<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;trackNames.at(i)&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>iterations<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;m_SagittaIterations.at(i));</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;<sp/>m_SagittaIterations.at(i)<sp/>;<sp/><sp/>j++){</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;Track<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;i&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>file<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>PathResolverFindCalibFile(Form(</highlight><highlight class="stringliteral">&quot;MuonMomentumCorrections/%s/outqDeltamPlots_iter%d/&quot;</highlight><highlight class="normal">,m_SagittaRelease.c_str(),j)<sp/>+<sp/>trackNames.at(i)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_data.root&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MuonCalibrationAndSmearingTool::setSagittaHistogramsSingle(GetHist(<sp/>PathResolverFindCalibFile(Form(</highlight><highlight class="stringliteral">&quot;MuonMomentumCorrections/%s/outqDeltamPlots_iter%d/&quot;</highlight><highlight class="normal">,m_SagittaRelease.c_str(),j)<sp/>+<sp/>trackNames.at(i)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_data.root&quot;</highlight><highlight class="normal">),</highlight><highlight class="stringliteral">&quot;inclusive&quot;</highlight><highlight class="normal">,m_GlobalZScales.at(i)),i);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Return<sp/>gracefully:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MuonCalibrationAndSmearingTool::ConvertToSagittaBias(TH2F<sp/>*h,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mean){</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(h==NULL)return<sp/>;<sp/></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;Will<sp/>normalise<sp/>w.r.t<sp/>the<sp/>scale<sp/>of<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;mean);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>h-&gt;Scale(4/mean*1e3);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>h-&gt;GetZaxis()-&gt;SetTitle(</highlight><highlight class="stringliteral">&quot;#delta#it{s}<sp/>[TeV^{-1}]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>h-&gt;GetZaxis()-&gt;SetRangeUser(-1,+1);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>TProfile2D*<sp/>MuonCalibrationAndSmearingTool::GetHist(std::string<sp/>fname,<sp/>std::string<sp/>hname,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>GlobalScale){</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>fname.size()<sp/>==<sp/>0<sp/>||<sp/>hname.size()==0<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_INFO(</highlight><highlight class="stringliteral">&quot;Opening<sp/>correction<sp/>file<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;fname);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>TFile<sp/>*fmc=TFile::Open(fname.c_str());</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fmc==NULL)<sp/>{<sp/></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;File<sp/>not<sp/>found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>TH3F<sp/>*h3=NULL;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>h3=(TH3F*)fmc-&gt;Get(hname.c_str());</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>h3==NULL<sp/>){<sp/></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(</highlight><highlight class="stringliteral">&quot;NULL<sp/>sagitta<sp/>map&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>h3-&gt;SetDirectory(0);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>TProfile2D<sp/>*hinclusive=(TProfile2D*)h3-&gt;Project3DProfile(</highlight><highlight class="stringliteral">&quot;yx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>hinclusive-&gt;SetDirectory(0);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>hinclusive-&gt;GetXaxis()-&gt;SetTitle(h3-&gt;GetXaxis()-&gt;GetTitle());</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>hinclusive-&gt;GetYaxis()-&gt;SetTitle(h3-&gt;GetYaxis()-&gt;GetTitle());</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>hinclusive-&gt;GetZaxis()-&gt;SetTitle(h3-&gt;GetZaxis()-&gt;GetTitle());</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>ConvertToSagittaBias((TH2F*)hinclusive,GlobalScale);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>h3;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>fmc-&gt;Close();</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hinclusive;</highlight></codeline>
<codeline lineno="355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>may<sp/>cause<sp/>a<sp/>leak<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MuonCalibrationAndSmearingTool::setSagittaHistogramsSingle(TProfile2D<sp/>*pCB,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>track){</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>track<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_sagittasCB-&gt;push_back((TProfile2D*)pCB-&gt;Clone(Form(</highlight><highlight class="stringliteral">&quot;pCB_%d&quot;</highlight><highlight class="normal">,(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)m_sagittasCB-&gt;size())));</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_sagittasCB-&gt;size();<sp/></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>track<sp/>==<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_sagittasID-&gt;push_back((TProfile2D*)pCB-&gt;Clone(Form(</highlight><highlight class="stringliteral">&quot;pID_%d&quot;</highlight><highlight class="normal">,(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)m_sagittasID-&gt;size())));</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_sagittasID-&gt;size();<sp/></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>track<sp/>==<sp/>2<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_sagittasME-&gt;push_back((TProfile2D*)pCB-&gt;Clone(Form(</highlight><highlight class="stringliteral">&quot;pME_%d&quot;</highlight><highlight class="normal">,(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)m_sagittasME-&gt;size())));</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>m_sagittasME-&gt;size();</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>MuonCalibrationAndSmearingTool::sagitta(TProfile2D*<sp/>corrM,<sp/>TLorentzVector<sp/>&amp;lv){</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>corrM<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>;<sp/></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>binEta=corrM-&gt;GetXaxis()-&gt;FindBin(lv.Eta());</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>binPhi=corrM-&gt;GetYaxis()-&gt;FindBin(lv.Phi());</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(std::abs(lv.Eta())<sp/>&gt;2.5)<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;Muon<sp/>eta<sp/>&gt;<sp/>2.5<sp/>sagitta<sp/>bias<sp/>=<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;<sp/></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p2=corrM-&gt;GetBinContent(binEta,binPhi);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_currentParameters-&gt;SagittaBias<sp/>!=<sp/>MCAST::SystVariation::Default){</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_currentParameters-&gt;SagittaBias<sp/>==<sp/>MCAST::SystVariation::Up){</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2=0.5*p2;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_currentParameters-&gt;SagittaBias<sp/>==<sp/>MCAST::SystVariation::Down){</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2=-0.5*p2;<sp/></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p2;<sp/></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>CorrectionCode<sp/>MuonCalibrationAndSmearingTool::CorrectForCharge(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p2,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>pt,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>q,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isMC){</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><sp/>q==0<sp/>)<sp/>{<sp/></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;Muon<sp/>charge<sp/>is<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CorrectionCode::OutOfValidityRange;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>corrPt=pt;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isMC)<sp/></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>corrPt=corrPt/(1<sp/>-q*p2*1e-3*corrPt);<sp/></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>corrPt=<sp/>corrPt/(1+q*p2*1e-3*corrPt);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>pt=corrPt;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CorrectionCode::Ok;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>CorrectionCode<sp/>MuonCalibrationAndSmearingTool::applyiSagittaBiasCorrection(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SgCorrType,<sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1" kindref="compound">xAOD::Muon</ref>&amp;<sp/>mu,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iter,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>stop,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isMC){</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_doSagittaMCDistortion<sp/>&amp;&amp;<sp/>isMC<sp/>&amp;&amp;<sp/>iter<sp/>==<sp/>0)<sp/>stop=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iter<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;Sagitta<sp/>correction<sp/>method<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>SgCorrType<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>iter<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;iter);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>mu.primaryTrackParticleLink()<sp/>).isValid()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt; xAOD::TrackParticleContainer &gt;</ref>&amp;<sp/>cb_track<sp/>=<sp/>mu.primaryTrackParticleLink();</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_ptcb<sp/>=<sp/>(<sp/>!cb_track<sp/>)<sp/>?<sp/>0.<sp/>:<sp/>(<sp/>*cb_track<sp/>)-&gt;pt()<sp/>/<sp/>1000.;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>m_ptcb<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a2524a9b1483ec61cf49d9c54e021d4f3" kindref="member" tooltip="Returns an ElementLink to the InnerDetector TrackParticle used in identification...">inDetTrackParticleLink</ref>()<sp/>).isValid()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt; xAOD::TrackParticleContainer &gt;</ref>&amp;<sp/>id_track<sp/>=<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a2524a9b1483ec61cf49d9c54e021d4f3" kindref="member" tooltip="Returns an ElementLink to the InnerDetector TrackParticle used in identification...">inDetTrackParticleLink</ref>();</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_ptid<sp/>=<sp/>(<sp/>!id_track<sp/>)<sp/>?<sp/>0.<sp/>:<sp/>(<sp/>*id_track<sp/>)-&gt;pt()<sp/>/<sp/>1000.;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>m_ptid<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1ad65c58dd62a33d8126bc6457ef6b0dff" kindref="member" tooltip="Returns an ElementLink to the Extrapolated Muon Spectrometer TrackParticle used in...">extrapolatedMuonSpectrometerTrackParticleLink</ref>()<sp/>).isValid()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt; xAOD::TrackParticleContainer &gt;</ref>&amp;<sp/>ms_track<sp/>=<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1ad65c58dd62a33d8126bc6457ef6b0dff" kindref="member" tooltip="Returns an ElementLink to the Extrapolated Muon Spectrometer TrackParticle used in...">extrapolatedMuonSpectrometerTrackParticleLink</ref>();</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_ptms<sp/>=<sp/>(<sp/>!ms_track<sp/>)<sp/>?<sp/>0.<sp/>:<sp/>(<sp/>*ms_track<sp/>)-&gt;pt()<sp/>/<sp/>1000.;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_ptms<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_ptid==0<sp/>&amp;&amp;<sp/>m_ptms<sp/>==0){</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;ME<sp/>and<sp/>ID<sp/>momenta<sp/>==<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CorrectionCode::OutOfValidityRange;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>m_eta<sp/>=<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a9e1ec26e1cfde09690d8305e80877157" kindref="member" tooltip="The pseudorapidity () of the particle.">eta</ref>();</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>m_phi<sp/>=<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a10606744f788b78c1af47391bf7744d6" kindref="member" tooltip="The azimuthal angle () of the particle.">phi</ref>();</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;iter<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;iter&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Muon<sp/>info<sp/>pt<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;m_ptcb&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>id<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;m_ptid&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>ms<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;m_ptms&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>eta<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;m_eta&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>phi<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;m_phi);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>TLorentzVector<sp/>lvCB;<sp/>lvCB.SetPtEtaPhiM(m_ptcb,m_eta,m_phi,mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a5fd8cf4dc89cdaa87fa4564bb327ad48" kindref="member" tooltip="The invariant mass of the particle..">m</ref>()/1e3);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>TLorentzVector<sp/>lvID;<sp/>lvID.SetPtEtaPhiM(m_ptid,m_eta,m_phi,mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a5fd8cf4dc89cdaa87fa4564bb327ad48" kindref="member" tooltip="The invariant mass of the particle..">m</ref>()/1e3);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>TLorentzVector<sp/>lvME;<sp/>lvME.SetPtEtaPhiM(m_ptms,m_eta,m_phi,mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a5fd8cf4dc89cdaa87fa4564bb327ad48" kindref="member" tooltip="The invariant mass of the particle..">m</ref>()/1e3);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>q=m_charge;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>q==0<sp/>){</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;Charge<sp/>==<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CorrectionCode::OutOfValidityRange;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(SgCorrType==MCAST::SagittaCorType::CB)<sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_ptcb<sp/>==<sp/>0<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CorrectionCode::Ok;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>iter<sp/>&gt;=<sp/><sp/>m_sagittasCB-&gt;size())<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CorrectionCode::Ok;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CorrectionCode<sp/>corr=CorrectForCharge(<sp/>sagitta(m_sagittasCB-&gt;at(iter),lvCB)*0.5,<sp/>m_ptcb,<sp/>q,<sp/>isMC);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(corr<sp/>!=<sp/>CorrectionCode::Ok)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>corr;<sp/></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iter++;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!stop)<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>applyiSagittaBiasCorrection(MCAST::SagittaCorType::CB,mu,iter,stop,isMC);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(SgCorrType<sp/>==<sp/>MCAST::SagittaCorType::ID){</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_ptid<sp/>==<sp/>0<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CorrectionCode::Ok;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>iter<sp/>&gt;=<sp/>m_sagittasID-&gt;size())<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CorrectionCode::Ok;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CorrectionCode<sp/>corr=CorrectForCharge(<sp/><sp/>sagitta(m_sagittasID-&gt;at(iter),lvID)*0.5<sp/>,<sp/>m_ptid,<sp/>q,<sp/>isMC);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(corr<sp/>!=<sp/>CorrectionCode::Ok)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>corr;<sp/></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iter++;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!stop)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>applyiSagittaBiasCorrection(MCAST::SagittaCorType::ID,mu,iter,stop,isMC);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(SgCorrType<sp/>==<sp/>MCAST::SagittaCorType::ME){</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_ptms<sp/>==<sp/>0<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CorrectionCode::Ok;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>iter<sp/>&gt;=<sp/><sp/>m_sagittasME-&gt;size()<sp/>)<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CorrectionCode::Ok;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CorrectionCode<sp/>corr=CorrectForCharge(sagitta(m_sagittasME-&gt;at(iter),lvME)<sp/>*0.5<sp/>,<sp/>m_ptms,<sp/>q,<sp/>isMC);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(corr<sp/>!=<sp/>CorrectionCode::Ok)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>corr;<sp/></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iter++;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!stop)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>applyiSagittaBiasCorrection(MCAST::SagittaCorType::ME,mu,iter,stop,isMC);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>SgCorrType<sp/>==<sp/>MCAST::SagittaCorType::WEIGHTS){</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref>*<sp/>ID_track<sp/><sp/>=<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1abcdc246b3fdb40008c18e5a797c132af" kindref="member" tooltip="Returns a pointer (which can be NULL) to the TrackParticle used in identification...">trackParticle</ref>(<sp/>xAOD::Muon::InnerDetectorTrackParticle<sp/>);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref>*<sp/>ME_track<sp/>=<sp/><sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1abcdc246b3fdb40008c18e5a797c132af" kindref="member" tooltip="Returns a pointer (which can be NULL) to the TrackParticle used in identification...">trackParticle</ref>(<sp/>xAOD::Muon::ExtrapolatedMuonSpectrometerTrackParticle<sp/>);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>CBqOverPE<sp/>=<sp/>1e10;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ID_track<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>ME_track<sp/>!=<sp/>NULL<sp/>)<sp/></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CBqOverPE=pow(sqrt(<sp/>ID_track-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a6216520cb9c2f1c3dfc3996221006ba1" kindref="member" tooltip="Returns the 5x5 symmetric matrix containing the defining parameters covariance matrix...">definingParametersCovMatrix</ref>()(<sp/>4,<sp/>4<sp/>)<sp/>+<sp/>ME_track-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a6216520cb9c2f1c3dfc3996221006ba1" kindref="member" tooltip="Returns the 5x5 symmetric matrix containing the defining parameters covariance matrix...">definingParametersCovMatrix</ref>()(<sp/>4,<sp/>4<sp/>))/1e3,2);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>IDqOverPE<sp/>=<sp/><sp/>1e10;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ID_track!=NULL)</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IDqOverPE=pow(<sp/>ID_track-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a6216520cb9c2f1c3dfc3996221006ba1" kindref="member" tooltip="Returns the 5x5 symmetric matrix containing the defining parameters covariance matrix...">definingParametersCovMatrix</ref>()(<sp/>4,<sp/>4<sp/>)/1e3,2);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MEqOverPE<sp/>=<sp/>1e10;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ME_track!=NULL)</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MEqOverPE<sp/>=<sp/>pow(<sp/>ME_track-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a6216520cb9c2f1c3dfc3996221006ba1" kindref="member" tooltip="Returns the 5x5 symmetric matrix containing the defining parameters covariance matrix...">definingParametersCovMatrix</ref>()(<sp/>4,<sp/>4<sp/>)/1e3,2);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CalcCBWeights(<sp/>mu<sp/>);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//double<sp/>m_f<sp/>=<sp/>((1/m_ptcb<sp/><sp/>-<sp/>1/m_ptms)<sp/>/<sp/>(<sp/>1/m_ptid<sp/>-<sp/>1/m_ptms))<sp/>;<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//double<sp/>m_f2<sp/>=<sp/>((<sp/>(1/m_ptcb)<sp/><sp/>-<sp/>(1/m_ptms)*1/MEqOverPE<sp/>)<sp/>/<sp/>(<sp/>(1/m_ptid)*1/IDqOverPE<sp/>-<sp/>(1/m_ptms)*1/MEqOverPE));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ptTilde<sp/>=<sp/>(1/IDqOverPE*m_ptid<sp/>+<sp/>1/MEqOverPE*m_ptms)/(1/IDqOverPE+1/MEqOverPE);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//double<sp/>deltaTilde<sp/><sp/>=(m_ptcb-ptTilde)/m_ptcb;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pTilde<sp/>=<sp/>((1/IDqOverPE)*(1/m_ptid)<sp/>+<sp/>(1/MEqOverPE)*(1/m_ptms))/(1/IDqOverPE+1/MEqOverPE);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>deltaPTilde<sp/><sp/>=(1/m_ptcb-pTilde)/(1/m_ptcb);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>deltaID=fabs((1/m_ptid-1/m_ptcb)/(1/m_ptcb));</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>deltaMS=fabs((1/m_ptms-1/m_ptcb)/(1/m_ptcb));</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(deltaID<sp/>==<sp/>0<sp/>)<sp/>deltaID=1e-6;<sp/></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(deltaMS<sp/>==<sp/>0<sp/>)<sp/>deltaMS=1e-6;<sp/></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dump=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iter==0){</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;eta<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;m_eta&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>phi<sp/><sp/>&quot;</highlight><highlight class="normal">&lt;&lt;m_phi);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;<sp/>ptCB:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;m_ptcb&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>--&gt;<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;ptTilde&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>diff<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>(m_ptcb-ptTilde)*100/m_ptcb&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>%&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;<sp/>1/pT:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;1/m_ptcb&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>--&gt;<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;pTilde&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>diff<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>deltaPTilde<sp/>*100<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>%&quot;</highlight><highlight class="normal">&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;1/pttilde<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>1/ptTilde);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;<sp/>deltaID<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;(m_ptid-m_ptcb)*100/m_ptcb&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>%<sp/>delta<sp/>MS<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;(m_ptms-m_ptcb)*100/m_ptcb&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>%<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;<sp/>sigma(q/p)<sp/>CB<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;CBqOverPE*100&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;IDqOverPE*100&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>ME<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;MEqOverPE*100);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//double<sp/>rho=<sp/>(1/m_ptid<sp/>-<sp/>1/m_ptms)<sp/>/<sp/><sp/>(1/m_ptid<sp/>+<sp/>1/m_ptms)<sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>iter<sp/>==<sp/><sp/>m_sagittasCB-&gt;size()<sp/>)<sp/>{<sp/></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dump)</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;--&gt;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_ptcb);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CorrectionCode::Ok;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sagittaID=iter<sp/>&gt;=<sp/>m_sagittasID-&gt;size()<sp/>?<sp/>0<sp/>:<sp/>sagitta(m_sagittasID-&gt;at(iter),lvID);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sagittaME=iter<sp/>&gt;=<sp/>m_sagittasME-&gt;size()<sp/>?<sp/>0<sp/>:<sp/>sagitta(m_sagittasME-&gt;at(iter),lvME);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//float<sp/>sagittaCB=iter<sp/>&gt;=<sp/>m_sagittasCB-&gt;size()<sp/>?<sp/>0<sp/>:<sp/>sagitta(m_sagittasCB-&gt;at(iter),lvCB);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tmpPtID<sp/>=<sp/>lvID.Pt();<sp/><sp/><sp/></highlight><highlight class="comment">//m_ptid;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tmpPtMS<sp/>=<sp/>lvME.Pt();<sp/><sp/><sp/></highlight><highlight class="comment">//m_ptms;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//double<sp/>tmpPtCB<sp/>=<sp/>lvCB.Pt();<sp/><sp/><sp/>//m_ptcb;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tmpDeltaID=0;<sp/></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tmpDeltaMS=0;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>CorrectionCode<sp/>idOK=applyiSagittaBiasCorrection(MCAST::SagittaCorType::ID,mu,iter,</highlight><highlight class="keyword">true</highlight><highlight class="normal">,isMC);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>TLorentzVector<sp/>lvIDCorr;<sp/>lvIDCorr.SetPtEtaPhiM(m_ptid,m_eta,m_phi,mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a5fd8cf4dc89cdaa87fa4564bb327ad48" kindref="member" tooltip="The invariant mass of the particle..">m</ref>()/1e3);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(idOK<sp/>==<sp/>CorrectionCode::Ok<sp/>&amp;&amp;<sp/>tmpPtID!=0<sp/>)<sp/>tmpDeltaID<sp/>=<sp/>(<sp/>-tmpPtID<sp/>+lvIDCorr.Pt()<sp/>)/<sp/>tmpPtID<sp/><sp/>;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>tmpDeltaID=0;<sp/></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Shift<sp/>ID<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;tmpDeltaID<sp/>);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>CorrectionCode<sp/>meOK=applyiSagittaBiasCorrection(MCAST::SagittaCorType::ME,mu,iter,</highlight><highlight class="keyword">true</highlight><highlight class="normal">,isMC);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>TLorentzVector<sp/>lvMECorr;<sp/><sp/>lvMECorr.SetPtEtaPhiM(m_ptms,m_eta,m_phi,mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a5fd8cf4dc89cdaa87fa4564bb327ad48" kindref="member" tooltip="The invariant mass of the particle..">m</ref>()/1e3);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(meOK<sp/>==<sp/>CorrectionCode::Ok<sp/>&amp;&amp;<sp/>tmpPtMS!=0<sp/>)<sp/>tmpDeltaMS<sp/>=<sp/>(<sp/>-tmpPtMS<sp/>+<sp/>lvMECorr.Pt()/1e3<sp/>)<sp/>/tmpPtMS<sp/><sp/>;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>tmpDeltaMS=0;<sp/><sp/></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Shift<sp/>MS<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;tmpDeltaMS<sp/>);<sp/></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//float<sp/>pTCB=lvCB.Pt();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//double<sp/>CBsagitta<sp/>=<sp/>m_weightID<sp/>*<sp/>sagittaID<sp/>+<sp/>m_weightMS<sp/>*<sp/><sp/>sagittaME;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//double<sp/>CBsagitta2<sp/>=<sp/>(1/pTCB<sp/>+<sp/>m_f*(<sp/>sagittaID<sp/>-<sp/>sagittaME)<sp/>+<sp/>sagittaME);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>CBsagitta3<sp/>=<sp/>(1/(IDqOverPE*deltaID)<sp/>*<sp/>sagittaID<sp/><sp/></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>1/(MEqOverPE*deltaMS)<sp/>*<sp/>sagittaME)/(1/(IDqOverPE*deltaID)+1/(MEqOverPE*deltaMS));</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>CorrectionCode<sp/>corr=CorrectForCharge(CBsagitta3,<sp/>m_ptcb,q,isMC);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(corr<sp/>!=<sp/>CorrectionCode::Ok)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>corr;<sp/></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="577"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>if(dump){</highlight></codeline>
<codeline lineno="578"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;&quot;-&quot;;</highlight></codeline>
<codeline lineno="579"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>for(<sp/>unsigned<sp/>int<sp/>i=0;<sp/>i&lt;iter;<sp/>i++)</highlight></codeline>
<codeline lineno="580"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;&quot;-&quot;;</highlight></codeline>
<codeline lineno="581"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;&quot;&gt;<sp/>&quot;&lt;&lt;m_ptcb&lt;&lt;&quot;<sp/>--&gt;<sp/>&quot;&lt;&lt;pTCB&lt;&lt;&quot;<sp/>&quot;&lt;&lt;pTCB/m_ptcb<sp/>&lt;&lt;&quot;(CB)<sp/>&quot;&lt;&lt;<sp/>(lvIDCorr.Pt())/m_ptid<sp/>&lt;&lt;&quot;<sp/>(ID)<sp/>&quot;&lt;&lt;<sp/>(lvMECorr.Pt())/m_ptms<sp/>&lt;&lt;&quot;<sp/>(ME)<sp/>w:<sp/>&quot;&lt;&lt;m_weightID&lt;&lt;&quot;<sp/>(ID)<sp/>&quot;&lt;&lt;m_weightMS&lt;&lt;&quot;(MS)<sp/>Delta<sp/>CB<sp/>&quot;&lt;&lt;sagittaCB&lt;&lt;&quot;<sp/>&quot;</highlight></codeline>
<codeline lineno="582"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;&quot;<sp/>SG1<sp/>&quot;&lt;&lt;<sp/>CBsagitta&lt;&lt;<sp/>&quot;<sp/>SG2<sp/>&quot;&lt;&lt;<sp/>CBsagitta2&lt;&lt;&quot;<sp/>SG4<sp/>&quot;&lt;&lt;CBsagitta3&lt;&lt;<sp/>&quot;<sp/>ID<sp/>&quot;&lt;&lt;<sp/>sagittaID&lt;&lt;<sp/>&quot;<sp/>ME<sp/>&quot;&lt;&lt;sagittaME</highlight></codeline>
<codeline lineno="583"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;&quot;<sp/>f<sp/>&quot;<sp/>&lt;&lt;m_f<sp/>&lt;&lt;<sp/>&quot;<sp/>f3<sp/>&quot;&lt;&lt;m_f2&lt;&lt;&quot;<sp/>rho<sp/>&quot;&lt;&lt;rho&lt;&lt;&quot;<sp/>q<sp/>&quot;&lt;&lt;<sp/>q<sp/>&lt;&lt;&quot;<sp/>iter<sp/>&quot;&lt;&lt;<sp/>iter<sp/>&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="584"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="585"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>iter++;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>applyiSagittaBiasCorrection(MCAST::SagittaCorType::WEIGHTS,mu,iter,stop,isMC);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CorrectionCode::Ok;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>CorrectionCode<sp/>MuonCalibrationAndSmearingTool::applySagittaBiasCorrectionAuto(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DetType,<sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1" kindref="compound">xAOD::Muon</ref>&amp;<sp/>mu,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isMC,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SytCase){</highlight><highlight class="comment">//isSystematics<sp/>==false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>itersCB=0;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(SytCase<sp/>==<sp/>MCAST::SagittaSysType::BIAS<sp/>&amp;&amp;<sp/>m_SagittaIterations.at(0)<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itersCB=<sp/>m_SagittaIterations.at(0)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>itersID=0;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(SytCase<sp/>==<sp/>MCAST::SagittaSysType::BIAS<sp/>&amp;&amp;<sp/>m_SagittaIterations.at(1)<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itersID=<sp/>m_SagittaIterations.at(1)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>itersME=0;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(SytCase<sp/>==<sp/>MCAST::SagittaSysType::BIAS<sp/>&amp;&amp;<sp/>m_SagittaIterations.at(2)<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itersME=<sp/>m_SagittaIterations.at(2)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//:::<sp/>In<sp/>case<sp/>one<sp/>distrots<sp/>the<sp/>MC<sp/>iterations<sp/>are<sp/>set<sp/>to<sp/>1.<sp/>Systamtics<sp/>willl<sp/>be<sp/>calculated<sp/>based<sp/>on<sp/>the<sp/>full<sp/>effect.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_doSagittaMCDistortion<sp/>&amp;&amp;<sp/>isMC){<sp/></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itersCB<sp/>=0;<sp/>itersID<sp/>=0;<sp/><sp/>itersME=0;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;Requested<sp/>iteraions<sp/><sp/>&quot;&lt;&lt;<sp/>m_SagittaIterations.at(0)&lt;&lt;&quot;<sp/>size<sp/>of<sp/>container<sp/>&quot;&lt;&lt;m_sagittasCB-&gt;size()&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Correct<sp/>the<sp/>ID<sp/>momentum;<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(DetType<sp/>==<sp/>MCAST::DetectorType::ID)</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>applyiSagittaBiasCorrection(MCAST::SagittaCorType::ID,mu,isMC,itersID);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Correct<sp/>the<sp/>ME<sp/>momentum;<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(DetType<sp/>==<sp/>MCAST::DetectorType::MS)</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>applyiSagittaBiasCorrection(MCAST::SagittaCorType::ME,mu,isMC,itersME);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Correct<sp/>the<sp/>CB<sp/>momentum;<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(DetType<sp/>==<sp/>MCAST::DetectorType::CB){</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_ptcb<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;Combined<sp/>pt<sp/>=<sp/>0<sp/>correcting<sp/>separtly<sp/>ID<sp/>and<sp/>ME&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CorrectionCode<sp/>idOk;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CorrectionCode<sp/>msOk;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_ptid<sp/>!=0)</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idOk=applySagittaBiasCorrectionAuto(MCAST::DetectorType::ID,mu,isMC,SytCase);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_ptms<sp/>!=0<sp/>)</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msOk=applySagittaBiasCorrectionAuto(MCAST::DetectorType::MS,mu,isMC,SytCase);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>idOk<sp/>!=<sp/>CorrectionCode::Ok<sp/>&amp;&amp;<sp/>msOk<sp/>!=<sp/>CorrectionCode::<sp/>Ok<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CorrectionCode::Error;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db/d8a/classCP_1_1CorrectionCode_1a0a040c70626c77bad65a0fbf757d7b83aea8e3d31915633d7faef8f6a6c0bbd9f" kindref="member" tooltip="The correction was done successfully.">CP::CorrectionCode::Ok</ref>;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>central=<sp/>45.2;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>width=15.5;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isSystematic<sp/>=<sp/>SytCase<sp/>==<sp/>MCAST::SagittaSysType::RHO;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isSystematic)<sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigmaID<sp/>=<sp/>ExpectedResolution(<sp/>MCAST::DetectorType::ID,<sp/>mu,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>)<sp/>*<sp/>m_ptcb;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigmaMS<sp/>=<sp/>ExpectedResolution(<sp/>MCAST::DetectorType::MS,<sp/>mu,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>)<sp/>*<sp/>m_ptcb;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>denominator<sp/>=<sp/>(<sp/><sp/>m_ptcb<sp/><sp/>)<sp/>*<sp/>sqrt(<sp/>sigmaID*sigmaID<sp/>+<sp/>sigmaMS*sigmaMS<sp/>);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>res=<sp/>denominator<sp/>?<sp/>sqrt(<sp/>2.<sp/>)<sp/>*<sp/>sigmaID<sp/>*<sp/>sigmaMS<sp/>/<sp/>denominator<sp/>:<sp/>0.;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_currentParameters-&gt;SagittaRho==MCAST::SystVariation::Up){</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>central=central<sp/>+<sp/>std::fabs(0.5<sp/>*<sp/>res<sp/><sp/>*<sp/>central);<sp/></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_currentParameters-&gt;SagittaRho==MCAST::SystVariation::Down){</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>central=central<sp/>-<sp/>std::fabs(0.5<sp/>*<sp/>res<sp/><sp/>*<sp/>central);<sp/></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigmas=(fabs(m_ptcb<sp/>-<sp/>central)/width);<sp/></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rho=<sp/>1/sigmas;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sigmas<sp/>&lt;<sp/><sp/>1<sp/>)<sp/>rho=1;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//:::<sp/>For<sp/>standalone<sp/>muons<sp/>and<sp/>Silicon<sp/>associated<sp/>fowrad<sp/>do<sp/>not<sp/>use<sp/>the<sp/>combined<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_ptid<sp/>==0<sp/>||<sp/>m_ptms<sp/>==0){<sp/></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;Applying<sp/>sagitta<sp/>correction<sp/>for<sp/>Standalone&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rho=0;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_ptid<sp/>==<sp/>0<sp/><sp/>&amp;&amp;<sp/>m_ptms<sp/>!=<sp/>0<sp/>)<sp/><sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(applyiSagittaBiasCorrection(MCAST::SagittaCorType::ME,mu,isMC,itersME)!=CorrectionCode::Ok){</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db/d8a/classCP_1_1CorrectionCode_1a0a040c70626c77bad65a0fbf757d7b83a9faf702fadfcc1135b182dd78ec9d718" kindref="member" tooltip="Some error happened during the object correction.">CP::CorrectionCode::Error</ref>;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_ptcb=m_ptms;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_ptid<sp/>!=<sp/>0<sp/><sp/>&amp;&amp;<sp/>m_ptms<sp/>==<sp/>0<sp/>)<sp/><sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(applyiSagittaBiasCorrection(MCAST::SagittaCorType::ID,mu,isMC,itersID)!=CorrectionCode::Ok){</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db/d8a/classCP_1_1CorrectionCode_1a0a040c70626c77bad65a0fbf757d7b83a9faf702fadfcc1135b182dd78ec9d718" kindref="member" tooltip="Some error happened during the object correction.">CP::CorrectionCode::Error</ref>;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_ptcb=m_ptid;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(</highlight><highlight class="stringliteral">&quot;All<sp/>momenta<sp/>are<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d8a/classCP_1_1CorrectionCode_1a0a040c70626c77bad65a0fbf757d7b83aa38a4fce39a52cf6f99b407b8db24d45" kindref="member" tooltip="Input object is out of validity range.">CP::CorrectionCode::OutOfValidityRange</ref>;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;Final<sp/>pt<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;m_ptcb);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db/d8a/classCP_1_1CorrectionCode_1a0a040c70626c77bad65a0fbf757d7b83aea8e3d31915633d7faef8f6a6c0bbd9f" kindref="member" tooltip="The correction was done successfully.">CP::CorrectionCode::Ok</ref>;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ptCB=m_ptcb;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ptWeight=m_ptcb;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;Applying<sp/>CB<sp/>sagitta<sp/>correction&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(applyiSagittaBiasCorrection(MCAST::SagittaCorType::CB,mu,isMC,itersCB)!=<ref refid="db/d8a/classCP_1_1CorrectionCode_1a0a040c70626c77bad65a0fbf757d7b83aea8e3d31915633d7faef8f6a6c0bbd9f" kindref="member" tooltip="The correction was done successfully.">CP::CorrectionCode::Ok</ref>){</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db/d8a/classCP_1_1CorrectionCode_1a0a040c70626c77bad65a0fbf757d7b83a9faf702fadfcc1135b182dd78ec9d718" kindref="member" tooltip="Some error happened during the object correction.">CP::CorrectionCode::Error</ref>;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptCB<sp/>=<sp/>m_ptcb;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;Applying<sp/>Weighted<sp/>sagitta<sp/>correction&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(applyiSagittaBiasCorrection(MCAST::SagittaCorType::WEIGHTS,mu,isMC,itersCB)!=<ref refid="db/d8a/classCP_1_1CorrectionCode_1a0a040c70626c77bad65a0fbf757d7b83aea8e3d31915633d7faef8f6a6c0bbd9f" kindref="member" tooltip="The correction was done successfully.">CP::CorrectionCode::Ok</ref>){</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db/d8a/classCP_1_1CorrectionCode_1a0a040c70626c77bad65a0fbf757d7b83a9faf702fadfcc1135b182dd78ec9d718" kindref="member" tooltip="Some error happened during the object correction.">CP::CorrectionCode::Error</ref>;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptWeight<sp/>=<sp/><sp/>m_ptcb;<sp/></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_ptcb<sp/>=<sp/>rho*ptCB<sp/>+<sp/>(1-rho)*ptWeight;<sp/></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(</highlight><highlight class="stringliteral">&quot;Final<sp/>pt<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;m_ptcb&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;rho&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>*<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;ptCB&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>1-<sp/>rho<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;1-rho&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/><sp/>*<sp/><sp/>&quot;</highlight><highlight class="normal">&lt;&lt;ptWeight&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>sigmas<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;sigmas);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CorrectionCode::Ok;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CorrectionCode::Ok;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal">CorrectionCode<sp/>MuonCalibrationAndSmearingTool::applyCorrection(<sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1" kindref="compound">xAOD::Muon</ref>&amp;<sp/>mu<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Muon<sp/>Type<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1ada4059382e0f2ad3f6c3ed3293165275" kindref="member" tooltip="Generic accessor to type information.">muonType</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(<sp/>0:<sp/>Combined,<sp/>1:<sp/>StandAlone,<sp/>2:<sp/>SegmentTagged,<sp/>3:<sp/>CaloTagged<sp/>)&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Muon<sp/>Author<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1ae510b9f46068aa223d2c8505085cf82b" kindref="member" tooltip="Returns the primary author of this Muon.">author</ref>()<sp/>);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Set<sp/>pt<sp/>ID:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Retrieving<sp/>ElementLink<sp/>to<sp/>ID<sp/>TrackParticle...&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Setting<sp/>Pt<sp/><sp/>[ID]:<sp/>if<sp/>no<sp/>track<sp/>available,<sp/>set<sp/>to<sp/>0...&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;mu.isAvailable&lt;<sp/>ElementLink&lt;<sp/>xAOD::TrackParticleContainer<sp/>&gt;<sp/>&gt;(<sp/>\&quot;inDetTrackParticleLink\&quot;<sp/>)<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mu.<ref refid="d5/d4c/classxAOD_1_1IParticle_1a73d35d149fce4bcc1ce55da0faf8e0d5" kindref="member">isAvailable</ref>&lt;<sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt; xAOD::TrackParticleContainer &gt;</ref><sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;inDetTrackParticleLink&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;(<sp/>mu.inDetTrackParticleLink()<sp/>==<sp/>NULL<sp/>)<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a2524a9b1483ec61cf49d9c54e021d4f3" kindref="member" tooltip="Returns an ElementLink to the InnerDetector TrackParticle used in identification...">inDetTrackParticleLink</ref>()<sp/>==<sp/>NULL<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;mu.inDetTrackParticleLink()<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a2524a9b1483ec61cf49d9c54e021d4f3" kindref="member" tooltip="Returns an ElementLink to the InnerDetector TrackParticle used in identification...">inDetTrackParticleLink</ref>()<sp/>);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;(<sp/>mu.inDetTrackParticleLink()<sp/>).isValid()<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a2524a9b1483ec61cf49d9c54e021d4f3" kindref="member" tooltip="Returns an ElementLink to the InnerDetector TrackParticle used in identification...">inDetTrackParticleLink</ref>()<sp/>).isValid()<sp/>);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a2524a9b1483ec61cf49d9c54e021d4f3" kindref="member" tooltip="Returns an ElementLink to the InnerDetector TrackParticle used in identification...">inDetTrackParticleLink</ref>()<sp/>).isValid()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(<sp/>mu.isAvailable&lt;ElementLink&lt;xAOD::TrackParticleContainer&gt;<sp/>&gt;<sp/>(&quot;inDetTrackParticleLink&quot;)){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt; xAOD::TrackParticleContainer &gt;</ref>&amp;<sp/>id_track<sp/>=<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a2524a9b1483ec61cf49d9c54e021d4f3" kindref="member" tooltip="Returns an ElementLink to the InnerDetector TrackParticle used in identification...">inDetTrackParticleLink</ref>();</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>m_ptid<sp/>=<sp/>(<sp/>!id_track<sp/>)<sp/>?<sp/>0.<sp/>:<sp/>(<sp/>*id_track<sp/>)-&gt;pt()<sp/>/<sp/>1000.;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>m_ptid<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Set<sp/>pt<sp/>MS:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Retrieving<sp/>ElementLink<sp/>to<sp/>MS<sp/>TrackParticle...&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Setting<sp/>Pt<sp/><sp/>[MS]:<sp/>if<sp/>no<sp/>track<sp/>available,<sp/>set<sp/>to<sp/>0...&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;mu.isAvailable&lt;<sp/>ElementLink&lt;<sp/>xAOD::TrackParticleContainer<sp/>&gt;<sp/>&gt;(<sp/>\&quot;extrapolatedMuonSpectrometerTrackParticleLink\&quot;<sp/>)<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mu.<ref refid="d5/d4c/classxAOD_1_1IParticle_1a73d35d149fce4bcc1ce55da0faf8e0d5" kindref="member">isAvailable</ref>&lt;<sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt; xAOD::TrackParticleContainer &gt;</ref><sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;extrapolatedMuonSpectrometerTrackParticleLink&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;(<sp/>mu.extrapolatedMuonSpectrometerTrackParticleLink()<sp/>==<sp/>NULL<sp/>)<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1ad65c58dd62a33d8126bc6457ef6b0dff" kindref="member" tooltip="Returns an ElementLink to the Extrapolated Muon Spectrometer TrackParticle used in...">extrapolatedMuonSpectrometerTrackParticleLink</ref>()<sp/>==<sp/>NULL<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;mu.extrapolatedMuonSpectrometerTrackParticleLink()<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1ad65c58dd62a33d8126bc6457ef6b0dff" kindref="member" tooltip="Returns an ElementLink to the Extrapolated Muon Spectrometer TrackParticle used in...">extrapolatedMuonSpectrometerTrackParticleLink</ref>()<sp/>);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;(<sp/>mu.extrapolatedMuonSpectrometerTrackParticleLink()<sp/>).isValid()<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1ad65c58dd62a33d8126bc6457ef6b0dff" kindref="member" tooltip="Returns an ElementLink to the Extrapolated Muon Spectrometer TrackParticle used in...">extrapolatedMuonSpectrometerTrackParticleLink</ref>()<sp/>).isValid()<sp/>);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1ad65c58dd62a33d8126bc6457ef6b0dff" kindref="member" tooltip="Returns an ElementLink to the Extrapolated Muon Spectrometer TrackParticle used in...">extrapolatedMuonSpectrometerTrackParticleLink</ref>()<sp/>).isValid()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if(<sp/>mu.isAvailable&lt;<sp/>ElementLink&lt;<sp/>xAOD::TrackParticleContainer<sp/>&gt;<sp/>&gt;(<sp/>&quot;extrapolatedMuonSpectrometerTrackParticleLink&quot;<sp/>)<sp/>)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt; xAOD::TrackParticleContainer &gt;</ref>&amp;<sp/>ms_track<sp/>=<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1ad65c58dd62a33d8126bc6457ef6b0dff" kindref="member" tooltip="Returns an ElementLink to the Extrapolated Muon Spectrometer TrackParticle used in...">extrapolatedMuonSpectrometerTrackParticleLink</ref>();</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>m_ptms<sp/>=<sp/>(<sp/>!ms_track<sp/>)<sp/>?<sp/>0.<sp/>:<sp/>(<sp/>*ms_track<sp/>)-&gt;pt()<sp/>/<sp/>1000.;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ATH_MSG_VERBOSE(&quot;No<sp/>link<sp/>to<sp/>extrapolatedMuonSpectrometerTrackParticleLink<sp/>setting<sp/>pt<sp/>to<sp/>0&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>m_ptms<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Set<sp/>pt<sp/>CB:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Retrieving<sp/>ElementLink<sp/>to<sp/>CB<sp/>TrackParticle...&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Setting<sp/>Pt<sp/><sp/>[CB]:<sp/>if<sp/>no<sp/>track<sp/>available,<sp/>set<sp/>to<sp/>0...&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;mu.isAvailable&lt;<sp/>ElementLink&lt;<sp/>xAOD::TrackParticleContainer<sp/>&gt;<sp/>&gt;(<sp/>\&quot;primaryTrackParticleLink\&quot;<sp/>)<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mu.<ref refid="d5/d4c/classxAOD_1_1IParticle_1a73d35d149fce4bcc1ce55da0faf8e0d5" kindref="member">isAvailable</ref>&lt;<sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt; xAOD::TrackParticleContainer &gt;</ref><sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;primaryTrackParticleLink&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;(<sp/>mu.primaryTrackParticleLink()<sp/>==<sp/>NULL<sp/>)<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(<sp/>mu.primaryTrackParticleLink()<sp/>==<sp/>NULL<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;mu.primaryTrackParticleLink()<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mu.primaryTrackParticleLink()<sp/>);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;(<sp/>mu.primaryTrackParticleLink()<sp/>).isValid()<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(<sp/>mu.primaryTrackParticleLink()<sp/>).isValid()<sp/>);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>mu.primaryTrackParticleLink()<sp/>).isValid()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(<sp/>mu.isAvailable&lt;<sp/>ElementLink<sp/>&lt;<sp/>xAOD::TrackParticleContainer<sp/>&gt;<sp/>&gt;<sp/>(<sp/>&quot;primaryTrackParticleLink&quot;<sp/>)<sp/>)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt; xAOD::TrackParticleContainer &gt;</ref>&amp;<sp/>cb_track<sp/>=<sp/>mu.primaryTrackParticleLink();</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>m_ptcb<sp/>=<sp/>(<sp/>!cb_track<sp/>)<sp/>?<sp/>0.<sp/>:<sp/>(<sp/>*cb_track<sp/>)-&gt;pt()<sp/>/<sp/>1000.;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>m_ptcb<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Set<sp/>the<sp/>charge<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1ada4059382e0f2ad3f6c3ed3293165275" kindref="member" tooltip="Generic accessor to type information.">muonType</ref>()<sp/>==<sp/>xAOD::Muon::SiliconAssociatedForwardMuon<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mu.<ref refid="d5/d4c/classxAOD_1_1IParticle_1a73d35d149fce4bcc1ce55da0faf8e0d5" kindref="member">isAvailable</ref>&lt;<ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt;xAOD::TrackParticleContainer &gt;</ref><sp/>&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;combinedTrackParticleLink&quot;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a1f9c75fa5d7926d2dfab3db33ded2a15" kindref="member" tooltip="Returns an ElementLink to the InnerDetector TrackParticle used in identification...">combinedTrackParticleLink</ref>().isValid()){</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt; xAOD::TrackParticleContainer &gt;</ref>&amp;<sp/>cb_track<sp/>=<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a1f9c75fa5d7926d2dfab3db33ded2a15" kindref="member" tooltip="Returns an ElementLink to the InnerDetector TrackParticle used in identification...">combinedTrackParticleLink</ref>();</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_charge<sp/>=<sp/>(<sp/>*cb_track<sp/>)-&gt;charge();</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}}}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>m_charge<sp/>=<sp/>mu.charge();</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Set<sp/>remaining<sp/>muon<sp/>information:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Check<sp/>if<sp/>muon<sp/>has<sp/>been<sp/>already<sp/>corrected!<sp/>If<sp/>so,<sp/>take<sp/>original<sp/>pt...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//ATH_MSG_VERBOSE(<sp/>&quot;Setting<sp/>Pt<sp/><sp/>[CB]...&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if(<sp/>mu.isAvailable&lt;<sp/>float<sp/>&gt;(<sp/>&quot;OriginalMuonPt&quot;<sp/>)<sp/>&amp;&amp;<sp/>mu.auxdata&lt;<sp/>float<sp/>&gt;(<sp/>&quot;OriginalMuonPt&quot;<sp/>)<sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>m_ptcb<sp/>=<sp/>mu.auxdata&lt;<sp/>float<sp/>&gt;(<sp/>&quot;OriginalMuonPt&quot;<sp/>)<sp/>/<sp/>1000.;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>ATH_MSG_DEBUG(<sp/>&quot;Found<sp/>\&quot;OriginalMuonPt\&quot;<sp/>decoration,<sp/>with<sp/>value:<sp/>&quot;<sp/>&lt;&lt;<sp/>m_ptcb<sp/>*<sp/>1000.<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//else<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>m_ptcb<sp/>=<sp/>mu.pt()<sp/>/<sp/>1000.;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>mu.auxdata&lt;<sp/>float<sp/>&gt;(<sp/>&quot;OriginalMuonPt&quot;<sp/>)<sp/>=<sp/>mu.pt();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>ATH_MSG_DEBUG(<sp/>&quot;Setting<sp/>\&quot;OriginalMuonPt\&quot;<sp/>decoration<sp/>to<sp/>value:<sp/>&quot;<sp/>&lt;&lt;<sp/>mu.auxdata&lt;<sp/>float<sp/>&gt;(<sp/>&quot;OriginalMuonPt&quot;<sp/>)<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Setting<sp/>Eta<sp/>[CB]...&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/>m_eta<sp/>=<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a9e1ec26e1cfde09690d8305e80877157" kindref="member" tooltip="The pseudorapidity () of the particle.">eta</ref>();</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Setting<sp/>Phi<sp/>[CB]...&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/>m_phi<sp/>=<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a10606744f788b78c1af47391bf7744d6" kindref="member" tooltip="The azimuthal angle () of the particle.">phi</ref>();</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Getting<sp/>detector<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<sp/>m_phi<sp/>)<sp/>==<sp/>DEFAULT_INIT_VAL<sp/>&amp;&amp;<sp/>m_Trel<sp/>==<sp/>MCAST::Release::Rel17_2_Sum13<sp/>)<sp/>ATH_MSG_ERROR(<sp/></highlight><highlight class="stringliteral">&quot;You<sp/>need<sp/>phi<sp/>of<sp/>the<sp/>muon<sp/>for<sp/>after<sp/>Rel17.2Sum13!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<sp/>m_phi<sp/>)<sp/>==<sp/>DEFAULT_INIT_VAL<sp/>&amp;&amp;<sp/>m_Trel<sp/>&lt;<sp/>MCAST::Release::Rel17_2_Sum13<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Lower<sp/>release<sp/>have<sp/>just<sp/>Eta<sp/>bins,<sp/>so<sp/>usually<sp/>the<sp/>user<sp/>doesn&apos;t<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Phi<sp/>and<sp/>0<sp/>is<sp/>a<sp/>good<sp/>default<sp/>for<sp/>these<sp/>regions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>m_detRegion<sp/>=<sp/>GetRegion(<sp/>m_eta,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>m_detRegion<sp/>=<sp/>GetRegion(<sp/>m_eta,<sp/>m_phi<sp/>);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/>m_scaleRegion<sp/>=<sp/>GetScaleRegion(<sp/>mu<sp/>);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;m_ptcb<sp/>&quot;&lt;&lt;m_ptcb&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Set<sp/>the<sp/>statistical<sp/>combination<sp/>for<sp/>muons<sp/>above<sp/>given<sp/>pT<sp/>threshotld.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_useStatComb<sp/>&amp;&amp;<sp/>m_ptcb<sp/>&gt;<sp/>m_StatCombPtThreshold<sp/>&amp;&amp;<sp/>isBadMuon(mu))<sp/>{</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(true){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>CorrectionCode<sp/>cbCode=applyStatCombination(mu);<sp/></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>cbCode==CorrectionCode::Ok){</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!mu.<ref refid="d5/d4c/classxAOD_1_1IParticle_1a73d35d149fce4bcc1ce55da0faf8e0d5" kindref="member">isAvailable</ref><sp/>&lt;<sp/>AmgVector(5)<sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;StatCombCBPars&quot;</highlight><highlight class="normal"><sp/>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CorrectionCode::Error;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AmgVector(5)<sp/>parsCB<sp/>=<sp/>mu.auxdata<sp/>&lt;<sp/>AmgVector(5)<sp/>&gt;(<sp/>&quot;StatCombCBPars&quot;<sp/>);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_ptcb<sp/>=<sp/>sin(parsCB[3])/fabs(parsCB[4])/<sp/>1000;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;--&gt;<sp/>m_ptcb<sp/>&quot;&lt;&lt;m_ptcb&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>}}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Retrieve<sp/>the<sp/>event<sp/>information:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/>const<sp/>xAOD::EventInfo*<sp/>evtInfo<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/>&quot;Retrieving<sp/>EventInfo<sp/>from<sp/>the<sp/>EventStore...&quot;<sp/>);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/>if(<sp/>evtStore()-&gt;retrieve(<sp/>evtInfo,<sp/>&quot;EventInfo&quot;<sp/>).isFailure()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>EventInfo<sp/>object<sp/>could<sp/>be<sp/>retrieved&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(<sp/></highlight><highlight class="stringliteral">&quot;Random<sp/>number<sp/>generation<sp/>not<sp/>configured<sp/>correctly,<sp/>impossible<sp/>to<sp/>determine<sp/>if<sp/>dealing<sp/>with<sp/>data<sp/>or<sp/>MC&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CorrectionCode::Error;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>Simulation<sp/>flag:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>evtInfo-&gt;eventType(<sp/><ref refid="df/df8/classxAOD_1_1EventInfo__v1_1ac05adfe37c466a5eedbb5991a0063481aab5db53c3e4e61ccac5962fb23fa3771" kindref="member" tooltip="true: simulation, false: data">xAOD::EventInfo::IS_SIMULATION</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!evtInfo-&gt;eventType(<sp/><ref refid="df/df8/classxAOD_1_1EventInfo__v1_1ac05adfe37c466a5eedbb5991a0063481aab5db53c3e4e61ccac5962fb23fa3771" kindref="member" tooltip="true: simulation, false: data">xAOD::EventInfo::IS_SIMULATION</ref><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Statistical<sp/>combiantion<sp/>specifics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_useStatComb){</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1ad77a32fbb5a8605b6db68483b58497fd" kindref="member" tooltip="Set method for IParticle values.">setP4</ref>(<sp/>m_ptcb<sp/>*<sp/>1000<sp/>,<sp/>m_eta,<sp/>m_phi<sp/>);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Sagitta<sp/>Correction<sp/><sp/>specifics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_doSagittaCorrection){</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CorrectionCode<sp/>sgCode=applySagittaBiasCorrectionAuto(MCAST::DetectorType::CB,mu,</highlight><highlight class="keyword">false</highlight><highlight class="normal">,MCAST::SagittaSysType::NOMINAL);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sgCode!=CorrectionCode::Ok)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sgCode;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1ad77a32fbb5a8605b6db68483b58497fd" kindref="member" tooltip="Set method for IParticle values.">setP4</ref>(<sp/>m_ptcb<sp/>*<sp/>1000<sp/>,<sp/>m_eta,<sp/>m_phi<sp/>);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mu.auxdata&lt;<sp/>float<sp/>&gt;(<sp/>&quot;InnerDetectorPt&quot;<sp/>)<sp/>=<sp/>m_ptid<sp/>*<sp/>1000.;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mu.auxdata&lt;<sp/>float<sp/>&gt;(<sp/>&quot;MuonSpectrometerPt&quot;<sp/>)<sp/>=<sp/>m_ptms<sp/>*<sp/>1000.;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>mu.<ref refid="d5/d4c/classxAOD_1_1IParticle_1a27c59a50a203be500dae35e8ab217c75" kindref="member">auxdata</ref>&lt;<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;InnerDetectorPt&quot;</highlight><highlight class="normal"><sp/>)<sp/>=<sp/>m_ptid<sp/>*<sp/>1000.;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Toroid-off<sp/>specifics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_toroidOff<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mu.<ref refid="d5/d4c/classxAOD_1_1IParticle_1a27c59a50a203be500dae35e8ab217c75" kindref="member">auxdata</ref>&lt;<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;MuonSpectrometerPt&quot;</highlight><highlight class="normal"><sp/>)<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1ad77a32fbb5a8605b6db68483b58497fd" kindref="member" tooltip="Set method for IParticle values.">setP4</ref>(<sp/>m_ptid<sp/>*<sp/>1000.,<sp/>m_eta,<sp/>m_phi<sp/>);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mu.<ref refid="d5/d4c/classxAOD_1_1IParticle_1a27c59a50a203be500dae35e8ab217c75" kindref="member">auxdata</ref>&lt;<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;MuonSpectrometerPt&quot;</highlight><highlight class="normal"><sp/>)<sp/>=<sp/>m_ptms<sp/>*<sp/>1000.;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//:::<sp/>SAF<sp/>specifics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1ada4059382e0f2ad3f6c3ed3293165275" kindref="member" tooltip="Generic accessor to type information.">muonType</ref>()<sp/>==<sp/>xAOD::Muon::SiliconAssociatedForwardMuon<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Retrieving<sp/>ElementLink<sp/>to<sp/>CB<sp/>TrackParticle...&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Setting<sp/>Pt<sp/><sp/>[CB]:<sp/>if<sp/>no<sp/>track<sp/>available,<sp/>set<sp/>to<sp/>0...&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ATH_MSG_VERBOSE(<sp/>&quot;mu.isAvailable&lt;<sp/>ElementLink&lt;<sp/>xAOD::TrackParticleContainer<sp/>&gt;<sp/>&gt;(<sp/>\&quot;combinedTrackParticleLink\&quot;<sp/>)<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>mu.isAvailable&lt;<sp/>ElementLink&lt;<sp/>xAOD::TrackParticleContainer<sp/>&gt;<sp/>&gt;(<sp/>&quot;combinedTrackParticleLink&quot;<sp/>)<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ATH_MSG_VERBOSE(<sp/>&quot;(<sp/>mu.combinedTrackParticleLink()<sp/>==<sp/>NULL<sp/>)<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>(<sp/>mu.combinedTrackParticleLink()<sp/>==<sp/>NULL<sp/>)<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ATH_MSG_VERBOSE(<sp/>&quot;mu.combinedTrackParticleLink()<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>mu.combinedTrackParticleLink()<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ATH_MSG_VERBOSE(<sp/>&quot;(<sp/>mu.combinedTrackParticleLink()<sp/>).isValid()<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>(<sp/>mu.combinedTrackParticleLink()<sp/>).isValid()<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>temp_cb_pt<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(<sp/>mu.isAvailable&lt;ElementLink&lt;xAOD::TrackParticleContainer&gt;<sp/>&gt;<sp/>(&quot;inDetTrackParticleLink&quot;)){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mu.<ref refid="d5/d4c/classxAOD_1_1IParticle_1a73d35d149fce4bcc1ce55da0faf8e0d5" kindref="member">isAvailable</ref>&lt;<ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt;xAOD::TrackParticleContainer &gt;</ref><sp/>&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;combinedTrackParticleLink&quot;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a1f9c75fa5d7926d2dfab3db33ded2a15" kindref="member" tooltip="Returns an ElementLink to the InnerDetector TrackParticle used in identification...">combinedTrackParticleLink</ref>().isValid()){</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt; xAOD::TrackParticleContainer &gt;</ref>&amp;<sp/>cb_track<sp/>=<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a1f9c75fa5d7926d2dfab3db33ded2a15" kindref="member" tooltip="Returns an ElementLink to the InnerDetector TrackParticle used in identification...">combinedTrackParticleLink</ref>();</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_cb_pt<sp/>=<sp/>(<sp/>!cb_track<sp/>)<sp/>?<sp/>0.<sp/>:<sp/>(<sp/>*cb_track<sp/>)-&gt;pt();</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}}</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1ad77a32fbb5a8605b6db68483b58497fd" kindref="member" tooltip="Set method for IParticle values.">setP4</ref>(<sp/>temp_cb_pt,<sp/>m_eta,<sp/>m_phi<sp/>);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CorrectionCode::Ok;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG(<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>Input<sp/>Muon<sp/>Info<sp/>-<sp/><sp/>Pt_ID:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_ptid<sp/>*<sp/>1000.<sp/>);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG(<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>Input<sp/>Muon<sp/>Info<sp/>-<sp/><sp/>Pt_MS:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_ptms<sp/>*<sp/>1000.<sp/>);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG(<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>Input<sp/>Muon<sp/>Info<sp/>-<sp/><sp/>Pt_CB:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_ptcb<sp/>*<sp/>1000.<sp/>);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>Input<sp/>Muon<sp/>Info<sp/>-<sp/><sp/><sp/><sp/>Eta:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_eta<sp/>);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>Input<sp/>Muon<sp/>Info<sp/>-<sp/><sp/><sp/><sp/>Phi:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_phi<sp/>);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>Input<sp/>Muon<sp/>Info<sp/>-<sp/>Sector:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mu.<ref refid="d5/d4c/classxAOD_1_1IParticle_1a27c59a50a203be500dae35e8ab217c75" kindref="member">auxdata</ref>&lt;<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;primarySector&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>Input<sp/>Muon<sp/>Info<sp/>-<sp/>Charge:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(<sp/>(<sp/>m_charge<sp/>&gt;<sp/>0<sp/>)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;+&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>Input<sp/>Muon<sp/>Info<sp/>-<sp/><sp/>Pt_CB<sp/>-<sp/>Pt_ID:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(<sp/>m_ptcb<sp/>-<sp/>m_ptid<sp/>)<sp/>*<sp/>1000.<sp/>);</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!m_useExternalSeed<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Get<sp/>Event<sp/>Number:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>eventNumber<sp/>=<sp/>evtInfo<sp/>?<sp/>evtInfo-&gt;eventNumber()<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Construct<sp/>a<sp/>seed<sp/>for<sp/>the<sp/>random<sp/>number<sp/>generator:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UInt_t<sp/>seed<sp/>=<sp/>1<sp/>+<sp/>std::abs(<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a10606744f788b78c1af47391bf7744d6" kindref="member" tooltip="The azimuthal angle () of the particle.">phi</ref>()<sp/>)<sp/>*<sp/>1E6<sp/>+<sp/>std::abs(<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a9e1ec26e1cfde09690d8305e80877157" kindref="member" tooltip="The pseudorapidity () of the particle.">eta</ref>()<sp/>)<sp/>*<sp/>1E3<sp/>+<sp/>eventNumber;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>m_random3.SetSeed(<sp/>seed<sp/>);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//m_random3.SetSeed(0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/>m_smearDeltaMS<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/>m_smearDeltaID<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/>m_smearDeltaCB<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/>m_detRegion<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Getting<sp/>detector<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<sp/>m_phi<sp/>)<sp/>==<sp/>DEFAULT_INIT_VAL<sp/>&amp;&amp;<sp/>m_Trel<sp/>==<sp/>MCAST::Release::Rel17_2_Sum13<sp/>)<sp/>ATH_MSG_ERROR(<sp/></highlight><highlight class="stringliteral">&quot;You<sp/>need<sp/>phi<sp/>of<sp/>the<sp/>muon<sp/>for<sp/>after<sp/>Rel17.2Sum13!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<sp/>m_phi<sp/>)<sp/>==<sp/>DEFAULT_INIT_VAL<sp/>&amp;&amp;<sp/>m_Trel<sp/>&lt;<sp/>MCAST::Release::Rel17_2_Sum13<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Lower<sp/>release<sp/>have<sp/>just<sp/>Eta<sp/>bins,<sp/>so<sp/>usually<sp/>the<sp/>user<sp/>doesn&apos;t<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Phi<sp/>and<sp/>0<sp/>is<sp/>a<sp/>good<sp/>default<sp/>for<sp/>these<sp/>regions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>m_detRegion<sp/>=<sp/>GetRegion(<sp/>m_eta,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/>m_detRegion<sp/>=<sp/>GetRegion(<sp/>m_eta,<sp/>m_phi<sp/>);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_detRegion<sp/>==<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(<sp/></highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>find<sp/>correct<sp/>detector<sp/>region!<sp/>Set<sp/>smearing<sp/>to<sp/>0.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/>mu.<ref refid="d5/d4c/classxAOD_1_1IParticle_1a27c59a50a203be500dae35e8ab217c75" kindref="member">auxdata</ref>&lt;<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;InnerDetectorPt&quot;</highlight><highlight class="normal"><sp/>)<sp/>=<sp/>m_ptid<sp/>*<sp/>1000.;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/>mu.<ref refid="d5/d4c/classxAOD_1_1IParticle_1a27c59a50a203be500dae35e8ab217c75" kindref="member">auxdata</ref>&lt;<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;MuonSpectrometerPt&quot;</highlight><highlight class="normal"><sp/>)<sp/>=<sp/>m_ptms<sp/>*<sp/>1000.;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CorrectionCode::OutOfValidityRange;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Getting<sp/>scale<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/>m_scaleRegion<sp/>=<sp/>GetScaleRegion(<sp/>mu<sp/>);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/>m_g0<sp/>=<sp/>m_random3.Gaus(<sp/>0,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/>m_g1<sp/>=<sp/>m_random3.Gaus(<sp/>0,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/>m_g2<sp/>=<sp/>m_random3.Gaus(<sp/>0,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/>m_g3<sp/>=<sp/>m_random3.Gaus(<sp/>0,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/>m_g4<sp/>=<sp/>m_random3.Gaus(<sp/>0,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>Random<sp/>Values<sp/>-<sp/>g_0:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_g0<sp/>);<sp/></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>Random<sp/>Values<sp/>-<sp/>g_1:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_g1<sp/>);<sp/></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>Random<sp/>Values<sp/>-<sp/>g_2:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_g2<sp/>);<sp/></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>Random<sp/>Values<sp/>-<sp/>g_3:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_g3<sp/>);<sp/></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>Random<sp/>Values<sp/>-<sp/>g_4:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_g4<sp/>);<sp/></highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Getting<sp/>smearing<sp/>values<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>MS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_currentParameters-&gt;SmearTypeMS<sp/>==<sp/>MCAST::SystVariation::Default<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/>m_smearDeltaMS<sp/>=<sp/>GetSmearing(<sp/>MCAST::DetectorType::MS,<sp/>mu<sp/>);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_currentParameters-&gt;SmearTypeMS<sp/>==<sp/>MCAST::SystVariation::Up<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/>m_smearDeltaMS<sp/>=<sp/>GetSystVariation(<sp/>MCAST::DetectorType::MS,<sp/>1.<sp/>);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_currentParameters-&gt;SmearTypeMS<sp/>==<sp/>MCAST::SystVariation::Down<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/>m_smearDeltaMS<sp/>=<sp/>GetSystVariation(<sp/>MCAST::DetectorType::MS,<sp/>-1.<sp/>);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>value<sp/>for<sp/>m_currentParameters-&gt;SmearTypeMS&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_currentParameters-&gt;SmearTypeID<sp/>==<sp/>MCAST::SystVariation::Default<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/>m_smearDeltaID<sp/>=<sp/>GetSmearing(<sp/>MCAST::DetectorType::ID,<sp/>mu<sp/>);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_currentParameters-&gt;SmearTypeID<sp/>==<sp/>MCAST::SystVariation::Up<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/>m_smearDeltaID<sp/>=<sp/>GetSystVariation(<sp/>MCAST::DetectorType::ID,<sp/>1.<sp/>);</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_currentParameters-&gt;SmearTypeID<sp/>==<sp/>MCAST::SystVariation::Down<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/>m_smearDeltaID<sp/>=<sp/>GetSystVariation(<sp/>MCAST::DetectorType::ID,<sp/>-1.<sp/>);</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>value<sp/>for<sp/>m_currentParameters-&gt;SmearTypeID&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/>CalcCBWeights(<sp/>mu<sp/>);</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>Smearing<sp/>-<sp/>smearDeltaID:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_smearDeltaID<sp/>);</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>Smearing<sp/>-<sp/>smearDeltaMS:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_smearDeltaMS<sp/>);</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>Weights<sp/>-<sp/>weightID:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_weightID<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>fabs(<sp/>weightID<sp/>-<sp/>1<sp/>):<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fabs(<sp/>m_weightID<sp/>-<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>Weights<sp/>-<sp/>weightMS:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_weightMS<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>fabs(<sp/>weightMS<sp/>-<sp/>1<sp/>):<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fabs(<sp/>m_weightMS<sp/>-<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/>m_smearDeltaCB<sp/>=<sp/>m_smearDeltaID<sp/>*<sp/>m_weightID<sp/>+<sp/>m_smearDeltaMS<sp/>*<sp/>m_weightMS;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Calibrate<sp/>the<sp/>pt<sp/>of<sp/>the<sp/>muon:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>res_idPt<sp/>=<sp/>1000.<sp/>*<sp/>CalculatePt(<sp/>MCAST::DetectorType::ID,<sp/>m_smearDeltaID,<sp/>m_smearDeltaMS,<sp/>m_currentParameters-&gt;Scale<sp/>);</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>res_msPt<sp/>=<sp/>1000.<sp/>*<sp/>CalculatePt(<sp/>MCAST::DetectorType::MS,<sp/>m_smearDeltaID,<sp/>m_smearDeltaMS,<sp/>m_currentParameters-&gt;Scale<sp/>);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>res_cbPt<sp/>=<sp/>1000.<sp/>*<sp/>CalculatePt(<sp/>MCAST::DetectorType::CB,<sp/>m_smearDeltaID,<sp/>m_smearDeltaMS,<sp/>m_currentParameters-&gt;Scale<sp/>);</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>m_doSagittaCorrection<sp/>||<sp/><sp/>m_doSagittaMCDistortion<sp/>)<sp/>&amp;&amp;<sp/><sp/>(m_currentParameters-&gt;SagittaRho<sp/>!=<sp/>MCAST::SystVariation::Default<sp/>||<sp/><sp/></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_currentParameters-&gt;SagittaBias<sp/>!=<sp/>MCAST::SystVariation::Default)<sp/>){</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/>m_ptid<sp/>=<sp/>res_idPt/1000.;<sp/></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/>m_ptms<sp/>=<sp/>res_msPt/1000.;<sp/></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/>m_ptcb<sp/>=<sp/>res_cbPt/1000.;<sp/></highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/>CorrectionCode<sp/>sgCode=CorrectionCode::Ok;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_currentParameters-&gt;SagittaRho<sp/>!=<sp/>MCAST::SystVariation::Default){</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_currentParameters-&gt;SagittaRho<sp/>==<sp/>MCAST::SystVariation::Up<sp/>||<sp/>m_currentParameters-&gt;SagittaRho<sp/>==<sp/>MCAST::SystVariation::Down){</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sgCode=applySagittaBiasCorrectionAuto(MCAST::DetectorType::CB,mu,</highlight><highlight class="keyword">true</highlight><highlight class="normal">,MCAST::SagittaSysType::RHO);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}}</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_currentParameters-&gt;SagittaBias<sp/>!=<sp/>MCAST::SystVariation::Default){</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_currentParameters-&gt;SagittaBias<sp/>==<sp/>MCAST::SystVariation::Up<sp/>||<sp/>m_currentParameters-&gt;SagittaBias<sp/>==<sp/>MCAST::SystVariation::Down){</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sgCode=applySagittaBiasCorrectionAuto(MCAST::DetectorType::CB,mu,</highlight><highlight class="keyword">true</highlight><highlight class="normal">,MCAST::SagittaSysType::BIAS);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}}</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sgCode!=CorrectionCode::Ok)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sgCode;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/>res_idPt=m_ptid<sp/>*1000.;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/>res_msPt=m_ptms<sp/>*1000.;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/>res_cbPt=m_ptcb<sp/>*1000.;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Sagitta<sp/>Distrotion<sp/><sp/>specifics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if(m_doSagittaMCDistortion){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//CorrectionCode<sp/>sgCode=applySagittaBiasCorrectionAuto(MCAST::DetectorType::CB,mu,true,MCAST::SagittaSysType::NOMINAL);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if(sgCode!=CorrectionCode::Ok)<sp/>return<sp/>sgCode;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//mu.setP4(<sp/>m_ptcb<sp/>*<sp/>1000<sp/>,<sp/>m_eta,<sp/>m_phi<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Override<sp/>combined<sp/>momentum<sp/>for<sp/>special<sp/>cases</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>fabs(<sp/>m_weightID<sp/>-<sp/>1<sp/>)<sp/>&lt;<sp/>EPSILON<sp/>)<sp/>res_cbPt<sp/>=<sp/>res_idPt;<sp/></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>fabs(<sp/>m_weightMS<sp/>-<sp/>1<sp/>)<sp/>&lt;<sp/>EPSILON<sp/>)<sp/>res_cbPt<sp/>=<sp/>res_msPt;<sp/></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Using<sp/>ToroidOff<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/>mu.<ref refid="d5/d4c/classxAOD_1_1IParticle_1a27c59a50a203be500dae35e8ab217c75" kindref="member">auxdata</ref>&lt;<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;InnerDetectorPt&quot;</highlight><highlight class="normal"><sp/>)<sp/>=<sp/>res_idPt;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_toroidOff<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/>mu.<ref refid="d5/d4c/classxAOD_1_1IParticle_1a27c59a50a203be500dae35e8ab217c75" kindref="member">auxdata</ref>&lt;<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;MuonSpectrometerPt&quot;</highlight><highlight class="normal"><sp/>)<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1ad77a32fbb5a8605b6db68483b58497fd" kindref="member" tooltip="Set method for IParticle values.">setP4</ref>(<sp/>res_idPt,<sp/>m_eta,<sp/>m_phi<sp/>);</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/>mu.<ref refid="d5/d4c/classxAOD_1_1IParticle_1a27c59a50a203be500dae35e8ab217c75" kindref="member">auxdata</ref>&lt;<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;MuonSpectrometerPt&quot;</highlight><highlight class="normal"><sp/>)<sp/>=<sp/>res_msPt;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1ad77a32fbb5a8605b6db68483b58497fd" kindref="member" tooltip="Set method for IParticle values.">setP4</ref>(<sp/>res_cbPt,<sp/>m_eta,<sp/>m_phi<sp/>);</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG(<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>Output<sp/>Muon<sp/>Info<sp/>-<sp/>Pt_ID:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>res_idPt<sp/>);</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG(<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>Output<sp/>Muon<sp/>Info<sp/>-<sp/>Pt_MS:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>res_msPt<sp/>);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG(<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>Output<sp/>Muon<sp/>Info<sp/>-<sp/>Pt_CB:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>res_cbPt<sp/>);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>Output<sp/>Muon<sp/>Info<sp/>-<sp/>Pt_CB<sp/>-<sp/>Pt_ID:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>res_cbPt<sp/>-<sp/>res_idPt<sp/>);</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Return<sp/>gracefully:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CorrectionCode::Ok;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal">CorrectionCode<sp/>MuonCalibrationAndSmearingTool::correctedCopy(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1" kindref="compound">xAOD::Muon</ref>&amp;<sp/>input,<sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1" kindref="compound">xAOD::Muon</ref>*&amp;<sp/>output<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>A<sp/>sanity<sp/>check:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>output<sp/>)<sp/>ATH_MSG_WARNING(<sp/></highlight><highlight class="stringliteral">&quot;Non-null<sp/>pointer<sp/>received.<sp/>&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;There&apos;s<sp/>a<sp/>possible<sp/>memory<sp/>leak!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Create<sp/>a<sp/>new<sp/>object:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Going<sp/>to<sp/>create<sp/>new<sp/>xAOD::Muon...&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/>output<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1" kindref="compound">xAOD::Muon</ref>();</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Calling<sp/>makePrivateStore...&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/>output-&gt;<ref refid="dc/db0/classSG_1_1AuxElement_1a197bf9fc579d49e25a850a4b3a5c14e8" kindref="member" tooltip="Create a new (empty) private store for this object.">makePrivateStore</ref>(<sp/>input<sp/>);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Use<sp/>the<sp/>other<sp/>function<sp/>to<sp/>modify<sp/>this<sp/>object:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Calling<sp/>applyCorrection...&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>applyCorrection(<sp/>*output<sp/>);</highlight></codeline>
<codeline lineno="1061"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MuonCalibrationAndSmearingTool::isAffectedBySystematic(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SystematicVariation&amp;<sp/>systematic<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/>SystematicSet<sp/>sys<sp/>=<sp/>affectingSystematics();</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sys.find(<sp/>systematic<sp/>)<sp/>!=<sp/>sys.end();</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal">SystematicSet<sp/>MuonCalibrationAndSmearingTool::affectingSystematics()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/>SystematicSet<sp/>result;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>ID<sp/>systematics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/>result.insert(<sp/>SystematicVariation(<sp/></highlight><highlight class="stringliteral">&quot;MUON_ID&quot;</highlight><highlight class="normal">,<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/>result.insert(<sp/>SystematicVariation(<sp/></highlight><highlight class="stringliteral">&quot;MUON_ID&quot;</highlight><highlight class="normal">,<sp/>-1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>MS<sp/>systematics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/>result.insert(<sp/>SystematicVariation(<sp/></highlight><highlight class="stringliteral">&quot;MUON_MS&quot;</highlight><highlight class="normal">,<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/>result.insert(<sp/>SystematicVariation(<sp/></highlight><highlight class="stringliteral">&quot;MUON_MS&quot;</highlight><highlight class="normal">,<sp/>-1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Scale<sp/>systematics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/>result.insert(<sp/>SystematicVariation(<sp/></highlight><highlight class="stringliteral">&quot;MUON_SCALE&quot;</highlight><highlight class="normal">,<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/>result.insert(<sp/>SystematicVariation(<sp/></highlight><highlight class="stringliteral">&quot;MUON_SCALE&quot;</highlight><highlight class="normal">,<sp/>-1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Sagitta<sp/>correction<sp/>rho</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/>result.insert(<sp/>SystematicVariation(<sp/></highlight><highlight class="stringliteral">&quot;MUON_SAGITTA_RHO&quot;</highlight><highlight class="normal">,<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/>result.insert(<sp/>SystematicVariation(<sp/></highlight><highlight class="stringliteral">&quot;MUON_SAGITTA_RHO&quot;</highlight><highlight class="normal">,<sp/>-1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Sagitta<sp/>correction<sp/>resid<sp/>bias<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/>result.insert(<sp/>SystematicVariation(<sp/></highlight><highlight class="stringliteral">&quot;MUON_SAGITTA_RESBIAS&quot;</highlight><highlight class="normal">,<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/>result.insert(<sp/>SystematicVariation(<sp/></highlight><highlight class="stringliteral">&quot;MUON_SAGITTA_RESBIAS&quot;</highlight><highlight class="normal">,<sp/>-1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal">SystematicSet<sp/>MuonCalibrationAndSmearingTool::recommendedSystematics()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>affectingSystematics();</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal">SystematicCode<sp/>MuonCalibrationAndSmearingTool::applySystematicVariation(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SystematicSet&amp;<sp/>systConfig<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>First<sp/>check<sp/>if<sp/>we<sp/>already<sp/>know<sp/>this<sp/>systematic<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/>boost::unordered_map&lt;<sp/>SystematicSet,<sp/>ParameterSet<sp/>&gt;::iterator<sp/>parIter<sp/>=<sp/>m_Parameters.find(<sp/>systConfig<sp/>);</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>parIter<sp/>!=<sp/>m_Parameters.end()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/>m_currentParameters<sp/>=<sp/>&amp;parIter-&gt;second;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SystematicCode::Ok;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Then<sp/>check<sp/>if<sp/>it<sp/>is<sp/>actually<sp/>supported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d4/d52/classCP_1_1SystematicSet" kindref="compound" tooltip="Class to wrap a set of SystematicVariations.">CP::SystematicSet</ref><sp/>affSysts<sp/>=<sp/>affectingSystematics();</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/>SystematicSet<sp/>checkSysConf;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!SystematicSet::filterForAffectingSystematics(<sp/>systConfig,<sp/>affSysts,<sp/>checkSysConf<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(<sp/></highlight><highlight class="stringliteral">&quot;Passing<sp/>unsupported<sp/>systematic<sp/>to<sp/>the<sp/>tool!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SystematicCode::Unsupported;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/>ParameterSet<sp/>param;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/>param.SmearTypeID<sp/>=<sp/>MCAST::SystVariation::Default;<sp/></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/>param.SmearTypeMS<sp/>=<sp/>MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/>param.Scale<sp/>=<sp/>MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/>param.SagittaRho=MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/>param.SagittaBias=MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>ID<sp/>systematics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/>SystematicVariation<sp/>syst<sp/>=<sp/>systConfig.getSystematicByBaseName(<sp/></highlight><highlight class="stringliteral">&quot;MUON_ID&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>syst<sp/>==<sp/>SystematicVariation(<sp/></highlight><highlight class="stringliteral">&quot;MUON_ID&quot;</highlight><highlight class="normal">,<sp/>1<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SmearTypeMS<sp/>=<sp/>MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SmearTypeID<sp/>=<sp/>MCAST::SystVariation::Up;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/>param.Scale<sp/>=<sp/>MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SagittaRho=MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SagittaBias=MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>syst<sp/>==<sp/>SystematicVariation(<sp/></highlight><highlight class="stringliteral">&quot;MUON_ID&quot;</highlight><highlight class="normal">,<sp/>-1<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//param.SmearTypeMS<sp/>=<sp/>m_smearDeltaMS;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//param.SmearTypeID<sp/>=<sp/>GetSystVariation(<sp/>MCAST::DetectorType::ID,<sp/>-1.<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SmearTypeMS<sp/>=<sp/>MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SmearTypeID<sp/>=<sp/>MCAST::SystVariation::Down;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/>param.Scale<sp/>=<sp/>MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SagittaRho=MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SagittaBias=MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!syst.empty()<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SystematicCode::Unsupported;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>MS<sp/>systematics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/>syst<sp/>=<sp/>systConfig.getSystematicByBaseName(<sp/></highlight><highlight class="stringliteral">&quot;MUON_MS&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>syst<sp/>==<sp/>SystematicVariation(<sp/></highlight><highlight class="stringliteral">&quot;MUON_MS&quot;</highlight><highlight class="normal">,<sp/>1<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//param.SmearTypeMS<sp/>=<sp/>GetSystVariation(<sp/>MCAST::DetectorType::MS,<sp/>1.<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//param.SmearTypeID<sp/>=<sp/>m_smearDeltaID;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SmearTypeMS<sp/>=<sp/>MCAST::SystVariation::Up;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SmearTypeID<sp/>=<sp/>MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/>param.Scale<sp/>=<sp/>MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SagittaRho=MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SagittaBias=MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>syst<sp/>==<sp/>SystematicVariation(<sp/></highlight><highlight class="stringliteral">&quot;MUON_MS&quot;</highlight><highlight class="normal">,<sp/>-1<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//param.SmearTypeID<sp/>=<sp/>m_smearDeltaID;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//param.SmearTypeMS<sp/>=<sp/>GetSystVariation(<sp/>MCAST::DetectorType::MS,<sp/>-1.<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SmearTypeMS<sp/>=<sp/>MCAST::SystVariation::Down;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SmearTypeID<sp/>=<sp/>MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/>param.Scale<sp/>=<sp/>MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SagittaRho=MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SagittaBias=MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!syst.empty()<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SystematicCode::Unsupported;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Scale<sp/>systematics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/>syst<sp/>=<sp/>systConfig.getSystematicByBaseName(<sp/></highlight><highlight class="stringliteral">&quot;MUON_SCALE&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>syst<sp/>==<sp/>SystematicVariation(<sp/></highlight><highlight class="stringliteral">&quot;MUON_SCALE&quot;</highlight><highlight class="normal">,<sp/>1<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SmearTypeMS<sp/>=<sp/>MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SmearTypeID<sp/>=<sp/>MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/>param.Scale<sp/>=<sp/>MCAST::SystVariation::Down;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SagittaRho=MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SagittaBias=MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>syst<sp/>==<sp/>SystematicVariation(<sp/></highlight><highlight class="stringliteral">&quot;MUON_SCALE&quot;</highlight><highlight class="normal">,<sp/>-1<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SmearTypeMS<sp/>=<sp/>MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SmearTypeID<sp/>=<sp/>MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/>param.Scale<sp/>=<sp/>MCAST::SystVariation::Up;</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SagittaRho=MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SagittaBias=MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!syst.empty()<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SystematicCode::Unsupported;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Sagitta<sp/>Rho<sp/>systematics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/>syst<sp/>=<sp/>systConfig.getSystematicByBaseName(<sp/></highlight><highlight class="stringliteral">&quot;MUON_SAGITTA_RHO&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>syst<sp/>==<sp/>SystematicVariation(<sp/></highlight><highlight class="stringliteral">&quot;MUON_SAGITTA_RHO&quot;</highlight><highlight class="normal">,<sp/>1<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SmearTypeMS<sp/>=<sp/>MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SmearTypeID<sp/>=<sp/>MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/>param.Scale<sp/>=<sp/>MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SagittaRho=MCAST::SystVariation::Down;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SagittaBias=MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>syst<sp/>==<sp/>SystematicVariation(<sp/></highlight><highlight class="stringliteral">&quot;MUON_SAGITTA_RHO&quot;</highlight><highlight class="normal">,<sp/>-1<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SmearTypeMS<sp/>=<sp/>MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SmearTypeID<sp/>=<sp/>MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/>param.Scale<sp/>=<sp/>MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SagittaRho=MCAST::SystVariation::Up;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SagittaBias=MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!syst.empty()<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SystematicCode::Unsupported;<sp/><sp/></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Sagitta<sp/>Residual<sp/>Bias<sp/>systematics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/>syst<sp/>=<sp/>systConfig.getSystematicByBaseName(<sp/></highlight><highlight class="stringliteral">&quot;MUON_SAGITTA_RESBIAS&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>syst<sp/>==<sp/>SystematicVariation(<sp/></highlight><highlight class="stringliteral">&quot;MUON_SAGITTA_RESBIAS&quot;</highlight><highlight class="normal">,<sp/>1<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SmearTypeMS<sp/>=<sp/>MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SmearTypeID<sp/>=<sp/>MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/>param.Scale<sp/>=<sp/>MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SagittaRho=MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SagittaBias=MCAST::SystVariation::Down;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>syst<sp/>==<sp/>SystematicVariation(<sp/></highlight><highlight class="stringliteral">&quot;MUON_SAGITTA_RESBIAS&quot;</highlight><highlight class="normal">,<sp/>-1<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SmearTypeMS<sp/>=<sp/>MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SmearTypeID<sp/>=<sp/>MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/>param.Scale<sp/>=<sp/>MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SagittaRho=MCAST::SystVariation::Default;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/>param.SagittaBias=MCAST::SystVariation::Up;</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!syst.empty()<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SystematicCode::Unsupported;<sp/><sp/></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG(<sp/></highlight><highlight class="stringliteral">&quot;Systematic<sp/>variation&apos;s<sp/>parameters,<sp/>SmearTypeID:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>param.SmearTypeID<sp/>);<sp/></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG(<sp/></highlight><highlight class="stringliteral">&quot;Systematic<sp/>variation&apos;s<sp/>parameters,<sp/>SmearTypeMS:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>param.SmearTypeMS<sp/>);<sp/></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG(<sp/></highlight><highlight class="stringliteral">&quot;Systematic<sp/>variation&apos;s<sp/>parameters,<sp/>Scale:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>param.Scale<sp/>);<sp/></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>store<sp/>this<sp/>calibration<sp/>for<sp/>future<sp/>use,<sp/>and<sp/>make<sp/>it<sp/>current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/>m_currentParameters<sp/>=<sp/>&amp;m_Parameters.insert(<sp/>std::make_pair(<sp/>systConfig,<sp/>param<sp/>)<sp/>).first-&gt;second;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SystematicCode::Ok;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal">StatusCode<sp/>MuonCalibrationAndSmearingTool::SetData(<sp/>std::string<sp/>data<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>data<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Data10&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Tdata<sp/>=<sp/>MCAST::DataType::Data10;</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>data<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Data11&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Tdata<sp/>=<sp/>MCAST::DataType::Data11;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>data<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Data12&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Tdata<sp/>=<sp/>MCAST::DataType::Data12;</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>data<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Data15&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Tdata<sp/>=<sp/>MCAST::DataType::Data15;</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>data<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Data16&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Tdata<sp/>=<sp/>MCAST::DataType::Data16;</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(<sp/></highlight><highlight class="stringliteral">&quot;Unrecognized<sp/>value<sp/>for<sp/>SetData&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal">StatusCode<sp/>MuonCalibrationAndSmearingTool::SetAlgorithm(<sp/>std::string<sp/>algo<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>algo<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;muid&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Talgo<sp/>=<sp/>MCAST::AlgoType::Muid;</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>algo<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;staco&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Talgo<sp/>=<sp/>MCAST::AlgoType::Staco;</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>algo<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;muons&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Talgo<sp/>=<sp/>MCAST::AlgoType::Muons;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(<sp/></highlight><highlight class="stringliteral">&quot;Unrecognized<sp/>value<sp/>for<sp/>SetAlgorithm&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal">StatusCode<sp/>MuonCalibrationAndSmearingTool::SetType(<sp/>std::string<sp/>type<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;pT&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Tsmear<sp/>=<sp/>MCAST::SmearingType::Pt;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(<sp/></highlight><highlight class="stringliteral">&quot;Using<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>type<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Smearing<sp/>&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;q_pT&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Tsmear<sp/>=<sp/>MCAST::SmearingType::QoverPt;</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(<sp/></highlight><highlight class="stringliteral">&quot;Using<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>type<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Smearing<sp/>&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(<sp/></highlight><highlight class="stringliteral">&quot;Unrecognized<sp/>value<sp/>for<sp/>SetType&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal">StatusCode<sp/>MuonCalibrationAndSmearingTool::SetRelease(<sp/>std::string<sp/>rel<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>rel<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Rel16.6&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Trel<sp/>=<sp/>MCAST::Release::Rel16_6;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>rel<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Rel17&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Trel<sp/>=<sp/>MCAST::Release::Rel17;</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>rel<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Rel17.2&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Trel<sp/>=<sp/>MCAST::Release::Rel17_2;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>rel<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Rel17.2Repro&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Trel<sp/>=<sp/>MCAST::Release::Rel17_2_Repro;</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>rel<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Rel17.2Sum13&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Trel<sp/>=<sp/>MCAST::Release::Rel17_2_Sum13;</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>rel<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;PreRecs&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Trel<sp/>=<sp/>MCAST::Release::PreRec;</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>rel<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;PreRecs2015_06_22&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Trel<sp/>=<sp/>MCAST::Release::PreRec_2015_06_22;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>rel<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;PreRecs2015_08_06&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Trel<sp/>=<sp/>MCAST::Release::PreRec_2015_08_06;</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>rel<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Recs2015_11_15&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Trel<sp/>=<sp/>MCAST::Release::Rec_2015_11_15;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>rel<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Recs2016_01_13&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Trel<sp/>=<sp/>MCAST::Release::Rec_2016_01_13;</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>rel<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Recs2016_01_19&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Trel<sp/>=<sp/>MCAST::Release::Rec_2016_01_19;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>rel<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;PreRecs2016_05_23&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Trel<sp/>=<sp/>MCAST::Release::PreRec_2016_05_23;</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rel<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Recs2016_08_07&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Trel<sp/>=<sp/>MCAST::Release::Recs2016_08_07;</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rel<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Recs2016_15_07&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Trel<sp/>=<sp/>MCAST::Release::Recs2016_08_07;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Trel<sp/>=<sp/>MCAST::Release::Recs2016_08_07;</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ATH_MSG_ERROR(<sp/>&quot;Unrecognized<sp/>value<sp/>for<sp/>SetRelease&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>StatusCode::FAILURE;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight><highlight class="comment">//double<sp/>MuonCalibrationAndSmearingTool::ScaleApply(<sp/>const<sp/>double<sp/>pt,<sp/>const<sp/>double<sp/>S1,<sp/>const<sp/>double<sp/>S2,<sp/>double<sp/>S,<sp/>const<sp/>double<sp/>S_enLoss<sp/>)<sp/>const<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MuonCalibrationAndSmearingTool::ScaleApply(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pt,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>S,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>S_enLoss<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Sanity<sp/>checks:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_detRegion<sp/>&lt;<sp/>0<sp/>||<sp/>m_detRegion<sp/>&gt;=<sp/>m_nb_regions<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pt;</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>default<sp/>momentum<sp/>scale<sp/>(derived<sp/>form<sp/>template<sp/>fits)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pt<sp/>*<sp/>S<sp/>+<sp/>S_enLoss;</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//bool<sp/>apply_to_data<sp/>=<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//return<sp/>apply_to_data<sp/>?<sp/>pt<sp/>/<sp/>S<sp/>:<sp/>(<sp/>pt<sp/>*<sp/>S<sp/>+<sp/>S_enLoss<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MuonCalibrationAndSmearingTool::CalculatePt(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DetType,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>inSmearID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>inSmearMS,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scaleVar<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scaleID<sp/>=<sp/>0.,<sp/>enLossCorrMS<sp/>=<sp/>0.,<sp/>scaleMS<sp/>=<sp/>0.,<sp/>scaleCB<sp/>=<sp/>0.;</highlight><highlight class="comment">//initialize<sp/>all<sp/>to<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>These<sp/>are<sp/>alternative<sp/>scale<sp/>corrections<sp/>(KPKM,KC,K,C)<sp/>they<sp/>are<sp/>!=<sp/>0.<sp/>if<sp/>Tscale<sp/>!=<sp/>SCALE_DEFAULT.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//double<sp/>s1_ID<sp/>=<sp/>0.,<sp/>s2_ID<sp/>=<sp/>0.,<sp/>s1_MS<sp/>=<sp/>0.,<sp/>s2_MS<sp/>=<sp/>0.,<sp/>s1_CB<sp/>=<sp/>0.,<sp/>s2_CB<sp/>=<sp/>0.;//Description<sp/>of<sp/>these<sp/>is<sp/>in<sp/>ApplyScale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>fabs(<sp/>scaleVar<sp/>)<sp/>!=<sp/>1.<sp/>&amp;&amp;<sp/>scaleVar<sp/>!=<sp/>0.<sp/>)<sp/>ATH_MSG_ERROR(<sp/></highlight><highlight class="stringliteral">&quot;Unpredicted<sp/>scale<sp/>variation<sp/>of<sp/>Delta<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;scaleVar&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>sigmas!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_scale_ID[m_detRegion]<sp/>!=<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_Trel<sp/>&gt;=<sp/>MCAST::Release::Rel17_2_Sum13<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scaleID<sp/>=<sp/>scaleVar<sp/>&gt;<sp/>0.<sp/>?<sp/>m_scaleSystUp_ID[m_detRegion]<sp/>:<sp/>m_scaleSystDw_ID[m_detRegion];</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scaleID<sp/>=<sp/>m_scaleSyst_ID[m_detRegion];</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/>scaleID<sp/>=<sp/>m_scale_ID[m_detRegion]<sp/>+<sp/>scaleVar*scaleID;</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/>scaleID<sp/>=<sp/>(<sp/>m_Trel<sp/>&gt;=<sp/>MCAST::Release::Rel17_2_Sum13<sp/>)<sp/>?<sp/>0.<sp/>:<sp/>1.;</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_scale_MS[m_detRegion]<sp/>!=<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_Trel<sp/>&gt;=<sp/>MCAST::Release::Rel17_2_Sum13<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scaleMS<sp/>=<sp/>scaleVar<sp/>&gt;<sp/>0.<sp/>?<sp/>m_scaleSystUp_MS[m_detRegion]<sp/>:<sp/>m_scaleSystDw_MS[m_detRegion];</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enLossCorrMS<sp/>=<sp/>scaleVar<sp/>&gt;<sp/>0.<sp/>?<sp/>m_enLossSystUp_MS[m_detRegion]<sp/>:<sp/>m_enLossSystDw_MS[m_detRegion];</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scaleMS<sp/>=<sp/>m_scaleSyst_MS[m_detRegion];</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/>scaleMS<sp/>=<sp/><sp/>m_scale_MS[m_detRegion]<sp/>+<sp/>scaleVar*scaleMS;</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>)<sp/>enLossCorrMS<sp/>=<sp/>m_enLoss_MS[m_detRegion]<sp/>+<sp/>scaleVar*enLossCorrMS;</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/>scaleMS<sp/>=<sp/>(<sp/>m_Trel<sp/>&gt;=<sp/>MCAST::Release::Rel17_2_Sum13<sp/>)<sp/>?<sp/>0.<sp/>:<sp/>1.;</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_Trel<sp/>&gt;=<sp/>MCAST::Release::Rel17_2_Sum13<sp/>)<sp/>{<sp/></highlight><highlight class="comment">//NB:<sp/>MCAST::Release::Rel17_2_Sum13<sp/>has<sp/>scale<sp/>parametrized<sp/>around<sp/>0,<sp/>not<sp/>1!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/>scaleID<sp/>+=<sp/>1.;</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/>scaleMS<sp/>+=<sp/>1.;</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_scale_CB[m_detRegion]<sp/>!=<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/>scaleCB<sp/>=<sp/>m_scale_CB[m_detRegion]<sp/>+<sp/>scaleVar<sp/>*<sp/>m_scaleSyst_CB[m_detRegion];</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_ptms<sp/>)<sp/>scaleCB<sp/>=<sp/>(<sp/>scaleID<sp/>*<sp/>m_weightID<sp/>+<sp/>(<sp/>scaleMS<sp/>+<sp/>enLossCorrMS<sp/>/<sp/>m_ptms<sp/>)<sp/>*<sp/>m_weightMS<sp/>);</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scaleCB<sp/>=<sp/>scaleID;<sp/></highlight><highlight class="comment">//<sp/>was<sp/>scaleID<sp/>*<sp/>m_weightID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tmpDelta<sp/>=<sp/>1.;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>outPtID<sp/>=<sp/>m_ptid,<sp/>outPtMS<sp/>=<sp/>m_ptms,<sp/>outPtCB<sp/>=<sp/>m_ptcb;</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>DetType<sp/>==<sp/>MCAST::DetectorType::ID<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>s1_ID<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>scaleID<sp/>);</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Double-Checking<sp/>outPtID<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>outPtID<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>at<sp/>first...&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>outPtID<sp/>==<sp/>0.<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outPtID;</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Load<sp/>the<sp/>ID<sp/>scale<sp/>and<sp/>smearing<sp/>that<sp/>you<sp/>will<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Double-Checking<sp/>int(<sp/>inSmearID<sp/>)<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<sp/>inSmearID<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Double-Checking<sp/>DEFAULT_INIT_VAL<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>DEFAULT_INIT_VAL<sp/>);</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/>tmpDelta<sp/>=<sp/>(<sp/>int(<sp/>inSmearID<sp/>)<sp/>==<sp/>DEFAULT_INIT_VAL<sp/>)<sp/>?<sp/>1.<sp/>+<sp/>m_smearDeltaID<sp/>:<sp/>1.<sp/>+<sp/>inSmearID;</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Double-Checking<sp/>inSmearID<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>inSmearID<sp/>);</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Double-Checking<sp/>m_smearDeltaID<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_smearDeltaID<sp/>);</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Double-Checking<sp/>tmpDelta<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tmpDelta<sp/>);</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_Trel<sp/>&lt;<sp/>MCAST::Release::Rel17_2_Sum13<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_Tsmear<sp/>==<sp/>MCAST::SmearingType::Pt<sp/>)<sp/><sp/>outPtID<sp/>=<sp/>outPtID<sp/>*<sp/>tmpDelta;</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_Tsmear<sp/>==<sp/>MCAST::SmearingType::QoverPt<sp/>)<sp/>outPtID<sp/>=<sp/>(<sp/>tmpDelta<sp/>==<sp/>0<sp/>)<sp/>?<sp/>MCAST_MAX_PT<sp/>:<sp/>outPtID<sp/>/<sp/>tmpDelta;</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//outPtID<sp/>=<sp/>ScaleApply(<sp/>fabs(<sp/>outPtID<sp/>),<sp/>s1_ID,<sp/>s2_ID,<sp/>scaleID<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/>outPtID<sp/>=<sp/>ScaleApply(<sp/>fabs(<sp/>outPtID<sp/>),<sp/>scaleID<sp/>);</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_Trel<sp/>&gt;=<sp/>MCAST::Release::Rel17_2_Sum13<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_Tsmear<sp/>==<sp/>MCAST::SmearingType::Pt<sp/>)<sp/><sp/>outPtID<sp/>=<sp/>outPtID<sp/>*<sp/>tmpDelta;</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_Tsmear<sp/>==<sp/>MCAST::SmearingType::QoverPt<sp/>)<sp/>outPtID<sp/>=<sp/>(<sp/>tmpDelta<sp/>==<sp/>0<sp/>)<sp/>?<sp/>MCAST_MAX_PT<sp/>:<sp/>outPtID<sp/>/<sp/>tmpDelta;</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outPtID;</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>DetType<sp/>==<sp/>MCAST::DetectorType::MS<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>s0_MS<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>enLossCorrMS<sp/>);</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>s1_MS<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>scaleMS<sp/>);</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Double-Checking<sp/>outPtMS<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>outPtMS<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>at<sp/>first...&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>outPtMS<sp/>==<sp/>0.<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outPtMS;</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Load<sp/>the<sp/>MS<sp/>scale<sp/>and<sp/>smearing<sp/>that<sp/>you<sp/>will<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Double-Checking<sp/>int(<sp/>inSmearMS<sp/>)<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<sp/>inSmearMS<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Double-Checking<sp/>DEFAULT_INIT_VAL<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>DEFAULT_INIT_VAL<sp/>);</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/>tmpDelta<sp/>=<sp/>(<sp/>int(<sp/>inSmearMS<sp/>)<sp/>==<sp/>DEFAULT_INIT_VAL<sp/>)<sp/>?<sp/>1.<sp/>+<sp/>m_smearDeltaMS<sp/>:<sp/>1.<sp/>+<sp/>inSmearMS;</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Double-Checking<sp/>inSmearMS<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>inSmearMS<sp/>);</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Double-Checking<sp/>m_smearDeltaMS<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_smearDeltaMS<sp/>);</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Double-Checking<sp/>tmpDelta<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tmpDelta<sp/>);</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//In<sp/>these<sp/>releases<sp/>the<sp/>smearing<sp/>was<sp/>applied<sp/>to<sp/>the<sp/>pt<sp/>before<sp/>the<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_Trel<sp/>&lt;<sp/>MCAST::Release::Rel17_2_Sum13<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_Tsmear<sp/>==<sp/>MCAST::SmearingType::Pt<sp/>)<sp/><sp/>outPtMS<sp/>=<sp/>outPtMS<sp/>*<sp/>tmpDelta;</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_Tsmear<sp/>==<sp/>MCAST::SmearingType::QoverPt<sp/>)<sp/>outPtMS<sp/>=<sp/>(<sp/>tmpDelta<sp/>==<sp/>0<sp/>)<sp/>?<sp/>MCAST_MAX_PT<sp/>:<sp/>outPtMS<sp/>/<sp/>tmpDelta;</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Double-Checking<sp/>outPtMS<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>outPtMS<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>at<sp/>second...&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//outPtMS<sp/>=<sp/>ScaleApply(<sp/>fabs(<sp/>outPtMS<sp/>),<sp/>s1_MS,<sp/>s2_MS,<sp/>scaleMS,<sp/>enLossCorrMS<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/>outPtMS<sp/>=<sp/>ScaleApply(<sp/>fabs(<sp/>outPtMS<sp/>),<sp/>scaleMS,<sp/>enLossCorrMS<sp/>);</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Double-Checking<sp/>outPtMS<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>outPtMS<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>at<sp/>third...&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_Trel<sp/>&gt;=<sp/>MCAST::Release::Rel17_2_Sum13<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_Tsmear<sp/>==<sp/>MCAST::SmearingType::Pt<sp/>)<sp/><sp/>outPtMS<sp/>=<sp/>outPtMS<sp/>*<sp/>tmpDelta;</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_Tsmear<sp/>==<sp/>MCAST::SmearingType::QoverPt<sp/>)<sp/>outPtMS<sp/>=<sp/>(<sp/>tmpDelta<sp/>==<sp/>0<sp/>)<sp/>?<sp/>MCAST_MAX_PT<sp/>:<sp/>outPtMS<sp/>/<sp/>tmpDelta;</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Double-Checking<sp/>outPtMS<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>outPtMS<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>at<sp/>fourth...&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outPtMS;</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>DetType<sp/>==<sp/>MCAST::DetectorType::CB<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<sp/>inSmearID<sp/>)<sp/>!=<sp/>DEFAULT_INIT_VAL<sp/>&amp;&amp;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<sp/>inSmearMS<sp/>)<sp/>!=<sp/>DEFAULT_INIT_VAL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpDelta<sp/>=<sp/>1.<sp/>+<sp/>inSmearID<sp/>*<sp/>m_weightID<sp/>+<sp/>inSmearMS<sp/>*<sp/>m_weightMS;</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<sp/>inSmearID<sp/>)<sp/>==<sp/>DEFAULT_INIT_VAL<sp/>&amp;&amp;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<sp/>inSmearMS<sp/>)<sp/>==<sp/>DEFAULT_INIT_VAL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpDelta<sp/>=<sp/>1.<sp/>+<sp/>m_smearDeltaCB;</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//In<sp/>these<sp/>releases<sp/>the<sp/>smearing<sp/>was<sp/>applied<sp/>to<sp/>the<sp/>pt<sp/>before<sp/>the<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_Trel<sp/>&lt;<sp/>MCAST::Release::Rel17_2_Sum13<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_Tsmear<sp/>==<sp/>MCAST::SmearingType::Pt<sp/>)<sp/><sp/>outPtCB<sp/>=<sp/>outPtCB<sp/>*<sp/>tmpDelta;</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_Tsmear<sp/>==<sp/>MCAST::SmearingType::QoverPt<sp/>)<sp/>outPtCB<sp/>=<sp/>(<sp/>tmpDelta<sp/>==<sp/>0<sp/>)<sp/>?<sp/>MCAST_MAX_PT<sp/>:<sp/>outPtCB<sp/>/<sp/>tmpDelta;</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//outPtCB<sp/>=<sp/>ScaleApply(<sp/>fabs(<sp/>outPtCB<sp/>),<sp/>s1_CB,<sp/>s2_CB,<sp/>scaleCB<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/>outPtCB<sp/>=<sp/>ScaleApply(<sp/>fabs(<sp/>outPtCB<sp/>),<sp/>scaleCB<sp/>);</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_Trel<sp/>&gt;=<sp/>MCAST::Release::Rel17_2_Sum13<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_Tsmear<sp/>==<sp/>MCAST::SmearingType::Pt<sp/>)<sp/><sp/>outPtCB<sp/>=<sp/>outPtCB<sp/>*<sp/>tmpDelta;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_Tsmear<sp/>==<sp/>MCAST::SmearingType::QoverPt<sp/>)<sp/>outPtCB<sp/>=<sp/>(<sp/>tmpDelta<sp/>==<sp/>0<sp/>)<sp/>?<sp/>MCAST_MAX_PT<sp/>:<sp/>outPtCB<sp/>/<sp/>tmpDelta;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outPtCB;</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.;</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal">StatusCode<sp/>MuonCalibrationAndSmearingTool::FillValues()<sp/>{</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/>Clean();</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tmpval;</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/>std::string<sp/>tmpname;</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/>std::ifstream<sp/>InValues;</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Retrieving<sp/>scale<sp/>corrections!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/>std::string<sp/>scale_val;</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Check<sp/>if<sp/>FilesPath<sp/>defined:<sp/>if<sp/>so<sp/>override<sp/>other<sp/>configurations<sp/>(advanced<sp/>user<sp/>setting,<sp/>for<sp/>debugging<sp/>within<sp/>MCP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_FilesPath<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_Trel<sp/>&gt;=<sp/>MCAST::Release::PreRec<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scale_val<sp/>=<sp/>PathResolverFindCalibFile(<sp/></highlight><highlight class="stringliteral">&quot;MuonMomentumCorrections/Scale_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_algo<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_year<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_release<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.dat&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_year<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Data11&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>m_Trel<sp/>&gt;=<sp/>MCAST::Release::Rel17_2_Sum13<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scale_val<sp/>=<sp/>PathResolverFindCalibFile(<sp/></highlight><highlight class="stringliteral">&quot;MuonMomentumCorrections/Data11_Scale_values_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_algo<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_release<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.dat&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scale_val<sp/>=<sp/>PathResolverFindCalibFile(<sp/></highlight><highlight class="stringliteral">&quot;MuonMomentumCorrections/Scale_values_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_algo<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_release<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.dat&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/>scale_val<sp/>=<sp/>m_FilesPath<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Scale_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_algo<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_year<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_release<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.dat&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if<sp/>(<sp/>m_Trel<sp/>&gt;=<sp/>MCAST::Release::PreRec<sp/>)<sp/>scale_val<sp/>=<sp/>&quot;Scales_Test.dat&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG(<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>Files<sp/>-<sp/>Scales:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>scale_val<sp/>);</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/>InValues.open(<sp/>scale_val.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!InValues.good()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>scale_val<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>not<sp/>found!!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>InValues.good()<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>m_nb_regions<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpval<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>i<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getline(<sp/>InValues,<sp/>tmpname<sp/>);</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_Trel<sp/>&gt;=<sp/>MCAST::Release::Rel17_2_Sum13<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//These<sp/>have<sp/>a<sp/>different<sp/>order<sp/>and<sp/>Up/Dw<sp/>split<sp/>sys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_scale_ID.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_enLoss_MS.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_scale_MS.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_scaleSystUp_ID.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_enLossSystUp_MS.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_scaleSystUp_MS.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_scaleSystDw_ID.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_enLossSystDw_MS.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_scaleSystDw_MS.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_enLoss_MS.push_back(<sp/>0.<sp/>);</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_enLossSyst_MS.push_back(<sp/>0.<sp/>);</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_scale_ID.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_scaleSyst_ID.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_scale_MS.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_scaleSyst_MS.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//CB<sp/>is<sp/>always<sp/>on<sp/>the<sp/>cfg<sp/>file<sp/>although<sp/>rarely<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_scale_CB.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_scaleSyst_CB.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/>InValues.close();</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/>InValues.clear();</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Retrieving<sp/>data<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/>std::string<sp/>data_val;</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Check<sp/>if<sp/>FilesPath<sp/>defined:<sp/>if<sp/>so<sp/>override<sp/>other<sp/>configurations<sp/>(advanced<sp/>user<sp/>setting,<sp/>for<sp/>debugging<sp/>within<sp/>MCP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_FilesPath<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_Trel<sp/>&gt;=<sp/>MCAST::Release::PreRec<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data_val<sp/>=<sp/>PathResolverFindCalibFile(<sp/></highlight><highlight class="stringliteral">&quot;MuonMomentumCorrections/Smearing_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_algo<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_year<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_release<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.dat&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data_val<sp/>=<sp/>PathResolverFindCalibFile(<sp/></highlight><highlight class="stringliteral">&quot;MuonMomentumCorrections/&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_year<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_values_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_algo<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_release<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.dat&quot;</highlight><highlight class="normal"><sp/>);<sp/></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/>data_val<sp/>=<sp/>m_FilesPath<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Smearing_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_algo<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_year<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_release<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.dat&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if<sp/>(<sp/>m_Trel<sp/>&gt;=<sp/>MCAST::Release::Test<sp/>)<sp/>data_val<sp/>=<sp/>&quot;Smearings_Test.dat&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG(<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>Files<sp/>-<sp/>Data:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>data_val<sp/>);</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/>InValues.open(<sp/>data_val.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!InValues.good()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>data_val<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>not<sp/>found!!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>InValues.good()<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>m_nb_regions<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpval<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>i<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getline(<sp/>InValues,tmpname<sp/>);</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_p1_ID.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_p2_ID.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_p2_ID_TAN.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_Trel<sp/>&gt;=<sp/>MCAST::Release::Rel17_2_Sum13<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p0_MS.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p0_MS.push_back(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_p1_MS.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_p2_MS.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Syst<sp/>and<sp/>stat<sp/>uncertianties:<sp/>they<sp/>are<sp/>split<sp/>and<sp/>symmetrized<sp/>before<sp/>Rel17.2Sum13,<sp/>after</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that,<sp/>the<sp/>stat<sp/>is<sp/>added<sp/>in<sp/>^2<sp/>and<sp/>they<sp/>are<sp/>split<sp/>in<sp/>Up/Dw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_Trel<sp/>&gt;=<sp/>MCAST::Release::Rel17_2_Sum13<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_SUp_p1_ID.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_SUp_p2_ID.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_SUp_p2_ID_TAN.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_SUp_p0_MS.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_SUp_p1_MS.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_SUp_p2_MS.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_SDw_p1_ID.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_SDw_p2_ID.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_SDw_p2_ID_TAN.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_SDw_p0_MS.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_SDw_p1_MS.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_SDw_p2_MS.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_E_p0_MS.push_back(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_S_p0_MS.push_back(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Stat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_E_p1_ID.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_E_p2_ID.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_E_p2_ID_TAN.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_E_p1_MS.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_E_p2_MS.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*systematic*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_S_p1_ID.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_S_p2_ID.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_S_p2_ID_TAN.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_S_p1_MS.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_S_p2_MS.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/>InValues.close();</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/>InValues.clear();</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Retrieving<sp/>MC<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/>std::string<sp/>mc_val;</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Check<sp/>if<sp/>FilesPath<sp/>defined:<sp/>if<sp/>so<sp/>override<sp/>other<sp/>configurations<sp/>(advanced<sp/>user<sp/>setting,<sp/>for<sp/>debugging<sp/>within<sp/>MCP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_FilesPath<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_Trel<sp/>&gt;=<sp/>MCAST::Release::PreRec<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mc_val<sp/>=<sp/>PathResolverFindCalibFile(<sp/></highlight><highlight class="stringliteral">&quot;MuonMomentumCorrections/MC_values_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_algo<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_year<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_release<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.dat&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_Trel<sp/>&gt;=<sp/>MCAST::Release::PreRec<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mc_val<sp/>=<sp/>PathResolverFindCalibFile(<sp/></highlight><highlight class="stringliteral">&quot;MuonMomentumCorrections/MC_values_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_algo<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_Rel17.2Sum13.dat&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mc_val<sp/>=<sp/>PathResolverFindCalibFile(<sp/></highlight><highlight class="stringliteral">&quot;MuonMomentumCorrections/MC_values_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_algo<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_release<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.dat&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/>mc_val<sp/>=<sp/>m_FilesPath<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;MC_values_&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_algo<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_Rel17.2Sum13.dat&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/>ATH_MSG_DEBUG(<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>Files<sp/>-<sp/>MC:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mc_val<sp/>);</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/>InValues.open(<sp/>mc_val.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!InValues.good()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mc_val<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>not<sp/>found!!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>InValues.good()<sp/>&amp;&amp;<sp/>i&lt;m_nb_regions<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpval<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>i<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getline(<sp/>InValues,tmpname<sp/>);</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_MC_p1_ID.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_MC_p2_ID.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_MC_p2_ID_TAN.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_MC_p0_MS.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_MC_p1_MS.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>InValues&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_MC_p2_MS.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/>InValues.close();</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/>InValues.clear();</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"></highlight></codeline>
<codeline lineno="1739"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MuonCalibrationAndSmearingTool::GetScaleRegion(<sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1" kindref="compound">xAOD::Muon</ref>&amp;<sp/>mu<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_scaleBins.empty()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min<sp/>=<sp/>m_scaleBins[0];</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max<sp/>=<sp/>m_scaleBins[m_scaleBins.size()-1];</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a9e1ec26e1cfde09690d8305e80877157" kindref="member" tooltip="The pseudorapidity () of the particle.">eta</ref>()&lt;min<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a9e1ec26e1cfde09690d8305e80877157" kindref="member" tooltip="The pseudorapidity () of the particle.">eta</ref>()&gt;=max<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_scaleBins.size()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"></highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;::iterator<sp/>lb<sp/>=<sp/>lower_bound(<sp/>m_scaleBins.begin(),m_scaleBins.end(),mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a9e1ec26e1cfde09690d8305e80877157" kindref="member" tooltip="The pseudorapidity () of the particle.">eta</ref>()+1e-9<sp/>);<sp/></highlight><highlight class="comment">//<sp/>[first,last)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/>std::min(<sp/>static_cast&lt;int&gt;(<sp/><ref refid="da/d8a/namespaceAmg_1abdeeee38def6888fed4ea2c380f01e8d" kindref="member">distance</ref>(<sp/>m_scaleBins.begin(),lb<sp/>)<sp/>)<sp/>,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>m_scaleBins.size()-1<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"></highlight></codeline>
<codeline lineno="1758"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MuonCalibrationAndSmearingTool::GetSmearing(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DetType,<sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1" kindref="compound">xAOD::Muon</ref>&amp;<sp/>mu<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useTan2<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_Trel<sp/>&gt;=<sp/>MCAST::Release::PreRec<sp/>&amp;&amp;<sp/>m_Trel<sp/>&lt;<sp/>MCAST::Release::Rec_2015_11_15<sp/>)<sp/>useTan2<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_detRegion<sp/>&lt;<sp/>0<sp/>||<sp/>m_detRegion<sp/>&gt;=<sp/>m_nb_regions<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//++++++<sp/>HOW<sp/>TO<sp/>IMPROVE<sp/>THIS<sp/>CHECK?!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>smear<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>DetType<sp/>==<sp/>MCAST::DetectorType::MS<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_ptms<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.;</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>smear<sp/>=<sp/>m_p0_MS[m_detRegion]*m_g0/m_ptms<sp/>+<sp/>m_p1_MS[m_detRegion]*m_g1<sp/>+<sp/>m_p2_MS[m_detRegion]*m_g2*m_ptms;</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>smear;</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>DetType<sp/>==<sp/>MCAST::DetectorType::ID<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_Trel<sp/>&gt;=<sp/>MCAST::Release::Rec_2015_11_15<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>additional_weight<sp/>=<sp/>1.;</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;mu.eta()<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a9e1ec26e1cfde09690d8305e80877157" kindref="member" tooltip="The pseudorapidity () of the particle.">eta</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/><sp/>abs(<sp/>mu.eta()<sp/>)<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::abs(<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a9e1ec26e1cfde09690d8305e80877157" kindref="member" tooltip="The pseudorapidity () of the particle.">eta</ref>()<sp/>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/><sp/>fabs(<sp/>mu.eta()<sp/>)<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fabs(<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a9e1ec26e1cfde09690d8305e80877157" kindref="member" tooltip="The pseudorapidity () of the particle.">eta</ref>()<sp/>)<sp/>);<sp/><sp/></highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Case<sp/>0:<sp/>useTan2<sp/>&amp;&amp;<sp/>abs(<sp/>mu.eta()<sp/>)<sp/>&gt;<sp/>2<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>useTan2<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&amp;&amp;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(<sp/>std::abs(<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a9e1ec26e1cfde09690d8305e80877157" kindref="member" tooltip="The pseudorapidity () of the particle.">eta</ref>()<sp/>)<sp/>&gt;<sp/>2<sp/>)<sp/>);<sp/><sp/></highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>useTan2<sp/>&amp;&amp;<sp/>fabs(<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a9e1ec26e1cfde09690d8305e80877157" kindref="member" tooltip="The pseudorapidity () of the particle.">eta</ref>()<sp/>)<sp/>&gt;<sp/>2<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Case<sp/>1:<sp/>Using<sp/>p1ID<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_p1_ID[m_detRegion]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>p2ID<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_p2_ID[m_detRegion]<sp/>);</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>additional_weight<sp/>=<sp/>sinh(<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a9e1ec26e1cfde09690d8305e80877157" kindref="member" tooltip="The pseudorapidity () of the particle.">eta</ref>()<sp/>)<sp/>*<sp/>sinh(<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a9e1ec26e1cfde09690d8305e80877157" kindref="member" tooltip="The pseudorapidity () of the particle.">eta</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Case<sp/>2:<sp/>Using<sp/>p1ID<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_p1_ID[m_detRegion]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>p2ID<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_p2_ID[m_detRegion]<sp/>);</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>smear<sp/>=<sp/>m_p1_ID[m_detRegion]*m_g3<sp/>+<sp/>m_p2_ID[m_detRegion]*m_g4*m_ptid*additional_weight;</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>smear;</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>useTan2<sp/>&amp;&amp;<sp/>m_p2_ID_TAN[m_detRegion]<sp/>!=<sp/>0.<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Case<sp/>3:<sp/>Using<sp/>p1ID<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_p1_ID[m_detRegion]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>p2ID<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_p2_ID[m_detRegion]<sp/>);</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smear<sp/>=<sp/>m_p1_ID[m_detRegion]*m_g3<sp/>+<sp/>m_p2_ID_TAN[m_detRegion]*m_g4*m_ptid*sinh(<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a9e1ec26e1cfde09690d8305e80877157" kindref="member" tooltip="The pseudorapidity () of the particle.">eta</ref>()<sp/>)*sinh(<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a9e1ec26e1cfde09690d8305e80877157" kindref="member" tooltip="The pseudorapidity () of the particle.">eta</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>smear;</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Case<sp/>4:<sp/>Using<sp/>p1ID<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_p1_ID[m_detRegion]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>p2ID<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_p2_ID[m_detRegion]<sp/>);</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smear<sp/>=<sp/>m_p1_ID[m_detRegion]*m_g3<sp/>+<sp/>m_p2_ID[m_detRegion]*m_g4*m_ptid;</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>smear;</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(<sp/></highlight><highlight class="stringliteral">&quot;<sp/>DetType<sp/>not<sp/>defined<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;DetType<sp/>);</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.;</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"></highlight></codeline>
<codeline lineno="1804"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"></highlight></codeline>
<codeline lineno="1806"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MuonCalibrationAndSmearingTool::CalcCBWeights(<sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1" kindref="compound">xAOD::Muon</ref>&amp;<sp/>mu<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Calculate<sp/>the<sp/>weights<sp/>of<sp/>ID<sp/>and<sp/>MS<sp/>used<sp/>for<sp/>CB.<sp/>Two<sp/>ways<sp/>are<sp/>implemented:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>weight<sp/>by<sp/>^2<sp/>of<sp/>exp<sp/>reso</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>from<sp/>equation<sp/>pT_CB<sp/>=<sp/>R(pT_ID)<sp/>+<sp/>(1-R)(pT_MS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//(weights<sp/>should<sp/>be<sp/>correctly<sp/>normalized)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/>m_weightID<sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/>m_weightMS<sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_detRegion<sp/>&lt;<sp/>0<sp/>||<sp/>m_detRegion<sp/>&gt;=<sp/>m_nb_regions<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_ptcb<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(<sp/></highlight><highlight class="stringliteral">&quot;Combined<sp/>Pt<sp/>=<sp/>0&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>doNotAddSmearing<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>SigmaMS<sp/>=<sp/>ExpectedResolution(<sp/>MCAST::DetectorType::MS,<sp/>mu,<sp/>doNotAddSmearing<sp/>);</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>SigmaID<sp/>=<sp/>ExpectedResolution(<sp/>MCAST::DetectorType::ID,<sp/>mu,<sp/>doNotAddSmearing<sp/>);</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Nsigma<sp/>=<sp/>m_useNsigmaForICombine;</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>fabs(<sp/>m_ptcb<sp/>-<sp/>m_ptms<sp/>)<sp/>&gt;<sp/>Nsigma<sp/>*<sp/>SigmaMS<sp/>*<sp/>m_ptcb<sp/>||<sp/>fabs(<sp/>m_ptcb<sp/>-<sp/>m_ptid<sp/>)<sp/>&gt;<sp/>Nsigma<sp/>*<sp/>SigmaID<sp/>*<sp/>m_ptcb<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d8/df7/structR" kindref="compound">R</ref>=1,<sp/>Rplus;</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>fabs(<sp/>m_ptcb-m_ptms<sp/>)<sp/>==<sp/>fabs(<sp/>m_ptcb<sp/>-<sp/>m_ptid<sp/>)<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//This<sp/>case<sp/>returns<sp/>weightID<sp/>=<sp/>weightMS<sp/>=<sp/>0.5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>fabs(<sp/>m_ptcb-m_ptms<sp/>)<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>fabs(<sp/>m_ptcb-m_ptms<sp/>)<sp/>&gt;<sp/>fabs(<sp/>m_ptcb-m_ptid<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>R<sp/>=<sp/>(<sp/>m_ptid<sp/>-<sp/>m_ptcb<sp/>)/(<sp/>m_ptcb<sp/>-<sp/>m_ptms<sp/>);<sp/></highlight><highlight class="comment">/*<sp/>R~wMS/wID<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Rplus<sp/>=<sp/>1<sp/>+<sp/>R;</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>Rplus<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>R<sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_weightID<sp/>=<sp/>1/Rplus;</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_weightMS<sp/>=<sp/>R/Rplus;</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>fabs(<sp/>m_ptcb-m_ptid<sp/>)<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>fabs(<sp/>m_ptcb-m_ptms<sp/>)<sp/>&lt;<sp/>fabs(<sp/>m_ptcb-m_ptid<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>R<sp/>=<sp/>(<sp/>m_ptms<sp/>-<sp/>m_ptcb<sp/>)/(<sp/>m_ptcb<sp/>-<sp/>m_ptid<sp/>);<sp/></highlight><highlight class="comment">/*<sp/>R~wID/wMS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Rplus<sp/>=<sp/>1<sp/>+<sp/>R;</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>Rplus<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>R<sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_weightID<sp/>=<sp/>R/Rplus;</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_weightMS<sp/>=<sp/>1/Rplus;</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"></highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>wMS<sp/>=<sp/>m_ptms/m_ptcb/pow(SigmaMS,2);</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>wID<sp/>=<sp/>m_ptid/m_ptcb/pow(SigmaID,2);</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/>m_weightID<sp/>=<sp/><sp/>wID/(wMS<sp/>+<sp/>wID);</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/>m_weightMS<sp/>=<sp/><sp/>wMS/(wMS<sp/>+<sp/>wID);</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"></highlight></codeline>
<codeline lineno="1852"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"></highlight></codeline>
<codeline lineno="1854"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MuonCalibrationAndSmearingTool::CleanScales()<sp/>{</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"></highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/>m_scaleBins.clear();</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"></highlight></codeline>
<codeline lineno="1858"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MuonCalibrationAndSmearingTool::expectedResolution(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>DetType,<sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1" kindref="compound">xAOD::Muon</ref>&amp;<sp/>mu,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mc<sp/><sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ExpectedResolution(DetType,mu,mc);</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MuonCalibrationAndSmearingTool::expectedResolution(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DetType,<sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1" kindref="compound">xAOD::Muon</ref>&amp;<sp/>mu,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mc<sp/><sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ExpectedResolution(DetType,mu,mc);</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MuonCalibrationAndSmearingTool::ExpectedResolution(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;DetType,<sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1" kindref="compound">xAOD::Muon</ref>&amp;<sp/>mu,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mc<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"></highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>DetType<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;MS&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ExpectedResolution(<sp/>MCAST::DetectorType::MS,<sp/>mu,<sp/>mc<sp/>);</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>DetType<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;ID&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ExpectedResolution(<sp/>MCAST::DetectorType::ID,<sp/>mu,<sp/>mc<sp/>);</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>DetType<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;CB&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ExpectedResolution(<sp/>MCAST::DetectorType::CB,<sp/>mu,<sp/>mc<sp/>);</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(<sp/></highlight><highlight class="stringliteral">&quot;wrong<sp/>DetType<sp/>in<sp/>input<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>DetType<sp/>);</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.;</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"></highlight></codeline>
<codeline lineno="1885"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MuonCalibrationAndSmearingTool::ExpectedResolution(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DetType,<ref refid="d2/d30/classxAOD_1_1Muon__v1" kindref="compound">xAOD::Muon</ref>&amp;<sp/>mu,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mc<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"></highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useTan2<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_detRegion&lt;0<sp/>||<sp/>m_detRegion&gt;=m_nb_regions<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>expRes<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>DetType<sp/>==<sp/>MCAST::DetectorType::MS<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_ptms<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1e12;</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p0<sp/>=<sp/>mc<sp/>?<sp/>m_MC_p0_MS[m_detRegion]<sp/>:<sp/>(<sp/>m_MC_p0_MS[m_detRegion]<sp/>+<sp/>m_p0_MS[m_detRegion]<sp/>);</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p1<sp/>=<sp/>mc<sp/>?<sp/>m_MC_p1_MS[m_detRegion]<sp/>:<sp/>(<sp/>m_MC_p1_MS[m_detRegion]<sp/>+<sp/>m_p1_MS[m_detRegion]<sp/>);</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p2<sp/>=<sp/>mc<sp/>?<sp/>m_MC_p2_MS[m_detRegion]<sp/>:<sp/>(<sp/>m_MC_p2_MS[m_detRegion]<sp/>+<sp/>m_p2_MS[m_detRegion]<sp/>);</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/>expRes<sp/>=<sp/><sp/>sqrt(<sp/>pow(<sp/>p0/m_ptms,<sp/>2<sp/>)<sp/>+<sp/>pow(<sp/>p1,<sp/>2<sp/>)<sp/>+<sp/>pow(<sp/>p2*m_ptms<sp/>,2<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>expRes;<sp/></highlight><highlight class="comment">//+++++No<sp/>SYS!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>DetType<sp/>==<sp/>MCAST::DetectorType::ID<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_ptid<sp/>==<sp/>0<sp/>)<sp/>ATH_MSG_DEBUG(<sp/></highlight><highlight class="stringliteral">&quot;ptid<sp/>==<sp/>0&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p1<sp/>=<sp/>mc<sp/>?<sp/>m_MC_p1_ID[m_detRegion]<sp/>:<sp/>(<sp/>m_MC_p1_ID[m_detRegion]<sp/>+<sp/>m_p1_ID[m_detRegion]<sp/>);</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p2<sp/>=<sp/>mc<sp/>?<sp/>m_MC_p2_ID[m_detRegion]<sp/>:<sp/>(<sp/>m_MC_p2_ID[m_detRegion]<sp/>+<sp/>m_p2_ID[m_detRegion]<sp/>);</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_MC_p2_ID_TAN[m_detRegion]<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>useTan2<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p2<sp/>=<sp/>mc<sp/>?<sp/>m_MC_p2_ID_TAN[m_detRegion]<sp/>:<sp/>(<sp/>m_MC_p2_ID_TAN[m_detRegion]<sp/>+<sp/>m_p2_ID_TAN[m_detRegion]<sp/>);</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p2<sp/>=<sp/>p2*sinh(<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a9e1ec26e1cfde09690d8305e80877157" kindref="member" tooltip="The pseudorapidity () of the particle.">eta</ref>()<sp/>)*sinh(<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a9e1ec26e1cfde09690d8305e80877157" kindref="member" tooltip="The pseudorapidity () of the particle.">eta</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/>expRes<sp/>=<sp/>sqrt(<sp/>pow(<sp/>p1,<sp/>2<sp/>)<sp/>+<sp/>pow(<sp/>p2*m_ptid<sp/>,2<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>expRes;<sp/></highlight><highlight class="comment">//+++++No<sp/>SYS!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>DetType<sp/>==<sp/>MCAST::DetectorType::CB<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Due<sp/>to<sp/>complicated<sp/>maths,<sp/>the<sp/>expected<sp/>combined<sp/>resolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>given<sp/>by<sp/>this<sp/>equation<sp/>(note:<sp/>all<sp/>sigmas<sp/>are<sp/>fractional<sp/>uncertainties):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sigma_CB<sp/>=<sp/>sqrt(2)<sp/>*<sp/>sigma_ID<sp/>*<sp/>sigma_MS<sp/>*<sp/>pTMS<sp/>*<sp/>pTID<sp/>/<sp/>{pTCB<sp/>*<sp/>sqrt({sigma_ID*pTID}^2<sp/>+<sp/>{sigma_MS*pTMS}^2)}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>a<sp/>little<sp/>recursive<sp/>calling<sp/>to<sp/>make<sp/>things<sp/>easier<sp/>to<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Turn<sp/>these<sp/>into<sp/>*absolute*<sp/>uncertainties<sp/>to<sp/>make<sp/>life<sp/>easier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigmaID<sp/>=<sp/>ExpectedResolution(<sp/>MCAST::DetectorType::ID,<sp/>mu,<sp/>mc<sp/>)<sp/>*<sp/>m_ptid;</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigmaMS<sp/>=<sp/>ExpectedResolution(<sp/>MCAST::DetectorType::MS,<sp/>mu,<sp/>mc<sp/>)<sp/>*<sp/>m_ptms;</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>denominator<sp/>=<sp/>(<sp/>m_ptcb<sp/>)<sp/>*<sp/>sqrt(<sp/>sigmaID*sigmaID<sp/>+<sp/>sigmaMS*sigmaMS<sp/>);</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>denominator<sp/>?<sp/>sqrt(<sp/>2.<sp/>)<sp/>*<sp/>sigmaID<sp/>*<sp/>sigmaMS<sp/>/<sp/>denominator<sp/>:<sp/>0.;</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(<sp/></highlight><highlight class="stringliteral">&quot;wrong<sp/>DetType<sp/>in<sp/>input<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;DetType<sp/>);</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.;</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"></highlight></codeline>
<codeline lineno="1926"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"></highlight></codeline>
<codeline lineno="1928"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MuonCalibrationAndSmearingTool::Clean()<sp/>{</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"></highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/>m_scale_ID.clear();</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/>m_enLoss_MS.clear();</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/>m_scale_MS.clear();</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/>m_scale_CB.clear();</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/>m_scaleSyst_ID.clear();</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/>m_enLossSyst_MS.clear();</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/>m_scaleSyst_MS.clear();</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/>m_scaleSyst_CB.clear();</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/>m_scaleSystUp_ID.clear();</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/>m_enLossSystUp_MS.clear();</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/>m_scaleSystUp_MS.clear();</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/>m_scaleSystDw_ID.clear();</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/>m_enLossSystDw_MS.clear();</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/>m_scaleSystDw_MS.clear();</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/>CleanScales();</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/>m_p1_ID.clear();</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/>m_p2_ID.clear();</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/>m_p2_ID_TAN.clear();</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/>m_p0_MS.clear();</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/>m_p1_MS.clear();</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/>m_p2_MS.clear();</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/>m_E_p1_ID.clear();</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/>m_E_p2_ID.clear();</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/>m_E_p2_ID_TAN.clear();</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/>m_E_p0_MS.clear();</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/>m_E_p1_MS.clear();</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/>m_E_p2_MS.clear();</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/>m_S_p1_ID.clear();</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/>m_S_p2_ID.clear();</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/>m_S_p2_ID_TAN.clear();</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/>m_S_p0_MS.clear();</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/>m_S_p1_MS.clear();</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/>m_S_p2_MS.clear();</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/>m_SUp_p1_ID.clear();</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/>m_SUp_p2_ID.clear();</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/>m_SUp_p2_ID_TAN.clear();</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/>m_SUp_p0_MS.clear();</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/>m_SUp_p1_MS.clear();</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/>m_SUp_p2_MS.clear();</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/>m_SDw_p1_ID.clear();</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/>m_SDw_p2_ID.clear();</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/>m_SDw_p2_ID_TAN.clear();</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/>m_SDw_p0_MS.clear();</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/>m_SDw_p1_MS.clear();</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/>m_SDw_p2_MS.clear();</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/>m_MC_p1_ID.clear();</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/>m_MC_p2_ID.clear();</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/>m_MC_p2_ID_TAN.clear();</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/>m_MC_p0_MS.clear();</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/>m_MC_p1_MS.clear();</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/>m_MC_p2_MS.clear();</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"></highlight></codeline>
<codeline lineno="1982"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"></highlight></codeline>
<codeline lineno="1984"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MuonCalibrationAndSmearingTool::PrintRegions()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"></highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_doMacroRegions<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>std::map&lt;int,<sp/>int&gt;::const_iterator<sp/>it<sp/>=<sp/>m_MacroRegionIdxMap.begin();<sp/>it!=m_MacroRegionIdxMap.end();<sp/>++it<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bReg<sp/>=<sp/>it-&gt;first,<sp/>mReg<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_INFO(<sp/></highlight><highlight class="stringliteral">&quot;Base<sp/>region<sp/>n<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;bReg<sp/>);</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_INFO(<sp/></highlight><highlight class="stringliteral">&quot;phi_min=&quot;</highlight><highlight class="normal">&lt;&lt;m_phi_min[bReg]&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>phi_max=&quot;</highlight><highlight class="normal">&lt;&lt;m_phi_max[bReg]<sp/>);</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_INFO(<sp/></highlight><highlight class="stringliteral">&quot;eta_min=&quot;</highlight><highlight class="normal">&lt;&lt;m_eta_min[bReg]&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>eta_max=&quot;</highlight><highlight class="normal">&lt;&lt;m_eta_max[bReg]<sp/>);</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_INFO(<sp/></highlight><highlight class="stringliteral">&quot;included<sp/>in<sp/>Macro<sp/>region<sp/>N<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;mReg&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>with<sp/>innerEta=&quot;</highlight><highlight class="normal">&lt;&lt;m_MacroRegionInnerEta[mReg]<sp/>);</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bReg=0;<sp/>bReg&lt;m_nb_regions;<sp/>++bReg<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_INFO(<sp/></highlight><highlight class="stringliteral">&quot;Base<sp/>region<sp/>n<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;bReg&lt;&lt;</highlight><highlight class="stringliteral">&quot;:<sp/>phi_min=&quot;</highlight><highlight class="normal">&lt;&lt;m_phi_min[bReg]&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>phi_max=&quot;</highlight><highlight class="normal">&lt;&lt;m_phi_max[bReg]<sp/>);</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_INFO(<sp/></highlight><highlight class="stringliteral">&quot;eta_min=&quot;</highlight><highlight class="normal">&lt;&lt;m_eta_min[bReg]&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>eta_max=&quot;</highlight><highlight class="normal">&lt;&lt;m_eta_max[bReg]<sp/>);</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"></highlight></codeline>
<codeline lineno="2002"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"></highlight></codeline>
<codeline lineno="2004"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MuonCalibrationAndSmearingTool::GetNRegions()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"></highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_doMacroRegions<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_MacroRegionName.size();</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_nb_regions;</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"></highlight></codeline>
<codeline lineno="2009"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"></highlight></codeline>
<codeline lineno="2011"><highlight class="normal">StatusCode<sp/>MuonCalibrationAndSmearingTool::Regions(<sp/>std::string<sp/>inRegionFile,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>doMacroRegionsFlag<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"></highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/>m_eta_min.clear();</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/>m_eta_max.clear();</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/>m_phi_min.clear();</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/>m_phi_max.clear();</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/>m_loadNames<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/>m_doMacroRegions<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/>std::string<sp/>tmpname;</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tmpval;</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/>std::ifstream<sp/>inFile(<sp/>inRegionFile.c_str()<sp/>);</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!inFile.good()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>not<sp/>good&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>!inFile.eof()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpval=0;</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpname=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>i==0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getline(<sp/>inFile,tmpname<sp/>);</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>if<sp/>I<sp/>am<sp/>loading<sp/>the<sp/>name<sp/>of<sp/>the<sp/>regions<sp/>in<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>tmpname.find(<sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>std::string::npos<sp/>&amp;&amp;<sp/>!m_loadNames<sp/>)<sp/>m_loadNames<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inFile&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>inFile.eof()<sp/>)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//this<sp/>will<sp/>break<sp/>immediatly<sp/>as<sp/>soon<sp/>as<sp/>the<sp/>new<sp/>line<sp/>is<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_eta_min.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inFile&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_eta_max.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inFile&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_phi_min.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inFile&gt;&gt;tmpval;</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_phi_max.push_back(<sp/>tmpval<sp/>);</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_loadNames<sp/>)<sp/>{<sp/></highlight><highlight class="comment">//Fill<sp/>the<sp/>name<sp/>vector<sp/>only<sp/>if<sp/>you<sp/>have<sp/>them!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inFile&gt;&gt;tmpname;</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_names.push_back(<sp/>tmpname<sp/>);</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/>inFile.close();</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/>m_nb_regions<sp/>=<sp/>(<sp/>int<sp/>)<sp/>m_eta_min.size();</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>doMacroRegionsFlag<sp/>)<sp/>{<sp/></highlight><highlight class="comment">//In<sp/>case<sp/>I<sp/>want<sp/>macroRegions,<sp/>I<sp/>need<sp/>to<sp/>define<sp/>the<sp/>criteria<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/>m_doMacroRegions<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>doMacroRegionsFlag<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Collects<sp/>all<sp/>the<sp/>Large<sp/>and<sp/>Small<sp/>sectors<sp/>if<sp/>they<sp/>belong<sp/>to<sp/>the<sp/>same<sp/>eta<sp/>bin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CollectMacroRegionsSL();</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Large,Small<sp/>sectors<sp/>split<sp/>plus<sp/>Feet(12+14)<sp/>and<sp/>11+15<sp/>sector<sp/>split<sp/>in<sp/>Barrel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CollectMacroRegionsSL_SplitBAR();</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Collects<sp/>all<sp/>the<sp/>Large<sp/>and<sp/>Small,<sp/>Up<sp/>and<sp/>Down<sp/>sectors<sp/>if<sp/>they<sp/>belong<sp/>to<sp/>the<sp/>same<sp/>eta<sp/>bin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CollectMacroRegionsSL_UpDn();</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Collects<sp/>all<sp/>the<sp/>Large<sp/>and<sp/>Small,<sp/>Up<sp/>and<sp/>Down<sp/>sectors<sp/>if<sp/>they<sp/>belong<sp/>to<sp/>the<sp/>same<sp/>eta<sp/>bin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CollectSectors();</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_ERROR(<sp/></highlight><highlight class="stringliteral">&quot;doMacroRegionFlag=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>doMacroRegionsFlag<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>not<sp/>defined!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::FAILURE;</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StatusCode::SUCCESS;</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"></highlight></codeline>
<codeline lineno="2082"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"></highlight></codeline>
<codeline lineno="2084"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MuonCalibrationAndSmearingTool::GetRegion(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phi<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"></highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;eta,phi<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>eta<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>phi<sp/>);</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret_k<sp/>=-1;</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=0;<sp/>k<sp/>&lt;<sp/>m_nb_regions;<sp/>++k<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>eta&gt;=m_eta_min[k]<sp/>&amp;&amp;<sp/>eta&lt;m_eta_max[k]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_phi_min[k]<sp/>&lt;=<sp/>m_phi_max[k]<sp/>)<sp/>{<sp/></highlight><highlight class="comment">//Standard<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>phi&gt;=m_phi_min[k]<sp/>&amp;&amp;<sp/>phi&lt;m_phi_max[k]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_k<sp/>=<sp/>k;</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/></highlight><highlight class="comment">//Circular<sp/>closure<sp/>of<sp/>Phi,<sp/>min<sp/>and<sp/>max<sp/>are<sp/>excanged<sp/>in<sp/>the<sp/>.dat<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>phi&gt;=m_phi_min[k]<sp/>||<sp/>phi&lt;m_phi_max[k]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_k<sp/>=<sp/>k;</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ret_k<sp/>==<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_DEBUG(<sp/></highlight><highlight class="stringliteral">&quot;Region<sp/>corresponding<sp/>to<sp/>Eta=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>eta<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>Phi=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>phi<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>NOT<sp/>FOUND!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_doMacroRegions<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;INDEX<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m_MacroRegionIdxMap.find(<sp/>ret_k<sp/>)-&gt;second<sp/>);</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_MacroRegionIdxMap.find(<sp/>ret_k<sp/>)-&gt;second;</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret_k;</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"></highlight></codeline>
<codeline lineno="2114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"></highlight></codeline>
<codeline lineno="2116"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>MuonCalibrationAndSmearingTool::GetRegionInnerEta(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r_i<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="comment">//Return<sp/>Eta<sp/>closer<sp/>to<sp/>the<sp/>origin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2117"><highlight class="normal"></highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_doMacroRegions<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>r_i&gt;=0<sp/>&amp;&amp;<sp/>r_i<sp/>&lt;<sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>)m_MacroRegionName.size()<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_MacroRegionInnerEta[r_i];</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>r_i<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>r_i<sp/>&lt;<sp/>m_nb_regions<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_eta_min[r_i]<sp/>&gt;=<sp/>0.<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_eta_min[r_i];</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_eta_max[r_i];</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//ATH_MSG_WARNING(<sp/>&quot;Region<sp/>Inner<sp/>Eta<sp/>corresponding<sp/>to<sp/>Region<sp/>index=&quot;<sp/>&lt;&lt;<sp/>r_i<sp/>&lt;&lt;<sp/>&quot;<sp/>NOT<sp/>FOUND!&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-999.;</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"></highlight></codeline>
<codeline lineno="2130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"></highlight></codeline>
<codeline lineno="2132"><highlight class="normal">std::string<sp/>MuonCalibrationAndSmearingTool::GetRegionName(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r_i<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"></highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_loadNames<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_doMacroRegions<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>r_i&gt;=0<sp/>&amp;&amp;<sp/>r_i<sp/>&lt;<sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>)m_MacroRegionName.size()<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_MacroRegionName[r_i];</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>r_i&gt;=0<sp/>&amp;&amp;<sp/>r_i<sp/>&lt;<sp/>m_nb_regions<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_names[r_i];</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(<sp/></highlight><highlight class="stringliteral">&quot;Region<sp/>Name<sp/>corresponding<sp/>to<sp/>Region<sp/>index=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>r_i<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>NOT<sp/>FOUND!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/>ATH_MSG_WARNING(<sp/></highlight><highlight class="stringliteral">&quot;Region<sp/>Names<sp/>are<sp/>not<sp/>set!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;NAN&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"></highlight></codeline>
<codeline lineno="2146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"></highlight></codeline>
<codeline lineno="2148"><highlight class="normal">std::string<sp/>MuonCalibrationAndSmearingTool::GetRegionName(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eta,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phi<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"></highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_loadNames<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetRegionName(<sp/>GetRegion(<sp/>eta,<sp/>phi<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/>ATH_MSG_WARNING(<sp/></highlight><highlight class="stringliteral">&quot;Region<sp/>Names<sp/>are<sp/>not<sp/>set!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;NAN&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"></highlight></codeline>
<codeline lineno="2154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"></highlight></codeline>
<codeline lineno="2156"><highlight class="normal"></highlight><highlight class="comment">//Collects<sp/>all<sp/>the<sp/>Large<sp/>and<sp/>Small<sp/>sectors<sp/>if<sp/>they<sp/>belong<sp/>to<sp/>the<sp/>same<sp/>eta<sp/>bin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2157"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MuonCalibrationAndSmearingTool::CollectMacroRegionsSL()<sp/>{</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"></highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>etaMin<sp/>=<sp/>-999.,<sp/>etaMax<sp/>=<sp/>-999.;</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>macroRegionIdx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=0;<sp/>k<sp/>&lt;<sp/>m_nb_regions;<sp/>++k<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>etaMin<sp/>!=<sp/>m_eta_min[k]<sp/>||<sp/>etaMax<sp/>!=m_eta_max[k]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Build<sp/>a<sp/>new<sp/>macroRegion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>etaMin<sp/>=<sp/>m_eta_min[k];</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>etaMax<sp/>=<sp/>m_eta_max[k];</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//One<sp/>of<sp/>the<sp/>following<sp/>is<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>macroRegName<sp/>=<sp/>m_names[k].substr(<sp/>0,<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;EL&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>macroRegName<sp/>=<sp/>macroRegName.substr(<sp/>0,<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;BL&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>macroRegName<sp/>=<sp/>macroRegName.substr(<sp/>0,<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;ES&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>macroRegName<sp/>=<sp/>macroRegName.substr(<sp/>0,<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;BS&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_MacroRegionName.push_back(<sp/>macroRegName+</highlight><highlight class="stringliteral">&quot;Large&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_MacroRegionName.push_back(<sp/>macroRegName+</highlight><highlight class="stringliteral">&quot;Small&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//insert<sp/>twice<sp/>the<sp/>innerEta,<sp/>for<sp/>Large<sp/>and<sp/>for<sp/>Small<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;2;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>etaMin<sp/>&gt;=<sp/>0.<sp/>)<sp/>m_MacroRegionInnerEta.push_back(<sp/>etaMin<sp/>);</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_MacroRegionInnerEta.push_back(<sp/>etaMax<sp/>);</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>macroRegionIdx+=2;</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;EL&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>std::string::npos<sp/>||<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;BL&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>std::string::npos<sp/>)</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_MacroRegionIdxMap[k]<sp/>=<sp/>macroRegionIdx-2;</highlight><highlight class="comment">//Large<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;ES&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>std::string::npos<sp/>||<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;BS&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>std::string::npos<sp/>)</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_MacroRegionIdxMap[k]<sp/>=<sp/>macroRegionIdx-1;</highlight><highlight class="comment">//Small<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"></highlight></codeline>
<codeline lineno="2187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"></highlight></codeline>
<codeline lineno="2189"><highlight class="normal"></highlight><highlight class="comment">//Collects<sp/>all<sp/>the<sp/>Large<sp/>and<sp/>Small<sp/>sectors<sp/>if<sp/>they<sp/>belong<sp/>to<sp/>the<sp/>same<sp/>eta<sp/>bin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2190"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MuonCalibrationAndSmearingTool::CollectSectors()<sp/>{</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"></highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>etaMin<sp/>=<sp/>-999.,<sp/>etaMax<sp/>=<sp/>-999.;</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>macroRegionIdx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=0;<sp/>k<sp/>&lt;<sp/>m_nb_regions;<sp/>++k<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>etaMin<sp/>!=<sp/>m_eta_min[k]<sp/>||<sp/>etaMax<sp/>!=m_eta_max[k]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Build<sp/>a<sp/>new<sp/>macroRegion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>etaMin<sp/>=<sp/>m_eta_min[k];</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>etaMax<sp/>=<sp/>m_eta_max[k];</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//One<sp/>of<sp/>the<sp/>following<sp/>is<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>macroRegName<sp/>=<sp/>m_names[k].substr(<sp/>0,<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;EL&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>macroRegName<sp/>=<sp/>macroRegName.substr(<sp/>0,<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;BL&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>macroRegName<sp/>=<sp/>macroRegName.substr(<sp/>0,<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;ES&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>macroRegName<sp/>=<sp/>macroRegName.substr(<sp/>0,<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;BS&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_MacroRegionName.push_back(<sp/>macroRegName+</highlight><highlight class="stringliteral">&quot;LargeDn&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_MacroRegionName.push_back(<sp/>macroRegName+</highlight><highlight class="stringliteral">&quot;SmallDn&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_MacroRegionName.push_back(<sp/>macroRegName+</highlight><highlight class="stringliteral">&quot;LargeUp&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_MacroRegionName.push_back(<sp/>macroRegName+</highlight><highlight class="stringliteral">&quot;SmallUp&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//insert<sp/>4<sp/>time<sp/>the<sp/>innerEta,<sp/>for<sp/>Large<sp/>and<sp/>Small<sp/>sectors<sp/>times<sp/>Up<sp/>and<sp/>Dn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;4;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>etaMin<sp/>&gt;=<sp/>0.<sp/>)<sp/>m_MacroRegionInnerEta.push_back(<sp/>etaMin<sp/>);</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_MacroRegionInnerEta.push_back(<sp/>etaMax<sp/>);</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>macroRegionIdx+=4;</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;EL&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>std::string::npos<sp/>||<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;BL&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>std::string::npos<sp/>)<sp/>{<sp/></highlight><highlight class="comment">//Large<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;11&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>std::string::npos<sp/>||<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;13&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>std::string::npos<sp/>||</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;15&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>std::string::npos<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_MacroRegionIdxMap[k]<sp/>=<sp/>macroRegionIdx-4;</highlight><highlight class="comment">//Down<sp/>Large<sp/>sectors<sp/>(within<sp/>10<sp/>to<sp/>16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_MacroRegionIdxMap[k]<sp/>=<sp/>macroRegionIdx-2;<sp/></highlight><highlight class="comment">//Up,<sp/>large<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;ES&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>std::string::npos<sp/>||<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;BS&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>std::string::npos<sp/>)<sp/>{<sp/></highlight><highlight class="comment">//Small<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;10&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>std::string::npos<sp/>||<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;12&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>std::string::npos<sp/>||</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;14&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>std::string::npos<sp/>||<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;16&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>std::string::npos<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_MacroRegionIdxMap[k]<sp/>=<sp/>macroRegionIdx-3;<sp/></highlight><highlight class="comment">//Down<sp/>Small<sp/>sectors<sp/>(from<sp/>10<sp/>to<sp/>16).<sp/>Should<sp/>I<sp/>remove<sp/>10<sp/>and<sp/>16?<sp/>++++++</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_MacroRegionIdxMap[k]<sp/>=<sp/>macroRegionIdx-1;<sp/>;<sp/></highlight><highlight class="comment">//Up,<sp/>Small<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"></highlight></codeline>
<codeline lineno="2236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"></highlight></codeline>
<codeline lineno="2238"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MuonCalibrationAndSmearingTool::CollectMacroRegionsSL_UpDn()<sp/>{</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"></highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>etaMin<sp/>=<sp/>-999.,<sp/>etaMax<sp/>=<sp/>-999.;</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>macroRegionIdx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=0;<sp/>k<sp/>&lt;<sp/>m_nb_regions;<sp/>++k<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>etaMin<sp/>!=<sp/>m_eta_min[k]<sp/>||<sp/>etaMax<sp/>!=m_eta_max[k]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Build<sp/>a<sp/>new<sp/>macroRegion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>etaMin<sp/>=<sp/>m_eta_min[k];</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>etaMax<sp/>=<sp/>m_eta_max[k];</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//One<sp/>of<sp/>the<sp/>following<sp/>is<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>macroRegName<sp/>=<sp/>m_names[k].substr(<sp/>0,<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;EL&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>macroRegName<sp/>=<sp/>macroRegName.substr(<sp/>0,<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;BL&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>macroRegName<sp/>=<sp/>macroRegName.substr(<sp/>0,<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;ES&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>macroRegName<sp/>=<sp/>macroRegName.substr(<sp/>0,<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;BS&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_MacroRegionName.push_back(<sp/>macroRegName+</highlight><highlight class="stringliteral">&quot;LargeDn&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_MacroRegionName.push_back(<sp/>macroRegName+</highlight><highlight class="stringliteral">&quot;SmallDn&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_MacroRegionName.push_back(<sp/>macroRegName+</highlight><highlight class="stringliteral">&quot;LargeUp&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_MacroRegionName.push_back(<sp/>macroRegName+</highlight><highlight class="stringliteral">&quot;SmallUp&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//insert<sp/>4<sp/>time<sp/>the<sp/>innerEta,<sp/>for<sp/>Large<sp/>and<sp/>Small<sp/>sectors<sp/>times<sp/>Up<sp/>and<sp/>Dn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;4;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>etaMin<sp/>&gt;=<sp/>0.<sp/>)<sp/>m_MacroRegionInnerEta.push_back(<sp/>etaMin<sp/>);</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_MacroRegionInnerEta.push_back(<sp/>etaMax<sp/>);</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>macroRegionIdx+=4;</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;EL&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>std::string::npos<sp/>||<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;BL&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>std::string::npos<sp/>)<sp/>{<sp/></highlight><highlight class="comment">//Large<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;11&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>std::string::npos<sp/>||<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;13&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>std::string::npos<sp/>||</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;15&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>std::string::npos<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_MacroRegionIdxMap[k]<sp/>=<sp/>macroRegionIdx-4;</highlight><highlight class="comment">//Down<sp/>Large<sp/>sectors<sp/>(within<sp/>10<sp/>to<sp/>16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_MacroRegionIdxMap[k]<sp/>=<sp/>macroRegionIdx-2;<sp/></highlight><highlight class="comment">//Up,<sp/>large<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;ES&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>std::string::npos<sp/>||<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;BS&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>std::string::npos<sp/>)<sp/>{<sp/></highlight><highlight class="comment">//Small<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;10&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>std::string::npos<sp/>||<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;12&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>std::string::npos<sp/>||</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;14&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>std::string::npos<sp/>||<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;16&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>std::string::npos<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_MacroRegionIdxMap[k]<sp/>=<sp/>macroRegionIdx-3;<sp/></highlight><highlight class="comment">//Down<sp/>Small<sp/>sectors<sp/>(from<sp/>10<sp/>to<sp/>16).<sp/>Should<sp/>I<sp/>remove<sp/>10<sp/>and<sp/>16?<sp/>++++++</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_MacroRegionIdxMap[k]<sp/>=<sp/>macroRegionIdx-1;<sp/>;<sp/></highlight><highlight class="comment">//Up,<sp/>Small<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"></highlight></codeline>
<codeline lineno="2284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"></highlight></codeline>
<codeline lineno="2286"><highlight class="normal"></highlight><highlight class="comment">//Collects<sp/>all<sp/>the<sp/>Large<sp/>and<sp/>Small<sp/>sectors<sp/>if<sp/>they<sp/>belong<sp/>to<sp/>the<sp/>same<sp/>eta<sp/>bin<sp/>and<sp/>splits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2287"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>barrel<sp/>12,14<sp/>smalls<sp/>and<sp/>11+15<sp/>larges<sp/>that<sp/>may<sp/>need<sp/>different<sp/>calibrations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2288"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MuonCalibrationAndSmearingTool::CollectMacroRegionsSL_SplitBAR()<sp/>{</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"></highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>etaMin<sp/>=<sp/>-999.,<sp/>etaMax<sp/>=<sp/>-999.;</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>macroRegionIdx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=0;<sp/>k<sp/>&lt;<sp/>m_nb_regions;<sp/>++k<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>etaMin<sp/>!=<sp/>m_eta_min[k]<sp/>||<sp/>etaMax<sp/>!=m_eta_max[k]<sp/>)<sp/>{<sp/></highlight><highlight class="comment">//Build<sp/>a<sp/>new<sp/>macroRegion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>etaMin<sp/>=<sp/>m_eta_min[k];</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>etaMax<sp/>=<sp/>m_eta_max[k];</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>macroRegName<sp/>=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;EL&quot;</highlight><highlight class="normal"><sp/>)!=<sp/>std::string::npos<sp/>||<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;ES&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>std::string::npos<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//We<sp/>are<sp/>in<sp/>the<sp/>End-Cap<sp/>sectors<sp/>so<sp/>we<sp/>split<sp/>only<sp/>Large<sp/>and<sp/>Small<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>macroRegName<sp/>=<sp/>m_names[k].substr(<sp/>0,<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;EL&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>macroRegName<sp/>=<sp/>macroRegName.substr(<sp/>0,<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;ES&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//insert<sp/>4<sp/>time<sp/>the<sp/>innerEta,<sp/>for<sp/>Large<sp/>and<sp/>Small<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_MacroRegionName.push_back(<sp/>macroRegName+</highlight><highlight class="stringliteral">&quot;Large&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_MacroRegionName.push_back(<sp/>macroRegName+</highlight><highlight class="stringliteral">&quot;Small&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;2;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>etaMin<sp/>&gt;=<sp/>0.<sp/>)<sp/>m_MacroRegionInnerEta.push_back(<sp/>etaMin<sp/>);</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_MacroRegionInnerEta.push_back(<sp/>etaMax<sp/>);</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>macroRegionIdx+=2;</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/></highlight><highlight class="comment">//We<sp/>are<sp/>in<sp/>the<sp/>Barrels<sp/>sectors<sp/>so<sp/>we<sp/>split<sp/>Large,<sp/>Small,<sp/>12+14,<sp/>11+15<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>macroRegName<sp/>=<sp/>m_names[k].substr(<sp/>0,<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;BL&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>macroRegName<sp/>=<sp/>macroRegName.substr(<sp/>0,<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;BS&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//insert<sp/>4<sp/>time<sp/>the<sp/>innerEta,<sp/>for<sp/>Large<sp/>and<sp/>Small<sp/>sectors<sp/>times<sp/>Up<sp/>and<sp/>Dn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_MacroRegionName.push_back(<sp/>macroRegName+</highlight><highlight class="stringliteral">&quot;Large&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_MacroRegionName.push_back(<sp/>macroRegName+</highlight><highlight class="stringliteral">&quot;Small&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_MacroRegionName.push_back(<sp/>macroRegName+</highlight><highlight class="stringliteral">&quot;Large11_15&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_MacroRegionName.push_back(<sp/>macroRegName+</highlight><highlight class="stringliteral">&quot;SmallFeet&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;4;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>etaMin<sp/>&gt;=<sp/>0.<sp/>)<sp/>m_MacroRegionInnerEta.push_back(<sp/>etaMin<sp/>);</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_MacroRegionInnerEta.push_back(<sp/>etaMax<sp/>);</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>macroRegionIdx+=4;</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;EL&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>std::string::npos<sp/>)<sp/>{<sp/></highlight><highlight class="comment">//End-Cap<sp/>Large<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_MacroRegionIdxMap[k]<sp/>=<sp/>macroRegionIdx-2;</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;ES&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>std::string::npos<sp/>)<sp/>{<sp/></highlight><highlight class="comment">//End-Cap<sp/>Small<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_MacroRegionIdxMap[k]<sp/>=<sp/>macroRegionIdx-1;<sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;BL&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>std::string::npos<sp/>)<sp/>{<sp/></highlight><highlight class="comment">//Barrel<sp/>Large<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;11&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>std::string::npos<sp/>||<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;15&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>std::string::npos<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_MacroRegionIdxMap[k]<sp/>=<sp/>macroRegionIdx-2;</highlight><highlight class="comment">//Barrel<sp/>Large<sp/>sectors<sp/>with<sp/>different<sp/>alignment<sp/>(11,15)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_MacroRegionIdxMap[k]<sp/>=<sp/>macroRegionIdx-4;<sp/></highlight><highlight class="comment">//Standard<sp/>Barrel<sp/>Large<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;BS&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>std::string::npos<sp/>)<sp/>{<sp/></highlight><highlight class="comment">//Barrel<sp/>Small<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;12&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>std::string::npos<sp/>||<sp/>m_names[k].find(<sp/></highlight><highlight class="stringliteral">&quot;14&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>std::string::npos<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_MacroRegionIdxMap[k]<sp/>=<sp/>macroRegionIdx-1;<sp/></highlight><highlight class="comment">//Feet<sp/>Small<sp/>sectors<sp/>(12+14,<sp/>Down).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_MacroRegionIdxMap[k]<sp/>=<sp/>macroRegionIdx-3;<sp/></highlight><highlight class="comment">//All<sp/>standard<sp/>Barrel<sp/>Small<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"></highlight></codeline>
<codeline lineno="2350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"></highlight></codeline>
<codeline lineno="2352"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MuonCalibrationAndSmearingTool::GetSystVariation(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DetType,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>var<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"></highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>var<sp/>!=<sp/>1.<sp/>&amp;&amp;<sp/>var<sp/>!=<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(<sp/></highlight><highlight class="stringliteral">&quot;Systematic<sp/>variation<sp/>is<sp/>not<sp/>+/-<sp/>1<sp/>sigma,<sp/>returning<sp/>0.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_detRegion<sp/>&lt;<sp/>0<sp/>||<sp/>m_detRegion<sp/>&gt;=<sp/>m_nb_regions<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"></highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p0_MS_var<sp/>=<sp/>0.,<sp/>p1_MS_var<sp/>=<sp/>0.,<sp/>p2_MS_var<sp/>=<sp/>0.,<sp/>p1_ID_var<sp/>=<sp/>0.,<sp/>p2_ID_var<sp/>=<sp/>0.,<sp/>p2_ID_TAN_var<sp/>=<sp/>0.;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newSmear<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>DetType<sp/>==<sp/>MCAST::DetectorType::MS<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_ptms<sp/>==<sp/>0<sp/>)<sp/>{<sp/><sp/></highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_Trel<sp/>&lt;<sp/>MCAST::Release::Rel17_2_Sum13<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p0_MS_var<sp/>=<sp/>pow(<sp/>m_E_p0_MS[<sp/>m_detRegion<sp/>]<sp/>*<sp/>m_E_p0_MS[<sp/>m_detRegion<sp/>]<sp/>+<sp/>m_S_p0_MS[<sp/>m_detRegion<sp/>]<sp/>*<sp/>m_S_p0_MS[<sp/>m_detRegion<sp/>],<sp/>0.5<sp/>);</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1_MS_var<sp/>=<sp/>pow(<sp/>m_E_p1_MS[<sp/>m_detRegion]<sp/>*<sp/>m_E_p1_MS[<sp/>m_detRegion<sp/>]<sp/>+<sp/>m_S_p1_MS[<sp/>m_detRegion<sp/>]<sp/>*<sp/>m_S_p1_MS[<sp/>m_detRegion<sp/>],<sp/>0.5<sp/>);</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2_MS_var<sp/>=<sp/>pow(<sp/>m_E_p2_MS[<sp/>m_detRegion]<sp/>*<sp/>m_E_p2_MS[<sp/>m_detRegion<sp/>]<sp/>+<sp/>m_S_p2_MS[<sp/>m_detRegion<sp/>]<sp/>*<sp/>m_S_p2_MS[<sp/>m_detRegion<sp/>],<sp/>0.5<sp/>);</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight><highlight class="comment">//Syst<sp/>are<sp/>not<sp/>more<sp/>symmetric<sp/>in<sp/>the<sp/>latest<sp/>release,<sp/>the<sp/>stat/sys<sp/>add<sp/>in<sp/>quadrature<sp/>is<sp/>already<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p0_MS_var<sp/>=<sp/>var<sp/>&gt;<sp/>0.<sp/>?<sp/>m_SUp_p0_MS[<sp/>m_detRegion<sp/>]<sp/>:<sp/>m_SDw_p0_MS[<sp/>m_detRegion<sp/>];</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1_MS_var<sp/>=<sp/>var<sp/>&gt;<sp/>0.<sp/>?<sp/>m_SUp_p1_MS[<sp/>m_detRegion<sp/>]<sp/>:<sp/>m_SDw_p1_MS[<sp/>m_detRegion<sp/>];</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2_MS_var<sp/>=<sp/>var<sp/>&gt;<sp/>0.<sp/>?<sp/>m_SUp_p2_MS[<sp/>m_detRegion<sp/>]<sp/>:<sp/>m_SDw_p2_MS[<sp/>m_detRegion<sp/>];</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"></highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p0_MS_var<sp/>=<sp/>m_p0_MS[<sp/>m_detRegion<sp/>]<sp/>+<sp/>var<sp/>*<sp/>p0_MS_var;</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p1_MS_var<sp/>=<sp/>m_p1_MS[<sp/>m_detRegion<sp/>]<sp/>+<sp/>var<sp/>*<sp/>p1_MS_var;</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p2_MS_var<sp/>=<sp/>m_p2_MS[<sp/>m_detRegion<sp/>]<sp/>+<sp/>var<sp/>*<sp/>p2_MS_var;</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"></highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>p0_MS_var<sp/>&lt;<sp/>0.<sp/>)<sp/>p0_MS_var<sp/>=<sp/>0.;<sp/></highlight><highlight class="comment">//Truncation<sp/>of<sp/>unphysical<sp/>variations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>p1_MS_var<sp/>&lt;<sp/>0.<sp/>)<sp/>p1_MS_var<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>p2_MS_var<sp/>&lt;<sp/>0.<sp/>)<sp/>p2_MS_var<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newSmear<sp/>=<sp/>(<sp/>p0_MS_var<sp/>*<sp/>m_g0<sp/>/<sp/>m_ptms<sp/>+<sp/>p1_MS_var<sp/>*<sp/>m_g1<sp/>+<sp/>p2_MS_var<sp/>*<sp/>m_g2<sp/>*<sp/>m_ptms<sp/>);</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newSmear;</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>DetType<sp/>==<sp/>MCAST::DetectorType::ID<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_Trel<sp/>&lt;<sp/>MCAST::Release::Rel17_2_Sum13<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p1_ID_var<sp/><sp/><sp/><sp/><sp/>=<sp/>pow(<sp/>m_E_p1_ID[<sp/>m_detRegion<sp/>]<sp/>*<sp/>m_E_p1_ID[<sp/>m_detRegion<sp/>]<sp/>+<sp/>m_S_p1_ID[<sp/>m_detRegion<sp/>]<sp/>*<sp/>m_S_p1_ID[<sp/>m_detRegion<sp/>],<sp/>0.5<sp/>);</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p2_ID_var<sp/><sp/><sp/><sp/><sp/>=<sp/>pow(<sp/>m_E_p2_ID[<sp/>m_detRegion<sp/>]<sp/>*<sp/>m_E_p2_ID[<sp/>m_detRegion<sp/>]<sp/>+<sp/>m_S_p2_ID[<sp/>m_detRegion<sp/>]<sp/>*<sp/>m_S_p2_ID[<sp/>m_detRegion<sp/>],<sp/>0.5<sp/>);</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p2_ID_TAN_var<sp/>=<sp/>pow(<sp/>m_E_p2_ID_TAN[<sp/>m_detRegion<sp/>]<sp/>*<sp/>m_E_p2_ID_TAN[<sp/>m_detRegion<sp/>]<sp/>+<sp/>m_S_p2_ID_TAN[<sp/>m_detRegion<sp/>]<sp/>*<sp/>m_S_p2_ID_TAN[<sp/>m_detRegion<sp/>],<sp/>0.5<sp/>);</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight><highlight class="comment">//Syst<sp/>are<sp/>not<sp/>more<sp/>symmetric<sp/>in<sp/>the<sp/>latest<sp/>release,<sp/>the<sp/>stat/sys<sp/>add<sp/>in<sp/>quadrature<sp/>is<sp/>already<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p1_ID_var<sp/><sp/><sp/><sp/><sp/>=<sp/>var<sp/>&gt;<sp/>0.<sp/>?<sp/>m_SUp_p1_ID[<sp/>m_detRegion<sp/>]<sp/>:<sp/>m_SDw_p1_ID[<sp/>m_detRegion<sp/>];</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p2_ID_var<sp/><sp/><sp/><sp/><sp/>=<sp/>var<sp/>&gt;<sp/>0.<sp/>?<sp/>m_SUp_p2_ID[<sp/>m_detRegion<sp/>]<sp/>:<sp/>m_SDw_p2_ID[<sp/>m_detRegion<sp/>];</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p2_ID_TAN_var<sp/>=<sp/>var<sp/>&gt;<sp/>0.<sp/>?<sp/>m_SUp_p2_ID_TAN[<sp/>m_detRegion<sp/>]<sp/>:<sp/>m_SDw_p2_ID_TAN[<sp/>m_detRegion<sp/>];</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/>p1_ID_var<sp/><sp/><sp/><sp/><sp/>=<sp/>m_p1_ID[<sp/>m_detRegion<sp/>]<sp/>+<sp/>var<sp/>*<sp/>p1_ID_var;</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/>p2_ID_var<sp/><sp/><sp/><sp/><sp/>=<sp/>m_p2_ID[<sp/>m_detRegion<sp/>]<sp/>+<sp/>var<sp/>*<sp/>p2_ID_var;</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/>p2_ID_TAN_var<sp/>=<sp/>m_p2_ID_TAN[<sp/>m_detRegion<sp/>]<sp/>+<sp/>var<sp/>*<sp/>p2_ID_TAN_var;</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"></highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>p1_ID_var<sp/>&lt;<sp/>0.<sp/>)<sp/>p1_ID_var<sp/>=<sp/>0.;<sp/></highlight><highlight class="comment">//Truncation<sp/>of<sp/>unphysical<sp/>variations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>p2_ID_var<sp/>&lt;<sp/>0.<sp/>)<sp/>p2_ID_var<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>p2_ID_TAN_var<sp/>&lt;<sp/>0.<sp/>)<sp/>p2_ID_TAN_var<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"></highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useTan2<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>useTan2<sp/>&amp;&amp;<sp/>m_p2_ID_TAN[<sp/>m_detRegion<sp/>]<sp/>!=<sp/>0<sp/>)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newSmear<sp/>=<sp/>(<sp/>p1_ID_var<sp/>*<sp/>m_g3<sp/>+<sp/>p2_ID_TAN_var<sp/>*<sp/>m_g4<sp/>*<sp/>m_ptid<sp/>*<sp/>sinh(<sp/>m_eta<sp/>)<sp/>*<sp/>sinh(<sp/>m_eta<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newSmear<sp/>=<sp/>(<sp/>p1_ID_var<sp/>*<sp/>m_g3<sp/>+<sp/>p2_ID_var<sp/>*<sp/>m_g4<sp/>*<sp/>m_ptid<sp/>);</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newSmear;</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2413"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"></highlight></codeline>
<codeline lineno="2415"><highlight class="normal"></highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/>CorrectionCode<sp/>MuonCalibrationAndSmearingTool::applyStatCombination(<sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1" kindref="compound">xAOD::Muon</ref>&amp;<sp/>mu<sp/>){</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Set<sp/>pt<sp/>ID:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Retrieving<sp/>ElementLink<sp/>to<sp/>ID<sp/>TrackParticle...&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;mu.isAvailable&lt;<sp/>ElementLink&lt;<sp/>xAOD::TrackParticleContainer<sp/>&gt;<sp/>&gt;(<sp/>\&quot;inDetTrackParticleLink\&quot;<sp/>)<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mu.<ref refid="d5/d4c/classxAOD_1_1IParticle_1a73d35d149fce4bcc1ce55da0faf8e0d5" kindref="member">isAvailable</ref>&lt;<sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt; xAOD::TrackParticleContainer &gt;</ref><sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;inDetTrackParticleLink&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;(<sp/>mu.inDetTrackParticleLink()<sp/>==<sp/>NULL<sp/>)<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a2524a9b1483ec61cf49d9c54e021d4f3" kindref="member" tooltip="Returns an ElementLink to the InnerDetector TrackParticle used in identification...">inDetTrackParticleLink</ref>()<sp/>==<sp/>NULL<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;mu.inDetTrackParticleLink()<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a2524a9b1483ec61cf49d9c54e021d4f3" kindref="member" tooltip="Returns an ElementLink to the InnerDetector TrackParticle used in identification...">inDetTrackParticleLink</ref>()<sp/>);</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;(<sp/>mu.inDetTrackParticleLink()<sp/>).isValid()<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a2524a9b1483ec61cf49d9c54e021d4f3" kindref="member" tooltip="Returns an ElementLink to the InnerDetector TrackParticle used in identification...">inDetTrackParticleLink</ref>()<sp/>).isValid()<sp/>);</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!(<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a2524a9b1483ec61cf49d9c54e021d4f3" kindref="member" tooltip="Returns an ElementLink to the InnerDetector TrackParticle used in identification...">inDetTrackParticleLink</ref>()<sp/>).isValid()<sp/>)<sp/></highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CorrectionCode::Error;</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt; xAOD::TrackParticleContainer &gt;</ref>&amp;<sp/>id_track=mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a2524a9b1483ec61cf49d9c54e021d4f3" kindref="member" tooltip="Returns an ElementLink to the InnerDetector TrackParticle used in identification...">inDetTrackParticleLink</ref>();</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"></highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Set<sp/>pt<sp/>MS:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;Retrieving<sp/>ElementLink<sp/>to<sp/>MS<sp/>TrackParticle...&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;mu.isAvailable&lt;<sp/>ElementLink&lt;<sp/>xAOD::TrackParticleContainer<sp/>&gt;<sp/>&gt;(<sp/>\&quot;extrapolatedMuonSpectrometerTrackParticleLink\&quot;<sp/>)<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mu.<ref refid="d5/d4c/classxAOD_1_1IParticle_1a73d35d149fce4bcc1ce55da0faf8e0d5" kindref="member">isAvailable</ref>&lt;<sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt; xAOD::TrackParticleContainer &gt;</ref><sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;extrapolatedMuonSpectrometerTrackParticleLink&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;(<sp/>mu.extrapolatedMuonSpectrometerTrackParticleLink()<sp/>==<sp/>NULL<sp/>)<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1ad65c58dd62a33d8126bc6457ef6b0dff" kindref="member" tooltip="Returns an ElementLink to the Extrapolated Muon Spectrometer TrackParticle used in...">extrapolatedMuonSpectrometerTrackParticleLink</ref>()<sp/>==<sp/>NULL<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;mu.extrapolatedMuonSpectrometerTrackParticleLink()<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1ad65c58dd62a33d8126bc6457ef6b0dff" kindref="member" tooltip="Returns an ElementLink to the Extrapolated Muon Spectrometer TrackParticle used in...">extrapolatedMuonSpectrometerTrackParticleLink</ref>()<sp/>);</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/>ATH_MSG_VERBOSE(<sp/></highlight><highlight class="stringliteral">&quot;(<sp/>mu.extrapolatedMuonSpectrometerTrackParticleLink()<sp/>).isValid()<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1ad65c58dd62a33d8126bc6457ef6b0dff" kindref="member" tooltip="Returns an ElementLink to the Extrapolated Muon Spectrometer TrackParticle used in...">extrapolatedMuonSpectrometerTrackParticleLink</ref>()<sp/>).isValid()<sp/>);</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!(<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1ad65c58dd62a33d8126bc6457ef6b0dff" kindref="member" tooltip="Returns an ElementLink to the Extrapolated Muon Spectrometer TrackParticle used in...">extrapolatedMuonSpectrometerTrackParticleLink</ref>()<sp/>).isValid()<sp/>)<sp/></highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CorrectionCode::Error;</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt; xAOD::TrackParticleContainer &gt;</ref>&amp;<sp/>ms_track<sp/>=<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1ad65c58dd62a33d8126bc6457ef6b0dff" kindref="member" tooltip="Returns an ElementLink to the Extrapolated Muon Spectrometer TrackParticle used in...">extrapolatedMuonSpectrometerTrackParticleLink</ref>();</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"></highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>Set<sp/>the<sp/>charge<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>charge<sp/>=<sp/>mu.charge();</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"></highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:::<sp/>SAF<sp/>specifics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1ada4059382e0f2ad3f6c3ed3293165275" kindref="member" tooltip="Generic accessor to type information.">muonType</ref>()<sp/>==<sp/>xAOD::Muon::SiliconAssociatedForwardMuon<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mu.<ref refid="d5/d4c/classxAOD_1_1IParticle_1a73d35d149fce4bcc1ce55da0faf8e0d5" kindref="member">isAvailable</ref>&lt;<ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt;xAOD::TrackParticleContainer &gt;</ref><sp/>&gt;<sp/>(</highlight><highlight class="stringliteral">&quot;combinedTrackParticleLink&quot;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a1f9c75fa5d7926d2dfab3db33ded2a15" kindref="member" tooltip="Returns an ElementLink to the InnerDetector TrackParticle used in identification...">combinedTrackParticleLink</ref>().isValid()){</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a1f9c75fa5d7926d2dfab3db33ded2a15" kindref="member" tooltip="Returns an ElementLink to the InnerDetector TrackParticle used in identification...">combinedTrackParticleLink</ref>().isValid()){</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink&lt; xAOD::TrackParticleContainer &gt;</ref>&amp;<sp/>cb_track<sp/>=<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1a1f9c75fa5d7926d2dfab3db33ded2a15" kindref="member" tooltip="Returns an ElementLink to the InnerDetector TrackParticle used in identification...">combinedTrackParticleLink</ref>();</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_charge<sp/>=<sp/>(<sp/>*cb_track<sp/>)-&gt;charge();</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/><sp/>}}</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2458"><highlight class="normal"></highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/>AmgVector(5)<sp/>parsCB;</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/>AmgSymMatrix(5)<sp/>covCB;</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>chi2;</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/>if(applyStatCombination(id_track,ms_track,charge,parsCB,covCB,chi2)!=CorrectionCode::Ok)<sp/></highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>CorrectionCode::Error;</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/>mu.auxdata&lt;<sp/>AmgVector(5)<sp/>&gt;(<sp/>&quot;StatCombCBPars&quot;<sp/>)<sp/>=<sp/>parsCB;</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/>mu.auxdata&lt;<sp/>AmgSymMatrix(5)<sp/>&gt;(<sp/>&quot;StatCombCBCovariance&quot;<sp/>)<sp/>=<sp/>covCB;</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/>mu.auxdata&lt;<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&gt;<sp/>(&quot;StatCombChi2&quot;)<sp/>=<sp/>chi2;<sp/></highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/>return<sp/>CorrectionCode::Ok;</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="2472"><highlight class="normal"></highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/>CorrectionCode<sp/>MuonCalibrationAndSmearingTool::applyStatCombination(<sp/>const<sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink</ref>&lt;<sp/>xAOD::TrackParticleContainer<sp/>&gt;&amp;<sp/>inDetTrackParticle,<sp/></highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">ElementLink</ref>&lt;<sp/>xAOD::TrackParticleContainer<sp/>&gt;&amp;<sp/>extrTrackParticle,</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>charge,</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AmgVector(5)&amp;<sp/>parsCB,</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AmgSymMatrix(5)&amp;<sp/>covCB,</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>chi2){</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/>chi2<sp/><sp/><sp/>=<sp/>1e20;</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/>AmgVector(5)<sp/>parsID<sp/>=<sp/>(*inDetTrackParticle)-&gt;definingParameters();;</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/>parsID[4]<sp/>=<sp/>fabs(parsID[4]);</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"></highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/>AmgVector(5)<sp/>parsMS<sp/>=<sp/>(*extrTrackParticle)-&gt;definingParameters();;</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>chargeMS<sp/>=<sp/>parsMS[4]/fabs(parsMS[4]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/>parsMS[4]<sp/>=<sp/>fabs(parsMS[4]);</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/>AmgSymMatrix(5)<sp/>covID<sp/>=<sp/>(*inDetTrackParticle)-&gt;definingParametersCovMatrix();</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>AmgSymMatrix(5)<sp/><sp/>weightID<sp/>=<sp/>covID.inverse();</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/><sp/>(<sp/>weightID.determinant()<sp/>==<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ID<sp/>weight<sp/>matrix<sp/>computation<sp/>failed<sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>)<sp/>;</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CorrectionCode::Error;</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"></highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/>AmgSymMatrix(5)<sp/>covMS<sp/>=<sp/>(*extrTrackParticle)-&gt;definingParametersCovMatrix();</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"></highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Error<sp/>inflation<sp/>to<sp/>account<sp/>for<sp/>ID-MS<sp/>misaligment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dSigma[5]<sp/>=<sp/>{<sp/>1.0,<sp/>2.0/sin(parsMS[3]),<sp/>0.001,<sp/>0.001,<sp/>0.0};</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>factor[5];</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i&lt;5<sp/>;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>factor[i]<sp/>=<sp/>sqrt((covMS(i,i)+dSigma[i]*dSigma[i])/covMS(i,i));</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i&lt;5<sp/>;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0<sp/>;<sp/>j&lt;5<sp/>;<sp/>j++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>i==j<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>covMS(i,j)<sp/>=<sp/>covMS(i,j)*factor[i]*factor[j];</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"></highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AmgSymMatrix(5)<sp/><sp/>weightMS<sp/>=<sp/>covMS.inverse();</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/><sp/>(<sp/>weightMS.determinant()<sp/>==<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(<sp/></highlight><highlight class="stringliteral">&quot;weightMS<sp/>computation<sp/>failed<sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>)<sp/>;</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CorrectionCode::Error;</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/>AmgSymMatrix(5)<sp/>weightCB<sp/>=<sp/>weightID<sp/>+<sp/>weightMS<sp/>;</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/>covCB<sp/>=<sp/>weightCB.inverse();</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(covCB.determinant()<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Inversion<sp/>of<sp/>weightCB<sp/>failed<sp/>&quot;</highlight><highlight class="normal"><sp/>)<sp/>;</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CorrectionCode::Error;</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;CB<sp/>covariance:<sp/>&quot;&lt;&lt;std::endl&lt;&lt;covCB&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/>AmgSymMatrix(5)<sp/>covSum<sp/>=<sp/>covID<sp/>+<sp/>covMS<sp/>;</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/>AmgSymMatrix(5)<sp/>invCovSum<sp/>=<sp/>covSum.inverse();</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/>if<sp/>(invCovSum.determinant()<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATH_MSG_WARNING(<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Inversion<sp/>of<sp/>covSum<sp/>failed<sp/>&quot;</highlight><highlight class="normal"><sp/>)<sp/>;</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CorrectionCode::Error;</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>diffPhi<sp/>=<sp/>parsMS[2]<sp/>-<sp/>parsID[2]<sp/>;</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(diffPhi&gt;M_PI)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>parsMS[2]<sp/>-=<sp/>2.*M_PI;</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(diffPhi&lt;-M_PI)<sp/>parsMS[2]<sp/>+=<sp/>2.*M_PI;</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/>AmgVector(5)<sp/>diffPars<sp/>=<sp/>parsID<sp/>-<sp/>parsMS;</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/>chi2<sp/>=<sp/>diffPars.transpose()<sp/>*<sp/>invCovSum<sp/>*<sp/>diffPars;</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/>chi2<sp/>=<sp/>chi2/5.<sp/>;</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/>parsCB<sp/>=<sp/>covCB<sp/>*<sp/>(<sp/>weightID<sp/>*<sp/>parsID<sp/>+<sp/>weightMS<sp/>*<sp/>parsMS<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/>parsCB[4]<sp/>*=<sp/>charge;</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"></highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/>if(parsCB[2]&gt;M_PI)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>parsCB[2]<sp/>-=<sp/>2.*M_PI;</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/>else<sp/>if(parsCB[2]&lt;-M_PI)<sp/>parsCB[2]<sp/>+=<sp/>2.*M_PI;</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/>return<sp/>CorrectionCode::Ok;</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MuonCalibrationAndSmearingTool::setUseStatCombination(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flag){</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/>m_useStatComb=flag;</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"></highlight></codeline>
<codeline lineno="2555"><highlight class="normal"></highlight></codeline>
<codeline lineno="2556"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MuonCalibrationAndSmearingTool::isBadMuon(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d30/classxAOD_1_1Muon__v1" kindref="compound">xAOD::Muon</ref>&amp;<sp/>mu<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1ada4059382e0f2ad3f6c3ed3293165275" kindref="member" tooltip="Generic accessor to type information.">muonType</ref>()<sp/>!=<sp/>xAOD::Muon::Combined<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>::</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>idtrack<sp/>=<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1abcdc246b3fdb40008c18e5a797c132af" kindref="member" tooltip="Returns a pointer (which can be NULL) to the TrackParticle used in identification...">trackParticle</ref>(<sp/>xAOD::Muon::InnerDetectorTrackParticle<sp/>);</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>metrack<sp/>=<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1abcdc246b3fdb40008c18e5a797c132af" kindref="member" tooltip="Returns a pointer (which can be NULL) to the TrackParticle used in identification...">trackParticle</ref>(<sp/>xAOD::Muon::ExtrapolatedMuonSpectrometerTrackParticle<sp/>);</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>cbtrack<sp/>=<sp/>mu.<ref refid="d2/d30/classxAOD_1_1Muon__v1_1abcdc246b3fdb40008c18e5a797c132af" kindref="member" tooltip="Returns a pointer (which can be NULL) to the TrackParticle used in identification...">trackParticle</ref>(<sp/>xAOD::Muon::CombinedTrackParticle<sp/>);</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>::</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsBadMuon<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>idtrack<sp/>&amp;&amp;<sp/>metrack<sp/>&amp;&amp;<sp/>cbtrack<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>::</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>qOverP_ME<sp/>=<sp/>metrack-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a5444da1e68e74f59657b0b3bbd5113f5" kindref="member" tooltip="Returns the  parameter.">qOverP</ref>();</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>qOverPerr_ME<sp/>=<sp/>sqrt(<sp/>metrack-&gt;<ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1_1a6216520cb9c2f1c3dfc3996221006ba1" kindref="member" tooltip="Returns the 5x5 symmetric matrix containing the defining parameters covariance matrix...">definingParametersCovMatrix</ref>()(4,4)<sp/>);</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>::</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>recipe<sp/>for<sp/>high-pt<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IsBadMuon<sp/>=<sp/>(<sp/>qOverPerr_ME*1000.<sp/>&gt;<sp/>sqrt(<sp/>pow(0.07*fabs(qOverP_ME*1000),2)<sp/>+<sp/>pow(0.0005*sin(metrack-&gt;theta()),2)<sp/>)<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>an<sp/>other<sp/>recipie....<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IsBadMuon<sp/>=<sp/>fabs(qOverPerr_ME<sp/>/<sp/>qOverP_ME)&lt;sqrt(<sp/>pow(8/m_ptms,2)<sp/>+<sp/>pow(0.07,2)<sp/>+<sp/>pow(0.0005*m_ptms,2));</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IsBadMuon;</highlight></codeline>
<codeline lineno="2576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"></highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2579"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>CP</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/MuonMomentumCorrections/Root/MuonCalibrationAndSmearingTool.cxx"/>
  </compounddef>
</doxygen>
