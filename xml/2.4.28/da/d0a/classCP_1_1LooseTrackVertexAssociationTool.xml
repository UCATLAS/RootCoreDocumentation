<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="da/d0a/classCP_1_1LooseTrackVertexAssociationTool" kind="class" prot="public">
    <compoundname>CP::LooseTrackVertexAssociationTool</compoundname>
    <basecompoundref refid="d5/dbb/classasg_1_1AsgTool" prot="public" virt="virtual">asg::AsgTool</basecompoundref>
    <basecompoundref refid="d7/df1/classCP_1_1ITrackVertexAssociationTool" prot="public" virt="virtual">CP::ITrackVertexAssociationTool</basecompoundref>
    <includes refid="d7/d67/LooseTrackVertexAssociationTool_8h" local="no">LooseTrackVertexAssociationTool.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="da/d0a/classCP_1_1LooseTrackVertexAssociationTool_1adf53b4c7f962174890fc1490f6269bcd" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float CP::LooseTrackVertexAssociationTool::m_dz_cut</definition>
        <argsstring></argsstring>
        <name>m_dz_cut</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/LooseTrackVertexAssociationTool.h" line="60" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/LooseTrackVertexAssociationTool.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/d0a/classCP_1_1LooseTrackVertexAssociationTool_1ad4ef51f72fc9d02a291e2e8e807d1fff" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float CP::LooseTrackVertexAssociationTool::m_d0_cut</definition>
        <argsstring></argsstring>
        <name>m_d0_cut</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/LooseTrackVertexAssociationTool.h" line="61" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/LooseTrackVertexAssociationTool.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="da/d0a/classCP_1_1LooseTrackVertexAssociationTool_1aa7e40ed14630bc09fbbdd8c347dfc067" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CP::LooseTrackVertexAssociationTool::LooseTrackVertexAssociationTool</definition>
        <argsstring>(std::string name)</argsstring>
        <name>LooseTrackVertexAssociationTool</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/LooseTrackVertexAssociationTool.h" line="27" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/Root/LooseTrackVertexAssociationTool.cxx" bodystart="16" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="da/d0a/classCP_1_1LooseTrackVertexAssociationTool_1a08690d6a8d878fd5b68429db3bcecdcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>StatusCode</type>
        <definition>StatusCode CP::LooseTrackVertexAssociationTool::initialize</definition>
        <argsstring>()</argsstring>
        <name>initialize</name>
        <reimplements refid="d5/dbb/classasg_1_1AsgTool_1a55b3c013a3e54ae4c1d0d76de8e1e726">initialize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dummy implementation of the initialisation function</para><para>It&apos;s here to allow the dual-use tools to skip defining an initialisation function. Since many are doing so... </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/LooseTrackVertexAssociationTool.h" line="30" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/Root/LooseTrackVertexAssociationTool.cxx" bodystart="23" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="da/d0a/classCP_1_1LooseTrackVertexAssociationTool_1a0e531f82468e9b79ec118cf289ad0d12" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void CP::LooseTrackVertexAssociationTool::print</definition>
        <argsstring>() const </argsstring>
        <name>print</name>
        <reimplements refid="d5/dbb/classasg_1_1AsgTool_1af4cc6ba53b6505045c2866d4e30e821d">print</reimplements>
        <briefdescription>
<para>Print the state of the tool. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/LooseTrackVertexAssociationTool.h" line="32" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/Root/LooseTrackVertexAssociationTool.cxx" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="da/d0a/classCP_1_1LooseTrackVertexAssociationTool_1af681ee9d16a92af37c8833d7982fa589" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool CP::LooseTrackVertexAssociationTool::isCompatible</definition>
        <argsstring>(const xAOD::TrackParticle &amp;trk, const xAOD::Vertex &amp;vx) const </argsstring>
        <name>isCompatible</name>
        <reimplements refid="d7/df1/classCP_1_1ITrackVertexAssociationTool_1a00d6b75e48c95dd65b727a2fabf79161">isCompatible</reimplements>
        <param>
          <type>const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref> &amp;</type>
          <declname>trk</declname>
        </param>
        <param>
          <type>const <ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref> &amp;</type>
          <declname>vx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function will return the decision of whether the track is matched to the Vertex after matching method Not sure whether the track is matched to best choice Note: Only apply to good vertex(vx-&gt;vertexType()!=xAODVxType::NoVtx), return false if vertex is a dummy one </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/LooseTrackVertexAssociationTool.h" line="37" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/Root/LooseTrackVertexAssociationTool.cxx" bodystart="36" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="da/d0a/classCP_1_1LooseTrackVertexAssociationTool_1acc47c380712a0b8b86cb32eeed1c2628" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>xAOD::TrackVertexAssociationMap</type>
        <definition>xAOD::TrackVertexAssociationMap CP::LooseTrackVertexAssociationTool::getMatchMap</definition>
        <argsstring>(std::vector&lt; const xAOD::TrackParticle * &gt; &amp;trk_list, std::vector&lt; const xAOD::Vertex * &gt; &amp;vx_list) const </argsstring>
        <name>getMatchMap</name>
        <reimplements refid="d7/df1/classCP_1_1ITrackVertexAssociationTool_1a3428e611b61fb1e687e1a3bbd85f68dd">getMatchMap</reimplements>
        <param>
          <type>std::vector&lt; const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref> * &gt; &amp;</type>
          <declname>trk_list</declname>
        </param>
        <param>
          <type>std::vector&lt; const <ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref> * &gt; &amp;</type>
          <declname>vx_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/LooseTrackVertexAssociationTool.h" line="38" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/Root/LooseTrackVertexAssociationTool.cxx" bodystart="47" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="da/d0a/classCP_1_1LooseTrackVertexAssociationTool_1a562a5b95a90d84ea732b4204334b20ff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>xAOD::TrackVertexAssociationMap</type>
        <definition>xAOD::TrackVertexAssociationMap CP::LooseTrackVertexAssociationTool::getMatchMap</definition>
        <argsstring>(const xAOD::TrackParticleContainer &amp;trkCont, const xAOD::VertexContainer &amp;vxCont) const </argsstring>
        <name>getMatchMap</name>
        <reimplements refid="d7/df1/classCP_1_1ITrackVertexAssociationTool_1a63f465dcaad90af44d741ad5c0164105">getMatchMap</reimplements>
        <param>
          <type>const <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::TrackParticleContainer</ref> &amp;</type>
          <declname>trkCont</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::VertexContainer</ref> &amp;</type>
          <declname>vxCont</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/LooseTrackVertexAssociationTool.h" line="39" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/Root/LooseTrackVertexAssociationTool.cxx" bodystart="69" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="da/d0a/classCP_1_1LooseTrackVertexAssociationTool_1a9a2a34d615d862e3b7e9a7f82077a9ff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="d6/d6e/classElementLink" kindref="compound">ElementLink</ref>&lt; <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::VertexContainer</ref> &gt;</type>
        <definition>ElementLink&lt; xAOD::VertexContainer &gt; CP::LooseTrackVertexAssociationTool::getUniqueMatchVertexLink</definition>
        <argsstring>(const xAOD::TrackParticle &amp;, const xAOD::VertexContainer &amp;vxCont) const </argsstring>
        <name>getUniqueMatchVertexLink</name>
        <reimplements refid="d7/df1/classCP_1_1ITrackVertexAssociationTool_1a7e8953f3bf31d828eace96161c8ed693">getUniqueMatchVertexLink</reimplements>
        <param>
          <type>const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref> &amp;</type>
          <defname>trk</defname>
        </param>
        <param>
          <type>const <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::VertexContainer</ref> &amp;</type>
          <declname>vxCont</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This functions will return the best matched vertex Match method is same as isCompatible. but will only keep the best vertex(with mini_dz) with more than one vertices match to the same track </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/LooseTrackVertexAssociationTool.h" line="44" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/Root/LooseTrackVertexAssociationTool.cxx" bodystart="95" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="da/d0a/classCP_1_1LooseTrackVertexAssociationTool_1a6a70006ce70bedb0d17039ae2d8936e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref> *</type>
        <definition>const xAOD::Vertex * CP::LooseTrackVertexAssociationTool::getUniqueMatchVertex</definition>
        <argsstring>(const xAOD::TrackParticle &amp;trk, std::vector&lt; const xAOD::Vertex * &gt; &amp;vx_list) const </argsstring>
        <name>getUniqueMatchVertex</name>
        <reimplements refid="d7/df1/classCP_1_1ITrackVertexAssociationTool_1acdaca12ea6b9ce0935ade1de70bfd978">getUniqueMatchVertex</reimplements>
        <param>
          <type>const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref> &amp;</type>
          <declname>trk</declname>
        </param>
        <param>
          <type>std::vector&lt; const <ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref> * &gt; &amp;</type>
          <declname>vx_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/LooseTrackVertexAssociationTool.h" line="46" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/Root/LooseTrackVertexAssociationTool.cxx" bodystart="110" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="da/d0a/classCP_1_1LooseTrackVertexAssociationTool_1a85c01f0cb06f7e2c21009b2122b8c609" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>xAOD::TrackVertexAssociationMap</type>
        <definition>xAOD::TrackVertexAssociationMap CP::LooseTrackVertexAssociationTool::getUniqueMatchMap</definition>
        <argsstring>(std::vector&lt; const xAOD::TrackParticle * &gt; &amp;trk_list, std::vector&lt; const xAOD::Vertex * &gt; &amp;vx_list) const </argsstring>
        <name>getUniqueMatchMap</name>
        <reimplements refid="d7/df1/classCP_1_1ITrackVertexAssociationTool_1accf5c8fd2cf22805a7af79f23684d883">getUniqueMatchMap</reimplements>
        <param>
          <type>std::vector&lt; const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref> * &gt; &amp;</type>
          <declname>trk_list</declname>
        </param>
        <param>
          <type>std::vector&lt; const <ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref> * &gt; &amp;</type>
          <declname>vx_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This functions related to the previous functions, will return a map&lt;const <ref refid="dd/d44/namespacexAOD_1a81f1081bff020653ddc591a2ede11ded" kindref="member">xAOD::Vertex</ref>*, std::vector&lt;const xAOD::TrackParticle*&gt; &gt; (defined as TrackVertexAssociationMap) to store the best matched tracks for each vertex. Note: the dummy vertex will be also stored in the map but the track stored vector which assigned to this vertex will be empty </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/LooseTrackVertexAssociationTool.h" line="50" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/Root/LooseTrackVertexAssociationTool.cxx" bodystart="152" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="da/d0a/classCP_1_1LooseTrackVertexAssociationTool_1a13246805b31c773223bf4f370c01ba65" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>xAOD::TrackVertexAssociationMap</type>
        <definition>xAOD::TrackVertexAssociationMap CP::LooseTrackVertexAssociationTool::getUniqueMatchMap</definition>
        <argsstring>(const xAOD::TrackParticleContainer &amp;trkCont, const xAOD::VertexContainer &amp;vxCont) const </argsstring>
        <name>getUniqueMatchMap</name>
        <reimplements refid="d7/df1/classCP_1_1ITrackVertexAssociationTool_1a02b821193fd4d9c515821cbc46b38e62">getUniqueMatchMap</reimplements>
        <param>
          <type>const <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::TrackParticleContainer</ref> &amp;</type>
          <declname>trkCont</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::VertexContainer</ref> &amp;</type>
          <declname>vxCont</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/LooseTrackVertexAssociationTool.h" line="52" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/Root/LooseTrackVertexAssociationTool.cxx" bodystart="177" bodyend="200"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="da/d0a/classCP_1_1LooseTrackVertexAssociationTool_1ad6fa56f571213bf7bf74ba6cac06287f" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CP::LooseTrackVertexAssociationTool::isMatch</definition>
        <argsstring>(const xAOD::TrackParticle &amp;trk, const xAOD::Vertex &amp;vx, float &amp;dz) const </argsstring>
        <name>isMatch</name>
        <param>
          <type>const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref> &amp;</type>
          <declname>trk</declname>
        </param>
        <param>
          <type>const <ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref> &amp;</type>
          <declname>vx</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>dz</declname>
        </param>
        <briefdescription>
<para>main function for doing loose matching process </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/LooseTrackVertexAssociationTool.h" line="57" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/Root/LooseTrackVertexAssociationTool.cxx" bodystart="203" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="da/d0a/classCP_1_1LooseTrackVertexAssociationTool_1a90b37a94251a2a1fdc3a3f5333caab9f" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="db/dd1/classxAOD_1_1Vertex__v1" kindref="compound">xAOD::Vertex</ref> *</type>
        <definition>const xAOD::Vertex * CP::LooseTrackVertexAssociationTool::getUniqueMatchVx</definition>
        <argsstring>(const xAOD::TrackParticle &amp;trk, const xAOD::VertexContainer &amp;vxCont) const </argsstring>
        <name>getUniqueMatchVx</name>
        <param>
          <type>const <ref refid="d9/d1d/classxAOD_1_1TrackParticle__v1" kindref="compound">xAOD::TrackParticle</ref> &amp;</type>
          <declname>trk</declname>
        </param>
        <param>
          <type>const <ref refid="d0/d4d/classDataVector" kindref="compound">xAOD::VertexContainer</ref> &amp;</type>
          <declname>vxCont</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/LooseTrackVertexAssociationTool.h" line="58" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/Root/LooseTrackVertexAssociationTool.cxx" bodystart="241" bodyend="281"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="da/d0a/classCP_1_1LooseTrackVertexAssociationTool" kindref="compound">LooseTrackVertexAssociationTool</ref>: using loose track-vertex association method. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="13349">
        <label>CP::ITrackVertexAssociationTool</label>
        <link refid="d7/df1/classCP_1_1ITrackVertexAssociationTool"/>
        <childnode refid="13348" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13346">
        <label>CP::LooseTrackVertexAssociationTool</label>
        <link refid="da/d0a/classCP_1_1LooseTrackVertexAssociationTool"/>
        <childnode refid="13347" relation="public-inheritance">
        </childnode>
        <childnode refid="13349" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13347">
        <label>asg::AsgTool</label>
        <link refid="d5/dbb/classasg_1_1AsgTool"/>
        <childnode refid="13348" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13348">
        <label>asg::IAsgTool</label>
        <link refid="d4/d20/classasg_1_1IAsgTool"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="13353">
        <label>CP::ITrackVertexAssociationTool</label>
        <link refid="d7/df1/classCP_1_1ITrackVertexAssociationTool"/>
        <childnode refid="13352" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13350">
        <label>CP::LooseTrackVertexAssociationTool</label>
        <link refid="da/d0a/classCP_1_1LooseTrackVertexAssociationTool"/>
        <childnode refid="13351" relation="public-inheritance">
        </childnode>
        <childnode refid="13353" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13351">
        <label>asg::AsgTool</label>
        <link refid="d5/dbb/classasg_1_1AsgTool"/>
        <childnode refid="13352" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13352">
        <label>asg::IAsgTool</label>
        <link refid="d4/d20/classasg_1_1IAsgTool"/>
      </node>
    </collaborationgraph>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/LooseTrackVertexAssociationTool.h" line="23" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrackVertexAssociationTool/TrackVertexAssociationTool/LooseTrackVertexAssociationTool.h" bodystart="22" bodyend="62"/>
    <listofallmembers>
      <member refid="d5/dbb/classasg_1_1AsgTool_1a47f02c756c6d6026d03e0d4d68d82a94" prot="public" virt="non-virtual"><scope>CP::LooseTrackVertexAssociationTool</scope><name>AsgTool</name></member>
      <member refid="da/d0a/classCP_1_1LooseTrackVertexAssociationTool_1acc47c380712a0b8b86cb32eeed1c2628" prot="public" virt="virtual"><scope>CP::LooseTrackVertexAssociationTool</scope><name>getMatchMap</name></member>
      <member refid="da/d0a/classCP_1_1LooseTrackVertexAssociationTool_1a562a5b95a90d84ea732b4204334b20ff" prot="public" virt="virtual"><scope>CP::LooseTrackVertexAssociationTool</scope><name>getMatchMap</name></member>
      <member refid="d5/dbb/classasg_1_1AsgTool_1a5d9d9eae0988784fb6c257e0a2440ca6" prot="public" virt="non-virtual"><scope>CP::LooseTrackVertexAssociationTool</scope><name>getProperty</name></member>
      <member refid="da/d0a/classCP_1_1LooseTrackVertexAssociationTool_1a85c01f0cb06f7e2c21009b2122b8c609" prot="public" virt="virtual"><scope>CP::LooseTrackVertexAssociationTool</scope><name>getUniqueMatchMap</name></member>
      <member refid="da/d0a/classCP_1_1LooseTrackVertexAssociationTool_1a13246805b31c773223bf4f370c01ba65" prot="public" virt="virtual"><scope>CP::LooseTrackVertexAssociationTool</scope><name>getUniqueMatchMap</name></member>
      <member refid="da/d0a/classCP_1_1LooseTrackVertexAssociationTool_1a6a70006ce70bedb0d17039ae2d8936e5" prot="public" virt="virtual"><scope>CP::LooseTrackVertexAssociationTool</scope><name>getUniqueMatchVertex</name></member>
      <member refid="da/d0a/classCP_1_1LooseTrackVertexAssociationTool_1a9a2a34d615d862e3b7e9a7f82077a9ff" prot="public" virt="virtual"><scope>CP::LooseTrackVertexAssociationTool</scope><name>getUniqueMatchVertexLink</name></member>
      <member refid="da/d0a/classCP_1_1LooseTrackVertexAssociationTool_1a90b37a94251a2a1fdc3a3f5333caab9f" prot="private" virt="non-virtual"><scope>CP::LooseTrackVertexAssociationTool</scope><name>getUniqueMatchVx</name></member>
      <member refid="da/d0a/classCP_1_1LooseTrackVertexAssociationTool_1a08690d6a8d878fd5b68429db3bcecdcf" prot="public" virt="virtual"><scope>CP::LooseTrackVertexAssociationTool</scope><name>initialize</name></member>
      <member refid="da/d0a/classCP_1_1LooseTrackVertexAssociationTool_1af681ee9d16a92af37c8833d7982fa589" prot="public" virt="virtual"><scope>CP::LooseTrackVertexAssociationTool</scope><name>isCompatible</name></member>
      <member refid="da/d0a/classCP_1_1LooseTrackVertexAssociationTool_1ad6fa56f571213bf7bf74ba6cac06287f" prot="private" virt="non-virtual"><scope>CP::LooseTrackVertexAssociationTool</scope><name>isMatch</name></member>
      <member refid="da/d0a/classCP_1_1LooseTrackVertexAssociationTool_1aa7e40ed14630bc09fbbdd8c347dfc067" prot="public" virt="non-virtual"><scope>CP::LooseTrackVertexAssociationTool</scope><name>LooseTrackVertexAssociationTool</name></member>
      <member refid="da/d0a/classCP_1_1LooseTrackVertexAssociationTool_1ad4ef51f72fc9d02a291e2e8e807d1fff" prot="private" virt="non-virtual"><scope>CP::LooseTrackVertexAssociationTool</scope><name>m_d0_cut</name></member>
      <member refid="da/d0a/classCP_1_1LooseTrackVertexAssociationTool_1adf53b4c7f962174890fc1490f6269bcd" prot="private" virt="non-virtual"><scope>CP::LooseTrackVertexAssociationTool</scope><name>m_dz_cut</name></member>
      <member refid="d5/dbb/classasg_1_1AsgTool_1a3aeba8f7ad5ade0197f5848fe9e4480e" prot="public" virt="non-virtual"><scope>CP::LooseTrackVertexAssociationTool</scope><name>msg_level_name</name></member>
      <member refid="da/d0a/classCP_1_1LooseTrackVertexAssociationTool_1a0e531f82468e9b79ec118cf289ad0d12" prot="public" virt="virtual"><scope>CP::LooseTrackVertexAssociationTool</scope><name>print</name></member>
      <member refid="d5/dbb/classasg_1_1AsgTool_1abf22f7aa60258c67b79cf67bf70a3a5b" prot="public" virt="non-virtual"><scope>CP::LooseTrackVertexAssociationTool</scope><name>~AsgTool</name></member>
      <member refid="d4/d20/classasg_1_1IAsgTool_1a77b49d52f1f8c272cb665b8309d6082d" prot="public" virt="virtual"><scope>CP::LooseTrackVertexAssociationTool</scope><name>~IAsgTool</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
