<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="da/d89/MissingETAssociation__v1_8cxx" kind="file">
    <compoundname>MissingETAssociation_v1.cxx</compoundname>
    <includes refid="d4/dd5/MissingETAssociation__v1_8h" local="yes">xAODMissingET/versions/MissingETAssociation_v1.h</includes>
    <includes refid="d9/d25/MissingETCompositionBase_8h" local="yes">xAODMissingET/versions/MissingETCompositionBase.h</includes>
    <includes refid="d5/d55/JetContainer_8h" local="yes">xAODJet/JetContainer.h</includes>
    <includes refid="dd/d44/TruthParticle_8h" local="yes">xAODTruth/TruthParticle.h</includes>
    <includes refid="d1/d98/PFO_8h" local="yes">xAODPFlow/PFO.h</includes>
    <includes local="no">iterator</includes>
    <includes local="no">cstdio</includes>
    <incdepgraph>
      <node id="391496">
        <label>list</label>
      </node>
      <node id="391505">
        <label>AthContainers/tools/DVL_algorithms.icc</label>
        <link refid="df/daa/DVL__algorithms_8icc"/>
        <childnode refid="391490" relation="include">
        </childnode>
        <childnode refid="391497" relation="include">
        </childnode>
        <childnode refid="391411" relation="include">
        </childnode>
        <childnode refid="391486" relation="include">
        </childnode>
        <childnode refid="391418" relation="include">
        </childnode>
      </node>
      <node id="391490">
        <label>AthContainers/tools/DVLNoBase.h</label>
        <link refid="d7/d92/DVLNoBase_8h"/>
      </node>
      <node id="391461">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="391512">
        <label>AthContainers/tools/DVLDataBucket.h</label>
        <link refid="d4/d16/DVLDataBucket_8h"/>
        <childnode refid="391513" relation="include">
        </childnode>
        <childnode refid="391491" relation="include">
        </childnode>
        <childnode refid="391426" relation="include">
        </childnode>
        <childnode refid="391514" relation="include">
        </childnode>
      </node>
      <node id="391463">
        <label>CxxUtils/unordered_map.h</label>
        <link refid="db/daa/unordered__map_8h"/>
        <childnode refid="391417" relation="include">
        </childnode>
        <childnode refid="391419" relation="include">
        </childnode>
        <childnode refid="391426" relation="include">
        </childnode>
        <childnode refid="391427" relation="include">
        </childnode>
      </node>
      <node id="391464">
        <label>AthContainers/AuxTypeRegistry.icc</label>
        <link refid="d8/df3/AuxTypeRegistry_8icc"/>
      </node>
      <node id="391429">
        <label>AthContainersInterfaces/IAuxStore.h</label>
        <link refid="d6/d3e/IAuxStore_8h"/>
        <childnode refid="391413" relation="include">
        </childnode>
        <childnode refid="391415" relation="include">
        </childnode>
        <childnode refid="391430" relation="include">
        </childnode>
        <childnode refid="391428" relation="include">
        </childnode>
      </node>
      <node id="391549">
        <label>EventPrimitives/EventPrimitives.h</label>
        <link refid="d1/d54/EventPrimitives_8h_source"/>
        <childnode refid="391550" relation="include">
        </childnode>
        <childnode refid="391551" relation="include">
        </childnode>
        <childnode refid="391552" relation="include">
        </childnode>
      </node>
      <node id="391425">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="391427">
        <label>functional</label>
      </node>
      <node id="391487">
        <label>boost/version.hpp</label>
      </node>
      <node id="391423">
        <label>limits</label>
      </node>
      <node id="391430">
        <label>SGTools/BaseInfo.h</label>
      </node>
      <node id="391589">
        <label>xAODTruth/TruthVertexFwd.h</label>
        <link refid="d5/d1a/TruthVertexFwd_8h_source"/>
      </node>
      <node id="391578">
        <label>xAODBTagging/versions/BTaggingContainer_v1.h</label>
        <link refid="d9/d93/BTaggingContainer__v1_8h_source"/>
        <childnode refid="391481" relation="include">
        </childnode>
        <childnode refid="391542" relation="include">
        </childnode>
      </node>
      <node id="391459">
        <label>boost/thread/tss.hpp</label>
      </node>
      <node id="391522">
        <label>boost/tuple/tuple.hpp</label>
      </node>
      <node id="391420">
        <label>iterator</label>
      </node>
      <node id="391600">
        <label>xAODCaloEvent/versions/CaloClusterBadChannelData_v1.h</label>
        <link refid="d5/d3a/CaloClusterBadChannelData__v1_8h_source"/>
        <childnode refid="391597" relation="include">
        </childnode>
        <childnode refid="391444" relation="include">
        </childnode>
      </node>
      <node id="391447">
        <label>AthContainersInterfaces/AuxDataOption.h</label>
        <link refid="d1/dc5/AuxDataOption_8h"/>
        <childnode refid="391424" relation="include">
        </childnode>
        <childnode refid="391448" relation="include">
        </childnode>
      </node>
      <node id="391409">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETAssociation_v1.cxx</label>
        <link refid="MissingETAssociation_v1.cxx"/>
        <childnode refid="391410" relation="include">
        </childnode>
        <childnode refid="391520" relation="include">
        </childnode>
        <childnode refid="391536" relation="include">
        </childnode>
        <childnode refid="391586" relation="include">
        </childnode>
        <childnode refid="391590" relation="include">
        </childnode>
        <childnode refid="391420" relation="include">
        </childnode>
        <childnode refid="391606" relation="include">
        </childnode>
      </node>
      <node id="391537">
        <label>xAODJet/Jet.h</label>
        <link refid="da/db7/Jet_8h_source"/>
        <childnode refid="391538" relation="include">
        </childnode>
        <childnode refid="391533" relation="include">
        </childnode>
      </node>
      <node id="391524">
        <label>SGTools/ClassID_traits.h</label>
      </node>
      <node id="391602">
        <label>CaloEvent/CaloRecoStatus.h</label>
      </node>
      <node id="391576">
        <label>xAODBTagging/versions/BTagVertex_v1.h</label>
        <link refid="d6/df4/BTagVertex__v1_8h_source"/>
        <childnode refid="391411" relation="include">
        </childnode>
        <childnode refid="391527" relation="include">
        </childnode>
        <childnode refid="391476" relation="include">
        </childnode>
        <childnode refid="391480" relation="include">
        </childnode>
        <childnode refid="391544" relation="include">
        </childnode>
        <childnode refid="391561" relation="include">
        </childnode>
        <childnode refid="391560" relation="include">
        </childnode>
        <childnode refid="391539" relation="include">
        </childnode>
        <childnode refid="391444" relation="include">
        </childnode>
        <childnode refid="391424" relation="include">
        </childnode>
        <childnode refid="391428" relation="include">
        </childnode>
      </node>
      <node id="391584">
        <label>xAODJet/versions/JetContainer_v1.h</label>
        <link refid="df/d28/JetContainer__v1_8h_source"/>
        <childnode refid="391481" relation="include">
        </childnode>
        <childnode refid="391538" relation="include">
        </childnode>
      </node>
      <node id="391521">
        <label>xAODMissingET/versions/MissingETBase.h</label>
        <link refid="d4/da9/MissingETBase_8h_source"/>
        <childnode refid="391415" relation="include">
        </childnode>
        <childnode refid="391422" relation="include">
        </childnode>
        <childnode refid="391444" relation="include">
        </childnode>
        <childnode refid="391424" relation="include">
        </childnode>
        <childnode refid="391522" relation="include">
        </childnode>
      </node>
      <node id="391511">
        <label>SGTools/ClassName.h</label>
      </node>
      <node id="391517">
        <label>AthContainers/DataVector.icc</label>
        <link refid="da/de6/DataVector_8icc"/>
        <childnode refid="391518" relation="include">
        </childnode>
        <childnode refid="391485" relation="include">
        </childnode>
        <childnode refid="391423" relation="include">
        </childnode>
        <childnode refid="391427" relation="include">
        </childnode>
        <childnode refid="391519" relation="include">
        </childnode>
      </node>
      <node id="391471">
        <label>AthContainers/exceptions.h</label>
        <link refid="d4/d03/exceptions_8h"/>
        <childnode refid="391414" relation="include">
        </childnode>
        <childnode refid="391472" relation="include">
        </childnode>
        <childnode refid="391473" relation="include">
        </childnode>
        <childnode refid="391439" relation="include">
        </childnode>
        <childnode refid="391424" relation="include">
        </childnode>
      </node>
      <node id="391443">
        <label>AthContainers/tools/AuxDataTraits.h</label>
        <link refid="d3/d5a/AuxDataTraits_8h"/>
        <childnode refid="391444" relation="include">
        </childnode>
        <childnode refid="391421" relation="include">
        </childnode>
      </node>
      <node id="391525">
        <label>AthContainers/ConstDataVector.icc</label>
        <link refid="d2/d61/ConstDataVector_8icc"/>
        <childnode refid="391526" relation="include">
        </childnode>
        <childnode refid="391427" relation="include">
        </childnode>
      </node>
      <node id="391432">
        <label>stdint.h</label>
      </node>
      <node id="391497">
        <label>AthContainers/tools/DVLCast.h</label>
        <link refid="df/d5c/DVLCast_8h"/>
        <childnode refid="391423" relation="include">
        </childnode>
        <childnode refid="391498" relation="include">
        </childnode>
        <childnode refid="391439" relation="include">
        </childnode>
        <childnode refid="391421" relation="include">
        </childnode>
        <childnode refid="391415" relation="include">
        </childnode>
      </node>
      <node id="391483">
        <label>AthContainers/IndexTrackingPolicy.h</label>
        <link refid="d0/da5/IndexTrackingPolicy_8h"/>
      </node>
      <node id="391440">
        <label>AthContainersInterfaces/IAuxTypeVectorFactory.h</label>
        <link refid="d4/d2c/IAuxTypeVectorFactory_8h"/>
        <childnode refid="391415" relation="include">
        </childnode>
        <childnode refid="391439" relation="include">
        </childnode>
      </node>
      <node id="391564">
        <label>Eigen/Geometry</label>
      </node>
      <node id="391435">
        <label>RVersion.h</label>
      </node>
      <node id="391591">
        <label>xAODPFlow/versions/PFO_v1.h</label>
        <link refid="d0/d00/PFO__v1_8h_source"/>
        <childnode refid="391527" relation="include">
        </childnode>
        <childnode refid="391592" relation="include">
        </childnode>
        <childnode refid="391476" relation="include">
        </childnode>
        <childnode refid="391480" relation="include">
        </childnode>
        <childnode refid="391594" relation="include">
        </childnode>
        <childnode refid="391595" relation="include">
        </childnode>
        <childnode refid="391603" relation="include">
        </childnode>
        <childnode refid="391560" relation="include">
        </childnode>
        <childnode refid="391545" relation="include">
        </childnode>
        <childnode refid="391544" relation="include">
        </childnode>
        <childnode refid="391605" relation="include">
        </childnode>
        <childnode refid="391481" relation="include">
        </childnode>
      </node>
      <node id="391416">
        <label>CxxUtils/unordered_set.h</label>
        <link refid="df/d26/unordered__set_8h"/>
        <childnode refid="391417" relation="include">
        </childnode>
        <childnode refid="391426" relation="include">
        </childnode>
        <childnode refid="391427" relation="include">
        </childnode>
      </node>
      <node id="391604">
        <label>xAODCaloEvent/versions/CaloClusterContainer_v1.h</label>
        <link refid="d8/dda/CaloClusterContainer__v1_8h_source"/>
        <childnode refid="391481" relation="include">
        </childnode>
        <childnode refid="391480" relation="include">
        </childnode>
        <childnode refid="391596" relation="include">
        </childnode>
      </node>
      <node id="391422">
        <label>cmath</label>
      </node>
      <node id="391475">
        <label>cassert</label>
      </node>
      <node id="391488">
        <label>boost/mpl/if.hpp</label>
      </node>
      <node id="391507">
        <label>boost/static_assert.hpp</label>
      </node>
      <node id="391526">
        <label>boost/iterator/transform_iterator.hpp</label>
      </node>
      <node id="391473">
        <label>stdexcept</label>
      </node>
      <node id="391530">
        <label>xAODMissingET/MissingETContainer.h</label>
        <link refid="d5/d10/MissingETContainer_8h_source"/>
        <childnode refid="391531" relation="include">
        </childnode>
        <childnode refid="391534" relation="include">
        </childnode>
        <childnode refid="391533" relation="include">
        </childnode>
      </node>
      <node id="391462">
        <label>boost/thread/thread.hpp</label>
      </node>
      <node id="391551">
        <label>Eigen/Core</label>
      </node>
      <node id="391494">
        <label>boost/type_traits/is_pointer.hpp</label>
      </node>
      <node id="391553">
        <label>xAODTracking/VertexContainerFwd.h</label>
        <link refid="d0/dc4/VertexContainerFwd_8h_source"/>
        <childnode refid="391481" relation="include">
        </childnode>
        <childnode refid="391554" relation="include">
        </childnode>
      </node>
      <node id="391558">
        <label>xAODTracking/TrackParticleContainerFwd.h</label>
        <link refid="de/dea/TrackParticleContainerFwd_8h_source"/>
        <childnode refid="391481" relation="include">
        </childnode>
        <childnode refid="391480" relation="include">
        </childnode>
        <childnode refid="391559" relation="include">
        </childnode>
      </node>
      <node id="391502">
        <label>boost/iterator/iterator_adaptor.hpp</label>
      </node>
      <node id="391477">
        <label>TLorentzVector.h</label>
      </node>
      <node id="391587">
        <label>xAODTruth/versions/TruthParticle_v1.h</label>
        <link refid="d3/d3b/TruthParticle__v1_8h_source"/>
        <childnode refid="391527" relation="include">
        </childnode>
        <childnode refid="391476" relation="include">
        </childnode>
        <childnode refid="391478" relation="include">
        </childnode>
        <childnode refid="391588" relation="include">
        </childnode>
      </node>
      <node id="391597">
        <label>CaloGeoHelpers/CaloSampling.h</label>
        <link refid="d7/d85/CaloSampling_8h_source"/>
        <childnode refid="391424" relation="include">
        </childnode>
        <childnode refid="391598" relation="include">
        </childnode>
      </node>
      <node id="391424">
        <label>string</label>
      </node>
      <node id="391465">
        <label>AthContainers/AuxVectorData.h</label>
        <link refid="d9/df2/AuxVectorData_8h"/>
        <childnode refid="391414" relation="include">
        </childnode>
        <childnode refid="391413" relation="include">
        </childnode>
        <childnode refid="391447" relation="include">
        </childnode>
        <childnode refid="391443" relation="include">
        </childnode>
        <childnode refid="391431" relation="include">
        </childnode>
        <childnode refid="391466" relation="include">
        </childnode>
        <childnode refid="391467" relation="include">
        </childnode>
        <childnode refid="391450" relation="include">
        </childnode>
        <childnode refid="391444" relation="include">
        </childnode>
        <childnode refid="391419" relation="include">
        </childnode>
        <childnode refid="391421" relation="include">
        </childnode>
        <childnode refid="391468" relation="include">
        </childnode>
        <childnode refid="391469" relation="include">
        </childnode>
        <childnode refid="391457" relation="include">
        </childnode>
        <childnode refid="391470" relation="include">
        </childnode>
      </node>
      <node id="391438">
        <label>AthContainersInterfaces/IAuxTypeVector.h</label>
        <link refid="d8/d0e/IAuxTypeVector_8h"/>
        <childnode refid="391415" relation="include">
        </childnode>
        <childnode refid="391439" relation="include">
        </childnode>
      </node>
      <node id="391546">
        <label>versions/TrackParticle_v1.h</label>
        <link refid="d2/d7f/TrackParticle__v1_8h_source"/>
        <childnode refid="391547" relation="include">
        </childnode>
        <childnode refid="391432" relation="include">
        </childnode>
        <childnode refid="391527" relation="include">
        </childnode>
        <childnode refid="391481" relation="include">
        </childnode>
        <childnode refid="391476" relation="include">
        </childnode>
        <childnode refid="391548" relation="include">
        </childnode>
        <childnode refid="391553" relation="include">
        </childnode>
        <childnode refid="391555" relation="include">
        </childnode>
        <childnode refid="391556" relation="include">
        </childnode>
      </node>
      <node id="391468">
        <label>AthContainers/tools/likely.h</label>
        <link refid="d6/dd6/likely_8h"/>
      </node>
      <node id="391542">
        <label>xAODBTagging/versions/BTagging_v1.h</label>
        <link refid="dc/da1/BTagging__v1_8h_source"/>
        <childnode refid="391411" relation="include">
        </childnode>
        <childnode refid="391527" relation="include">
        </childnode>
        <childnode refid="391543" relation="include">
        </childnode>
        <childnode refid="391544" relation="include">
        </childnode>
        <childnode refid="391560" relation="include">
        </childnode>
        <childnode refid="391574" relation="include">
        </childnode>
        <childnode refid="391539" relation="include">
        </childnode>
        <childnode refid="391444" relation="include">
        </childnode>
        <childnode refid="391424" relation="include">
        </childnode>
        <childnode refid="391509" relation="include">
        </childnode>
        <childnode refid="391428" relation="include">
        </childnode>
      </node>
      <node id="391538">
        <label>xAODJet/versions/Jet_v1.h</label>
        <link refid="df/d71/Jet__v1_8h_source"/>
        <childnode refid="391539" relation="include">
        </childnode>
        <childnode refid="391527" relation="include">
        </childnode>
        <childnode refid="391476" relation="include">
        </childnode>
        <childnode refid="391480" relation="include">
        </childnode>
        <childnode refid="391540" relation="include">
        </childnode>
        <childnode refid="391579" relation="include">
        </childnode>
        <childnode refid="391582" relation="include">
        </childnode>
        <childnode refid="391580" relation="include">
        </childnode>
        <childnode refid="391583" relation="include">
        </childnode>
      </node>
      <node id="391499">
        <label>AthContainers/tools/DVLIterator.h</label>
        <link refid="d3/dc7/DVLIterator_8h_source"/>
        <childnode refid="391482" relation="include">
        </childnode>
        <childnode refid="391497" relation="include">
        </childnode>
        <childnode refid="391500" relation="include">
        </childnode>
        <childnode refid="391502" relation="include">
        </childnode>
        <childnode refid="391487" relation="include">
        </childnode>
        <childnode refid="391420" relation="include">
        </childnode>
        <childnode refid="391421" relation="include">
        </childnode>
      </node>
      <node id="391513">
        <label>SGTools/DataBucket.h</label>
      </node>
      <node id="391539">
        <label>map</label>
      </node>
      <node id="391514">
        <label>AthContainers/tools/DVLDataBucket.icc</label>
        <link refid="d3/d21/DVLDataBucket_8icc"/>
        <childnode refid="391515" relation="include">
        </childnode>
      </node>
      <node id="391515">
        <label>SGTools/IRegisterTransient.h</label>
      </node>
      <node id="391436">
        <label>RootMetaSelection.h</label>
      </node>
      <node id="391454">
        <label>AthContainers/tools/AuxTypeVector.icc</label>
        <link refid="d5/d84/AuxTypeVector_8icc"/>
      </node>
      <node id="391565">
        <label>VxVertex/VxTrackAtVertex.h</label>
      </node>
      <node id="391504">
        <label>AthContainers/tools/DVL_algorithms.h</label>
        <link refid="d0/d7a/DVL__algorithms_8h"/>
        <childnode refid="391499" relation="include">
        </childnode>
        <childnode refid="391420" relation="include">
        </childnode>
        <childnode refid="391418" relation="include">
        </childnode>
        <childnode refid="391505" relation="include">
        </childnode>
      </node>
      <node id="391469">
        <label>AthContainers/tools/assume.h</label>
        <link refid="d2/d20/assume_8h"/>
      </node>
      <node id="391581">
        <label>Math/Vector4D.h</label>
      </node>
      <node id="391451">
        <label>AthContainers/PackedContainer.icc</label>
        <link refid="d1/d0c/PackedContainer_8icc"/>
      </node>
      <node id="391560">
        <label>xAODTracking/VertexContainer.h</label>
        <link refid="d6/dd8/VertexContainer_8h_source"/>
        <childnode refid="391561" relation="include">
        </childnode>
        <childnode refid="391573" relation="include">
        </childnode>
        <childnode refid="391533" relation="include">
        </childnode>
      </node>
      <node id="391500">
        <label>AthContainers/tools/ElementProxy.h</label>
        <link refid="db/d26/ElementProxy_8h"/>
        <childnode refid="391482" relation="include">
        </childnode>
        <childnode refid="391434" relation="include">
        </childnode>
        <childnode refid="391426" relation="include">
        </childnode>
        <childnode refid="391501" relation="include">
        </childnode>
      </node>
      <node id="391412">
        <label>AthContainersInterfaces/IAuxElement.h</label>
        <link refid="dd/d7a/IAuxElement_8h"/>
      </node>
      <node id="391434">
        <label>AthLinks/tools/selection_ns.h</label>
        <link refid="d3/dec/selection__ns_8h"/>
        <childnode refid="391435" relation="include">
        </childnode>
        <childnode refid="391436" relation="include">
        </childnode>
      </node>
      <node id="391467">
        <label>AthenaKernel/IThinningSvc.h</label>
      </node>
      <node id="391460">
        <label>boost/atomic.hpp</label>
      </node>
      <node id="391559">
        <label>xAODTracking/TrackParticleFwd.h</label>
        <link refid="d1/dc4/TrackParticleFwd_8h_source"/>
      </node>
      <node id="391543">
        <label>xAODBTagging/BTaggingEnums.h</label>
        <link refid="dd/de5/BTaggingEnums_8h_source"/>
      </node>
      <node id="391498">
        <label>limits.h</label>
      </node>
      <node id="391492">
        <label>AthContainers/tools/ClassID.h</label>
        <link refid="de/de2/ClassID_8h"/>
        <childnode refid="391493" relation="include">
        </childnode>
      </node>
      <node id="391573">
        <label>xAODTracking/versions/VertexContainer_v1.h</label>
        <link refid="d2/dda/VertexContainer__v1_8h_source"/>
        <childnode refid="391481" relation="include">
        </childnode>
        <childnode refid="391562" relation="include">
        </childnode>
      </node>
      <node id="391446">
        <label>AthContainers/PackedParameters.h</label>
        <link refid="d4/d43/PackedParameters_8h"/>
        <childnode refid="391447" relation="include">
        </childnode>
        <childnode refid="391423" relation="include">
        </childnode>
        <childnode refid="391432" relation="include">
        </childnode>
        <childnode refid="391449" relation="include">
        </childnode>
      </node>
      <node id="391414">
        <label>AthContainersInterfaces/AuxTypes.h</label>
        <link refid="d1/dea/AuxTypes_8h"/>
        <childnode refid="391415" relation="include">
        </childnode>
        <childnode refid="391416" relation="include">
        </childnode>
      </node>
      <node id="391605">
        <label>TVector3.h</label>
      </node>
      <node id="391528">
        <label>AthLinks/ElementLinkBase.h</label>
        <link refid="d0/d16/ElementLinkBase_8h_source"/>
        <childnode refid="391432" relation="include">
        </childnode>
      </node>
      <node id="391552">
        <label>Eigen/Dense</label>
      </node>
      <node id="391417">
        <label>CxxUtils/hashtable.h</label>
        <link refid="dd/d16/hashtable_8h"/>
        <childnode refid="391418" relation="include">
        </childnode>
        <childnode refid="391419" relation="include">
        </childnode>
        <childnode refid="391420" relation="include">
        </childnode>
        <childnode refid="391415" relation="include">
        </childnode>
        <childnode refid="391421" relation="include">
        </childnode>
        <childnode refid="391422" relation="include">
        </childnode>
        <childnode refid="391423" relation="include">
        </childnode>
        <childnode refid="391424" relation="include">
        </childnode>
        <childnode refid="391425" relation="include">
        </childnode>
      </node>
      <node id="391485">
        <label>AthContainers/tools/ATHCONTAINERS_ASSERT.h</label>
        <link refid="de/d6b/ATHCONTAINERS__ASSERT_8h"/>
        <childnode refid="391475" relation="include">
        </childnode>
      </node>
      <node id="391476">
        <label>xAODBase/IParticle.h</label>
        <link refid="d5/dac/IParticle_8h_source"/>
        <childnode refid="391477" relation="include">
        </childnode>
        <childnode refid="391411" relation="include">
        </childnode>
        <childnode refid="391478" relation="include">
        </childnode>
        <childnode refid="391430" relation="include">
        </childnode>
      </node>
      <node id="391478">
        <label>ObjectType.h</label>
        <link refid="d8/d04/ObjectType_8h_source"/>
        <childnode refid="391479" relation="include">
        </childnode>
      </node>
      <node id="391596">
        <label>xAODCaloEvent/versions/CaloCluster_v1.h</label>
        <link refid="dc/d4b/CaloCluster__v1_8h_source"/>
        <childnode refid="391432" relation="include">
        </childnode>
        <childnode refid="391547" relation="include">
        </childnode>
        <childnode refid="391476" relation="include">
        </childnode>
        <childnode refid="391597" relation="include">
        </childnode>
        <childnode refid="391599" relation="include">
        </childnode>
        <childnode refid="391527" relation="include">
        </childnode>
        <childnode refid="391601" relation="include">
        </childnode>
        <childnode refid="391602" relation="include">
        </childnode>
      </node>
      <node id="391582">
        <label>xAODJet/JetAttributes.h</label>
        <link refid="d3/df8/JetAttributes_8h"/>
      </node>
      <node id="391501">
        <label>AthContainers/tools/ElementProxy.icc</label>
        <link refid="d6/d70/ElementProxy_8icc"/>
        <childnode refid="391497" relation="include">
        </childnode>
        <childnode refid="391485" relation="include">
        </childnode>
      </node>
      <node id="391439">
        <label>typeinfo</label>
      </node>
      <node id="391548">
        <label>xAODTracking/TrackingPrimitives.h</label>
        <link refid="d2/d4c/TrackingPrimitives_8h_source"/>
        <childnode refid="391549" relation="include">
        </childnode>
      </node>
      <node id="391474">
        <label>AthContainers/AuxElement.icc</label>
        <link refid="d2/d37/AuxElement_8icc"/>
        <childnode refid="391468" relation="include">
        </childnode>
        <childnode refid="391475" relation="include">
        </childnode>
      </node>
      <node id="391606">
        <label>cstdio</label>
      </node>
      <node id="391595">
        <label>xAODCaloEvent/CaloCluster.h</label>
        <link refid="db/d88/CaloCluster_8h_source"/>
        <childnode refid="391596" relation="include">
        </childnode>
        <childnode refid="391533" relation="include">
        </childnode>
      </node>
      <node id="391592">
        <label>AthLinks/ElementLinkVector.h</label>
        <link refid="de/df1/ElementLinkVector_8h_source"/>
        <childnode refid="391444" relation="include">
        </childnode>
        <childnode refid="391527" relation="include">
        </childnode>
        <childnode refid="391593" relation="include">
        </childnode>
        <childnode refid="391434" relation="include">
        </childnode>
      </node>
      <node id="391481">
        <label>AthContainers/DataVector.h</label>
        <link refid="d7/dd6/DataVector_8h"/>
        <childnode refid="391471" relation="include">
        </childnode>
        <childnode refid="391482" relation="include">
        </childnode>
        <childnode refid="391483" relation="include">
        </childnode>
        <childnode refid="391484" relation="include">
        </childnode>
        <childnode refid="391490" relation="include">
        </childnode>
        <childnode refid="391491" relation="include">
        </childnode>
        <childnode refid="391497" relation="include">
        </childnode>
        <childnode refid="391499" relation="include">
        </childnode>
        <childnode refid="391503" relation="include">
        </childnode>
        <childnode refid="391504" relation="include">
        </childnode>
        <childnode refid="391500" relation="include">
        </childnode>
        <childnode refid="391506" relation="include">
        </childnode>
        <childnode refid="391434" relation="include">
        </childnode>
        <childnode refid="391507" relation="include">
        </childnode>
        <childnode refid="391508" relation="include">
        </childnode>
        <childnode refid="391502" relation="include">
        </childnode>
        <childnode refid="391444" relation="include">
        </childnode>
        <childnode refid="391439" relation="include">
        </childnode>
        <childnode refid="391427" relation="include">
        </childnode>
        <childnode refid="391509" relation="include">
        </childnode>
        <childnode refid="391418" relation="include">
        </childnode>
        <childnode refid="391473" relation="include">
        </childnode>
        <childnode refid="391420" relation="include">
        </childnode>
        <childnode refid="391430" relation="include">
        </childnode>
        <childnode refid="391510" relation="include">
        </childnode>
        <childnode refid="391512" relation="include">
        </childnode>
        <childnode refid="391516" relation="include">
        </childnode>
        <childnode refid="391517" relation="include">
        </childnode>
      </node>
      <node id="391567">
        <label>xAODTracking/NeutralParticle.h</label>
        <link refid="d4/daa/NeutralParticle_8h_source"/>
        <childnode refid="391568" relation="include">
        </childnode>
        <childnode refid="391533" relation="include">
        </childnode>
      </node>
      <node id="391547">
        <label>bitset</label>
      </node>
      <node id="391449">
        <label>AthContainers/PackedParameters.icc</label>
        <link refid="db/d30/PackedParameters_8icc"/>
      </node>
      <node id="391529">
        <label>AthLinks/tools/TypeTools.h</label>
        <link refid="dd/db1/TypeTools_8h_source"/>
      </node>
      <node id="391466">
        <label>AthenaKernel/ILockable.h</label>
      </node>
      <node id="391433">
        <label>AthLinks/DataLinkBase.h</label>
        <link refid="db/da8/DataLinkBase_8h_source"/>
        <childnode refid="391432" relation="include">
        </childnode>
      </node>
      <node id="391562">
        <label>xAODTracking/versions/Vertex_v1.h</label>
        <link refid="d7/dcc/Vertex__v1_8h_source"/>
        <childnode refid="391444" relation="include">
        </childnode>
        <childnode refid="391411" relation="include">
        </childnode>
        <childnode refid="391527" relation="include">
        </childnode>
        <childnode refid="391549" relation="include">
        </childnode>
        <childnode refid="391563" relation="include">
        </childnode>
        <childnode refid="391565" relation="include">
        </childnode>
        <childnode refid="391548" relation="include">
        </childnode>
        <childnode refid="391558" relation="include">
        </childnode>
        <childnode refid="391566" relation="include">
        </childnode>
        <childnode refid="391478" relation="include">
        </childnode>
        <childnode refid="391535" relation="include">
        </childnode>
      </node>
      <node id="391448">
        <label>AthContainersInterfaces/AuxDataOption.icc</label>
        <link refid="db/d68/AuxDataOption_8icc"/>
      </node>
      <node id="391453">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="391491">
        <label>AthContainers/tools/DVLInfo.h</label>
        <link refid="d3/d2e/DVLInfo_8h"/>
        <childnode refid="391492" relation="include">
        </childnode>
        <childnode refid="391484" relation="include">
        </childnode>
        <childnode refid="391439" relation="include">
        </childnode>
        <childnode refid="391415" relation="include">
        </childnode>
        <childnode refid="391425" relation="include">
        </childnode>
        <childnode refid="391494" relation="include">
        </childnode>
        <childnode refid="391452" relation="include">
        </childnode>
        <childnode refid="391495" relation="include">
        </childnode>
      </node>
      <node id="391428">
        <label>SGTools/CLASS_DEF.h</label>
      </node>
      <node id="391550">
        <label>unistd.h</label>
      </node>
      <node id="391510">
        <label>AthContainers/ClassName.h</label>
        <link refid="dd/d6b/AthContainers_2AthContainers_2ClassName_8h_source"/>
        <childnode refid="391511" relation="include">
        </childnode>
      </node>
      <node id="391437">
        <label>AthContainers/AuxTypeRegistry.h</label>
        <link refid="db/d7f/AuxTypeRegistry_8h"/>
        <childnode refid="391414" relation="include">
        </childnode>
        <childnode refid="391438" relation="include">
        </childnode>
        <childnode refid="391440" relation="include">
        </childnode>
        <childnode refid="391441" relation="include">
        </childnode>
        <childnode refid="391455" relation="include">
        </childnode>
        <childnode refid="391457" relation="include">
        </childnode>
        <childnode refid="391415" relation="include">
        </childnode>
        <childnode refid="391439" relation="include">
        </childnode>
        <childnode refid="391444" relation="include">
        </childnode>
        <childnode refid="391463" relation="include">
        </childnode>
        <childnode refid="391464" relation="include">
        </childnode>
      </node>
      <node id="391444">
        <label>vector</label>
      </node>
      <node id="391480">
        <label>xAODBase/IParticleContainer.h</label>
        <link refid="dd/d2d/IParticleContainer_8h_source"/>
        <childnode refid="391481" relation="include">
        </childnode>
        <childnode refid="391476" relation="include">
        </childnode>
        <childnode refid="391428" relation="include">
        </childnode>
      </node>
      <node id="391518">
        <label>AthContainers/tools/CompareAndPrint.h</label>
        <link refid="d5/da8/CompareAndPrint_8h_source"/>
        <childnode refid="391418" relation="include">
        </childnode>
        <childnode refid="391439" relation="include">
        </childnode>
      </node>
      <node id="391410">
        <label>xAODMissingET/versions/MissingETAssociation_v1.h</label>
        <link refid="d4/dd5/MissingETAssociation__v1_8h_source"/>
        <childnode refid="391411" relation="include">
        </childnode>
        <childnode refid="391476" relation="include">
        </childnode>
        <childnode refid="391480" relation="include">
        </childnode>
        <childnode refid="391520" relation="include">
        </childnode>
        <childnode refid="391532" relation="include">
        </childnode>
        <childnode refid="391444" relation="include">
        </childnode>
        <childnode refid="391585" relation="include">
        </childnode>
      </node>
      <node id="391561">
        <label>xAODTracking/Vertex.h</label>
        <link refid="d9/d2d/Vertex_8h_source"/>
        <childnode refid="391562" relation="include">
        </childnode>
      </node>
      <node id="391570">
        <label>xAODTracking/versions/NeutralParticleContainer_v1.h</label>
        <link refid="d6/d5f/NeutralParticleContainer__v1_8h_source"/>
        <childnode refid="391432" relation="include">
        </childnode>
        <childnode refid="391481" relation="include">
        </childnode>
        <childnode refid="391568" relation="include">
        </childnode>
        <childnode refid="391571" relation="include">
        </childnode>
      </node>
      <node id="391583">
        <label>xAODJet/JetContainerInfo.h</label>
        <link refid="d8/d2a/JetContainerInfo_8h_source"/>
        <childnode refid="391424" relation="include">
        </childnode>
      </node>
      <node id="391523">
        <label>AthContainers/ConstDataVector.h</label>
        <link refid="d2/d0d/ConstDataVector_8h"/>
        <childnode refid="391481" relation="include">
        </childnode>
        <childnode refid="391524" relation="include">
        </childnode>
        <childnode refid="391525" relation="include">
        </childnode>
      </node>
      <node id="391519">
        <label>AthContainers/tools/DVLEltBaseInfo.icc</label>
        <link refid="dd/d5e/DVLEltBaseInfo_8icc"/>
      </node>
      <node id="391593">
        <label>AthLinks/ElementLinkVectorBase.h</label>
        <link refid="dc/d52/ElementLinkVectorBase_8h_source"/>
        <childnode refid="391432" relation="include">
        </childnode>
        <childnode refid="391444" relation="include">
        </childnode>
      </node>
      <node id="391540">
        <label>xAODBTagging/BTaggingContainer.h</label>
        <link refid="d8/d3b/BTaggingContainer_8h_source"/>
        <childnode refid="391541" relation="include">
        </childnode>
        <childnode refid="391578" relation="include">
        </childnode>
        <childnode refid="391533" relation="include">
        </childnode>
      </node>
      <node id="391599">
        <label>xAODCaloEvent/CaloClusterBadChannelData.h</label>
        <link refid="d1/d93/CaloClusterBadChannelData_8h_source"/>
        <childnode refid="391600" relation="include">
        </childnode>
      </node>
      <node id="391419">
        <label>utility</label>
      </node>
      <node id="391516">
        <label>SGTools/DataBucketTraitFwd.h</label>
      </node>
      <node id="391450">
        <label>CxxUtils/override.h</label>
        <link refid="de/d0e/override_8h"/>
      </node>
      <node id="391603">
        <label>xAODCaloEvent/CaloClusterContainer.h</label>
        <link refid="da/dc3/CaloClusterContainer_8h_source"/>
        <childnode refid="391595" relation="include">
        </childnode>
        <childnode refid="391604" relation="include">
        </childnode>
        <childnode refid="391533" relation="include">
        </childnode>
      </node>
      <node id="391532">
        <label>xAODMissingET/versions/MissingET_v1.h</label>
        <link refid="df/d79/MissingET__v1_8h_source"/>
        <childnode refid="391411" relation="include">
        </childnode>
        <childnode refid="391476" relation="include">
        </childnode>
        <childnode refid="391521" relation="include">
        </childnode>
        <childnode refid="391424" relation="include">
        </childnode>
        <childnode refid="391427" relation="include">
        </childnode>
        <childnode refid="391419" relation="include">
        </childnode>
      </node>
      <node id="391588">
        <label>xAODTruth/TruthVertexContainerFwd.h</label>
        <link refid="da/ddf/TruthVertexContainerFwd_8h_source"/>
        <childnode refid="391481" relation="include">
        </childnode>
        <childnode refid="391589" relation="include">
        </childnode>
      </node>
      <node id="391563">
        <label>GeoPrimitives/GeoPrimitives.h</label>
        <link refid="d7/d87/GeoPrimitives_8h_source"/>
        <childnode refid="391550" relation="include">
        </childnode>
        <childnode refid="391564" relation="include">
        </childnode>
      </node>
      <node id="391590">
        <label>xAODPFlow/PFO.h</label>
        <link refid="d1/d98/PFO_8h_source"/>
        <childnode refid="391591" relation="include">
        </childnode>
        <childnode refid="391533" relation="include">
        </childnode>
      </node>
      <node id="391554">
        <label>xAODTracking/VertexFwd.h</label>
        <link refid="d9/ddd/VertexFwd_8h_source"/>
      </node>
      <node id="391489">
        <label>AthContainers/AuxVectorBase.icc</label>
        <link refid="d4/d50/AuxVectorBase_8icc"/>
      </node>
      <node id="391458">
        <label>boost/thread/shared_mutex.hpp</label>
      </node>
      <node id="391575">
        <label>xAODBTagging/BTagVertex.h</label>
        <link refid="d4/d51/BTagVertex_8h_source"/>
        <childnode refid="391576" relation="include">
        </childnode>
      </node>
      <node id="391531">
        <label>xAODMissingET/MissingET.h</label>
        <link refid="d0/d22/MissingET_8h_source"/>
        <childnode refid="391532" relation="include">
        </childnode>
        <childnode refid="391533" relation="include">
        </childnode>
      </node>
      <node id="391442">
        <label>AthContainersInterfaces/IAuxSetOption.h</label>
        <link refid="d7/d7e/IAuxSetOption_8h"/>
      </node>
      <node id="391534">
        <label>xAODMissingET/versions/MissingETContainer_v1.h</label>
        <link refid="df/df3/MissingETContainer__v1_8h_source"/>
        <childnode refid="391481" relation="include">
        </childnode>
        <childnode refid="391521" relation="include">
        </childnode>
        <childnode refid="391532" relation="include">
        </childnode>
        <childnode refid="391424" relation="include">
        </childnode>
        <childnode refid="391535" relation="include">
        </childnode>
      </node>
      <node id="391457">
        <label>AthContainers/tools/threading.h</label>
        <link refid="d7/d22/threading_8h"/>
        <childnode refid="391458" relation="include">
        </childnode>
        <childnode refid="391459" relation="include">
        </childnode>
        <childnode refid="391460" relation="include">
        </childnode>
        <childnode refid="391461" relation="include">
        </childnode>
        <childnode refid="391462" relation="include">
        </childnode>
      </node>
      <node id="391598">
        <label>CaloGeoHelpers/CaloSampling.def</label>
      </node>
      <node id="391479">
        <label>iosfwd</label>
      </node>
      <node id="391421">
        <label>cstdlib</label>
      </node>
      <node id="391545">
        <label>xAODTracking/TrackParticle.h</label>
        <link refid="d2/d15/TrackParticle_8h_source"/>
        <childnode refid="391546" relation="include">
        </childnode>
        <childnode refid="391533" relation="include">
        </childnode>
      </node>
      <node id="391509">
        <label>iostream</label>
      </node>
      <node id="391472">
        <label>CxxUtils/noreturn.h</label>
        <link refid="de/d6f/noreturn_8h"/>
      </node>
      <node id="391557">
        <label>xAODTracking/versions/TrackParticleContainer_v1.h</label>
        <link refid="d7/d3b/TrackParticleContainer__v1_8h_source"/>
        <childnode refid="391432" relation="include">
        </childnode>
        <childnode refid="391481" relation="include">
        </childnode>
        <childnode refid="391546" relation="include">
        </childnode>
        <childnode refid="391558" relation="include">
        </childnode>
      </node>
      <node id="391413">
        <label>AthContainersInterfaces/IConstAuxStore.h</label>
        <link refid="d7/d3a/IConstAuxStore_8h"/>
        <childnode refid="391414" relation="include">
        </childnode>
        <childnode refid="391415" relation="include">
        </childnode>
        <childnode refid="391428" relation="include">
        </childnode>
      </node>
      <node id="391415">
        <label>cstddef</label>
      </node>
      <node id="391470">
        <label>AthContainers/AuxVectorData.icc</label>
        <link refid="da/de7/AuxVectorData_8icc"/>
        <childnode refid="391437" relation="include">
        </childnode>
        <childnode refid="391429" relation="include">
        </childnode>
        <childnode refid="391413" relation="include">
        </childnode>
        <childnode refid="391468" relation="include">
        </childnode>
        <childnode refid="391469" relation="include">
        </childnode>
      </node>
      <node id="391535">
        <label>xAODCore/BaseInfo.h</label>
        <link refid="d3/d17/BaseInfo_8h_source"/>
        <childnode refid="391430" relation="include">
        </childnode>
      </node>
      <node id="391541">
        <label>xAODBTagging/BTagging.h</label>
        <link refid="d2/d81/BTagging_8h_source"/>
        <childnode refid="391542" relation="include">
        </childnode>
      </node>
      <node id="391580">
        <label>xAODJet/JetTypes.h</label>
        <link refid="d6/d2a/JetTypes_8h_source"/>
        <childnode refid="391581" relation="include">
        </childnode>
      </node>
      <node id="391594">
        <label>xAODPFlow/PFODefs.h</label>
        <link refid="de/d76/xAODPFlow_2xAODPFlow_2PFODefs_8h_source"/>
        <childnode refid="391581" relation="include">
        </childnode>
      </node>
      <node id="391579">
        <label>xAODJet/JetConstituentVector.h</label>
        <link refid="de/dd4/JetConstituentVector_8h_source"/>
        <childnode refid="391527" relation="include">
        </childnode>
        <childnode refid="391476" relation="include">
        </childnode>
        <childnode refid="391480" relation="include">
        </childnode>
        <childnode refid="391580" relation="include">
        </childnode>
      </node>
      <node id="391569">
        <label>TrkNeutralParameters/NeutralParameters.h</label>
      </node>
      <node id="391495">
        <label>AthContainers/tools/DVLInfo.icc</label>
        <link refid="da/d83/DVLInfo_8icc"/>
        <childnode refid="391482" relation="include">
        </childnode>
        <childnode refid="391444" relation="include">
        </childnode>
        <childnode refid="391496" relation="include">
        </childnode>
        <childnode refid="391475" relation="include">
        </childnode>
        <childnode refid="391421" relation="include">
        </childnode>
        <childnode refid="391430" relation="include">
        </childnode>
      </node>
      <node id="391441">
        <label>AthContainers/tools/AuxTypeVector.h</label>
        <link refid="d6/dd2/AuxTypeVector_8h"/>
        <childnode refid="391438" relation="include">
        </childnode>
        <childnode refid="391442" relation="include">
        </childnode>
        <childnode refid="391443" relation="include">
        </childnode>
        <childnode refid="391445" relation="include">
        </childnode>
        <childnode refid="391450" relation="include">
        </childnode>
        <childnode refid="391439" relation="include">
        </childnode>
        <childnode refid="391444" relation="include">
        </childnode>
        <childnode refid="391418" relation="include">
        </childnode>
        <childnode refid="391432" relation="include">
        </childnode>
        <childnode refid="391452" relation="include">
        </childnode>
        <childnode refid="391453" relation="include">
        </childnode>
        <childnode refid="391454" relation="include">
        </childnode>
      </node>
      <node id="391520">
        <label>xAODMissingET/versions/MissingETCompositionBase.h</label>
        <link refid="d9/d25/MissingETCompositionBase_8h_source"/>
        <childnode refid="391521" relation="include">
        </childnode>
        <childnode refid="391476" relation="include">
        </childnode>
        <childnode refid="391480" relation="include">
        </childnode>
        <childnode refid="391523" relation="include">
        </childnode>
        <childnode refid="391527" relation="include">
        </childnode>
        <childnode refid="391530" relation="include">
        </childnode>
        <childnode refid="391536" relation="include">
        </childnode>
        <childnode refid="391444" relation="include">
        </childnode>
        <childnode refid="391420" relation="include">
        </childnode>
      </node>
      <node id="391555">
        <label>TrkParameters/TrackParameters.h</label>
      </node>
      <node id="391536">
        <label>xAODJet/JetContainer.h</label>
        <link refid="d5/d55/JetContainer_8h_source"/>
        <childnode refid="391537" relation="include">
        </childnode>
        <childnode refid="391584" relation="include">
        </childnode>
        <childnode refid="391533" relation="include">
        </childnode>
      </node>
      <node id="391586">
        <label>xAODTruth/TruthParticle.h</label>
        <link refid="dd/d44/TruthParticle_8h_source"/>
        <childnode refid="391587" relation="include">
        </childnode>
      </node>
      <node id="391568">
        <label>versions/NeutralParticle_v1.h</label>
        <link refid="da/d85/NeutralParticle__v1_8h_source"/>
        <childnode refid="391527" relation="include">
        </childnode>
        <childnode refid="391481" relation="include">
        </childnode>
        <childnode refid="391476" relation="include">
        </childnode>
        <childnode refid="391548" relation="include">
        </childnode>
        <childnode refid="391553" relation="include">
        </childnode>
        <childnode refid="391547" relation="include">
        </childnode>
        <childnode refid="391432" relation="include">
        </childnode>
        <childnode refid="391569" relation="include">
        </childnode>
      </node>
      <node id="391572">
        <label>xAODTracking/NeutralParticleFwd.h</label>
        <link refid="d4/d90/NeutralParticleFwd_8h_source"/>
      </node>
      <node id="391452">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="391566">
        <label>xAODTracking/NeutralParticleContainer.h</label>
        <link refid="da/d7f/NeutralParticleContainer_8h_source"/>
        <childnode refid="391567" relation="include">
        </childnode>
        <childnode refid="391570" relation="include">
        </childnode>
        <childnode refid="391533" relation="include">
        </childnode>
      </node>
      <node id="391484">
        <label>AthContainers/AuxVectorBase.h</label>
        <link refid="d7/d18/AuxVectorBase_8h"/>
        <childnode refid="391465" relation="include">
        </childnode>
        <childnode refid="391482" relation="include">
        </childnode>
        <childnode refid="391483" relation="include">
        </childnode>
        <childnode refid="391411" relation="include">
        </childnode>
        <childnode refid="391437" relation="include">
        </childnode>
        <childnode refid="391471" relation="include">
        </childnode>
        <childnode refid="391485" relation="include">
        </childnode>
        <childnode refid="391429" relation="include">
        </childnode>
        <childnode refid="391486" relation="include">
        </childnode>
        <childnode refid="391444" relation="include">
        </childnode>
        <childnode refid="391489" relation="include">
        </childnode>
      </node>
      <node id="391585">
        <label>set</label>
      </node>
      <node id="391533">
        <label>xAODCore/CLASS_DEF.h</label>
        <link refid="d6/d20/xAODCore_2xAODCore_2CLASS__DEF_8h"/>
        <childnode refid="391428" relation="include">
        </childnode>
      </node>
      <node id="391456">
        <label>AthContainers/tools/AuxTypeVectorFactory.icc</label>
        <link refid="dc/d02/AuxTypeVectorFactory_8icc"/>
      </node>
      <node id="391445">
        <label>AthContainers/PackedContainer.h</label>
        <link refid="d6/dda/PackedContainer_8h"/>
        <childnode refid="391442" relation="include">
        </childnode>
        <childnode refid="391446" relation="include">
        </childnode>
        <childnode refid="391450" relation="include">
        </childnode>
        <childnode refid="391444" relation="include">
        </childnode>
        <childnode refid="391451" relation="include">
        </childnode>
      </node>
      <node id="391418">
        <label>algorithm</label>
      </node>
      <node id="391601">
        <label>CaloEvent/CaloClusterCellLinkContainer.h</label>
      </node>
      <node id="391506">
        <label>AthContainers/tools/IsMostDerivedFlag.h</label>
        <link refid="d5/dfa/IsMostDerivedFlag_8h"/>
      </node>
      <node id="391556">
        <label>TrkTrack/TrackCollection.h</label>
      </node>
      <node id="391411">
        <label>AthContainers/AuxElement.h</label>
        <link refid="d1/d6f/AuxElement_8h"/>
        <childnode refid="391412" relation="include">
        </childnode>
        <childnode refid="391413" relation="include">
        </childnode>
        <childnode refid="391429" relation="include">
        </childnode>
        <childnode refid="391431" relation="include">
        </childnode>
        <childnode refid="391437" relation="include">
        </childnode>
        <childnode refid="391465" relation="include">
        </childnode>
        <childnode refid="391443" relation="include">
        </childnode>
        <childnode refid="391471" relation="include">
        </childnode>
        <childnode refid="391468" relation="include">
        </childnode>
        <childnode refid="391415" relation="include">
        </childnode>
        <childnode refid="391474" relation="include">
        </childnode>
      </node>
      <node id="391431">
        <label>AthLinks/DataLink.h</label>
        <link refid="da/de8/DataLink_8h_source"/>
        <childnode refid="391432" relation="include">
        </childnode>
        <childnode refid="391424" relation="include">
        </childnode>
        <childnode refid="391433" relation="include">
        </childnode>
        <childnode refid="391434" relation="include">
        </childnode>
      </node>
      <node id="391503">
        <label>AthContainers/tools/DVL_iter_swap.h</label>
        <link refid="d6/ddb/DVL__iter__swap_8h"/>
        <childnode refid="391499" relation="include">
        </childnode>
        <childnode refid="391485" relation="include">
        </childnode>
        <childnode refid="391420" relation="include">
        </childnode>
      </node>
      <node id="391482">
        <label>AthContainers/OwnershipPolicy.h</label>
        <link refid="d3/da4/OwnershipPolicy_8h_source"/>
      </node>
      <node id="391527">
        <label>AthLinks/ElementLink.h</label>
        <link refid="dc/d24/ElementLink_8h_source"/>
        <childnode refid="391432" relation="include">
        </childnode>
        <childnode refid="391424" relation="include">
        </childnode>
        <childnode refid="391528" relation="include">
        </childnode>
        <childnode refid="391434" relation="include">
        </childnode>
        <childnode refid="391529" relation="include">
        </childnode>
      </node>
      <node id="391577">
        <label>xAODBTagging/versions/BTagVertexContainer_v1.h</label>
        <link refid="d1/d37/BTagVertexContainer__v1_8h_source"/>
        <childnode refid="391481" relation="include">
        </childnode>
        <childnode refid="391576" relation="include">
        </childnode>
      </node>
      <node id="391544">
        <label>xAODTracking/TrackParticleContainer.h</label>
        <link refid="da/d31/TrackParticleContainer_8h_source"/>
        <childnode refid="391545" relation="include">
        </childnode>
        <childnode refid="391557" relation="include">
        </childnode>
        <childnode refid="391533" relation="include">
        </childnode>
      </node>
      <node id="391493">
        <label>GaudiKernel/ClassID.h</label>
      </node>
      <node id="391508">
        <label>boost/type_traits.hpp</label>
      </node>
      <node id="391426">
        <label>memory</label>
      </node>
      <node id="391571">
        <label>xAODTracking/NeutralParticleContainerFwd.h</label>
        <link refid="d2/db4/NeutralParticleContainerFwd_8h_source"/>
        <childnode refid="391481" relation="include">
        </childnode>
        <childnode refid="391480" relation="include">
        </childnode>
        <childnode refid="391572" relation="include">
        </childnode>
      </node>
      <node id="391455">
        <label>AthContainers/tools/AuxTypeVectorFactory.h</label>
        <link refid="dc/d69/AuxTypeVectorFactory_8h"/>
        <childnode refid="391440" relation="include">
        </childnode>
        <childnode refid="391441" relation="include">
        </childnode>
        <childnode refid="391456" relation="include">
        </childnode>
      </node>
      <node id="391486">
        <label>AthContainersInterfaces/AuxStore_traits.h</label>
        <link refid="dd/d70/AuxStore__traits_8h"/>
        <childnode refid="391412" relation="include">
        </childnode>
        <childnode refid="391429" relation="include">
        </childnode>
        <childnode refid="391413" relation="include">
        </childnode>
        <childnode refid="391452" relation="include">
        </childnode>
        <childnode refid="391487" relation="include">
        </childnode>
        <childnode refid="391488" relation="include">
        </childnode>
        <childnode refid="391424" relation="include">
        </childnode>
      </node>
      <node id="391574">
        <label>xAODBTagging/BTagVertexContainer.h</label>
        <link refid="d5/da2/BTagVertexContainer_8h_source"/>
        <childnode refid="391575" relation="include">
        </childnode>
        <childnode refid="391577" relation="include">
        </childnode>
        <childnode refid="391533" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="dd/d44/namespacexAOD">xAOD</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;xAODMissingET/versions/MissingETAssociation_v1.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODMissingET/versions/MissingETCompositionBase.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODJet/JetContainer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODTruth/TruthParticle.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xAODPFlow/PFO.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iterator&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdio&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">MissingETBase::Types;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::vector;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">xAOD<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member" tooltip="Type for status word bit mask.">MissingETBase::Types::bitmask_t</ref><sp/>getObjMask(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>objIndex)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(objIndex==<ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1&lt;&lt;objIndex;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>MissingETAssociation_v1::ConstVec<sp/>Implementations<sp/>//</highlight></codeline>
<codeline lineno="24"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>MissingETAssociation_v1::ConstVec&amp;<sp/><ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec_1a043283e62d9b4b90c0bf773f072b105f" kindref="member" tooltip="Add another vector.">MissingETAssociation_v1::ConstVec::operator+=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ConstVec&amp;<sp/>cvec)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec_1a5818e9b9eb7ced53722e7b7c87ef69af" kindref="member" tooltip="Returns .">cpx</ref>()<sp/>+=<sp/>cvec.cpx();<sp/>this-&gt;<ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec_1a9dff41cc936ef9eceb322a3d6b4e71bf" kindref="member" tooltip="Returns .">cpy</ref>()<sp/>+=<sp/>cvec.cpy();<sp/>this-&gt;<ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec_1abf61c422a1bcdac172213438d77e8593" kindref="member" tooltip="Returns .">cpz</ref>()<sp/>+=<sp/>cvec.cpz();<sp/>this-&gt;<ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec_1a100840928dd5eecfb308d45ee2b4db20" kindref="member" tooltip="Returns .">ce</ref>()<sp/>+=<sp/>cvec.ce();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec_1a7113d6c885e9e0d1bdebb1fc234b6357" kindref="member" tooltip="Returns sum of component pt.">sumpt</ref>()<sp/>+=<sp/>cvec.sumpt();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>MissingETAssociation_v1::ConstVec&amp;<sp/><ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec_1a92e66f6d04106ab2cf20ee5804dd1a0f" kindref="member" tooltip="Subtract another vector.">MissingETAssociation_v1::ConstVec::operator-=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ConstVec&amp;<sp/>cvec)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;cpx()<sp/>-=<sp/>cvec.<ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec_1a5818e9b9eb7ced53722e7b7c87ef69af" kindref="member" tooltip="Returns .">cpx</ref>();<sp/>this-&gt;cpy()<sp/>-=<sp/>cvec.cpy();<sp/>this-&gt;cpz()<sp/>-=<sp/>cvec.cpz();<sp/>this-&gt;ce()<sp/>-=<sp/>cvec.ce();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;sumpt()<sp/>-=<sp/>cvec.sumpt();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>MissingETAssociation_v1::ConstVec&amp;<sp/>MissingETAssociation_v1::ConstVec::operator*=(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;cpx()<sp/>*=<sp/>scale;<sp/>this-&gt;cpy()<sp/>*=<sp/>scale;<sp/>this-&gt;cpz()<sp/>*=<sp/>scale;<sp/>this-&gt;ce()<sp/>*=<sp/>scale;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;sumpt()<sp/>*=<sp/>scale;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>MissingETAssociation_v1::ConstVec&amp;<sp/>MissingETAssociation_v1::ConstVec::operator/=(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>scale<sp/>&lt;1e-9<sp/>)<sp/>{<sp/>this-&gt;cpx()<sp/>=<sp/>0.;<sp/>this-&gt;cpy()<sp/>=<sp/>0.;<sp/>this-&gt;cpz()<sp/>=<sp/>0.;<sp/>this-&gt;ce()<sp/>=<sp/>0.;<sp/>this-&gt;sumpt()<sp/>=<sp/>0.;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;operator*=(1./scale);<sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d1/d43/DataList_8h_1a2f4af3db6bca5dc8d962d673635f0865" kindref="member" tooltip="List equality comparison.">MissingETAssociation_v1::ConstVec::operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ConstVec&amp;<sp/>cvec)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="53"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ac87f20c3131aaad5831c12c0c03519a3" kindref="member" tooltip="Test of equality.">MissingETBase::Numerical::isEqual</ref>(this-&gt;cpx(),cvec.cpx())<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ac87f20c3131aaad5831c12c0c03519a3" kindref="member" tooltip="Test of equality.">MissingETBase::Numerical::isEqual</ref>(this-&gt;cpy(),cvec.cpy())<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ac87f20c3131aaad5831c12c0c03519a3" kindref="member" tooltip="Test of equality.">MissingETBase::Numerical::isEqual</ref>(this-&gt;cpz(),cvec.cpz())<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ac87f20c3131aaad5831c12c0c03519a3" kindref="member" tooltip="Test of equality.">MissingETBase::Numerical::isEqual</ref>(this-&gt;ce(),cvec.ce())<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ac87f20c3131aaad5831c12c0c03519a3" kindref="member" tooltip="Test of equality.">MissingETBase::Numerical::isEqual</ref>(this-&gt;sumpt(),cvec.sumpt());</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::ConstVec::cpt()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="63"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(this-&gt;cpx()*this-&gt;cpx()+this-&gt;cpy()*this-&gt;cpy());</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Internally<sp/>used<sp/>constants<sp/>//</highlight></codeline>
<codeline lineno="70"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::m_objConstLinkReserve<sp/>=<sp/>50;<sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::m_contribObjReserve<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructors<sp/>and<sp/>destructors<sp/>//</highlight></codeline>
<codeline lineno="77"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>MissingETAssociation_v1::MissingETAssociation_v1(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>createStore<sp/>)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>SG::<ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound" tooltip="Base class for elements of a container that can have aux data.">AuxElement</ref>(),</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_lastObjectPointer(<sp/>0<sp/>),</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_lastObjectIndex(<sp/>MissingETBase::Numerical::invalidIndex()<sp/>)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>createStore<sp/>)<sp/>createPrivateStore();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>initCache();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>MissingETAssociation_v1::MissingETAssociation_v1(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Jet*<sp/>pJet,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isMisc<sp/>)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>SG::<ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound" tooltip="Base class for elements of a container that can have aux data.">AuxElement</ref>(),</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_lastObjectPointer(<sp/>0<sp/>),</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_lastObjectIndex(<sp/>MissingETBase::Numerical::invalidIndex()<sp/>)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>createPrivateStore();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>f_isMisc()<sp/>=<sp/>isMisc;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>setRefJet(<sp/>pJet<sp/>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>initCache();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>MissingETAssociation_v1::MissingETAssociation_v1(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MissingETAssociation_v1&amp;<sp/>assocDescr)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>SG::<ref refid="dc/db0/classSG_1_1AuxElement" kindref="compound" tooltip="Base class for elements of a container that can have aux data.">AuxElement</ref>()</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_lastObjectPointer(assocDescr.m_lastObjectPointer)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>m_lastObjectIndex(assocDescr.m_lastObjectIndex)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;makePrivateStore(&amp;assocDescr);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>initCache();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>MissingETAssociation_v1&amp;<sp/>MissingETAssociation_v1::operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MissingETAssociation_v1&amp;<sp/>assocDescr)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((&amp;assocDescr)<sp/>!=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>{<sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_lastObjectPointer<sp/>=<sp/>assocDescr.m_lastObjectPointer;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_lastObjectIndex<sp/><sp/><sp/>=<sp/>assocDescr.m_lastObjectIndex;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f_isMisc()<sp/>=<sp/>assocDescr.isMisc();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;setJetLink(assocDescr.jetLink());</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;setObjectLinks(assocDescr.objectLinks());</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;setOverlaps(assocDescr.overlapIndices(),assocDescr.overlapTypes());</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;setCalPx(assocDescr.calpx());</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;setCalPy(assocDescr.calpy());</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;setCalPz(assocDescr.calpz());</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;setCalE(assocDescr.cale());<sp/><sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;setCalSumpt(assocDescr.calsumpt());<sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;setCalKey(assocDescr.calkey());</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;setTrkPx(assocDescr.trkpx());</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;setTrkPy(assocDescr.trkpy());</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;setTrkPz(assocDescr.trkpz());</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;setTrkE(assocDescr.trke());<sp/><sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;setTrkSumpt(assocDescr.trksumpt());<sp/><sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;setTrkKey(assocDescr.trkkey());<sp/><sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;setJetTrkPx(assocDescr.jettrkpx());</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;setJetTrkPy(assocDescr.jettrkpy());</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;setJetTrkPz(assocDescr.jettrkpz());</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;setJetTrkE(assocDescr.jettrke());</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>MissingETAssociation_v1::~MissingETAssociation_v1()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Data<sp/>store<sp/>management<sp/>//</highlight></codeline>
<codeline lineno="143"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::addObject(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IParticle*<sp/>pPart,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;const<sp/>IParticle*&gt;&amp;<sp/>constlist)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>object<sp/>is<sp/>in<sp/>store</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx(this-&gt;findIndex(pPart));</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>found<sp/>-<sp/>add<sp/>const<sp/>vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>idx<sp/>!=<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/>)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>m_objConstLinks[idx].clear();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>m_objConstLinks[idx].reserve(constlist.size());</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>signal<sp/>:<sp/>constlist)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d44/namespacexAOD_1af9180607c834ca3623ad4eb67d8bb273" kindref="member">IParticleContainer</ref>*<sp/>pCont<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="dd/d44/namespacexAOD_1af9180607c834ca3623ad4eb67d8bb273" kindref="member">IParticleContainer</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(signal-&gt;container());</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">MissingETBase::Types::objlink_t</ref><sp/>el(*pCont,signal-&gt;index());</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_objConstLinks[idx].push_back(el);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>new<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">MissingETBase::Types::objlink_t</ref><sp/>oLnk;<sp/>f_setObject&lt;IParticle,MissingETBase::Types::objlink_t&gt;(pPart,oLnk);<sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>to<sp/>stores</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_objectLinks().push_back(oLnk);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;MissingETBase::Types::objlink_t<sp/>&gt;<sp/>linklist;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>linklist.reserve(constlist.size());</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>signal<sp/>:<sp/>constlist)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d44/namespacexAOD_1af9180607c834ca3623ad4eb67d8bb273" kindref="member">IParticleContainer</ref>*<sp/>pCont<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="dd/d44/namespacexAOD_1af9180607c834ca3623ad4eb67d8bb273" kindref="member">IParticleContainer</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(signal-&gt;container());</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">MissingETBase::Types::objlink_t</ref><sp/>el(*pCont,signal-&gt;index());</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>linklist.push_back(el);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>m_objConstLinks.push_back(linklist);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_overlapIndices().push_back(vector&lt;size_t&gt;(0));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_overlapTypes().push_back(vector&lt;unsigned<sp/>char&gt;(0));</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>linkset<sp/>=<sp/>f_setLink&lt;MissingETBase::Types::objlink_t&gt;(oLnk);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>linkset;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::updateLinks()</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;updateJetLink();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Accessor&lt;MissingETBase::Types::objlink_vector_t&gt;</ref><sp/>acc(</highlight><highlight class="stringliteral">&quot;objectLinks&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(acc.isAvailableWritable(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>link<sp/>:<sp/>this-&gt;f_objectLinks()<sp/>)<sp/>{<sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>link.toPersistent();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::updateJetLink()<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!this-&gt;isMisc())<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d8/d31/classSG_1_1AuxElement_1_1Accessor" kindref="compound" tooltip="Helper class to provide type-safe access to aux data.">SG::AuxElement::Accessor&lt;MissingETBase::Types::jetlink_t&gt;</ref><sp/>acc(</highlight><highlight class="stringliteral">&quot;jetLink&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(acc.isAvailableWritable(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(f_setLink&lt;MissingETBase::Types::jetlink_t&gt;(this-&gt;f_jetLink()))<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;f_jetLink().toPersistent();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::removeContrib()</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>this-&gt;empty()<sp/>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nEnt(this-&gt;size());<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>objIdx(0);<sp/>objIdx&lt;nEnt;<sp/>++objIdx<sp/>)<sp/>{<sp/>this-&gt;f_removeContrib(objIdx);<sp/>}<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::f_removeContrib(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>objIdx)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>objlink_vector_t::iterator<sp/>fCon(this-&gt;f_objectLinks().begin());<sp/>std::advance&lt;objlink_vector_t::iterator&gt;(fCon,objIdx);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_objectLinks().erase(fCon);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;vector&lt;size_t&gt;<sp/>&gt;::iterator<sp/>fOverlapIndices(this-&gt;f_overlapIndices().begin());<sp/>std::advance&lt;vector&lt;vector&lt;size_t&gt;<sp/>&gt;::iterator&gt;(fOverlapIndices,objIdx);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_overlapIndices().erase(fOverlapIndices);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;vector&lt;unsigned<sp/>char&gt;<sp/>&gt;::iterator<sp/>fOverlapTypes(this-&gt;f_overlapTypes().begin());<sp/>std::advance&lt;vector&lt;vector&lt;unsigned<sp/>char&gt;<sp/>&gt;::iterator&gt;(fOverlapTypes,objIdx);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_overlapTypes().erase(fOverlapTypes);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_calpx().clear();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_calpy().clear();</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_calpz().clear();</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_cale().clear();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_calsumpt().clear();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_calkey().clear();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_trkpx().clear();</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_trkpy().clear();</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_trkpz().clear();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_trke().clear();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_trksumpt().clear();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_trkkey().clear();</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::resetContrib(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*objIdx*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;resetContrib();</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::resetContrib()<sp/></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>0;<sp/>idx<sp/>&lt;<sp/>this-&gt;size();<sp/>idx++)<sp/>this-&gt;f_overlapIndices()[idx].clear();</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>0;<sp/>idx<sp/>&lt;<sp/>this-&gt;size();<sp/>idx++)<sp/>this-&gt;f_overlapTypes()[idx].clear();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_calpx().clear();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_calpy().clear();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_calpz().clear();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_cale().clear();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_calsumpt().clear();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_calkey().clear();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_trkpx().clear();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_trkpy().clear();</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_trkpz().clear();</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_trke().clear();</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_trksumpt().clear();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_trkkey().clear();</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::findIndex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IParticle*<sp/>pPart)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="259"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;Misc<sp/>assoc?<sp/>%d\n&quot;,<sp/>this-&gt;isMisc());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;Particle<sp/>%p<sp/>(pt<sp/>%f),<sp/>lastobjptr<sp/>%p\n&quot;,(void*)pPart,<sp/>pPart-&gt;pt(),<sp/>(void*)m_lastObjectPointer);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_lastObjectPointer<sp/>!=<sp/>pPart<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>objlink_vector_t::const_iterator<sp/>fLnk(this-&gt;objectLinks().begin());</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>This<sp/>is<sp/>based<sp/>on<sp/>dereferencing<sp/>the<sp/>ElementLink,<sp/>which<sp/>is<sp/>risky.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>fLnk<sp/>!=<sp/>this-&gt;objectLinks().end()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((*fLnk).isValid())<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;Compare<sp/>with<sp/>particle<sp/>%p<sp/>(type<sp/>%d,<sp/>pt<sp/>%f)\n&quot;,<sp/>(void*)<sp/>**fLnk,(**fLnk)-&gt;type(),(**fLnk)-&gt;pt()<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*(*fLnk)<sp/>==<sp/>pPart)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>++fLnk;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>fLnk<sp/>!=<sp/>this-&gt;objectLinks().end()<sp/>)<sp/></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>m_lastObjectPointer<sp/>=<sp/>pPart;<sp/>m_lastObjectIndex<sp/>=<sp/>std::distance(this-&gt;objectLinks().begin(),fLnk);<sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>m_lastObjectPointer<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IParticle*)0;<sp/>m_lastObjectIndex<sp/>=<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>();<sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_lastObjectIndex;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::findCalIndex(<ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member" tooltip="Type for status word bit mask.">MissingETBase::Types::bitmask_t</ref><sp/>mask)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="281"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ind<sp/>=<sp/>0;<sp/>ind<sp/>&lt;<sp/>this-&gt;sizeCal();<sp/>ind++)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask==this-&gt;calkey()[ind])<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ind;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>();</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::findTrkIndex(<ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member" tooltip="Type for status word bit mask.">MissingETBase::Types::bitmask_t</ref><sp/>mask)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="287"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ind<sp/>=<sp/>0;<sp/>ind<sp/>&lt;<sp/>this-&gt;sizeTrk();<sp/>ind++)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask==this-&gt;trkkey()[ind])<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ind;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>();</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Setters<sp/>//</highlight></codeline>
<codeline lineno="295"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::setCalPx(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>calpxvec)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>{<sp/>this-&gt;f_calpx().clear();<sp/>this-&gt;f_calpx().insert(this-&gt;f_calpx().end(),calpxvec.begin(),calpxvec.end());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!this-&gt;f_calpx().empty();<sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::setCalPy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>calpyvec)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>{<sp/>this-&gt;f_calpy().clear();<sp/>this-&gt;f_calpy().insert(this-&gt;f_calpy().end(),calpyvec.begin(),calpyvec.end());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!this-&gt;f_calpy().empty();<sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::setCalPz(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>calpzvec)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>{<sp/>this-&gt;f_calpz().clear();<sp/>this-&gt;f_calpz().insert(this-&gt;f_calpz().end(),calpzvec.begin(),calpzvec.end());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!this-&gt;f_calpz().empty();<sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::setCalE(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>calevec)</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>{<sp/>this-&gt;f_cale().clear();<sp/>this-&gt;f_cale().insert(this-&gt;f_cale().end(),calevec.begin(),calevec.end());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!this-&gt;f_cale().empty();<sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::setCalSumpt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>calsumptvec)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>{<sp/>this-&gt;f_calsumpt().clear();<sp/>this-&gt;f_calsumpt().insert(this-&gt;f_calsumpt().end(),calsumptvec.begin(),calsumptvec.end());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!this-&gt;f_calsumpt().empty();<sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::setCalKey(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;MissingETBase::Types::bitmask_t&gt;&amp;<sp/>calkeyvec)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>{<sp/>this-&gt;f_calkey().clear();<sp/>this-&gt;f_calkey().insert(this-&gt;f_calkey().end(),calkeyvec.begin(),calkeyvec.end());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!this-&gt;f_calkey().empty();<sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::setTrkPx(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>trkpxvec)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>{<sp/>this-&gt;f_trkpx().clear();<sp/>this-&gt;f_trkpx().insert(this-&gt;f_trkpx().end(),trkpxvec.begin(),trkpxvec.end());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!this-&gt;f_trkpx().empty();<sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::setTrkPy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>trkpyvec)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>{<sp/>this-&gt;f_trkpy().clear();<sp/>this-&gt;f_trkpy().insert(this-&gt;f_trkpy().end(),trkpyvec.begin(),trkpyvec.end());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!this-&gt;f_trkpy().empty();<sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::setTrkPz(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>trkpzvec)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>{<sp/>this-&gt;f_trkpz().clear();<sp/>this-&gt;f_trkpz().insert(this-&gt;f_trkpz().end(),trkpzvec.begin(),trkpzvec.end());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!this-&gt;f_trkpz().empty();<sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::setTrkE(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>trkevec)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>{<sp/>this-&gt;f_trke().clear();<sp/>this-&gt;f_trke().insert(this-&gt;f_trke().end(),trkevec.begin(),trkevec.end());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!this-&gt;f_trke().empty();<sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::setTrkSumpt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>trksumptvec)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>{<sp/>this-&gt;f_trksumpt().clear();<sp/>this-&gt;f_trksumpt().insert(this-&gt;f_trksumpt().end(),trksumptvec.begin(),trksumptvec.end());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!this-&gt;f_trksumpt().empty();<sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::setTrkKey(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;MissingETBase::Types::bitmask_t&gt;&amp;<sp/>trkkeyvec)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>{<sp/>this-&gt;f_trkkey().clear();<sp/>this-&gt;f_trkkey().insert(this-&gt;f_trkkey().end(),trkkeyvec.begin(),trkkeyvec.end());<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!this-&gt;f_trkkey().empty();<sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>failsafe<sp/>implementation<sp/>checks<sp/>on<sp/>invalidKey<sp/>and<sp/>vector<sp/>index<sp/>-<sp/>vector<sp/>index<sp/>may<sp/>be<sp/>sufficient?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::setCalPx(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keyIdx,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>calpx)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>keyIdx<sp/>!=<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/>&amp;&amp;<sp/>keyIdx<sp/>&lt;<sp/>this-&gt;f_calpx().size()<sp/>)<sp/>{<sp/>this-&gt;f_calpx()[keyIdx]<sp/>=<sp/>calpx;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::setCalPy(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keyIdx,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>calpy)</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>keyIdx<sp/>!=<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/>&amp;&amp;<sp/>keyIdx<sp/>&lt;<sp/>this-&gt;f_calpy().size()<sp/>)<sp/>{<sp/>this-&gt;f_calpy()[keyIdx]<sp/>=<sp/>calpy;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::setCalPz(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keyIdx,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>calpz)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>keyIdx<sp/>!=<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/>&amp;&amp;<sp/>keyIdx<sp/>&lt;<sp/>this-&gt;f_calpz().size()<sp/>)<sp/>{<sp/>this-&gt;f_calpz()[keyIdx]<sp/>=<sp/>calpz;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::setCalE(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keyIdx,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cale)</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>keyIdx<sp/>!=<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/>&amp;&amp;<sp/>keyIdx<sp/>&lt;<sp/>this-&gt;f_cale().size()<sp/>)<sp/>{<sp/>this-&gt;f_cale()[keyIdx]<sp/>=<sp/>cale;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::setCalSumpt(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keyIdx,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>calsumpt)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>keyIdx<sp/>!=<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/>&amp;&amp;<sp/>keyIdx<sp/>&lt;<sp/>this-&gt;f_calsumpt().size()<sp/>)<sp/>{<sp/>this-&gt;f_calsumpt()[keyIdx]<sp/>=<sp/>calsumpt;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::setCalKey(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keyIdx,<ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member" tooltip="Type for status word bit mask.">MissingETBase::Types::bitmask_t</ref><sp/>calkey)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>keyIdx<sp/>!=<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/>&amp;&amp;<sp/>keyIdx<sp/>&lt;<sp/>this-&gt;f_calkey().size()<sp/>)<sp/>{<sp/>this-&gt;f_calkey()[keyIdx]<sp/>=<sp/>calkey;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::setCalVec(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keyIdx,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>calpx,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>calpy,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>calpz,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cale,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sumpt)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>keyIdx<sp/>!=<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/>&amp;&amp;<sp/>keyIdx<sp/>&lt;<sp/>this-&gt;f_cale().size()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;f_calpx()[keyIdx]<sp/>=<sp/>calpx;<sp/><sp/>this-&gt;f_calpy()[keyIdx]<sp/>=<sp/>calpy;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;f_calpz()[keyIdx]<sp/>=<sp/>calpz;<sp/><sp/>this-&gt;f_cale()[keyIdx]<sp/>=<sp/>cale;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;f_calsumpt()[keyIdx]<sp/>=<sp/>sumpt;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::addCalVec(<ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member" tooltip="Type for status word bit mask.">MissingETBase::Types::bitmask_t</ref><sp/>key,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>calpx,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>calpy,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>calpz,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cale,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sumpt)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member" tooltip="Type for status word bit mask.">MissingETBase::Types::bitmask_t</ref><sp/>testkey<sp/>:<sp/>this-&gt;f_calkey())<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>quit<sp/>if<sp/>key<sp/>already<sp/>exists.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(key==testkey)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_calkey().push_back(key);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_calpx().push_back(calpx);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_calpy().push_back(calpy);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_calpz().push_back(calpz);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_cale().push_back(cale);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_calsumpt().push_back(sumpt);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::setTrkPx(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keyIdx,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>trkpx)</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>keyIdx<sp/>!=<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/>&amp;&amp;<sp/>keyIdx<sp/>&lt;<sp/>this-&gt;f_trkpx().size()<sp/>)<sp/>{<sp/>this-&gt;f_trkpx()[keyIdx]<sp/>=<sp/>trkpx;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::setTrkPy(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keyIdx,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>trkpy)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>keyIdx<sp/>!=<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/>&amp;&amp;<sp/>keyIdx<sp/>&lt;<sp/>this-&gt;f_trkpy().size()<sp/>)<sp/>{<sp/>this-&gt;f_trkpy()[keyIdx]<sp/>=<sp/>trkpy;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::setTrkPz(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keyIdx,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>trkpz)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>keyIdx<sp/>!=<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/>&amp;&amp;<sp/>keyIdx<sp/>&lt;<sp/>this-&gt;f_trkpz().size()<sp/>)<sp/>{<sp/>this-&gt;f_trkpz()[keyIdx]<sp/>=<sp/>trkpz;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::setTrkE(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keyIdx,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>trke)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>keyIdx<sp/>!=<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/>&amp;&amp;<sp/>keyIdx<sp/>&lt;<sp/>this-&gt;f_trke().size()<sp/>)<sp/>{<sp/>this-&gt;f_trke()[keyIdx]<sp/>=<sp/>trke;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::setTrkSumpt(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keyIdx,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>trksumpt)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>keyIdx<sp/>!=<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/>&amp;&amp;<sp/>keyIdx<sp/>&lt;<sp/>this-&gt;f_trksumpt().size()<sp/>)<sp/>{<sp/>this-&gt;f_trksumpt()[keyIdx]<sp/>=<sp/>trksumpt;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::setTrkKey(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keyIdx,<ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member" tooltip="Type for status word bit mask.">MissingETBase::Types::bitmask_t</ref><sp/>trkkey)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>keyIdx<sp/>!=<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/>&amp;&amp;<sp/>keyIdx<sp/>&lt;<sp/>this-&gt;f_trkkey().size()<sp/>)<sp/>{<sp/>this-&gt;f_trkkey()[keyIdx]<sp/>=<sp/>trkkey;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::setTrkVec(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keyIdx,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>trkpx,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>trkpy,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>trkpz,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>trke,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sumpt)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>keyIdx<sp/>!=<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/>&amp;&amp;<sp/>keyIdx<sp/>&lt;<sp/>this-&gt;f_trke().size()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;f_trkpx()[keyIdx]<sp/>=<sp/>trkpx;<sp/><sp/>this-&gt;f_trkpy()[keyIdx]<sp/>=<sp/>trkpy;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;f_trkpz()[keyIdx]<sp/>=<sp/>trkpz;<sp/><sp/>this-&gt;f_trke()[keyIdx]<sp/>=<sp/>trke;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;f_trksumpt()[keyIdx]<sp/>=<sp/>sumpt;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::addTrkVec(<ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member" tooltip="Type for status word bit mask.">MissingETBase::Types::bitmask_t</ref><sp/>key,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>trkpx,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>trkpy,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>trkpz,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>trke,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sumpt)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member" tooltip="Type for status word bit mask.">MissingETBase::Types::bitmask_t</ref><sp/>testkey<sp/>:<sp/>this-&gt;f_trkkey())<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>quit<sp/>if<sp/>key<sp/>already<sp/>exists.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(key==testkey)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_trkkey().push_back(key);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_trkpx().push_back(trkpx);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_trkpy().push_back(trkpy);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_trkpz().push_back(trkpz);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_trke().push_back(trke);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_trksumpt().push_back(sumpt);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::setJetTrkPx(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>px)</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>{<sp/>this-&gt;f_jettrkpx()<sp/>=<sp/>px;<sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::setJetTrkPy(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>py)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>{<sp/>this-&gt;f_jettrkpy()<sp/>=<sp/>py;<sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::setJetTrkPz(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pz)</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>{<sp/>this-&gt;f_jettrkpz()<sp/>=<sp/>pz;<sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::setJetTrkE(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e)</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>{<sp/>this-&gt;f_jettrke()<sp/>=<sp/>e;<sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::setJetTrkSumpt(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sumpt)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>{<sp/>this-&gt;f_jettrksumpt()<sp/>=<sp/>sumpt;<sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::setJetTrkVec(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>px,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>py,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pz,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sumpt)</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_jettrkpx()<sp/>=<sp/>px;<sp/><sp/>this-&gt;f_jettrkpy()<sp/>=<sp/>py;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_jettrkpz()<sp/>=<sp/>pz;<sp/><sp/>this-&gt;f_jettrke()<sp/>=<sp/>e;<sp/></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_jettrksumpt()<sp/>=<sp/>sumpt;<sp/></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::clearOverlaps()</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_overlapIndices().clear();</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_overlapIndices().resize(this-&gt;f_overlapIndices().size(),vector&lt;size_t&gt;(0));</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_overlapTypes().clear();</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_overlapTypes().resize(this-&gt;f_overlapTypes().size(),vector&lt;unsigned<sp/>char&gt;(0));</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::setOverlaps(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::vector&lt;size_t&gt;<sp/>&gt;&amp;<sp/>overlapIndexVector,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::vector&lt;unsigned<sp/>char&gt;<sp/>&gt;&amp;<sp/>overlapTypeVector)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_overlapIndices().clear();<sp/>this-&gt;f_overlapIndices().insert(this-&gt;f_overlapIndices().end(),overlapIndexVector.begin(),overlapIndexVector.end());</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_overlapTypes().clear();<sp/>this-&gt;f_overlapTypes().insert(this-&gt;f_overlapTypes().end(),overlapTypeVector.begin(),overlapTypeVector.end());</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!this-&gt;f_overlapIndices().empty();</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::setOverlaps(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>objIdx,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;size_t&gt;&amp;<sp/>overlapIndices,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;unsigned<sp/>char&gt;&amp;<sp/>overlapTypes)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>objIdx<sp/>!=<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/>&amp;&amp;<sp/>objIdx<sp/>&lt;<sp/>this-&gt;f_overlapIndices().size()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;f_overlapIndices()[objIdx]<sp/>=<sp/>overlapIndices;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;f_overlapTypes()[objIdx]<sp/>=<sp/>overlapTypes;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::setRefJet(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Jet*<sp/>pJet)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wasSet(this-&gt;f_jetLink().getStorableObjectPointer()<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>f_setObject&lt;Jet,MissingETBase::Types::jetlink_t&gt;(pJet,this-&gt;f_jetLink());</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wasSet;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::setRefJet(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>JetContainer*<sp/>pJetCont,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pJetIdx)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wasSet(this-&gt;f_jetLink().getStorableObjectPointer()<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_jetLink().toIndexedElement(*pJetCont,pJetIdx);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wasSet;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::setJetLink(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">MissingETBase::Types::jetlink_t</ref>&amp;<sp/>jetLnk)</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wasSet(this-&gt;f_jetLink().getStorableObjectPointer()<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;f_jetLink()<sp/>=<sp/>jetLnk;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wasSet;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::setObjectLinks(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1ae0144b06bac25812c0e486c6114592e7" kindref="member" tooltip="Vector of object links type.">MissingETBase::Types::objlink_vector_t</ref>&amp;<sp/>objLnks)</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wasSet(!this-&gt;f_objectLinks().empty());<sp/></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>wasSet<sp/>)<sp/>{<sp/><sp/>this-&gt;f_objectLinks().clear();<sp/>this-&gt;f_objectLinks().insert(this-&gt;f_objectLinks().end(),objLnks.begin(),objLnks.end());<sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wasSet;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Getters<sp/>//</highlight></codeline>
<codeline lineno="465"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::calpx(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keyIdx)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="467"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keyIdx<sp/>!=<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/>&amp;&amp;<sp/>keyIdx<sp/>&lt;<sp/>this-&gt;sizeCal()<sp/>?<sp/>this-&gt;calpx()[keyIdx]<sp/>:<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1a769b5eaddc1f6231d2983cd119af2725" kindref="member" tooltip="Access error return value for constituent vector .">MissingETBase::Numerical::cpxError</ref>();<sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::calpy(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keyIdx)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="469"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keyIdx<sp/>!=<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/>&amp;&amp;<sp/>keyIdx<sp/>&lt;<sp/>this-&gt;sizeCal()<sp/>?<sp/>this-&gt;calpy()[keyIdx]<sp/>:<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1a1e81e8478f67b89562cc92f59e75d96a" kindref="member" tooltip="Access error return value for constituent vector .">MissingETBase::Numerical::cpyError</ref>();<sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::calpz(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keyIdx)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="471"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keyIdx<sp/>!=<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/>&amp;&amp;<sp/>keyIdx<sp/>&lt;<sp/>this-&gt;sizeCal()<sp/>?<sp/>this-&gt;calpz()[keyIdx]<sp/>:<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ae1ae2fc1a8d160267cf90a76d896cbb1" kindref="member" tooltip="Access error return value for constituent vector .">MissingETBase::Numerical::cpzError</ref>();<sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::cale(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keyIdx)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="473"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keyIdx<sp/>!=<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/>&amp;&amp;<sp/>keyIdx<sp/>&lt;<sp/>this-&gt;sizeCal()<sp/>?<sp/>this-&gt;cale()[keyIdx]<sp/>:<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ac113647a9944ec156f59b320da1d08c8" kindref="member" tooltip="Access error return value for constituent vector .">MissingETBase::Numerical::ceError</ref>();<sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::calsumpt(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keyIdx)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="475"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keyIdx<sp/>!=<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/>&amp;&amp;<sp/>keyIdx<sp/>&lt;<sp/>this-&gt;sizeCal()<sp/>?<sp/>this-&gt;calsumpt()[keyIdx]<sp/>:<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ae2af66a5c7348496ef705078fcf09ddb" kindref="member" tooltip="Access error return value for constituent vector sumpt.">MissingETBase::Numerical::sumptError</ref>();<sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member" tooltip="Type for status word bit mask.">MissingETBase::Types::bitmask_t</ref><sp/>MissingETAssociation_v1::calkey(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keyIdx)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="477"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keyIdx<sp/>!=<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/>&amp;&amp;<sp/>keyIdx<sp/>&lt;<sp/>this-&gt;sizeCal()<sp/>?<sp/>this-&gt;calkey()[keyIdx]<sp/>:<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>();<sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::trkpx(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keyIdx)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="480"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keyIdx<sp/>!=<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/>&amp;&amp;<sp/>keyIdx<sp/>&lt;<sp/>this-&gt;sizeTrk()<sp/>?<sp/>this-&gt;trkpx()[keyIdx]<sp/>:<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1a769b5eaddc1f6231d2983cd119af2725" kindref="member" tooltip="Access error return value for constituent vector .">MissingETBase::Numerical::cpxError</ref>();<sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::trkpy(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keyIdx)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="482"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keyIdx<sp/>!=<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/>&amp;&amp;<sp/>keyIdx<sp/>&lt;<sp/>this-&gt;sizeTrk()<sp/>?<sp/>this-&gt;trkpy()[keyIdx]<sp/>:<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1a1e81e8478f67b89562cc92f59e75d96a" kindref="member" tooltip="Access error return value for constituent vector .">MissingETBase::Numerical::cpyError</ref>();<sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::trkpz(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keyIdx)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="484"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keyIdx<sp/>!=<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/>&amp;&amp;<sp/>keyIdx<sp/>&lt;<sp/>this-&gt;sizeTrk()<sp/>?<sp/>this-&gt;trkpz()[keyIdx]<sp/>:<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ae1ae2fc1a8d160267cf90a76d896cbb1" kindref="member" tooltip="Access error return value for constituent vector .">MissingETBase::Numerical::cpzError</ref>();<sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::trke(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keyIdx)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="486"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keyIdx<sp/>!=<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/>&amp;&amp;<sp/>keyIdx<sp/>&lt;<sp/>this-&gt;sizeTrk()<sp/>?<sp/>this-&gt;trke()[keyIdx]<sp/>:<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ac113647a9944ec156f59b320da1d08c8" kindref="member" tooltip="Access error return value for constituent vector .">MissingETBase::Numerical::ceError</ref>();<sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::trksumpt(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keyIdx)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="488"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keyIdx<sp/>!=<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/>&amp;&amp;<sp/>keyIdx<sp/>&lt;<sp/>this-&gt;sizeTrk()<sp/>?<sp/>this-&gt;trksumpt()[keyIdx]<sp/>:<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ae2af66a5c7348496ef705078fcf09ddb" kindref="member" tooltip="Access error return value for constituent vector sumpt.">MissingETBase::Numerical::sumptError</ref>();<sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member" tooltip="Type for status word bit mask.">MissingETBase::Types::bitmask_t</ref><sp/>MissingETAssociation_v1::trkkey(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keyIdx)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="490"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keyIdx<sp/>!=<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/>&amp;&amp;<sp/>keyIdx<sp/>&lt;<sp/>this-&gt;sizeTrk()<sp/>?<sp/>this-&gt;trkkey()[keyIdx]<sp/>:<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>();<sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/>std::vector&lt;size_t&gt;<sp/>MissingETAssociation_v1::overlapIndices(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>objIdx)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="493"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(objIdx<sp/>!=<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/>&amp;&amp;<sp/>objIdx<sp/>&lt;<sp/>this-&gt;size())<sp/>?<sp/>this-&gt;overlapIndices()[objIdx]<sp/>:<sp/>vector&lt;size_t&gt;(0);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/>std::vector&lt;unsigned<sp/>char&gt;<sp/>MissingETAssociation_v1::overlapTypes(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>objIdx)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="498"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(objIdx<sp/>!=<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/>&amp;&amp;<sp/>objIdx<sp/>&lt;<sp/>this-&gt;size())<sp/>?<sp/>this-&gt;overlapTypes()[objIdx]<sp/>:<sp/>vector&lt;unsigned<sp/>char&gt;(0);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>std::vector&lt;const<sp/>IParticle*&gt;<sp/>MissingETAssociation_v1::objects()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="503"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;const<sp/>IParticle*&gt;<sp/>pVec;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>objlink_vector_t::const_iterator<sp/>fLnk(this-&gt;objectLinks().begin());<sp/>fLnk<sp/>!=<sp/>this-&gt;objectLinks().end();<sp/>++fLnk)<sp/>{pVec.push_back((*fLnk).isValid()?*(*fLnk):NULL);<sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pVec;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/>std::vector&lt;const<sp/>IParticle*&gt;<sp/>MissingETAssociation_v1::objects(std::vector&lt;constvec_t&gt;&amp;<sp/>calVecs,std::vector&lt;constvec_t&gt;&amp;<sp/>trkVecs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="510"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nEnt(this-&gt;objectLinks().size());</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;const<sp/>IParticle*&gt;<sp/>pVec(nEnt,(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IParticle*)0);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>calVecs.clear();<sp/>calVecs.resize(this-&gt;sizeCal(),<ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec" kindref="compound" tooltip="Vector sum of constituents for subtractive overlap removal.">constvec_t</ref>());<sp/></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>trkVecs.clear();<sp/>trkVecs.resize(this-&gt;sizeTrk(),<ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec" kindref="compound" tooltip="Vector sum of constituents for subtractive overlap removal.">constvec_t</ref>());<sp/></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx(0);<sp/>idx<sp/>&lt;<sp/>nEnt;<sp/>++idx<sp/>)<sp/>pVec[idx]<sp/>=<sp/>*(this-&gt;objectLinks().at(idx));</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx(0);<sp/>idx<sp/>&lt;<sp/>this-&gt;sizeCal();<sp/>idx++)<sp/>calVecs[idx]<sp/>=<sp/><ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec" kindref="compound" tooltip="Vector sum of constituents for subtractive overlap removal.">constvec_t</ref>(this-&gt;calpx(idx),this-&gt;calpy(idx),this-&gt;calpz(idx),this-&gt;cale(idx),this-&gt;calsumpt(idx));</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx(0);<sp/>idx<sp/>&lt;<sp/>this-&gt;sizeTrk();<sp/>idx++)<sp/>trkVecs[idx]<sp/>=<sp/><ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec" kindref="compound" tooltip="Vector sum of constituents for subtractive overlap removal.">constvec_t</ref>(this-&gt;trkpx(idx),this-&gt;trkpy(idx),this-&gt;trkpz(idx),this-&gt;trke(idx),this-&gt;trksumpt(idx));</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pVec;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/>std::vector&lt;const<sp/>IParticle*&gt;<sp/>MissingETAssociation_v1::objects(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;*&amp;<sp/>calpxPtr,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;*&amp;<sp/>calpyPtr,</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;*&amp;<sp/>calpzPtr,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;*&amp;<sp/>calePtr,</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;*&amp;<sp/>calsumptPtr,</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;*&amp;<sp/>trkpxPtr,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;*&amp;<sp/>trkpyPtr,</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;*&amp;<sp/>trkpzPtr,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;*&amp;<sp/>trkePtr,</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;*&amp;<sp/>trksumptPtr)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="527"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>calpxPtr<sp/>=<sp/>&amp;(this-&gt;calpx());<sp/>calpyPtr<sp/>=<sp/>&amp;(this-&gt;calpy());<sp/>calpzPtr<sp/>=<sp/>&amp;(this-&gt;calpz());<sp/>calePtr<sp/>=<sp/>&amp;(this-&gt;cale());<sp/>calsumptPtr<sp/>=<sp/>&amp;(this-&gt;calsumpt());</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>trkpxPtr<sp/>=<sp/>&amp;(this-&gt;trkpx());<sp/>trkpyPtr<sp/>=<sp/>&amp;(this-&gt;trkpy());<sp/>trkpzPtr<sp/>=<sp/>&amp;(this-&gt;trkpz());<sp/>trkePtr<sp/>=<sp/>&amp;(this-&gt;trke());<sp/>trksumptPtr<sp/>=<sp/>&amp;(this-&gt;trksumpt());</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;objects();</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>constvec_t<sp/>object<sp/>generators<sp/>//</highlight></codeline>
<codeline lineno="536"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>MissingETAssociation_v1::ConstVec<sp/>MissingETAssociation_v1::calVec(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IParticle*<sp/>pPart)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="538"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec" kindref="compound" tooltip="Vector sum of constituents for subtractive overlap removal.">MissingETBase::Types::constvec_t</ref><sp/>totalvec;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iKey<sp/>=<sp/>0;<sp/>iKey<sp/>&lt;<sp/>this-&gt;sizeCal();<sp/>iKey++)<sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;calkey(iKey)<sp/>&amp;<sp/>getObjMask(this-&gt;findIndex(pPart)))</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>totalvec+=this-&gt;calVec(iKey);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>totalvec;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/>MissingETAssociation_v1::ConstVec<sp/>MissingETAssociation_v1::trkVec(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IParticle*<sp/>pPart)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="548"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec" kindref="compound" tooltip="Vector sum of constituents for subtractive overlap removal.">MissingETBase::Types::constvec_t</ref><sp/>totalvec;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iKey<sp/>=<sp/>0;<sp/>iKey<sp/>&lt;<sp/>this-&gt;sizeTrk();<sp/>iKey++)<sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;trkkey(iKey)<sp/>&amp;<sp/>getObjMask(this-&gt;findIndex(pPart)))</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>totalvec+=this-&gt;trkVec(iKey);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>totalvec;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec" kindref="compound" tooltip="Vector sum of constituents for subtractive overlap removal.">constvec_t</ref><sp/>MissingETAssociation_v1::calVec(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keyIdx)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="558"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keyIdx<sp/>!=<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/>&amp;&amp;<sp/>keyIdx<sp/>&lt;<sp/>this-&gt;sizeCal()<sp/></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/><ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec" kindref="compound" tooltip="Vector sum of constituents for subtractive overlap removal.">constvec_t</ref>(this-&gt;calpx(keyIdx),this-&gt;calpy(keyIdx),this-&gt;calpz(keyIdx),this-&gt;cale(keyIdx),this-&gt;calsumpt(keyIdx))<sp/></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>constvec_t(MissingETBase::Numerical::cpxError(),MissingETBase::Numerical::cpyError(),MissingETBase::Numerical::cpzError(),MissingETBase::Numerical::ceError(),MissingETBase::Numerical::sumptError());<sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec" kindref="compound" tooltip="Vector sum of constituents for subtractive overlap removal.">constvec_t</ref><sp/>MissingETAssociation_v1::trkVec(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keyIdx)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="563"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keyIdx<sp/>!=<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/>&amp;&amp;<sp/>keyIdx<sp/>&lt;<sp/>this-&gt;sizeTrk()<sp/></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/><ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec" kindref="compound" tooltip="Vector sum of constituents for subtractive overlap removal.">constvec_t</ref>(this-&gt;trkpx(keyIdx),this-&gt;trkpy(keyIdx),this-&gt;trkpz(keyIdx),this-&gt;trke(keyIdx),this-&gt;trksumpt(keyIdx))<sp/></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>constvec_t(MissingETBase::Numerical::cpxError(),MissingETBase::Numerical::cpyError(),MissingETBase::Numerical::cpzError(),MissingETBase::Numerical::ceError(),MissingETBase::Numerical::sumptError());<sp/>}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec" kindref="compound" tooltip="Vector sum of constituents for subtractive overlap removal.">constvec_t</ref><sp/>MissingETAssociation_v1::jetTrkVec()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="568"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec" kindref="compound" tooltip="Vector sum of constituents for subtractive overlap removal.">constvec_t</ref>(this-&gt;jettrkpx(),this-&gt;jettrkpy(),this-&gt;jettrkpz(),this-&gt;jettrke(),this-&gt;jettrksumpt());<sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Comparators<sp/>//</highlight></codeline>
<codeline lineno="573"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d1/d43/DataList_8h_1a2f4af3db6bca5dc8d962d673635f0865" kindref="member" tooltip="List equality comparison.">MissingETAssociation_v1::operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MissingETAssociation_v1&amp;<sp/>assocDescr)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="575"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>compare<sp/>only<sp/>jet<sp/>link<sp/>and<sp/>number<sp/>of<sp/>contributing<sp/>particles<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;jetLink()<sp/>==<sp/>assocDescr.jetLink()<sp/><sp/><sp/><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;size()<sp/><sp/><sp/><sp/>==<sp/>assocDescr.size();</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Overlap<sp/>functions<sp/>//</highlight></codeline>
<codeline lineno="586"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::setObjSelectionFlag(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>objIdx,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>status)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="588"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(status)<sp/>m_useObjectFlags<sp/>|=<sp/>(1&lt;&lt;objIdx);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>m_useObjectFlags<sp/>&amp;=<sp/>~(1&lt;&lt;objIdx);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::objSelected(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>objIdx)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="594"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bool(m_useObjectFlags<sp/>&amp;<sp/>(1&lt;&lt;objIdx));</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::addOverlap(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>objIdx,</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>overlapIndex,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>overlapType)</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>objIdx<sp/>!=<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/>&amp;&amp;<sp/>objIdx<sp/>&lt;<sp/>this-&gt;f_overlapIndices().size()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;f_overlapIndices()[objIdx].push_back(overlapIndex);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;f_overlapTypes()[objIdx].push_back(overlapType);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::identifyOverlaps()</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;resetContrib();</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;MissingETBase::Types::bitmask_t,MissingETBase::Types::constvec_t&gt;<sp/>trkOverlaps;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;MissingETBase::Types::bitmask_t,MissingETBase::Types::constvec_t&gt;<sp/>calOverlaps;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;ElementLink&lt;IParticleContainer&gt;,<ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member" tooltip="Type for status word bit mask.">MissingETBase::Types::bitmask_t</ref>&gt;<sp/>objects;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iObj=0;<sp/>iObj&lt;this-&gt;objectLinks().size();<sp/>++iObj)<sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;ElementLink&lt;IParticleContainer&gt;<sp/>&gt;&amp;<sp/>myConst<sp/>=<sp/>m_objConstLinks[iObj];</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iConst=0;<sp/>iConst&lt;myConst.size();<sp/>++iConst)<sp/>objects[myConst[iConst]]<sp/>|=<sp/>1<sp/>&lt;&lt;<sp/>iObj;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>objpair<sp/>:<sp/>objects)<sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IParticle*<sp/>obj<sp/>=<sp/>*objpair.first;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member" tooltip="Type for status word bit mask.">MissingETBase::Types::bitmask_t</ref><sp/>bm<sp/>=<sp/>objpair.second;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj-&gt;type()==<ref refid="dd/dc8/namespacexAOD_1_1Type_1a96c48d2d85466ace623036af49f84434ab58838237ad48f68b7dad0298ab4db1b" kindref="member" tooltip="The object is a charged track particle.">xAOD::Type::TrackParticle</ref>)<sp/>trkOverlaps[bm]<sp/>+=<sp/><ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec" kindref="compound" tooltip="Vector sum of constituents for subtractive overlap removal.">MissingETBase::Types::constvec_t</ref>(*obj);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj-&gt;type()==<ref refid="dd/dc8/namespacexAOD_1_1Type_1a96c48d2d85466ace623036af49f84434ae086ef0a80c5e9b9b7e5238fd559598f" kindref="member" tooltip="The object is a particle-flow object.">xAOD::Type::ParticleFlow</ref>)<sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d44/namespacexAOD_1a2fea210b4842ab7b95cc3abf8ac16c9f" kindref="member" tooltip="Definition of the current &amp;quot;pfo version&amp;quot;.">PFO</ref>*<sp/>pfo<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="dd/d44/namespacexAOD_1a2fea210b4842ab7b95cc3abf8ac16c9f" kindref="member" tooltip="Definition of the current &amp;quot;pfo version&amp;quot;.">PFO</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(obj);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fabs(pfo-&gt;charge())&gt;1e-9)<sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>apply<sp/>cPFO<sp/>weight<sp/>if<sp/>present,<sp/>only<sp/>for<sp/>the<sp/>inclusive<sp/>PFO<sp/>sum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_override.find(obj)!=m_override.end())<sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calOverlaps[bm]<sp/>+=<sp/>m_override[obj];</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calOverlaps[bm]<sp/>+=<sp/><ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec" kindref="compound" tooltip="Vector sum of constituents for subtractive overlap removal.">MissingETBase::Types::constvec_t</ref>(*obj);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>trkOverlaps[bm]<sp/>+=<sp/><ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec" kindref="compound" tooltip="Vector sum of constituents for subtractive overlap removal.">MissingETBase::Types::constvec_t</ref>(*obj);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_override.find(obj)!=m_override.end())<sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calOverlaps[bm]<sp/>+=<sp/>m_override[obj];</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>gets<sp/>ignored<sp/>otherwise?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(obj-&gt;type()==<ref refid="dd/dc8/namespacexAOD_1_1Type_1a96c48d2d85466ace623036af49f84434a618a09052816d7593617f8454b409602" kindref="member" tooltip="The object is a truth particle.">xAOD::Type::TruthParticle</ref>)<sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d44/namespacexAOD_1aa1e62781c670507649c49b13a7a3183b" kindref="member" tooltip="Typedef to implementation.">TruthParticle</ref>*<sp/>tp<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="dd/d44/namespacexAOD_1aa1e62781c670507649c49b13a7a3183b" kindref="member" tooltip="Typedef to implementation.">TruthParticle</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(obj);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fabs(tp-&gt;charge())&gt;0.)</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>trkOverlaps[bm]<sp/>+=<sp/><ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec" kindref="compound" tooltip="Vector sum of constituents for subtractive overlap removal.">MissingETBase::Types::constvec_t</ref>(*obj);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!tp-&gt;isMuon())</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>calOverlaps[bm]<sp/>+=<sp/><ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec" kindref="compound" tooltip="Vector sum of constituents for subtractive overlap removal.">MissingETBase::Types::constvec_t</ref>(*obj);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>calOverlaps[bm]<sp/>+=<sp/><ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec" kindref="compound" tooltip="Vector sum of constituents for subtractive overlap removal.">MissingETBase::Types::constvec_t</ref>(*obj);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>calpair<sp/>:<sp/>calOverlaps)<sp/>{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member" tooltip="Type for status word bit mask.">MissingETBase::Types::bitmask_t</ref><sp/>bm<sp/>=<sp/>calpair.first;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec" kindref="compound" tooltip="Vector sum of constituents for subtractive overlap removal.">MissingETBase::Types::constvec_t</ref><sp/>cv<sp/>=<sp/>calpair.second;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;addCalVec(bm,cv.<ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec_1a5818e9b9eb7ced53722e7b7c87ef69af" kindref="member" tooltip="Returns .">cpx</ref>(),cv.<ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec_1a9dff41cc936ef9eceb322a3d6b4e71bf" kindref="member" tooltip="Returns .">cpy</ref>(),cv.<ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec_1abf61c422a1bcdac172213438d77e8593" kindref="member" tooltip="Returns .">cpz</ref>(),cv.<ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec_1a100840928dd5eecfb308d45ee2b4db20" kindref="member" tooltip="Returns .">ce</ref>(),cv.<ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec_1a7113d6c885e9e0d1bdebb1fc234b6357" kindref="member" tooltip="Returns sum of component pt.">sumpt</ref>());</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>trkpair<sp/>:<sp/>trkOverlaps)<sp/>{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member" tooltip="Type for status word bit mask.">MissingETBase::Types::bitmask_t</ref><sp/>bm<sp/>=<sp/>trkpair.first;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec" kindref="compound" tooltip="Vector sum of constituents for subtractive overlap removal.">MissingETBase::Types::constvec_t</ref><sp/>cv<sp/>=<sp/>trkpair.second;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;addTrkVec(bm,cv.<ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec_1a5818e9b9eb7ced53722e7b7c87ef69af" kindref="member" tooltip="Returns .">cpx</ref>(),cv.<ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec_1a9dff41cc936ef9eceb322a3d6b4e71bf" kindref="member" tooltip="Returns .">cpy</ref>(),cv.<ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec_1abf61c422a1bcdac172213438d77e8593" kindref="member" tooltip="Returns .">cpz</ref>(),cv.<ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec_1a100840928dd5eecfb308d45ee2b4db20" kindref="member" tooltip="Returns .">ce</ref>(),cv.<ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec_1a7113d6c885e9e0d1bdebb1fc234b6357" kindref="member" tooltip="Returns sum of component pt.">sumpt</ref>());</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>foundOverlaps(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iObj=0;<sp/>iObj&lt;this-&gt;objectLinks().size();<sp/>++iObj)<sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>foundOverlaps<sp/>|=<sp/>identifyOverlaps(iObj);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>foundOverlaps;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::identifyOverlaps(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>objIdx)</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>objIdx<sp/>==<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>extract<sp/>constituent<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;MissingETBase::Types::objlink_t<sp/>&gt;&amp;<sp/>myConst<sp/>=<sp/>m_objConstLinks[objIdx];</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>loop<sp/>over<sp/>subsequent<sp/>objects<sp/>in<sp/>this<sp/>association</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(assume<sp/>earlier<sp/>ones<sp/>have<sp/>been<sp/>tested)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;size_t&gt;&amp;<sp/>myOverlaps<sp/>=<sp/>f_overlapIndices()[objIdx];</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iTargetObj=objIdx+1;<sp/>iTargetObj&lt;this-&gt;objectLinks().size();<sp/>++iTargetObj)<sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;MissingETBase::Types::objlink_t<sp/>&gt;&amp;<sp/>checkConst<sp/>=<sp/>m_objConstLinks[iTargetObj];</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>overlapFound(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>overlapTypes(0);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>somehow<sp/>already<sp/>recorded<sp/>an<sp/>overlap<sp/>for<sp/>this<sp/>one,<sp/>skip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(vector&lt;size_t&gt;::const_iterator<sp/>iOverlap=myOverlaps.begin();</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iOverlap!=myOverlaps.end()<sp/>&amp;&amp;<sp/>!overlapFound;<sp/>++iOverlap)<sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>overlapFound<sp/>=<sp/>(*iOverlap)<sp/>==<sp/>iTargetObj;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(overlapFound)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>otherwise,<sp/>compare<sp/>constituents<sp/>to<sp/>check<sp/>if<sp/>any<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mine<sp/>:<sp/>myConst)<sp/>{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>target<sp/>:<sp/>checkConst)<sp/>{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>overlapFound<sp/>|=<sp/>(<sp/>mine<sp/>==<sp/>target<sp/>);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mine<sp/>==<sp/>target)<sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((*mine)-&gt;type()==<ref refid="dd/dc8/namespacexAOD_1_1Type_1a96c48d2d85466ace623036af49f84434a618a09052816d7593617f8454b409602" kindref="member" tooltip="The object is a truth particle.">xAOD::Type::TruthParticle</ref>)<sp/>overlapTypes<sp/>|=<sp/>1;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((*mine)-&gt;type()==<ref refid="dd/dc8/namespacexAOD_1_1Type_1a96c48d2d85466ace623036af49f84434a8efcd873e2c0bfe30ea84f2d0cae396e" kindref="member" tooltip="An object not falling into any of the other categories.">xAOD::Type::Other</ref>)<sp/>overlapTypes<sp/>|=<sp/>1<sp/>&lt;&lt;<sp/><ref refid="dd/dc8/namespacexAOD_1_1Type_1a96c48d2d85466ace623036af49f84434a358974b262ca2f9874337a4c67726b88" kindref="member" tooltip="The object is a neutral particle.">xAOD::Type::NeutralParticle</ref>;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>overlapTypes<sp/>|=<sp/>1<sp/>&lt;&lt;<sp/>(*mine)-&gt;type();</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>record<sp/>the<sp/>overlap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(overlapFound)<sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;addOverlap(objIdx,iTargetObj,overlapTypes);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;addOverlap(iTargetObj,objIdx,overlapTypes);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>overlapIndices(objIdx).size()&gt;0;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::hasOverlaps(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>objIdx,<ref refid="de/dd2/namespaceMissingETBase_1_1UsageHandler_1adc82230b57f6a7bcfbffe1e66c06130e" kindref="member" tooltip="Policies on usage checks.">MissingETBase::UsageHandler::Policy</ref><sp/>p)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="703"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>objIdx<sp/>==<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>()<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;size_t&gt;<sp/>indices<sp/>=<sp/>this-&gt;overlapIndices(objIdx);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;unsigned<sp/>char&gt;<sp/>types<sp/>=<sp/>this-&gt;overlapTypes(objIdx);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iOL=0;<sp/>iOL&lt;indices.size();<sp/>++iOL)<sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;objSelected(indices[iOL]))<sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;Test<sp/>object<sp/>%lu<sp/>for<sp/>overlaps:<sp/>OL<sp/>type<sp/>%i\n&quot;,indices[iOL],(int)types[iOL]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(p)<sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="de/dd2/namespaceMissingETBase_1_1UsageHandler_1adc82230b57f6a7bcfbffe1e66c06130eaef409ebca63dc0fd9a37c0741b10ece6" kindref="member" tooltip="Both cluster and track based.">MissingETBase::UsageHandler::TrackCluster</ref>:<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((types[iOL]<sp/>&amp;<sp/>1&lt;&lt;<ref refid="dd/dc8/namespacexAOD_1_1Type_1a96c48d2d85466ace623036af49f84434a91e4294b187515e405e4ca9930e246a0" kindref="member" tooltip="The object is a calorimeter cluster.">xAOD::Type::CaloCluster</ref>)<sp/>||<sp/>(types[iOL]<sp/>&amp;<sp/>1&lt;&lt;<ref refid="dd/dc8/namespacexAOD_1_1Type_1a96c48d2d85466ace623036af49f84434ab58838237ad48f68b7dad0298ab4db1b" kindref="member" tooltip="The object is a charged track particle.">xAOD::Type::TrackParticle</ref>))<sp/>{</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="de/dd2/namespaceMissingETBase_1_1UsageHandler_1adc82230b57f6a7bcfbffe1e66c06130ea578ac2c907e0c34b50fbf6e7220dd9a5" kindref="member" tooltip="CaloCluster based only.">MissingETBase::UsageHandler::OnlyCluster</ref>:</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(types[iOL]<sp/>&amp;<sp/>1&lt;&lt;<ref refid="dd/dc8/namespacexAOD_1_1Type_1a96c48d2d85466ace623036af49f84434a91e4294b187515e405e4ca9930e246a0" kindref="member" tooltip="The object is a calorimeter cluster.">xAOD::Type::CaloCluster</ref>)<sp/>{</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="de/dd2/namespaceMissingETBase_1_1UsageHandler_1adc82230b57f6a7bcfbffe1e66c06130ea54f9180e3289c67d6c196acbd530b23d" kindref="member" tooltip="Track based only.">MissingETBase::UsageHandler::OnlyTrack</ref>:</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(types[iOL]<sp/>&amp;<sp/>1&lt;&lt;<ref refid="dd/dc8/namespacexAOD_1_1Type_1a96c48d2d85466ace623036af49f84434ab58838237ad48f68b7dad0298ab4db1b" kindref="member" tooltip="The object is a charged track particle.">xAOD::Type::TrackParticle</ref>)<sp/>{</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="de/dd2/namespaceMissingETBase_1_1UsageHandler_1adc82230b57f6a7bcfbffe1e66c06130eac405ada7755ccacc4243723525c284f4" kindref="member" tooltip="Particle Flow Object based.">MissingETBase::UsageHandler::ParticleFlow</ref>:</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(types[iOL]<sp/>&amp;<sp/>1&lt;&lt;<ref refid="dd/dc8/namespacexAOD_1_1Type_1a96c48d2d85466ace623036af49f84434ae086ef0a80c5e9b9b7e5238fd559598f" kindref="member" tooltip="The object is a particle-flow object.">xAOD::Type::ParticleFlow</ref>)<sp/>{</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="de/dd2/namespaceMissingETBase_1_1UsageHandler_1adc82230b57f6a7bcfbffe1e66c06130ea69a3df63c334debb0ca1f2facb0e0aea" kindref="member" tooltip="Truth particle based.">MissingETBase::UsageHandler::TruthParticle</ref>:</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(types[iOL]<sp/>&amp;<sp/>1)<sp/>{</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="de/dd2/namespaceMissingETBase_1_1UsageHandler_1adc82230b57f6a7bcfbffe1e66c06130ea4a819a0532ccc26f237e24be6cd1a90e" kindref="member" tooltip="Inclusive except tracks.">MissingETBase::UsageHandler::AllCalo</ref>:</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(types[iOL]<sp/>&amp;<sp/>~(1&lt;&lt;<ref refid="dd/dc8/namespacexAOD_1_1Type_1a96c48d2d85466ace623036af49f84434ab58838237ad48f68b7dad0298ab4db1b" kindref="member" tooltip="The object is a charged track particle.">xAOD::Type::TrackParticle</ref>))<sp/>{</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::hasAlternateConstVec()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="738"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(!this-&gt;isMisc()<sp/>&amp;&amp;<sp/>this-&gt;containsPhysics(this-&gt;refJet()));</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><ref refid="dd/d44/namespacexAOD_1afd4eec03bc44b101a3c8b2b1429f3072" kindref="member" tooltip="Base 4 Momentum type for Jet.">xAOD::JetFourMom_t</ref><sp/>MissingETAssociation_v1::getAlternateConstVec()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="743"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d44/namespacexAOD_1afd4eec03bc44b101a3c8b2b1429f3072" kindref="member" tooltip="Base 4 Momentum type for Jet.">xAOD::JetFourMom_t</ref><sp/>newvec;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec" kindref="compound" tooltip="Vector sum of constituents for subtractive overlap removal.">constvec_t</ref><sp/>newpt;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>newptIndex<sp/>=<sp/>this-&gt;findIndex(this-&gt;refJet());</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newptIndex<sp/>==<sp/><ref refid="d6/d1f/structMissingETBase_1_1Numerical_1ad909f5974cb93d17450ef4f1381212f2" kindref="member" tooltip="Access invalid index indicator.">MissingETBase::Numerical::invalidIndex</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newvec;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member" tooltip="Type for status word bit mask.">MissingETBase::Types::bitmask_t</ref><sp/>mask<sp/>=<sp/>(<ref refid="d2/d5b/namespaceMissingETBase_1_1Types_1afbe8719ef44dd43f994a3d5ea2823903" kindref="member" tooltip="Type for status word bit mask.">MissingETBase::Types::bitmask_t</ref>)1<sp/>&lt;&lt;<sp/>newptIndex;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iKey<sp/>=<sp/>0;<sp/>iKey<sp/>&lt;<sp/>this-&gt;sizeCal();<sp/>iKey++)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask<sp/>&amp;<sp/>this-&gt;calkey()[iKey])<sp/>newpt<sp/>+=<sp/>this-&gt;calVec(iKey);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>newvec.SetPxPyPzE(newpt.<ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec_1a5818e9b9eb7ced53722e7b7c87ef69af" kindref="member" tooltip="Returns .">cpx</ref>(),newpt.<ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec_1a9dff41cc936ef9eceb322a3d6b4e71bf" kindref="member" tooltip="Returns .">cpy</ref>(),newpt.<ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec_1abf61c422a1bcdac172213438d77e8593" kindref="member" tooltip="Returns .">cpz</ref>(),newpt.<ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec_1a100840928dd5eecfb308d45ee2b4db20" kindref="member" tooltip="Returns .">ce</ref>());</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newvec;<sp/></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec" kindref="compound" tooltip="Vector sum of constituents for subtractive overlap removal.">constvec_t</ref><sp/>MissingETAssociation_v1::overlapCalVec()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="756"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec" kindref="compound" tooltip="Vector sum of constituents for subtractive overlap removal.">constvec_t</ref><sp/>calvec;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;Test<sp/>%lu<sp/>keys<sp/>for<sp/>cal<sp/>overlaps.\n&quot;,this-&gt;sizeCal());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iKey<sp/>=<sp/>0;<sp/>iKey<sp/>&lt;<sp/>this-&gt;sizeCal();<sp/>iKey++)<sp/>{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selector<sp/>=<sp/>(m_useObjectFlags<sp/>&amp;<sp/>this-&gt;calkey()[iKey])<sp/>?<sp/>!this-&gt;isMisc()<sp/>:<sp/>this-&gt;isMisc();</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;Selector?<sp/>%o\n&quot;,selector);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(selector)<sp/>calvec+=this-&gt;calVec(iKey);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;Updated<sp/>selector?<sp/>%o.<sp/>Overlaps?<sp/>%o\n&quot;,selector,this-&gt;hasOverlaps(iKey,MissingETBase::UsageHandler::OnlyCluster)||this-&gt;hasOverlaps(iKey,MissingETBase::UsageHandler::ParticleFlow)||this-&gt;hasOverlaps(iKey,MissingETBase::UsageHandler::TruthParticle));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>calvec;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec" kindref="compound" tooltip="Vector sum of constituents for subtractive overlap removal.">constvec_t</ref><sp/>MissingETAssociation_v1::overlapTrkVec()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="769"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d7f/classxAOD_1_1MissingETAssociation__v1_1_1ConstVec" kindref="compound" tooltip="Vector sum of constituents for subtractive overlap removal.">constvec_t</ref><sp/>trkvec;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;Test<sp/>%lu<sp/>keys<sp/>for<sp/>trk<sp/>overlaps<sp/>for<sp/>%lu<sp/>objects.\n&quot;,this-&gt;sizeTrk(),this-&gt;objectLinks().size());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iKey<sp/>=<sp/>0;<sp/>iKey<sp/>&lt;<sp/>this-&gt;sizeTrk();<sp/>iKey++)<sp/>{</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selector<sp/>=<sp/>(m_useObjectFlags<sp/>&amp;<sp/>this-&gt;trkkey()[iKey])<sp/>?<sp/>!this-&gt;isMisc()<sp/>:<sp/>this-&gt;isMisc();</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;Selector?<sp/>%o\n&quot;,selector);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(selector)<sp/>trkvec+=ConstVec(this-&gt;trkpx()[iKey],this-&gt;trkpy()[iKey],this-&gt;trkpz()[iKey],this-&gt;trke()[iKey],this-&gt;trksumpt()[iKey]);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;Updated<sp/>selector?<sp/>%o.<sp/>Overlaps?<sp/>%o\n&quot;,selector,this-&gt;hasOverlaps(iKey,MissingETBase::UsageHandler::TrackCluster)||this-&gt;hasOverlaps(iKey,MissingETBase::UsageHandler::ParticleFlow)||this-&gt;hasOverlaps(iKey,MissingETBase::UsageHandler::TruthParticle));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>trkvec;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::containsPhysics(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IParticle*<sp/>pPhys)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="782"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>link<sp/>:<sp/>this-&gt;objectLinks())<sp/>{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(link.isValid())<sp/>{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pPhys<sp/>==<sp/>*link)<sp/>{</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::containsSignal(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IParticle*<sp/>pSig)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="794"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iObj=0;<sp/>iObj&lt;this-&gt;objectLinks().size();<sp/>++iObj)<sp/>{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>link<sp/>:<sp/>m_objConstLinks[iObj])<sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(link.isValid())<sp/>{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pSig<sp/>==<sp/>*link)<sp/>{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::checkUsage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IParticle*<sp/>pSig,<ref refid="de/dd2/namespaceMissingETBase_1_1UsageHandler_1adc82230b57f6a7bcfbffe1e66c06130e" kindref="member" tooltip="Policies on usage checks.">MissingETBase::UsageHandler::Policy</ref><sp/>p)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="808"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(MissingETAssociation_v1::testPolicy(pSig-&gt;type(),p))<sp/>{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d44/namespacexAOD_1af9180607c834ca3623ad4eb67d8bb273" kindref="member">IParticleContainer</ref>*<sp/>pCont<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="dd/d44/namespacexAOD_1af9180607c834ca3623ad4eb67d8bb273" kindref="member">IParticleContainer</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pSig-&gt;container());</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">MissingETBase::Types::objlink_t</ref><sp/>el(*pCont,pSig-&gt;index());</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iObj=0;<sp/>iObj&lt;this-&gt;objectLinks().size();<sp/>++iObj)<sp/>{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(objSelected(iObj))<sp/>{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>link<sp/>:<sp/>m_objConstLinks[iObj])<sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(el<sp/>==<sp/>link)<sp/>{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Other<sp/>function(s)<sp/>//</highlight></codeline>
<codeline lineno="829"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::createPrivateStore()</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>makePrivateStore();</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>f_jetLink()<sp/><sp/><sp/><sp/>=<sp/><ref refid="d6/d6e/classElementLink" kindref="compound" tooltip="ElementLink implementation for ROOT usage.">jetlink_t</ref>();</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>f_objectLinks().clear();</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>f_overlapIndices().clear();</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>f_overlapTypes().clear();</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>f_isMisc()<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>f_calpx().clear();</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>f_calpy().clear();</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>f_calpz().clear();</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>f_cale().clear();</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>f_calsumpt().clear();</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>f_calkey().clear();</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>f_trkpx().clear();</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>f_trkpy().clear();</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>f_trkpz().clear();</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>f_trke().clear();</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>f_trksumpt().clear();</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>f_trkkey().clear();</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>f_jettrkpx()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>f_jettrkpy()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>f_jettrkpz()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>f_jettrke()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>f_jettrksumpt()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::initCache()</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>m_objConstLinks.clear();</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>m_contribObjects.clear();</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>m_objConstLinks.reserve(50);</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>m_useObjectFlags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>m_contribObjects.reserve(10);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::resetCache()</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>m_useObjectFlags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>m_lastObjectPointer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MissingETAssociation_v1::testPolicy(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,<ref refid="de/dd2/namespaceMissingETBase_1_1UsageHandler_1adc82230b57f6a7bcfbffe1e66c06130e" kindref="member" tooltip="Policies on usage checks.">MissingETBase::UsageHandler::Policy</ref><sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(p)<sp/>{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="de/dd2/namespaceMissingETBase_1_1UsageHandler_1adc82230b57f6a7bcfbffe1e66c06130eaef409ebca63dc0fd9a37c0741b10ece6" kindref="member" tooltip="Both cluster and track based.">MissingETBase::UsageHandler::TrackCluster</ref>:<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type==<ref refid="dd/dc8/namespacexAOD_1_1Type_1a96c48d2d85466ace623036af49f84434a91e4294b187515e405e4ca9930e246a0" kindref="member" tooltip="The object is a calorimeter cluster.">xAOD::Type::CaloCluster</ref></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>||<sp/>type==<ref refid="dd/dc8/namespacexAOD_1_1Type_1a96c48d2d85466ace623036af49f84434ab58838237ad48f68b7dad0298ab4db1b" kindref="member" tooltip="The object is a charged track particle.">xAOD::Type::TrackParticle</ref>)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="de/dd2/namespaceMissingETBase_1_1UsageHandler_1adc82230b57f6a7bcfbffe1e66c06130ea578ac2c907e0c34b50fbf6e7220dd9a5" kindref="member" tooltip="CaloCluster based only.">MissingETBase::UsageHandler::OnlyCluster</ref>:</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type==<ref refid="dd/dc8/namespacexAOD_1_1Type_1a96c48d2d85466ace623036af49f84434a91e4294b187515e405e4ca9930e246a0" kindref="member" tooltip="The object is a calorimeter cluster.">xAOD::Type::CaloCluster</ref>)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="de/dd2/namespaceMissingETBase_1_1UsageHandler_1adc82230b57f6a7bcfbffe1e66c06130ea54f9180e3289c67d6c196acbd530b23d" kindref="member" tooltip="Track based only.">MissingETBase::UsageHandler::OnlyTrack</ref>:</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type==<ref refid="dd/dc8/namespacexAOD_1_1Type_1a96c48d2d85466ace623036af49f84434ab58838237ad48f68b7dad0298ab4db1b" kindref="member" tooltip="The object is a charged track particle.">xAOD::Type::TrackParticle</ref>)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="de/dd2/namespaceMissingETBase_1_1UsageHandler_1adc82230b57f6a7bcfbffe1e66c06130eac405ada7755ccacc4243723525c284f4" kindref="member" tooltip="Particle Flow Object based.">MissingETBase::UsageHandler::ParticleFlow</ref>:</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type==<ref refid="dd/dc8/namespacexAOD_1_1Type_1a96c48d2d85466ace623036af49f84434ae086ef0a80c5e9b9b7e5238fd559598f" kindref="member" tooltip="The object is a particle-flow object.">xAOD::Type::ParticleFlow</ref>)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="de/dd2/namespaceMissingETBase_1_1UsageHandler_1adc82230b57f6a7bcfbffe1e66c06130ea4a819a0532ccc26f237e24be6cd1a90e" kindref="member" tooltip="Inclusive except tracks.">MissingETBase::UsageHandler::AllCalo</ref>:</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type!=<ref refid="dd/dc8/namespacexAOD_1_1Type_1a96c48d2d85466ace623036af49f84434ab58838237ad48f68b7dad0298ab4db1b" kindref="member" tooltip="The object is a charged track particle.">xAOD::Type::TrackParticle</ref>)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/xAODMissingET/Root/MissingETAssociation_v1.cxx"/>
  </compounddef>
</doxygen>
