<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="da/d4a/TrigSteeringEvent_2TrigSteeringEvent_2StringSerializer_8h" kind="file">
    <compoundname>StringSerializer.h</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">sstream</includes>
    <includes local="no">vector</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">iterator</includes>
    <includes local="no">stdint.h</includes>
    <includedby refid="d0/de4/TrigSteeringEvent_2src_2StringSerializer_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/src/StringSerializer.cxx</includedby>
    <includedby refid="d1/dae/StringSerializer__test_8cxx" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/test/StringSerializer_test.cxx</includedby>
    <includedby refid="dd/d01/HLTExtraData_8h" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/HLTExtraData.h</includedby>
    <includedby refid="d6/dd5/TrigSteeringEventDict_8h" local="yes">/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigSteeringEventDict.h</includedby>
    <incdepgraph>
      <node id="328774">
        <label>iterator</label>
      </node>
      <node id="328775">
        <label>stdint.h</label>
      </node>
      <node id="328769">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/StringSerializer.h</label>
        <link refid="TrigSteeringEvent/TrigSteeringEvent/StringSerializer.h"/>
        <childnode refid="328770" relation="include">
        </childnode>
        <childnode refid="328771" relation="include">
        </childnode>
        <childnode refid="328772" relation="include">
        </childnode>
        <childnode refid="328773" relation="include">
        </childnode>
        <childnode refid="328774" relation="include">
        </childnode>
        <childnode refid="328775" relation="include">
        </childnode>
      </node>
      <node id="328772">
        <label>vector</label>
      </node>
      <node id="328771">
        <label>sstream</label>
      </node>
      <node id="328773">
        <label>cstdlib</label>
      </node>
      <node id="328770">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="328777">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/HLTExtraData.h</label>
        <link refid="dd/d01/HLTExtraData_8h"/>
        <childnode refid="328778" relation="include">
        </childnode>
        <childnode refid="328779" relation="include">
        </childnode>
        <childnode refid="328780" relation="include">
        </childnode>
      </node>
      <node id="328776">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/StringSerializer.h</label>
        <link refid="TrigSteeringEvent/TrigSteeringEvent/StringSerializer.h"/>
        <childnode refid="328777" relation="include">
        </childnode>
        <childnode refid="328780" relation="include">
        </childnode>
      </node>
      <node id="328780">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/TrigSteeringEventDict.h</label>
        <link refid="d6/dd5/TrigSteeringEventDict_8h_source"/>
      </node>
      <node id="328778">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/src/HLTExtraData.cxx</label>
        <link refid="db/d35/HLTExtraData_8cxx"/>
      </node>
      <node id="328779">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/src/HLTResult.cxx</label>
        <link refid="d0/d67/HLTResult_8cxx"/>
      </node>
    </invincdepgraph>
    <innerclass refid="d7/dec/classTrigSteeringEvent_1_1StringSerializer" prot="public">TrigSteeringEvent::StringSerializer</innerclass>
    <innernamespace refid="d0/d1c/namespaceTrigSteeringEvent">TrigSteeringEvent</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>TRIGSTEERINGEVENT_STRINGSERIALIZER_H</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TRIGSTEERINGEVENT_STRINGSERIALIZER_H</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iterator&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">TrigSteeringEvent<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="d7/dec/classTrigSteeringEvent_1_1StringSerializer" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d7/dec/classTrigSteeringEvent_1_1StringSerializer" kindref="compound" tooltip="Utility class (not a tool or so) to serialize strings into stream of 32bit integers...">StringSerializer</ref><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/dec/classTrigSteeringEvent_1_1StringSerializer_1a401d3809248a4ad4c8c9e53d5b6adef6" kindref="member">serialize</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>strings,<sp/>std::vector&lt;uint32_t&gt;&amp;<sp/>storage<sp/>);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/dec/classTrigSteeringEvent_1_1StringSerializer_1a401d3809248a4ad4c8c9e53d5b6adef6" kindref="member">serialize</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str,<sp/>std::vector&lt;uint32_t&gt;&amp;<sp/>storage<sp/>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>std::size_t<sp/><ref refid="d7/dec/classTrigSteeringEvent_1_1StringSerializer_1acebca33171c561c98baa5bdbdfadd6b7" kindref="member">deserialize</ref><sp/>(std::vector&lt;uint32_t&gt;::const_iterator<sp/>first,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint32_t&gt;::const_iterator<sp/>last,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;&amp;<sp/>strings);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="d7/dec/classTrigSteeringEvent_1_1StringSerializer_1ae46f23e9729f09dffc6d21c99cb6d069" refkind="member"><highlight class="normal"><sp/><sp/>std::size_t<sp/><ref refid="d7/dec/classTrigSteeringEvent_1_1StringSerializer_1ae46f23e9729f09dffc6d21c99cb6d069" kindref="member" tooltip="Same as above but with vector instead of iterators.">deserialize</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint32_t&gt;&amp;<sp/>storage,<sp/>std::vector&lt;std::string&gt;&amp;<sp/>strings<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/dec/classTrigSteeringEvent_1_1StringSerializer_1acebca33171c561c98baa5bdbdfadd6b7" kindref="member">deserialize</ref>(storage.begin(),<sp/>storage.end(),<sp/>strings);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>std::size_t<sp/><ref refid="d7/dec/classTrigSteeringEvent_1_1StringSerializer_1acebca33171c561c98baa5bdbdfadd6b7" kindref="member">deserialize</ref><sp/>(std::vector&lt;uint32_t&gt;::const_iterator<sp/>first,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint32_t&gt;::const_iterator<sp/>last,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string&amp;<sp/>str);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="d7/dec/classTrigSteeringEvent_1_1StringSerializer_1adc0f259171b66d7988cea31b0252fbfe" refkind="member"><highlight class="normal"><sp/><sp/>std::size_t<sp/><ref refid="d7/dec/classTrigSteeringEvent_1_1StringSerializer_1adc0f259171b66d7988cea31b0252fbfe" kindref="member" tooltip="Deserialize one single string.">deserialize</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint32_t&gt;&amp;<sp/>storage,<sp/>std::string&amp;<sp/>str<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/dec/classTrigSteeringEvent_1_1StringSerializer_1acebca33171c561c98baa5bdbdfadd6b7" kindref="member">deserialize</ref>(storage.begin(),<sp/>storage.end(),<sp/>str);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d7/dec/classTrigSteeringEvent_1_1StringSerializer_1aed289487b224d8e62c9eb68451161f5e" kindref="member">inquireSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint32_t&gt;&amp;<sp/>storage);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getPadding(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sizeToReserve)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t)<sp/>-<sp/>sizeToReserve%</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t))<sp/>%<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>std::ostringstream<sp/>m_ostream;<sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>std::istringstream<sp/>m_istream;<sp/><sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>s_delimiter;<sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal">};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>TrigSteeringEvent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>TRIGSTEERINGEVENT_STRINGSERIALIZER_H</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/TrigSteeringEvent/TrigSteeringEvent/StringSerializer.h"/>
  </compounddef>
</doxygen>
