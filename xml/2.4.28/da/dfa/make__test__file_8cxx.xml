<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.1">
  <compounddef id="da/dfa/make__test__file_8cxx" kind="file">
    <compoundname>make_test_file.cxx</compoundname>
    <includes local="no">TFile.h</includes>
    <includes local="no">TH1F.h</includes>
    <includes local="no">TSystem.h</includes>
    <includes local="no">TTree.h</includes>
    <includes local="no">cmath</includes>
    <includes local="no">sstream</includes>
    <incdepgraph>
      <node id="129112">
        <label>/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/test/make_test_file.cxx</label>
        <link refid="make_test_file.cxx"/>
        <childnode refid="129113" relation="include">
        </childnode>
        <childnode refid="129114" relation="include">
        </childnode>
        <childnode refid="129115" relation="include">
        </childnode>
        <childnode refid="129116" relation="include">
        </childnode>
        <childnode refid="129117" relation="include">
        </childnode>
        <childnode refid="129118" relation="include">
        </childnode>
      </node>
      <node id="129117">
        <label>cmath</label>
      </node>
      <node id="129115">
        <label>TSystem.h</label>
      </node>
      <node id="129113">
        <label>TFile.h</label>
      </node>
      <node id="129118">
        <label>sstream</label>
      </node>
      <node id="129114">
        <label>TH1F.h</label>
      </node>
      <node id="129116">
        <label>TTree.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="da/dfa/make__test__file_8cxx_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/test/make_test_file.cxx" line="9" bodyfile="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/test/make_test_file.cxx" bodystart="8" bodyend="47"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;TFile.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TH1F.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TSystem.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TTree.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main<sp/>()</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>jter<sp/>=<sp/>0;<sp/>jter<sp/>&lt;<sp/>3;<sp/>++<sp/>jter)</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>strpath;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>strpath<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;$ROOTCOREBIN/data/EventLoop/test_ntuple&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>jter<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>TString<sp/>path<sp/>=<sp/>strpath.str();</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>gSystem-&gt;ExpandPathName<sp/>(path);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>TFile<sp/>file<sp/>(path.Data(),<sp/></highlight><highlight class="stringliteral">&quot;RECREATE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>TH1<sp/>*hist_n<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F<sp/>(</highlight><highlight class="stringliteral">&quot;hist_n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;el_n&quot;</highlight><highlight class="normal">,<sp/>50,<sp/>0,<sp/>50);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jter<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TTree<sp/>*tree<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TTree<sp/>(</highlight><highlight class="stringliteral">&quot;physics&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;test<sp/>tree&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Int_t<sp/>el_n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tree-&gt;Branch<sp/>(</highlight><highlight class="stringliteral">&quot;el_n&quot;</highlight><highlight class="normal">,<sp/>&amp;el_n,<sp/></highlight><highlight class="stringliteral">&quot;el_n/I&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;float&gt;<sp/>*el_pt<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tree-&gt;Branch<sp/>(</highlight><highlight class="stringliteral">&quot;el_pt&quot;</highlight><highlight class="normal">,<sp/>&amp;el_pt);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Float_t<sp/>el_tag<sp/>[20];</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tree-&gt;Branch<sp/>(</highlight><highlight class="stringliteral">&quot;el_tag&quot;</highlight><highlight class="normal">,<sp/>&amp;el_tag,<sp/></highlight><highlight class="stringliteral">&quot;el_tag[el_n]/F&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>iter<sp/>=<sp/>0;<sp/>iter<sp/>!=<sp/>10<sp/>*<sp/>jter;<sp/>++<sp/>iter)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>el_n<sp/>=<sp/>floor<sp/>(sqrt<sp/>(iter<sp/>+<sp/>3<sp/>*<sp/>jter));</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>el_pt-&gt;clear<sp/>();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>kter<sp/>=<sp/>0,<sp/>end<sp/>=<sp/>el_n;<sp/>kter<sp/>!=<sp/>end;<sp/>++<sp/>kter)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>el_pt-&gt;push_back<sp/>((jter<sp/>+<sp/>1)<sp/>*<sp/>(iter<sp/>+<sp/>1)<sp/>*<sp/>(end<sp/>-<sp/>kter)<sp/>*<sp/>1e3);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>el_tag[kter]<sp/>=<sp/>exp<sp/>(iter<sp/>+<sp/>kter)<sp/>-<sp/>floor<sp/>(iter<sp/>+<sp/>kter);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>hist_n-&gt;Fill<sp/>(el_n);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>tree-&gt;Fill<sp/>();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>file.Write<sp/>();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>file.Close<sp/>();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/cvmfs/atlas.cern.ch/repo/sw/ASG/AnalysisBase/2.4.28/EventLoop/test/make_test_file.cxx"/>
  </compounddef>
</doxygen>
